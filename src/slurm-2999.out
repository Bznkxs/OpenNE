[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.48271; Allocated: 715264; Reserved: 4194304; time used = 3.1645772457122803s
epoch 10: train_loss: 0.35362; Allocated: 715264; Reserved: 4194304; time used = 3.1727418899536133s
epoch 15: train_loss: 0.20836; Allocated: 715264; Reserved: 4194304; time used = 3.311643362045288s
epoch 20: train_loss: 0.10939; Allocated: 715264; Reserved: 4194304; time used = 3.256023406982422s
epoch 25: train_loss: 0.06978; Allocated: 715264; Reserved: 4194304; time used = 3.103630304336548s
epoch 30: train_loss: 0.07664; Allocated: 715264; Reserved: 4194304; time used = 3.168956995010376s
epoch 35: train_loss: 0.05146; Allocated: 715264; Reserved: 4194304; time used = 3.1740660667419434s
epoch 40: train_loss: 0.68693; Allocated: 715264; Reserved: 4194304; time used = 3.212811231613159s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 29.198771715164185.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7548387096774194, 'samples': 0.7631578947368421, 'weighted': 0.7619694397283531, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3014.82it/s] 83%|████████▎ | 1659/2000 [00:00<00:00, 3844.54it/s]100%|██████████| 2000/2000 [00:00<00:00, 6156.36it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.59227; Allocated: 3787264; Reserved: 31457280; time used = 841.1668434143066s
epoch 10: train_loss: 1.41899; Allocated: 3787264; Reserved: 33554432; time used = 841.8225111961365s
epoch 15: train_loss: 1.36815; Allocated: 3787264; Reserved: 33554432; time used = 839.4916906356812s
epoch 20: train_loss: 1.35903; Allocated: 3787264; Reserved: 29360128; time used = 837.466658115387s
epoch 25: train_loss: 1.32897; Allocated: 3787264; Reserved: 31457280; time used = 838.721880197525s
epoch 30: train_loss: 1.30327; Allocated: 3787264; Reserved: 33554432; time used = 840.8980605602264s
epoch 35: train_loss: 1.27540; Allocated: 3787264; Reserved: 29360128; time used = 837.7430968284607s
epoch 40: train_loss: 1.24716; Allocated: 3787264; Reserved: 31457280; time used = 838.9989638328552s
epoch 45: train_loss: 1.22627; Allocated: 3787264; Reserved: 33554432; time used = 840.4001715183258s
epoch 50: train_loss: 1.19822; Allocated: 3787264; Reserved: 31457280; time used = 838.8247458934784s
epoch 55: train_loss: 1.20021; Allocated: 3787264; Reserved: 31457280; time used = 841.1516489982605s
epoch 60: train_loss: 1.19227; Allocated: 3787264; Reserved: 31457280; time used = 842.7177402973175s
epoch 65: train_loss: 1.19270; Allocated: 3787264; Reserved: 31457280; time used = 838.5248465538025s
epoch 70: train_loss: 1.18741; Allocated: 3787264; Reserved: 31457280; time used = 848.0788061618805s
epoch 75: train_loss: 1.18553; Allocated: 3787264; Reserved: 31457280; time used = 843.3005123138428s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13116.810715198517.
Training classifier using 80.00% nodes...
{'micro': 0.7175, 'macro': 0.7162069679979406, 'samples': 0.7175, 'weighted': 0.7156322871081364, 'accuracy': 0.7175}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2534.12it/s]100%|██████████| 1500/1500 [00:00<00:00, 4835.64it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.50037; Allocated: 426496; Reserved: 6291456; time used = 56.14220929145813s
epoch 10: train_loss: 1.41275; Allocated: 426496; Reserved: 8388608; time used = 55.925127029418945s
epoch 15: train_loss: 1.39834; Allocated: 426496; Reserved: 6291456; time used = 56.90162539482117s
epoch 20: train_loss: 1.38764; Allocated: 426496; Reserved: 6291456; time used = 55.157021045684814s
epoch 25: train_loss: 1.38681; Allocated: 426496; Reserved: 4194304; time used = 55.80421733856201s
epoch 30: train_loss: 1.38565; Allocated: 426496; Reserved: 6291456; time used = 56.285078287124634s
epoch 35: train_loss: 1.38536; Allocated: 426496; Reserved: 4194304; time used = 55.87496042251587s
epoch 40: train_loss: 1.38457; Allocated: 426496; Reserved: 6291456; time used = 55.99628281593323s
epoch 45: train_loss: 1.38338; Allocated: 426496; Reserved: 4194304; time used = 55.972795248031616s
epoch 50: train_loss: 1.38167; Allocated: 426496; Reserved: 4194304; time used = 57.11915874481201s
epoch 55: train_loss: 1.37919; Allocated: 426496; Reserved: 6291456; time used = 56.43431997299194s
epoch 60: train_loss: 1.37712; Allocated: 426496; Reserved: 6291456; time used = 57.315003633499146s
epoch 65: train_loss: 1.37454; Allocated: 426496; Reserved: 4194304; time used = 56.90644311904907s
epoch 70: train_loss: 1.37529; Allocated: 426496; Reserved: 4194304; time used = 56.466246366500854s
epoch 75: train_loss: 1.37883; Allocated: 426496; Reserved: 6291456; time used = 55.969958782196045s
epoch 80: train_loss: 1.37488; Allocated: 426496; Reserved: 4194304; time used = 58.288952589035034s
epoch 85: train_loss: 1.37297; Allocated: 426496; Reserved: 4194304; time used = 58.490214109420776s
epoch 90: train_loss: 1.37699; Allocated: 426496; Reserved: 4194304; time used = 57.567002058029175s
epoch 95: train_loss: 1.37232; Allocated: 426496; Reserved: 4194304; time used = 59.3564727306366s
epoch 100: train_loss: 1.37662; Allocated: 426496; Reserved: 6291456; time used = 59.31154727935791s
epoch 105: train_loss: 1.37501; Allocated: 426496; Reserved: 6291456; time used = 58.821547985076904s
epoch 110: train_loss: 1.37552; Allocated: 426496; Reserved: 6291456; time used = 58.59281539916992s
epoch 115: train_loss: 1.38020; Allocated: 426496; Reserved: 4194304; time used = 58.69780135154724s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1317.297678232193.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2985.74it/s]100%|██████████| 1500/1500 [00:00<00:00, 5437.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.47271; Allocated: 485888; Reserved: 6291456; time used = 39.42665076255798s
epoch 10: train_loss: 1.39124; Allocated: 485888; Reserved: 4194304; time used = 39.3306360244751s
epoch 15: train_loss: 1.38727; Allocated: 485888; Reserved: 6291456; time used = 38.137234926223755s
epoch 20: train_loss: 1.38635; Allocated: 485888; Reserved: 6291456; time used = 37.28844690322876s
epoch 25: train_loss: 1.38654; Allocated: 485888; Reserved: 4194304; time used = 38.40023159980774s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 227.5320315361023.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41135; Allocated: 1349632; Reserved: 8388608; time used = 3.6043860912323s
epoch 10: train_loss: 1.42284; Allocated: 1349632; Reserved: 8388608; time used = 3.5399725437164307s
epoch 15: train_loss: 1.39019; Allocated: 1349632; Reserved: 8388608; time used = 3.5682616233825684s
epoch 20: train_loss: 1.37475; Allocated: 1349632; Reserved: 8388608; time used = 3.5081448554992676s
epoch 25: train_loss: 1.34520; Allocated: 1349632; Reserved: 8388608; time used = 3.5591888427734375s
epoch 30: train_loss: 1.27909; Allocated: 1349632; Reserved: 8388608; time used = 3.5840516090393066s
epoch 35: train_loss: 1.21983; Allocated: 1349632; Reserved: 8388608; time used = 3.589334726333618s
epoch 40: train_loss: 1.18391; Allocated: 1349632; Reserved: 8388608; time used = 3.53100323677063s
epoch 45: train_loss: 1.13713; Allocated: 1349632; Reserved: 8388608; time used = 3.423008680343628s
epoch 50: train_loss: 1.07957; Allocated: 1349632; Reserved: 8388608; time used = 3.5482354164123535s
epoch 55: train_loss: 1.05171; Allocated: 1349632; Reserved: 8388608; time used = 3.4675984382629395s
epoch 60: train_loss: 1.01913; Allocated: 1349632; Reserved: 8388608; time used = 3.4855692386627197s
epoch 65: train_loss: 0.95527; Allocated: 1349632; Reserved: 8388608; time used = 3.4796841144561768s
epoch 70: train_loss: 1.00547; Allocated: 1349632; Reserved: 8388608; time used = 3.5008556842803955s
epoch 75: train_loss: 0.96890; Allocated: 1349632; Reserved: 8388608; time used = 3.4902398586273193s
epoch 80: train_loss: 0.94761; Allocated: 1349632; Reserved: 8388608; time used = 3.5958025455474854s
epoch 85: train_loss: 0.94530; Allocated: 1349632; Reserved: 8388608; time used = 3.55790638923645s
epoch 90: train_loss: 0.94791; Allocated: 1349632; Reserved: 8388608; time used = 3.547168016433716s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 67.23204803466797.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.49988309562777655, 'samples': 0.5507246376811594, 'weighted': 0.5114379915489998, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2470.07it/s]100%|██████████| 1000/1000 [00:00<00:00, 3655.50it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68225; Allocated: 830976; Reserved: 29360128; time used = 7.228027105331421s
epoch 10: train_loss: 0.69605; Allocated: 830976; Reserved: 29360128; time used = 7.428377151489258s
epoch 15: train_loss: 0.69367; Allocated: 830976; Reserved: 31457280; time used = 7.232832193374634s
epoch 20: train_loss: 0.69841; Allocated: 830976; Reserved: 29360128; time used = 7.346517086029053s
epoch 25: train_loss: 0.69434; Allocated: 830976; Reserved: 29360128; time used = 7.3416712284088135s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.87399864196777.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2929.29it/s]100%|██████████| 1000/1000 [00:00<00:00, 4232.14it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2959.32it/s]100%|██████████| 1000/1000 [00:00<00:00, 4266.48it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38711; Allocated: 617984; Reserved: 8388608; time used = 12.391539573669434s
epoch 10: train_loss: 1.38632; Allocated: 617984; Reserved: 6291456; time used = 12.247380256652832s
epoch 15: train_loss: 1.38639; Allocated: 617984; Reserved: 6291456; time used = 12.576961040496826s
epoch 20: train_loss: 1.38632; Allocated: 617984; Reserved: 6291456; time used = 12.712663412094116s
epoch 25: train_loss: 1.38631; Allocated: 617984; Reserved: 6291456; time used = 12.493221044540405s
epoch 30: train_loss: 1.38630; Allocated: 617984; Reserved: 6291456; time used = 12.739323377609253s
epoch 35: train_loss: 1.38630; Allocated: 617984; Reserved: 6291456; time used = 12.782355785369873s
epoch 40: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.5236976146698s
epoch 45: train_loss: 1.38630; Allocated: 617984; Reserved: 6291456; time used = 12.315072298049927s
epoch 50: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.62098503112793s
epoch 55: train_loss: 1.38630; Allocated: 617984; Reserved: 6291456; time used = 12.441616535186768s
epoch 60: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.523950815200806s
epoch 65: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 12.460243463516235s
epoch 70: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 12.35764479637146s
epoch 75: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 12.588328838348389s
epoch 80: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.618819236755371s
epoch 85: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.570927143096924s
epoch 90: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.31218433380127s
epoch 95: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.127093076705933s
epoch 100: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 12.076255321502686s
epoch 105: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 12.015276908874512s
epoch 110: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 12.01417350769043s
epoch 115: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 12.439862251281738s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 297.0682339668274.
Training classifier using 80.00% nodes...
{'micro': 0.52, 'macro': 0.497855424207553, 'samples': 0.52, 'weighted': 0.4957464169892248, 'accuracy': 0.52}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2488.92it/s]100%|██████████| 1500/1500 [00:00<00:00, 4744.30it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 60.263407707214355s
epoch 10: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.97102737426758s
epoch 15: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.88599491119385s
epoch 20: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.97419571876526s
epoch 25: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 59.36335754394531s
epoch 30: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 59.17760491371155s
epoch 35: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 59.10522174835205s
epoch 40: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.34938716888428s
epoch 45: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.64461541175842s
epoch 50: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.37943959236145s
epoch 55: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 59.1701455116272s
epoch 60: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.482786655426025s
epoch 65: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.752278327941895s
epoch 70: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 59.44573259353638s
epoch 75: train_loss: 0.69315; Allocated: 418304; Reserved: 8388608; time used = 58.50001549720764s
epoch 80: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.30149960517883s
epoch 85: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 59.091936111450195s
epoch 90: train_loss: 0.69315; Allocated: 418304; Reserved: 8388608; time used = 58.16039681434631s
epoch 95: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 59.24884748458862s
epoch 100: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 59.15722870826721s
epoch 105: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 59.188586473464966s
epoch 110: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.87583374977112s
epoch 115: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.15986466407776s
epoch 120: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.369529724121094s
epoch 125: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.93340539932251s
epoch 130: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.448407888412476s
epoch 135: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.93372392654419s
epoch 140: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.13091063499451s
epoch 145: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.83845591545105s
epoch 150: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.715659618377686s
epoch 155: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.38570976257324s
epoch 160: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.17251372337341s
epoch 165: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.141531467437744s
epoch 170: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.79461407661438s
epoch 175: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 59.53388857841492s
epoch 180: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.6861891746521s
epoch 185: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.99758505821228s
epoch 190: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.41351532936096s
epoch 195: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 58.82242012023926s
epoch 200: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.965904712677s
epoch 205: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.40097904205322s
epoch 210: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.04706263542175s
epoch 215: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.76333212852478s
epoch 220: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.929622173309326s
epoch 225: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.90352201461792s
epoch 230: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.98135685920715s
epoch 235: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.18716311454773s
epoch 240: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.68809270858765s
epoch 245: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 55.40317225456238s
epoch 250: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.71409058570862s
epoch 255: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.248724699020386s
epoch 260: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.2068133354187s
epoch 265: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.577739238739014s
epoch 270: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.133827686309814s
epoch 275: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 58.22303128242493s
epoch 280: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.2076313495636s
epoch 285: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.50910401344299s
epoch 290: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.85717272758484s
epoch 295: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.044989585876465s
epoch 300: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.84071397781372s
epoch 305: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 55.91232442855835s
epoch 310: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.004523277282715s
epoch 315: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.4108521938324s
epoch 320: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.729109048843384s
epoch 325: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.86494731903076s
epoch 330: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.3751802444458s
epoch 335: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.346588134765625s
epoch 340: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.11305284500122s
epoch 345: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.357635498046875s
epoch 350: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.16674995422363s
epoch 355: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.98652362823486s
epoch 360: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.0193874835968s
epoch 365: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.80178642272949s
epoch 370: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.452409505844116s
epoch 375: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.59845542907715s
epoch 380: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.401530504226685s
epoch 385: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.32070565223694s
epoch 390: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.84864640235901s
epoch 395: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.702741861343384s
epoch 400: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 55.79501819610596s
epoch 405: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.487082958221436s
epoch 410: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.79801821708679s
epoch 415: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.935253858566284s
epoch 420: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.6296751499176s
epoch 425: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.43960952758789s
epoch 430: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.98785448074341s
epoch 435: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.034191370010376s
epoch 440: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.48399782180786s
epoch 445: train_loss: 0.69315; Allocated: 418304; Reserved: 8388608; time used = 57.496498107910156s
epoch 450: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.08307433128357s
epoch 455: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.77945923805237s
epoch 460: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 57.1165406703949s
epoch 465: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 57.17713284492493s
epoch 470: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.42198657989502s
epoch 475: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.5703809261322s
epoch 480: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.62370586395264s
epoch 485: train_loss: 0.69315; Allocated: 418304; Reserved: 6291456; time used = 56.36958694458008s
epoch 490: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 55.96272253990173s
epoch 495: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.92339515686035s
epoch 500: train_loss: 0.69315; Allocated: 418304; Reserved: 4194304; time used = 56.196157455444336s
Finished training. Time used = 5764.115451097488.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 2.63855; Allocated: 795136; Reserved: 31457280; time used = 1.7565538883209229s
epoch 10: train_loss: 1.50010; Allocated: 795136; Reserved: 31457280; time used = 1.7749319076538086s
epoch 15: train_loss: 1.39797; Allocated: 795136; Reserved: 10485760; time used = 1.7893462181091309s
epoch 20: train_loss: 1.40778; Allocated: 795136; Reserved: 10485760; time used = 1.7453384399414062s
epoch 25: train_loss: 1.40664; Allocated: 795136; Reserved: 10485760; time used = 1.6824195384979248s
epoch 30: train_loss: 1.39915; Allocated: 795136; Reserved: 10485760; time used = 1.7456855773925781s
epoch 35: train_loss: 1.38928; Allocated: 795136; Reserved: 10485760; time used = 1.7425529956817627s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.44226908683777.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.5521885521885521, 'samples': 0.631578947368421, 'weighted': 0.5819599503810029, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64994; Allocated: 843776; Reserved: 4194304; time used = 4.213557004928589s
epoch 10: train_loss: 0.62889; Allocated: 843776; Reserved: 6291456; time used = 4.397292613983154s
epoch 15: train_loss: 0.63452; Allocated: 843776; Reserved: 6291456; time used = 4.282820224761963s
epoch 20: train_loss: 0.61536; Allocated: 843776; Reserved: 4194304; time used = 4.359097003936768s
epoch 25: train_loss: 0.63367; Allocated: 843776; Reserved: 4194304; time used = 4.249830961227417s
epoch 30: train_loss: 0.61729; Allocated: 843776; Reserved: 4194304; time used = 4.425806999206543s
epoch 35: train_loss: 0.60497; Allocated: 843776; Reserved: 4194304; time used = 4.198251485824585s
epoch 40: train_loss: 0.56608; Allocated: 843776; Reserved: 4194304; time used = 4.32557225227356s
epoch 45: train_loss: 0.55170; Allocated: 843776; Reserved: 4194304; time used = 4.300827741622925s
epoch 50: train_loss: 0.51956; Allocated: 843776; Reserved: 4194304; time used = 4.400418281555176s
epoch 55: train_loss: 0.53744; Allocated: 843776; Reserved: 4194304; time used = 4.483935594558716s
epoch 60: train_loss: 0.54792; Allocated: 843776; Reserved: 4194304; time used = 4.448272228240967s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 56.43874001502991.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.623109243697479, 'samples': 0.6231884057971014, 'weighted': 0.6235050541955912, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.45623; Allocated: 861696; Reserved: 6291456; time used = 0.993980884552002s
epoch 10: train_loss: 0.41552; Allocated: 861696; Reserved: 6291456; time used = 0.8976967334747314s
epoch 15: train_loss: 0.40115; Allocated: 861696; Reserved: 6291456; time used = 0.8721842765808105s
epoch 20: train_loss: 0.39289; Allocated: 861696; Reserved: 6291456; time used = 0.8789911270141602s
epoch 25: train_loss: 0.38906; Allocated: 861696; Reserved: 6291456; time used = 0.8826534748077393s
epoch 30: train_loss: 0.38820; Allocated: 861696; Reserved: 6291456; time used = 0.9062187671661377s
epoch 35: train_loss: 0.38187; Allocated: 861696; Reserved: 6291456; time used = 0.9062137603759766s
epoch 40: train_loss: 0.38463; Allocated: 861696; Reserved: 6291456; time used = 0.9077377319335938s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.997838497161865.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5295454545454545, 'samples': 0.5652173913043478, 'weighted': 0.5389328063241107, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 228.58717; Allocated: 17547264; Reserved: 46137344; time used = 4.39715838432312s
epoch 10: train_loss: 163.74736; Allocated: 17547264; Reserved: 46137344; time used = 4.485759258270264s
epoch 15: train_loss: 24.23588; Allocated: 17547264; Reserved: 46137344; time used = 4.439757823944092s
epoch 20: train_loss: 6.70108; Allocated: 17547264; Reserved: 46137344; time used = 4.327653884887695s
epoch 25: train_loss: 7.97980; Allocated: 17547264; Reserved: 46137344; time used = 4.285058498382568s
epoch 30: train_loss: 5.67582; Allocated: 17547264; Reserved: 46137344; time used = 4.24549412727356s
epoch 35: train_loss: 3.57287; Allocated: 17547264; Reserved: 46137344; time used = 4.55854868888855s
epoch 40: train_loss: 4.60538; Allocated: 17547264; Reserved: 46137344; time used = 4.410629510879517s
epoch 45: train_loss: 3.87820; Allocated: 17547264; Reserved: 46137344; time used = 4.530216693878174s
epoch 50: train_loss: 2.18071; Allocated: 17547264; Reserved: 46137344; time used = 4.472352027893066s
epoch 55: train_loss: 1.84301; Allocated: 17547264; Reserved: 46137344; time used = 4.453413009643555s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 53.80510354042053.
Training classifier using 20.00% nodes...
{'micro': 0.5376095985233041, 'macro': 0.45503995572711087, 'samples': 0.5376095985233041, 'weighted': 0.5035574904559889, 'accuracy': 0.5376095985233041}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.36773; Allocated: 17407488; Reserved: 41943040; time used = 0.8990604877471924s
epoch 10: train_loss: 1.36211; Allocated: 17407488; Reserved: 41943040; time used = 0.9028184413909912s
epoch 15: train_loss: 1.33450; Allocated: 17407488; Reserved: 41943040; time used = 0.8706924915313721s
epoch 20: train_loss: 1.30571; Allocated: 17407488; Reserved: 41943040; time used = 0.8508145809173584s
epoch 25: train_loss: 1.26800; Allocated: 17407488; Reserved: 41943040; time used = 0.8599090576171875s
epoch 30: train_loss: 1.24718; Allocated: 17407488; Reserved: 41943040; time used = 0.8806338310241699s
epoch 35: train_loss: 1.23804; Allocated: 17407488; Reserved: 41943040; time used = 0.845095157623291s
epoch 40: train_loss: 1.21458; Allocated: 17407488; Reserved: 41943040; time used = 0.8497073650360107s
epoch 45: train_loss: 1.20049; Allocated: 17407488; Reserved: 41943040; time used = 0.916940450668335s
epoch 50: train_loss: 1.19828; Allocated: 17407488; Reserved: 41943040; time used = 0.8992984294891357s
epoch 55: train_loss: 1.18470; Allocated: 17407488; Reserved: 41943040; time used = 1.0472028255462646s
epoch 60: train_loss: 1.18407; Allocated: 17407488; Reserved: 41943040; time used = 0.8942611217498779s
epoch 65: train_loss: 1.16514; Allocated: 17407488; Reserved: 41943040; time used = 0.8599226474761963s
epoch 70: train_loss: 1.17323; Allocated: 17407488; Reserved: 41943040; time used = 0.8289549350738525s
epoch 75: train_loss: 1.15773; Allocated: 17407488; Reserved: 41943040; time used = 0.8400437831878662s
epoch 80: train_loss: 1.16637; Allocated: 17407488; Reserved: 41943040; time used = 0.7958164215087891s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.576162099838257.
Training classifier using 20.00% nodes...
{'micro': 0.29487771112136596, 'macro': 0.06506465736686692, 'samples': 0.29487771112136596, 'weighted': 0.13430282067466348, 'accuracy': 0.29487771112136596}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.052865505218506s
epoch 10: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.041165351867676s
epoch 15: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 2.9794254302978516s
epoch 20: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0229575634002686s
epoch 25: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0339221954345703s
epoch 30: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.073197841644287s
epoch 35: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0488224029541016s
epoch 40: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 2.992248058319092s
epoch 45: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0756797790527344s
epoch 50: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0512709617614746s
epoch 55: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0835862159729004s
epoch 60: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.062593936920166s
epoch 65: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.014500856399536s
epoch 70: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0183815956115723s
epoch 75: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.02292799949646s
epoch 80: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.092726945877075s
epoch 85: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.062857151031494s
epoch 90: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0389623641967773s
epoch 95: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0459160804748535s
epoch 100: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0224132537841797s
epoch 105: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.053025245666504s
epoch 110: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0726535320281982s
epoch 115: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.06312894821167s
epoch 120: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0191562175750732s
epoch 125: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0462570190429688s
epoch 130: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.061591148376465s
epoch 135: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0869290828704834s
epoch 140: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.06669020652771s
epoch 145: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0600874423980713s
epoch 150: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0349788665771484s
epoch 155: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.07558536529541s
epoch 160: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0663533210754395s
epoch 165: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0297200679779053s
epoch 170: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0512237548828125s
epoch 175: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0649282932281494s
epoch 180: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.080125570297241s
epoch 185: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0455949306488037s
epoch 190: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0880868434906006s
epoch 195: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0424065589904785s
epoch 200: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.053358793258667s
epoch 205: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.04468035697937s
epoch 210: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.057182550430298s
epoch 215: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.058133602142334s
epoch 220: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.085336923599243s
epoch 225: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.078413724899292s
epoch 230: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0671989917755127s
epoch 235: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0666255950927734s
epoch 240: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0359930992126465s
epoch 245: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.078447103500366s
epoch 250: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0695877075195312s
epoch 255: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0922131538391113s
epoch 260: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0412909984588623s
epoch 265: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0397348403930664s
epoch 270: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.076673746109009s
epoch 275: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.074028968811035s
epoch 280: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.114586114883423s
epoch 285: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 2.995224714279175s
epoch 290: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.047410249710083s
epoch 295: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.047626495361328s
epoch 300: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0416958332061768s
epoch 305: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0217702388763428s
epoch 310: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0137596130371094s
epoch 315: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0748355388641357s
epoch 320: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0844576358795166s
epoch 325: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.036698818206787s
epoch 330: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.056702136993408s
epoch 335: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.04605770111084s
epoch 340: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0189521312713623s
epoch 345: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.048917770385742s
epoch 350: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.067486047744751s
epoch 355: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0857481956481934s
epoch 360: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0915534496307373s
epoch 365: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0124502182006836s
epoch 370: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.047711133956909s
epoch 375: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0616722106933594s
epoch 380: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0727717876434326s
epoch 385: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.068195104598999s
epoch 390: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0381431579589844s
epoch 395: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0413994789123535s
epoch 400: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0273900032043457s
epoch 405: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0537497997283936s
epoch 410: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.047656297683716s
epoch 415: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0619921684265137s
epoch 420: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.048090696334839s
epoch 425: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0240049362182617s
epoch 430: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0582211017608643s
epoch 435: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.064096689224243s
epoch 440: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.065317392349243s
epoch 445: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.045358896255493s
epoch 450: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0707695484161377s
epoch 455: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.031315803527832s
epoch 460: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0525617599487305s
epoch 465: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0655715465545654s
epoch 470: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.030789852142334s
epoch 475: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.052579402923584s
epoch 480: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0347821712493896s
epoch 485: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.040559768676758s
epoch 490: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.02394437789917s
epoch 495: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.036163568496704s
epoch 500: train_loss: 0.69315; Allocated: 53692416; Reserved: 293601280; time used = 3.0400402545928955s
Finished training. Time used = 319.187299489975.
Training classifier using 20.00% nodes...
{'micro': 0.5360594795539032, 'macro': 0.472563826320902, 'samples': 0.5416979714500376, 'weighted': 0.5207632510407275, 'accuracy': 0.5416979714500376}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.57851; Allocated: 593920; Reserved: 2097152; time used = 0.6705465316772461s
epoch 10: train_loss: 0.68142; Allocated: 593920; Reserved: 2097152; time used = 0.6256334781646729s
epoch 15: train_loss: 0.50063; Allocated: 593920; Reserved: 2097152; time used = 0.6470532417297363s
epoch 20: train_loss: 0.38186; Allocated: 593920; Reserved: 2097152; time used = 0.6495425701141357s
epoch 25: train_loss: 0.58766; Allocated: 593920; Reserved: 2097152; time used = 0.6626248359680176s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.30118727684021.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7797101449275363, 'samples': 0.7894736842105263, 'weighted': 0.7870327993897789, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.41114; Allocated: 17475072; Reserved: 41943040; time used = 4.5201499462127686s
epoch 10: train_loss: 0.24134; Allocated: 17475072; Reserved: 41943040; time used = 4.401811361312866s
epoch 15: train_loss: 0.16260; Allocated: 17475072; Reserved: 41943040; time used = 4.499298572540283s
epoch 20: train_loss: 0.11999; Allocated: 17475072; Reserved: 41943040; time used = 4.410489797592163s
epoch 25: train_loss: 0.07680; Allocated: 17475072; Reserved: 41943040; time used = 4.359117269515991s
epoch 30: train_loss: 0.06417; Allocated: 17475072; Reserved: 41943040; time used = 4.38225245475769s
epoch 35: train_loss: 0.02245; Allocated: 17475072; Reserved: 41943040; time used = 4.491248369216919s
epoch 40: train_loss: 0.00407; Allocated: 17475072; Reserved: 41943040; time used = 4.375011920928955s
epoch 45: train_loss: 0.02337; Allocated: 17475072; Reserved: 41943040; time used = 4.350353240966797s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.883219718933105.
Training classifier using 20.00% nodes...
{'micro': 0.7628057221965852, 'macro': 0.7414214032138282, 'samples': 0.7628057221965852, 'weighted': 0.7618018516850796, 'accuracy': 0.7628057221965852}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3030.44it/s]100%|██████████| 1500/1500 [00:00<00:00, 5493.62it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.59112; Allocated: 428544; Reserved: 4194304; time used = 37.03454279899597s
epoch 10: train_loss: 1.41980; Allocated: 428544; Reserved: 4194304; time used = 36.382391691207886s
epoch 15: train_loss: 1.38677; Allocated: 428544; Reserved: 4194304; time used = 36.570711851119995s
epoch 20: train_loss: 1.39712; Allocated: 428544; Reserved: 4194304; time used = 36.00025296211243s
epoch 25: train_loss: 1.38656; Allocated: 428544; Reserved: 4194304; time used = 36.54781532287598s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 200.37291717529297.
Training classifier using 80.00% nodes...
{'micro': 0.37333333333333335, 'macro': 0.32128275472798534, 'samples': 0.37333333333333335, 'weighted': 0.32358457059360846, 'accuracy': 0.37333333333333335}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2496.57it/s] 79%|███████▊  | 1574/2000 [00:00<00:00, 3218.96it/s]100%|██████████| 2000/2000 [00:00<00:00, 5360.27it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 117.49864220619202s
epoch 10: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 113.58628916740417s
epoch 15: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 124.36010098457336s
epoch 20: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 112.17335987091064s
epoch 25: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 112.16031241416931s
epoch 30: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 110.72428441047668s
epoch 35: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 111.54210901260376s
epoch 40: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 112.94645619392395s
epoch 45: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 112.06755781173706s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1053.370332956314.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2507.97it/s]100%|██████████| 1500/1500 [00:00<00:00, 4777.87it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68371; Allocated: 772096; Reserved: 16777216; time used = 8.778376579284668s
epoch 10: train_loss: 0.70587; Allocated: 772096; Reserved: 37748736; time used = 8.534807443618774s
epoch 15: train_loss: 0.70166; Allocated: 772096; Reserved: 16777216; time used = 8.713047981262207s
epoch 20: train_loss: 0.69341; Allocated: 772096; Reserved: 16777216; time used = 8.498628854751587s
epoch 25: train_loss: 0.69169; Allocated: 772096; Reserved: 16777216; time used = 8.721831560134888s
epoch 30: train_loss: 0.69651; Allocated: 772096; Reserved: 37748736; time used = 8.671076774597168s
epoch 35: train_loss: 0.68797; Allocated: 772096; Reserved: 16777216; time used = 8.516897916793823s
epoch 40: train_loss: 0.69428; Allocated: 772096; Reserved: 16777216; time used = 8.676609992980957s
epoch 45: train_loss: 0.69205; Allocated: 772096; Reserved: 16777216; time used = 8.588231325149536s
epoch 50: train_loss: 0.68335; Allocated: 772096; Reserved: 16777216; time used = 8.551038980484009s
epoch 55: train_loss: 0.69446; Allocated: 772096; Reserved: 16777216; time used = 8.697470426559448s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 106.68247866630554.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2467.84it/s] 83%|████████▎ | 1653/2000 [00:00<00:00, 3208.35it/s]100%|██████████| 2000/2000 [00:00<00:00, 5435.42it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 968.1811447143555s
epoch 10: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 969.5715427398682s
epoch 15: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 967.8072834014893s
epoch 20: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 968.320723772049s
epoch 25: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 968.2450141906738s
epoch 30: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 970.2418134212494s
epoch 35: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 967.2995357513428s
epoch 40: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 969.79328083992s
epoch 45: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 964.6637308597565s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8910.95407629013.
Training classifier using 80.00% nodes...
{'micro': 0.7299999999999999, 'macro': 0.7295673076923078, 'samples': 0.73, 'weighted': 0.7292427884615387, 'accuracy': 0.73}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2551.55it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3306.27it/s]100%|██████████| 2000/2000 [00:00<00:00, 5541.21it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.51145; Allocated: 3785216; Reserved: 29360128; time used = 982.1878898143768s
epoch 10: train_loss: 1.42089; Allocated: 3785216; Reserved: 31457280; time used = 985.1842875480652s
epoch 15: train_loss: 1.40548; Allocated: 3785216; Reserved: 29360128; time used = 979.7578563690186s
epoch 20: train_loss: 1.39344; Allocated: 3785216; Reserved: 29360128; time used = 986.6917197704315s
epoch 25: train_loss: 1.39064; Allocated: 3785216; Reserved: 29360128; time used = 985.4905984401703s
epoch 30: train_loss: 1.38793; Allocated: 3785216; Reserved: 31457280; time used = 980.9445662498474s
epoch 35: train_loss: 1.38500; Allocated: 3785216; Reserved: 29360128; time used = 981.5217509269714s
epoch 40: train_loss: 1.38064; Allocated: 3785216; Reserved: 29360128; time used = 983.6434624195099s
epoch 45: train_loss: 1.37307; Allocated: 3785216; Reserved: 29360128; time used = 985.5513319969177s
epoch 50: train_loss: 1.36856; Allocated: 3785216; Reserved: 29360128; time used = 1069.0480365753174s
epoch 55: train_loss: 1.36845; Allocated: 3785216; Reserved: 29360128; time used = 1070.3718571662903s
epoch 60: train_loss: 1.36205; Allocated: 3785216; Reserved: 29360128; time used = 1070.454346895218s
epoch 65: train_loss: 1.36292; Allocated: 3785216; Reserved: 29360128; time used = 1069.9010939598083s
epoch 70: train_loss: 1.36102; Allocated: 3785216; Reserved: 29360128; time used = 1070.2596426010132s
epoch 75: train_loss: 1.36116; Allocated: 3785216; Reserved: 29360128; time used = 1069.6825742721558s
epoch 80: train_loss: 1.36044; Allocated: 3785216; Reserved: 29360128; time used = 1076.4585556983948s
epoch 85: train_loss: 1.36040; Allocated: 3785216; Reserved: 29360128; time used = 1025.3168742656708s
epoch 90: train_loss: 1.36017; Allocated: 3785216; Reserved: 29360128; time used = 1034.4065668582916s
epoch 95: train_loss: 1.36003; Allocated: 3785216; Reserved: 29360128; time used = 1087.6394708156586s
epoch 100: train_loss: 1.35983; Allocated: 3785216; Reserved: 29360128; time used = 1089.3115253448486s
epoch 105: train_loss: 1.36012; Allocated: 3785216; Reserved: 29360128; time used = 1086.9051785469055s
epoch 110: train_loss: 1.35996; Allocated: 3785216; Reserved: 29360128; time used = 1085.5116369724274s
epoch 115: train_loss: 1.35985; Allocated: 3785216; Reserved: 29360128; time used = 1097.9941985607147s
epoch 120: train_loss: 1.35964; Allocated: 3785216; Reserved: 29360128; time used = 1090.8610796928406s
epoch 125: train_loss: 1.35960; Allocated: 3785216; Reserved: 29360128; time used = 1089.5790185928345s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26908.694920301437.
Training classifier using 80.00% nodes...
{'micro': 0.5275, 'macro': 0.5102834008097166, 'samples': 0.5275, 'weighted': 0.5075287449392712, 'accuracy': 0.5275}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.43213; Allocated: 579072; Reserved: 4194304; time used = 3.4561755657196045s
epoch 10: train_loss: 1.28210; Allocated: 579072; Reserved: 4194304; time used = 3.4815802574157715s
epoch 15: train_loss: 1.16288; Allocated: 579072; Reserved: 4194304; time used = 3.4208266735076904s
epoch 20: train_loss: 1.25929; Allocated: 579072; Reserved: 4194304; time used = 3.4678282737731934s
epoch 25: train_loss: 1.16862; Allocated: 579072; Reserved: 4194304; time used = 3.442305326461792s
epoch 30: train_loss: 1.14348; Allocated: 579072; Reserved: 4194304; time used = 3.587981939315796s
epoch 35: train_loss: 1.11724; Allocated: 579072; Reserved: 4194304; time used = 3.3695616722106934s
epoch 40: train_loss: 1.09680; Allocated: 579072; Reserved: 4194304; time used = 3.433088779449463s
epoch 45: train_loss: 1.07853; Allocated: 579072; Reserved: 4194304; time used = 3.601733684539795s
epoch 50: train_loss: 1.05706; Allocated: 579072; Reserved: 4194304; time used = 3.419187068939209s
epoch 55: train_loss: 1.03664; Allocated: 579072; Reserved: 4194304; time used = 3.5953874588012695s
epoch 60: train_loss: 1.01494; Allocated: 579072; Reserved: 4194304; time used = 3.4439473152160645s
epoch 65: train_loss: 1.01914; Allocated: 579072; Reserved: 4194304; time used = 3.4176177978515625s
epoch 70: train_loss: 1.01115; Allocated: 579072; Reserved: 4194304; time used = 3.578183174133301s
epoch 75: train_loss: 1.01137; Allocated: 579072; Reserved: 4194304; time used = 3.378718614578247s
epoch 80: train_loss: 0.99887; Allocated: 579072; Reserved: 4194304; time used = 3.4551024436950684s
epoch 85: train_loss: 0.98667; Allocated: 579072; Reserved: 4194304; time used = 3.596494197845459s
epoch 90: train_loss: 0.99039; Allocated: 579072; Reserved: 4194304; time used = 3.4161062240600586s
epoch 95: train_loss: 0.97997; Allocated: 579072; Reserved: 4194304; time used = 3.408534049987793s
epoch 100: train_loss: 0.98507; Allocated: 579072; Reserved: 4194304; time used = 3.5600147247314453s
epoch 105: train_loss: 0.97443; Allocated: 579072; Reserved: 4194304; time used = 3.383575201034546s
epoch 110: train_loss: 0.98356; Allocated: 579072; Reserved: 4194304; time used = 3.427536964416504s
epoch 115: train_loss: 0.98010; Allocated: 579072; Reserved: 4194304; time used = 3.612232208251953s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 84.92274737358093.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 24.53050; Allocated: 53636096; Reserved: 109051904; time used = 0.9768264293670654s
epoch 10: train_loss: 10.19637; Allocated: 53636096; Reserved: 109051904; time used = 1.0324485301971436s
epoch 15: train_loss: 6.05773; Allocated: 53636096; Reserved: 109051904; time used = 1.0222618579864502s
epoch 20: train_loss: 1.83195; Allocated: 53636096; Reserved: 109051904; time used = 1.0104284286499023s
epoch 25: train_loss: 1.41404; Allocated: 53636096; Reserved: 109051904; time used = 1.0420169830322266s
epoch 30: train_loss: 1.34976; Allocated: 53636096; Reserved: 109051904; time used = 1.018892526626587s
epoch 35: train_loss: 1.44280; Allocated: 53636096; Reserved: 109051904; time used = 1.0288467407226562s
epoch 40: train_loss: 1.34543; Allocated: 53636096; Reserved: 109051904; time used = 1.0200247764587402s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.961937665939331.
Training classifier using 20.00% nodes...
{'micro': 0.2654275092936803, 'macro': 0.1351667283881044, 'samples': 0.2682193839218633, 'weighted': 0.1517632443803616, 'accuracy': 0.2682193839218633}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.42896; Allocated: 40894464; Reserved: 62914560; time used = 0.5616648197174072s
epoch 10: train_loss: 0.31966; Allocated: 40894464; Reserved: 62914560; time used = 0.5695211887359619s
epoch 15: train_loss: 0.17535; Allocated: 40894464; Reserved: 62914560; time used = 0.566580057144165s
epoch 20: train_loss: 0.14741; Allocated: 40894464; Reserved: 62914560; time used = 0.8001871109008789s
epoch 25: train_loss: 0.08479; Allocated: 40894464; Reserved: 62914560; time used = 0.5711557865142822s
epoch 30: train_loss: 0.07931; Allocated: 40894464; Reserved: 62914560; time used = 0.5592353343963623s
epoch 35: train_loss: 0.05182; Allocated: 40894464; Reserved: 62914560; time used = 0.5782504081726074s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.572988510131836.
Training classifier using 20.00% nodes...
{'micro': 0.5642196018765057, 'macro': 0.47939914253311217, 'samples': 0.5642196018765057, 'weighted': 0.5263612028828075, 'accuracy': 0.5642196018765057}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.36811; Allocated: 637440; Reserved: 4194304; time used = 0.6582331657409668s
epoch 10: train_loss: 1.30569; Allocated: 637440; Reserved: 4194304; time used = 0.641411304473877s
epoch 15: train_loss: 1.31404; Allocated: 637440; Reserved: 4194304; time used = 0.636763334274292s
epoch 20: train_loss: 1.31131; Allocated: 637440; Reserved: 4194304; time used = 0.6309366226196289s
epoch 25: train_loss: 1.30069; Allocated: 637440; Reserved: 4194304; time used = 0.6278772354125977s
epoch 30: train_loss: 1.30248; Allocated: 637440; Reserved: 4194304; time used = 0.636204719543457s
epoch 35: train_loss: 1.29519; Allocated: 637440; Reserved: 4194304; time used = 0.6355025768280029s
epoch 40: train_loss: 1.30083; Allocated: 637440; Reserved: 4194304; time used = 0.8196556568145752s
epoch 45: train_loss: 1.30006; Allocated: 637440; Reserved: 4194304; time used = 0.6487133502960205s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.061599731445312.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38640; Allocated: 19282432; Reserved: 52428800; time used = 5.130831480026245s
epoch 10: train_loss: 1.38913; Allocated: 19282432; Reserved: 52428800; time used = 5.113414287567139s
epoch 15: train_loss: 1.38754; Allocated: 19282432; Reserved: 52428800; time used = 5.28986930847168s
epoch 20: train_loss: 1.38614; Allocated: 19282432; Reserved: 52428800; time used = 5.057376146316528s
epoch 25: train_loss: 1.38426; Allocated: 19282432; Reserved: 52428800; time used = 5.23809027671814s
epoch 30: train_loss: 1.36599; Allocated: 19282432; Reserved: 52428800; time used = 5.162511825561523s
epoch 35: train_loss: 1.28666; Allocated: 19282432; Reserved: 52428800; time used = 5.229910373687744s
epoch 40: train_loss: 1.31223; Allocated: 19282432; Reserved: 52428800; time used = 5.081525087356567s
epoch 45: train_loss: 1.18920; Allocated: 19282432; Reserved: 52428800; time used = 5.07188081741333s
epoch 50: train_loss: 1.10446; Allocated: 19282432; Reserved: 52428800; time used = 5.094549894332886s
epoch 55: train_loss: 1.18362; Allocated: 19282432; Reserved: 52428800; time used = 5.205718755722046s
epoch 60: train_loss: 1.10572; Allocated: 19282432; Reserved: 52428800; time used = 5.040387392044067s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 68.84486722946167.
Training classifier using 20.00% nodes...
{'micro': 0.4125519150899862, 'macro': 0.2423322414302787, 'samples': 0.4125519150899862, 'weighted': 0.3173021714312576, 'accuracy': 0.4125519150899862}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.42348; Allocated: 53481472; Reserved: 109051904; time used = 5.4557411670684814s
epoch 10: train_loss: 0.38731; Allocated: 53481472; Reserved: 109051904; time used = 5.746692180633545s
epoch 15: train_loss: 0.37314; Allocated: 53481472; Reserved: 109051904; time used = 5.483577251434326s
epoch 20: train_loss: 0.36561; Allocated: 53481472; Reserved: 109051904; time used = 5.5275719165802s
epoch 25: train_loss: 0.35764; Allocated: 53481472; Reserved: 109051904; time used = 5.669198751449585s
epoch 30: train_loss: 0.36063; Allocated: 53481472; Reserved: 109051904; time used = 5.537432432174683s
epoch 35: train_loss: 0.35133; Allocated: 53481472; Reserved: 109051904; time used = 5.710274696350098s
epoch 40: train_loss: 0.34929; Allocated: 53481472; Reserved: 109051904; time used = 5.482743978500366s
epoch 45: train_loss: 0.35003; Allocated: 53481472; Reserved: 109051904; time used = 5.554643392562866s
epoch 50: train_loss: 0.34809; Allocated: 53481472; Reserved: 109051904; time used = 5.568966627120972s
epoch 55: train_loss: 0.34217; Allocated: 53481472; Reserved: 109051904; time used = 5.618743419647217s
epoch 60: train_loss: 0.34567; Allocated: 53481472; Reserved: 109051904; time used = 5.481328248977661s
epoch 65: train_loss: 0.34816; Allocated: 53481472; Reserved: 109051904; time used = 5.704978704452515s
epoch 70: train_loss: 0.35058; Allocated: 53481472; Reserved: 109051904; time used = 5.509583473205566s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 82.19874548912048.
Training classifier using 20.00% nodes...
{'micro': 0.6736059479553904, 'macro': 0.5846778390032611, 'samples': 0.6806912096168295, 'weighted': 0.6484637822070926, 'accuracy': 0.6806912096168295}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38267; Allocated: 41418752; Reserved: 65011712; time used = 2.942030906677246s
epoch 10: train_loss: 1.29317; Allocated: 41418752; Reserved: 65011712; time used = 3.111541748046875s
epoch 15: train_loss: 1.09061; Allocated: 41418752; Reserved: 65011712; time used = 2.9422168731689453s
epoch 20: train_loss: 1.09064; Allocated: 41418752; Reserved: 65011712; time used = 2.9806582927703857s
epoch 25: train_loss: 1.06546; Allocated: 41418752; Reserved: 65011712; time used = 2.9928486347198486s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.55521035194397.
Training classifier using 20.00% nodes...
{'micro': 0.5751236211487257, 'macro': 0.5515575379581672, 'samples': 0.5751236211487257, 'weighted': 0.5677393154224303, 'accuracy': 0.5751236211487257}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2745.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 4002.10it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 222.5196132659912s
epoch 10: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 227.6993010044098s
epoch 15: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 225.18977093696594s
epoch 20: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 226.77759456634521s
epoch 25: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 223.2782380580902s
epoch 30: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 229.1773931980133s
epoch 35: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 227.07610297203064s
epoch 40: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 216.6244204044342s
epoch 45: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 222.57427716255188s
epoch 50: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 227.50395154953003s
epoch 55: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 230.37714624404907s
epoch 60: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 228.68058919906616s
epoch 65: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 230.3868899345398s
epoch 70: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 224.57548809051514s
epoch 75: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 225.63385200500488s
epoch 80: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 228.39724779129028s
epoch 85: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 229.69417929649353s
epoch 90: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 222.14169549942017s
epoch 95: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 228.44535183906555s
epoch 100: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 228.53175830841064s
epoch 105: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 225.86267113685608s
epoch 110: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 223.61786484718323s
epoch 115: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 225.31697607040405s
epoch 120: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 222.63862895965576s
epoch 125: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 215.4081711769104s
epoch 130: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 215.82570481300354s
epoch 135: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 215.32482290267944s
epoch 140: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 228.26721000671387s
epoch 145: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 222.75057554244995s
epoch 150: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 217.69516468048096s
epoch 155: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 223.17630314826965s
epoch 160: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 225.2186677455902s
epoch 165: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 218.2413191795349s
epoch 170: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 220.995947599411s
epoch 175: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 218.25263738632202s
epoch 180: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 224.23379135131836s
epoch 185: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.39284086227417s
epoch 190: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 215.68565440177917s
epoch 195: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 215.76254892349243s
epoch 200: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 221.03948855400085s
epoch 205: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 219.73389959335327s
epoch 210: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 220.29632210731506s
epoch 215: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 219.57313990592957s
epoch 220: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 208.1819498538971s
epoch 225: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 217.93311047554016s
epoch 230: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 217.48480343818665s
epoch 235: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.45421528816223s
epoch 240: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 219.6602053642273s
epoch 245: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 219.61617946624756s
epoch 250: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 218.59990239143372s
epoch 255: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 219.85472965240479s
epoch 260: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 222.65157508850098s
epoch 265: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.678124666214s
epoch 270: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 222.04090666770935s
epoch 275: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 223.18513774871826s
epoch 280: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 223.52764678001404s
epoch 285: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 226.07897782325745s
epoch 290: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 217.59536719322205s
epoch 295: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 221.90936255455017s
epoch 300: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 219.52638816833496s
epoch 305: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.74814128875732s
epoch 310: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 224.30766415596008s
epoch 315: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 219.16930627822876s
epoch 320: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 216.52587795257568s
epoch 325: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 222.66824007034302s
epoch 330: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 220.3328139781952s
epoch 335: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 216.5905315876007s
epoch 340: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 223.39708423614502s
epoch 345: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 218.64226746559143s
epoch 350: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 215.7766149044037s
epoch 355: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 218.9660680294037s
epoch 360: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 224.2265157699585s
epoch 365: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 224.36400055885315s
epoch 370: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 220.6728892326355s
epoch 375: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 216.34647059440613s
epoch 380: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 218.37076807022095s
epoch 385: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 215.72367644309998s
epoch 390: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 219.06216430664062s
epoch 395: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 216.4516260623932s
epoch 400: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 215.85801672935486s
epoch 405: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 216.10684871673584s
epoch 410: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 220.90449357032776s
epoch 415: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 218.62483930587769s
epoch 420: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 218.39947605133057s
epoch 425: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 220.860981464386s
epoch 430: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.42604327201843s
epoch 435: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 218.43679785728455s
epoch 440: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 216.92646503448486s
epoch 445: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 220.0009388923645s
epoch 450: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 218.77284026145935s
epoch 455: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 219.44524765014648s
epoch 460: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.18118929862976s
epoch 465: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 220.88313841819763s
epoch 470: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 218.25854516029358s
epoch 475: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 221.1322112083435s
epoch 480: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 222.23291683197021s
epoch 485: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 218.334623336792s
epoch 490: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 225.74654912948608s
epoch 495: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 230.63541913032532s
epoch 500: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 226.2614402770996s
Finished training. Time used = 22150.43922019005.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64498; Allocated: 909312; Reserved: 4194304; time used = 4.911622762680054s
epoch 10: train_loss: 0.63642; Allocated: 909312; Reserved: 6291456; time used = 5.125561237335205s
epoch 15: train_loss: 0.63319; Allocated: 909312; Reserved: 6291456; time used = 4.858882904052734s
epoch 20: train_loss: 0.61269; Allocated: 909312; Reserved: 4194304; time used = 5.077812433242798s
epoch 25: train_loss: 0.62397; Allocated: 909312; Reserved: 4194304; time used = 5.151102542877197s
epoch 30: train_loss: 0.61531; Allocated: 909312; Reserved: 4194304; time used = 5.205908536911011s
epoch 35: train_loss: 0.62148; Allocated: 909312; Reserved: 4194304; time used = 5.004746913909912s
epoch 40: train_loss: 0.62757; Allocated: 909312; Reserved: 4194304; time used = 5.302789211273193s
epoch 45: train_loss: 0.63122; Allocated: 909312; Reserved: 4194304; time used = 4.865712404251099s
epoch 50: train_loss: 0.62514; Allocated: 909312; Reserved: 4194304; time used = 5.020525693893433s
epoch 55: train_loss: 0.62582; Allocated: 909312; Reserved: 4194304; time used = 4.8154456615448s
epoch 60: train_loss: 0.63333; Allocated: 909312; Reserved: 4194304; time used = 4.9403932094573975s
epoch 65: train_loss: 0.62626; Allocated: 909312; Reserved: 4194304; time used = 4.784902334213257s
epoch 70: train_loss: 0.61949; Allocated: 909312; Reserved: 6291456; time used = 4.813705921173096s
epoch 75: train_loss: 0.62681; Allocated: 909312; Reserved: 4194304; time used = 4.979531288146973s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 81.72982144355774.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6221248630887184, 'samples': 0.6376811594202898, 'weighted': 0.6276806832071368, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.65732; Allocated: 1349632; Reserved: 10485760; time used = 4.372089862823486s
epoch 10: train_loss: 1.41681; Allocated: 1349632; Reserved: 10485760; time used = 4.167571306228638s
epoch 15: train_loss: 1.39755; Allocated: 1349632; Reserved: 10485760; time used = 4.246650457382202s
epoch 20: train_loss: 1.39560; Allocated: 1349632; Reserved: 10485760; time used = 4.136662721633911s
epoch 25: train_loss: 1.38338; Allocated: 1349632; Reserved: 10485760; time used = 4.193608283996582s
epoch 30: train_loss: 1.38280; Allocated: 1349632; Reserved: 10485760; time used = 4.160938739776611s
epoch 35: train_loss: 1.37855; Allocated: 1349632; Reserved: 10485760; time used = 4.233789443969727s
epoch 40: train_loss: 1.37755; Allocated: 1349632; Reserved: 10485760; time used = 4.223768711090088s
epoch 45: train_loss: 1.37341; Allocated: 1349632; Reserved: 10485760; time used = 4.224397897720337s
epoch 50: train_loss: 1.37864; Allocated: 1349632; Reserved: 10485760; time used = 4.279263973236084s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 51.630287170410156.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.51377; Allocated: 872448; Reserved: 4194304; time used = 8.071162700653076s
epoch 10: train_loss: 0.47260; Allocated: 872448; Reserved: 6291456; time used = 7.78783392906189s
epoch 15: train_loss: 0.46673; Allocated: 872448; Reserved: 4194304; time used = 7.895320415496826s
epoch 20: train_loss: 0.44899; Allocated: 872448; Reserved: 4194304; time used = 7.8037428855896s
epoch 25: train_loss: 0.43530; Allocated: 872448; Reserved: 4194304; time used = 7.505630254745483s
epoch 30: train_loss: 0.44228; Allocated: 872448; Reserved: 4194304; time used = 7.901689767837524s
epoch 35: train_loss: 0.43864; Allocated: 872448; Reserved: 4194304; time used = 8.01321291923523s
epoch 40: train_loss: 0.44634; Allocated: 872448; Reserved: 4194304; time used = 7.77742600440979s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 68.64845752716064.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6221248630887184, 'samples': 0.6376811594202898, 'weighted': 0.6276806832071368, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 21.51167; Allocated: 666112; Reserved: 2097152; time used = 3.490116596221924s
epoch 10: train_loss: 3.60790; Allocated: 666112; Reserved: 2097152; time used = 3.6164166927337646s
epoch 15: train_loss: 1.57907; Allocated: 666112; Reserved: 2097152; time used = 3.6690075397491455s
epoch 20: train_loss: 1.41737; Allocated: 666112; Reserved: 2097152; time used = 3.618022918701172s
epoch 25: train_loss: 1.39208; Allocated: 666112; Reserved: 2097152; time used = 3.652202606201172s
epoch 30: train_loss: 1.38903; Allocated: 666112; Reserved: 2097152; time used = 3.7410800457000732s
epoch 35: train_loss: 1.38666; Allocated: 666112; Reserved: 2097152; time used = 3.467165231704712s
epoch 40: train_loss: 1.38386; Allocated: 666112; Reserved: 2097152; time used = 3.511697769165039s
epoch 45: train_loss: 1.37624; Allocated: 666112; Reserved: 2097152; time used = 3.637007713317871s
epoch 50: train_loss: 1.36804; Allocated: 666112; Reserved: 2097152; time used = 3.6278433799743652s
epoch 55: train_loss: 1.36540; Allocated: 666112; Reserved: 2097152; time used = 3.566883087158203s
epoch 60: train_loss: 1.36706; Allocated: 666112; Reserved: 2097152; time used = 3.638866662979126s
epoch 65: train_loss: 1.36383; Allocated: 666112; Reserved: 2097152; time used = 3.7358105182647705s
epoch 70: train_loss: 1.36207; Allocated: 666112; Reserved: 2097152; time used = 3.6420047283172607s
epoch 75: train_loss: 1.36202; Allocated: 666112; Reserved: 2097152; time used = 3.774843215942383s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 60.835352659225464.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2672.33it/s]100%|██████████| 1500/1500 [00:00<00:00, 5025.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1592282.56250; Allocated: 557056; Reserved: 4194304; time used = 225.62653636932373s
epoch 10: train_loss: 246924.45508; Allocated: 557056; Reserved: 6291456; time used = 226.25485038757324s
epoch 15: train_loss: 42590.82886; Allocated: 557056; Reserved: 8388608; time used = 225.80231595039368s
epoch 20: train_loss: 10795.15094; Allocated: 557056; Reserved: 8388608; time used = 225.74370098114014s
epoch 25: train_loss: 5931.94843; Allocated: 557056; Reserved: 4194304; time used = 223.42330241203308s
epoch 30: train_loss: 1463.75107; Allocated: 557056; Reserved: 4194304; time used = 224.40633916854858s
epoch 35: train_loss: 1.43741; Allocated: 557056; Reserved: 4194304; time used = 196.8285620212555s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1590.5489966869354.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.43729; Allocated: 41625600; Reserved: 65011712; time used = 0.9007236957550049s
epoch 10: train_loss: 0.43038; Allocated: 41625600; Reserved: 65011712; time used = 0.8799195289611816s
epoch 15: train_loss: 0.40916; Allocated: 41625600; Reserved: 65011712; time used = 0.8941693305969238s
epoch 20: train_loss: 0.36484; Allocated: 41625600; Reserved: 65011712; time used = 1.1153712272644043s
epoch 25: train_loss: 0.34925; Allocated: 41625600; Reserved: 65011712; time used = 0.8832144737243652s
epoch 30: train_loss: 0.33850; Allocated: 41625600; Reserved: 65011712; time used = 0.8717308044433594s
epoch 35: train_loss: 0.34544; Allocated: 41625600; Reserved: 65011712; time used = 0.8875060081481934s
epoch 40: train_loss: 0.33993; Allocated: 41625600; Reserved: 65011712; time used = 0.9033660888671875s
epoch 45: train_loss: 0.33364; Allocated: 41625600; Reserved: 65011712; time used = 1.071115493774414s
epoch 50: train_loss: 0.33115; Allocated: 41625600; Reserved: 65011712; time used = 0.8692080974578857s
epoch 55: train_loss: 0.32445; Allocated: 41625600; Reserved: 65011712; time used = 0.886685848236084s
epoch 60: train_loss: 0.31891; Allocated: 41625600; Reserved: 65011712; time used = 0.8635609149932861s
epoch 65: train_loss: 0.32191; Allocated: 41625600; Reserved: 65011712; time used = 0.8722970485687256s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.522016048431396.
Training classifier using 20.00% nodes...
{'micro': 0.6993787244833269, 'macro': 0.6939912669805226, 'samples': 0.6993787244833269, 'weighted': 0.690524284641467, 'accuracy': 0.6993787244833269}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2607.80it/s]100%|██████████| 1000/1000 [00:00<00:00, 3834.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 28.24009; Allocated: 421888; Reserved: 6291456; time used = 34.52389883995056s
epoch 10: train_loss: 17.44659; Allocated: 421888; Reserved: 8388608; time used = 34.34710097312927s
epoch 15: train_loss: 5.53167; Allocated: 421888; Reserved: 6291456; time used = 34.32018828392029s
epoch 20: train_loss: 4.17448; Allocated: 421888; Reserved: 6291456; time used = 34.34429717063904s
epoch 25: train_loss: 3.11852; Allocated: 421888; Reserved: 6291456; time used = 34.483338356018066s
epoch 30: train_loss: 2.00036; Allocated: 421888; Reserved: 6291456; time used = 34.13351535797119s
epoch 35: train_loss: 1.59308; Allocated: 421888; Reserved: 8388608; time used = 34.45327830314636s
epoch 40: train_loss: 1.57661; Allocated: 421888; Reserved: 8388608; time used = 34.314146995544434s
epoch 45: train_loss: 1.44345; Allocated: 421888; Reserved: 8388608; time used = 34.87849235534668s
epoch 50: train_loss: 1.38339; Allocated: 421888; Reserved: 6291456; time used = 34.6265652179718s
epoch 55: train_loss: 1.37539; Allocated: 421888; Reserved: 6291456; time used = 34.789860248565674s
epoch 60: train_loss: 1.37155; Allocated: 421888; Reserved: 6291456; time used = 34.406409740448s
epoch 65: train_loss: 1.35814; Allocated: 421888; Reserved: 6291456; time used = 34.71890044212341s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 466.0777084827423.
Training classifier using 80.00% nodes...
{'micro': 0.64, 'macro': 0.6347402597402597, 'samples': 0.64, 'weighted': 0.6338636363636363, 'accuracy': 0.64}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38876; Allocated: 1148928; Reserved: 6291456; time used = 1.3289039134979248s
epoch 10: train_loss: 1.37361; Allocated: 1148928; Reserved: 8388608; time used = 1.246286153793335s
epoch 15: train_loss: 1.36347; Allocated: 1148928; Reserved: 6291456; time used = 1.2578072547912598s
epoch 20: train_loss: 1.35957; Allocated: 1148928; Reserved: 6291456; time used = 1.257857322692871s
epoch 25: train_loss: 1.36336; Allocated: 1148928; Reserved: 6291456; time used = 1.3220160007476807s
epoch 30: train_loss: 1.35642; Allocated: 1148928; Reserved: 6291456; time used = 1.1974880695343018s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.30161452293396.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.37556561085972856, 'samples': 0.5362318840579711, 'weighted': 0.39851793560233467, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.37475; Allocated: 778240; Reserved: 4194304; time used = 4.121856451034546s
epoch 10: train_loss: 1.34477; Allocated: 778240; Reserved: 4194304; time used = 4.363375663757324s
epoch 15: train_loss: 1.33978; Allocated: 778240; Reserved: 4194304; time used = 4.117584705352783s
epoch 20: train_loss: 1.32467; Allocated: 778240; Reserved: 4194304; time used = 4.30914044380188s
epoch 25: train_loss: 1.32825; Allocated: 778240; Reserved: 4194304; time used = 4.103122711181641s
epoch 30: train_loss: 1.31263; Allocated: 778240; Reserved: 4194304; time used = 4.253541707992554s
epoch 35: train_loss: 1.32380; Allocated: 778240; Reserved: 4194304; time used = 4.1007301807403564s
epoch 40: train_loss: 1.32179; Allocated: 778240; Reserved: 4194304; time used = 4.282674789428711s
epoch 45: train_loss: 1.32964; Allocated: 778240; Reserved: 4194304; time used = 4.209342956542969s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.88235068321228.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5871794871794872, 'samples': 0.5942028985507246, 'weighted': 0.5910813823857303, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2112.26it/s]100%|██████████| 1000/1000 [00:00<00:00, 3191.03it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2772.16it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3548.86it/s]100%|██████████| 2000/2000 [00:00<00:00, 5758.86it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68399; Allocated: 3849728; Reserved: 29360128; time used = 1173.022872209549s
epoch 10: train_loss: 0.62088; Allocated: 3849728; Reserved: 31457280; time used = 1175.1227133274078s
epoch 15: train_loss: 0.54221; Allocated: 3849728; Reserved: 29360128; time used = 1174.2490675449371s
epoch 20: train_loss: 0.47732; Allocated: 3849728; Reserved: 29360128; time used = 1173.206615447998s
epoch 25: train_loss: 0.51253; Allocated: 3849728; Reserved: 29360128; time used = 1173.2009446620941s
epoch 30: train_loss: 0.48809; Allocated: 3849728; Reserved: 29360128; time used = 1177.8592388629913s
epoch 35: train_loss: 0.44804; Allocated: 3849728; Reserved: 29360128; time used = 1177.6142604351044s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8933.008349180222.
Training classifier using 80.00% nodes...
{'micro': 0.7125, 'macro': 0.7056546305005791, 'samples': 0.7125, 'weighted': 0.7043080004351193, 'accuracy': 0.7125}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2305.24it/s] 82%|████████▏ | 1638/2000 [00:00<00:00, 3011.19it/s]100%|██████████| 2000/2000 [00:00<00:00, 5175.60it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68343; Allocated: 3849728; Reserved: 29360128; time used = 117.20363521575928s
epoch 10: train_loss: 0.61545; Allocated: 3849728; Reserved: 29360128; time used = 113.66618394851685s
epoch 15: train_loss: 0.57832; Allocated: 3849728; Reserved: 29360128; time used = 117.7437174320221s
epoch 20: train_loss: 0.51823; Allocated: 3849728; Reserved: 29360128; time used = 116.22804164886475s
epoch 25: train_loss: 0.54881; Allocated: 3849728; Reserved: 29360128; time used = 116.32038235664368s
epoch 30: train_loss: 0.66306; Allocated: 3849728; Reserved: 29360128; time used = 114.82061982154846s
epoch 35: train_loss: 0.56505; Allocated: 3849728; Reserved: 31457280; time used = 114.13332152366638s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 813.9768989086151.
Training classifier using 80.00% nodes...
{'micro': 0.6925, 'macro': 0.6903927355563806, 'samples': 0.6925, 'weighted': 0.6896264575768825, 'accuracy': 0.6925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2876.48it/s] 82%|████████▏ | 1634/2000 [00:00<00:00, 3677.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 5948.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 4.51629; Allocated: 3986432; Reserved: 31457280; time used = 48.23855376243591s
epoch 10: train_loss: 2.28353; Allocated: 3986432; Reserved: 31457280; time used = 49.83584904670715s
epoch 15: train_loss: 1.52791; Allocated: 3986432; Reserved: 31457280; time used = 48.32112193107605s
epoch 20: train_loss: 1.55565; Allocated: 3986432; Reserved: 31457280; time used = 49.094099283218384s
epoch 25: train_loss: 1.61937; Allocated: 3986432; Reserved: 31457280; time used = 47.70018482208252s
epoch 30: train_loss: 1.51166; Allocated: 3986432; Reserved: 31457280; time used = 47.01679086685181s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 304.52223467826843.
Training classifier using 80.00% nodes...
{'micro': 0.55, 'macro': 0.52, 'samples': 0.55, 'weighted': 0.5164, 'accuracy': 0.55}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38946; Allocated: 1148928; Reserved: 6291456; time used = 4.525671005249023s
epoch 10: train_loss: 1.37308; Allocated: 1148928; Reserved: 8388608; time used = 4.669968366622925s
epoch 15: train_loss: 1.36613; Allocated: 1148928; Reserved: 6291456; time used = 4.5110859870910645s
epoch 20: train_loss: 1.35992; Allocated: 1148928; Reserved: 6291456; time used = 4.9774744510650635s
epoch 25: train_loss: 1.36095; Allocated: 1148928; Reserved: 6291456; time used = 4.696179151535034s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.82727074623108.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.37556561085972856, 'samples': 0.5362318840579711, 'weighted': 0.39851793560233467, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.50040; Allocated: 1146880; Reserved: 6291456; time used = 5.192113876342773s
epoch 10: train_loss: 0.44049; Allocated: 1146880; Reserved: 6291456; time used = 5.063243389129639s
epoch 15: train_loss: 0.44407; Allocated: 1146880; Reserved: 6291456; time used = 5.213865041732788s
epoch 20: train_loss: 0.42345; Allocated: 1146880; Reserved: 6291456; time used = 5.188699007034302s
epoch 25: train_loss: 0.42439; Allocated: 1146880; Reserved: 6291456; time used = 5.019359350204468s
epoch 30: train_loss: 0.42235; Allocated: 1146880; Reserved: 6291456; time used = 5.191029787063599s
epoch 35: train_loss: 0.41871; Allocated: 1146880; Reserved: 6291456; time used = 5.181351900100708s
epoch 40: train_loss: 0.41037; Allocated: 1146880; Reserved: 6291456; time used = 5.029752016067505s
epoch 45: train_loss: 0.39699; Allocated: 1146880; Reserved: 8388608; time used = 5.241387367248535s
epoch 50: train_loss: 0.40364; Allocated: 1146880; Reserved: 6291456; time used = 5.200393438339233s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.18709349632263.
Training classifier using 80.00% nodes...
{'micro': 0.5072463768115942, 'macro': 0.4668181818181818, 'samples': 0.5072463768115942, 'weighted': 0.4774571805006588, 'accuracy': 0.5072463768115942}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.64077; Allocated: 868864; Reserved: 6291456; time used = 4.535778284072876s
epoch 10: train_loss: 0.62208; Allocated: 868864; Reserved: 6291456; time used = 4.4749040603637695s
epoch 15: train_loss: 0.55039; Allocated: 868864; Reserved: 6291456; time used = 4.638789653778076s
epoch 20: train_loss: 0.32877; Allocated: 868864; Reserved: 6291456; time used = 4.476270914077759s
epoch 25: train_loss: 0.20899; Allocated: 868864; Reserved: 6291456; time used = 4.514686107635498s
epoch 30: train_loss: 0.13986; Allocated: 868864; Reserved: 6291456; time used = 4.68561577796936s
epoch 35: train_loss: 0.21843; Allocated: 868864; Reserved: 6291456; time used = 4.472211837768555s
epoch 40: train_loss: 0.20665; Allocated: 868864; Reserved: 6291456; time used = 4.483944892883301s
epoch 45: train_loss: 0.18270; Allocated: 868864; Reserved: 6291456; time used = 4.47337007522583s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.38025736808777.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38512; Allocated: 40907264; Reserved: 62914560; time used = 0.19075822830200195s
epoch 10: train_loss: 1.39628; Allocated: 40907264; Reserved: 62914560; time used = 0.18221092224121094s
epoch 15: train_loss: 1.37829; Allocated: 40907264; Reserved: 62914560; time used = 0.18371105194091797s
epoch 20: train_loss: 1.36892; Allocated: 40907264; Reserved: 62914560; time used = 0.1812269687652588s
epoch 25: train_loss: 1.33802; Allocated: 40907264; Reserved: 62914560; time used = 0.18198251724243164s
epoch 30: train_loss: 1.29568; Allocated: 40907264; Reserved: 62914560; time used = 0.18216824531555176s
epoch 35: train_loss: 1.27182; Allocated: 40907264; Reserved: 62914560; time used = 0.18306922912597656s
epoch 40: train_loss: 1.26181; Allocated: 40907264; Reserved: 62914560; time used = 0.18444395065307617s
epoch 45: train_loss: 1.24661; Allocated: 40907264; Reserved: 62914560; time used = 0.18189024925231934s
epoch 50: train_loss: 1.22851; Allocated: 40907264; Reserved: 62914560; time used = 0.18153667449951172s
epoch 55: train_loss: 1.23635; Allocated: 40907264; Reserved: 62914560; time used = 0.18434953689575195s
epoch 60: train_loss: 1.22950; Allocated: 40907264; Reserved: 62914560; time used = 0.18390703201293945s
epoch 65: train_loss: 1.18059; Allocated: 40907264; Reserved: 62914560; time used = 0.1846752166748047s
epoch 70: train_loss: 1.17025; Allocated: 40907264; Reserved: 62914560; time used = 0.1892848014831543s
epoch 75: train_loss: 1.13167; Allocated: 40907264; Reserved: 62914560; time used = 0.18436789512634277s
epoch 80: train_loss: 1.14274; Allocated: 40907264; Reserved: 62914560; time used = 0.1937544345855713s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.497293949127197.
Training classifier using 20.00% nodes...
{'micro': 0.794154938506403, 'macro': 0.7913564653800561, 'samples': 0.794154938506403, 'weighted': 0.7940505283450706, 'accuracy': 0.794154938506403}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.33434; Allocated: 40902656; Reserved: 62914560; time used = 0.4784660339355469s
epoch 10: train_loss: 0.33927; Allocated: 40902656; Reserved: 62914560; time used = 0.4836573600769043s
epoch 15: train_loss: 0.33763; Allocated: 40902656; Reserved: 62914560; time used = 0.48897504806518555s
epoch 20: train_loss: 0.32841; Allocated: 40902656; Reserved: 62914560; time used = 0.7161757946014404s
epoch 25: train_loss: 0.32972; Allocated: 40902656; Reserved: 62914560; time used = 0.48905277252197266s
epoch 30: train_loss: 0.33072; Allocated: 40902656; Reserved: 62914560; time used = 0.4900400638580322s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.30126690864563.
Training classifier using 20.00% nodes...
{'micro': 0.7613160897679727, 'macro': 0.7474360108320838, 'samples': 0.7613160897679726, 'weighted': 0.7604054041863492, 'accuracy': 0.7613160897679726}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.53861; Allocated: 647168; Reserved: 4194304; time used = 3.2490930557250977s
epoch 10: train_loss: 0.48734; Allocated: 647168; Reserved: 4194304; time used = 3.148996353149414s
epoch 15: train_loss: 0.31610; Allocated: 647168; Reserved: 4194304; time used = 3.2711448669433594s
epoch 20: train_loss: 0.25596; Allocated: 647168; Reserved: 4194304; time used = 3.1988120079040527s
epoch 25: train_loss: 0.23766; Allocated: 647168; Reserved: 4194304; time used = 3.169039726257324s
epoch 30: train_loss: 0.28989; Allocated: 647168; Reserved: 4194304; time used = 3.16959547996521s
epoch 35: train_loss: 0.20479; Allocated: 647168; Reserved: 4194304; time used = 3.3409743309020996s
epoch 40: train_loss: 0.51673; Allocated: 647168; Reserved: 4194304; time used = 3.1736252307891846s
epoch 45: train_loss: 0.60439; Allocated: 647168; Reserved: 4194304; time used = 3.165529251098633s
epoch 50: train_loss: 0.27485; Allocated: 647168; Reserved: 4194304; time used = 3.322922706604004s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.18167734146118.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.7246376811594202, 'samples': 0.7368421052631579, 'weighted': 0.7337909992372235, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2325.62it/s]100%|██████████| 1000/1000 [00:00<00:00, 3467.13it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 77024449.50000; Allocated: 693760; Reserved: 6291456; time used = 11.748033285140991s
epoch 10: train_loss: 91553004.00000; Allocated: 693760; Reserved: 6291456; time used = 11.643409729003906s
epoch 15: train_loss: 92572593.00000; Allocated: 693760; Reserved: 4194304; time used = 11.852975845336914s
epoch 20: train_loss: 45634280.50000; Allocated: 693760; Reserved: 4194304; time used = 11.846683979034424s
epoch 25: train_loss: 234623548.00000; Allocated: 693760; Reserved: 4194304; time used = 11.635833978652954s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 71.92874026298523.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.6093337556752192, 'samples': 0.63, 'weighted': 0.6075366909513252, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2782.94it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3576.21it/s]100%|██████████| 2000/2000 [00:00<00:00, 5846.59it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.66260; Allocated: 3787264; Reserved: 31457280; time used = 123.54998993873596s
epoch 10: train_loss: 0.62658; Allocated: 3787264; Reserved: 29360128; time used = 123.97317600250244s
epoch 15: train_loss: 0.49877; Allocated: 3787264; Reserved: 29360128; time used = 125.26612567901611s
epoch 20: train_loss: 0.27613; Allocated: 3787264; Reserved: 29360128; time used = 124.942391872406s
epoch 25: train_loss: 0.15873; Allocated: 3787264; Reserved: 29360128; time used = 125.72245216369629s
epoch 30: train_loss: 0.11302; Allocated: 3787264; Reserved: 29360128; time used = 125.39563059806824s
epoch 35: train_loss: 0.08695; Allocated: 3787264; Reserved: 29360128; time used = 124.8562593460083s
epoch 40: train_loss: 0.07264; Allocated: 3787264; Reserved: 29360128; time used = 126.42179560661316s
epoch 45: train_loss: 0.06445; Allocated: 3787264; Reserved: 29360128; time used = 125.80552959442139s
epoch 50: train_loss: 0.05813; Allocated: 3787264; Reserved: 29360128; time used = 127.61299180984497s
epoch 55: train_loss: 0.05310; Allocated: 3787264; Reserved: 29360128; time used = 125.92841744422913s
epoch 60: train_loss: 0.08680; Allocated: 3787264; Reserved: 29360128; time used = 126.41590666770935s
epoch 65: train_loss: 0.07855; Allocated: 3787264; Reserved: 29360128; time used = 126.55542039871216s
epoch 70: train_loss: 0.07316; Allocated: 3787264; Reserved: 31457280; time used = 124.21839904785156s
epoch 75: train_loss: 0.06333; Allocated: 3787264; Reserved: 29360128; time used = 126.18399834632874s
epoch 80: train_loss: 0.05600; Allocated: 3787264; Reserved: 29360128; time used = 125.50164103507996s
epoch 85: train_loss: 0.06689; Allocated: 3787264; Reserved: 29360128; time used = 126.32029342651367s
epoch 90: train_loss: 0.08047; Allocated: 3787264; Reserved: 29360128; time used = 126.51353120803833s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2265.4094965457916.
Training classifier using 80.00% nodes...
{'micro': 0.57, 'macro': 0.5501621508525996, 'samples': 0.57, 'weighted': 0.547328172402971, 'accuracy': 0.57}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 29770697.20422; Allocated: 53754368; Reserved: 293601280; time used = 2.7438740730285645s
epoch 10: train_loss: 21347727.27328; Allocated: 53754368; Reserved: 293601280; time used = 2.719653844833374s
epoch 15: train_loss: 6638401.25933; Allocated: 53754368; Reserved: 293601280; time used = 2.801406145095825s
epoch 20: train_loss: 5185083.30942; Allocated: 53754368; Reserved: 293601280; time used = 2.690507650375366s
epoch 25: train_loss: 156222.02281; Allocated: 53754368; Reserved: 293601280; time used = 2.6486146450042725s
epoch 30: train_loss: 244317.36868; Allocated: 53754368; Reserved: 293601280; time used = 2.7063910961151123s
epoch 35: train_loss: 159814.11557; Allocated: 53754368; Reserved: 293601280; time used = 2.7659549713134766s
epoch 40: train_loss: 9471.07709; Allocated: 53754368; Reserved: 293601280; time used = 2.6832525730133057s
epoch 45: train_loss: 19365.75962; Allocated: 53754368; Reserved: 293601280; time used = 2.734158515930176s
epoch 50: train_loss: 2134.01903; Allocated: 53754368; Reserved: 293601280; time used = 2.8131797313690186s
epoch 55: train_loss: 2076.98341; Allocated: 53754368; Reserved: 293601280; time used = 2.7554612159729004s
epoch 60: train_loss: 1.39794; Allocated: 53754368; Reserved: 293601280; time used = 2.7236297130584717s
epoch 65: train_loss: 1.38668; Allocated: 53754368; Reserved: 293601280; time used = 2.757254123687744s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.32451868057251.
Training classifier using 20.00% nodes...
{'micro': 0.2171003717472119, 'macro': 0.1016074278557516, 'samples': 0.2193839218632607, 'weighted': 0.11540299608939533, 'accuracy': 0.2193839218632607}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.36113; Allocated: 637440; Reserved: 8388608; time used = 3.1183674335479736s
epoch 10: train_loss: 1.36908; Allocated: 637440; Reserved: 8388608; time used = 3.099616289138794s
epoch 15: train_loss: 1.33664; Allocated: 637440; Reserved: 8388608; time used = 3.271103620529175s
epoch 20: train_loss: 1.32975; Allocated: 637440; Reserved: 8388608; time used = 3.132636308670044s
epoch 25: train_loss: 1.33201; Allocated: 637440; Reserved: 8388608; time used = 3.0867655277252197s
epoch 30: train_loss: 1.32226; Allocated: 637440; Reserved: 8388608; time used = 3.0750346183776855s
epoch 35: train_loss: 1.32601; Allocated: 637440; Reserved: 8388608; time used = 3.2320327758789062s
epoch 40: train_loss: 1.33591; Allocated: 637440; Reserved: 8388608; time used = 3.0750088691711426s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.801457405090332.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2756.80it/s]100%|██████████| 1500/1500 [00:00<00:00, 5125.66it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68373; Allocated: 827392; Reserved: 16777216; time used = 8.436728239059448s
epoch 10: train_loss: 0.70588; Allocated: 827392; Reserved: 39845888; time used = 8.185317277908325s
epoch 15: train_loss: 0.70166; Allocated: 827392; Reserved: 16777216; time used = 8.13156247138977s
epoch 20: train_loss: 0.69341; Allocated: 827392; Reserved: 18874368; time used = 8.199844360351562s
epoch 25: train_loss: 0.69169; Allocated: 827392; Reserved: 16777216; time used = 8.433595418930054s
epoch 30: train_loss: 0.69650; Allocated: 827392; Reserved: 39845888; time used = 8.262695789337158s
epoch 35: train_loss: 0.68797; Allocated: 827392; Reserved: 16777216; time used = 8.210232496261597s
epoch 40: train_loss: 0.69427; Allocated: 827392; Reserved: 18874368; time used = 8.442697286605835s
epoch 45: train_loss: 0.69205; Allocated: 827392; Reserved: 18874368; time used = 8.20365571975708s
epoch 50: train_loss: 0.68335; Allocated: 827392; Reserved: 16777216; time used = 8.208526849746704s
epoch 55: train_loss: 0.69444; Allocated: 827392; Reserved: 16777216; time used = 8.256263971328735s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 102.5162947177887.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.97862; Allocated: 513536; Reserved: 6291456; time used = 4.3283350467681885s
epoch 10: train_loss: 1.54554; Allocated: 513536; Reserved: 6291456; time used = 4.254546165466309s
epoch 15: train_loss: 1.41691; Allocated: 513536; Reserved: 6291456; time used = 4.430674314498901s
epoch 20: train_loss: 1.39249; Allocated: 513536; Reserved: 6291456; time used = 4.262619733810425s
epoch 25: train_loss: 1.37954; Allocated: 513536; Reserved: 6291456; time used = 4.505275011062622s
epoch 30: train_loss: 1.36943; Allocated: 513536; Reserved: 6291456; time used = 4.265385627746582s
epoch 35: train_loss: 1.36404; Allocated: 513536; Reserved: 6291456; time used = 4.25616455078125s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35.64102745056152.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2846.93it/s]100%|██████████| 1000/1000 [00:00<00:00, 4131.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69300; Allocated: 904704; Reserved: 12582912; time used = 10.7116379737854s
epoch 10: train_loss: 0.69312; Allocated: 904704; Reserved: 12582912; time used = 10.654239654541016s
epoch 15: train_loss: 0.69316; Allocated: 904704; Reserved: 12582912; time used = 10.884652137756348s
epoch 20: train_loss: 0.69314; Allocated: 904704; Reserved: 12582912; time used = 10.645067691802979s
epoch 25: train_loss: 0.69310; Allocated: 904704; Reserved: 12582912; time used = 10.657161951065063s
epoch 30: train_loss: 0.69319; Allocated: 904704; Reserved: 12582912; time used = 10.593399047851562s
epoch 35: train_loss: 0.69311; Allocated: 904704; Reserved: 12582912; time used = 10.624557495117188s
epoch 40: train_loss: 0.69312; Allocated: 904704; Reserved: 12582912; time used = 10.633470058441162s
epoch 45: train_loss: 0.69325; Allocated: 904704; Reserved: 12582912; time used = 10.646074295043945s
epoch 50: train_loss: 0.69316; Allocated: 904704; Reserved: 12582912; time used = 10.847021579742432s
epoch 55: train_loss: 0.69318; Allocated: 904704; Reserved: 12582912; time used = 10.676246166229248s
epoch 60: train_loss: 0.69317; Allocated: 904704; Reserved: 12582912; time used = 10.602681875228882s
epoch 65: train_loss: 0.69323; Allocated: 904704; Reserved: 12582912; time used = 10.6432363986969s
epoch 70: train_loss: 0.69315; Allocated: 904704; Reserved: 12582912; time used = 10.666578531265259s
epoch 75: train_loss: 0.69315; Allocated: 904704; Reserved: 12582912; time used = 10.63017225265503s
epoch 80: train_loss: 0.69315; Allocated: 904704; Reserved: 12582912; time used = 10.63216233253479s
epoch 85: train_loss: 0.69314; Allocated: 904704; Reserved: 12582912; time used = 10.87806224822998s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 191.6395297050476.
Training classifier using 80.00% nodes...
{'micro': 0.525, 'macro': 0.524417411328878, 'samples': 0.525, 'weighted': 0.5240845035168081, 'accuracy': 0.525}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.44350; Allocated: 41281536; Reserved: 62914560; time used = 0.6004116535186768s
epoch 10: train_loss: 0.22778; Allocated: 41281536; Reserved: 62914560; time used = 0.6159942150115967s
epoch 15: train_loss: 0.09682; Allocated: 41281536; Reserved: 62914560; time used = 0.5882296562194824s
epoch 20: train_loss: 0.03492; Allocated: 41281536; Reserved: 62914560; time used = 0.8406846523284912s
epoch 25: train_loss: 0.03124; Allocated: 41281536; Reserved: 62914560; time used = 0.6055843830108643s
epoch 30: train_loss: 0.10996; Allocated: 41281536; Reserved: 62914560; time used = 0.6200921535491943s
epoch 35: train_loss: 0.03433; Allocated: 41281536; Reserved: 62914560; time used = 0.6060092449188232s
epoch 40: train_loss: 0.01884; Allocated: 41281536; Reserved: 62914560; time used = 0.6257483959197998s
epoch 45: train_loss: 0.02623; Allocated: 41281536; Reserved: 62914560; time used = 0.8676152229309082s
epoch 50: train_loss: 0.00393; Allocated: 41281536; Reserved: 62914560; time used = 0.6127705574035645s
epoch 55: train_loss: 0.00061; Allocated: 41281536; Reserved: 62914560; time used = 0.6187970638275146s
epoch 60: train_loss: 0.00056; Allocated: 41281536; Reserved: 62914560; time used = 0.6139810085296631s
epoch 65: train_loss: 0.00728; Allocated: 41281536; Reserved: 62914560; time used = 0.6050255298614502s
epoch 70: train_loss: 0.00012; Allocated: 41281536; Reserved: 62914560; time used = 0.6127371788024902s
epoch 75: train_loss: 0.00817; Allocated: 41281536; Reserved: 62914560; time used = 0.8756015300750732s
epoch 80: train_loss: 0.00137; Allocated: 41281536; Reserved: 62914560; time used = 0.6170361042022705s
epoch 85: train_loss: 0.00020; Allocated: 41281536; Reserved: 62914560; time used = 0.5998446941375732s
epoch 90: train_loss: 0.00004; Allocated: 41281536; Reserved: 62914560; time used = 0.6245629787445068s
epoch 95: train_loss: 0.00006; Allocated: 41281536; Reserved: 62914560; time used = 0.6105818748474121s
epoch 100: train_loss: 0.02411; Allocated: 41281536; Reserved: 62914560; time used = 0.8591399192810059s
epoch 105: train_loss: 0.06711; Allocated: 41281536; Reserved: 62914560; time used = 0.6051783561706543s
epoch 110: train_loss: 0.00005; Allocated: 41281536; Reserved: 62914560; time used = 0.5979437828063965s
epoch 115: train_loss: 0.05117; Allocated: 41281536; Reserved: 62914560; time used = 0.6170070171356201s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.30302143096924.
Training classifier using 20.00% nodes...
{'micro': 0.7445162926334474, 'macro': 0.7487745687003816, 'samples': 0.7445162926334474, 'weighted': 0.7428759914043669, 'accuracy': 0.7445162926334474}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2895.23it/s]100%|██████████| 1000/1000 [00:00<00:00, 4178.30it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 652319292.00000; Allocated: 710144; Reserved: 6291456; time used = 188.8330478668213s
epoch 10: train_loss: 70269051.00000; Allocated: 710144; Reserved: 8388608; time used = 193.15020203590393s
epoch 15: train_loss: 161294154.00000; Allocated: 710144; Reserved: 6291456; time used = 190.4161183834076s
epoch 20: train_loss: 37213723.00000; Allocated: 710144; Reserved: 6291456; time used = 192.1751799583435s
epoch 25: train_loss: 76862478.50000; Allocated: 710144; Reserved: 6291456; time used = 188.85851287841797s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 957.0603785514832.
Training classifier using 80.00% nodes...
{'micro': 0.58, 'macro': 0.5174632352941176, 'samples': 0.58, 'weighted': 0.5139889705882353, 'accuracy': 0.58}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2745.99it/s] 82%|████████▏ | 1630/2000 [00:00<00:00, 3526.35it/s]100%|██████████| 2000/2000 [00:00<00:00, 5755.34it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 112.80173444747925s
epoch 10: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 111.35767865180969s
epoch 15: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 111.26670122146606s
epoch 20: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 111.45714807510376s
epoch 25: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 112.83283543586731s
epoch 30: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 111.71552348136902s
epoch 35: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 113.32800841331482s
epoch 40: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 110.98736190795898s
epoch 45: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 111.98041605949402s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1034.3003098964691.
Training classifier using 80.00% nodes...
{'micro': 0.735, 'macro': 0.7341959427267485, 'samples': 0.735, 'weighted': 0.7337573660322476, 'accuracy': 0.735}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2391.71it/s]100%|██████████| 1000/1000 [00:00<00:00, 3554.34it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 88016201.50000; Allocated: 626176; Reserved: 8388608; time used = 11.384426832199097s
epoch 10: train_loss: 8150627.25000; Allocated: 626176; Reserved: 6291456; time used = 11.231831789016724s
epoch 15: train_loss: 1879337.31250; Allocated: 626176; Reserved: 6291456; time used = 11.434343576431274s
epoch 20: train_loss: 553577.05469; Allocated: 626176; Reserved: 6291456; time used = 11.437541961669922s
epoch 25: train_loss: 1.41047; Allocated: 626176; Reserved: 6291456; time used = 11.174607992172241s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 67.18817400932312.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.44183; Allocated: 919552; Reserved: 4194304; time used = 0.9351890087127686s
epoch 10: train_loss: 1.38613; Allocated: 919552; Reserved: 6291456; time used = 0.9280173778533936s
epoch 15: train_loss: 1.36671; Allocated: 919552; Reserved: 4194304; time used = 0.9156033992767334s
epoch 20: train_loss: 1.36302; Allocated: 919552; Reserved: 4194304; time used = 0.9234468936920166s
epoch 25: train_loss: 1.36364; Allocated: 919552; Reserved: 4194304; time used = 0.9241354465484619s
epoch 30: train_loss: 1.36215; Allocated: 919552; Reserved: 4194304; time used = 0.9171326160430908s
epoch 35: train_loss: 1.35870; Allocated: 919552; Reserved: 4194304; time used = 0.9190995693206787s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.470980167388916.
Training classifier using 80.00% nodes...
{'micro': 0.5072463768115942, 'macro': 0.43278529980657643, 'samples': 0.5072463768115942, 'weighted': 0.44767751520758, 'accuracy': 0.5072463768115942}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.62034; Allocated: 791552; Reserved: 6291456; time used = 0.9134571552276611s
epoch 10: train_loss: 0.47581; Allocated: 791552; Reserved: 6291456; time used = 0.9243204593658447s
epoch 15: train_loss: 0.36144; Allocated: 791552; Reserved: 8388608; time used = 0.9142377376556396s
epoch 20: train_loss: 0.27819; Allocated: 791552; Reserved: 6291456; time used = 0.9192986488342285s
epoch 25: train_loss: 0.44262; Allocated: 791552; Reserved: 6291456; time used = 0.9246220588684082s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.174099445343018.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.566601689408707, 'samples': 0.5797101449275363, 'weighted': 0.5720635458748858, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2684.07it/s]100%|██████████| 1000/1000 [00:00<00:00, 3926.46it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68655; Allocated: 565760; Reserved: 8388608; time used = 187.35892009735107s
epoch 10: train_loss: 0.67297; Allocated: 565760; Reserved: 8388608; time used = 190.84955430030823s
epoch 15: train_loss: 0.31196; Allocated: 565760; Reserved: 8388608; time used = 189.13077187538147s
epoch 20: train_loss: 0.52192; Allocated: 565760; Reserved: 8388608; time used = 191.35102653503418s
epoch 25: train_loss: 0.31096; Allocated: 565760; Reserved: 8388608; time used = 191.24692225456238s
epoch 30: train_loss: 0.15879; Allocated: 565760; Reserved: 8388608; time used = 188.15348553657532s
epoch 35: train_loss: 0.11510; Allocated: 565760; Reserved: 10485760; time used = 189.11072158813477s
epoch 40: train_loss: 0.09412; Allocated: 565760; Reserved: 8388608; time used = 184.73164892196655s
epoch 45: train_loss: 0.08219; Allocated: 565760; Reserved: 8388608; time used = 188.5987937450409s
epoch 50: train_loss: 0.08124; Allocated: 565760; Reserved: 10485760; time used = 190.36580300331116s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1969.6297135353088.
Training classifier using 80.00% nodes...
{'micro': 0.705, 'macro': 0.7046381817726716, 'samples': 0.705, 'weighted': 0.7048449350454307, 'accuracy': 0.705}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 46158.69810; Allocated: 866816; Reserved: 29360128; time used = 1.2278802394866943s
epoch 10: train_loss: 10529.81073; Allocated: 866816; Reserved: 29360128; time used = 1.246025800704956s
epoch 15: train_loss: 521.40348; Allocated: 866816; Reserved: 8388608; time used = 1.238069772720337s
epoch 20: train_loss: 463.62870; Allocated: 866816; Reserved: 8388608; time used = 1.241410493850708s
epoch 25: train_loss: 295.77670; Allocated: 866816; Reserved: 8388608; time used = 1.2438933849334717s
epoch 30: train_loss: 270.64907; Allocated: 866816; Reserved: 8388608; time used = 1.265153169631958s
epoch 35: train_loss: 204.89517; Allocated: 866816; Reserved: 8388608; time used = 1.2357187271118164s
epoch 40: train_loss: 141.56700; Allocated: 866816; Reserved: 8388608; time used = 1.2452354431152344s
epoch 45: train_loss: 43.88627; Allocated: 866816; Reserved: 8388608; time used = 1.217306137084961s
epoch 50: train_loss: 55.31237; Allocated: 866816; Reserved: 29360128; time used = 1.2222874164581299s
epoch 55: train_loss: 34.96743; Allocated: 866816; Reserved: 8388608; time used = 1.233910322189331s
epoch 60: train_loss: 15.45384; Allocated: 866816; Reserved: 8388608; time used = 1.2403929233551025s
epoch 65: train_loss: 23.95844; Allocated: 866816; Reserved: 8388608; time used = 1.2439212799072266s
epoch 70: train_loss: 25.77960; Allocated: 866816; Reserved: 8388608; time used = 1.2397620677947998s
epoch 75: train_loss: 12.93110; Allocated: 866816; Reserved: 29360128; time used = 1.2359814643859863s
epoch 80: train_loss: 8.42423; Allocated: 866816; Reserved: 8388608; time used = 1.220306634902954s
epoch 85: train_loss: 6.20220; Allocated: 866816; Reserved: 8388608; time used = 1.208658218383789s
epoch 90: train_loss: 5.35547; Allocated: 866816; Reserved: 8388608; time used = 1.1682405471801758s
epoch 95: train_loss: 5.13117; Allocated: 866816; Reserved: 8388608; time used = 1.2232673168182373s
epoch 100: train_loss: 3.77821; Allocated: 866816; Reserved: 8388608; time used = 1.2270212173461914s
epoch 105: train_loss: 3.62730; Allocated: 866816; Reserved: 8388608; time used = 1.2284371852874756s
epoch 110: train_loss: 3.75981; Allocated: 866816; Reserved: 8388608; time used = 1.2176392078399658s
epoch 115: train_loss: 4.34050; Allocated: 866816; Reserved: 8388608; time used = 1.2140066623687744s
epoch 120: train_loss: 12.43863; Allocated: 866816; Reserved: 8388608; time used = 1.1813633441925049s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.02562427520752.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8347826086956521, 'samples': 0.8421052631578947, 'weighted': 0.840274599542334, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.62498; Allocated: 719360; Reserved: 4194304; time used = 4.639688491821289s
epoch 10: train_loss: 0.50029; Allocated: 719360; Reserved: 4194304; time used = 4.7672648429870605s
epoch 15: train_loss: 0.27085; Allocated: 719360; Reserved: 6291456; time used = 4.8119120597839355s
epoch 20: train_loss: 0.28069; Allocated: 719360; Reserved: 4194304; time used = 4.756803035736084s
epoch 25: train_loss: 0.43321; Allocated: 719360; Reserved: 4194304; time used = 4.646935224533081s
epoch 30: train_loss: 0.10118; Allocated: 719360; Reserved: 4194304; time used = 4.803475379943848s
epoch 35: train_loss: 0.03715; Allocated: 719360; Reserved: 4194304; time used = 4.777005195617676s
epoch 40: train_loss: 0.02537; Allocated: 719360; Reserved: 4194304; time used = 4.622826099395752s
epoch 45: train_loss: 0.06036; Allocated: 719360; Reserved: 4194304; time used = 4.7957680225372314s
epoch 50: train_loss: 0.16202; Allocated: 719360; Reserved: 6291456; time used = 4.764639616012573s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 51.892956256866455.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.5964912280701754, 'samples': 0.6086956521739131, 'weighted': 0.6015764047800661, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2741.01it/s]100%|██████████| 1000/1000 [00:00<00:00, 3995.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68309; Allocated: 701952; Reserved: 8388608; time used = 36.847805976867676s
epoch 10: train_loss: 0.66999; Allocated: 701952; Reserved: 8388608; time used = 36.77706265449524s
epoch 15: train_loss: 0.64986; Allocated: 701952; Reserved: 8388608; time used = 37.055750370025635s
epoch 20: train_loss: 0.58814; Allocated: 701952; Reserved: 8388608; time used = 36.9923632144928s
epoch 25: train_loss: 0.60281; Allocated: 701952; Reserved: 8388608; time used = 36.778969526290894s
epoch 30: train_loss: 0.62260; Allocated: 701952; Reserved: 8388608; time used = 36.86284375190735s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 239.69283032417297.
Training classifier using 80.00% nodes...
{'micro': 0.66, 'macro': 0.65996599659966, 'samples': 0.66, 'weighted': 0.6598979897989798, 'accuracy': 0.66}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2318.05it/s] 82%|████████▏ | 1642/2000 [00:00<00:00, 3027.03it/s]100%|██████████| 2000/2000 [00:00<00:00, 5190.98it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.39678; Allocated: 3852800; Reserved: 29360128; time used = 942.1143856048584s
epoch 10: train_loss: 1.41632; Allocated: 3852800; Reserved: 29360128; time used = 944.4588756561279s
epoch 15: train_loss: 1.38431; Allocated: 3852800; Reserved: 29360128; time used = 942.2969586849213s
epoch 20: train_loss: 1.36648; Allocated: 3852800; Reserved: 29360128; time used = 942.6334686279297s
epoch 25: train_loss: 1.33362; Allocated: 3852800; Reserved: 29360128; time used = 943.2826688289642s
epoch 30: train_loss: 1.26903; Allocated: 3852800; Reserved: 29360128; time used = 946.1084260940552s
epoch 35: train_loss: 1.49111; Allocated: 3852800; Reserved: 29360128; time used = 942.8317356109619s
epoch 40: train_loss: 1.21731; Allocated: 3852800; Reserved: 29360128; time used = 945.0345771312714s
epoch 45: train_loss: 1.22465; Allocated: 3852800; Reserved: 29360128; time used = 941.9617283344269s
epoch 50: train_loss: 1.17973; Allocated: 3852800; Reserved: 29360128; time used = 944.2125444412231s
epoch 55: train_loss: 1.15407; Allocated: 3852800; Reserved: 31457280; time used = 925.3623077869415s
epoch 60: train_loss: 1.15080; Allocated: 3852800; Reserved: 29360128; time used = 926.3103528022766s
epoch 65: train_loss: 1.14402; Allocated: 3852800; Reserved: 29360128; time used = 924.770664691925s
epoch 70: train_loss: 1.14168; Allocated: 3852800; Reserved: 29360128; time used = 923.8461709022522s
epoch 75: train_loss: 1.13935; Allocated: 3852800; Reserved: 29360128; time used = 926.0791158676147s
epoch 80: train_loss: 1.13438; Allocated: 3852800; Reserved: 29360128; time used = 926.5079214572906s
epoch 85: train_loss: 1.13559; Allocated: 3852800; Reserved: 29360128; time used = 927.1536657810211s
epoch 90: train_loss: 1.13156; Allocated: 3852800; Reserved: 31457280; time used = 925.2947878837585s
epoch 95: train_loss: 1.13091; Allocated: 3852800; Reserved: 29360128; time used = 927.8197948932648s
epoch 100: train_loss: 1.13110; Allocated: 3852800; Reserved: 31457280; time used = 925.4295399188995s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19068.080834388733.
Training classifier using 80.00% nodes...
{'micro': 0.7175, 'macro': 0.7157929815957091, 'samples': 0.7175, 'weighted': 0.7151322002779191, 'accuracy': 0.7175}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2516.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 3713.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.880675554275513s
epoch 10: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.858262538909912s
epoch 15: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.060426950454712s
epoch 20: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.865274429321289s
epoch 25: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.924196243286133s
epoch 30: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.840617656707764s
epoch 35: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.86752462387085s
epoch 40: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855226755142212s
epoch 45: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.851099014282227s
epoch 50: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.057509660720825s
epoch 55: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.854771137237549s
epoch 60: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.86430811882019s
epoch 65: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.839857578277588s
epoch 70: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.853909015655518s
epoch 75: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.849565029144287s
epoch 80: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.876633644104004s
epoch 85: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.041685342788696s
epoch 90: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.851334571838379s
epoch 95: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.854014158248901s
epoch 100: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.848013877868652s
epoch 105: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.857018709182739s
epoch 110: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.847107648849487s
epoch 115: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.853426218032837s
epoch 120: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.0863988399505615s
epoch 125: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.848050594329834s
epoch 130: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.862009525299072s
epoch 135: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.848160266876221s
epoch 140: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.841795921325684s
epoch 145: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.858757734298706s
epoch 150: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.852444648742676s
epoch 155: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.064780235290527s
epoch 160: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.843165397644043s
epoch 165: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.8546059131622314s
epoch 170: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.850024700164795s
epoch 175: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.849834203720093s
epoch 180: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.929541826248169s
epoch 185: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.856831789016724s
epoch 190: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.042261362075806s
epoch 195: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.839648485183716s
epoch 200: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855673551559448s
epoch 205: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.847391366958618s
epoch 210: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.854392766952515s
epoch 215: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.858325004577637s
epoch 220: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.862120866775513s
epoch 225: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.030219316482544s
epoch 230: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.849843263626099s
epoch 235: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.853460788726807s
epoch 240: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.8612220287323s
epoch 245: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.844770908355713s
epoch 250: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855719327926636s
epoch 255: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.840963363647461s
epoch 260: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.110597610473633s
epoch 265: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.844305992126465s
epoch 270: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.864465951919556s
epoch 275: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.840327024459839s
epoch 280: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.851966381072998s
epoch 285: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.851951360702515s
epoch 290: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.848099708557129s
epoch 295: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.033545255661011s
epoch 300: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.850903749465942s
epoch 305: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.865626335144043s
epoch 310: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.84952449798584s
epoch 315: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.848320722579956s
epoch 320: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855022668838501s
epoch 325: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855341196060181s
epoch 330: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.045155048370361s
epoch 335: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.843713045120239s
epoch 340: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.852601766586304s
epoch 345: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.860341310501099s
epoch 350: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.84752631187439s
epoch 355: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.862767696380615s
epoch 360: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.848492622375488s
epoch 365: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.046011924743652s
epoch 370: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.852806091308594s
epoch 375: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.841983079910278s
epoch 380: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855442523956299s
epoch 385: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.8589513301849365s
epoch 390: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.844743013381958s
epoch 395: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.864006280899048s
epoch 400: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.992427825927734s
epoch 405: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.855338096618652s
epoch 410: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.849842548370361s
epoch 415: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.850872755050659s
epoch 420: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.8551881313323975s
epoch 425: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.847480058670044s
epoch 430: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.843319416046143s
epoch 435: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.0297112464904785s
epoch 440: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.847803831100464s
epoch 445: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.852489233016968s
epoch 450: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.851042985916138s
epoch 455: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.842852830886841s
epoch 460: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.851466178894043s
epoch 465: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.869144678115845s
epoch 470: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 5.059238910675049s
epoch 475: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.858478307723999s
epoch 480: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.846170425415039s
epoch 485: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.852001905441284s
epoch 490: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.852651834487915s
epoch 495: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.900972127914429s
epoch 500: train_loss: 0.69315; Allocated: 630784; Reserved: 10485760; time used = 4.846338272094727s
Finished training. Time used = 491.3542721271515.
Training classifier using 80.00% nodes...
{'micro': 0.615, 'macro': 0.6067315304272325, 'samples': 0.615, 'weighted': 0.6055910518654715, 'accuracy': 0.615}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64076; Allocated: 843776; Reserved: 4194304; time used = 4.5593485832214355s
epoch 10: train_loss: 0.63112; Allocated: 843776; Reserved: 4194304; time used = 4.687324523925781s
epoch 15: train_loss: 0.61620; Allocated: 843776; Reserved: 4194304; time used = 4.682687759399414s
epoch 20: train_loss: 0.61519; Allocated: 843776; Reserved: 6291456; time used = 4.697216749191284s
epoch 25: train_loss: 0.62688; Allocated: 843776; Reserved: 4194304; time used = 4.569134473800659s
epoch 30: train_loss: 0.62037; Allocated: 843776; Reserved: 6291456; time used = 4.673804521560669s
epoch 35: train_loss: 0.60682; Allocated: 843776; Reserved: 4194304; time used = 4.701611518859863s
epoch 40: train_loss: 0.61713; Allocated: 843776; Reserved: 4194304; time used = 4.507318019866943s
epoch 45: train_loss: 0.60214; Allocated: 843776; Reserved: 4194304; time used = 4.67057466506958s
epoch 50: train_loss: 0.60088; Allocated: 843776; Reserved: 4194304; time used = 4.6726696491241455s
epoch 55: train_loss: 0.60085; Allocated: 843776; Reserved: 4194304; time used = 4.578567981719971s
epoch 60: train_loss: 0.61331; Allocated: 843776; Reserved: 6291456; time used = 4.65120267868042s
epoch 65: train_loss: 0.62144; Allocated: 843776; Reserved: 4194304; time used = 4.669623374938965s
epoch 70: train_loss: 0.60432; Allocated: 843776; Reserved: 4194304; time used = 4.507108926773071s
epoch 75: train_loss: 0.59143; Allocated: 843776; Reserved: 6291456; time used = 4.681466579437256s
epoch 80: train_loss: 0.58913; Allocated: 843776; Reserved: 6291456; time used = 4.679203271865845s
epoch 85: train_loss: 0.60853; Allocated: 843776; Reserved: 4194304; time used = 4.530925750732422s
epoch 90: train_loss: 0.58960; Allocated: 843776; Reserved: 6291456; time used = 4.663619518280029s
epoch 95: train_loss: 0.59891; Allocated: 843776; Reserved: 6291456; time used = 4.714137554168701s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 92.20708322525024.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6327443048754524, 'samples': 0.6376811594202898, 'weighted': 0.6358298389659759, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 47253.95232; Allocated: 17610240; Reserved: 295698432; time used = 3.0593278408050537s
epoch 10: train_loss: 8090.30715; Allocated: 17610240; Reserved: 295698432; time used = 3.0215251445770264s
epoch 15: train_loss: 256.55432; Allocated: 17610240; Reserved: 295698432; time used = 3.0232293605804443s
epoch 20: train_loss: 1.49179; Allocated: 17610240; Reserved: 295698432; time used = 3.068328857421875s
epoch 25: train_loss: 1.39044; Allocated: 17610240; Reserved: 295698432; time used = 3.0474231243133545s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.295265913009644.
Training classifier using 20.00% nodes...
{'micro': 0.3359483156437471, 'macro': 0.15590235848739195, 'samples': 0.3359483156437471, 'weighted': 0.23449178988552172, 'accuracy': 0.3359483156437471}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3133.30it/s]100%|██████████| 1500/1500 [00:00<00:00, 5623.63it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 42.79299; Allocated: 664064; Reserved: 2097152; time used = 0.5725016593933105s
epoch 10: train_loss: 2.78828; Allocated: 664064; Reserved: 2097152; time used = 0.5669915676116943s
epoch 15: train_loss: 1.35613; Allocated: 664064; Reserved: 2097152; time used = 0.5744221210479736s
epoch 20: train_loss: 1.35225; Allocated: 664064; Reserved: 2097152; time used = 0.5808577537536621s
epoch 25: train_loss: 1.32900; Allocated: 664064; Reserved: 2097152; time used = 0.582054615020752s
epoch 30: train_loss: 1.27625; Allocated: 664064; Reserved: 2097152; time used = 0.5791316032409668s
epoch 35: train_loss: 1.23131; Allocated: 664064; Reserved: 2097152; time used = 0.5653443336486816s
epoch 40: train_loss: 1.19811; Allocated: 664064; Reserved: 2097152; time used = 0.71175217628479s
epoch 45: train_loss: 1.19227; Allocated: 664064; Reserved: 2097152; time used = 0.5662069320678711s
epoch 50: train_loss: 1.17938; Allocated: 664064; Reserved: 2097152; time used = 0.5641977787017822s
epoch 55: train_loss: 1.16837; Allocated: 664064; Reserved: 2097152; time used = 0.5694587230682373s
epoch 60: train_loss: 1.17027; Allocated: 664064; Reserved: 2097152; time used = 0.5703315734863281s
epoch 65: train_loss: 1.16649; Allocated: 664064; Reserved: 2097152; time used = 0.581946849822998s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.480168104171753.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8246153846153846, 'samples': 0.8421052631578947, 'weighted': 0.8333603238866396, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.17872; Allocated: 579584; Reserved: 4194304; time used = 3.131959915161133s
epoch 10: train_loss: 1.35515; Allocated: 579584; Reserved: 4194304; time used = 3.0963551998138428s
epoch 15: train_loss: 1.37735; Allocated: 579584; Reserved: 4194304; time used = 3.246021032333374s
epoch 20: train_loss: 1.37969; Allocated: 579584; Reserved: 4194304; time used = 3.1199405193328857s
epoch 25: train_loss: 1.37527; Allocated: 579584; Reserved: 4194304; time used = 3.1489956378936768s
epoch 30: train_loss: 1.37146; Allocated: 579584; Reserved: 4194304; time used = 3.169814348220825s
epoch 35: train_loss: 1.34765; Allocated: 579584; Reserved: 4194304; time used = 3.240342617034912s
epoch 40: train_loss: 1.33458; Allocated: 579584; Reserved: 4194304; time used = 3.1204323768615723s
epoch 45: train_loss: 1.31538; Allocated: 579584; Reserved: 4194304; time used = 3.084669828414917s
epoch 50: train_loss: 1.30939; Allocated: 579584; Reserved: 4194304; time used = 3.296795606613159s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.16809058189392.
Training classifier using 80.00% nodes...
{'micro': 0.6052631578947368, 'macro': 0.47368421052631576, 'samples': 0.6052631578947368, 'weighted': 0.5152354570637119, 'accuracy': 0.6052631578947368}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56425; Allocated: 57347072; Reserved: 113246208; time used = 3.6201770305633545s
epoch 10: train_loss: 0.40645; Allocated: 57347072; Reserved: 113246208; time used = 3.705462694168091s
epoch 15: train_loss: 0.38226; Allocated: 57347072; Reserved: 113246208; time used = 3.5833840370178223s
epoch 20: train_loss: 0.37345; Allocated: 57347072; Reserved: 113246208; time used = 3.5805578231811523s
epoch 25: train_loss: 0.36866; Allocated: 57347072; Reserved: 113246208; time used = 3.723998785018921s
epoch 30: train_loss: 0.36179; Allocated: 57347072; Reserved: 113246208; time used = 3.575774908065796s
epoch 35: train_loss: 0.35939; Allocated: 57347072; Reserved: 113246208; time used = 3.6039345264434814s
epoch 40: train_loss: 0.35865; Allocated: 57347072; Reserved: 113246208; time used = 3.730462074279785s
epoch 45: train_loss: 0.35592; Allocated: 57347072; Reserved: 113246208; time used = 3.6857504844665527s
epoch 50: train_loss: 0.35790; Allocated: 57347072; Reserved: 113246208; time used = 3.5979108810424805s
epoch 55: train_loss: 0.35685; Allocated: 57347072; Reserved: 113246208; time used = 3.6207785606384277s
epoch 60: train_loss: 0.34879; Allocated: 57347072; Reserved: 113246208; time used = 3.723813772201538s
epoch 65: train_loss: 0.35043; Allocated: 57347072; Reserved: 113246208; time used = 3.6144094467163086s
epoch 70: train_loss: 0.35129; Allocated: 57347072; Reserved: 113246208; time used = 3.592137336730957s
epoch 75: train_loss: 0.35237; Allocated: 57347072; Reserved: 113246208; time used = 3.601365089416504s
epoch 80: train_loss: 0.34550; Allocated: 57347072; Reserved: 113246208; time used = 3.7157413959503174s
epoch 85: train_loss: 0.34759; Allocated: 57347072; Reserved: 113246208; time used = 3.6239559650421143s
epoch 90: train_loss: 0.35240; Allocated: 57347072; Reserved: 113246208; time used = 3.6243326663970947s
epoch 95: train_loss: 0.35005; Allocated: 57347072; Reserved: 113246208; time used = 3.5999882221221924s
epoch 100: train_loss: 0.34530; Allocated: 57347072; Reserved: 113246208; time used = 3.725013017654419s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 78.19223999977112.
Training classifier using 20.00% nodes...
{'micro': 0.6650557620817844, 'macro': 0.5758289350932329, 'samples': 0.6720510894064613, 'weighted': 0.6396494551218156, 'accuracy': 0.6720510894064613}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2459.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 4711.96it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.16104793548584s
epoch 10: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.52948570251465s
epoch 15: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.12917470932007s
epoch 20: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.991512298583984s
epoch 25: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.06012678146362s
epoch 30: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.15682816505432s
epoch 35: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.220083713531494s
epoch 40: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.8997483253479s
epoch 45: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.78185772895813s
epoch 50: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.683106422424316s
epoch 55: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.342320680618286s
epoch 60: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.6003839969635s
epoch 65: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.81928277015686s
epoch 70: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.677953243255615s
epoch 75: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.850895166397095s
epoch 80: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.04385256767273s
epoch 85: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.1988844871521s
epoch 90: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.79921507835388s
epoch 95: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.71786117553711s
epoch 100: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.96598219871521s
epoch 105: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.99937176704407s
epoch 110: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.70368051528931s
epoch 115: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.302196741104126s
epoch 120: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.313053131103516s
epoch 125: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.527080059051514s
epoch 130: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.716355085372925s
epoch 135: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.32115364074707s
epoch 140: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.841798067092896s
epoch 145: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.80161213874817s
epoch 150: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.812601804733276s
epoch 155: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.906877517700195s
epoch 160: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.936333417892456s
epoch 165: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.80835819244385s
epoch 170: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.23844504356384s
epoch 175: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.97697401046753s
epoch 180: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.852391719818115s
epoch 185: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.02149033546448s
epoch 190: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.796175479888916s
epoch 195: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.96511745452881s
epoch 200: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.524701833724976s
epoch 205: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.9183509349823s
epoch 210: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.65395164489746s
epoch 215: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.077200412750244s
epoch 220: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.814470291137695s
epoch 225: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.57680010795593s
epoch 230: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.87256455421448s
epoch 235: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.89101505279541s
epoch 240: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.97862529754639s
epoch 245: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.99358630180359s
epoch 250: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.15286946296692s
epoch 255: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.055500984191895s
epoch 260: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.81450963020325s
epoch 265: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.92551231384277s
epoch 270: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.73849415779114s
epoch 275: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.08818578720093s
epoch 280: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.710739612579346s
epoch 285: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.7987322807312s
epoch 290: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.61835551261902s
epoch 295: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.948893785476685s
epoch 300: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.04882311820984s
epoch 305: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.65703296661377s
epoch 310: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.12943649291992s
epoch 315: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.2666494846344s
epoch 320: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.776204347610474s
epoch 325: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.83077073097229s
epoch 330: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.45526933670044s
epoch 335: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.68184232711792s
epoch 340: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.95127606391907s
epoch 345: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.87624263763428s
epoch 350: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.155144691467285s
epoch 355: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.684072494506836s
epoch 360: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.163811922073364s
epoch 365: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.740143060684204s
epoch 370: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.0495662689209s
epoch 375: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.68996286392212s
epoch 380: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.13469171524048s
epoch 385: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.893497705459595s
epoch 390: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.61285972595215s
epoch 395: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.48165535926819s
epoch 400: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.73352837562561s
epoch 405: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.97976207733154s
epoch 410: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.88117551803589s
epoch 415: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.874897480010986s
epoch 420: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.72950267791748s
epoch 425: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 51.71600151062012s
epoch 430: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.04600381851196s
epoch 435: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.27219557762146s
epoch 440: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.56471228599548s
epoch 445: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.923242807388306s
epoch 450: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.05307650566101s
epoch 455: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 52.20917344093323s
epoch 460: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.147366762161255s
epoch 465: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.926451683044434s
epoch 470: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 52.10093712806702s
epoch 475: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.97273373603821s
epoch 480: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.76342010498047s
epoch 485: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.74055600166321s
epoch 490: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 51.936161279678345s
epoch 495: train_loss: 0.69315; Allocated: 551424; Reserved: 6291456; time used = 51.984737396240234s
epoch 500: train_loss: 0.69315; Allocated: 551424; Reserved: 4194304; time used = 52.21650242805481s
Finished training. Time used = 5195.935968637466.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2418.72it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3149.85it/s]100%|██████████| 2000/2000 [00:00<00:00, 5362.34it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2684505590813.22949; Allocated: 4270592; Reserved: 1216348160; time used = 2049.6146829128265s
epoch 10: train_loss: 639598053349.86963; Allocated: 4270592; Reserved: 1606418432; time used = 2454.755785703659s
epoch 15: train_loss: 765310798914.46313; Allocated: 4270592; Reserved: 794820608; time used = 2637.3568546772003s
epoch 20: train_loss: 33621520789.90857; Allocated: 4270592; Reserved: 1728053248; time used = 2661.1698093414307s
epoch 25: train_loss: 101784573197.36835; Allocated: 4270592; Reserved: 924844032; time used = 2644.825170516968s
epoch 30: train_loss: 104406557394.64365; Allocated: 4270592; Reserved: 656408576; time used = 2817.4589421749115s
epoch 35: train_loss: 114592779712.68596; Allocated: 4270592; Reserved: 819986432; time used = 2888.1060190200806s
epoch 40: train_loss: 24731915613.00313; Allocated: 4270592; Reserved: 1199570944; time used = 2790.4747087955475s
epoch 45: train_loss: 190902789486.91238; Allocated: 4270592; Reserved: 1325400064; time used = 3256.4943947792053s
epoch 50: train_loss: 150791831871.84195; Allocated: 4270592; Reserved: 771751936; time used = 3147.704819917679s
epoch 55: train_loss: 330735646704.45715; Allocated: 4270592; Reserved: 599785472; time used = 3169.536851167679s
epoch 60: train_loss: 478045338899.66534; Allocated: 4270592; Reserved: 333447168; time used = 3075.890282392502s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34785.94830298424.
Training classifier using 80.00% nodes...
{'micro': 0.5, 'macro': 0.35823385958156845, 'samples': 0.5, 'weighted': 0.34918495700166857, 'accuracy': 0.5}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.03540; Allocated: 513536; Reserved: 6291456; time used = 3.195120334625244s
epoch 10: train_loss: 1.52415; Allocated: 513536; Reserved: 6291456; time used = 3.166931629180908s
epoch 15: train_loss: 1.40135; Allocated: 513536; Reserved: 6291456; time used = 3.333960771560669s
epoch 20: train_loss: 1.37896; Allocated: 513536; Reserved: 6291456; time used = 3.1794676780700684s
epoch 25: train_loss: 1.37619; Allocated: 513536; Reserved: 6291456; time used = 3.1718363761901855s
epoch 30: train_loss: 1.38383; Allocated: 513536; Reserved: 6291456; time used = 3.1609160900115967s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.769665479660034.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2374.63it/s] 82%|████████▏ | 1640/2000 [00:00<00:00, 3094.16it/s]100%|██████████| 2000/2000 [00:00<00:00, 5279.40it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 21865462.27870; Allocated: 3928064; Reserved: 29360128; time used = 113.84196996688843s
epoch 10: train_loss: 2308148.64324; Allocated: 3928064; Reserved: 29360128; time used = 113.54904460906982s
epoch 15: train_loss: 740813.28688; Allocated: 3928064; Reserved: 29360128; time used = 114.66502523422241s
epoch 20: train_loss: 24677.05602; Allocated: 3928064; Reserved: 29360128; time used = 113.66360974311829s
epoch 25: train_loss: 1243.48058; Allocated: 3928064; Reserved: 29360128; time used = 114.51781845092773s
epoch 30: train_loss: 76.78980; Allocated: 3928064; Reserved: 29360128; time used = 113.57290506362915s
epoch 35: train_loss: 55.39807; Allocated: 3928064; Reserved: 29360128; time used = 111.63042974472046s
epoch 40: train_loss: 44.44701; Allocated: 3928064; Reserved: 31457280; time used = 113.88076615333557s
epoch 45: train_loss: 33.98548; Allocated: 3928064; Reserved: 29360128; time used = 109.60415148735046s
epoch 50: train_loss: 27.72894; Allocated: 3928064; Reserved: 31457280; time used = 114.65293788909912s
epoch 55: train_loss: 24.35704; Allocated: 3928064; Reserved: 29360128; time used = 113.57014679908752s
epoch 60: train_loss: 21.15865; Allocated: 3928064; Reserved: 29360128; time used = 114.01908373832703s
epoch 65: train_loss: 19.65989; Allocated: 3928064; Reserved: 29360128; time used = 115.78524017333984s
epoch 70: train_loss: 18.47693; Allocated: 3928064; Reserved: 31457280; time used = 114.28612661361694s
epoch 75: train_loss: 16.94779; Allocated: 3928064; Reserved: 29360128; time used = 115.0214056968689s
epoch 80: train_loss: 16.39232; Allocated: 3928064; Reserved: 29360128; time used = 113.77179336547852s
epoch 85: train_loss: 15.80546; Allocated: 3928064; Reserved: 29360128; time used = 113.56702065467834s
epoch 90: train_loss: 16.04258; Allocated: 3928064; Reserved: 29360128; time used = 114.80156445503235s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2052.536861181259.
Training classifier using 80.00% nodes...
{'micro': 0.7925, 'macro': 0.7924883274684202, 'samples': 0.7925, 'weighted': 0.7924416373421006, 'accuracy': 0.7925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2333.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 3477.86it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38650; Allocated: 683520; Reserved: 6291456; time used = 11.3898766040802s
epoch 10: train_loss: 1.38634; Allocated: 683520; Reserved: 6291456; time used = 11.206854343414307s
epoch 15: train_loss: 1.38632; Allocated: 683520; Reserved: 6291456; time used = 11.378869533538818s
epoch 20: train_loss: 1.38629; Allocated: 683520; Reserved: 6291456; time used = 11.443369626998901s
epoch 25: train_loss: 1.38630; Allocated: 683520; Reserved: 6291456; time used = 11.187335014343262s
epoch 30: train_loss: 1.38630; Allocated: 683520; Reserved: 6291456; time used = 11.365916728973389s
epoch 35: train_loss: 1.38629; Allocated: 683520; Reserved: 8388608; time used = 11.396719217300415s
epoch 40: train_loss: 1.38629; Allocated: 683520; Reserved: 6291456; time used = 11.043976545333862s
epoch 45: train_loss: 1.38630; Allocated: 683520; Reserved: 6291456; time used = 11.338942527770996s
epoch 50: train_loss: 1.38629; Allocated: 683520; Reserved: 6291456; time used = 11.312017440795898s
epoch 55: train_loss: 1.38629; Allocated: 683520; Reserved: 8388608; time used = 11.177427291870117s
epoch 60: train_loss: 1.38629; Allocated: 683520; Reserved: 6291456; time used = 11.430024147033691s
epoch 65: train_loss: 1.38629; Allocated: 683520; Reserved: 8388608; time used = 11.357927560806274s
epoch 70: train_loss: 1.38629; Allocated: 683520; Reserved: 8388608; time used = 11.204004287719727s
epoch 75: train_loss: 1.38629; Allocated: 683520; Reserved: 8388608; time used = 11.46798849105835s
epoch 80: train_loss: 1.38629; Allocated: 683520; Reserved: 6291456; time used = 11.380241870880127s
epoch 85: train_loss: 1.38629; Allocated: 683520; Reserved: 6291456; time used = 11.251616954803467s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 202.68653893470764.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2315.41it/s]100%|██████████| 1000/1000 [00:00<00:00, 3457.79it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69304; Allocated: 693760; Reserved: 6291456; time used = 189.43201327323914s
epoch 10: train_loss: 0.69240; Allocated: 693760; Reserved: 6291456; time used = 190.58622479438782s
epoch 15: train_loss: 0.68719; Allocated: 693760; Reserved: 6291456; time used = 188.2918016910553s
epoch 20: train_loss: 0.67876; Allocated: 693760; Reserved: 4194304; time used = 190.95498609542847s
epoch 25: train_loss: 0.64544; Allocated: 693760; Reserved: 4194304; time used = 189.84193348884583s
epoch 30: train_loss: 0.58548; Allocated: 693760; Reserved: 4194304; time used = 186.00885319709778s
epoch 35: train_loss: 0.63240; Allocated: 693760; Reserved: 6291456; time used = 187.32490515708923s
epoch 40: train_loss: 0.56631; Allocated: 693760; Reserved: 4194304; time used = 184.3893003463745s
epoch 45: train_loss: 0.33433; Allocated: 693760; Reserved: 6291456; time used = 188.46161460876465s
epoch 50: train_loss: 0.25668; Allocated: 693760; Reserved: 8388608; time used = 187.07661414146423s
epoch 55: train_loss: 0.14869; Allocated: 693760; Reserved: 8388608; time used = 184.489910364151s
epoch 60: train_loss: 0.79381; Allocated: 693760; Reserved: 6291456; time used = 186.91801571846008s
epoch 65: train_loss: 0.33088; Allocated: 693760; Reserved: 4194304; time used = 187.63953924179077s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2558.3898532390594.
Training classifier using 80.00% nodes...
{'micro': 0.695, 'macro': 0.6946259167480163, 'samples': 0.695, 'weighted': 0.6948396786062926, 'accuracy': 0.695}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.50260; Allocated: 918016; Reserved: 8388608; time used = 1.7747411727905273s
epoch 10: train_loss: 1.57512; Allocated: 918016; Reserved: 8388608; time used = 1.8192205429077148s
epoch 15: train_loss: 1.37981; Allocated: 918016; Reserved: 8388608; time used = 1.8184025287628174s
epoch 20: train_loss: 1.39983; Allocated: 918016; Reserved: 8388608; time used = 1.78594970703125s
epoch 25: train_loss: 1.38108; Allocated: 918016; Reserved: 8388608; time used = 1.7840955257415771s
epoch 30: train_loss: 1.35953; Allocated: 918016; Reserved: 8388608; time used = 1.7555615901947021s
epoch 35: train_loss: 1.34462; Allocated: 918016; Reserved: 8388608; time used = 1.766387939453125s
epoch 40: train_loss: 1.33556; Allocated: 918016; Reserved: 8388608; time used = 1.8057312965393066s
epoch 45: train_loss: 1.33527; Allocated: 918016; Reserved: 8388608; time used = 1.7562611103057861s
epoch 50: train_loss: 1.33192; Allocated: 918016; Reserved: 8388608; time used = 1.7691881656646729s
epoch 55: train_loss: 1.33242; Allocated: 918016; Reserved: 8388608; time used = 1.777306079864502s
epoch 60: train_loss: 1.30870; Allocated: 918016; Reserved: 8388608; time used = 1.819786787033081s
epoch 65: train_loss: 1.32090; Allocated: 918016; Reserved: 8388608; time used = 1.8166389465332031s
epoch 70: train_loss: 1.32129; Allocated: 918016; Reserved: 8388608; time used = 1.8066132068634033s
epoch 75: train_loss: 1.31077; Allocated: 918016; Reserved: 8388608; time used = 1.8637924194335938s
epoch 80: train_loss: 1.33483; Allocated: 918016; Reserved: 8388608; time used = 1.8167002201080322s
epoch 85: train_loss: 1.35050; Allocated: 918016; Reserved: 10485760; time used = 1.8293712139129639s
epoch 90: train_loss: 1.31503; Allocated: 918016; Reserved: 8388608; time used = 1.8112540245056152s
epoch 95: train_loss: 1.32307; Allocated: 918016; Reserved: 8388608; time used = 1.8180298805236816s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.82835364341736.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.46215740507920544, 'samples': 0.5507246376811594, 'weighted': 0.4779729823295543, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.54786; Allocated: 17537536; Reserved: 44040192; time used = 0.8573391437530518s
epoch 10: train_loss: 0.36474; Allocated: 17537536; Reserved: 44040192; time used = 0.81996750831604s
epoch 15: train_loss: 0.24649; Allocated: 17537536; Reserved: 44040192; time used = 0.8338406085968018s
epoch 20: train_loss: 0.21054; Allocated: 17537536; Reserved: 44040192; time used = 0.8221180438995361s
epoch 25: train_loss: 0.20472; Allocated: 17537536; Reserved: 44040192; time used = 0.8293478488922119s
epoch 30: train_loss: 0.74519; Allocated: 17537536; Reserved: 44040192; time used = 0.8248634338378906s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.094717979431152.
Training classifier using 20.00% nodes...
{'micro': 0.4194739270881403, 'macro': 0.193121886738908, 'samples': 0.4194739270881403, 'weighted': 0.2812052552079454, 'accuracy': 0.4194739270881403}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2426.96it/s] 82%|████████▏ | 1637/2000 [00:00<00:00, 3155.49it/s]100%|██████████| 2000/2000 [00:00<00:00, 5343.42it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 921.8773276805878s
epoch 10: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 923.2674908638s
epoch 15: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 920.5503373146057s
epoch 20: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 921.7353003025055s
epoch 25: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 922.0568125247955s
epoch 30: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 922.7868931293488s
epoch 35: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 921.3191568851471s
epoch 40: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 923.1285920143127s
epoch 45: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 920.0217235088348s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8485.240598201752.
Training classifier using 80.00% nodes...
{'micro': 0.735, 'macro': 0.7341959427267485, 'samples': 0.735, 'weighted': 0.7337573660322476, 'accuracy': 0.735}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.57235; Allocated: 40763392; Reserved: 65011712; time used = 3.1607182025909424s
epoch 10: train_loss: 0.33559; Allocated: 40763392; Reserved: 65011712; time used = 2.8805887699127197s
epoch 15: train_loss: 0.20712; Allocated: 40763392; Reserved: 65011712; time used = 2.849618673324585s
epoch 20: train_loss: 0.15441; Allocated: 40763392; Reserved: 65011712; time used = 3.0313944816589355s
epoch 25: train_loss: 0.03888; Allocated: 40763392; Reserved: 65011712; time used = 2.8779265880584717s
epoch 30: train_loss: 0.05529; Allocated: 40763392; Reserved: 65011712; time used = 3.071492910385132s
epoch 35: train_loss: 0.06891; Allocated: 40763392; Reserved: 65011712; time used = 2.8795714378356934s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.665008068084717.
Training classifier using 20.00% nodes...
{'micro': 0.7693039178394827, 'macro': 0.770423208726486, 'samples': 0.7693039178394827, 'weighted': 0.7687459062600649, 'accuracy': 0.7693039178394827}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 6.83566; Allocated: 17467392; Reserved: 44040192; time used = 4.272028684616089s
epoch 10: train_loss: 1.45678; Allocated: 17467392; Reserved: 44040192; time used = 4.271674156188965s
epoch 15: train_loss: 1.39757; Allocated: 17467392; Reserved: 44040192; time used = 4.446521759033203s
epoch 20: train_loss: 1.40339; Allocated: 17467392; Reserved: 44040192; time used = 4.254717111587524s
epoch 25: train_loss: 1.40441; Allocated: 17467392; Reserved: 44040192; time used = 4.273499011993408s
epoch 30: train_loss: 1.40195; Allocated: 17467392; Reserved: 44040192; time used = 4.257814407348633s
epoch 35: train_loss: 1.39750; Allocated: 17467392; Reserved: 44040192; time used = 4.470435857772827s
epoch 40: train_loss: 1.39351; Allocated: 17467392; Reserved: 44040192; time used = 4.277323484420776s
epoch 45: train_loss: 1.38984; Allocated: 17467392; Reserved: 44040192; time used = 4.279977560043335s
epoch 50: train_loss: 1.38813; Allocated: 17467392; Reserved: 44040192; time used = 4.260938405990601s
epoch 55: train_loss: 1.38118; Allocated: 17467392; Reserved: 44040192; time used = 4.423419713973999s
epoch 60: train_loss: 1.37505; Allocated: 17467392; Reserved: 44040192; time used = 4.252926588058472s
epoch 65: train_loss: 1.38219; Allocated: 17467392; Reserved: 44040192; time used = 4.270226240158081s
epoch 70: train_loss: 1.37821; Allocated: 17467392; Reserved: 44040192; time used = 4.271896123886108s
epoch 75: train_loss: 1.37710; Allocated: 17467392; Reserved: 44040192; time used = 4.439682483673096s
epoch 80: train_loss: 1.37593; Allocated: 17467392; Reserved: 44040192; time used = 4.293853759765625s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 72.6203727722168.
Training classifier using 20.00% nodes...
{'micro': 0.29487771112136596, 'macro': 0.06506465736686692, 'samples': 0.29487771112136596, 'weighted': 0.13430282067466348, 'accuracy': 0.29487771112136596}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2852.65it/s] 82%|████████▏ | 1641/2000 [00:00<00:00, 3652.52it/s]100%|██████████| 2000/2000 [00:00<00:00, 5909.49it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2745.75it/s] 82%|████████▏ | 1638/2000 [00:00<00:00, 3528.72it/s]100%|██████████| 2000/2000 [00:00<00:00, 5777.23it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68811; Allocated: 3917824; Reserved: 29360128; time used = 922.803966999054s
epoch 10: train_loss: 0.65310; Allocated: 3917824; Reserved: 29360128; time used = 916.9550375938416s
epoch 15: train_loss: 0.60134; Allocated: 3917824; Reserved: 31457280; time used = 924.9715242385864s
epoch 20: train_loss: 0.51959; Allocated: 3917824; Reserved: 29360128; time used = 923.5513296127319s
epoch 25: train_loss: 0.69315; Allocated: 3917824; Reserved: 29360128; time used = 921.2687411308289s
epoch 30: train_loss: 0.69315; Allocated: 3917824; Reserved: 29360128; time used = 923.2802782058716s
epoch 35: train_loss: 0.69315; Allocated: 3917824; Reserved: 29360128; time used = 923.597220659256s
epoch 40: train_loss: 0.69315; Allocated: 3917824; Reserved: 31457280; time used = 927.4598033428192s
epoch 45: train_loss: 0.69315; Allocated: 3917824; Reserved: 29360128; time used = 925.4087495803833s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8499.30142903328.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2691.36it/s] 82%|████████▏ | 1635/2000 [00:00<00:00, 3464.66it/s]100%|██████████| 2000/2000 [00:00<00:00, 5701.42it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8871402740478516s
epoch 10: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8249030113220215s
epoch 15: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.775710105895996s
epoch 20: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.881481170654297s
epoch 25: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.734192371368408s
epoch 30: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.857795238494873s
epoch 35: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7470974922180176s
epoch 40: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.809420585632324s
epoch 45: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.738633871078491s
epoch 50: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7142229080200195s
epoch 55: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.793394088745117s
epoch 60: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7510766983032227s
epoch 65: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.877464532852173s
epoch 70: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7355408668518066s
epoch 75: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8362691402435303s
epoch 80: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.739280939102173s
epoch 85: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8307387828826904s
epoch 90: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.809487819671631s
epoch 95: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.752413749694824s
epoch 100: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8620288372039795s
epoch 105: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7235336303710938s
epoch 110: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.9483039379119873s
epoch 115: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.854954481124878s
epoch 120: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.849555253982544s
epoch 125: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7734882831573486s
epoch 130: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7334840297698975s
epoch 135: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8348910808563232s
epoch 140: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6959431171417236s
epoch 145: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8998985290527344s
epoch 150: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.684018611907959s
epoch 155: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8753249645233154s
epoch 160: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.776512861251831s
epoch 165: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.836677074432373s
epoch 170: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8338100910186768s
epoch 175: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.735935688018799s
epoch 180: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.80352520942688s
epoch 185: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.682622194290161s
epoch 190: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.9098587036132812s
epoch 195: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7047207355499268s
epoch 200: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.9294307231903076s
epoch 205: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6992883682250977s
epoch 210: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8468050956726074s
epoch 215: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.784092903137207s
epoch 220: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7304322719573975s
epoch 225: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.858379364013672s
epoch 230: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.745452880859375s
epoch 235: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8878111839294434s
epoch 240: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.689643144607544s
epoch 245: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7409892082214355s
epoch 250: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.796473979949951s
epoch 255: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6171092987060547s
epoch 260: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.883653163909912s
epoch 265: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.64626407623291s
epoch 270: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.798920154571533s
epoch 275: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.629312515258789s
epoch 280: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.761723518371582s
epoch 285: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8532094955444336s
epoch 290: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6423676013946533s
epoch 295: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.9222803115844727s
epoch 300: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6503193378448486s
epoch 305: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.879594326019287s
epoch 310: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.592721700668335s
epoch 315: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.81927490234375s
epoch 320: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6707234382629395s
epoch 325: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.75846266746521s
epoch 330: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.734104871749878s
epoch 335: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6316959857940674s
epoch 340: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8274238109588623s
epoch 345: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.640690326690674s
epoch 350: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8595693111419678s
epoch 355: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.572680711746216s
epoch 360: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.702564001083374s
epoch 365: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7152726650238037s
epoch 370: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.649073600769043s
epoch 375: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7647600173950195s
epoch 380: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.617853879928589s
epoch 385: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8106493949890137s
epoch 390: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.661803960800171s
epoch 395: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.759687662124634s
epoch 400: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6323108673095703s
epoch 405: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6415960788726807s
epoch 410: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8668746948242188s
epoch 415: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.647928476333618s
epoch 420: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8196661472320557s
epoch 425: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.58366322517395s
epoch 430: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8397018909454346s
epoch 435: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6364383697509766s
epoch 440: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.751706838607788s
epoch 445: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6649224758148193s
epoch 450: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.6824886798858643s
epoch 455: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.785773754119873s
epoch 460: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.585139513015747s
epoch 465: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.8976402282714844s
epoch 470: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.658205509185791s
epoch 475: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7676331996917725s
epoch 480: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7633614540100098s
epoch 485: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.618992567062378s
epoch 490: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.914991855621338s
epoch 495: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.7537832260131836s
epoch 500: train_loss: 0.69315; Allocated: 53838848; Reserved: 293601280; time used = 3.879451036453247s
Finished training. Time used = 389.9303195476532.
Training classifier using 20.00% nodes...
{'micro': 0.529739776951673, 'macro': 0.45355517593968103, 'samples': 0.5353117956423742, 'weighted': 0.5075190395636805, 'accuracy': 0.5353117956423742}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2161.09it/s] 82%|████████▏ | 1638/2000 [00:00<00:00, 2837.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 4946.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 48710398.91420; Allocated: 3915776; Reserved: 29360128; time used = 1163.6293768882751s
epoch 10: train_loss: 7074103.85395; Allocated: 3915776; Reserved: 31457280; time used = 1159.3551499843597s
epoch 15: train_loss: 1842243.48443; Allocated: 3915776; Reserved: 31457280; time used = 1159.258996963501s
epoch 20: train_loss: 931159.71267; Allocated: 3915776; Reserved: 31457280; time used = 1160.2166244983673s
epoch 25: train_loss: 340669.21982; Allocated: 3915776; Reserved: 29360128; time used = 1160.7389135360718s
epoch 30: train_loss: 30030.95227; Allocated: 3915776; Reserved: 29360128; time used = 1160.137192249298s
epoch 35: train_loss: 4024.89489; Allocated: 3915776; Reserved: 33554432; time used = 1164.2546410560608s
epoch 40: train_loss: 1429.48780; Allocated: 3915776; Reserved: 29360128; time used = 1159.6313862800598s
epoch 45: train_loss: 1.43836; Allocated: 3915776; Reserved: 29360128; time used = 1163.5870881080627s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10687.629152297974.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 32.01266; Allocated: 659456; Reserved: 2097152; time used = 0.6206068992614746s
epoch 10: train_loss: 3.13223; Allocated: 659456; Reserved: 2097152; time used = 0.6125473976135254s
epoch 15: train_loss: 1.49843; Allocated: 659456; Reserved: 2097152; time used = 0.6110134124755859s
epoch 20: train_loss: 1.37106; Allocated: 659456; Reserved: 2097152; time used = 0.6188418865203857s
epoch 25: train_loss: 1.35071; Allocated: 659456; Reserved: 2097152; time used = 0.6180047988891602s
epoch 30: train_loss: 1.30555; Allocated: 659456; Reserved: 2097152; time used = 0.6143388748168945s
epoch 35: train_loss: 1.28530; Allocated: 659456; Reserved: 2097152; time used = 0.6191375255584717s
epoch 40: train_loss: 1.30792; Allocated: 659456; Reserved: 2097152; time used = 0.784771203994751s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.294568061828613.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.4571428571428572, 'samples': 0.5789473684210527, 'weighted': 0.49774436090225566, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2667.63it/s]100%|██████████| 1000/1000 [00:00<00:00, 3893.32it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.69317; Allocated: 632320; Reserved: 10485760; time used = 7.380016326904297s
epoch 10: train_loss: 0.69324; Allocated: 632320; Reserved: 10485760; time used = 7.29511570930481s
epoch 15: train_loss: 0.69309; Allocated: 632320; Reserved: 10485760; time used = 7.436497926712036s
epoch 20: train_loss: 0.69318; Allocated: 632320; Reserved: 10485760; time used = 7.225842714309692s
epoch 25: train_loss: 0.69315; Allocated: 632320; Reserved: 10485760; time used = 7.247121095657349s
epoch 30: train_loss: 0.69315; Allocated: 632320; Reserved: 10485760; time used = 7.236070156097412s
epoch 35: train_loss: 0.69311; Allocated: 632320; Reserved: 10485760; time used = 7.205587863922119s
epoch 40: train_loss: 0.69319; Allocated: 632320; Reserved: 10485760; time used = 7.203558921813965s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 62.238285779953.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2717.88it/s]100%|██████████| 1000/1000 [00:00<00:00, 3968.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69286; Allocated: 628224; Reserved: 6291456; time used = 11.703915357589722s
epoch 10: train_loss: 0.69221; Allocated: 628224; Reserved: 6291456; time used = 11.49323844909668s
epoch 15: train_loss: 0.69231; Allocated: 628224; Reserved: 8388608; time used = 11.67071533203125s
epoch 20: train_loss: 0.69083; Allocated: 628224; Reserved: 6291456; time used = 11.71689486503601s
epoch 25: train_loss: 0.68171; Allocated: 628224; Reserved: 6291456; time used = 11.490595817565918s
epoch 30: train_loss: 0.58001; Allocated: 628224; Reserved: 6291456; time used = 11.66441798210144s
epoch 35: train_loss: 0.45520; Allocated: 628224; Reserved: 6291456; time used = 11.704461097717285s
epoch 40: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.345622539520264s
epoch 45: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.59915041923523s
epoch 50: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.593929290771484s
epoch 55: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.485117673873901s
epoch 60: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.784218072891235s
epoch 65: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.673470973968506s
epoch 70: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.517321109771729s
epoch 75: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.69061827659607s
epoch 80: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.699044704437256s
epoch 85: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.545531511306763s
epoch 90: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.540948867797852s
epoch 95: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.425511598587036s
epoch 100: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.617119073867798s
epoch 105: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.691596984863281s
epoch 110: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.507370948791504s
epoch 115: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.668730020523071s
epoch 120: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.772035598754883s
epoch 125: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.411840677261353s
epoch 130: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.567847728729248s
epoch 135: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.55278468132019s
epoch 140: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.511869668960571s
epoch 145: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.683414220809937s
epoch 150: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.692095279693604s
epoch 155: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.499989748001099s
epoch 160: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.625751733779907s
epoch 165: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.616706848144531s
epoch 170: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.518913745880127s
epoch 175: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.659550189971924s
epoch 180: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.4920654296875s
epoch 185: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.616185188293457s
epoch 190: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.54671025276184s
epoch 195: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.44520902633667s
epoch 200: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.616120338439941s
epoch 205: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.780267000198364s
epoch 210: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.509885787963867s
epoch 215: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.702964305877686s
epoch 220: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.609915494918823s
epoch 225: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.454307794570923s
epoch 230: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.638602495193481s
epoch 235: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.66929006576538s
epoch 240: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.52638840675354s
epoch 245: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.591297626495361s
epoch 250: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.434440612792969s
epoch 255: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.643966674804688s
epoch 260: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.67468786239624s
epoch 265: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.396670579910278s
epoch 270: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.60205364227295s
epoch 275: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.67848014831543s
epoch 280: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.483993768692017s
epoch 285: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.54446268081665s
epoch 290: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.621515035629272s
epoch 295: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.49959421157837s
epoch 300: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.613954067230225s
epoch 305: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.657097339630127s
epoch 310: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.446067571640015s
epoch 315: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.634469032287598s
epoch 320: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.3940589427948s
epoch 325: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.661797523498535s
epoch 330: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.573014497756958s
epoch 335: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.35340666770935s
epoch 340: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.706684589385986s
epoch 345: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.68016242980957s
epoch 350: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.45205307006836s
epoch 355: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.564926862716675s
epoch 360: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.554870128631592s
epoch 365: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.761514663696289s
epoch 370: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.683629035949707s
epoch 375: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.501978635787964s
epoch 380: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.668876647949219s
epoch 385: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.594276905059814s
epoch 390: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.472057580947876s
epoch 395: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.564052820205688s
epoch 400: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.521754026412964s
epoch 405: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.470264434814453s
epoch 410: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.746113777160645s
epoch 415: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.63858675956726s
epoch 420: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.487666845321655s
epoch 425: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.65077805519104s
epoch 430: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.657712459564209s
epoch 435: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.409238576889038s
epoch 440: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.620688438415527s
epoch 445: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.704304218292236s
epoch 450: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.508568286895752s
epoch 455: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.553205966949463s
epoch 460: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.430965900421143s
epoch 465: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.722348690032959s
epoch 470: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.604878187179565s
epoch 475: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.412077188491821s
epoch 480: train_loss: 0.69315; Allocated: 628224; Reserved: 6291456; time used = 11.647049188613892s
epoch 485: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.573099613189697s
epoch 490: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.530300617218018s
epoch 495: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.758552312850952s
epoch 500: train_loss: 0.69315; Allocated: 628224; Reserved: 8388608; time used = 11.571051120758057s
Finished training. Time used = 1162.352378129959.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.45810; Allocated: 917504; Reserved: 4194304; time used = 4.886969089508057s
epoch 10: train_loss: 1.35353; Allocated: 917504; Reserved: 6291456; time used = 4.739934206008911s
epoch 15: train_loss: 1.35275; Allocated: 917504; Reserved: 6291456; time used = 4.862534761428833s
epoch 20: train_loss: 1.30873; Allocated: 917504; Reserved: 6291456; time used = 4.873190879821777s
epoch 25: train_loss: 1.28059; Allocated: 917504; Reserved: 6291456; time used = 4.703007698059082s
epoch 30: train_loss: 1.26671; Allocated: 917504; Reserved: 4194304; time used = 4.8643951416015625s
epoch 35: train_loss: 1.29096; Allocated: 917504; Reserved: 6291456; time used = 4.864620208740234s
epoch 40: train_loss: 1.27606; Allocated: 917504; Reserved: 6291456; time used = 4.687219142913818s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.55784606933594.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6349206349206349, 'samples': 0.6376811594202898, 'weighted': 0.6372210720036807, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.43213; Allocated: 579072; Reserved: 4194304; time used = 3.0126101970672607s
epoch 10: train_loss: 1.28210; Allocated: 579072; Reserved: 4194304; time used = 2.9808387756347656s
epoch 15: train_loss: 1.16288; Allocated: 579072; Reserved: 4194304; time used = 3.080183744430542s
epoch 20: train_loss: 1.25929; Allocated: 579072; Reserved: 4194304; time used = 2.9043729305267334s
epoch 25: train_loss: 1.16862; Allocated: 579072; Reserved: 4194304; time used = 2.934121608734131s
epoch 30: train_loss: 1.14348; Allocated: 579072; Reserved: 4194304; time used = 3.1254022121429443s
epoch 35: train_loss: 1.11724; Allocated: 579072; Reserved: 4194304; time used = 2.9768407344818115s
epoch 40: train_loss: 1.09680; Allocated: 579072; Reserved: 4194304; time used = 2.9251246452331543s
epoch 45: train_loss: 1.07853; Allocated: 579072; Reserved: 4194304; time used = 3.062560796737671s
epoch 50: train_loss: 1.05706; Allocated: 579072; Reserved: 4194304; time used = 2.918470859527588s
epoch 55: train_loss: 1.03664; Allocated: 579072; Reserved: 4194304; time used = 3.071540355682373s
epoch 60: train_loss: 1.01494; Allocated: 579072; Reserved: 4194304; time used = 2.9146151542663574s
epoch 65: train_loss: 1.01914; Allocated: 579072; Reserved: 4194304; time used = 2.916381359100342s
epoch 70: train_loss: 1.01115; Allocated: 579072; Reserved: 4194304; time used = 3.0702950954437256s
epoch 75: train_loss: 1.01137; Allocated: 579072; Reserved: 4194304; time used = 2.9182398319244385s
epoch 80: train_loss: 0.99887; Allocated: 579072; Reserved: 4194304; time used = 2.9269440174102783s
epoch 85: train_loss: 0.98667; Allocated: 579072; Reserved: 4194304; time used = 3.0695016384124756s
epoch 90: train_loss: 0.99039; Allocated: 579072; Reserved: 4194304; time used = 2.926788330078125s
epoch 95: train_loss: 0.97997; Allocated: 579072; Reserved: 4194304; time used = 2.914745807647705s
epoch 100: train_loss: 0.98507; Allocated: 579072; Reserved: 4194304; time used = 3.063828468322754s
epoch 105: train_loss: 0.97443; Allocated: 579072; Reserved: 4194304; time used = 2.928406000137329s
epoch 110: train_loss: 0.98356; Allocated: 579072; Reserved: 4194304; time used = 2.9118001461029053s
epoch 115: train_loss: 0.98010; Allocated: 579072; Reserved: 4194304; time used = 3.0905306339263916s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 73.43048763275146.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69370; Allocated: 41621504; Reserved: 1067450368; time used = 1840.070817232132s
epoch 10: train_loss: 0.69333; Allocated: 41621504; Reserved: 1067450368; time used = 1282.813883304596s
epoch 15: train_loss: 0.69346; Allocated: 41621504; Reserved: 1067450368; time used = 1276.308721780777s
epoch 20: train_loss: 0.69257; Allocated: 41621504; Reserved: 1067450368; time used = 1185.5230889320374s
epoch 25: train_loss: 0.69145; Allocated: 41621504; Reserved: 1067450368; time used = 1220.0097930431366s
epoch 30: train_loss: 0.69178; Allocated: 41621504; Reserved: 1067450368; time used = 1474.8103160858154s
epoch 35: train_loss: 0.71843; Allocated: 41621504; Reserved: 1067450368; time used = 1502.4718325138092s
epoch 40: train_loss: 0.69313; Allocated: 41621504; Reserved: 1067450368; time used = 1535.3726868629456s
epoch 45: train_loss: 0.69314; Allocated: 41621504; Reserved: 1067450368; time used = 1471.6100821495056s
epoch 50: train_loss: 0.69304; Allocated: 41621504; Reserved: 1067450368; time used = 1331.5306928157806s
epoch 55: train_loss: 0.69326; Allocated: 41621504; Reserved: 1067450368; time used = 1086.8531363010406s
epoch 60: train_loss: 0.69303; Allocated: 41621504; Reserved: 1067450368; time used = 1633.609619140625s
epoch 65: train_loss: 0.69313; Allocated: 41621504; Reserved: 1067450368; time used = 1336.3970263004303s
epoch 70: train_loss: 0.69297; Allocated: 41621504; Reserved: 1067450368; time used = 1475.4702124595642s
epoch 75: train_loss: 0.69397; Allocated: 41621504; Reserved: 1067450368; time used = 1318.6329281330109s
epoch 80: train_loss: 0.69331; Allocated: 41621504; Reserved: 1067450368; time used = 1559.901209115982s
epoch 85: train_loss: 0.69330; Allocated: 41621504; Reserved: 1067450368; time used = 1527.3127024173737s
epoch 90: train_loss: 0.69341; Allocated: 41621504; Reserved: 1067450368; time used = 1361.6384902000427s
epoch 95: train_loss: 0.69295; Allocated: 41621504; Reserved: 1067450368; time used = 1378.3415710926056s
epoch 100: train_loss: 0.69309; Allocated: 41621504; Reserved: 1067450368; time used = 1316.130656003952s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30440.745227336884.
Training classifier using 20.00% nodes...
{'micro': 0.7174464308355522, 'macro': 0.7213792120548419, 'samples': 0.7174464308355522, 'weighted': 0.7170228167861243, 'accuracy': 0.7174464308355522}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2698.52it/s]100%|██████████| 1500/1500 [00:00<00:00, 5043.36it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 138977.45679; Allocated: 844288; Reserved: 20971520; time used = 8.468718767166138s
epoch 10: train_loss: 245304.95239; Allocated: 844288; Reserved: 41943040; time used = 8.219627141952515s
epoch 15: train_loss: 93437.97546; Allocated: 844288; Reserved: 20971520; time used = 8.216825485229492s
epoch 20: train_loss: 251030.43207; Allocated: 844288; Reserved: 20971520; time used = 8.199798583984375s
epoch 25: train_loss: 40246.01523; Allocated: 844288; Reserved: 20971520; time used = 8.38788652420044s
epoch 30: train_loss: 44110.28986; Allocated: 844288; Reserved: 41943040; time used = 8.104293823242188s
epoch 35: train_loss: 58782.13776; Allocated: 844288; Reserved: 20971520; time used = 8.145170450210571s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 68.05955910682678.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64102; Allocated: 841728; Reserved: 4194304; time used = 4.09291934967041s
epoch 10: train_loss: 0.63790; Allocated: 841728; Reserved: 6291456; time used = 4.2355382442474365s
epoch 15: train_loss: 0.64343; Allocated: 841728; Reserved: 6291456; time used = 4.156075716018677s
epoch 20: train_loss: 0.62767; Allocated: 841728; Reserved: 4194304; time used = 4.278109788894653s
epoch 25: train_loss: 0.63872; Allocated: 841728; Reserved: 4194304; time used = 4.074761629104614s
epoch 30: train_loss: 0.61852; Allocated: 841728; Reserved: 4194304; time used = 4.246631383895874s
epoch 35: train_loss: 0.63825; Allocated: 841728; Reserved: 4194304; time used = 4.0872392654418945s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 32.77807807922363.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5367121507472385, 'samples': 0.5507246376811594, 'weighted': 0.5425506869697055, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2716.58it/s]100%|██████████| 1000/1000 [00:00<00:00, 3973.16it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 901002.54883; Allocated: 845312; Reserved: 29360128; time used = 6.5152435302734375s
epoch 10: train_loss: 431964.24243; Allocated: 845312; Reserved: 29360128; time used = 6.676602363586426s
epoch 15: train_loss: 38509.69498; Allocated: 845312; Reserved: 29360128; time used = 6.542694330215454s
epoch 20: train_loss: 278280.61664; Allocated: 845312; Reserved: 29360128; time used = 6.474742650985718s
epoch 25: train_loss: 63231.72538; Allocated: 845312; Reserved: 31457280; time used = 6.443848609924316s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.36113381385803.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1497.3367433547974s
epoch 10: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1259.5645959377289s
epoch 15: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1320.9661462306976s
epoch 20: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1254.0969333648682s
epoch 25: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1381.889607667923s
epoch 30: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1356.1135115623474s
epoch 35: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1223.250412940979s
epoch 40: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1219.319254398346s
epoch 45: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1306.431522846222s
epoch 50: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1157.4549453258514s
epoch 55: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1213.4954857826233s
epoch 60: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1124.401239156723s
epoch 65: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1221.856504201889s
epoch 70: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1136.1877737045288s
epoch 75: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1243.47225356102s
epoch 80: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1230.6786353588104s
epoch 85: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1213.5624961853027s
epoch 90: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1206.61074924469s
epoch 95: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1406.06120967865s
epoch 100: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1261.5876235961914s
epoch 105: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1402.1641108989716s
epoch 110: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1177.979987859726s
epoch 115: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1278.775592803955s
epoch 120: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1302.402230978012s
epoch 125: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1244.0721492767334s
epoch 130: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1328.3389701843262s
epoch 135: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1264.9265615940094s
epoch 140: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1165.0692257881165s
epoch 145: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1361.423812866211s
epoch 150: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1324.8188498020172s
epoch 155: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1162.348614692688s
epoch 160: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1186.39621925354s
epoch 165: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1124.4184710979462s
epoch 170: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1299.3181834220886s
epoch 175: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1238.2680554389954s
epoch 180: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1278.9050295352936s
epoch 185: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1190.1014664173126s
epoch 190: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1240.5953691005707s
epoch 195: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1198.1247870922089s
epoch 200: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1126.474568605423s
epoch 205: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1234.959297657013s
epoch 210: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1300.7896876335144s
epoch 215: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1409.4421985149384s
epoch 220: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1266.4070613384247s
epoch 225: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1295.3806626796722s
epoch 230: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1210.2838406562805s
epoch 235: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1227.8935821056366s
epoch 240: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1263.9324405193329s
epoch 245: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1190.735408782959s
epoch 250: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1177.9026634693146s
epoch 255: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1232.8545792102814s
epoch 260: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1209.9321627616882s
epoch 265: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1186.9242458343506s
epoch 270: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1190.209865808487s
epoch 275: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1114.3971853256226s
epoch 280: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1173.9218995571136s
epoch 285: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1148.8805503845215s
epoch 290: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1191.408670425415s
epoch 295: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1298.6360006332397s
epoch 300: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1152.1217880249023s
epoch 305: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1168.076773405075s
epoch 310: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1319.5932438373566s
epoch 315: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1196.3301441669464s
epoch 320: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1257.9173641204834s
epoch 325: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1256.6393616199493s
epoch 330: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1147.513869524002s
epoch 335: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1156.826488494873s
epoch 340: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1196.2743141651154s
epoch 345: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1215.9014818668365s
epoch 350: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1203.349110841751s
epoch 355: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1255.3941111564636s
epoch 360: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1277.7712228298187s
epoch 365: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1133.8051266670227s
epoch 370: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1237.650990486145s
epoch 375: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1310.980958223343s
epoch 380: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 1402.1150546073914s
epoch 385: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 928.3622221946716s
epoch 390: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 464.8081166744232s
epoch 395: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 468.3423421382904s
epoch 400: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 462.7184293270111s
epoch 405: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 468.4020571708679s
epoch 410: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 465.5880002975464s
epoch 415: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 463.55671763420105s
epoch 420: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 475.3466546535492s
epoch 425: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 463.39824318885803s
epoch 430: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 467.6605978012085s
epoch 435: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 465.68974208831787s
epoch 440: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 463.1564688682556s
epoch 445: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 469.83363151550293s
epoch 450: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 461.9771957397461s
epoch 455: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 468.2420268058777s
epoch 460: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 465.4264118671417s
epoch 465: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 461.8061590194702s
epoch 470: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 471.27487778663635s
epoch 475: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 464.9779462814331s
epoch 480: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 467.58828806877136s
epoch 485: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 465.4674651622772s
epoch 490: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 466.1544463634491s
epoch 495: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 469.4157226085663s
epoch 500: train_loss: 0.69315; Allocated: 41172992; Reserved: 1065353216; time used = 461.9930694103241s
Finished training. Time used = 108405.89242982864.
Training classifier using 20.00% nodes...
{'micro': 0.7708254089007227, 'macro': 0.7550065042691249, 'samples': 0.7708254089007227, 'weighted': 0.7691048394347701, 'accuracy': 0.7708254089007227}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 18177642500.52634; Allocated: 53838848; Reserved: 293601280; time used = 3.736567497253418s
epoch 10: train_loss: 18331736068.67163; Allocated: 53838848; Reserved: 293601280; time used = 3.698775053024292s
epoch 15: train_loss: 1245885568.98364; Allocated: 53838848; Reserved: 293601280; time used = 3.650357484817505s
epoch 20: train_loss: 3279574785.19155; Allocated: 53838848; Reserved: 293601280; time used = 3.637232542037964s
epoch 25: train_loss: 126672848.70040; Allocated: 53838848; Reserved: 293601280; time used = 3.6617088317871094s
epoch 30: train_loss: 5286831.22318; Allocated: 53838848; Reserved: 293601280; time used = 3.6869006156921387s
epoch 35: train_loss: 111929224.69575; Allocated: 53838848; Reserved: 293601280; time used = 3.6868953704833984s
epoch 40: train_loss: 333582.66853; Allocated: 53838848; Reserved: 293601280; time used = 3.694648027420044s
epoch 45: train_loss: 1.42932; Allocated: 53838848; Reserved: 293601280; time used = 3.6426260471343994s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 47.20335865020752.
Training classifier using 20.00% nodes...
{'micro': 0.19442379182156136, 'macro': 0.05473574045002617, 'samples': 0.19646882043576258, 'weighted': 0.06486433290490261, 'accuracy': 0.19646882043576258}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2728.52it/s]100%|██████████| 1500/1500 [00:00<00:00, 5078.93it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 20365.37891; Allocated: 643584; Reserved: 6291456; time used = 197.2329444885254s
epoch 10: train_loss: 5618.81628; Allocated: 643584; Reserved: 6291456; time used = 194.79855942726135s
epoch 15: train_loss: 3879.61789; Allocated: 643584; Reserved: 8388608; time used = 194.74397611618042s
epoch 20: train_loss: 5274.72681; Allocated: 643584; Reserved: 6291456; time used = 195.62849140167236s
epoch 25: train_loss: 2165.91782; Allocated: 643584; Reserved: 6291456; time used = 194.09159922599792s
epoch 30: train_loss: 747.78913; Allocated: 643584; Reserved: 6291456; time used = 194.83144521713257s
epoch 35: train_loss: 235.03919; Allocated: 643584; Reserved: 6291456; time used = 193.86504411697388s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1446.3785374164581.
Training classifier using 80.00% nodes...
{'micro': 0.45666666666666667, 'macro': 0.45614714838326353, 'samples': 0.45666666666666667, 'weighted': 0.45360559107462267, 'accuracy': 0.45666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2330.30it/s]100%|██████████| 1500/1500 [00:00<00:00, 4518.47it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69293; Allocated: 497152; Reserved: 6291456; time used = 52.80488467216492s
epoch 10: train_loss: 0.68912; Allocated: 497152; Reserved: 6291456; time used = 52.364155292510986s
epoch 15: train_loss: 0.62124; Allocated: 497152; Reserved: 6291456; time used = 52.720288038253784s
epoch 20: train_loss: 0.68359; Allocated: 497152; Reserved: 4194304; time used = 52.69797945022583s
epoch 25: train_loss: 0.58187; Allocated: 497152; Reserved: 6291456; time used = 52.21217465400696s
epoch 30: train_loss: 0.45583; Allocated: 497152; Reserved: 6291456; time used = 52.59777760505676s
epoch 35: train_loss: 0.42400; Allocated: 497152; Reserved: 6291456; time used = 52.68364429473877s
epoch 40: train_loss: 0.41221; Allocated: 497152; Reserved: 4194304; time used = 52.61222791671753s
epoch 45: train_loss: 0.40552; Allocated: 497152; Reserved: 4194304; time used = 52.735483169555664s
epoch 50: train_loss: 0.40066; Allocated: 497152; Reserved: 6291456; time used = 52.69997239112854s
epoch 55: train_loss: 0.39084; Allocated: 497152; Reserved: 4194304; time used = 52.43035101890564s
epoch 60: train_loss: 0.39075; Allocated: 497152; Reserved: 6291456; time used = 52.593642473220825s
epoch 65: train_loss: 0.38848; Allocated: 497152; Reserved: 6291456; time used = 52.50415754318237s
epoch 70: train_loss: 0.37744; Allocated: 497152; Reserved: 4194304; time used = 52.34892797470093s
epoch 75: train_loss: 0.38252; Allocated: 497152; Reserved: 6291456; time used = 52.532028675079346s
epoch 80: train_loss: 0.37445; Allocated: 497152; Reserved: 4194304; time used = 52.284488677978516s
epoch 85: train_loss: 0.37172; Allocated: 497152; Reserved: 4194304; time used = 52.60964512825012s
epoch 90: train_loss: 0.37253; Allocated: 497152; Reserved: 6291456; time used = 52.92461848258972s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 960.6488358974457.
Training classifier using 80.00% nodes...
{'micro': 0.5166666666666667, 'macro': 0.5109833503330816, 'samples': 0.5166666666666667, 'weighted': 0.5077208889292344, 'accuracy': 0.5166666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.64888; Allocated: 1148928; Reserved: 8388608; time used = 6.75218939781189s
epoch 10: train_loss: 0.44389; Allocated: 1148928; Reserved: 8388608; time used = 6.577303647994995s
epoch 15: train_loss: 0.40330; Allocated: 1148928; Reserved: 6291456; time used = 6.751228332519531s
epoch 20: train_loss: 0.24218; Allocated: 1148928; Reserved: 6291456; time used = 6.685447931289673s
epoch 25: train_loss: 0.14529; Allocated: 1148928; Reserved: 8388608; time used = 6.666954278945923s
epoch 30: train_loss: 0.11916; Allocated: 1148928; Reserved: 8388608; time used = 6.610537528991699s
epoch 35: train_loss: 0.08537; Allocated: 1148928; Reserved: 8388608; time used = 6.658335447311401s
epoch 40: train_loss: 0.13254; Allocated: 1148928; Reserved: 8388608; time used = 6.748012065887451s
epoch 45: train_loss: 0.77161; Allocated: 1148928; Reserved: 8388608; time used = 6.572131633758545s
epoch 50: train_loss: 0.13578; Allocated: 1148928; Reserved: 8388608; time used = 6.718472480773926s
epoch 55: train_loss: 0.10887; Allocated: 1148928; Reserved: 10485760; time used = 6.704739809036255s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 82.18764734268188.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4866071428571428, 'samples': 0.5652173913043478, 'weighted': 0.5011645962732919, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2318.83it/s]100%|██████████| 1000/1000 [00:00<00:00, 3461.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.39300; Allocated: 552448; Reserved: 6291456; time used = 52.24292230606079s
epoch 10: train_loss: 1.38635; Allocated: 552448; Reserved: 6291456; time used = 52.48178815841675s
epoch 15: train_loss: 1.38659; Allocated: 552448; Reserved: 6291456; time used = 52.92482256889343s
epoch 20: train_loss: 1.38632; Allocated: 552448; Reserved: 8388608; time used = 51.883315324783325s
epoch 25: train_loss: 1.38630; Allocated: 552448; Reserved: 6291456; time used = 52.70496392250061s
epoch 30: train_loss: 1.38631; Allocated: 552448; Reserved: 6291456; time used = 52.08544707298279s
epoch 35: train_loss: 1.38630; Allocated: 552448; Reserved: 10485760; time used = 52.877583742141724s
epoch 40: train_loss: 1.38630; Allocated: 552448; Reserved: 8388608; time used = 52.0662362575531s
epoch 45: train_loss: 1.38630; Allocated: 552448; Reserved: 6291456; time used = 52.86516618728638s
epoch 50: train_loss: 1.38630; Allocated: 552448; Reserved: 6291456; time used = 52.33328104019165s
epoch 55: train_loss: 1.38630; Allocated: 552448; Reserved: 6291456; time used = 52.7773060798645s
epoch 60: train_loss: 1.38629; Allocated: 552448; Reserved: 6291456; time used = 52.28207778930664s
epoch 65: train_loss: 1.38630; Allocated: 552448; Reserved: 6291456; time used = 52.43571329116821s
epoch 70: train_loss: 1.38629; Allocated: 552448; Reserved: 8388608; time used = 52.17187833786011s
epoch 75: train_loss: 1.38629; Allocated: 552448; Reserved: 8388608; time used = 52.12740707397461s
epoch 80: train_loss: 1.38629; Allocated: 552448; Reserved: 6291456; time used = 52.25139045715332s
epoch 85: train_loss: 1.38629; Allocated: 552448; Reserved: 8388608; time used = 52.656126737594604s
epoch 90: train_loss: 1.38629; Allocated: 552448; Reserved: 6291456; time used = 52.49502420425415s
epoch 95: train_loss: 1.38629; Allocated: 552448; Reserved: 8388608; time used = 52.711589097976685s
epoch 100: train_loss: 1.38629; Allocated: 552448; Reserved: 8388608; time used = 52.53216314315796s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1073.477545261383.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2281.47it/s]100%|██████████| 1500/1500 [00:00<00:00, 4447.43it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1570.11136; Allocated: 559104; Reserved: 4194304; time used = 12.046002626419067s
epoch 10: train_loss: 153.01389; Allocated: 559104; Reserved: 6291456; time used = 12.021031379699707s
epoch 15: train_loss: 38.87231; Allocated: 559104; Reserved: 8388608; time used = 11.923739433288574s
epoch 20: train_loss: 27.80616; Allocated: 559104; Reserved: 8388608; time used = 12.101580619812012s
epoch 25: train_loss: 3.34752; Allocated: 559104; Reserved: 6291456; time used = 11.965879201889038s
epoch 30: train_loss: 1.36552; Allocated: 559104; Reserved: 6291456; time used = 12.069951057434082s
epoch 35: train_loss: 1.41942; Allocated: 559104; Reserved: 4194304; time used = 11.83566927909851s
epoch 40: train_loss: 1.39454; Allocated: 559104; Reserved: 6291456; time used = 11.995476961135864s
epoch 45: train_loss: 1.38674; Allocated: 559104; Reserved: 6291456; time used = 12.116877794265747s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 116.453622341156.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2278.29it/s] 82%|████████▏ | 1649/2000 [00:00<00:00, 2981.43it/s]100%|██████████| 2000/2000 [00:00<00:00, 5150.80it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 22224694.35287; Allocated: 3928064; Reserved: 29360128; time used = 802.3821065425873s
epoch 10: train_loss: 2271570.14018; Allocated: 3928064; Reserved: 29360128; time used = 799.5879988670349s
epoch 15: train_loss: 745174.44979; Allocated: 3928064; Reserved: 29360128; time used = 801.201014995575s
epoch 20: train_loss: 26753.23067; Allocated: 3928064; Reserved: 31457280; time used = 800.5845093727112s
epoch 25: train_loss: 111.86531; Allocated: 3928064; Reserved: 31457280; time used = 800.6290700435638s
epoch 30: train_loss: 90.04530; Allocated: 3928064; Reserved: 29360128; time used = 805.3447864055634s
epoch 35: train_loss: 65.16861; Allocated: 3928064; Reserved: 31457280; time used = 801.6774640083313s
epoch 40: train_loss: 52.57173; Allocated: 3928064; Reserved: 31457280; time used = 800.0580055713654s
epoch 45: train_loss: 45.03394; Allocated: 3928064; Reserved: 31457280; time used = 802.7131242752075s
epoch 50: train_loss: 40.50559; Allocated: 3928064; Reserved: 31457280; time used = 801.7573006153107s
epoch 55: train_loss: 36.59142; Allocated: 3928064; Reserved: 29360128; time used = 802.7015583515167s
epoch 60: train_loss: 32.75058; Allocated: 3928064; Reserved: 33554432; time used = 802.4779567718506s
epoch 65: train_loss: 28.70511; Allocated: 3928064; Reserved: 29360128; time used = 800.3790802955627s
epoch 70: train_loss: 28.90002; Allocated: 3928064; Reserved: 31457280; time used = 799.9203243255615s
epoch 75: train_loss: 26.58154; Allocated: 3928064; Reserved: 31457280; time used = 803.9836990833282s
epoch 80: train_loss: 25.64435; Allocated: 3928064; Reserved: 33554432; time used = 801.2814698219299s
epoch 85: train_loss: 24.54100; Allocated: 3928064; Reserved: 29360128; time used = 801.011209487915s
epoch 90: train_loss: 22.50309; Allocated: 3928064; Reserved: 31457280; time used = 799.6996610164642s
epoch 95: train_loss: 21.72435; Allocated: 3928064; Reserved: 31457280; time used = 802.2056860923767s
epoch 100: train_loss: 20.89321; Allocated: 3928064; Reserved: 31457280; time used = 804.3790159225464s
epoch 105: train_loss: 20.44426; Allocated: 3928064; Reserved: 31457280; time used = 800.1775550842285s
epoch 110: train_loss: 18.63297; Allocated: 3928064; Reserved: 31457280; time used = 801.3626189231873s
epoch 115: train_loss: 18.84451; Allocated: 3928064; Reserved: 31457280; time used = 800.6408784389496s
epoch 120: train_loss: 17.46464; Allocated: 3928064; Reserved: 29360128; time used = 802.0762372016907s
epoch 125: train_loss: 16.80653; Allocated: 3928064; Reserved: 29360128; time used = 800.6463084220886s
epoch 130: train_loss: 16.60346; Allocated: 3928064; Reserved: 31457280; time used = 798.8822360038757s
epoch 135: train_loss: 16.01085; Allocated: 3928064; Reserved: 31457280; time used = 798.2561490535736s
epoch 140: train_loss: 15.10666; Allocated: 3928064; Reserved: 31457280; time used = 801.6578097343445s
epoch 145: train_loss: 14.57093; Allocated: 3928064; Reserved: 31457280; time used = 804.0392906665802s
epoch 150: train_loss: 14.10748; Allocated: 3928064; Reserved: 31457280; time used = 802.1601543426514s
epoch 155: train_loss: 13.32568; Allocated: 3928064; Reserved: 29360128; time used = 802.9521598815918s
epoch 160: train_loss: 12.85061; Allocated: 3928064; Reserved: 29360128; time used = 801.3658630847931s
epoch 165: train_loss: 11.97908; Allocated: 3928064; Reserved: 33554432; time used = 803.9016573429108s
epoch 170: train_loss: 11.93961; Allocated: 3928064; Reserved: 29360128; time used = 800.3492012023926s
epoch 175: train_loss: 11.23937; Allocated: 3928064; Reserved: 29360128; time used = 800.1493699550629s
epoch 180: train_loss: 10.93725; Allocated: 3928064; Reserved: 31457280; time used = 803.1721458435059s
epoch 185: train_loss: 10.61431; Allocated: 3928064; Reserved: 31457280; time used = 805.0085022449493s
epoch 190: train_loss: 10.28235; Allocated: 3928064; Reserved: 33554432; time used = 801.5157194137573s
epoch 195: train_loss: 9.39886; Allocated: 3928064; Reserved: 29360128; time used = 801.5125617980957s
epoch 200: train_loss: 9.16085; Allocated: 3928064; Reserved: 29360128; time used = 803.4282925128937s
epoch 205: train_loss: 8.70164; Allocated: 3928064; Reserved: 29360128; time used = 802.3261196613312s
epoch 210: train_loss: 8.54100; Allocated: 3928064; Reserved: 31457280; time used = 802.0768551826477s
epoch 215: train_loss: 7.57865; Allocated: 3928064; Reserved: 31457280; time used = 803.1003675460815s
epoch 220: train_loss: 7.74411; Allocated: 3928064; Reserved: 31457280; time used = 802.0763447284698s
epoch 225: train_loss: 7.16000; Allocated: 3928064; Reserved: 29360128; time used = 801.3287312984467s
epoch 230: train_loss: 6.93151; Allocated: 3928064; Reserved: 29360128; time used = 803.9772732257843s
epoch 235: train_loss: 6.49712; Allocated: 3928064; Reserved: 31457280; time used = 803.9287884235382s
epoch 240: train_loss: 6.14251; Allocated: 3928064; Reserved: 31457280; time used = 802.729686498642s
epoch 245: train_loss: 6.04422; Allocated: 3928064; Reserved: 29360128; time used = 802.0996780395508s
epoch 250: train_loss: 5.72276; Allocated: 3928064; Reserved: 29360128; time used = 801.2801430225372s
epoch 255: train_loss: 5.38529; Allocated: 3928064; Reserved: 33554432; time used = 799.3380174636841s
epoch 260: train_loss: 5.18943; Allocated: 3928064; Reserved: 29360128; time used = 799.8680908679962s
epoch 265: train_loss: 5.04226; Allocated: 3928064; Reserved: 29360128; time used = 802.991810798645s
epoch 270: train_loss: 4.78056; Allocated: 3928064; Reserved: 29360128; time used = 798.6558108329773s
epoch 275: train_loss: 4.55193; Allocated: 3928064; Reserved: 29360128; time used = 799.7620484828949s
epoch 280: train_loss: 4.29728; Allocated: 3928064; Reserved: 29360128; time used = 801.8227756023407s
epoch 285: train_loss: 4.19874; Allocated: 3928064; Reserved: 31457280; time used = 801.0973162651062s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 45699.64961504936.
Training classifier using 80.00% nodes...
{'micro': 0.7575, 'macro': 0.7568297620315996, 'samples': 0.7575, 'weighted': 0.7572127551563999, 'accuracy': 0.7575}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 718.57965; Allocated: 53634048; Reserved: 109051904; time used = 0.8777966499328613s
epoch 10: train_loss: 23.70094; Allocated: 53634048; Reserved: 109051904; time used = 0.8983159065246582s
epoch 15: train_loss: 4.01733; Allocated: 53634048; Reserved: 109051904; time used = 0.8750021457672119s
epoch 20: train_loss: 1.42831; Allocated: 53634048; Reserved: 109051904; time used = 0.8883380889892578s
epoch 25: train_loss: 1.38855; Allocated: 53634048; Reserved: 109051904; time used = 0.8792526721954346s
epoch 30: train_loss: 1.38046; Allocated: 53634048; Reserved: 109051904; time used = 0.8716676235198975s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.382067680358887.
Training classifier using 20.00% nodes...
{'micro': 0.23903345724907063, 'macro': 0.12304402422148426, 'samples': 0.24154770848985724, 'weighted': 0.13829538968812874, 'accuracy': 0.24154770848985724}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2804.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4080.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2976.79230; Allocated: 628224; Reserved: 6291456; time used = 52.943437337875366s
epoch 10: train_loss: 888.66664; Allocated: 628224; Reserved: 6291456; time used = 52.731069803237915s
epoch 15: train_loss: 619.01382; Allocated: 628224; Reserved: 6291456; time used = 53.525975942611694s
epoch 20: train_loss: 271.03561; Allocated: 628224; Reserved: 6291456; time used = 52.825024366378784s
epoch 25: train_loss: 128.51318; Allocated: 628224; Reserved: 10485760; time used = 52.970980644226074s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 279.36953496932983.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6749268585431722, 'samples': 0.675, 'weighted': 0.6750243804856092, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2342.07it/s]100%|██████████| 1000/1000 [00:00<00:00, 3485.90it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 26900612.25000; Allocated: 626176; Reserved: 4194304; time used = 35.120118618011475s
epoch 10: train_loss: 3236728.96875; Allocated: 626176; Reserved: 4194304; time used = 34.88069033622742s
epoch 15: train_loss: 824855.03516; Allocated: 626176; Reserved: 6291456; time used = 35.09440207481384s
epoch 20: train_loss: 441210.37891; Allocated: 626176; Reserved: 4194304; time used = 34.80301237106323s
epoch 25: train_loss: 4203.86237; Allocated: 626176; Reserved: 6291456; time used = 34.95965838432312s
epoch 30: train_loss: 1.42867; Allocated: 626176; Reserved: 4194304; time used = 34.62352538108826s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 234.13066220283508.
Training classifier using 80.00% nodes...
{'micro': 0.65, 'macro': 0.6491228070175439, 'samples': 0.65, 'weighted': 0.6487719298245613, 'accuracy': 0.65}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.51776; Allocated: 17592832; Reserved: 41943040; time used = 4.6996009349823s
epoch 10: train_loss: 0.25729; Allocated: 17592832; Reserved: 41943040; time used = 4.8740880489349365s
epoch 15: train_loss: 0.07670; Allocated: 17592832; Reserved: 41943040; time used = 4.723719835281372s
epoch 20: train_loss: 0.01381; Allocated: 17592832; Reserved: 41943040; time used = 4.907891511917114s
epoch 25: train_loss: 0.00651; Allocated: 17592832; Reserved: 41943040; time used = 4.735880613327026s
epoch 30: train_loss: 0.00187; Allocated: 17592832; Reserved: 41943040; time used = 4.916259765625s
epoch 35: train_loss: 0.00033; Allocated: 17592832; Reserved: 41943040; time used = 4.7351484298706055s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.00336146354675.
Training classifier using 20.00% nodes...
{'micro': 0.3511767420396862, 'macro': 0.16063382632107204, 'samples': 0.3511767420396862, 'weighted': 0.2328417459579419, 'accuracy': 0.3511767420396862}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.59060; Allocated: 1064448; Reserved: 6291456; time used = 1.6787190437316895s
epoch 10: train_loss: 0.57739; Allocated: 1064448; Reserved: 6291456; time used = 1.6891765594482422s
epoch 15: train_loss: 0.53300; Allocated: 1064448; Reserved: 6291456; time used = 1.696732997894287s
epoch 20: train_loss: 0.48984; Allocated: 1064448; Reserved: 6291456; time used = 1.6738049983978271s
epoch 25: train_loss: 0.47944; Allocated: 1064448; Reserved: 6291456; time used = 1.6733760833740234s
epoch 30: train_loss: 0.44503; Allocated: 1064448; Reserved: 6291456; time used = 1.698737621307373s
epoch 35: train_loss: 0.47305; Allocated: 1064448; Reserved: 6291456; time used = 1.6702535152435303s
epoch 40: train_loss: 0.43911; Allocated: 1064448; Reserved: 6291456; time used = 1.6823813915252686s
epoch 45: train_loss: 0.43057; Allocated: 1064448; Reserved: 6291456; time used = 1.7010540962219238s
epoch 50: train_loss: 0.37980; Allocated: 1064448; Reserved: 6291456; time used = 1.6629321575164795s
epoch 55: train_loss: 0.45428; Allocated: 1064448; Reserved: 6291456; time used = 1.6981136798858643s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.156110525131226.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.31509; Allocated: 573952; Reserved: 4194304; time used = 0.5730288028717041s
epoch 10: train_loss: 1.23787; Allocated: 573952; Reserved: 4194304; time used = 0.5763900279998779s
epoch 15: train_loss: 1.24514; Allocated: 573952; Reserved: 4194304; time used = 0.5692870616912842s
epoch 20: train_loss: 1.22647; Allocated: 573952; Reserved: 4194304; time used = 0.5654032230377197s
epoch 25: train_loss: 1.23179; Allocated: 573952; Reserved: 4194304; time used = 0.5742251873016357s
epoch 30: train_loss: 1.21632; Allocated: 573952; Reserved: 4194304; time used = 0.5700337886810303s
epoch 35: train_loss: 1.22820; Allocated: 573952; Reserved: 4194304; time used = 0.5750930309295654s
epoch 40: train_loss: 1.22307; Allocated: 573952; Reserved: 4194304; time used = 0.7432763576507568s
epoch 45: train_loss: 1.22066; Allocated: 573952; Reserved: 4194304; time used = 0.5680561065673828s
epoch 50: train_loss: 1.22319; Allocated: 573952; Reserved: 4194304; time used = 0.567579984664917s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.800957679748535.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38736; Allocated: 974848; Reserved: 4194304; time used = 4.1166911125183105s
epoch 10: train_loss: 1.38542; Allocated: 974848; Reserved: 6291456; time used = 4.267920255661011s
epoch 15: train_loss: 1.37245; Allocated: 974848; Reserved: 6291456; time used = 4.11487340927124s
epoch 20: train_loss: 1.33670; Allocated: 974848; Reserved: 4194304; time used = 4.242384672164917s
epoch 25: train_loss: 1.33446; Allocated: 974848; Reserved: 4194304; time used = 4.112142324447632s
epoch 30: train_loss: 1.32646; Allocated: 974848; Reserved: 4194304; time used = 4.287946939468384s
epoch 35: train_loss: 1.33017; Allocated: 974848; Reserved: 4194304; time used = 4.113304615020752s
epoch 40: train_loss: 1.33167; Allocated: 974848; Reserved: 4194304; time used = 4.265108823776245s
epoch 45: train_loss: 1.33191; Allocated: 974848; Reserved: 4194304; time used = 4.151575326919556s
epoch 50: train_loss: 1.33191; Allocated: 974848; Reserved: 4194304; time used = 4.273932218551636s
epoch 55: train_loss: 1.32633; Allocated: 974848; Reserved: 4194304; time used = 4.085784673690796s
epoch 60: train_loss: 1.33490; Allocated: 974848; Reserved: 4194304; time used = 4.285520553588867s
epoch 65: train_loss: 1.32215; Allocated: 974848; Reserved: 4194304; time used = 4.08793306350708s
epoch 70: train_loss: 1.31628; Allocated: 974848; Reserved: 6291456; time used = 4.0976011753082275s
epoch 75: train_loss: 1.32676; Allocated: 974848; Reserved: 4194304; time used = 4.280862808227539s
epoch 80: train_loss: 1.33499; Allocated: 974848; Reserved: 4194304; time used = 4.0998876094818115s
epoch 85: train_loss: 1.31707; Allocated: 974848; Reserved: 6291456; time used = 4.254520416259766s
epoch 90: train_loss: 1.32766; Allocated: 974848; Reserved: 4194304; time used = 4.101152420043945s
epoch 95: train_loss: 1.32604; Allocated: 974848; Reserved: 4194304; time used = 4.248423337936401s
epoch 100: train_loss: 1.31848; Allocated: 974848; Reserved: 6291456; time used = 4.091280460357666s
epoch 105: train_loss: 1.31655; Allocated: 974848; Reserved: 4194304; time used = 4.288346290588379s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 93.91360521316528.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5108695652173914, 'samples': 0.5652173913043478, 'weighted': 0.5226843100189036, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2773.55it/s]100%|██████████| 1000/1000 [00:00<00:00, 4038.66it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.45331; Allocated: 789504; Reserved: 6291456; time used = 4.130717039108276s
epoch 10: train_loss: 0.42618; Allocated: 789504; Reserved: 6291456; time used = 4.311534643173218s
epoch 15: train_loss: 0.41586; Allocated: 789504; Reserved: 8388608; time used = 4.139039754867554s
epoch 20: train_loss: 0.41000; Allocated: 789504; Reserved: 6291456; time used = 4.27070951461792s
epoch 25: train_loss: 0.41075; Allocated: 789504; Reserved: 6291456; time used = 4.172461271286011s
epoch 30: train_loss: 0.40147; Allocated: 789504; Reserved: 6291456; time used = 4.303734064102173s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.32625436782837.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5871794871794872, 'samples': 0.5942028985507246, 'weighted': 0.5910813823857303, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2854.67it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3658.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 5941.00it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2718.15it/s] 82%|████████▏ | 1643/2000 [00:00<00:00, 3498.57it/s]100%|██████████| 2000/2000 [00:00<00:00, 5751.11it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 53972.51896; Allocated: 3985920; Reserved: 31457280; time used = 807.9439377784729s
epoch 10: train_loss: 12845.21082; Allocated: 3985920; Reserved: 31457280; time used = 813.5407822132111s
epoch 15: train_loss: 8140.82579; Allocated: 3985920; Reserved: 31457280; time used = 816.2387583255768s
epoch 20: train_loss: 4055.61538; Allocated: 3985920; Reserved: 31457280; time used = 828.2215292453766s
epoch 25: train_loss: 1515.57476; Allocated: 3985920; Reserved: 29360128; time used = 808.665235042572s
epoch 30: train_loss: 730.71008; Allocated: 3985920; Reserved: 29360128; time used = 815.3423006534576s
epoch 35: train_loss: 393.47400; Allocated: 3985920; Reserved: 31457280; time used = 828.2449769973755s
epoch 40: train_loss: 474.20663; Allocated: 3985920; Reserved: 31457280; time used = 820.8484930992126s
epoch 45: train_loss: 141.08884; Allocated: 3985920; Reserved: 29360128; time used = 819.2561058998108s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8020.906722545624.
Training classifier using 80.00% nodes...
{'micro': 0.7075, 'macro': 0.6936671575846833, 'samples': 0.7075, 'weighted': 0.6917142857142856, 'accuracy': 0.7075}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 7778.93311; Allocated: 17603072; Reserved: 48234496; time used = 3.3457393646240234s
epoch 10: train_loss: 319.58307; Allocated: 17603072; Reserved: 48234496; time used = 3.345503807067871s
epoch 15: train_loss: 1454.04419; Allocated: 17603072; Reserved: 48234496; time used = 3.501024007797241s
epoch 20: train_loss: 216.58531; Allocated: 17603072; Reserved: 48234496; time used = 3.3200981616973877s
epoch 25: train_loss: 103.05796; Allocated: 17603072; Reserved: 48234496; time used = 3.357109308242798s
epoch 30: train_loss: 37.33027; Allocated: 17603072; Reserved: 48234496; time used = 3.3245062828063965s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27.492712259292603.
Training classifier using 20.00% nodes...
{'micro': 0.5196123673281033, 'macro': 0.3881834750964667, 'samples': 0.5196123673281033, 'weighted': 0.45183252205832186, 'accuracy': 0.5196123673281033}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2306.41it/s]100%|██████████| 1000/1000 [00:00<00:00, 3441.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69205; Allocated: 492032; Reserved: 6291456; time used = 35.073339223861694s
epoch 10: train_loss: 0.68537; Allocated: 492032; Reserved: 8388608; time used = 34.813923835754395s
epoch 15: train_loss: 0.68421; Allocated: 492032; Reserved: 8388608; time used = 34.982155323028564s
epoch 20: train_loss: 0.66341; Allocated: 492032; Reserved: 8388608; time used = 34.928611040115356s
epoch 25: train_loss: 0.58182; Allocated: 492032; Reserved: 8388608; time used = 35.07785129547119s
epoch 30: train_loss: 0.61580; Allocated: 492032; Reserved: 6291456; time used = 34.47680926322937s
epoch 35: train_loss: 0.45751; Allocated: 492032; Reserved: 8388608; time used = 34.96825647354126s
epoch 40: train_loss: 0.51048; Allocated: 492032; Reserved: 6291456; time used = 34.83326554298401s
epoch 45: train_loss: 0.21908; Allocated: 492032; Reserved: 8388608; time used = 34.86955666542053s
epoch 50: train_loss: 0.13794; Allocated: 492032; Reserved: 6291456; time used = 34.86926460266113s
epoch 55: train_loss: 0.10969; Allocated: 492032; Reserved: 6291456; time used = 34.95277643203735s
epoch 60: train_loss: 0.08590; Allocated: 492032; Reserved: 6291456; time used = 34.79368805885315s
epoch 65: train_loss: 0.08937; Allocated: 492032; Reserved: 6291456; time used = 35.08445143699646s
epoch 70: train_loss: 0.13605; Allocated: 492032; Reserved: 6291456; time used = 34.80410647392273s
epoch 75: train_loss: 0.20422; Allocated: 492032; Reserved: 6291456; time used = 34.65865468978882s
epoch 80: train_loss: 0.12218; Allocated: 492032; Reserved: 8388608; time used = 34.44437217712402s
epoch 85: train_loss: 0.33408; Allocated: 492032; Reserved: 6291456; time used = 34.60032892227173s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 595.8198027610779.
Training classifier using 80.00% nodes...
{'micro': 0.655, 'macro': 0.6542999574137629, 'samples': 0.655, 'weighted': 0.6539888273754353, 'accuracy': 0.655}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2306.17it/s]100%|██████████| 1500/1500 [00:00<00:00, 4477.69it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2530696.62500; Allocated: 636928; Reserved: 6291456; time used = 196.19359517097473s
epoch 10: train_loss: 1716299.64062; Allocated: 636928; Reserved: 6291456; time used = 197.81795358657837s
epoch 15: train_loss: 3349855.90625; Allocated: 636928; Reserved: 8388608; time used = 195.6366868019104s
epoch 20: train_loss: 682759.60547; Allocated: 636928; Reserved: 6291456; time used = 196.65347599983215s
epoch 25: train_loss: 106282.86035; Allocated: 636928; Reserved: 6291456; time used = 195.772038936615s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1064.2660892009735.
Training classifier using 80.00% nodes...
{'micro': 0.4866666666666667, 'macro': 0.483311589475973, 'samples': 0.4866666666666667, 'weighted': 0.4813122417916939, 'accuracy': 0.4866666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2328.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 4525.53it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 253, in main
    res = task.evaluate(model, res, graph)  # evaluate
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/graph_classification.py", line 21, in evaluate
    return self._classify(dataset, res, 0)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/graph_classification.py", line 34, in _classify
    return clf.train_and_evaluate(dataset, self.train_kwargs()['clf_ratio'], seed=seed)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 80, in train_and_evaluate
    self.train(X_train, Y_train, graph.labels()[1])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 50, in train
    self.clf.fit(X_train, Y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 239, in fit
    for i, column in enumerate(columns))
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 1004, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 835, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 754, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 209, in apply_async
    result = ImmediateResult(func)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 590, in __init__
    self.results = batch()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in __call__
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 79, in _fit_binary
    estimator.fit(X, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py", line 2004, in fit
    accept_large_sparse=solver != 'liblinear')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 755, in check_X_y
    estimator=estimator)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 578, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 60, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69302; Allocated: 1040896; Reserved: 20971520; time used = 15.040043354034424s
epoch 10: train_loss: 0.69306; Allocated: 1040896; Reserved: 20971520; time used = 14.816052675247192s
epoch 15: train_loss: 0.69317; Allocated: 1040896; Reserved: 20971520; time used = 14.90704083442688s
epoch 20: train_loss: 0.69299; Allocated: 1040896; Reserved: 20971520; time used = 14.785213708877563s
epoch 25: train_loss: 0.69301; Allocated: 1040896; Reserved: 20971520; time used = 15.176594972610474s
epoch 30: train_loss: 0.69344; Allocated: 1040896; Reserved: 20971520; time used = 14.895086765289307s
epoch 35: train_loss: 0.69369; Allocated: 1040896; Reserved: 20971520; time used = 15.31233835220337s
epoch 40: train_loss: 0.69323; Allocated: 1040896; Reserved: 20971520; time used = 15.158044576644897s
epoch 45: train_loss: 0.69319; Allocated: 1040896; Reserved: 20971520; time used = 15.046576738357544s
epoch 50: train_loss: 0.69310; Allocated: 1040896; Reserved: 20971520; time used = 15.40348196029663s
epoch 55: train_loss: 0.69316; Allocated: 1040896; Reserved: 20971520; time used = 14.839940309524536s
epoch 60: train_loss: 0.69314; Allocated: 1040896; Reserved: 20971520; time used = 15.171080589294434s
epoch 65: train_loss: 0.69315; Allocated: 1040896; Reserved: 20971520; time used = 14.86490797996521s
epoch 70: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.224041938781738s
epoch 75: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.99473237991333s
epoch 80: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.773478746414185s
epoch 85: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.182035684585571s
epoch 90: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.937140703201294s
epoch 95: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.327376127243042s
epoch 100: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.104818344116211s
epoch 105: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.797480821609497s
epoch 110: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.921732664108276s
epoch 115: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.070121049880981s
epoch 120: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.144002437591553s
epoch 125: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.031623840332031s
epoch 130: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.89350175857544s
epoch 135: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.540411710739136s
epoch 140: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.70768404006958s
epoch 145: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.415823936462402s
epoch 150: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.314964294433594s
epoch 155: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.975655555725098s
epoch 160: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.943432092666626s
epoch 165: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.163021564483643s
epoch 170: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.489523649215698s
epoch 175: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.736250877380371s
epoch 180: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.161853075027466s
epoch 185: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.176180839538574s
epoch 190: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.212512969970703s
epoch 195: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.691230773925781s
epoch 200: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.806973457336426s
epoch 205: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.389162540435791s
epoch 210: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.018378734588623s
epoch 215: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.681434154510498s
epoch 220: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.94372844696045s
epoch 225: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.13131594657898s
epoch 230: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.725516080856323s
epoch 235: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.968459844589233s
epoch 240: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.328246593475342s
epoch 245: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.168713808059692s
epoch 250: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.934157371520996s
epoch 255: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.151418685913086s
epoch 260: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.871712446212769s
epoch 265: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.993653059005737s
epoch 270: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.315521717071533s
epoch 275: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.484944820404053s
epoch 280: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.040861129760742s
epoch 285: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.787408113479614s
epoch 290: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.738905429840088s
epoch 295: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.266944885253906s
epoch 300: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.090611457824707s
epoch 305: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.877054214477539s
epoch 310: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.57266902923584s
epoch 315: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.852433204650879s
epoch 320: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.307209253311157s
epoch 325: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.360517740249634s
epoch 330: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.281100988388062s
epoch 335: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.254964828491211s
epoch 340: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.002164602279663s
epoch 345: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.838541269302368s
epoch 350: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.025402307510376s
epoch 355: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.937122583389282s
epoch 360: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.784925937652588s
epoch 365: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.374807834625244s
epoch 370: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.891631603240967s
epoch 375: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.208027601242065s
epoch 380: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.055808305740356s
epoch 385: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.072160959243774s
epoch 390: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.796023845672607s
epoch 395: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.785411596298218s
epoch 400: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.188735246658325s
epoch 405: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.032955408096313s
epoch 410: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.841075897216797s
epoch 415: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.796426057815552s
epoch 420: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.175458192825317s
epoch 425: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.089125156402588s
epoch 430: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.104608058929443s
epoch 435: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.00239610671997s
epoch 440: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.0636568069458s
epoch 445: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.89193081855774s
epoch 450: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.990989923477173s
epoch 455: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.073671340942383s
epoch 460: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.890784978866577s
epoch 465: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.102015256881714s
epoch 470: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.093338012695312s
epoch 475: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.484437704086304s
epoch 480: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.78494930267334s
epoch 485: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.83602261543274s
epoch 490: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 15.017469644546509s
epoch 495: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.762661933898926s
epoch 500: train_loss: nan; Allocated: 1040896; Reserved: 20971520; time used = 14.901082038879395s
Finished training. Time used = 1509.2478353977203.
Training classifier using 80.00% nodes...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2311.79it/s]100%|██████████| 1500/1500 [00:00<00:00, 4486.57it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.67223; Allocated: 564736; Reserved: 6291456; time used = 194.4781665802002s
epoch 10: train_loss: 0.63461; Allocated: 564736; Reserved: 6291456; time used = 194.58263039588928s
epoch 15: train_loss: 0.67677; Allocated: 564736; Reserved: 8388608; time used = 195.87844562530518s
epoch 20: train_loss: 0.37339; Allocated: 564736; Reserved: 6291456; time used = 196.67266368865967s
epoch 25: train_loss: 0.16367; Allocated: 564736; Reserved: 6291456; time used = 193.2288966178894s
epoch 30: train_loss: 0.18724; Allocated: 564736; Reserved: 8388608; time used = 196.9462432861328s
epoch 35: train_loss: 0.15839; Allocated: 564736; Reserved: 6291456; time used = 195.4285819530487s
epoch 40: train_loss: 0.08819; Allocated: 564736; Reserved: 6291456; time used = 191.77268266677856s
epoch 45: train_loss: 0.08459; Allocated: 564736; Reserved: 6291456; time used = 197.21628737449646s
epoch 50: train_loss: 0.05375; Allocated: 564736; Reserved: 6291456; time used = 194.02718997001648s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2070.116133451462.
Training classifier using 80.00% nodes...
{'micro': 0.5333333333333333, 'macro': 0.5237460251544759, 'samples': 0.5333333333333333, 'weighted': 0.520397280763478, 'accuracy': 0.5333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.546736001968384s
epoch 10: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.56042218208313s
epoch 15: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.570444107055664s
epoch 20: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.534161329269409s
epoch 25: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.498225212097168s
epoch 30: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.539843797683716s
epoch 35: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.539090156555176s
epoch 40: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5594799518585205s
epoch 45: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.539637565612793s
epoch 50: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.4906108379364014s
epoch 55: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5387275218963623s
epoch 60: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5690367221832275s
epoch 65: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.600182056427002s
epoch 70: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.533831834793091s
epoch 75: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.522494316101074s
epoch 80: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5519778728485107s
epoch 85: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5670742988586426s
epoch 90: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.555738687515259s
epoch 95: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5278003215789795s
epoch 100: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.52693510055542s
epoch 105: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.605051279067993s
epoch 110: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.57440185546875s
epoch 115: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5304694175720215s
epoch 120: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.504516839981079s
epoch 125: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.54252028465271s
epoch 130: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5539326667785645s
epoch 135: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.578676223754883s
epoch 140: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5772836208343506s
epoch 145: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5033767223358154s
epoch 150: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5227365493774414s
epoch 155: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5446343421936035s
epoch 160: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.579896926879883s
epoch 165: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5565474033355713s
epoch 170: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5414211750030518s
epoch 175: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5772159099578857s
epoch 180: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5930137634277344s
epoch 185: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5684814453125s
epoch 190: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5543832778930664s
epoch 195: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5612633228302s
epoch 200: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5835821628570557s
epoch 205: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5389113426208496s
epoch 210: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.4663336277008057s
epoch 215: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.428668737411499s
epoch 220: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.467017412185669s
epoch 225: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.492798089981079s
epoch 230: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5057332515716553s
epoch 235: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.4678237438201904s
epoch 240: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5238037109375s
epoch 245: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5534615516662598s
epoch 250: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.523994207382202s
epoch 255: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.512500762939453s
epoch 260: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.431948661804199s
epoch 265: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.507791042327881s
epoch 270: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.483036518096924s
epoch 275: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5614912509918213s
epoch 280: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.4729018211364746s
epoch 285: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.576444387435913s
epoch 290: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5291688442230225s
epoch 295: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.574636459350586s
epoch 300: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.570204019546509s
epoch 305: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5065205097198486s
epoch 310: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6104841232299805s
epoch 315: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5038352012634277s
epoch 320: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5264501571655273s
epoch 325: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6355059146881104s
epoch 330: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.546053409576416s
epoch 335: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.61429762840271s
epoch 340: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.514690399169922s
epoch 345: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.615480422973633s
epoch 350: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5404117107391357s
epoch 355: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.600558280944824s
epoch 360: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.637631893157959s
epoch 365: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5271432399749756s
epoch 370: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6423492431640625s
epoch 375: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5638442039489746s
epoch 380: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6192007064819336s
epoch 385: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6081700325012207s
epoch 390: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6448252201080322s
epoch 395: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.658616781234741s
epoch 400: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.631044626235962s
epoch 405: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6938529014587402s
epoch 410: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.639267683029175s
epoch 415: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6819307804107666s
epoch 420: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6350300312042236s
epoch 425: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.689077615737915s
epoch 430: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.624009132385254s
epoch 435: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.600048542022705s
epoch 440: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.647439479827881s
epoch 445: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5604305267333984s
epoch 450: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.677645683288574s
epoch 455: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6214864253997803s
epoch 460: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.659600019454956s
epoch 465: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6453847885131836s
epoch 470: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5876097679138184s
epoch 475: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6558125019073486s
epoch 480: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6342062950134277s
epoch 485: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.673720121383667s
epoch 490: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.5874733924865723s
epoch 495: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6459457874298096s
epoch 500: train_loss: 0.69315; Allocated: 17682432; Reserved: 297795584; time used = 3.6480207443237305s
Finished training. Time used = 364.95303440093994.
Training classifier using 20.00% nodes...
{'micro': 0.7471158283341025, 'macro': 0.7391928382101194, 'samples': 0.7471158283341024, 'weighted': 0.7459612244323885, 'accuracy': 0.7471158283341024}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.50268; Allocated: 519680; Reserved: 2097152; time used = 0.5845255851745605s
epoch 10: train_loss: 0.48773; Allocated: 519680; Reserved: 2097152; time used = 0.5849604606628418s
epoch 15: train_loss: 0.47011; Allocated: 519680; Reserved: 2097152; time used = 0.5902082920074463s
epoch 20: train_loss: 0.46882; Allocated: 519680; Reserved: 2097152; time used = 0.5815832614898682s
epoch 25: train_loss: 0.45758; Allocated: 519680; Reserved: 2097152; time used = 0.5812382698059082s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.779979944229126.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2756.60it/s]100%|██████████| 1500/1500 [00:00<00:00, 5092.28it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1004914.87500; Allocated: 624640; Reserved: 6291456; time used = 194.05489206314087s
epoch 10: train_loss: 467458.16406; Allocated: 624640; Reserved: 8388608; time used = 193.67113995552063s
epoch 15: train_loss: 442106.44141; Allocated: 624640; Reserved: 8388608; time used = 195.1517140865326s
epoch 20: train_loss: 124296.63379; Allocated: 624640; Reserved: 8388608; time used = 195.20223236083984s
epoch 25: train_loss: 33969.06543; Allocated: 624640; Reserved: 6291456; time used = 193.81962203979492s
epoch 30: train_loss: 3216.00812; Allocated: 624640; Reserved: 6291456; time used = 193.4990634918213s
epoch 35: train_loss: 4412.73117; Allocated: 624640; Reserved: 6291456; time used = 195.00878596305847s
epoch 40: train_loss: 1813.10934; Allocated: 624640; Reserved: 6291456; time used = 191.67508101463318s
epoch 45: train_loss: 460.85283; Allocated: 624640; Reserved: 8388608; time used = 197.6206934452057s
epoch 50: train_loss: 196.01662; Allocated: 624640; Reserved: 4194304; time used = 193.35194563865662s
epoch 55: train_loss: 84.43573; Allocated: 624640; Reserved: 6291456; time used = 194.1542375087738s
epoch 60: train_loss: 42.21643; Allocated: 624640; Reserved: 6291456; time used = 193.85518598556519s
epoch 65: train_loss: 16.14747; Allocated: 624640; Reserved: 6291456; time used = 196.09759759902954s
epoch 70: train_loss: 5.63152; Allocated: 624640; Reserved: 6291456; time used = 196.19192671775818s
epoch 75: train_loss: 1.95450; Allocated: 624640; Reserved: 6291456; time used = 198.9659023284912s
epoch 80: train_loss: 1.87042; Allocated: 624640; Reserved: 6291456; time used = 194.92976117134094s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3275.709320306778.
Training classifier using 80.00% nodes...
{'micro': 0.40333333333333327, 'macro': 0.3383084577114428, 'samples': 0.4033333333333333, 'weighted': 0.33860696517412936, 'accuracy': 0.4033333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2547.53it/s] 82%|████████▏ | 1646/2000 [00:00<00:00, 3300.12it/s]100%|██████████| 2000/2000 [00:00<00:00, 5517.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.3759241104126s
epoch 10: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.25942349433899s
epoch 15: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.05480575561523s
epoch 20: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.94073629379272s
epoch 25: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 82.94958877563477s
epoch 30: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.00435948371887s
epoch 35: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.74013137817383s
epoch 40: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.95909929275513s
epoch 45: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.61904716491699s
epoch 50: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.26911640167236s
epoch 55: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.59187746047974s
epoch 60: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.18731880187988s
epoch 65: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.28467416763306s
epoch 70: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.49481010437012s
epoch 75: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 81.4871118068695s
epoch 80: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.18801832199097s
epoch 85: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.73795819282532s
epoch 90: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.03962564468384s
epoch 95: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.22228407859802s
epoch 100: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 87.4212076663971s
epoch 105: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.55064845085144s
epoch 110: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.69191980361938s
epoch 115: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.49848413467407s
epoch 120: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.7400290966034s
epoch 125: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 87.6379041671753s
epoch 130: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.52692079544067s
epoch 135: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.51925945281982s
epoch 140: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.04186153411865s
epoch 145: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 87.52686214447021s
epoch 150: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.19028186798096s
epoch 155: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.35637092590332s
epoch 160: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.44632339477539s
epoch 165: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.76806974411011s
epoch 170: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.87222003936768s
epoch 175: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.75180220603943s
epoch 180: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.14835000038147s
epoch 185: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.90039873123169s
epoch 190: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.50265741348267s
epoch 195: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.16062593460083s
epoch 200: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.8819990158081s
epoch 205: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 87.07061004638672s
epoch 210: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.44767642021179s
epoch 215: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.7911057472229s
epoch 220: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.87023043632507s
epoch 225: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 82.97516012191772s
epoch 230: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.51156163215637s
epoch 235: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.45394229888916s
epoch 240: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.36533880233765s
epoch 245: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.86225771903992s
epoch 250: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.23411893844604s
epoch 255: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.0702612400055s
epoch 260: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.06441068649292s
epoch 265: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 82.63636469841003s
epoch 270: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.09221196174622s
epoch 275: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.64193081855774s
epoch 280: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.88122916221619s
epoch 285: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.29355359077454s
epoch 290: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.85939645767212s
epoch 295: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.80287432670593s
epoch 300: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.56690955162048s
epoch 305: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.02633857727051s
epoch 310: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.93330264091492s
epoch 315: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.32765698432922s
epoch 320: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.16994881629944s
epoch 325: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.11178660392761s
epoch 330: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.65263748168945s
epoch 335: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.01097512245178s
epoch 340: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.1245288848877s
epoch 345: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 80.7922694683075s
epoch 350: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 82.37558722496033s
epoch 355: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.96895623207092s
epoch 360: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.90347361564636s
epoch 365: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.66006135940552s
epoch 370: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.2938323020935s
epoch 375: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.61878395080566s
epoch 380: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.43441653251648s
epoch 385: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.41024494171143s
epoch 390: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.14777493476868s
epoch 395: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.35578298568726s
epoch 400: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.80477333068848s
epoch 405: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 82.15949320793152s
epoch 410: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.51259779930115s
epoch 415: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.46057772636414s
epoch 420: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.06372833251953s
epoch 425: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.53474497795105s
epoch 430: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.59711527824402s
epoch 435: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.64951300621033s
epoch 440: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.70124983787537s
epoch 445: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 83.5704276561737s
epoch 450: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.05072522163391s
epoch 455: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.65497207641602s
epoch 460: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 87.36347198486328s
epoch 465: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.47428631782532s
epoch 470: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 86.72774982452393s
epoch 475: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.96534562110901s
epoch 480: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.10203170776367s
epoch 485: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.7788200378418s
epoch 490: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 87.37857699394226s
epoch 495: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 85.13236570358276s
epoch 500: train_loss: 0.69315; Allocated: 4132864; Reserved: 31457280; time used = 84.63463807106018s
Finished training. Time used = 8507.284967422485.
Training classifier using 80.00% nodes...
{'micro': 0.495, 'macro': 0.34786117836965297, 'samples': 0.495, 'weighted': 0.33856820016142053, 'accuracy': 0.495}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.08764; Allocated: 717312; Reserved: 4194304; time used = 4.617858409881592s
epoch 10: train_loss: 1.34963; Allocated: 717312; Reserved: 4194304; time used = 4.73040509223938s
epoch 15: train_loss: 1.32798; Allocated: 717312; Reserved: 6291456; time used = 4.740426301956177s
epoch 20: train_loss: 1.22968; Allocated: 717312; Reserved: 6291456; time used = 4.737623453140259s
epoch 25: train_loss: 1.23998; Allocated: 717312; Reserved: 6291456; time used = 4.5652687549591064s
epoch 30: train_loss: 1.22554; Allocated: 717312; Reserved: 6291456; time used = 4.7545485496521s
epoch 35: train_loss: 1.23644; Allocated: 717312; Reserved: 4194304; time used = 4.73136305809021s
epoch 40: train_loss: 1.18371; Allocated: 717312; Reserved: 4194304; time used = 4.561803579330444s
epoch 45: train_loss: 1.20676; Allocated: 717312; Reserved: 4194304; time used = 4.7048258781433105s
epoch 50: train_loss: 1.19941; Allocated: 717312; Reserved: 4194304; time used = 4.697140216827393s
epoch 55: train_loss: 1.23095; Allocated: 717312; Reserved: 6291456; time used = 4.568850517272949s
epoch 60: train_loss: 1.21461; Allocated: 717312; Reserved: 4194304; time used = 4.7443225383758545s
epoch 65: train_loss: 1.21142; Allocated: 717312; Reserved: 6291456; time used = 4.730565309524536s
epoch 70: train_loss: 1.20973; Allocated: 717312; Reserved: 6291456; time used = 4.564465045928955s
epoch 75: train_loss: 1.18474; Allocated: 717312; Reserved: 4194304; time used = 4.699618339538574s
epoch 80: train_loss: 1.16999; Allocated: 717312; Reserved: 6291456; time used = 4.5667195320129395s
epoch 85: train_loss: 1.20661; Allocated: 717312; Reserved: 4194304; time used = 4.711177349090576s
epoch 90: train_loss: 1.20009; Allocated: 717312; Reserved: 4194304; time used = 4.726806163787842s
epoch 95: train_loss: 1.20150; Allocated: 717312; Reserved: 6291456; time used = 4.761607885360718s
epoch 100: train_loss: 1.18681; Allocated: 717312; Reserved: 4194304; time used = 4.560789346694946s
epoch 105: train_loss: 1.17921; Allocated: 717312; Reserved: 6291456; time used = 4.733842611312866s
epoch 110: train_loss: 1.19887; Allocated: 717312; Reserved: 6291456; time used = 4.70592474937439s
epoch 115: train_loss: 1.18241; Allocated: 717312; Reserved: 6291456; time used = 4.562539577484131s
epoch 120: train_loss: 1.17370; Allocated: 717312; Reserved: 6291456; time used = 4.694061756134033s
epoch 125: train_loss: 1.20452; Allocated: 717312; Reserved: 6291456; time used = 4.695175886154175s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 124.10013389587402.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5782929399367756, 'samples': 0.5797101449275363, 'weighted': 0.5800644461752263, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2372.80it/s]100%|██████████| 1500/1500 [00:00<00:00, 4587.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69266; Allocated: 420864; Reserved: 10485760; time used = 194.75966429710388s
epoch 10: train_loss: 0.68321; Allocated: 420864; Reserved: 8388608; time used = 193.78603982925415s
epoch 15: train_loss: 0.64910; Allocated: 420864; Reserved: 8388608; time used = 195.84855270385742s
epoch 20: train_loss: 0.51363; Allocated: 420864; Reserved: 10485760; time used = 195.01127362251282s
epoch 25: train_loss: 0.45544; Allocated: 420864; Reserved: 8388608; time used = 193.5496644973755s
epoch 30: train_loss: 0.44113; Allocated: 420864; Reserved: 8388608; time used = 194.71483278274536s
epoch 35: train_loss: 0.42729; Allocated: 420864; Reserved: 8388608; time used = 194.14342188835144s
epoch 40: train_loss: 0.42147; Allocated: 420864; Reserved: 8388608; time used = 191.69169855117798s
epoch 45: train_loss: 0.41660; Allocated: 420864; Reserved: 8388608; time used = 196.98161220550537s
epoch 50: train_loss: 0.40874; Allocated: 420864; Reserved: 8388608; time used = 193.74509692192078s
epoch 55: train_loss: 0.40486; Allocated: 420864; Reserved: 8388608; time used = 194.11338758468628s
epoch 60: train_loss: 0.40490; Allocated: 420864; Reserved: 8388608; time used = 194.3003511428833s
epoch 65: train_loss: 0.40523; Allocated: 420864; Reserved: 8388608; time used = 195.2865960597992s
epoch 70: train_loss: 0.40499; Allocated: 420864; Reserved: 10485760; time used = 198.31712937355042s
epoch 75: train_loss: 0.40491; Allocated: 420864; Reserved: 8388608; time used = 196.901305437088s
epoch 80: train_loss: 0.40161; Allocated: 420864; Reserved: 8388608; time used = 196.57468843460083s
epoch 85: train_loss: 0.40617; Allocated: 420864; Reserved: 8388608; time used = 194.3894603252411s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3317.831408262253.
Training classifier using 80.00% nodes...
{'micro': 0.49666666666666665, 'macro': 0.4020533363980145, 'samples': 0.49666666666666665, 'weighted': 0.38999173630607403, 'accuracy': 0.49666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2621.62it/s]100%|██████████| 1500/1500 [00:00<00:00, 4943.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.741380929946899s
epoch 10: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.419606685638428s
epoch 15: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4351966381073s
epoch 20: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.516287565231323s
epoch 25: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.737516403198242s
epoch 30: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.425323247909546s
epoch 35: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.405801773071289s
epoch 40: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.402353286743164s
epoch 45: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.587578058242798s
epoch 50: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.395522832870483s
epoch 55: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.380204677581787s
epoch 60: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.604327917098999s
epoch 65: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.49584174156189s
epoch 70: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.501146078109741s
epoch 75: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.443024396896362s
epoch 80: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.685683250427246s
epoch 85: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.434564113616943s
epoch 90: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.510232925415039s
epoch 95: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.649065971374512s
epoch 100: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.499244451522827s
epoch 105: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.386229515075684s
epoch 110: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4615020751953125s
epoch 115: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.698625087738037s
epoch 120: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.487709999084473s
epoch 125: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4653098583221436s
epoch 130: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.500794172286987s
epoch 135: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.7006707191467285s
epoch 140: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.413113355636597s
epoch 145: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.372415065765381s
epoch 150: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.621106863021851s
epoch 155: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.5229809284210205s
epoch 160: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.500402450561523s
epoch 165: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.388230800628662s
epoch 170: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.583026885986328s
epoch 175: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.3914899826049805s
epoch 180: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.3915696144104s
epoch 185: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.57189416885376s
epoch 190: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.393807888031006s
epoch 195: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.404467582702637s
epoch 200: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.392838001251221s
epoch 205: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.6426122188568115s
epoch 210: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4369635581970215s
epoch 215: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.487499237060547s
epoch 220: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.541816473007202s
epoch 225: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.732768297195435s
epoch 230: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.403915882110596s
epoch 235: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.416733741760254s
epoch 240: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.703872203826904s
epoch 245: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.473827123641968s
epoch 250: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.490061521530151s
epoch 255: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.408450126647949s
epoch 260: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.707763433456421s
epoch 265: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.417419910430908s
epoch 270: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.493840217590332s
epoch 275: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.753213167190552s
epoch 280: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.61519718170166s
epoch 285: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.602094650268555s
epoch 290: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.577101469039917s
epoch 295: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.77302885055542s
epoch 300: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.590293884277344s
epoch 305: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.578522443771362s
epoch 310: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.681195259094238s
epoch 315: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4620301723480225s
epoch 320: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.41039252281189s
epoch 325: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.436087131500244s
epoch 330: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.671266317367554s
epoch 335: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4339988231658936s
epoch 340: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.451056003570557s
epoch 345: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4266517162323s
epoch 350: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.574584007263184s
epoch 355: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.448456287384033s
epoch 360: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.466115236282349s
epoch 365: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.6777002811431885s
epoch 370: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.490803003311157s
epoch 375: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.430460214614868s
epoch 380: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.420553684234619s
epoch 385: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.640588283538818s
epoch 390: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.399699449539185s
epoch 395: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4951698780059814s
epoch 400: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.678136825561523s
epoch 405: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.435878038406372s
epoch 410: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.434342384338379s
epoch 415: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.43224835395813s
epoch 420: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.609088897705078s
epoch 425: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.416877746582031s
epoch 430: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.416184902191162s
epoch 435: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.4089436531066895s
epoch 440: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.564588308334351s
epoch 445: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.392858266830444s
epoch 450: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.3898701667785645s
epoch 455: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.643758773803711s
epoch 460: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.3984692096710205s
epoch 465: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.455428123474121s
epoch 470: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.413369178771973s
epoch 475: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.578837871551514s
epoch 480: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.50136661529541s
epoch 485: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.507526159286499s
epoch 490: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.680396795272827s
epoch 495: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.5033135414123535s
epoch 500: train_loss: 0.69315; Allocated: 761856; Reserved: 14680064; time used = 7.40711784362793s
Finished training. Time used = 754.8754045963287.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2318.48it/s] 82%|████████▏ | 1633/2000 [00:00<00:00, 3025.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 5176.43it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40997; Allocated: 19282432; Reserved: 297795584; time used = 3.2987911701202393s
epoch 10: train_loss: 1.38771; Allocated: 19282432; Reserved: 297795584; time used = 3.1007566452026367s
epoch 15: train_loss: 1.38674; Allocated: 19282432; Reserved: 297795584; time used = 3.2100186347961426s
epoch 20: train_loss: 1.38648; Allocated: 19282432; Reserved: 297795584; time used = 3.2714059352874756s
epoch 25: train_loss: 1.38646; Allocated: 19282432; Reserved: 297795584; time used = 2.9976279735565186s
epoch 30: train_loss: 1.38639; Allocated: 19282432; Reserved: 297795584; time used = 3.3595755100250244s
epoch 35: train_loss: 1.38636; Allocated: 19282432; Reserved: 297795584; time used = 3.159545421600342s
epoch 40: train_loss: 1.38631; Allocated: 19282432; Reserved: 297795584; time used = 3.007307291030884s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.10861253738403.
Training classifier using 20.00% nodes...
{'micro': 0.29487771112136596, 'macro': 0.06506465736686692, 'samples': 0.29487771112136596, 'weighted': 0.13430282067466348, 'accuracy': 0.29487771112136596}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.40093; Allocated: 57277440; Reserved: 113246208; time used = 4.096945524215698s
epoch 10: train_loss: 0.16682; Allocated: 57277440; Reserved: 113246208; time used = 4.265435218811035s
epoch 15: train_loss: 0.05329; Allocated: 57277440; Reserved: 113246208; time used = 4.060403823852539s
epoch 20: train_loss: 0.01492; Allocated: 57277440; Reserved: 113246208; time used = 4.20229434967041s
epoch 25: train_loss: 0.00511; Allocated: 57277440; Reserved: 113246208; time used = 4.050618886947632s
epoch 30: train_loss: 0.00085; Allocated: 57277440; Reserved: 113246208; time used = 4.056837320327759s
epoch 35: train_loss: 0.00933; Allocated: 57277440; Reserved: 113246208; time used = 4.242300748825073s
epoch 40: train_loss: 0.00029; Allocated: 57277440; Reserved: 113246208; time used = 4.07130765914917s
epoch 45: train_loss: 0.00023; Allocated: 57277440; Reserved: 113246208; time used = 4.2579193115234375s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.993794679641724.
Training classifier using 20.00% nodes...
{'micro': 0.6486988847583643, 'macro': 0.5777227107218762, 'samples': 0.6555221637866266, 'weighted': 0.6315904516497092, 'accuracy': 0.6555221637866266}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2739.39it/s]100%|██████████| 1000/1000 [00:00<00:00, 3997.18it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.24211430549622s
epoch 10: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.36140537261963s
epoch 15: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.68003916740417s
epoch 20: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 192.5028944015503s
epoch 25: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 192.47786164283752s
epoch 30: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 188.93801164627075s
epoch 35: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.81475496292114s
epoch 40: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.05101871490479s
epoch 45: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.29342198371887s
epoch 50: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.9794478416443s
epoch 55: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 192.51293015480042s
epoch 60: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 191.0231637954712s
epoch 65: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 190.2338523864746s
epoch 70: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 191.53363132476807s
epoch 75: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.07064390182495s
epoch 80: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 191.28965950012207s
epoch 85: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 192.04735565185547s
epoch 90: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 190.70821070671082s
epoch 95: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.60077285766602s
epoch 100: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 187.99073839187622s
epoch 105: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 191.41603803634644s
epoch 110: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.24680995941162s
epoch 115: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 191.16120529174805s
epoch 120: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 194.33829069137573s
epoch 125: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 188.96424221992493s
epoch 130: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.79250073432922s
epoch 135: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.29626202583313s
epoch 140: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 190.615797996521s
epoch 145: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.11894941329956s
epoch 150: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.5666539669037s
epoch 155: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.00875759124756s
epoch 160: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.45993876457214s
epoch 165: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 187.32000374794006s
epoch 170: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 193.08962965011597s
epoch 175: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.73149418830872s
epoch 180: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 192.98500609397888s
epoch 185: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.05207061767578s
epoch 190: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.683908700943s
epoch 195: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 189.47754526138306s
epoch 200: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.96698021888733s
epoch 205: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 192.39987349510193s
epoch 210: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 191.7796893119812s
epoch 215: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 191.54507398605347s
epoch 220: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.01768016815186s
epoch 225: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.51841855049133s
epoch 230: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.70702385902405s
epoch 235: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 187.60114216804504s
epoch 240: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.7180631160736s
epoch 245: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.22824549674988s
epoch 250: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 188.00849652290344s
epoch 255: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.47897267341614s
epoch 260: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 191.8610816001892s
epoch 265: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.46221446990967s
epoch 270: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.2917594909668s
epoch 275: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.63896131515503s
epoch 280: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.5558922290802s
epoch 285: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.33315014839172s
epoch 290: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 184.33025312423706s
epoch 295: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.84886646270752s
epoch 300: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.6052167415619s
epoch 305: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.7847445011139s
epoch 310: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.31279253959656s
epoch 315: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.34035468101501s
epoch 320: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 184.8518316745758s
epoch 325: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.65037059783936s
epoch 330: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 184.96763157844543s
epoch 335: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.56763219833374s
epoch 340: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.49971795082092s
epoch 345: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.6066029071808s
epoch 350: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 184.19955587387085s
epoch 355: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.03880500793457s
epoch 360: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.01660346984863s
epoch 365: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.0236051082611s
epoch 370: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 188.41179156303406s
epoch 375: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.1089894771576s
epoch 380: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.48381638526917s
epoch 385: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 183.79427862167358s
epoch 390: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 184.94313263893127s
epoch 395: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 183.6639530658722s
epoch 400: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.33357501029968s
epoch 405: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.59275555610657s
epoch 410: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.55837059020996s
epoch 415: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.1278853416443s
epoch 420: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.4675486087799s
epoch 425: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.45011949539185s
epoch 430: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.78164863586426s
epoch 435: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 183.97510957717896s
epoch 440: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.7494251728058s
epoch 445: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 191.010418176651s
epoch 450: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.65403270721436s
epoch 455: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 184.376971244812s
epoch 460: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 187.63075590133667s
epoch 465: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 190.45452499389648s
epoch 470: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 187.24337363243103s
epoch 475: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 185.36881303787231s
epoch 480: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 186.12514543533325s
epoch 485: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.0464460849762s
epoch 490: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.8440272808075s
epoch 495: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.68749690055847s
epoch 500: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.15167212486267s
Finished training. Time used = 18819.2934217453.
Training classifier using 80.00% nodes...
{'micro': 0.47500000000000003, 'macro': 0.4743560862056018, 'samples': 0.475, 'weighted': 0.47398813546594576, 'accuracy': 0.475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.47959; Allocated: 41189376; Reserved: 62914560; time used = 0.35233449935913086s
epoch 10: train_loss: 0.01425; Allocated: 41189376; Reserved: 62914560; time used = 0.32692599296569824s
epoch 15: train_loss: 0.00078; Allocated: 41189376; Reserved: 62914560; time used = 0.32623291015625s
epoch 20: train_loss: 0.00005; Allocated: 41189376; Reserved: 62914560; time used = 0.3288235664367676s
epoch 25: train_loss: 0.00001; Allocated: 41189376; Reserved: 62914560; time used = 0.3249027729034424s
epoch 30: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.33545756340026855s
epoch 35: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.33087706565856934s
epoch 40: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.33939552307128906s
epoch 45: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.33655261993408203s
epoch 50: train_loss: 0.00775; Allocated: 41189376; Reserved: 62914560; time used = 0.32482337951660156s
epoch 55: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.3210129737854004s
epoch 60: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.3248767852783203s
epoch 65: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.32049989700317383s
epoch 70: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.32059812545776367s
epoch 75: train_loss: 0.00000; Allocated: 41189376; Reserved: 62914560; time used = 0.31928133964538574s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.945430755615234.
Training classifier using 20.00% nodes...
{'micro': 0.7527577025484975, 'macro': 0.7403150841849827, 'samples': 0.7527577025484975, 'weighted': 0.7526872232940367, 'accuracy': 0.7527577025484975}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.60047; Allocated: 1077248; Reserved: 8388608; time used = 2.4615001678466797s
epoch 10: train_loss: 0.51226; Allocated: 1077248; Reserved: 8388608; time used = 2.361715078353882s
epoch 15: train_loss: 0.40123; Allocated: 1077248; Reserved: 8388608; time used = 2.3110127449035645s
epoch 20: train_loss: 0.25514; Allocated: 1077248; Reserved: 8388608; time used = 2.29514479637146s
epoch 25: train_loss: 0.14511; Allocated: 1077248; Reserved: 8388608; time used = 2.2692904472351074s
epoch 30: train_loss: 0.19129; Allocated: 1077248; Reserved: 8388608; time used = 2.31093430519104s
epoch 35: train_loss: 0.11397; Allocated: 1077248; Reserved: 8388608; time used = 2.2860653400421143s
epoch 40: train_loss: 0.07164; Allocated: 1077248; Reserved: 8388608; time used = 2.2860758304595947s
epoch 45: train_loss: 0.06588; Allocated: 1077248; Reserved: 8388608; time used = 2.351372003555298s
epoch 50: train_loss: 0.05336; Allocated: 1077248; Reserved: 8388608; time used = 2.421121835708618s
epoch 55: train_loss: 0.08952; Allocated: 1077248; Reserved: 8388608; time used = 2.405787467956543s
epoch 60: train_loss: 0.05165; Allocated: 1077248; Reserved: 8388608; time used = 2.3325304985046387s
epoch 65: train_loss: 0.10380; Allocated: 1077248; Reserved: 8388608; time used = 2.3460981845855713s
epoch 70: train_loss: 0.05493; Allocated: 1077248; Reserved: 8388608; time used = 2.3448500633239746s
epoch 75: train_loss: 0.08393; Allocated: 1077248; Reserved: 8388608; time used = 2.331364154815674s
epoch 80: train_loss: 0.02225; Allocated: 1077248; Reserved: 8388608; time used = 2.329887866973877s
epoch 85: train_loss: 0.01876; Allocated: 1077248; Reserved: 8388608; time used = 2.3831987380981445s
epoch 90: train_loss: 0.00323; Allocated: 1077248; Reserved: 8388608; time used = 2.3946733474731445s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 47.40618968009949.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3031.22it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3858.93it/s]100%|██████████| 2000/2000 [00:00<00:00, 6147.12it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3779072; Reserved: 29360128; time used = 766.0594072341919s
epoch 10: train_loss: 0.69315; Allocated: 3779072; Reserved: 31457280; time used = 768.4163014888763s
epoch 15: train_loss: 0.69315; Allocated: 3779072; Reserved: 27262976; time used = 769.1872577667236s
epoch 20: train_loss: 0.69315; Allocated: 3779072; Reserved: 29360128; time used = 770.37540102005s
epoch 25: train_loss: 0.69315; Allocated: 3779072; Reserved: 31457280; time used = 767.1836326122284s
epoch 30: train_loss: 0.69315; Allocated: 3779072; Reserved: 29360128; time used = 772.1411738395691s
epoch 35: train_loss: 0.69315; Allocated: 3779072; Reserved: 29360128; time used = 769.4362590312958s
epoch 40: train_loss: 0.69315; Allocated: 3779072; Reserved: 29360128; time used = 768.6113381385803s
epoch 45: train_loss: 0.69315; Allocated: 3779072; Reserved: 31457280; time used = 765.0187635421753s
epoch 50: train_loss: 0.69315; Allocated: 3779072; Reserved: 27262976; time used = 764.5989344120026s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8143.130023956299.
Training classifier using 80.00% nodes...
{'micro': 0.7225, 'macro': 0.7212298535201009, 'samples': 0.7225, 'weighted': 0.7206653439734793, 'accuracy': 0.7225}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 150.11000; Allocated: 722432; Reserved: 29360128; time used = 1.1018362045288086s
epoch 10: train_loss: 57.82432; Allocated: 722432; Reserved: 29360128; time used = 1.0813257694244385s
epoch 15: train_loss: 15.31786; Allocated: 722432; Reserved: 8388608; time used = 1.0836853981018066s
epoch 20: train_loss: 9.85420; Allocated: 722432; Reserved: 8388608; time used = 1.0831027030944824s
epoch 25: train_loss: 7.92219; Allocated: 722432; Reserved: 8388608; time used = 1.0854723453521729s
epoch 30: train_loss: 4.67387; Allocated: 722432; Reserved: 8388608; time used = 1.0828871726989746s
epoch 35: train_loss: 2.60199; Allocated: 722432; Reserved: 8388608; time used = 1.0831494331359863s
epoch 40: train_loss: 2.03059; Allocated: 722432; Reserved: 10485760; time used = 1.0841081142425537s
epoch 45: train_loss: 1.59829; Allocated: 722432; Reserved: 8388608; time used = 1.0743989944458008s
epoch 50: train_loss: 1.64436; Allocated: 722432; Reserved: 29360128; time used = 1.0785713195800781s
epoch 55: train_loss: 1.46751; Allocated: 722432; Reserved: 8388608; time used = 1.0715656280517578s
epoch 60: train_loss: 1.40124; Allocated: 722432; Reserved: 10485760; time used = 1.0871050357818604s
epoch 65: train_loss: 1.27313; Allocated: 722432; Reserved: 10485760; time used = 1.1621448993682861s
epoch 70: train_loss: 1.17327; Allocated: 722432; Reserved: 8388608; time used = 1.1087615489959717s
epoch 75: train_loss: 1.22811; Allocated: 722432; Reserved: 29360128; time used = 1.1045217514038086s
epoch 80: train_loss: 1.22872; Allocated: 722432; Reserved: 10485760; time used = 1.1123738288879395s
epoch 85: train_loss: 1.18467; Allocated: 722432; Reserved: 10485760; time used = 1.099003791809082s
epoch 90: train_loss: 1.22295; Allocated: 722432; Reserved: 8388608; time used = 1.1082918643951416s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.99437928199768.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8637992831541219, 'samples': 0.868421052631579, 'weighted': 0.8677607998490852, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.43222; Allocated: 53636096; Reserved: 109051904; time used = 4.117078065872192s
epoch 10: train_loss: 0.26324; Allocated: 53636096; Reserved: 109051904; time used = 4.2587890625s
epoch 15: train_loss: 0.15844; Allocated: 53636096; Reserved: 109051904; time used = 4.09335470199585s
epoch 20: train_loss: 0.10409; Allocated: 53636096; Reserved: 109051904; time used = 4.2418200969696045s
epoch 25: train_loss: 0.10703; Allocated: 53636096; Reserved: 109051904; time used = 4.109749794006348s
epoch 30: train_loss: 0.09875; Allocated: 53636096; Reserved: 109051904; time used = 4.096200704574585s
epoch 35: train_loss: 0.07367; Allocated: 53636096; Reserved: 109051904; time used = 4.276673078536987s
epoch 40: train_loss: 0.07398; Allocated: 53636096; Reserved: 109051904; time used = 4.09338116645813s
epoch 45: train_loss: 0.07628; Allocated: 53636096; Reserved: 109051904; time used = 4.239657878875732s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.94373917579651.
Training classifier using 20.00% nodes...
{'micro': 0.2702602230483271, 'macro': 0.1376057146577183, 'samples': 0.2731029301277235, 'weighted': 0.17038698968342553, 'accuracy': 0.2731029301277235}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 2.01067; Allocated: 657920; Reserved: 6291456; time used = 1.1225965023040771s
epoch 10: train_loss: 1.36960; Allocated: 657920; Reserved: 6291456; time used = 1.0814130306243896s
epoch 15: train_loss: 1.24792; Allocated: 657920; Reserved: 6291456; time used = 1.0943691730499268s
epoch 20: train_loss: 1.13084; Allocated: 657920; Reserved: 6291456; time used = 1.075204610824585s
epoch 25: train_loss: 1.08831; Allocated: 657920; Reserved: 6291456; time used = 1.0829954147338867s
epoch 30: train_loss: 1.08965; Allocated: 657920; Reserved: 6291456; time used = 1.0910613536834717s
epoch 35: train_loss: 1.06614; Allocated: 657920; Reserved: 6291456; time used = 1.1027157306671143s
epoch 40: train_loss: 1.04006; Allocated: 657920; Reserved: 6291456; time used = 1.091097354888916s
epoch 45: train_loss: 1.04707; Allocated: 657920; Reserved: 6291456; time used = 1.0873830318450928s
epoch 50: train_loss: 1.05379; Allocated: 657920; Reserved: 6291456; time used = 1.0944550037384033s
epoch 55: train_loss: 1.02801; Allocated: 657920; Reserved: 6291456; time used = 1.0914583206176758s
epoch 60: train_loss: 1.00816; Allocated: 657920; Reserved: 6291456; time used = 1.0931427478790283s
epoch 65: train_loss: 1.00450; Allocated: 657920; Reserved: 6291456; time used = 1.0818517208099365s
epoch 70: train_loss: 1.00896; Allocated: 657920; Reserved: 6291456; time used = 1.0802075862884521s
epoch 75: train_loss: 0.98730; Allocated: 657920; Reserved: 6291456; time used = 1.0952000617980957s
epoch 80: train_loss: 0.98079; Allocated: 657920; Reserved: 6291456; time used = 1.0985636711120605s
epoch 85: train_loss: 0.98928; Allocated: 657920; Reserved: 6291456; time used = 1.0954086780548096s
epoch 90: train_loss: 0.98071; Allocated: 657920; Reserved: 6291456; time used = 1.095320701599121s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.412697076797485.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2877.37it/s]100%|██████████| 1000/1000 [00:00<00:00, 4166.95it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.61034870147705s
epoch 10: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.12997174263s
epoch 15: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.82615756988525s
epoch 20: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.80274152755737s
epoch 25: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.08161854743958s
epoch 30: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 188.79694294929504s
epoch 35: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.365891456604s
epoch 40: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 184.67169427871704s
epoch 45: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.006742477417s
epoch 50: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.2660551071167s
epoch 55: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.23983311653137s
epoch 60: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.23165798187256s
epoch 65: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 188.16641497612s
epoch 70: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.02912378311157s
epoch 75: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 193.34388780593872s
epoch 80: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.7560863494873s
epoch 85: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.32460594177246s
epoch 90: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.81750226020813s
epoch 95: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 185.6467320919037s
epoch 100: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.63896656036377s
epoch 105: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 193.7500035762787s
epoch 110: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.0659577846527s
epoch 115: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.0112144947052s
epoch 120: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.43147468566895s
epoch 125: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.27937054634094s
epoch 130: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.4090051651001s
epoch 135: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 186.51900911331177s
epoch 140: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.38024592399597s
epoch 145: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.75585770606995s
epoch 150: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.3967113494873s
epoch 155: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.9005401134491s
epoch 160: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.70629596710205s
epoch 165: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 186.18515253067017s
epoch 170: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 192.8840651512146s
epoch 175: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 187.81287455558777s
epoch 180: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.60286331176758s
epoch 185: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 186.94252705574036s
epoch 190: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 188.02933025360107s
epoch 195: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.16340970993042s
epoch 200: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.08313870429993s
epoch 205: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.61047863960266s
epoch 210: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.05915093421936s
epoch 215: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 191.47032189369202s
epoch 220: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.14568042755127s
epoch 225: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.70483565330505s
epoch 230: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.88696885108948s
epoch 235: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.3216118812561s
epoch 240: train_loss: 0.69315; Allocated: 683520; Reserved: 10485760; time used = 193.10905718803406s
epoch 245: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 192.71849250793457s
epoch 250: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.6956126689911s
epoch 255: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.91391277313232s
epoch 260: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 192.0249490737915s
epoch 265: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.44862413406372s
epoch 270: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.019522190094s
epoch 275: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 192.3748197555542s
epoch 280: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.79174709320068s
epoch 285: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.61534214019775s
epoch 290: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.09386706352234s
epoch 295: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.20593976974487s
epoch 300: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.88046646118164s
epoch 305: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.30078434944153s
epoch 310: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.94967031478882s
epoch 315: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.42465710639954s
epoch 320: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.2233431339264s
epoch 325: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 193.76595783233643s
epoch 330: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.65498638153076s
epoch 335: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 191.13291668891907s
epoch 340: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.4609067440033s
epoch 345: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.98903799057007s
epoch 350: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.0850546360016s
epoch 355: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 188.64708065986633s
epoch 360: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.51624512672424s
epoch 365: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.2640619277954s
epoch 370: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.812397480011s
epoch 375: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.36332392692566s
epoch 380: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.0318319797516s
epoch 385: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 186.9560408592224s
epoch 390: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.84409642219543s
epoch 395: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 186.95653343200684s
epoch 400: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 187.60278797149658s
epoch 405: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 191.07446789741516s
epoch 410: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 191.25325727462769s
epoch 415: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 193.2751123905182s
epoch 420: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 191.72638154029846s
epoch 425: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 192.76362657546997s
epoch 430: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.5045862197876s
epoch 435: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 187.39340615272522s
epoch 440: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 188.84868812561035s
epoch 445: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.93340134620667s
epoch 450: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.45975065231323s
epoch 455: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.92600011825562s
epoch 460: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 189.21545791625977s
epoch 465: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 190.4465069770813s
epoch 470: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.2677252292633s
epoch 475: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.40157437324524s
epoch 480: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 192.77839970588684s
epoch 485: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 190.9120101928711s
epoch 490: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 195.1578938961029s
epoch 495: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 194.57954144477844s
epoch 500: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 189.45715379714966s
Finished training. Time used = 18993.98700404167.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 15.47734; Allocated: 933888; Reserved: 6291456; time used = 4.2085559368133545s
epoch 10: train_loss: 1.55887; Allocated: 933888; Reserved: 6291456; time used = 4.302677869796753s
epoch 15: train_loss: 1.34074; Allocated: 933888; Reserved: 8388608; time used = 4.138232231140137s
epoch 20: train_loss: 1.30160; Allocated: 933888; Reserved: 6291456; time used = 4.320712089538574s
epoch 25: train_loss: 1.24323; Allocated: 933888; Reserved: 6291456; time used = 4.160270690917969s
epoch 30: train_loss: 1.21333; Allocated: 933888; Reserved: 6291456; time used = 4.2900049686431885s
epoch 35: train_loss: 1.18503; Allocated: 933888; Reserved: 6291456; time used = 4.149015426635742s
epoch 40: train_loss: 1.17153; Allocated: 933888; Reserved: 6291456; time used = 4.315774440765381s
epoch 45: train_loss: 1.17683; Allocated: 933888; Reserved: 6291456; time used = 4.1452319622039795s
epoch 50: train_loss: 1.12987; Allocated: 933888; Reserved: 6291456; time used = 4.309787750244141s
epoch 55: train_loss: 1.11560; Allocated: 933888; Reserved: 6291456; time used = 4.137881755828857s
epoch 60: train_loss: 1.09452; Allocated: 933888; Reserved: 6291456; time used = 4.28538179397583s
epoch 65: train_loss: 1.09316; Allocated: 933888; Reserved: 6291456; time used = 4.14558482170105s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 58.25483441352844.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5740740740740741, 'samples': 0.5942028985507246, 'weighted': 0.5807836822329576, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2785.87it/s] 81%|████████  | 1624/2000 [00:00<00:00, 3570.16it/s]100%|██████████| 2000/2000 [00:00<00:00, 5799.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 35227.55757; Allocated: 3847680; Reserved: 29360128; time used = 919.2605428695679s
epoch 10: train_loss: 10740.71399; Allocated: 3847680; Reserved: 29360128; time used = 921.2754464149475s
epoch 15: train_loss: 3454.70854; Allocated: 3847680; Reserved: 31457280; time used = 916.5017614364624s
epoch 20: train_loss: 1693.43368; Allocated: 3847680; Reserved: 31457280; time used = 918.24076795578s
epoch 25: train_loss: 936.37764; Allocated: 3847680; Reserved: 29360128; time used = 919.2301411628723s
epoch 30: train_loss: 525.65969; Allocated: 3847680; Reserved: 31457280; time used = 919.08567070961s
epoch 35: train_loss: 295.89662; Allocated: 3847680; Reserved: 29360128; time used = 917.334216594696s
epoch 40: train_loss: 183.88689; Allocated: 3847680; Reserved: 29360128; time used = 919.8769693374634s
epoch 45: train_loss: 91.20647; Allocated: 3847680; Reserved: 29360128; time used = 916.975789308548s
epoch 50: train_loss: 59.83582; Allocated: 3847680; Reserved: 31457280; time used = 918.9870789051056s
epoch 55: train_loss: 39.93003; Allocated: 3847680; Reserved: 29360128; time used = 918.4003903865814s
epoch 60: train_loss: 20.59868; Allocated: 3847680; Reserved: 29360128; time used = 919.1565699577332s
epoch 65: train_loss: 11.55742; Allocated: 3847680; Reserved: 29360128; time used = 917.6596553325653s
epoch 70: train_loss: 9.29548; Allocated: 3847680; Reserved: 31457280; time used = 919.0160133838654s
epoch 75: train_loss: 5.85551; Allocated: 3847680; Reserved: 29360128; time used = 917.5818619728088s
epoch 80: train_loss: 3.31212; Allocated: 3847680; Reserved: 31457280; time used = 915.9740810394287s
epoch 85: train_loss: 2.40312; Allocated: 3847680; Reserved: 31457280; time used = 919.2637715339661s
epoch 90: train_loss: 2.21851; Allocated: 3847680; Reserved: 31457280; time used = 919.8732123374939s
epoch 95: train_loss: 1.68966; Allocated: 3847680; Reserved: 29360128; time used = 919.4191288948059s
epoch 100: train_loss: 1.57494; Allocated: 3847680; Reserved: 29360128; time used = 919.4027554988861s
epoch 105: train_loss: 1.42895; Allocated: 3847680; Reserved: 29360128; time used = 918.0806043148041s
epoch 110: train_loss: 1.38595; Allocated: 3847680; Reserved: 29360128; time used = 921.0813982486725s
epoch 115: train_loss: 1.36938; Allocated: 3847680; Reserved: 31457280; time used = 922.1049292087555s
epoch 120: train_loss: 1.36217; Allocated: 3847680; Reserved: 29360128; time used = 924.3769900798798s
epoch 125: train_loss: 1.35244; Allocated: 3847680; Reserved: 29360128; time used = 931.5213432312012s
epoch 130: train_loss: 1.34814; Allocated: 3847680; Reserved: 29360128; time used = 927.8395881652832s
epoch 135: train_loss: 1.34392; Allocated: 3847680; Reserved: 29360128; time used = 903.9118311405182s
epoch 140: train_loss: 1.34399; Allocated: 3847680; Reserved: 29360128; time used = 901.4171056747437s
epoch 145: train_loss: 1.34186; Allocated: 3847680; Reserved: 31457280; time used = 902.6135728359222s
epoch 150: train_loss: 1.34388; Allocated: 3847680; Reserved: 29360128; time used = 918.9197199344635s
epoch 155: train_loss: 1.34306; Allocated: 3847680; Reserved: 31457280; time used = 1000.4142229557037s
epoch 160: train_loss: 1.34274; Allocated: 3847680; Reserved: 29360128; time used = 998.4144973754883s
epoch 165: train_loss: 1.34251; Allocated: 3847680; Reserved: 29360128; time used = 949.9403238296509s
epoch 170: train_loss: 1.34715; Allocated: 3847680; Reserved: 29360128; time used = 907.9651963710785s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31404.853464126587.
Training classifier using 80.00% nodes...
{'micro': 0.69, 'macro': 0.6842453719029309, 'samples': 0.69, 'weighted': 0.6829665656591378, 'accuracy': 0.69}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2444.09it/s] 83%|████████▎ | 1656/2000 [00:00<00:00, 3180.79it/s]100%|██████████| 2000/2000 [00:00<00:00, 5401.25it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9bafe11140>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 918.3430964946747s
epoch 10: train_loss: 0.69315; Allocated: 3975680; Reserved: 33554432; time used = 921.4036185741425s
epoch 15: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 916.9474091529846s
epoch 20: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 924.0349516868591s
epoch 25: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 927.8479657173157s
epoch 30: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 928.4048974514008s
epoch 35: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 920.4438309669495s
epoch 40: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 922.4725000858307s
epoch 45: train_loss: 0.69315; Allocated: 3975680; Reserved: 31457280; time used = 939.7654008865356s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8511.692717075348.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f0ae59a1e60>
head 0
total iter: 500
epoch 5: train_loss: 0.45647; Allocated: 41281536; Reserved: 62914560; time used = 2.544189214706421s
epoch 10: train_loss: 0.20719; Allocated: 41281536; Reserved: 62914560; time used = 2.6373064517974854s
epoch 15: train_loss: 0.11232; Allocated: 41281536; Reserved: 62914560; time used = 2.536700487136841s
epoch 20: train_loss: 0.04301; Allocated: 41281536; Reserved: 62914560; time used = 2.5915777683258057s
epoch 25: train_loss: 0.02089; Allocated: 41281536; Reserved: 62914560; time used = 2.4625260829925537s
epoch 30: train_loss: 0.01460; Allocated: 41281536; Reserved: 62914560; time used = 2.68697452545166s
epoch 35: train_loss: 0.00616; Allocated: 41281536; Reserved: 62914560; time used = 2.560337543487549s
epoch 40: train_loss: 0.02092; Allocated: 41281536; Reserved: 62914560; time used = 2.591305732727051s
epoch 45: train_loss: 0.02051; Allocated: 41281536; Reserved: 62914560; time used = 2.6283130645751953s
epoch 50: train_loss: 0.01084; Allocated: 41281536; Reserved: 62914560; time used = 2.535794496536255s
epoch 55: train_loss: 0.00198; Allocated: 41281536; Reserved: 62914560; time used = 2.545750379562378s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.298566579818726.
Training classifier using 20.00% nodes...
{'micro': 0.7557372892100925, 'macro': 0.7576628470266688, 'samples': 0.7557372892100925, 'weighted': 0.7536720239142193, 'accuracy': 0.7557372892100925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f29ed0057d0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41070; Allocated: 934400; Reserved: 6291456; time used = 1.7669343948364258s
epoch 10: train_loss: 1.08129; Allocated: 934400; Reserved: 6291456; time used = 1.7501769065856934s
epoch 15: train_loss: 0.88339; Allocated: 934400; Reserved: 6291456; time used = 1.736842155456543s
epoch 20: train_loss: 0.81213; Allocated: 934400; Reserved: 6291456; time used = 1.7227776050567627s
epoch 25: train_loss: 0.68854; Allocated: 934400; Reserved: 6291456; time used = 1.7483596801757812s
epoch 30: train_loss: 0.66933; Allocated: 934400; Reserved: 6291456; time used = 1.74025559425354s
epoch 35: train_loss: 0.64535; Allocated: 934400; Reserved: 6291456; time used = 1.785785436630249s
epoch 40: train_loss: 0.61324; Allocated: 934400; Reserved: 6291456; time used = 1.733388900756836s
epoch 45: train_loss: 0.57079; Allocated: 934400; Reserved: 6291456; time used = 1.7282629013061523s
epoch 50: train_loss: 0.56405; Allocated: 934400; Reserved: 6291456; time used = 1.7221651077270508s
epoch 55: train_loss: 0.55396; Allocated: 934400; Reserved: 6291456; time used = 1.7218966484069824s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.63272452354431.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.6801346801346801, 'samples': 0.7368421052631579, 'weighted': 0.7013999645578592, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3011.11it/s] 83%|████████▎ | 1656/2000 [00:00<00:00, 3839.76it/s]100%|██████████| 2000/2000 [00:00<00:00, 6149.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f7349300140>
total iter: 500
epoch 5: train_loss: 0.68895; Allocated: 3917824; Reserved: 29360128; time used = 1140.0022344589233s
epoch 10: train_loss: 0.64381; Allocated: 3917824; Reserved: 31457280; time used = 1137.3022694587708s
epoch 15: train_loss: 0.60601; Allocated: 3917824; Reserved: 29360128; time used = 1237.1671731472015s
epoch 20: train_loss: 0.48858; Allocated: 3917824; Reserved: 33554432; time used = 1295.7968924045563s
epoch 25: train_loss: 0.26566; Allocated: 3917824; Reserved: 29360128; time used = 1235.9846200942993s
epoch 30: train_loss: 0.69315; Allocated: 3917824; Reserved: 31457280; time used = 1209.2113258838654s
epoch 35: train_loss: 0.61404; Allocated: 3917824; Reserved: 29360128; time used = 1286.4750061035156s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8546.598154306412.
Training classifier using 80.00% nodes...
{'micro': 0.7075, 'macro': 0.695627573020116, 'samples': 0.7075, 'weighted': 0.6938241663902602, 'accuracy': 0.7075}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f02ed70e780>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.28633; Allocated: 932352; Reserved: 8388608; time used = 1.8136672973632812s
epoch 10: train_loss: 1.11063; Allocated: 932352; Reserved: 8388608; time used = 1.748265027999878s
epoch 15: train_loss: 0.89949; Allocated: 932352; Reserved: 8388608; time used = 1.7648658752441406s
epoch 20: train_loss: 0.87085; Allocated: 932352; Reserved: 8388608; time used = 1.7468924522399902s
epoch 25: train_loss: 0.81032; Allocated: 932352; Reserved: 8388608; time used = 1.7728288173675537s
epoch 30: train_loss: 0.74177; Allocated: 932352; Reserved: 8388608; time used = 1.7469394207000732s
epoch 35: train_loss: 0.70134; Allocated: 932352; Reserved: 8388608; time used = 1.7556283473968506s
epoch 40: train_loss: 0.60726; Allocated: 932352; Reserved: 8388608; time used = 1.7521140575408936s
epoch 45: train_loss: 0.60611; Allocated: 932352; Reserved: 8388608; time used = 1.7464184761047363s
epoch 50: train_loss: 0.56490; Allocated: 932352; Reserved: 8388608; time used = 1.7532827854156494s
epoch 55: train_loss: 0.58715; Allocated: 932352; Reserved: 8388608; time used = 1.7490224838256836s
epoch 60: train_loss: 0.56768; Allocated: 932352; Reserved: 8388608; time used = 1.7479815483093262s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.074370861053467.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5856683820>
total iter: 500
epoch 5: train_loss: 0.52234; Allocated: 519680; Reserved: 4194304; time used = 4.304574489593506s
epoch 10: train_loss: 0.49868; Allocated: 519680; Reserved: 4194304; time used = 4.323811769485474s
epoch 15: train_loss: 0.50429; Allocated: 519680; Reserved: 4194304; time used = 4.402898550033569s
epoch 20: train_loss: 0.49033; Allocated: 519680; Reserved: 4194304; time used = 4.233057737350464s
epoch 25: train_loss: 0.48079; Allocated: 519680; Reserved: 4194304; time used = 4.367288112640381s
epoch 30: train_loss: 0.48014; Allocated: 519680; Reserved: 4194304; time used = 4.224661827087402s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.454851150512695.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.856386999244142, 'samples': 0.868421052631579, 'weighted': 0.8629510283645622, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f50b084ddc0>
total iter: 500
epoch 5: train_loss: 0.39934; Allocated: 17399296; Reserved: 44040192; time used = 4.378195524215698s
epoch 10: train_loss: 0.38959; Allocated: 17399296; Reserved: 44040192; time used = 4.336200714111328s
epoch 15: train_loss: 0.38393; Allocated: 17399296; Reserved: 44040192; time used = 4.51288628578186s
epoch 20: train_loss: 0.38731; Allocated: 17399296; Reserved: 44040192; time used = 4.3103251457214355s
epoch 25: train_loss: 0.37926; Allocated: 17399296; Reserved: 44040192; time used = 4.375710487365723s
epoch 30: train_loss: 0.37485; Allocated: 17399296; Reserved: 44040192; time used = 4.358240365982056s
epoch 35: train_loss: 0.37283; Allocated: 17399296; Reserved: 44040192; time used = 4.488828420639038s
epoch 40: train_loss: 0.36472; Allocated: 17399296; Reserved: 44040192; time used = 4.351674556732178s
epoch 45: train_loss: 0.37541; Allocated: 17399296; Reserved: 44040192; time used = 4.321654796600342s
epoch 50: train_loss: 0.36283; Allocated: 17399296; Reserved: 44040192; time used = 4.329625129699707s
epoch 55: train_loss: 0.36783; Allocated: 17399296; Reserved: 44040192; time used = 4.483227252960205s
epoch 60: train_loss: 0.37399; Allocated: 17399296; Reserved: 44040192; time used = 4.354575157165527s
epoch 65: train_loss: 0.36683; Allocated: 17399296; Reserved: 44040192; time used = 4.3516316413879395s
epoch 70: train_loss: 0.36815; Allocated: 17399296; Reserved: 44040192; time used = 4.33882212638855s
epoch 75: train_loss: 0.36186; Allocated: 17399296; Reserved: 44040192; time used = 4.513578414916992s
epoch 80: train_loss: 0.36307; Allocated: 17399296; Reserved: 44040192; time used = 4.342718839645386s
epoch 85: train_loss: 0.35588; Allocated: 17399296; Reserved: 44040192; time used = 4.323954105377197s
epoch 90: train_loss: 0.36595; Allocated: 17399296; Reserved: 44040192; time used = 4.309276342391968s
epoch 95: train_loss: 0.36375; Allocated: 17399296; Reserved: 44040192; time used = 4.478436470031738s
epoch 100: train_loss: 0.36325; Allocated: 17399296; Reserved: 44040192; time used = 4.336377382278442s
epoch 105: train_loss: 0.36381; Allocated: 17399296; Reserved: 44040192; time used = 4.36721134185791s
epoch 110: train_loss: 0.36589; Allocated: 17399296; Reserved: 44040192; time used = 4.325640916824341s
epoch 115: train_loss: 0.35908; Allocated: 17399296; Reserved: 44040192; time used = 4.472741603851318s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 106.88910841941833.
Training classifier using 20.00% nodes...
{'micro': 0.8241808952468851, 'macro': 0.8069449867425472, 'samples': 0.8241808952468851, 'weighted': 0.8237741951116965, 'accuracy': 0.8241808952468851}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2434.84it/s]100%|██████████| 1500/1500 [00:00<00:00, 4689.58it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f29c43d6370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fae532b37d0>
total iter: 500
epoch 5: train_loss: 4.03605; Allocated: 647168; Reserved: 6291456; time used = 4.364019393920898s
epoch 10: train_loss: 1.75989; Allocated: 647168; Reserved: 6291456; time used = 4.306299924850464s
epoch 15: train_loss: 1.37898; Allocated: 647168; Reserved: 6291456; time used = 4.463781356811523s
epoch 20: train_loss: 1.37197; Allocated: 647168; Reserved: 6291456; time used = 4.332456588745117s
epoch 25: train_loss: 1.36224; Allocated: 647168; Reserved: 6291456; time used = 4.458728551864624s
epoch 30: train_loss: 1.34301; Allocated: 647168; Reserved: 6291456; time used = 4.307215452194214s
epoch 35: train_loss: 1.29089; Allocated: 647168; Reserved: 6291456; time used = 4.306852579116821s
epoch 40: train_loss: 1.27771; Allocated: 647168; Reserved: 6291456; time used = 4.352328538894653s
epoch 45: train_loss: 1.26415; Allocated: 647168; Reserved: 6291456; time used = 4.474750518798828s
epoch 50: train_loss: 1.23147; Allocated: 647168; Reserved: 6291456; time used = 4.316728830337524s
epoch 55: train_loss: 1.23301; Allocated: 647168; Reserved: 6291456; time used = 4.3163182735443115s
epoch 60: train_loss: 1.20828; Allocated: 647168; Reserved: 6291456; time used = 4.328648090362549s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 58.47462868690491.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8347826086956521, 'samples': 0.8421052631578947, 'weighted': 0.840274599542334, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f92206147d0>
total iter: 500
epoch 5: train_loss: 0.55439; Allocated: 513536; Reserved: 8388608; time used = 4.3359410762786865s
epoch 10: train_loss: 0.45284; Allocated: 513536; Reserved: 8388608; time used = 4.324688673019409s
epoch 15: train_loss: 0.35083; Allocated: 513536; Reserved: 8388608; time used = 4.470268249511719s
epoch 20: train_loss: 0.28984; Allocated: 513536; Reserved: 8388608; time used = 4.321331739425659s
epoch 25: train_loss: 0.26560; Allocated: 513536; Reserved: 8388608; time used = 4.480862140655518s
epoch 30: train_loss: 0.19958; Allocated: 513536; Reserved: 8388608; time used = 4.317761659622192s
epoch 35: train_loss: 0.17537; Allocated: 513536; Reserved: 8388608; time used = 4.292489528656006s
epoch 40: train_loss: 0.15668; Allocated: 513536; Reserved: 8388608; time used = 4.296621799468994s
epoch 45: train_loss: 0.19345; Allocated: 513536; Reserved: 8388608; time used = 4.441857814788818s
epoch 50: train_loss: 0.19464; Allocated: 513536; Reserved: 8388608; time used = 4.261482000350952s
epoch 55: train_loss: 0.19669; Allocated: 513536; Reserved: 8388608; time used = 4.3087158203125s
epoch 60: train_loss: 0.21501; Allocated: 513536; Reserved: 8388608; time used = 4.331885814666748s
epoch 65: train_loss: 0.16101; Allocated: 513536; Reserved: 8388608; time used = 4.472085475921631s
epoch 70: train_loss: 0.15694; Allocated: 513536; Reserved: 8388608; time used = 4.312564373016357s
epoch 75: train_loss: 0.17717; Allocated: 513536; Reserved: 8388608; time used = 4.300049066543579s
epoch 80: train_loss: 0.18145; Allocated: 513536; Reserved: 8388608; time used = 4.295555830001831s
epoch 85: train_loss: 0.16636; Allocated: 513536; Reserved: 8388608; time used = 4.458019018173218s
epoch 90: train_loss: 0.14602; Allocated: 513536; Reserved: 8388608; time used = 4.384573459625244s
epoch 95: train_loss: 0.14999; Allocated: 513536; Reserved: 8388608; time used = 4.308506727218628s
epoch 100: train_loss: 0.20765; Allocated: 513536; Reserved: 8388608; time used = 4.4810004234313965s
epoch 105: train_loss: 0.21534; Allocated: 513536; Reserved: 8388608; time used = 4.316725254058838s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 95.38705253601074.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.8869047619047619, 'samples': 0.8947368421052632, 'weighted': 0.8916040100250626, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2359.63it/s]100%|██████████| 1000/1000 [00:00<00:00, 3516.97it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7eff9d700320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0f0d954280>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6225879192352295s
epoch 10: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.569957733154297s
epoch 15: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5761098861694336s
epoch 20: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5489840507507324s
epoch 25: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.569058656692505s
epoch 30: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5819616317749023s
epoch 35: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5698306560516357s
epoch 40: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5766940116882324s
epoch 45: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5722668170928955s
epoch 50: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5727243423461914s
epoch 55: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5809998512268066s
epoch 60: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6096441745758057s
epoch 65: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.634831666946411s
epoch 70: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.593336343765259s
epoch 75: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.582643508911133s
epoch 80: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.589153289794922s
epoch 85: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6018693447113037s
epoch 90: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5970890522003174s
epoch 95: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.593695878982544s
epoch 100: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5667078495025635s
epoch 105: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.548677921295166s
epoch 110: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.557431936264038s
epoch 115: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5532872676849365s
epoch 120: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5527729988098145s
epoch 125: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.580874443054199s
epoch 130: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.569572687149048s
epoch 135: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5870044231414795s
epoch 140: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.580364465713501s
epoch 145: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5683231353759766s
epoch 150: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.582909107208252s
epoch 155: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5732500553131104s
epoch 160: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.578138589859009s
epoch 165: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.583861827850342s
epoch 170: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5876502990722656s
epoch 175: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5848000049591064s
epoch 180: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5795466899871826s
epoch 185: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.582454204559326s
epoch 190: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5751116275787354s
epoch 195: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5582478046417236s
epoch 200: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.564985990524292s
epoch 205: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5636816024780273s
epoch 210: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.563291072845459s
epoch 215: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.570408582687378s
epoch 220: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.631232976913452s
epoch 225: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6225714683532715s
epoch 230: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5836174488067627s
epoch 235: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5905144214630127s
epoch 240: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.589141845703125s
epoch 245: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6106927394866943s
epoch 250: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5978198051452637s
epoch 255: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5931341648101807s
epoch 260: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.542950391769409s
epoch 265: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.555060863494873s
epoch 270: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5370991230010986s
epoch 275: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5554816722869873s
epoch 280: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.567065715789795s
epoch 285: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5607893466949463s
epoch 290: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5573511123657227s
epoch 295: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5671660900115967s
epoch 300: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5691885948181152s
epoch 305: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5706522464752197s
epoch 310: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5759665966033936s
epoch 315: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.586495876312256s
epoch 320: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5770318508148193s
epoch 325: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5750722885131836s
epoch 330: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.574784517288208s
epoch 335: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.571781873703003s
epoch 340: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5629825592041016s
epoch 345: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5621516704559326s
epoch 350: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5626518726348877s
epoch 355: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.569162130355835s
epoch 360: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5492615699768066s
epoch 365: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5551302433013916s
epoch 370: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5606818199157715s
epoch 375: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.571333169937134s
epoch 380: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6018872261047363s
epoch 385: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6578598022460938s
epoch 390: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5987117290496826s
epoch 395: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5995001792907715s
epoch 400: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6068623065948486s
epoch 405: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.604707956314087s
epoch 410: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.6071720123291016s
epoch 415: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.558204174041748s
epoch 420: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5490005016326904s
epoch 425: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5455000400543213s
epoch 430: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5473663806915283s
epoch 435: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.552042245864868s
epoch 440: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.563016414642334s
epoch 445: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.55759596824646s
epoch 450: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5802078247070312s
epoch 455: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5612878799438477s
epoch 460: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5694961547851562s
epoch 465: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5663163661956787s
epoch 470: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5618138313293457s
epoch 475: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5651159286499023s
epoch 480: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5638673305511475s
epoch 485: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5736477375030518s
epoch 490: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.55961537361145s
epoch 495: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.5649592876434326s
epoch 500: train_loss: 0.69315; Allocated: 53620224; Reserved: 293601280; time used = 2.558823585510254s
Finished training. Time used = 270.9867627620697.
Training classifier using 20.00% nodes...
{'micro': 0.5245353159851301, 'macro': 0.4765564646062775, 'samples': 0.5300525920360631, 'weighted': 0.5143625847321456, 'accuracy': 0.5300525920360631}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb016ab1e60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2868.61it/s]100%|██████████| 1000/1000 [00:00<00:00, 4163.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa077923370>
total iter: 500
epoch 5: train_loss: 1.38678; Allocated: 550400; Reserved: 8388608; time used = 11.208373785018921s
epoch 10: train_loss: 1.38643; Allocated: 550400; Reserved: 8388608; time used = 11.031309366226196s
epoch 15: train_loss: 1.38635; Allocated: 550400; Reserved: 8388608; time used = 11.24145770072937s
epoch 20: train_loss: 1.38632; Allocated: 550400; Reserved: 8388608; time used = 11.247627019882202s
epoch 25: train_loss: 1.38630; Allocated: 550400; Reserved: 8388608; time used = 11.027939796447754s
epoch 30: train_loss: 1.38630; Allocated: 550400; Reserved: 10485760; time used = 11.219245433807373s
epoch 35: train_loss: 1.38630; Allocated: 550400; Reserved: 8388608; time used = 11.259642124176025s
epoch 40: train_loss: 1.38630; Allocated: 550400; Reserved: 8388608; time used = 11.070686340332031s
epoch 45: train_loss: 1.38630; Allocated: 550400; Reserved: 8388608; time used = 11.420618772506714s
epoch 50: train_loss: 1.38629; Allocated: 550400; Reserved: 8388608; time used = 11.249386310577393s
epoch 55: train_loss: 1.38629; Allocated: 550400; Reserved: 8388608; time used = 11.09267282485962s
epoch 60: train_loss: 1.38629; Allocated: 550400; Reserved: 10485760; time used = 11.32822036743164s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 137.84864044189453.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2426.34it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3158.87it/s]100%|██████████| 2000/2000 [00:00<00:00, 5365.55it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff9cf1c0140>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.59048; Allocated: 3922432; Reserved: 31457280; time used = 960.2303094863892s
epoch 10: train_loss: 1.41414; Allocated: 3922432; Reserved: 33554432; time used = 1000.420491695404s
epoch 15: train_loss: 1.39669; Allocated: 3922432; Reserved: 33554432; time used = 1020.2995383739471s
epoch 20: train_loss: 1.39225; Allocated: 3922432; Reserved: 31457280; time used = 998.9617640972137s
epoch 25: train_loss: 1.38631; Allocated: 3922432; Reserved: 31457280; time used = 1016.0101771354675s
epoch 30: train_loss: 1.38422; Allocated: 3922432; Reserved: 33554432; time used = 983.6906216144562s
epoch 35: train_loss: 1.38160; Allocated: 3922432; Reserved: 31457280; time used = 951.022613286972s
epoch 40: train_loss: 1.37721; Allocated: 3922432; Reserved: 31457280; time used = 944.3760893344879s
epoch 45: train_loss: 1.37025; Allocated: 3922432; Reserved: 31457280; time used = 933.4287905693054s
epoch 50: train_loss: 1.36037; Allocated: 3922432; Reserved: 31457280; time used = 943.9405815601349s
epoch 55: train_loss: 1.34911; Allocated: 3922432; Reserved: 31457280; time used = 945.6677463054657s
epoch 60: train_loss: 1.38490; Allocated: 3922432; Reserved: 31457280; time used = 945.7942147254944s
epoch 65: train_loss: 1.37295; Allocated: 3922432; Reserved: 31457280; time used = 945.1297402381897s
epoch 70: train_loss: 1.36613; Allocated: 3922432; Reserved: 33554432; time used = 948.0842018127441s
epoch 75: train_loss: 1.36311; Allocated: 3922432; Reserved: 31457280; time used = 946.4726722240448s
epoch 80: train_loss: 1.35804; Allocated: 3922432; Reserved: 31457280; time used = 953.9227941036224s
epoch 85: train_loss: 1.35405; Allocated: 3922432; Reserved: 31457280; time used = 954.3401029109955s
epoch 90: train_loss: 1.35022; Allocated: 3922432; Reserved: 31457280; time used = 953.20348072052s
epoch 95: train_loss: 1.34262; Allocated: 3922432; Reserved: 31457280; time used = 952.7043054103851s
epoch 100: train_loss: 1.33247; Allocated: 3922432; Reserved: 33554432; time used = 951.8804774284363s
epoch 105: train_loss: 1.32426; Allocated: 3922432; Reserved: 31457280; time used = 950.4860751628876s
epoch 110: train_loss: 1.32364; Allocated: 3922432; Reserved: 31457280; time used = 946.9744865894318s
epoch 115: train_loss: 1.31909; Allocated: 3922432; Reserved: 31457280; time used = 940.0264337062836s
epoch 120: train_loss: 1.30991; Allocated: 3922432; Reserved: 31457280; time used = 938.4535555839539s
epoch 125: train_loss: 1.30354; Allocated: 3922432; Reserved: 31457280; time used = 928.7578103542328s
epoch 130: train_loss: 1.29261; Allocated: 3922432; Reserved: 31457280; time used = 921.0723354816437s
epoch 135: train_loss: 1.29452; Allocated: 3922432; Reserved: 31457280; time used = 920.2961871623993s
epoch 140: train_loss: 1.33038; Allocated: 3922432; Reserved: 31457280; time used = 919.4835875034332s
epoch 145: train_loss: 1.29115; Allocated: 3922432; Reserved: 31457280; time used = 919.6757259368896s
epoch 150: train_loss: 1.28231; Allocated: 3922432; Reserved: 31457280; time used = 919.7172074317932s
epoch 155: train_loss: 1.27340; Allocated: 3922432; Reserved: 31457280; time used = 919.0756890773773s
epoch 160: train_loss: 1.26542; Allocated: 3922432; Reserved: 31457280; time used = 921.7140023708344s
epoch 165: train_loss: 1.26125; Allocated: 3922432; Reserved: 31457280; time used = 921.2358105182648s
epoch 170: train_loss: 1.25093; Allocated: 3922432; Reserved: 31457280; time used = 922.4312465190887s
epoch 175: train_loss: 1.24135; Allocated: 3922432; Reserved: 31457280; time used = 920.6703944206238s
epoch 180: train_loss: 1.23718; Allocated: 3922432; Reserved: 31457280; time used = 919.861599445343s
epoch 185: train_loss: 1.23010; Allocated: 3922432; Reserved: 33554432; time used = 920.1049818992615s
epoch 190: train_loss: 1.22742; Allocated: 3922432; Reserved: 31457280; time used = 920.9414839744568s
epoch 195: train_loss: 1.22375; Allocated: 3922432; Reserved: 31457280; time used = 924.9594550132751s
epoch 200: train_loss: 1.21842; Allocated: 3922432; Reserved: 31457280; time used = 927.2752621173859s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38330.39578938484.
Training classifier using 80.00% nodes...
{'micro': 0.745, 'macro': 0.7409523809523809, 'samples': 0.745, 'weighted': 0.7399809523809523, 'accuracy': 0.745}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f85bf9e6370>
total iter: 500
epoch 5: train_loss: 0.56877; Allocated: 780800; Reserved: 4194304; time used = 4.141732692718506s
epoch 10: train_loss: 0.42790; Allocated: 780800; Reserved: 6291456; time used = 4.2215611934661865s
epoch 15: train_loss: 0.21624; Allocated: 780800; Reserved: 4194304; time used = 4.075748682022095s
epoch 20: train_loss: 0.06591; Allocated: 780800; Reserved: 4194304; time used = 4.241527080535889s
epoch 25: train_loss: 0.07383; Allocated: 780800; Reserved: 4194304; time used = 4.086512327194214s
epoch 30: train_loss: 0.04330; Allocated: 780800; Reserved: 4194304; time used = 4.221889019012451s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.419414520263672.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.5548387096774194, 'samples': 0.6086956521739131, 'weighted': 0.5660589060308556, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2946.58it/s]100%|██████████| 1000/1000 [00:00<00:00, 4244.22it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3ec246a050>
total iter: 500
epoch 5: train_loss: 0.69263; Allocated: 421888; Reserved: 6291456; time used = 183.65780544281006s
epoch 10: train_loss: 0.65113; Allocated: 421888; Reserved: 6291456; time used = 189.2190182209015s
epoch 15: train_loss: 0.65761; Allocated: 421888; Reserved: 8388608; time used = 187.4412157535553s
epoch 20: train_loss: 0.58902; Allocated: 421888; Reserved: 6291456; time used = 186.20655250549316s
epoch 25: train_loss: 0.50664; Allocated: 421888; Reserved: 6291456; time used = 185.69615721702576s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 971.5282962322235.
Training classifier using 80.00% nodes...
{'micro': 0.64, 'macro': 0.6347402597402597, 'samples': 0.64, 'weighted': 0.6338636363636363, 'accuracy': 0.64}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0540310230>
total iter: 500
epoch 5: train_loss: 34486885.59836; Allocated: 53832192; Reserved: 293601280; time used = 3.2323811054229736s
epoch 10: train_loss: 10595755.75997; Allocated: 53832192; Reserved: 293601280; time used = 3.1368298530578613s
epoch 15: train_loss: 8433237.70847; Allocated: 53832192; Reserved: 293601280; time used = 3.148587703704834s
epoch 20: train_loss: 3265109.50117; Allocated: 53832192; Reserved: 293601280; time used = 3.127336025238037s
epoch 25: train_loss: 5178524.22637; Allocated: 53832192; Reserved: 293601280; time used = 3.1357548236846924s
epoch 30: train_loss: 3815500.45762; Allocated: 53832192; Reserved: 293601280; time used = 3.1488120555877686s
epoch 35: train_loss: 1543905.08520; Allocated: 53832192; Reserved: 293601280; time used = 3.1606509685516357s
epoch 40: train_loss: 105298.90420; Allocated: 53832192; Reserved: 293601280; time used = 3.1503684520721436s
epoch 45: train_loss: 830811.25754; Allocated: 53832192; Reserved: 293601280; time used = 3.133512496948242s
epoch 50: train_loss: 88176.54207; Allocated: 53832192; Reserved: 293601280; time used = 3.139862060546875s
epoch 55: train_loss: 1072530.76606; Allocated: 53832192; Reserved: 293601280; time used = 3.1414568424224854s
epoch 60: train_loss: 82881.51496; Allocated: 53832192; Reserved: 293601280; time used = 3.1440773010253906s
epoch 65: train_loss: 124563.53894; Allocated: 53832192; Reserved: 293601280; time used = 3.1391777992248535s
epoch 70: train_loss: 111255.90928; Allocated: 53832192; Reserved: 293601280; time used = 3.1411564350128174s
epoch 75: train_loss: 121880.80531; Allocated: 53832192; Reserved: 293601280; time used = 3.14290189743042s
epoch 80: train_loss: 111221.62279; Allocated: 53832192; Reserved: 293601280; time used = 3.1399803161621094s
epoch 85: train_loss: 80371.45870; Allocated: 53832192; Reserved: 293601280; time used = 3.1453359127044678s
epoch 90: train_loss: 63303.07154; Allocated: 53832192; Reserved: 293601280; time used = 3.1413581371307373s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 68.95645308494568.
Training classifier using 20.00% nodes...
{'micro': 0.4018587360594795, 'macro': 0.35680668685595, 'samples': 0.4060856498873028, 'weighted': 0.3856150427417996, 'accuracy': 0.4060856498873028}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2579.62it/s] 79%|███████▊  | 1573/2000 [00:00<00:00, 3314.62it/s]100%|██████████| 2000/2000 [00:00<00:00, 5465.78it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f0f4d7ac140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3042.01it/s] 83%|████████▎ | 1669/2000 [00:00<00:00, 3879.41it/s]100%|██████████| 2000/2000 [00:00<00:00, 6215.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efdefec1140>
total iter: 500
epoch 5: train_loss: 0.67399; Allocated: 3930112; Reserved: 33554432; time used = 780.5623631477356s
epoch 10: train_loss: 0.56507; Allocated: 3930112; Reserved: 35651584; time used = 787.7441802024841s
epoch 15: train_loss: 0.39741; Allocated: 3930112; Reserved: 31457280; time used = 782.4007568359375s
epoch 20: train_loss: 0.42728; Allocated: 3930112; Reserved: 31457280; time used = 788.6957821846008s
epoch 25: train_loss: 0.37419; Allocated: 3930112; Reserved: 33554432; time used = 789.5424439907074s
epoch 30: train_loss: 0.32577; Allocated: 3930112; Reserved: 33554432; time used = 785.5142374038696s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5343.610467672348.
Training classifier using 80.00% nodes...
{'micro': 0.525, 'macro': 0.41096230158730157, 'samples': 0.525, 'weighted': 0.4031870039682539, 'accuracy': 0.525}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f34b4e60e10>
total iter: 500
epoch 5: train_loss: 1.38059; Allocated: 17409536; Reserved: 41943040; time used = 4.161502838134766s
epoch 10: train_loss: 1.38130; Allocated: 17409536; Reserved: 41943040; time used = 4.14940071105957s
epoch 15: train_loss: 1.37991; Allocated: 17409536; Reserved: 41943040; time used = 4.280378341674805s
epoch 20: train_loss: 1.37292; Allocated: 17409536; Reserved: 41943040; time used = 4.152238368988037s
epoch 25: train_loss: 1.37011; Allocated: 17409536; Reserved: 41943040; time used = 4.186936616897583s
epoch 30: train_loss: 1.37104; Allocated: 17409536; Reserved: 41943040; time used = 4.146209955215454s
epoch 35: train_loss: 1.30944; Allocated: 17409536; Reserved: 41943040; time used = 4.282949447631836s
epoch 40: train_loss: 1.32892; Allocated: 17409536; Reserved: 41943040; time used = 4.171140909194946s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.48247504234314.
Training classifier using 20.00% nodes...
{'micro': 0.35948315643747114, 'macro': 0.15429202840504613, 'samples': 0.35948315643747114, 'weighted': 0.23458825524763688, 'accuracy': 0.35948315643747114}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f58dc1e4820>
total iter: 500
epoch 5: train_loss: 0.56345; Allocated: 587264; Reserved: 4194304; time used = 3.174114227294922s
epoch 10: train_loss: 0.43482; Allocated: 587264; Reserved: 4194304; time used = 3.1759088039398193s
epoch 15: train_loss: 0.28673; Allocated: 587264; Reserved: 4194304; time used = 3.314103841781616s
epoch 20: train_loss: 0.25256; Allocated: 587264; Reserved: 4194304; time used = 3.173863172531128s
epoch 25: train_loss: 0.27844; Allocated: 587264; Reserved: 4194304; time used = 3.1800971031188965s
epoch 30: train_loss: 0.21925; Allocated: 587264; Reserved: 4194304; time used = 3.1659398078918457s
epoch 35: train_loss: 0.15370; Allocated: 587264; Reserved: 4194304; time used = 3.3283426761627197s
epoch 40: train_loss: 0.17637; Allocated: 587264; Reserved: 4194304; time used = 3.164679765701294s
epoch 45: train_loss: 0.12494; Allocated: 587264; Reserved: 4194304; time used = 3.1653056144714355s
epoch 50: train_loss: 0.11776; Allocated: 587264; Reserved: 4194304; time used = 3.303610324859619s
epoch 55: train_loss: 0.15552; Allocated: 587264; Reserved: 4194304; time used = 3.169569730758667s
epoch 60: train_loss: 0.18158; Allocated: 587264; Reserved: 4194304; time used = 3.1778454780578613s
epoch 65: train_loss: 0.13109; Allocated: 587264; Reserved: 4194304; time used = 3.1824188232421875s
epoch 70: train_loss: 0.12927; Allocated: 587264; Reserved: 4194304; time used = 3.2821249961853027s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.64902138710022.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8048422597212033, 'samples': 0.8157894736842105, 'weighted': 0.8121404023632082, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3008.38it/s]100%|██████████| 1500/1500 [00:00<00:00, 5441.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd530be2550>
total iter: 500
epoch 5: train_loss: 6.15413; Allocated: 427008; Reserved: 4194304; time used = 34.06319069862366s
epoch 10: train_loss: 2.52324; Allocated: 427008; Reserved: 4194304; time used = 33.84455990791321s
epoch 15: train_loss: 1.78124; Allocated: 427008; Reserved: 4194304; time used = 33.769882678985596s
epoch 20: train_loss: 1.58218; Allocated: 427008; Reserved: 8388608; time used = 33.962756633758545s
epoch 25: train_loss: 1.41836; Allocated: 427008; Reserved: 4194304; time used = 33.892395973205566s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 186.45772695541382.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.4615201950142276, 'samples': 0.49, 'weighted': 0.45497188646109804, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2508.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 4791.93it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fadd6070050>
total iter: 500
epoch 5: train_loss: 2710.68356; Allocated: 497152; Reserved: 4194304; time used = 52.14102101325989s
epoch 10: train_loss: 907.60921; Allocated: 497152; Reserved: 4194304; time used = 51.635687589645386s
epoch 15: train_loss: 356.23648; Allocated: 497152; Reserved: 6291456; time used = 51.8986713886261s
epoch 20: train_loss: 184.51978; Allocated: 497152; Reserved: 6291456; time used = 52.00415635108948s
epoch 25: train_loss: 117.90167; Allocated: 497152; Reserved: 4194304; time used = 51.75202679634094s
epoch 30: train_loss: 39.00248; Allocated: 497152; Reserved: 4194304; time used = 52.14798402786255s
epoch 35: train_loss: 28.82234; Allocated: 497152; Reserved: 4194304; time used = 52.134214639663696s
epoch 40: train_loss: 16.68537; Allocated: 497152; Reserved: 6291456; time used = 52.01050281524658s
epoch 45: train_loss: 11.11627; Allocated: 497152; Reserved: 4194304; time used = 52.17749834060669s
epoch 50: train_loss: 5.86584; Allocated: 497152; Reserved: 4194304; time used = 51.99575877189636s
epoch 55: train_loss: 4.39515; Allocated: 497152; Reserved: 4194304; time used = 51.823041915893555s
epoch 60: train_loss: 3.88687; Allocated: 497152; Reserved: 4194304; time used = 52.2288875579834s
epoch 65: train_loss: 2.72268; Allocated: 497152; Reserved: 4194304; time used = 52.22798776626587s
epoch 70: train_loss: 2.11321; Allocated: 497152; Reserved: 6291456; time used = 52.13696026802063s
epoch 75: train_loss: 1.81120; Allocated: 497152; Reserved: 6291456; time used = 52.07405757904053s
epoch 80: train_loss: 1.79772; Allocated: 497152; Reserved: 4194304; time used = 51.698728799819946s
epoch 85: train_loss: 1.63551; Allocated: 497152; Reserved: 4194304; time used = 51.98331880569458s
epoch 90: train_loss: 1.55383; Allocated: 497152; Reserved: 6291456; time used = 52.17912030220032s
epoch 95: train_loss: 1.46523; Allocated: 497152; Reserved: 4194304; time used = 52.197192430496216s
epoch 100: train_loss: 1.44229; Allocated: 497152; Reserved: 6291456; time used = 51.87019205093384s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1074.806412935257.
Training classifier using 80.00% nodes...
{'micro': 0.51, 'macro': 0.48490227685136666, 'samples': 0.51, 'weighted': 0.4794586568216878, 'accuracy': 0.51}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f347ad64730>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7efcb7f67870>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.46819; Allocated: 940032; Reserved: 6291456; time used = 1.199641227722168s
epoch 10: train_loss: 0.31227; Allocated: 940032; Reserved: 6291456; time used = 1.0670485496520996s
epoch 15: train_loss: 0.21281; Allocated: 940032; Reserved: 6291456; time used = 1.0653324127197266s
epoch 20: train_loss: 0.10366; Allocated: 940032; Reserved: 6291456; time used = 1.0714831352233887s
epoch 25: train_loss: 0.04190; Allocated: 940032; Reserved: 6291456; time used = 1.3015377521514893s
epoch 30: train_loss: 0.01768; Allocated: 940032; Reserved: 6291456; time used = 1.0487349033355713s
epoch 35: train_loss: 0.02984; Allocated: 940032; Reserved: 6291456; time used = 1.209909200668335s
epoch 40: train_loss: 0.00949; Allocated: 940032; Reserved: 6291456; time used = 1.0564906597137451s
epoch 45: train_loss: 0.00618; Allocated: 940032; Reserved: 6291456; time used = 1.0558266639709473s
epoch 50: train_loss: 0.02125; Allocated: 940032; Reserved: 6291456; time used = 1.063481330871582s
epoch 55: train_loss: 0.01368; Allocated: 940032; Reserved: 6291456; time used = 1.0550482273101807s
epoch 60: train_loss: 0.00885; Allocated: 940032; Reserved: 6291456; time used = 1.284015417098999s
epoch 65: train_loss: 0.01474; Allocated: 940032; Reserved: 6291456; time used = 1.062558650970459s
epoch 70: train_loss: 0.02769; Allocated: 940032; Reserved: 8388608; time used = 1.0648107528686523s
epoch 75: train_loss: 0.04880; Allocated: 940032; Reserved: 6291456; time used = 1.1935358047485352s
epoch 80: train_loss: 0.00082; Allocated: 940032; Reserved: 6291456; time used = 1.0623548030853271s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.607966899871826.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6166666666666667, 'samples': 0.6231884057971014, 'weighted': 0.6202898550724637, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3078.91it/s]100%|██████████| 1500/1500 [00:00<00:00, 5546.93it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f842bc78460>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.050045728683472s
epoch 10: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.081690073013306s
epoch 15: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.015229940414429s
epoch 20: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.165843486785889s
epoch 25: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.036704301834106s
epoch 30: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.123875379562378s
epoch 35: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.940459966659546s
epoch 40: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.121948957443237s
epoch 45: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.132219076156616s
epoch 50: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.011709928512573s
epoch 55: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.998905420303345s
epoch 60: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.118120908737183s
epoch 65: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.100924730300903s
epoch 70: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.101097583770752s
epoch 75: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.071982622146606s
epoch 80: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.133809566497803s
epoch 85: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.048157215118408s
epoch 90: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.136791706085205s
epoch 95: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.024868965148926s
epoch 100: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.142244577407837s
epoch 105: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.077022314071655s
epoch 110: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.13966965675354s
epoch 115: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.92005467414856s
epoch 120: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.05045199394226s
epoch 125: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.159775733947754s
epoch 130: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.162438154220581s
epoch 135: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.001089572906494s
epoch 140: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.121077299118042s
epoch 145: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.108854055404663s
epoch 150: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.10224962234497s
epoch 155: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.961840152740479s
epoch 160: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.051356077194214s
epoch 165: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.010459661483765s
epoch 170: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.014247179031372s
epoch 175: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.06377100944519s
epoch 180: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.98040223121643s
epoch 185: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.12926459312439s
epoch 190: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.998522281646729s
epoch 195: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.143070936203003s
epoch 200: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.043575048446655s
epoch 205: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.941568374633789s
epoch 210: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.136012077331543s
epoch 215: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.113039016723633s
epoch 220: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.107389450073242s
epoch 225: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.005529642105103s
epoch 230: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.13248085975647s
epoch 235: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.999504804611206s
epoch 240: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.108824014663696s
epoch 245: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.038291215896606s
epoch 250: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.95211672782898s
epoch 255: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.08850383758545s
epoch 260: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.027729034423828s
epoch 265: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.171679019927979s
epoch 270: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.017144203186035s
epoch 275: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.031975269317627s
epoch 280: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.012476682662964s
epoch 285: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.073370933532715s
epoch 290: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.940394163131714s
epoch 295: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.012582540512085s
epoch 300: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 12.005694150924683s
epoch 305: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.177580833435059s
epoch 310: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.957843542098999s
epoch 315: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.096327304840088s
epoch 320: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.115684986114502s
epoch 325: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.930541515350342s
epoch 330: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.105993509292603s
epoch 335: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.090716123580933s
epoch 340: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.020427227020264s
epoch 345: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.069563150405884s
epoch 350: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.020763635635376s
epoch 355: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.110278606414795s
epoch 360: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.078871965408325s
epoch 365: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.964011669158936s
epoch 370: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.092349290847778s
epoch 375: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.100600957870483s
epoch 380: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.135686159133911s
epoch 385: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.073533773422241s
epoch 390: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.04508900642395s
epoch 395: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.110466957092285s
epoch 400: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.005773544311523s
epoch 405: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.926230192184448s
epoch 410: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.1804780960083s
epoch 415: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.066974639892578s
epoch 420: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.081145286560059s
epoch 425: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.173995018005371s
epoch 430: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.862772941589355s
epoch 435: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.030570268630981s
epoch 440: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.071026802062988s
epoch 445: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.1127290725708s
epoch 450: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.090065956115723s
epoch 455: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.151494264602661s
epoch 460: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.042585849761963s
epoch 465: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.95137095451355s
epoch 470: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.099602460861206s
epoch 475: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.007363319396973s
epoch 480: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.1326584815979s
epoch 485: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 11.946056604385376s
epoch 490: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.050450086593628s
epoch 495: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.174219131469727s
epoch 500: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 12.148218154907227s
Finished training. Time used = 1209.7606921195984.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.2614670868347339, 'samples': 0.3233333333333333, 'weighted': 0.2536230742296919, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2473.15it/s]100%|██████████| 1000/1000 [00:00<00:00, 3658.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f28311f0320>
total iter: 500
epoch 5: train_loss: 54.43107; Allocated: 702976; Reserved: 10485760; time used = 5.340517044067383s
epoch 10: train_loss: 26.12314; Allocated: 702976; Reserved: 10485760; time used = 5.413565635681152s
epoch 15: train_loss: 6.82105; Allocated: 702976; Reserved: 10485760; time used = 5.579160928726196s
epoch 20: train_loss: 1.43681; Allocated: 702976; Reserved: 10485760; time used = 5.38237190246582s
epoch 25: train_loss: 1.51308; Allocated: 702976; Reserved: 10485760; time used = 5.386018753051758s
epoch 30: train_loss: 1.58464; Allocated: 702976; Reserved: 10485760; time used = 5.3735010623931885s
epoch 35: train_loss: 1.50512; Allocated: 702976; Reserved: 10485760; time used = 5.388027906417847s
epoch 40: train_loss: 1.39011; Allocated: 702976; Reserved: 10485760; time used = 5.388347387313843s
epoch 45: train_loss: 1.42649; Allocated: 702976; Reserved: 10485760; time used = 5.36277961730957s
epoch 50: train_loss: 1.40028; Allocated: 702976; Reserved: 10485760; time used = 5.548089027404785s
epoch 55: train_loss: 1.38937; Allocated: 702976; Reserved: 10485760; time used = 5.397000074386597s
epoch 60: train_loss: 1.39582; Allocated: 702976; Reserved: 10485760; time used = 5.352163791656494s
epoch 65: train_loss: 1.38655; Allocated: 702976; Reserved: 10485760; time used = 5.379392623901367s
epoch 70: train_loss: 1.38967; Allocated: 702976; Reserved: 10485760; time used = 5.425914764404297s
epoch 75: train_loss: 1.38649; Allocated: 702976; Reserved: 10485760; time used = 5.39551305770874s
epoch 80: train_loss: 1.38771; Allocated: 702976; Reserved: 10485760; time used = 5.372557878494263s
epoch 85: train_loss: 1.38641; Allocated: 702976; Reserved: 10485760; time used = 5.570415019989014s
epoch 90: train_loss: 1.38662; Allocated: 702976; Reserved: 10485760; time used = 5.396945953369141s
epoch 95: train_loss: 1.38664; Allocated: 702976; Reserved: 10485760; time used = 5.416355609893799s
epoch 100: train_loss: 1.38640; Allocated: 702976; Reserved: 10485760; time used = 5.417332887649536s
epoch 105: train_loss: 1.38633; Allocated: 702976; Reserved: 10485760; time used = 5.469794988632202s
epoch 110: train_loss: 1.38635; Allocated: 702976; Reserved: 10485760; time used = 5.499608755111694s
epoch 115: train_loss: 1.38635; Allocated: 702976; Reserved: 10485760; time used = 5.381821393966675s
epoch 120: train_loss: 1.38634; Allocated: 702976; Reserved: 10485760; time used = 5.545414209365845s
epoch 125: train_loss: 1.38634; Allocated: 702976; Reserved: 10485760; time used = 5.399608612060547s
epoch 130: train_loss: 1.38633; Allocated: 702976; Reserved: 10485760; time used = 5.369919061660767s
epoch 135: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.36603307723999s
epoch 140: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.372577667236328s
epoch 145: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.407173156738281s
epoch 150: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.3920722007751465s
epoch 155: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.565305948257446s
epoch 160: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.398699522018433s
epoch 165: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.376326084136963s
epoch 170: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.3795976638793945s
epoch 175: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.372302532196045s
epoch 180: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.365767002105713s
epoch 185: train_loss: 1.38632; Allocated: 702976; Reserved: 10485760; time used = 5.3581554889678955s
epoch 190: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.5808000564575195s
epoch 195: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.366159915924072s
epoch 200: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.35701847076416s
epoch 205: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.354768514633179s
epoch 210: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.381124496459961s
epoch 215: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.395229816436768s
epoch 220: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.362289190292358s
epoch 225: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.53742527961731s
epoch 230: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.378008604049683s
epoch 235: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.383246183395386s
epoch 240: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.351080417633057s
epoch 245: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.3333024978637695s
epoch 250: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.336844205856323s
epoch 255: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.369033575057983s
epoch 260: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.559750318527222s
epoch 265: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.367584943771362s
epoch 270: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.357628107070923s
epoch 275: train_loss: 1.38631; Allocated: 702976; Reserved: 10485760; time used = 5.36771035194397s
epoch 280: train_loss: 1.38630; Allocated: 702976; Reserved: 10485760; time used = 5.366726636886597s
epoch 285: train_loss: 1.38630; Allocated: 702976; Reserved: 10485760; time used = 5.385601282119751s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 315.7475497722626.
Training classifier using 80.00% nodes...
{'micro': 0.7100000000000001, 'macro': 0.71, 'samples': 0.71, 'weighted': 0.71, 'accuracy': 0.71}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f217cedf640>
total iter: 500
epoch 5: train_loss: 0.56119; Allocated: 705024; Reserved: 8388608; time used = 4.266313314437866s
epoch 10: train_loss: 0.41699; Allocated: 705024; Reserved: 8388608; time used = 4.246358394622803s
epoch 15: train_loss: 0.34197; Allocated: 705024; Reserved: 8388608; time used = 4.3962109088897705s
epoch 20: train_loss: 0.30948; Allocated: 705024; Reserved: 8388608; time used = 4.247945547103882s
epoch 25: train_loss: 0.29660; Allocated: 705024; Reserved: 8388608; time used = 4.375359296798706s
epoch 30: train_loss: 0.25887; Allocated: 705024; Reserved: 8388608; time used = 4.222775459289551s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.66548490524292.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f4eee05be10>
total iter: 500
epoch 5: train_loss: 0.51764; Allocated: 17396224; Reserved: 39845888; time used = 0.7837393283843994s
epoch 10: train_loss: 0.36653; Allocated: 17396224; Reserved: 39845888; time used = 0.7841784954071045s
epoch 15: train_loss: 0.25849; Allocated: 17396224; Reserved: 39845888; time used = 0.7846541404724121s
epoch 20: train_loss: 0.18209; Allocated: 17396224; Reserved: 39845888; time used = 0.786834716796875s
epoch 25: train_loss: 0.10146; Allocated: 17396224; Reserved: 39845888; time used = 0.7846333980560303s
epoch 30: train_loss: 0.05674; Allocated: 17396224; Reserved: 39845888; time used = 0.7839105129241943s
epoch 35: train_loss: 0.05111; Allocated: 17396224; Reserved: 39845888; time used = 0.7843961715698242s
epoch 40: train_loss: 0.01730; Allocated: 17396224; Reserved: 39845888; time used = 0.7914161682128906s
epoch 45: train_loss: 0.01140; Allocated: 17396224; Reserved: 39845888; time used = 0.790877103805542s
epoch 50: train_loss: 0.01023; Allocated: 17396224; Reserved: 39845888; time used = 0.7885808944702148s
epoch 55: train_loss: 0.00999; Allocated: 17396224; Reserved: 39845888; time used = 0.9488608837127686s
epoch 60: train_loss: 0.02806; Allocated: 17396224; Reserved: 39845888; time used = 0.7905540466308594s
epoch 65: train_loss: 0.00849; Allocated: 17396224; Reserved: 39845888; time used = 0.7891523838043213s
epoch 70: train_loss: 0.00515; Allocated: 17396224; Reserved: 39845888; time used = 0.7867510318756104s
epoch 75: train_loss: 0.00628; Allocated: 17396224; Reserved: 39845888; time used = 0.7942125797271729s
epoch 80: train_loss: 0.00656; Allocated: 17396224; Reserved: 39845888; time used = 0.7892067432403564s
epoch 85: train_loss: 0.00457; Allocated: 17396224; Reserved: 39845888; time used = 0.7857265472412109s
epoch 90: train_loss: 0.01834; Allocated: 17396224; Reserved: 39845888; time used = 0.7908523082733154s
epoch 95: train_loss: 0.00315; Allocated: 17396224; Reserved: 39845888; time used = 0.7872285842895508s
epoch 100: train_loss: 0.00319; Allocated: 17396224; Reserved: 39845888; time used = 0.7876434326171875s
epoch 105: train_loss: 0.00471; Allocated: 17396224; Reserved: 39845888; time used = 0.7863156795501709s
epoch 110: train_loss: 0.01430; Allocated: 17396224; Reserved: 39845888; time used = 0.7875185012817383s
epoch 115: train_loss: 0.00248; Allocated: 17396224; Reserved: 39845888; time used = 0.7883498668670654s
epoch 120: train_loss: 0.00296; Allocated: 17396224; Reserved: 39845888; time used = 0.790651798248291s
epoch 125: train_loss: 0.00283; Allocated: 17396224; Reserved: 39845888; time used = 0.7883627414703369s
epoch 130: train_loss: 0.00370; Allocated: 17396224; Reserved: 39845888; time used = 0.7852268218994141s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.961809873580933.
Training classifier using 20.00% nodes...
{'micro': 0.40147669589293955, 'macro': 0.2678216151530151, 'samples': 0.40147669589293955, 'weighted': 0.32291295084352034, 'accuracy': 0.40147669589293955}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc655c62d70>
head 0
total iter: 500
epoch 5: train_loss: 0.57540; Allocated: 18870784; Reserved: 44040192; time used = 4.239504814147949s
epoch 10: train_loss: 0.32335; Allocated: 18870784; Reserved: 44040192; time used = 4.221638202667236s
epoch 15: train_loss: 0.23894; Allocated: 18870784; Reserved: 44040192; time used = 4.349973201751709s
epoch 20: train_loss: 0.15015; Allocated: 18870784; Reserved: 44040192; time used = 4.243541955947876s
epoch 25: train_loss: 0.09500; Allocated: 18870784; Reserved: 44040192; time used = 4.219527006149292s
epoch 30: train_loss: 0.05801; Allocated: 18870784; Reserved: 44040192; time used = 4.228377342224121s
epoch 35: train_loss: 0.13822; Allocated: 18870784; Reserved: 44040192; time used = 4.355628252029419s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.58700180053711.
Training classifier using 20.00% nodes...
{'micro': 0.7231195200738348, 'macro': 0.7042816804490342, 'samples': 0.7231195200738348, 'weighted': 0.7195309439692414, 'accuracy': 0.7231195200738348}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f9588725780>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2968.96it/s] 82%|████████▏ | 1645/2000 [00:00<00:00, 3787.38it/s]100%|██████████| 2000/2000 [00:00<00:00, 6065.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc2091a9140>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39970; Allocated: 4059648; Reserved: 35651584; time used = 1181.0709431171417s
epoch 10: train_loss: 1.38727; Allocated: 4059648; Reserved: 35651584; time used = 1181.6804084777832s
epoch 15: train_loss: 1.38025; Allocated: 4059648; Reserved: 35651584; time used = 1185.7385559082031s
epoch 20: train_loss: 1.35955; Allocated: 4059648; Reserved: 37748736; time used = 1182.8305113315582s
epoch 25: train_loss: 1.33946; Allocated: 4059648; Reserved: 35651584; time used = 1182.831608057022s
epoch 30: train_loss: 1.32160; Allocated: 4059648; Reserved: 35651584; time used = 1182.7572720050812s
epoch 35: train_loss: 1.30206; Allocated: 4059648; Reserved: 35651584; time used = 1181.9937932491302s
epoch 40: train_loss: 1.28703; Allocated: 4059648; Reserved: 37748736; time used = 1181.3263974189758s
epoch 45: train_loss: 1.26901; Allocated: 4059648; Reserved: 35651584; time used = 1169.227855682373s
epoch 50: train_loss: 1.25901; Allocated: 4059648; Reserved: 33554432; time used = 1169.3238456249237s
epoch 55: train_loss: 1.26224; Allocated: 4059648; Reserved: 37748736; time used = 1171.8867571353912s
epoch 60: train_loss: 1.23941; Allocated: 4059648; Reserved: 35651584; time used = 1169.4158160686493s
epoch 65: train_loss: 1.24690; Allocated: 4059648; Reserved: 35651584; time used = 1181.4646911621094s
epoch 70: train_loss: 1.23085; Allocated: 4059648; Reserved: 35651584; time used = 1275.0521149635315s
epoch 75: train_loss: 1.21908; Allocated: 4059648; Reserved: 35651584; time used = 1312.7009296417236s
epoch 80: train_loss: 1.20817; Allocated: 4059648; Reserved: 35651584; time used = 1301.3616530895233s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19738.637427330017.
Training classifier using 80.00% nodes...
{'micro': 0.655, 'macro': 0.65330117576123, 'samples': 0.655, 'weighted': 0.6540292432921313, 'accuracy': 0.655}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2868.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 4151.99it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff455eea050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2478.57it/s]100%|██████████| 1500/1500 [00:00<00:00, 4755.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f068f1b0320>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 218.13058233261108s
epoch 10: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.63747787475586s
epoch 15: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 218.62849259376526s
epoch 20: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 220.52313661575317s
epoch 25: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 218.20236921310425s
epoch 30: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 219.16925883293152s
epoch 35: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.56145405769348s
epoch 40: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 219.32460021972656s
epoch 45: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 221.10260033607483s
epoch 50: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 216.74031805992126s
epoch 55: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 218.06456089019775s
epoch 60: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 208.6703577041626s
epoch 65: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.19116520881653s
epoch 70: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.81748008728027s
epoch 75: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.71474385261536s
epoch 80: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.66190361976624s
epoch 85: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.8447561264038s
epoch 90: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.86438655853271s
epoch 95: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.18908166885376s
epoch 100: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.00664710998535s
epoch 105: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.802814245224s
epoch 110: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.03394532203674s
epoch 115: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.26353001594543s
epoch 120: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.0467882156372s
epoch 125: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.59424948692322s
epoch 130: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.8695456981659s
epoch 135: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.1765685081482s
epoch 140: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.86862325668335s
epoch 145: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 197.00210976600647s
epoch 150: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.23227787017822s
epoch 155: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 207.7961356639862s
epoch 160: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 208.31747722625732s
epoch 165: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.31403231620789s
epoch 170: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.73597359657288s
epoch 175: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.31765055656433s
epoch 180: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.53125047683716s
epoch 185: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.37898588180542s
epoch 190: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 207.47382140159607s
epoch 195: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.18187403678894s
epoch 200: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 211.60922503471375s
epoch 205: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.97067546844482s
epoch 210: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.06329464912415s
epoch 215: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 211.45443534851074s
epoch 220: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.08022165298462s
epoch 225: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 207.0938205718994s
epoch 230: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.9881567955017s
epoch 235: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 214.97796869277954s
epoch 240: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 206.52284336090088s
epoch 245: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.80650210380554s
epoch 250: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.93424487113953s
epoch 255: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.1767704486847s
epoch 260: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 208.41579699516296s
epoch 265: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.83384561538696s
epoch 270: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 206.7420313358307s
epoch 275: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.89360904693604s
epoch 280: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.18532156944275s
epoch 285: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 193.56047797203064s
epoch 290: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.85899543762207s
epoch 295: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.06619715690613s
epoch 300: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.18288469314575s
epoch 305: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.44479608535767s
epoch 310: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.67272114753723s
epoch 315: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.47621536254883s
epoch 320: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.48353052139282s
epoch 325: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 193.17982506752014s
epoch 330: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.2657985687256s
epoch 335: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.9146728515625s
epoch 340: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 193.17718410491943s
epoch 345: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 204.17720103263855s
epoch 350: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 204.1048538684845s
epoch 355: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.42844414710999s
epoch 360: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.96287274360657s
epoch 365: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 206.78143286705017s
epoch 370: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 206.35745429992676s
epoch 375: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.32655453681946s
epoch 380: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 203.1956386566162s
epoch 385: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.0855417251587s
epoch 390: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 220.96710658073425s
epoch 395: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 214.2426793575287s
epoch 400: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.67878556251526s
epoch 405: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 214.75808906555176s
epoch 410: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 211.28613328933716s
epoch 415: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 211.35394954681396s
epoch 420: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 215.47610926628113s
epoch 425: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 218.27374505996704s
epoch 430: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 211.29750871658325s
epoch 435: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 215.33396768569946s
epoch 440: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 216.24463486671448s
epoch 445: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 215.11834836006165s
epoch 450: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 221.47633910179138s
epoch 455: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 221.2807457447052s
epoch 460: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.49576902389526s
epoch 465: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.58712935447693s
epoch 470: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.55696868896484s
epoch 475: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.25088214874268s
epoch 480: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 206.82351231575012s
epoch 485: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 207.47604894638062s
epoch 490: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.12787437438965s
epoch 495: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 209.4054570198059s
epoch 500: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.6572299003601s
Finished training. Time used = 20795.348400592804.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff24f199820>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3058.07it/s]100%|██████████| 1500/1500 [00:00<00:00, 5524.40it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3f59364370>
total iter: 500
epoch 5: train_loss: 8603.39001; Allocated: 829952; Reserved: 14680064; time used = 8.3899245262146s
epoch 10: train_loss: 240.72438; Allocated: 829952; Reserved: 14680064; time used = 8.085155010223389s
epoch 15: train_loss: 665.11725; Allocated: 829952; Reserved: 14680064; time used = 8.099210023880005s
epoch 20: train_loss: 718.23953; Allocated: 829952; Reserved: 14680064; time used = 8.137217283248901s
epoch 25: train_loss: 6.67801; Allocated: 829952; Reserved: 14680064; time used = 8.338224172592163s
epoch 30: train_loss: 173.49726; Allocated: 829952; Reserved: 14680064; time used = 8.173283338546753s
epoch 35: train_loss: 159.66352; Allocated: 829952; Reserved: 14680064; time used = 8.134965419769287s
epoch 40: train_loss: 11.23987; Allocated: 829952; Reserved: 14680064; time used = 8.025481462478638s
epoch 45: train_loss: 26.52001; Allocated: 829952; Reserved: 14680064; time used = 8.265723466873169s
epoch 50: train_loss: 231.68883; Allocated: 829952; Reserved: 14680064; time used = 8.114786386489868s
epoch 55: train_loss: 37.49588; Allocated: 829952; Reserved: 14680064; time used = 8.249592781066895s
epoch 60: train_loss: 19.97302; Allocated: 829952; Reserved: 14680064; time used = 8.407863140106201s
epoch 65: train_loss: 9.09318; Allocated: 829952; Reserved: 14680064; time used = 8.162543058395386s
epoch 70: train_loss: 20.45843; Allocated: 829952; Reserved: 14680064; time used = 8.045954704284668s
epoch 75: train_loss: 10.38846; Allocated: 829952; Reserved: 14680064; time used = 8.108134508132935s
epoch 80: train_loss: 3.67177; Allocated: 829952; Reserved: 14680064; time used = 8.340202808380127s
epoch 85: train_loss: 3.33709; Allocated: 829952; Reserved: 14680064; time used = 8.221821069717407s
epoch 90: train_loss: 2.30586; Allocated: 829952; Reserved: 14680064; time used = 8.08982253074646s
epoch 95: train_loss: 1.39735; Allocated: 829952; Reserved: 14680064; time used = 8.391071557998657s
epoch 100: train_loss: 1.38631; Allocated: 829952; Reserved: 14680064; time used = 8.066498041152954s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 174.94514179229736.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f288319b5a0>
total iter: 500
epoch 5: train_loss: 3.18968; Allocated: 987648; Reserved: 8388608; time used = 1.7511711120605469s
epoch 10: train_loss: 1.40579; Allocated: 987648; Reserved: 8388608; time used = 1.7763526439666748s
epoch 15: train_loss: 1.38265; Allocated: 987648; Reserved: 8388608; time used = 1.7812182903289795s
epoch 20: train_loss: 1.36989; Allocated: 987648; Reserved: 8388608; time used = 1.5962259769439697s
epoch 25: train_loss: 1.37713; Allocated: 987648; Reserved: 8388608; time used = 1.557352066040039s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.52782130241394.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4995164410058027, 'samples': 0.5652173913043478, 'weighted': 0.5126566310655117, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2997.16it/s]100%|██████████| 1000/1000 [00:00<00:00, 4313.55it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3e8c44c2d0>
total iter: 500
epoch 5: train_loss: 70933.99121; Allocated: 912896; Reserved: 12582912; time used = 6.50986385345459s
epoch 10: train_loss: 9356.68170; Allocated: 912896; Reserved: 12582912; time used = 6.450586557388306s
epoch 15: train_loss: 3397.56195; Allocated: 912896; Reserved: 12582912; time used = 6.6611340045928955s
epoch 20: train_loss: 386.82478; Allocated: 912896; Reserved: 12582912; time used = 6.379340648651123s
epoch 25: train_loss: 1997.19329; Allocated: 912896; Reserved: 12582912; time used = 6.380950212478638s
epoch 30: train_loss: 601.25982; Allocated: 912896; Reserved: 12582912; time used = 6.354490280151367s
epoch 35: train_loss: 679.79523; Allocated: 912896; Reserved: 12582912; time used = 6.447935104370117s
epoch 40: train_loss: 1769.00884; Allocated: 912896; Reserved: 12582912; time used = 6.355336666107178s
epoch 45: train_loss: 1356.58675; Allocated: 912896; Reserved: 12582912; time used = 6.492258787155151s
epoch 50: train_loss: 76.99384; Allocated: 912896; Reserved: 12582912; time used = 6.553808689117432s
epoch 55: train_loss: 840.63175; Allocated: 912896; Reserved: 12582912; time used = 6.37353515625s
epoch 60: train_loss: 728.95339; Allocated: 912896; Reserved: 12582912; time used = 6.347090244293213s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 83.76219201087952.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa8d61bd6e0>
total iter: 500
epoch 5: train_loss: 0.41541; Allocated: 784384; Reserved: 4194304; time used = 1.0325310230255127s
epoch 10: train_loss: 0.28295; Allocated: 784384; Reserved: 4194304; time used = 0.9884486198425293s
epoch 15: train_loss: 0.19769; Allocated: 784384; Reserved: 4194304; time used = 1.041358232498169s
epoch 20: train_loss: 0.16680; Allocated: 784384; Reserved: 4194304; time used = 1.009756326675415s
epoch 25: train_loss: 0.11749; Allocated: 784384; Reserved: 4194304; time used = 0.9909436702728271s
epoch 30: train_loss: 0.09565; Allocated: 784384; Reserved: 4194304; time used = 0.9940431118011475s
epoch 35: train_loss: 0.08683; Allocated: 784384; Reserved: 4194304; time used = 1.0052611827850342s
epoch 40: train_loss: 0.09196; Allocated: 784384; Reserved: 4194304; time used = 0.9667329788208008s
epoch 45: train_loss: 0.07792; Allocated: 784384; Reserved: 4194304; time used = 0.9658656120300293s
epoch 50: train_loss: 0.06384; Allocated: 784384; Reserved: 4194304; time used = 1.006669044494629s
epoch 55: train_loss: 0.07510; Allocated: 784384; Reserved: 4194304; time used = 1.006319522857666s
epoch 60: train_loss: 0.07709; Allocated: 784384; Reserved: 4194304; time used = 1.037614345550537s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.292097330093384.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fd3f4eefeb0>
total iter: 500
epoch 5: train_loss: 0.34377; Allocated: 40848896; Reserved: 62914560; time used = 2.384023427963257s
epoch 10: train_loss: 0.19407; Allocated: 40848896; Reserved: 62914560; time used = 2.676642417907715s
epoch 15: train_loss: 0.12886; Allocated: 40848896; Reserved: 62914560; time used = 2.456094980239868s
epoch 20: train_loss: 0.07671; Allocated: 40848896; Reserved: 62914560; time used = 2.452728748321533s
epoch 25: train_loss: 0.03645; Allocated: 40848896; Reserved: 62914560; time used = 2.452382802963257s
epoch 30: train_loss: 0.02477; Allocated: 40848896; Reserved: 62914560; time used = 2.7165489196777344s
epoch 35: train_loss: 0.62142; Allocated: 40848896; Reserved: 62914560; time used = 2.4580259323120117s
epoch 40: train_loss: 0.07615; Allocated: 40848896; Reserved: 62914560; time used = 2.5298309326171875s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.606618642807007.
Training classifier using 20.00% nodes...
{'micro': 0.7518067706352225, 'macro': 0.7397974438036928, 'samples': 0.7518067706352225, 'weighted': 0.7504624777709886, 'accuracy': 0.7518067706352225}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fabe7364730>
total iter: 500
epoch 5: train_loss: 0.51665; Allocated: 918016; Reserved: 8388608; time used = 1.213146448135376s
epoch 10: train_loss: 0.07457; Allocated: 918016; Reserved: 8388608; time used = 1.1090903282165527s
epoch 15: train_loss: 0.04415; Allocated: 918016; Reserved: 8388608; time used = 1.0481631755828857s
epoch 20: train_loss: 0.33032; Allocated: 918016; Reserved: 8388608; time used = 0.9919075965881348s
epoch 25: train_loss: 0.15116; Allocated: 918016; Reserved: 8388608; time used = 1.1940586566925049s
epoch 30: train_loss: 0.07504; Allocated: 918016; Reserved: 8388608; time used = 1.1032710075378418s
epoch 35: train_loss: 0.05582; Allocated: 918016; Reserved: 8388608; time used = 1.0860145092010498s
epoch 40: train_loss: 0.00117; Allocated: 918016; Reserved: 8388608; time used = 1.1054201126098633s
epoch 45: train_loss: 0.00035; Allocated: 918016; Reserved: 8388608; time used = 1.0927233695983887s
epoch 50: train_loss: 0.69136; Allocated: 918016; Reserved: 8388608; time used = 1.1224439144134521s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.282755374908447.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2956.64it/s] 83%|████████▎ | 1665/2000 [00:00<00:00, 3780.73it/s]100%|██████████| 2000/2000 [00:00<00:00, 6103.32it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f334ffc1140>
total iter: 500
epoch 5: train_loss: 0.50939; Allocated: 4118016; Reserved: 1212153856; time used = 3013.2770116329193s
epoch 10: train_loss: 0.54475; Allocated: 4118016; Reserved: 1604321280; time used = 3478.395616054535s
epoch 15: train_loss: 0.50282; Allocated: 4118016; Reserved: 790626304; time used = 3627.1108231544495s
epoch 20: train_loss: 0.50786; Allocated: 4118016; Reserved: 1725956096; time used = 3633.670046567917s
epoch 25: train_loss: 0.52109; Allocated: 4118016; Reserved: 922746880; time used = 3681.428234100342s
epoch 30: train_loss: 0.52743; Allocated: 4118016; Reserved: 654311424; time used = 3687.494151353836s
epoch 35: train_loss: 0.53396; Allocated: 4118016; Reserved: 817889280; time used = 3705.765882253647s
epoch 40: train_loss: 0.53079; Allocated: 4118016; Reserved: 1197473792; time used = 3721.5947909355164s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 29991.820333003998.
Training classifier using 80.00% nodes...
{'micro': 0.6925, 'macro': 0.6895487730235552, 'samples': 0.6925, 'weighted': 0.6886407031846491, 'accuracy': 0.6925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5f6a6fc460>
total iter: 500
epoch 5: train_loss: 1.98153; Allocated: 716288; Reserved: 4194304; time used = 1.033806562423706s
epoch 10: train_loss: 1.34543; Allocated: 716288; Reserved: 4194304; time used = 0.9017443656921387s
epoch 15: train_loss: 1.31167; Allocated: 716288; Reserved: 4194304; time used = 0.8974246978759766s
epoch 20: train_loss: 1.29054; Allocated: 716288; Reserved: 4194304; time used = 0.8765163421630859s
epoch 25: train_loss: 1.24583; Allocated: 716288; Reserved: 4194304; time used = 0.9057881832122803s
epoch 30: train_loss: 1.13100; Allocated: 716288; Reserved: 4194304; time used = 0.9135253429412842s
epoch 35: train_loss: 1.03443; Allocated: 716288; Reserved: 4194304; time used = 0.8920814990997314s
epoch 40: train_loss: 1.06591; Allocated: 716288; Reserved: 4194304; time used = 0.9270105361938477s
epoch 45: train_loss: 1.02954; Allocated: 716288; Reserved: 4194304; time used = 0.9137425422668457s
epoch 50: train_loss: 0.98878; Allocated: 716288; Reserved: 4194304; time used = 0.9249856472015381s
epoch 55: train_loss: 0.95998; Allocated: 716288; Reserved: 4194304; time used = 0.9257197380065918s
epoch 60: train_loss: 0.95506; Allocated: 716288; Reserved: 4194304; time used = 0.8962774276733398s
epoch 65: train_loss: 0.90440; Allocated: 716288; Reserved: 4194304; time used = 0.898834228515625s
epoch 70: train_loss: 0.91739; Allocated: 716288; Reserved: 4194304; time used = 0.9179706573486328s
epoch 75: train_loss: 0.92175; Allocated: 716288; Reserved: 4194304; time used = 0.8843164443969727s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.94682240486145.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7661538461538462, 'samples': 0.7894736842105263, 'weighted': 0.7778137651821863, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3000.88it/s]100%|██████████| 1000/1000 [00:00<00:00, 4318.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f089eb570f0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.46275; Allocated: 704000; Reserved: 8388608; time used = 36.2466094493866s
epoch 10: train_loss: 1.38957; Allocated: 704000; Reserved: 8388608; time used = 36.178208112716675s
epoch 15: train_loss: 1.38907; Allocated: 704000; Reserved: 8388608; time used = 36.445581674575806s
epoch 20: train_loss: 1.38725; Allocated: 704000; Reserved: 10485760; time used = 36.328829765319824s
epoch 25: train_loss: 1.38666; Allocated: 704000; Reserved: 8388608; time used = 36.348655700683594s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 214.7319676876068.
Training classifier using 80.00% nodes...
{'micro': 0.47, 'macro': 0.46225649350649356, 'samples': 0.47, 'weighted': 0.46096590909090907, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f0f93225e60>
total iter: 500
epoch 5: train_loss: 0.63732; Allocated: 17459712; Reserved: 44040192; time used = 3.3559775352478027s
epoch 10: train_loss: 0.49512; Allocated: 17459712; Reserved: 44040192; time used = 3.3347177505493164s
epoch 15: train_loss: 0.47018; Allocated: 17459712; Reserved: 44040192; time used = 3.47822904586792s
epoch 20: train_loss: 0.45348; Allocated: 17459712; Reserved: 44040192; time used = 3.340423345565796s
epoch 25: train_loss: 0.43308; Allocated: 17459712; Reserved: 44040192; time used = 3.3473076820373535s
epoch 30: train_loss: 0.43220; Allocated: 17459712; Reserved: 44040192; time used = 3.329768657684326s
epoch 35: train_loss: 0.42741; Allocated: 17459712; Reserved: 44040192; time used = 3.3024964332580566s
epoch 40: train_loss: 0.41449; Allocated: 17459712; Reserved: 44040192; time used = 3.3175430297851562s
epoch 45: train_loss: 0.41347; Allocated: 17459712; Reserved: 44040192; time used = 3.482907772064209s
epoch 50: train_loss: 0.40814; Allocated: 17459712; Reserved: 44040192; time used = 3.3503713607788086s
epoch 55: train_loss: 0.39704; Allocated: 17459712; Reserved: 44040192; time used = 3.322052478790283s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.91285562515259.
Training classifier using 20.00% nodes...
{'micro': 0.7471158283341025, 'macro': 0.716136061258945, 'samples': 0.7471158283341024, 'weighted': 0.7467240747377841, 'accuracy': 0.7471158283341024}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3040.72it/s] 83%|████████▎ | 1657/2000 [00:00<00:00, 3873.50it/s]100%|██████████| 2000/2000 [00:00<00:00, 6183.89it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8857fc1140>
total iter: 500
epoch 5: train_loss: 247.26686; Allocated: 3857920; Reserved: 31457280; time used = 814.5014522075653s
epoch 10: train_loss: 62.10010; Allocated: 3857920; Reserved: 33554432; time used = 815.4465897083282s
epoch 15: train_loss: 16.38433; Allocated: 3857920; Reserved: 33554432; time used = 813.8299787044525s
epoch 20: train_loss: 9.22060; Allocated: 3857920; Reserved: 29360128; time used = 812.0539011955261s
epoch 25: train_loss: 9.82837; Allocated: 3857920; Reserved: 31457280; time used = 813.1427686214447s
epoch 30: train_loss: 3.41904; Allocated: 3857920; Reserved: 29360128; time used = 813.9436988830566s
epoch 35: train_loss: 3.60087; Allocated: 3857920; Reserved: 31457280; time used = 784.9647316932678s
epoch 40: train_loss: 4.41374; Allocated: 3857920; Reserved: 29360128; time used = 778.0586857795715s
epoch 45: train_loss: 2.07335; Allocated: 3857920; Reserved: 29360128; time used = 776.7647500038147s
epoch 50: train_loss: 1.32433; Allocated: 3857920; Reserved: 31457280; time used = 771.2166574001312s
epoch 55: train_loss: 1.50434; Allocated: 3857920; Reserved: 29360128; time used = 772.2606177330017s
epoch 60: train_loss: 5.08722; Allocated: 3857920; Reserved: 31457280; time used = 771.8940179347992s
epoch 65: train_loss: 2.21625; Allocated: 3857920; Reserved: 29360128; time used = 771.2378685474396s
epoch 70: train_loss: 7.43370; Allocated: 3857920; Reserved: 33554432; time used = 774.978621006012s
epoch 75: train_loss: 5.08243; Allocated: 3857920; Reserved: 29360128; time used = 777.937924861908s
epoch 80: train_loss: 4.24775; Allocated: 3857920; Reserved: 29360128; time used = 778.0852966308594s
epoch 85: train_loss: 2.31259; Allocated: 3857920; Reserved: 31457280; time used = 776.1710143089294s
epoch 90: train_loss: 2.56655; Allocated: 3857920; Reserved: 31457280; time used = 777.6289610862732s
epoch 95: train_loss: 1.28205; Allocated: 3857920; Reserved: 29360128; time used = 774.2171885967255s
epoch 100: train_loss: 2.33734; Allocated: 3857920; Reserved: 29360128; time used = 775.7685770988464s
epoch 105: train_loss: 1.55364; Allocated: 3857920; Reserved: 29360128; time used = 777.7598397731781s
epoch 110: train_loss: 1.35381; Allocated: 3857920; Reserved: 29360128; time used = 775.03222489357s
epoch 115: train_loss: 1.73611; Allocated: 3857920; Reserved: 29360128; time used = 777.493700504303s
epoch 120: train_loss: 1.48899; Allocated: 3857920; Reserved: 31457280; time used = 775.8067529201508s
epoch 125: train_loss: 1.60853; Allocated: 3857920; Reserved: 29360128; time used = 776.3074021339417s
epoch 130: train_loss: 1.35596; Allocated: 3857920; Reserved: 31457280; time used = 772.7263948917389s
epoch 135: train_loss: 1.82522; Allocated: 3857920; Reserved: 29360128; time used = 772.3609068393707s
epoch 140: train_loss: 1.96730; Allocated: 3857920; Reserved: 31457280; time used = 771.391845703125s
epoch 145: train_loss: 1.75661; Allocated: 3857920; Reserved: 31457280; time used = 771.3699052333832s
epoch 150: train_loss: 1.62369; Allocated: 3857920; Reserved: 31457280; time used = 775.5850493907928s
epoch 155: train_loss: 1.36969; Allocated: 3857920; Reserved: 31457280; time used = 774.4626643657684s
epoch 160: train_loss: 1.34960; Allocated: 3857920; Reserved: 31457280; time used = 776.7119889259338s
epoch 165: train_loss: 1.27364; Allocated: 3857920; Reserved: 29360128; time used = 775.9525229930878s
epoch 170: train_loss: 1.29178; Allocated: 3857920; Reserved: 29360128; time used = 770.7897431850433s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26901.20817041397.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6747072365128615, 'samples': 0.675, 'weighted': 0.674414473025723, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2513.24it/s]100%|██████████| 1000/1000 [00:00<00:00, 3721.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f50938ea050>
total iter: 500
epoch 5: train_loss: 2222.94186; Allocated: 498176; Reserved: 8388608; time used = 33.51038336753845s
epoch 10: train_loss: 709.26601; Allocated: 498176; Reserved: 8388608; time used = 33.116445541381836s
epoch 15: train_loss: 312.10889; Allocated: 498176; Reserved: 6291456; time used = 33.1841938495636s
epoch 20: train_loss: 120.26992; Allocated: 498176; Reserved: 8388608; time used = 33.05804204940796s
epoch 25: train_loss: 84.71563; Allocated: 498176; Reserved: 8388608; time used = 33.34333038330078s
epoch 30: train_loss: 40.61783; Allocated: 498176; Reserved: 8388608; time used = 33.08345055580139s
epoch 35: train_loss: 23.82272; Allocated: 498176; Reserved: 8388608; time used = 33.237483978271484s
epoch 40: train_loss: 15.36348; Allocated: 498176; Reserved: 8388608; time used = 33.148409366607666s
epoch 45: train_loss: 8.58932; Allocated: 498176; Reserved: 8388608; time used = 33.392021894454956s
epoch 50: train_loss: 5.63462; Allocated: 498176; Reserved: 8388608; time used = 33.18509244918823s
epoch 55: train_loss: 3.49310; Allocated: 498176; Reserved: 8388608; time used = 33.307926177978516s
epoch 60: train_loss: 3.05665; Allocated: 498176; Reserved: 6291456; time used = 32.965389013290405s
epoch 65: train_loss: 2.24845; Allocated: 498176; Reserved: 6291456; time used = 33.297995805740356s
epoch 70: train_loss: 1.91623; Allocated: 498176; Reserved: 8388608; time used = 33.075387477874756s
epoch 75: train_loss: 1.79179; Allocated: 498176; Reserved: 8388608; time used = 33.32171320915222s
epoch 80: train_loss: 1.65952; Allocated: 498176; Reserved: 8388608; time used = 33.375147104263306s
epoch 85: train_loss: 1.58446; Allocated: 498176; Reserved: 8388608; time used = 33.239848375320435s
epoch 90: train_loss: 1.50869; Allocated: 498176; Reserved: 6291456; time used = 33.12432098388672s
epoch 95: train_loss: 1.47007; Allocated: 498176; Reserved: 6291456; time used = 33.24544167518616s
epoch 100: train_loss: 1.43756; Allocated: 498176; Reserved: 8388608; time used = 33.18842887878418s
epoch 105: train_loss: 1.41294; Allocated: 498176; Reserved: 8388608; time used = 33.24992918968201s
epoch 110: train_loss: 1.41491; Allocated: 498176; Reserved: 6291456; time used = 32.95574450492859s
epoch 115: train_loss: 1.37276; Allocated: 498176; Reserved: 8388608; time used = 33.15196633338928s
epoch 120: train_loss: 1.37408; Allocated: 498176; Reserved: 6291456; time used = 33.23949885368347s
epoch 125: train_loss: 1.37482; Allocated: 498176; Reserved: 8388608; time used = 33.41242432594299s
epoch 130: train_loss: 1.35779; Allocated: 498176; Reserved: 8388608; time used = 33.25779986381531s
epoch 135: train_loss: 1.35459; Allocated: 498176; Reserved: 8388608; time used = 33.17755627632141s
epoch 140: train_loss: 1.33635; Allocated: 498176; Reserved: 6291456; time used = 33.25126528739929s
epoch 145: train_loss: 1.33428; Allocated: 498176; Reserved: 6291456; time used = 33.32867360115051s
epoch 150: train_loss: 1.33817; Allocated: 498176; Reserved: 8388608; time used = 33.07096457481384s
epoch 155: train_loss: 1.32815; Allocated: 498176; Reserved: 6291456; time used = 33.205085039138794s
epoch 160: train_loss: 1.32627; Allocated: 498176; Reserved: 8388608; time used = 33.17007279396057s
epoch 165: train_loss: 1.32362; Allocated: 498176; Reserved: 6291456; time used = 33.719228982925415s
epoch 170: train_loss: 1.31960; Allocated: 498176; Reserved: 8388608; time used = 33.915637731552124s
epoch 175: train_loss: 1.31151; Allocated: 498176; Reserved: 8388608; time used = 33.453644037246704s
epoch 180: train_loss: 1.32924; Allocated: 498176; Reserved: 6291456; time used = 33.35317373275757s
epoch 185: train_loss: 1.31048; Allocated: 498176; Reserved: 8388608; time used = 33.61857295036316s
epoch 190: train_loss: 1.31595; Allocated: 498176; Reserved: 8388608; time used = 33.38314700126648s
epoch 195: train_loss: 1.31772; Allocated: 498176; Reserved: 8388608; time used = 33.63344669342041s
epoch 200: train_loss: 1.32444; Allocated: 498176; Reserved: 6291456; time used = 33.39669942855835s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1361.4211452007294.
Training classifier using 80.00% nodes...
{'micro': 0.705, 'macro': 0.7049926248156204, 'samples': 0.705, 'weighted': 0.7049631240781019, 'accuracy': 0.705}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2524.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 3733.68it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fea3686a050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39784; Allocated: 701952; Reserved: 8388608; time used = 12.404031991958618s
epoch 10: train_loss: 1.38924; Allocated: 701952; Reserved: 6291456; time used = 12.349288940429688s
epoch 15: train_loss: 1.38761; Allocated: 701952; Reserved: 6291456; time used = 12.491949081420898s
epoch 20: train_loss: 1.38399; Allocated: 701952; Reserved: 6291456; time used = 12.506279468536377s
epoch 25: train_loss: 1.37295; Allocated: 701952; Reserved: 6291456; time used = 12.27882194519043s
epoch 30: train_loss: 1.34182; Allocated: 701952; Reserved: 6291456; time used = 12.420213460922241s
epoch 35: train_loss: 1.36193; Allocated: 701952; Reserved: 6291456; time used = 12.490149736404419s
epoch 40: train_loss: 1.36033; Allocated: 701952; Reserved: 6291456; time used = 12.131038665771484s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 105.08562350273132.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.6294070512820513, 'samples': 0.63, 'weighted': 0.6291105769230769, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8afd2f3820>
total iter: 500
epoch 5: train_loss: 3.65434; Allocated: 852480; Reserved: 4194304; time used = 0.9876768589019775s
epoch 10: train_loss: 1.30615; Allocated: 852480; Reserved: 4194304; time used = 0.8955857753753662s
epoch 15: train_loss: 1.23099; Allocated: 852480; Reserved: 4194304; time used = 0.9016129970550537s
epoch 20: train_loss: 1.17712; Allocated: 852480; Reserved: 4194304; time used = 0.8961029052734375s
epoch 25: train_loss: 1.08298; Allocated: 852480; Reserved: 4194304; time used = 0.9022378921508789s
epoch 30: train_loss: 0.98022; Allocated: 852480; Reserved: 4194304; time used = 0.9202063083648682s
epoch 35: train_loss: 0.86715; Allocated: 852480; Reserved: 4194304; time used = 0.9060122966766357s
epoch 40: train_loss: 0.79417; Allocated: 852480; Reserved: 4194304; time used = 0.8969447612762451s
epoch 45: train_loss: 0.74602; Allocated: 852480; Reserved: 4194304; time used = 0.9032549858093262s
epoch 50: train_loss: 0.70601; Allocated: 852480; Reserved: 4194304; time used = 0.9081223011016846s
epoch 55: train_loss: 0.65770; Allocated: 852480; Reserved: 4194304; time used = 0.898543119430542s
epoch 60: train_loss: 0.66374; Allocated: 852480; Reserved: 4194304; time used = 0.8929028511047363s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.061584234237671.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7414965986394557, 'samples': 0.7631578947368421, 'weighted': 0.7533118510562119, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f858caa5870>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.58323; Allocated: 1417216; Reserved: 8388608; time used = 3.3751115798950195s
epoch 10: train_loss: 0.06620; Allocated: 1417216; Reserved: 8388608; time used = 3.306685447692871s
epoch 15: train_loss: 0.07223; Allocated: 1417216; Reserved: 8388608; time used = 3.3329484462738037s
epoch 20: train_loss: 0.00984; Allocated: 1417216; Reserved: 8388608; time used = 3.34377384185791s
epoch 25: train_loss: 0.06063; Allocated: 1417216; Reserved: 8388608; time used = 3.3365373611450195s
epoch 30: train_loss: 0.03883; Allocated: 1417216; Reserved: 8388608; time used = 3.3072285652160645s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.663651943206787.
Training classifier using 80.00% nodes...
{'micro': 0.5072463768115942, 'macro': 0.4891114982578397, 'samples': 0.5072463768115942, 'weighted': 0.49608645154774533, 'accuracy': 0.5072463768115942}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f116b17f0f0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f0767ccf370>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.48886; Allocated: 1009664; Reserved: 6291456; time used = 6.543745756149292s
epoch 10: train_loss: 0.46365; Allocated: 1009664; Reserved: 6291456; time used = 6.394858121871948s
epoch 15: train_loss: 0.43331; Allocated: 1009664; Reserved: 6291456; time used = 6.545217752456665s
epoch 20: train_loss: 0.42556; Allocated: 1009664; Reserved: 6291456; time used = 6.558830738067627s
epoch 25: train_loss: 0.42331; Allocated: 1009664; Reserved: 6291456; time used = 6.3682239055633545s
epoch 30: train_loss: 0.42368; Allocated: 1009664; Reserved: 6291456; time used = 6.5119547843933105s
epoch 35: train_loss: 0.40990; Allocated: 1009664; Reserved: 6291456; time used = 6.5228917598724365s
epoch 40: train_loss: 0.40906; Allocated: 1009664; Reserved: 8388608; time used = 6.541564702987671s
epoch 45: train_loss: 0.41338; Allocated: 1009664; Reserved: 8388608; time used = 6.388374090194702s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 61.90811514854431.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6166666666666667, 'samples': 0.6231884057971014, 'weighted': 0.6202898550724637, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f2a59a712d0>
total iter: 500
epoch 5: train_loss: 1.34945; Allocated: 53607424; Reserved: 109051904; time used = 0.8155519962310791s
epoch 10: train_loss: 1.36734; Allocated: 53607424; Reserved: 109051904; time used = 0.8135359287261963s
epoch 15: train_loss: 1.26838; Allocated: 53607424; Reserved: 109051904; time used = 0.8111634254455566s
epoch 20: train_loss: 1.19709; Allocated: 53607424; Reserved: 109051904; time used = 0.8107008934020996s
epoch 25: train_loss: 1.18871; Allocated: 53607424; Reserved: 109051904; time used = 0.8029615879058838s
epoch 30: train_loss: 1.15008; Allocated: 53607424; Reserved: 109051904; time used = 0.8022310733795166s
epoch 35: train_loss: 1.13269; Allocated: 53607424; Reserved: 109051904; time used = 0.8043155670166016s
epoch 40: train_loss: 1.12809; Allocated: 53607424; Reserved: 109051904; time used = 0.8038396835327148s
epoch 45: train_loss: 1.11800; Allocated: 53607424; Reserved: 109051904; time used = 0.8023931980133057s
epoch 50: train_loss: 1.09291; Allocated: 53607424; Reserved: 109051904; time used = 0.9821786880493164s
epoch 55: train_loss: 1.06015; Allocated: 53607424; Reserved: 109051904; time used = 0.8038830757141113s
epoch 60: train_loss: 1.03830; Allocated: 53607424; Reserved: 109051904; time used = 0.8031549453735352s
epoch 65: train_loss: 1.03589; Allocated: 53607424; Reserved: 109051904; time used = 0.8043901920318604s
epoch 70: train_loss: 1.01375; Allocated: 53607424; Reserved: 109051904; time used = 0.8066961765289307s
epoch 75: train_loss: 1.01679; Allocated: 53607424; Reserved: 109051904; time used = 0.8081679344177246s
epoch 80: train_loss: 1.01523; Allocated: 53607424; Reserved: 109051904; time used = 0.803126335144043s
epoch 85: train_loss: 1.00337; Allocated: 53607424; Reserved: 109051904; time used = 0.8056461811065674s
epoch 90: train_loss: 1.01248; Allocated: 53607424; Reserved: 109051904; time used = 0.8029894828796387s
epoch 95: train_loss: 0.98969; Allocated: 53607424; Reserved: 109051904; time used = 0.8033277988433838s
epoch 100: train_loss: 1.00343; Allocated: 53607424; Reserved: 109051904; time used = 0.8249146938323975s
epoch 105: train_loss: 0.98119; Allocated: 53607424; Reserved: 109051904; time used = 0.8047254085540771s
epoch 110: train_loss: 0.96468; Allocated: 53607424; Reserved: 109051904; time used = 0.8095052242279053s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.791832447052002.
Training classifier using 20.00% nodes...
{'micro': 0.43643122676579926, 'macro': 0.3338849180502226, 'samples': 0.44102178812922616, 'weighted': 0.38539993847604975, 'accuracy': 0.44102178812922616}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcc89364550>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3068.04it/s]100%|██████████| 1500/1500 [00:00<00:00, 5528.90it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9c256f0050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3069.13it/s] 44%|████▍     | 883/2000 [00:00<00:00, 3044.62it/s] 98%|█████████▊| 1955/2000 [00:00<00:00, 3877.49it/s]100%|██████████| 2000/2000 [00:00<00:00, 5067.32it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd81bd5e140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2823.24it/s]100%|██████████| 1500/1500 [00:00<00:00, 5218.36it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f5a031f1050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3060.51it/s]100%|██████████| 1500/1500 [00:00<00:00, 5520.70it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fec27531050>
total iter: 500
epoch 5: train_loss: 8603.18219; Allocated: 829952; Reserved: 14680064; time used = 7.568889617919922s
epoch 10: train_loss: 204.61506; Allocated: 829952; Reserved: 14680064; time used = 7.3967695236206055s
epoch 15: train_loss: 666.72319; Allocated: 829952; Reserved: 14680064; time used = 7.385252475738525s
epoch 20: train_loss: 712.14538; Allocated: 829952; Reserved: 14680064; time used = 7.31059718132019s
epoch 25: train_loss: 366.52934; Allocated: 829952; Reserved: 14680064; time used = 7.560395002365112s
epoch 30: train_loss: 3.98746; Allocated: 829952; Reserved: 14680064; time used = 7.320258140563965s
epoch 35: train_loss: 76.03337; Allocated: 829952; Reserved: 14680064; time used = 7.296350479125977s
epoch 40: train_loss: 1.76538; Allocated: 829952; Reserved: 14680064; time used = 7.379301071166992s
epoch 45: train_loss: 42.35618; Allocated: 829952; Reserved: 14680064; time used = 7.604175329208374s
epoch 50: train_loss: 17.87158; Allocated: 829952; Reserved: 14680064; time used = 7.430730104446411s
epoch 55: train_loss: 19.86360; Allocated: 829952; Reserved: 14680064; time used = 7.388739109039307s
epoch 60: train_loss: 1.38805; Allocated: 829952; Reserved: 14680064; time used = 7.529206275939941s
epoch 65: train_loss: 1.50270; Allocated: 829952; Reserved: 14680064; time used = 7.381453990936279s
epoch 70: train_loss: 4.44866; Allocated: 829952; Reserved: 14680064; time used = 7.334745168685913s
epoch 75: train_loss: 8.32624; Allocated: 829952; Reserved: 14680064; time used = 7.387538433074951s
epoch 80: train_loss: 30.48554; Allocated: 829952; Reserved: 14680064; time used = 7.5721964836120605s
epoch 85: train_loss: 1.89900; Allocated: 829952; Reserved: 14680064; time used = 7.3379807472229s
epoch 90: train_loss: 2.70178; Allocated: 829952; Reserved: 14680064; time used = 7.324274301528931s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 136.7717354297638.
Training classifier using 80.00% nodes...
{'micro': 0.43666666666666665, 'macro': 0.3525129592066712, 'samples': 0.43666666666666665, 'weighted': 0.341937570430471, 'accuracy': 0.43666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe29b65b3c0>
total iter: 500
epoch 5: train_loss: 0.63537; Allocated: 907264; Reserved: 4194304; time used = 4.0817296504974365s
epoch 10: train_loss: 0.63853; Allocated: 907264; Reserved: 6291456; time used = 4.223687171936035s
epoch 15: train_loss: 0.64227; Allocated: 907264; Reserved: 6291456; time used = 4.077228307723999s
epoch 20: train_loss: 0.63260; Allocated: 907264; Reserved: 4194304; time used = 4.2293901443481445s
epoch 25: train_loss: 0.63643; Allocated: 907264; Reserved: 4194304; time used = 4.062779903411865s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.698305368423462.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.560909090909091, 'samples': 0.5942028985507246, 'weighted': 0.5696706192358367, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f75e6f22960>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f47a990b230>
total iter: 500
epoch 5: train_loss: 0.34297; Allocated: 53415424; Reserved: 109051904; time used = 0.7998123168945312s
epoch 10: train_loss: 0.18752; Allocated: 53415424; Reserved: 109051904; time used = 0.8061978816986084s
epoch 15: train_loss: 0.11997; Allocated: 53415424; Reserved: 109051904; time used = 0.7975659370422363s
epoch 20: train_loss: 0.07590; Allocated: 53415424; Reserved: 109051904; time used = 0.7968223094940186s
epoch 25: train_loss: 0.03758; Allocated: 53415424; Reserved: 109051904; time used = 0.7972440719604492s
epoch 30: train_loss: 0.02706; Allocated: 53415424; Reserved: 109051904; time used = 0.8121967315673828s
epoch 35: train_loss: 0.01899; Allocated: 53415424; Reserved: 109051904; time used = 0.7983889579772949s
epoch 40: train_loss: 0.01543; Allocated: 53415424; Reserved: 109051904; time used = 0.800067663192749s
epoch 45: train_loss: 0.02076; Allocated: 53415424; Reserved: 109051904; time used = 0.7962617874145508s
epoch 50: train_loss: 0.03518; Allocated: 53415424; Reserved: 109051904; time used = 0.9854366779327393s
epoch 55: train_loss: 0.03259; Allocated: 53415424; Reserved: 109051904; time used = 0.7979526519775391s
epoch 60: train_loss: 0.01568; Allocated: 53415424; Reserved: 109051904; time used = 0.8001022338867188s
epoch 65: train_loss: 0.01680; Allocated: 53415424; Reserved: 109051904; time used = 0.7986748218536377s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 14.110992431640625.
Training classifier using 20.00% nodes...
{'micro': 0.504460966542751, 'macro': 0.4374641235279429, 'samples': 0.5097670924117205, 'weighted': 0.485477078537825, 'accuracy': 0.5097670924117205}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f2786739f00>
total iter: 500
epoch 5: train_loss: 3.18616; Allocated: 17475072; Reserved: 41943040; time used = 0.8355247974395752s
epoch 10: train_loss: 1.91350; Allocated: 17475072; Reserved: 41943040; time used = 0.8334627151489258s
epoch 15: train_loss: 1.34656; Allocated: 17475072; Reserved: 41943040; time used = 0.8384063243865967s
epoch 20: train_loss: 1.38717; Allocated: 17475072; Reserved: 41943040; time used = 0.826202392578125s
epoch 25: train_loss: 1.38294; Allocated: 17475072; Reserved: 41943040; time used = 0.8219931125640869s
epoch 30: train_loss: 1.38082; Allocated: 17475072; Reserved: 41943040; time used = 0.8230230808258057s
epoch 35: train_loss: 1.37669; Allocated: 17475072; Reserved: 41943040; time used = 0.8217959403991699s
epoch 40: train_loss: 1.36290; Allocated: 17475072; Reserved: 41943040; time used = 0.8245129585266113s
epoch 45: train_loss: 1.28232; Allocated: 17475072; Reserved: 41943040; time used = 0.8218777179718018s
epoch 50: train_loss: 1.21062; Allocated: 17475072; Reserved: 41943040; time used = 0.8242473602294922s
epoch 55: train_loss: 1.21619; Allocated: 17475072; Reserved: 41943040; time used = 0.9868707656860352s
epoch 60: train_loss: 1.15247; Allocated: 17475072; Reserved: 41943040; time used = 0.8329756259918213s
epoch 65: train_loss: 1.10634; Allocated: 17475072; Reserved: 41943040; time used = 0.8340072631835938s
epoch 70: train_loss: 1.08052; Allocated: 17475072; Reserved: 41943040; time used = 0.8213870525360107s
epoch 75: train_loss: 1.05099; Allocated: 17475072; Reserved: 41943040; time used = 0.8212485313415527s
epoch 80: train_loss: 1.05267; Allocated: 17475072; Reserved: 41943040; time used = 0.8299601078033447s
epoch 85: train_loss: 1.01890; Allocated: 17475072; Reserved: 41943040; time used = 0.8207986354827881s
epoch 90: train_loss: 1.02668; Allocated: 17475072; Reserved: 41943040; time used = 0.8208565711975098s
epoch 95: train_loss: 1.07028; Allocated: 17475072; Reserved: 41943040; time used = 0.8254008293151855s
epoch 100: train_loss: 1.06213; Allocated: 17475072; Reserved: 41943040; time used = 0.8385574817657471s
epoch 105: train_loss: 1.02799; Allocated: 17475072; Reserved: 41943040; time used = 0.8286087512969971s
epoch 110: train_loss: 1.00929; Allocated: 17475072; Reserved: 41943040; time used = 0.8197128772735596s
epoch 115: train_loss: 1.02656; Allocated: 17475072; Reserved: 41943040; time used = 0.8187594413757324s
epoch 120: train_loss: 1.00703; Allocated: 17475072; Reserved: 41943040; time used = 0.8205935955047607s
epoch 125: train_loss: 1.00022; Allocated: 17475072; Reserved: 41943040; time used = 0.8280978202819824s
epoch 130: train_loss: 1.00135; Allocated: 17475072; Reserved: 41943040; time used = 0.8214449882507324s
epoch 135: train_loss: 0.99354; Allocated: 17475072; Reserved: 41943040; time used = 0.8187150955200195s
epoch 140: train_loss: 0.98576; Allocated: 17475072; Reserved: 41943040; time used = 0.9847161769866943s
epoch 145: train_loss: 0.97457; Allocated: 17475072; Reserved: 41943040; time used = 0.8231680393218994s
epoch 150: train_loss: 1.02197; Allocated: 17475072; Reserved: 41943040; time used = 0.8223507404327393s
epoch 155: train_loss: 1.04106; Allocated: 17475072; Reserved: 41943040; time used = 0.821829080581665s
epoch 160: train_loss: 1.01358; Allocated: 17475072; Reserved: 41943040; time used = 0.8216156959533691s
epoch 165: train_loss: 1.00883; Allocated: 17475072; Reserved: 41943040; time used = 0.8229589462280273s
epoch 170: train_loss: 0.99092; Allocated: 17475072; Reserved: 41943040; time used = 0.8230106830596924s
epoch 175: train_loss: 0.98162; Allocated: 17475072; Reserved: 41943040; time used = 0.8211703300476074s
epoch 180: train_loss: 0.97630; Allocated: 17475072; Reserved: 41943040; time used = 0.8207714557647705s
epoch 185: train_loss: 0.96360; Allocated: 17475072; Reserved: 41943040; time used = 0.8223707675933838s
epoch 190: train_loss: 0.95942; Allocated: 17475072; Reserved: 41943040; time used = 0.8195197582244873s
epoch 195: train_loss: 0.96142; Allocated: 17475072; Reserved: 41943040; time used = 0.8209817409515381s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35.86887550354004.
Training classifier using 20.00% nodes...
{'micro': 0.4222427318874019, 'macro': 0.20019880412765925, 'samples': 0.4222427318874019, 'weighted': 0.3065491694300494, 'accuracy': 0.4222427318874019}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fceeb9a78c0>
total iter: 500
epoch 5: train_loss: 536.49307; Allocated: 1054208; Reserved: 8388608; time used = 1.854496717453003s
epoch 10: train_loss: 12.51772; Allocated: 1054208; Reserved: 8388608; time used = 1.8843011856079102s
epoch 15: train_loss: 3.68540; Allocated: 1054208; Reserved: 8388608; time used = 1.9491698741912842s
epoch 20: train_loss: 1.47186; Allocated: 1054208; Reserved: 8388608; time used = 1.8977417945861816s
epoch 25: train_loss: 1.42345; Allocated: 1054208; Reserved: 10485760; time used = 1.837312936782837s
epoch 30: train_loss: 1.39205; Allocated: 1054208; Reserved: 8388608; time used = 1.8712913990020752s
epoch 35: train_loss: 1.40775; Allocated: 1054208; Reserved: 8388608; time used = 1.846193552017212s
epoch 40: train_loss: 1.37618; Allocated: 1054208; Reserved: 8388608; time used = 1.9284696578979492s
epoch 45: train_loss: 1.38146; Allocated: 1054208; Reserved: 8388608; time used = 1.9305803775787354s
epoch 50: train_loss: 1.37892; Allocated: 1054208; Reserved: 10485760; time used = 1.8367793560028076s
epoch 55: train_loss: 1.37553; Allocated: 1054208; Reserved: 8388608; time used = 1.858271837234497s
epoch 60: train_loss: 1.37989; Allocated: 1054208; Reserved: 10485760; time used = 1.9012115001678467s
epoch 65: train_loss: 1.37631; Allocated: 1054208; Reserved: 8388608; time used = 1.9323577880859375s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 29.703195095062256.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f16b8d6b5a0>
head 0
total iter: 500
epoch 5: train_loss: 0.50913; Allocated: 657920; Reserved: 4194304; time used = 1.1324965953826904s
epoch 10: train_loss: 0.45660; Allocated: 657920; Reserved: 4194304; time used = 1.0957865715026855s
epoch 15: train_loss: 0.45337; Allocated: 657920; Reserved: 4194304; time used = 1.0742900371551514s
epoch 20: train_loss: 0.44369; Allocated: 657920; Reserved: 4194304; time used = 1.087315320968628s
epoch 25: train_loss: 0.43859; Allocated: 657920; Reserved: 4194304; time used = 1.092533826828003s
epoch 30: train_loss: 0.44003; Allocated: 657920; Reserved: 4194304; time used = 1.0835797786712646s
epoch 35: train_loss: 0.43155; Allocated: 657920; Reserved: 4194304; time used = 1.0770900249481201s
epoch 40: train_loss: 0.42741; Allocated: 657920; Reserved: 4194304; time used = 1.092970609664917s
epoch 45: train_loss: 0.42406; Allocated: 657920; Reserved: 4194304; time used = 1.0741846561431885s
epoch 50: train_loss: 0.43193; Allocated: 657920; Reserved: 4194304; time used = 1.0715887546539307s
epoch 55: train_loss: 0.42226; Allocated: 657920; Reserved: 4194304; time used = 1.078026533126831s
epoch 60: train_loss: 0.41971; Allocated: 657920; Reserved: 4194304; time used = 1.1085505485534668s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.734873056411743.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcd8a7c34b0>
total iter: 500
epoch 5: train_loss: 1.37307; Allocated: 639488; Reserved: 4194304; time used = 2.9428138732910156s
epoch 10: train_loss: 1.36644; Allocated: 639488; Reserved: 4194304; time used = 2.942615509033203s
epoch 15: train_loss: 1.36138; Allocated: 639488; Reserved: 4194304; time used = 3.0861847400665283s
epoch 20: train_loss: 1.36280; Allocated: 639488; Reserved: 4194304; time used = 2.9410383701324463s
epoch 25: train_loss: 1.36301; Allocated: 639488; Reserved: 4194304; time used = 2.9432976245880127s
epoch 30: train_loss: 1.36364; Allocated: 639488; Reserved: 4194304; time used = 3.0698049068450928s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.93927788734436.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.592857142857143, 'samples': 0.6842105263157895, 'weighted': 0.6233082706766918, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3010.26it/s]100%|██████████| 1500/1500 [00:00<00:00, 5457.75it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f82b1b1d2d0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.44292068481445s
epoch 10: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 192.94102382659912s
epoch 15: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.97954726219177s
epoch 20: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.49558687210083s
epoch 25: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.12712121009827s
epoch 30: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 195.5068781375885s
epoch 35: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 193.96111154556274s
epoch 40: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 191.63560795783997s
epoch 45: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.98964738845825s
epoch 50: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.60053181648254s
epoch 55: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.85372614860535s
epoch 60: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.0554392337799s
epoch 65: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.5880024433136s
epoch 70: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.35256052017212s
epoch 75: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.54136180877686s
epoch 80: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.2149760723114s
epoch 85: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.6705150604248s
epoch 90: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.3778955936432s
epoch 95: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.81432938575745s
epoch 100: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.22371673583984s
epoch 105: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.99198365211487s
epoch 110: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 193.5169758796692s
epoch 115: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.64330291748047s
epoch 120: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.0056836605072s
epoch 125: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.5214924812317s
epoch 130: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.1851727962494s
epoch 135: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.75011801719666s
epoch 140: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.47126865386963s
epoch 145: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 195.81072068214417s
epoch 150: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.35674667358398s
epoch 155: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.74282717704773s
epoch 160: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.02062511444092s
epoch 165: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.08614492416382s
epoch 170: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.64962339401245s
epoch 175: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.4945616722107s
epoch 180: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.11328101158142s
epoch 185: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.01913404464722s
epoch 190: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.3261799812317s
epoch 195: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.31048488616943s
epoch 200: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.9278199672699s
epoch 205: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.32452011108398s
epoch 210: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.95099353790283s
epoch 215: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.25338578224182s
epoch 220: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 219.32701134681702s
epoch 225: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 216.99579238891602s
epoch 230: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.89221000671387s
epoch 235: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.3452639579773s
epoch 240: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 215.29001879692078s
epoch 245: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 211.969544172287s
epoch 250: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 214.60415768623352s
epoch 255: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.2445433139801s
epoch 260: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.25259160995483s
epoch 265: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.25247144699097s
epoch 270: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.67254424095154s
epoch 275: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.81335186958313s
epoch 280: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.3287627696991s
epoch 285: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.23094010353088s
epoch 290: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 206.41652846336365s
epoch 295: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.7824263572693s
epoch 300: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 206.3095474243164s
epoch 305: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 203.2895486354828s
epoch 310: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.02084803581238s
epoch 315: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.561128616333s
epoch 320: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 212.70220184326172s
epoch 325: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.90355920791626s
epoch 330: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 218.26293087005615s
epoch 335: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 216.96098637580872s
epoch 340: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 210.7866826057434s
epoch 345: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 213.16922807693481s
epoch 350: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 217.71468424797058s
epoch 355: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.17763423919678s
epoch 360: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 209.35702228546143s
epoch 365: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 201.4775505065918s
epoch 370: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.92421221733093s
epoch 375: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.00276708602905s
epoch 380: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.67426943778992s
epoch 385: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.4188268184662s
epoch 390: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.1172456741333s
epoch 395: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.44610500335693s
epoch 400: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.7614848613739s
epoch 405: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.1035921573639s
epoch 410: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.4873824119568s
epoch 415: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.12260603904724s
epoch 420: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.78935551643372s
epoch 425: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.44747257232666s
epoch 430: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.8079957962036s
epoch 435: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.79413557052612s
epoch 440: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.61802577972412s
epoch 445: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 214.78020405769348s
epoch 450: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 226.25656723976135s
epoch 455: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.3832492828369s
epoch 460: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.33998107910156s
epoch 465: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.89868593215942s
epoch 470: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.09382128715515s
epoch 475: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.02521395683289s
epoch 480: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 205.70474553108215s
epoch 485: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 219.4796290397644s
epoch 490: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 213.4931662082672s
epoch 495: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 209.29611659049988s
epoch 500: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 214.07905530929565s
Finished training. Time used = 20239.763179302216.
Training classifier using 80.00% nodes...
{'micro': 0.32, 'macro': 0.25866071037533395, 'samples': 0.32, 'weighted': 0.25090088906407393, 'accuracy': 0.32}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe4e89b37d0>
total iter: 500
epoch 5: train_loss: 0.54379; Allocated: 573952; Reserved: 4194304; time used = 3.0890088081359863s
epoch 10: train_loss: 0.34929; Allocated: 573952; Reserved: 4194304; time used = 3.106858015060425s
epoch 15: train_loss: 0.18186; Allocated: 573952; Reserved: 4194304; time used = 3.270376205444336s
epoch 20: train_loss: 0.15313; Allocated: 573952; Reserved: 4194304; time used = 3.1164653301239014s
epoch 25: train_loss: 0.09437; Allocated: 573952; Reserved: 4194304; time used = 3.1132431030273438s
epoch 30: train_loss: 0.11066; Allocated: 573952; Reserved: 4194304; time used = 3.280336618423462s
epoch 35: train_loss: 0.14246; Allocated: 573952; Reserved: 4194304; time used = 3.0989913940429688s
epoch 40: train_loss: 0.12299; Allocated: 573952; Reserved: 4194304; time used = 3.120012044906616s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.19774317741394.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.6801346801346801, 'samples': 0.7368421052631579, 'weighted': 0.7013999645578592, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2972.24it/s]100%|██████████| 1500/1500 [00:00<00:00, 5400.24it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f22acc0aa00>
total iter: 500
epoch 5: train_loss: 28.89287; Allocated: 420864; Reserved: 6291456; time used = 36.783183097839355s
epoch 10: train_loss: 17.64136; Allocated: 420864; Reserved: 8388608; time used = 35.984517335891724s
epoch 15: train_loss: 5.72984; Allocated: 420864; Reserved: 8388608; time used = 36.58374047279358s
epoch 20: train_loss: 4.10414; Allocated: 420864; Reserved: 8388608; time used = 36.50978636741638s
epoch 25: train_loss: 3.01582; Allocated: 420864; Reserved: 8388608; time used = 36.35449266433716s
epoch 30: train_loss: 2.12863; Allocated: 420864; Reserved: 6291456; time used = 36.12374496459961s
epoch 35: train_loss: 1.61589; Allocated: 420864; Reserved: 8388608; time used = 36.51083159446716s
epoch 40: train_loss: 1.59332; Allocated: 420864; Reserved: 8388608; time used = 36.42640399932861s
epoch 45: train_loss: 1.44926; Allocated: 420864; Reserved: 8388608; time used = 36.461029291152954s
epoch 50: train_loss: 1.39399; Allocated: 420864; Reserved: 6291456; time used = 36.18608236312866s
epoch 55: train_loss: 1.38136; Allocated: 420864; Reserved: 6291456; time used = 36.5897262096405s
epoch 60: train_loss: 1.36515; Allocated: 420864; Reserved: 8388608; time used = 35.87000274658203s
epoch 65: train_loss: 1.36465; Allocated: 420864; Reserved: 8388608; time used = 36.31311750411987s
epoch 70: train_loss: 1.35525; Allocated: 420864; Reserved: 8388608; time used = 36.44950294494629s
epoch 75: train_loss: 1.35788; Allocated: 420864; Reserved: 8388608; time used = 36.44717526435852s
epoch 80: train_loss: 1.35105; Allocated: 420864; Reserved: 6291456; time used = 36.725223541259766s
epoch 85: train_loss: 1.33518; Allocated: 420864; Reserved: 8388608; time used = 36.31995368003845s
epoch 90: train_loss: 1.33907; Allocated: 420864; Reserved: 6291456; time used = 36.62593221664429s
epoch 95: train_loss: 1.31597; Allocated: 420864; Reserved: 8388608; time used = 36.14917039871216s
epoch 100: train_loss: 1.31051; Allocated: 420864; Reserved: 8388608; time used = 36.162415981292725s
epoch 105: train_loss: 1.31056; Allocated: 420864; Reserved: 6291456; time used = 36.365370988845825s
epoch 110: train_loss: 1.30234; Allocated: 420864; Reserved: 8388608; time used = 36.28617191314697s
epoch 115: train_loss: 1.30285; Allocated: 420864; Reserved: 8388608; time used = 36.64159417152405s
epoch 120: train_loss: 1.30661; Allocated: 420864; Reserved: 8388608; time used = 36.332364559173584s
epoch 125: train_loss: 1.30260; Allocated: 420864; Reserved: 8388608; time used = 36.43506574630737s
epoch 130: train_loss: 1.30536; Allocated: 420864; Reserved: 6291456; time used = 36.36765456199646s
epoch 135: train_loss: 1.29350; Allocated: 420864; Reserved: 6291456; time used = 36.31982493400574s
epoch 140: train_loss: 1.28989; Allocated: 420864; Reserved: 8388608; time used = 36.194703340530396s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1043.807609796524.
Training classifier using 80.00% nodes...
{'micro': 0.42333333333333334, 'macro': 0.3424080615569977, 'samples': 0.42333333333333334, 'weighted': 0.33213581971028777, 'accuracy': 0.42333333333333334}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2423.49it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3154.27it/s]100%|██████████| 2000/2000 [00:00<00:00, 5359.67it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9ed543f140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc9db7a4780>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3036.37it/s]100%|██████████| 1500/1500 [00:00<00:00, 5505.99it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fc291d512d0>
total iter: 500
epoch 5: train_loss: 64701.57681; Allocated: 846336; Reserved: 16777216; time used = 8.711268901824951s
epoch 10: train_loss: 17803.67395; Allocated: 846336; Reserved: 37748736; time used = 8.44835090637207s
epoch 15: train_loss: 10396.47951; Allocated: 846336; Reserved: 16777216; time used = 8.418970108032227s
epoch 20: train_loss: 2033.31803; Allocated: 846336; Reserved: 16777216; time used = 8.469430685043335s
epoch 25: train_loss: 2131.62545; Allocated: 846336; Reserved: 16777216; time used = 8.658002614974976s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.12619400024414.
Training classifier using 80.00% nodes...
{'micro': 0.4633333333333333, 'macro': 0.3758239327582394, 'samples': 0.4633333333333333, 'weighted': 0.3645492147754922, 'accuracy': 0.4633333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8ce26184b0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f4e75859e60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbf96d179b0>
total iter: 500
epoch 5: train_loss: 0.64709; Allocated: 712704; Reserved: 4194304; time used = 0.9012987613677979s
epoch 10: train_loss: 0.63433; Allocated: 712704; Reserved: 6291456; time used = 0.9083602428436279s
epoch 15: train_loss: 0.63497; Allocated: 712704; Reserved: 4194304; time used = 0.9561378955841064s
epoch 20: train_loss: 0.62401; Allocated: 712704; Reserved: 4194304; time used = 0.902545690536499s
epoch 25: train_loss: 0.61628; Allocated: 712704; Reserved: 4194304; time used = 0.9012818336486816s
epoch 30: train_loss: 0.55923; Allocated: 712704; Reserved: 4194304; time used = 0.9001965522766113s
epoch 35: train_loss: 0.54921; Allocated: 712704; Reserved: 4194304; time used = 1.044283390045166s
epoch 40: train_loss: 0.51773; Allocated: 712704; Reserved: 4194304; time used = 0.9040238857269287s
epoch 45: train_loss: 0.55325; Allocated: 712704; Reserved: 4194304; time used = 0.8957486152648926s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.884525775909424.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.45526315789473687, 'samples': 0.5652173913043478, 'weighted': 0.47299771167048055, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2972.87it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3794.66it/s]100%|██████████| 2000/2000 [00:00<00:00, 6092.57it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff800cd3140>
total iter: 500
epoch 5: train_loss: 0.66955; Allocated: 3930112; Reserved: 33554432; time used = 1188.6910212039948s
epoch 10: train_loss: 0.55304; Allocated: 3930112; Reserved: 33554432; time used = 1155.4166343212128s
epoch 15: train_loss: 0.67090; Allocated: 3930112; Reserved: 31457280; time used = 1146.3397500514984s
epoch 20: train_loss: 0.53992; Allocated: 3930112; Reserved: 35651584; time used = 1163.625210762024s
epoch 25: train_loss: 0.38114; Allocated: 3930112; Reserved: 35651584; time used = 1198.6555619239807s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6809.6748483181.
Training classifier using 80.00% nodes...
{'micro': 0.6525, 'macro': 0.6199875607438949, 'samples': 0.6525, 'weighted': 0.6166529515894226, 'accuracy': 0.6525}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2efbeb49b0>
total iter: 500
epoch 5: train_loss: 1.37054; Allocated: 579072; Reserved: 8388608; time used = 4.5509703159332275s
epoch 10: train_loss: 1.40370; Allocated: 579072; Reserved: 8388608; time used = 4.545522212982178s
epoch 15: train_loss: 1.40545; Allocated: 579072; Reserved: 8388608; time used = 4.732619285583496s
epoch 20: train_loss: 1.30033; Allocated: 579072; Reserved: 8388608; time used = 4.677115440368652s
epoch 25: train_loss: 1.27951; Allocated: 579072; Reserved: 8388608; time used = 4.659750938415527s
epoch 30: train_loss: 1.25249; Allocated: 579072; Reserved: 8388608; time used = 4.309560060501099s
epoch 35: train_loss: 1.25253; Allocated: 579072; Reserved: 8388608; time used = 4.205403804779053s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.032124042510986.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2987.99it/s]100%|██████████| 1500/1500 [00:00<00:00, 5422.38it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3641310320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2954.50it/s] 83%|████████▎ | 1665/2000 [00:00<00:00, 3778.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 6097.92it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f824d4a2140>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56036; Allocated: 4198912; Reserved: 33554432; time used = 164.0576696395874s
epoch 10: train_loss: 0.23920; Allocated: 4198912; Reserved: 31457280; time used = 161.87173509597778s
epoch 15: train_loss: 0.14588; Allocated: 4198912; Reserved: 31457280; time used = 164.48438906669617s
epoch 20: train_loss: 0.08292; Allocated: 4198912; Reserved: 31457280; time used = 162.03349494934082s
epoch 25: train_loss: 0.04969; Allocated: 4198912; Reserved: 31457280; time used = 164.62646627426147s
epoch 30: train_loss: 0.02878; Allocated: 4198912; Reserved: 33554432; time used = 163.59431529045105s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1115.1767182350159.
Training classifier using 80.00% nodes...
{'micro': 0.6325, 'macro': 0.6312809225501816, 'samples': 0.6325, 'weighted': 0.6319169629587826, 'accuracy': 0.6325}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2471.55it/s] 83%|████████▎ | 1653/2000 [00:00<00:00, 3212.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 5437.08it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2ff1e9c140>
total iter: 500
epoch 5: train_loss: 0.68574; Allocated: 3849728; Reserved: 31457280; time used = 781.5205492973328s
epoch 10: train_loss: 0.63784; Allocated: 3849728; Reserved: 33554432; time used = 785.067880153656s
epoch 15: train_loss: 0.58108; Allocated: 3849728; Reserved: 31457280; time used = 793.1028871536255s
epoch 20: train_loss: 0.54464; Allocated: 3849728; Reserved: 33554432; time used = 795.2010455131531s
epoch 25: train_loss: 0.50416; Allocated: 3849728; Reserved: 29360128; time used = 807.0822575092316s
epoch 30: train_loss: 0.50840; Allocated: 3849728; Reserved: 31457280; time used = 803.8811771869659s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 4769.506956577301.
Training classifier using 80.00% nodes...
{'micro': 0.7125, 'macro': 0.7047022949767292, 'samples': 0.7125, 'weighted': 0.7032627186647409, 'accuracy': 0.7125}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f33b769d050>
total iter: 500
epoch 5: train_loss: 1.54689; Allocated: 781312; Reserved: 6291456; time used = 5.18738317489624s
epoch 10: train_loss: 1.33555; Allocated: 781312; Reserved: 4194304; time used = 5.445841550827026s
epoch 15: train_loss: 1.31290; Allocated: 781312; Reserved: 4194304; time used = 5.556049346923828s
epoch 20: train_loss: 1.30230; Allocated: 781312; Reserved: 6291456; time used = 4.777031898498535s
epoch 25: train_loss: 1.28605; Allocated: 781312; Reserved: 6291456; time used = 4.636531591415405s
epoch 30: train_loss: 1.26890; Allocated: 781312; Reserved: 4194304; time used = 4.802932024002075s
epoch 35: train_loss: 1.26894; Allocated: 781312; Reserved: 6291456; time used = 4.7046685218811035s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.56221580505371.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.5964912280701754, 'samples': 0.6086956521739131, 'weighted': 0.6015764047800661, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2818.08it/s]100%|██████████| 1500/1500 [00:00<00:00, 5388.35it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa596546050>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68525; Allocated: 565760; Reserved: 8388608; time used = 203.95487260818481s
epoch 10: train_loss: 0.66312; Allocated: 565760; Reserved: 8388608; time used = 203.10415172576904s
epoch 15: train_loss: 0.64962; Allocated: 565760; Reserved: 8388608; time used = 204.47262358665466s
epoch 20: train_loss: 0.64356; Allocated: 565760; Reserved: 6291456; time used = 204.8854010105133s
epoch 25: train_loss: 0.47133; Allocated: 565760; Reserved: 6291456; time used = 203.41775155067444s
epoch 30: train_loss: 0.48335; Allocated: 565760; Reserved: 8388608; time used = 202.9486620426178s
epoch 35: train_loss: 0.17311; Allocated: 565760; Reserved: 6291456; time used = 203.55670595169067s
epoch 40: train_loss: 0.07218; Allocated: 565760; Reserved: 6291456; time used = 201.55503582954407s
epoch 45: train_loss: 0.01950; Allocated: 565760; Reserved: 6291456; time used = 206.90667533874512s
epoch 50: train_loss: 0.11563; Allocated: 565760; Reserved: 6291456; time used = 204.32730627059937s
epoch 55: train_loss: 0.05805; Allocated: 565760; Reserved: 6291456; time used = 207.1075155735016s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2413.5713551044464.
Training classifier using 80.00% nodes...

{'micro': 0.40333333333333327, 'macro': 0.40145342531129335, 'samples': 0.4033333333333333, 'weighted': 0.39915601544535556, 'accuracy': 0.4033333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5328e71280>
total iter: 500
epoch 5: train_loss: 0.47921; Allocated: 510976; Reserved: 4194304; time used = 3.1150193214416504s
epoch 10: train_loss: 0.26541; Allocated: 510976; Reserved: 4194304; time used = 3.115943193435669s
epoch 15: train_loss: 0.14107; Allocated: 510976; Reserved: 4194304; time used = 3.234835386276245s
epoch 20: train_loss: 0.09774; Allocated: 510976; Reserved: 4194304; time used = 3.0455377101898193s
epoch 25: train_loss: 0.07392; Allocated: 510976; Reserved: 4194304; time used = 3.04581356048584s
epoch 30: train_loss: 0.07750; Allocated: 510976; Reserved: 4194304; time used = 3.163710117340088s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.5593478679657.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.731764705882353, 'samples': 0.7631578947368421, 'weighted': 0.7462538699690403, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f9f5dd00500>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f06c9578320>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.31655; Allocated: 659968; Reserved: 6291456; time used = 3.282902479171753s
epoch 10: train_loss: 1.26759; Allocated: 659968; Reserved: 6291456; time used = 3.2525696754455566s
epoch 15: train_loss: 1.29339; Allocated: 659968; Reserved: 6291456; time used = 3.3949077129364014s
epoch 20: train_loss: 1.24356; Allocated: 659968; Reserved: 6291456; time used = 3.237593412399292s
epoch 25: train_loss: 1.21226; Allocated: 659968; Reserved: 6291456; time used = 3.2241132259368896s
epoch 30: train_loss: 1.19603; Allocated: 659968; Reserved: 6291456; time used = 3.258883476257324s
epoch 35: train_loss: 1.21028; Allocated: 659968; Reserved: 6291456; time used = 3.4336938858032227s
epoch 40: train_loss: 1.21092; Allocated: 659968; Reserved: 6291456; time used = 3.2603919506073s
epoch 45: train_loss: 1.19832; Allocated: 659968; Reserved: 6291456; time used = 3.2724342346191406s
epoch 50: train_loss: 1.21187; Allocated: 659968; Reserved: 6291456; time used = 3.249098300933838s
epoch 55: train_loss: 1.19425; Allocated: 659968; Reserved: 6291456; time used = 3.366401433944702s
epoch 60: train_loss: 1.19091; Allocated: 659968; Reserved: 6291456; time used = 3.2361717224121094s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 45.592467308044434.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2805.89it/s]100%|██████████| 1500/1500 [00:00<00:00, 5382.85it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ffa1996e050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.870629787445068s
epoch 10: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.921894550323486s
epoch 15: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.85097622871399s
epoch 20: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.147064685821533s
epoch 25: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.994779109954834s
epoch 30: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 12.074945449829102s
epoch 35: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.821378707885742s
epoch 40: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.932636976242065s
epoch 45: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.753677368164062s
epoch 50: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.933000326156616s
epoch 55: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.59048080444336s
epoch 60: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.02110505104065s
epoch 65: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.038303136825562s
epoch 70: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.037633895874023s
epoch 75: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.935717344284058s
epoch 80: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.003956079483032s
epoch 85: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.998497486114502s
epoch 90: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.024184465408325s
epoch 95: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.948850393295288s
epoch 100: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.040624380111694s
epoch 105: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.020287990570068s
epoch 110: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 12.074668884277344s
epoch 115: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.549402952194214s
epoch 120: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.629741430282593s
epoch 125: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.747203826904297s
epoch 130: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.665204286575317s
epoch 135: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.548200130462646s
epoch 140: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.74653935432434s
epoch 145: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 11.653002500534058s
epoch 150: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.617694854736328s
epoch 155: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.52548098564148s
epoch 160: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.618477582931519s
epoch 165: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.643881559371948s
epoch 170: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.588281869888306s
epoch 175: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.574193000793457s
epoch 180: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.586135864257812s
epoch 185: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.696574926376343s
epoch 190: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.523388147354126s
epoch 195: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.656852722167969s
epoch 200: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.679332494735718s
epoch 205: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.478986978530884s
epoch 210: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.674848318099976s
epoch 215: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.636289358139038s
epoch 220: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.683379411697388s
epoch 225: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.534626483917236s
epoch 230: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.668049097061157s
epoch 235: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.617838621139526s
epoch 240: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.636171340942383s
epoch 245: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.69037413597107s
epoch 250: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.498866081237793s
epoch 255: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.635395050048828s
epoch 260: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.554940700531006s
epoch 265: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.66523265838623s
epoch 270: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.506706953048706s
epoch 275: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.545477628707886s
epoch 280: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.580054998397827s
epoch 285: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.638432264328003s
epoch 290: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.511151552200317s
epoch 295: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.535542249679565s
epoch 300: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.577576398849487s
epoch 305: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.769923210144043s
epoch 310: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.551416873931885s
epoch 315: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.627477407455444s
epoch 320: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.668613910675049s
epoch 325: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.481733560562134s
epoch 330: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.739413261413574s
epoch 335: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.621972560882568s
epoch 340: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.62821888923645s
epoch 345: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 11.681933164596558s
epoch 350: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.558166980743408s
epoch 355: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.628924131393433s
epoch 360: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.651427984237671s
epoch 365: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 11.540461301803589s
epoch 370: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.672854661941528s
epoch 375: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.622526407241821s
epoch 380: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.669617414474487s
epoch 385: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.608227491378784s
epoch 390: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.559883832931519s
epoch 395: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.68016529083252s
epoch 400: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.569090127944946s
epoch 405: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.465810060501099s
epoch 410: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.710960626602173s
epoch 415: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.610934019088745s
epoch 420: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.619944334030151s
epoch 425: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.740703821182251s
epoch 430: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.414087295532227s
epoch 435: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.602529287338257s
epoch 440: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.604423761367798s
epoch 445: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.67045783996582s
epoch 450: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.601660251617432s
epoch 455: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.70389699935913s
epoch 460: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.584030389785767s
epoch 465: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.470406293869019s
epoch 470: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.748675346374512s
epoch 475: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.559907674789429s
epoch 480: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.655494213104248s
epoch 485: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.493040800094604s
epoch 490: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.644940376281738s
epoch 495: train_loss: 0.69315; Allocated: 485888; Reserved: 10485760; time used = 11.678784847259521s
epoch 500: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 11.653271198272705s
Finished training. Time used = 1172.399890422821.
Training classifier using 80.00% nodes...

{'micro': 0.32, 'macro': 0.25866071037533395, 'samples': 0.32, 'weighted': 0.25090088906407393, 'accuracy': 0.32}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2855.42it/s]100%|██████████| 1500/1500 [00:00<00:00, 5486.18it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f45836d5050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.09166884422302s
epoch 10: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 200.96096301078796s
epoch 15: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 200.53170204162598s
epoch 20: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 197.2166154384613s
epoch 25: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.13723373413086s
epoch 30: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 192.80266737937927s
epoch 35: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.45617246627808s
epoch 40: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 188.84011721611023s
epoch 45: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.17912340164185s
epoch 50: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.038321018219s
epoch 55: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.37991094589233s
epoch 60: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 191.1256968975067s
epoch 65: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.64884781837463s
epoch 70: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 194.01213479042053s
epoch 75: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.71226716041565s
epoch 80: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.55389547348022s
epoch 85: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.1818778514862s
epoch 90: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 198.3193621635437s
epoch 95: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 198.84458923339844s
epoch 100: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.10789227485657s
epoch 105: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 191.2065920829773s
epoch 110: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.8405511379242s
epoch 115: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.0349998474121s
epoch 120: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.81137895584106s
epoch 125: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.73377919197083s
epoch 130: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.38717818260193s
epoch 135: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 201.07380175590515s
epoch 140: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 199.55075597763062s
epoch 145: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.6293487548828s
epoch 150: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 198.34219193458557s
epoch 155: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.20827984809875s
epoch 160: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.22939205169678s
epoch 165: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.3296661376953s
epoch 170: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 199.84936428070068s
epoch 175: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.33166003227234s
epoch 180: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.1513545513153s
epoch 185: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.03075695037842s
epoch 190: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.25531315803528s
epoch 195: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.42340660095215s
epoch 200: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.95206093788147s
epoch 205: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.13866257667542s
epoch 210: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.92762351036072s
epoch 215: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 197.33370327949524s
epoch 220: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 201.75899600982666s
epoch 225: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.37099599838257s
epoch 230: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.52010822296143s
epoch 235: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.35349464416504s
epoch 240: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.30356407165527s
epoch 245: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 189.25243377685547s
epoch 250: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.24991655349731s
epoch 255: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.3465542793274s
epoch 260: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.27441811561584s
epoch 265: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.54858493804932s
epoch 270: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.77436542510986s
epoch 275: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.98072600364685s
epoch 280: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.4554545879364s
epoch 285: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.5926821231842s
epoch 290: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.64561343193054s
epoch 295: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.30020380020142s
epoch 300: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.6303415298462s
epoch 305: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.77729892730713s
epoch 310: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.24776554107666s
epoch 315: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.98699188232422s
epoch 320: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.56827545166016s
epoch 325: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.9857039451599s
epoch 330: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 194.121155500412s
epoch 335: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.22471833229065s
epoch 340: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.53676414489746s
epoch 345: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 193.7273244857788s
epoch 350: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.48012733459473s
epoch 355: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.71048402786255s
epoch 360: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.3260133266449s
epoch 365: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 193.65657496452332s
epoch 370: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.62105917930603s
epoch 375: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.56597113609314s
epoch 380: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 191.9832842350006s
epoch 385: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 191.9648835659027s
epoch 390: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 197.6448037624359s
epoch 395: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.109477519989s
epoch 400: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 190.2360954284668s
epoch 405: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.66263937950134s
epoch 410: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 194.55956649780273s
epoch 415: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 192.41398286819458s
epoch 420: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.30776023864746s
epoch 425: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.46006560325623s
epoch 430: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 193.25318574905396s
epoch 435: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 199.62550163269043s
epoch 440: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.98277807235718s
epoch 445: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.00377774238586s
epoch 450: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 198.65031003952026s
epoch 455: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 195.96919131278992s
epoch 460: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 200.9428789615631s
epoch 465: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 201.74696159362793s
epoch 470: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 200.22433495521545s
epoch 475: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 201.0672092437744s
epoch 480: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 197.93337321281433s
epoch 485: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 198.16474866867065s
epoch 490: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 196.60850477218628s
epoch 495: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 198.18710136413574s
epoch 500: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 202.07690572738647s
Finished training. Time used = 19469.87058520317.
Training classifier using 80.00% nodes...

{'micro': 0.33, 'macro': 0.2670427215881761, 'samples': 0.33, 'weighted': 0.2590314399405308, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f507eeccd70>
total iter: 500
epoch 5: train_loss: 0.55482; Allocated: 1138688; Reserved: 8388608; time used = 1.7724218368530273s
epoch 10: train_loss: 0.47331; Allocated: 1138688; Reserved: 8388608; time used = 1.686147689819336s
epoch 15: train_loss: 0.38792; Allocated: 1138688; Reserved: 8388608; time used = 1.689377784729004s
epoch 20: train_loss: 0.25120; Allocated: 1138688; Reserved: 8388608; time used = 1.7033207416534424s
epoch 25: train_loss: 0.11002; Allocated: 1138688; Reserved: 8388608; time used = 1.6777141094207764s
epoch 30: train_loss: 0.06103; Allocated: 1138688; Reserved: 8388608; time used = 1.7045199871063232s
epoch 35: train_loss: 0.03419; Allocated: 1138688; Reserved: 8388608; time used = 1.6725897789001465s
epoch 40: train_loss: 0.01680; Allocated: 1138688; Reserved: 8388608; time used = 1.6796128749847412s
epoch 45: train_loss: 0.02848; Allocated: 1138688; Reserved: 8388608; time used = 1.6846568584442139s
epoch 50: train_loss: 0.00867; Allocated: 1138688; Reserved: 8388608; time used = 1.6791672706604004s
epoch 55: train_loss: 0.02246; Allocated: 1138688; Reserved: 8388608; time used = 1.6812498569488525s
epoch 60: train_loss: 0.00379; Allocated: 1138688; Reserved: 8388608; time used = 1.7042381763458252s
epoch 65: train_loss: 0.04963; Allocated: 1138688; Reserved: 8388608; time used = 1.6961696147918701s
epoch 70: train_loss: 0.00381; Allocated: 1138688; Reserved: 8388608; time used = 1.6799726486206055s
epoch 75: train_loss: 0.01440; Allocated: 1138688; Reserved: 8388608; time used = 1.6860132217407227s
epoch 80: train_loss: 0.00419; Allocated: 1138688; Reserved: 8388608; time used = 1.6936733722686768s
epoch 85: train_loss: 0.00126; Allocated: 1138688; Reserved: 8388608; time used = 1.6886379718780518s
epoch 90: train_loss: 0.00120; Allocated: 1138688; Reserved: 8388608; time used = 1.6827852725982666s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.63604211807251.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5328820116054158, 'samples': 0.5942028985507246, 'weighted': 0.5451461889944776, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2875.64it/s]100%|██████████| 1000/1000 [00:00<00:00, 4369.66it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8944dba0a0>
total iter: 500
epoch 5: train_loss: 3872.03198; Allocated: 644608; Reserved: 10485760; time used = 51.458619832992554s
epoch 10: train_loss: 1417.46745; Allocated: 644608; Reserved: 10485760; time used = 52.14201068878174s
epoch 15: train_loss: 787.08121; Allocated: 644608; Reserved: 10485760; time used = 50.9053111076355s
epoch 20: train_loss: 280.71622; Allocated: 644608; Reserved: 10485760; time used = 51.292025327682495s
epoch 25: train_loss: 188.43979; Allocated: 644608; Reserved: 10485760; time used = 51.74005365371704s
epoch 30: train_loss: 220.28247; Allocated: 644608; Reserved: 10485760; time used = 50.854215145111084s
epoch 35: train_loss: 79.88612; Allocated: 644608; Reserved: 10485760; time used = 49.595698833465576s
epoch 40: train_loss: 35.44271; Allocated: 644608; Reserved: 10485760; time used = 50.09656000137329s
epoch 45: train_loss: 70.14030; Allocated: 644608; Reserved: 8388608; time used = 51.32865309715271s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 462.7444155216217.
Training classifier using 80.00% nodes...

{'micro': 0.705, 'macro': 0.7048155096935584, 'samples': 0.705, 'weighted': 0.7049631019387117, 'accuracy': 0.705}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f640aa47050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2902.27it/s]100%|██████████| 1000/1000 [00:00<00:00, 4387.90it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f044e23d050>
total iter: 500
epoch 5: train_loss: 121193.67676; Allocated: 570368; Reserved: 6291456; time used = 51.82456040382385s
epoch 10: train_loss: 13848.13391; Allocated: 570368; Reserved: 6291456; time used = 51.48222303390503s
epoch 15: train_loss: 5843.31342; Allocated: 570368; Reserved: 8388608; time used = 52.97322916984558s
epoch 20: train_loss: 369.89507; Allocated: 570368; Reserved: 6291456; time used = 52.25091004371643s
epoch 25: train_loss: 1.39490; Allocated: 570368; Reserved: 6291456; time used = 53.039992570877075s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 296.9045467376709.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f9a6ca1a410>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2264df52d0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.51893; Allocated: 592384; Reserved: 6291456; time used = 4.250173807144165s
epoch 10: train_loss: 0.51254; Allocated: 592384; Reserved: 6291456; time used = 4.228672504425049s
epoch 15: train_loss: 0.49685; Allocated: 592384; Reserved: 6291456; time used = 4.36572790145874s
epoch 20: train_loss: 0.49977; Allocated: 592384; Reserved: 6291456; time used = 4.246971845626831s
epoch 25: train_loss: 0.48665; Allocated: 592384; Reserved: 6291456; time used = 4.24445652961731s
epoch 30: train_loss: 0.48628; Allocated: 592384; Reserved: 6291456; time used = 4.402249336242676s
epoch 35: train_loss: 0.47542; Allocated: 592384; Reserved: 6291456; time used = 4.737139940261841s
epoch 40: train_loss: 0.47541; Allocated: 592384; Reserved: 6291456; time used = 4.25194525718689s
epoch 45: train_loss: 0.47676; Allocated: 592384; Reserved: 6291456; time used = 5.074318885803223s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.95151329040527.
Training classifier using 80.00% nodes...
{'micro': 0.6578947368421053, 'macro': 0.5947497949138638, 'samples': 0.6578947368421053, 'weighted': 0.6200077716851604, 'accuracy': 0.6578947368421053}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f0569a5e3c0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.44349; Allocated: 41488384; Reserved: 65011712; time used = 2.641801357269287s
epoch 10: train_loss: 0.42815; Allocated: 41488384; Reserved: 65011712; time used = 2.9112465381622314s
epoch 15: train_loss: 0.36746; Allocated: 41488384; Reserved: 65011712; time used = 2.5850086212158203s
epoch 20: train_loss: 0.36065; Allocated: 41488384; Reserved: 65011712; time used = 2.6226491928100586s
epoch 25: train_loss: 0.35567; Allocated: 41488384; Reserved: 65011712; time used = 2.694760322570801s
epoch 30: train_loss: 0.35319; Allocated: 41488384; Reserved: 65011712; time used = 2.837533712387085s
epoch 35: train_loss: 0.35049; Allocated: 41488384; Reserved: 65011712; time used = 2.6385793685913086s
epoch 40: train_loss: 0.35095; Allocated: 41488384; Reserved: 65011712; time used = 2.7318763732910156s
epoch 45: train_loss: 0.34028; Allocated: 41488384; Reserved: 65011712; time used = 2.655405282974243s
epoch 50: train_loss: 0.34132; Allocated: 41488384; Reserved: 65011712; time used = 2.9244449138641357s
epoch 55: train_loss: 0.33717; Allocated: 41488384; Reserved: 65011712; time used = 2.6263489723205566s
epoch 60: train_loss: 0.32579; Allocated: 41488384; Reserved: 65011712; time used = 2.5915536880493164s
epoch 65: train_loss: 0.33768; Allocated: 41488384; Reserved: 65011712; time used = 2.835244655609131s
epoch 70: train_loss: 0.33152; Allocated: 41488384; Reserved: 65011712; time used = 2.725464344024658s
epoch 75: train_loss: 0.32422; Allocated: 41488384; Reserved: 65011712; time used = 2.6571314334869385s
epoch 80: train_loss: 0.32252; Allocated: 41488384; Reserved: 65011712; time used = 2.79205584526062s
epoch 85: train_loss: 0.32339; Allocated: 41488384; Reserved: 65011712; time used = 2.6210451126098633s
epoch 90: train_loss: 0.31781; Allocated: 41488384; Reserved: 65011712; time used = 2.7100841999053955s
epoch 95: train_loss: 0.32091; Allocated: 41488384; Reserved: 65011712; time used = 2.734307289123535s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 56.41468572616577.
Training classifier using 20.00% nodes...
{'micro': 0.7110434892861671, 'macro': 0.7107898404970309, 'samples': 0.7110434892861671, 'weighted': 0.7049771258205357, 'accuracy': 0.7110434892861671}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6e0a023050>
total iter: 500
epoch 5: train_loss: 1.70386; Allocated: 784896; Reserved: 6291456; time used = 4.764800310134888s
epoch 10: train_loss: 1.34824; Allocated: 784896; Reserved: 8388608; time used = 4.550760507583618s
epoch 15: train_loss: 1.31054; Allocated: 784896; Reserved: 6291456; time used = 4.700275182723999s
epoch 20: train_loss: 1.18521; Allocated: 784896; Reserved: 6291456; time used = 4.695484161376953s
epoch 25: train_loss: 1.13451; Allocated: 784896; Reserved: 6291456; time used = 4.515759706497192s
epoch 30: train_loss: 1.20838; Allocated: 784896; Reserved: 8388608; time used = 4.663362741470337s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.801100254058838.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.49818181818181817, 'samples': 0.5362318840579711, 'weighted': 0.5081949934123847, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2856.66it/s]100%|██████████| 1000/1000 [00:00<00:00, 4335.92it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f92f5d7d050>
total iter: 500
epoch 5: train_loss: 142945982.00000; Allocated: 642560; Reserved: 6291456; time used = 189.43715000152588s
epoch 10: train_loss: 11986976.62500; Allocated: 642560; Reserved: 8388608; time used = 188.17562055587769s
epoch 15: train_loss: 785952.96875; Allocated: 642560; Reserved: 8388608; time used = 188.38706612586975s
epoch 20: train_loss: 1954.43585; Allocated: 642560; Reserved: 6291456; time used = 191.51835083961487s
epoch 25: train_loss: 1.42743; Allocated: 642560; Reserved: 6291456; time used = 191.0619020462036s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 952.02983045578.
Training classifier using 80.00% nodes...

{'micro': 0.65, 'macro': 0.6499649964996499, 'samples': 0.65, 'weighted': 0.64989498949895, 'accuracy': 0.65}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff2e7281050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2903.31it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3714.10it/s]100%|██████████| 2000/2000 [00:00<00:00, 6193.21it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbacb652140>
total iter: 500
epoch 5: train_loss: 2.06747; Allocated: 3988480; Reserved: 33554432; time used = 45.258195877075195s
epoch 10: train_loss: 1.69531; Allocated: 3988480; Reserved: 33554432; time used = 43.69952082633972s
epoch 15: train_loss: 1.48185; Allocated: 3988480; Reserved: 33554432; time used = 45.632344245910645s
epoch 20: train_loss: 1.43918; Allocated: 3988480; Reserved: 33554432; time used = 43.42454528808594s
epoch 25: train_loss: 1.39864; Allocated: 3988480; Reserved: 33554432; time used = 45.068437814712524s
epoch 30: train_loss: 1.39996; Allocated: 3988480; Reserved: 33554432; time used = 42.788703203201294s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 287.96000123023987.
Training classifier using 80.00% nodes...

{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9e9aeb4dc0>
total iter: 500
epoch 5: train_loss: 0.60827; Allocated: 986112; Reserved: 4194304; time used = 1.704535722732544s
epoch 10: train_loss: 0.54358; Allocated: 986112; Reserved: 4194304; time used = 1.6613867282867432s
epoch 15: train_loss: 0.38499; Allocated: 986112; Reserved: 4194304; time used = 1.6483054161071777s
epoch 20: train_loss: 0.20836; Allocated: 986112; Reserved: 4194304; time used = 1.644615650177002s
epoch 25: train_loss: 0.23877; Allocated: 986112; Reserved: 4194304; time used = 1.659975528717041s
epoch 30: train_loss: 0.15180; Allocated: 986112; Reserved: 4194304; time used = 1.6392323970794678s
epoch 35: train_loss: 0.08281; Allocated: 986112; Reserved: 4194304; time used = 1.638375997543335s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.48499870300293.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.4449375866851595, 'samples': 0.5797101449275363, 'weighted': 0.4647570805443325, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2830.25it/s] 80%|███████▉  | 1594/2000 [00:00<00:00, 3624.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 6069.91it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 78, in forward
    neg_score = get_score(hxn, neg)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 73, in get_score
    h = self.embed(sample)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 51, in embed
    return self.encoder(x)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 60, in forward
    hx = layer([hx, adj])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 124, in forward
    c = masked_softmax(torch.nn.functional.leaky_relu(c, 0.2), adj)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 99, in masked_softmax
    return (masked_exps/masked_sums)
RuntimeError: CUDA out of memory. Tried to allocate 724.00 MiB (GPU 0; 10.76 GiB total capacity; 9.16 GiB already allocated; 501.12 MiB free; 9.26 GiB reserved in total by PyTorch)
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3293171500>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f2ecf497230>
total iter: 500
epoch 5: train_loss: 1.55835; Allocated: 41049600; Reserved: 62914560; time used = 0.31537413597106934s
epoch 10: train_loss: 1.36915; Allocated: 41049600; Reserved: 62914560; time used = 0.2762634754180908s
epoch 15: train_loss: 1.34045; Allocated: 41049600; Reserved: 62914560; time used = 0.2667229175567627s
epoch 20: train_loss: 1.30939; Allocated: 41049600; Reserved: 62914560; time used = 0.2707085609436035s
epoch 25: train_loss: 1.28237; Allocated: 41049600; Reserved: 62914560; time used = 0.2741243839263916s
epoch 30: train_loss: 1.24665; Allocated: 41049600; Reserved: 62914560; time used = 0.26722168922424316s
epoch 35: train_loss: 1.22039; Allocated: 41049600; Reserved: 62914560; time used = 0.2755551338195801s
epoch 40: train_loss: 1.21513; Allocated: 41049600; Reserved: 62914560; time used = 0.2996847629547119s
epoch 45: train_loss: 1.18399; Allocated: 41049600; Reserved: 62914560; time used = 0.308516263961792s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.48418664932251.
Training classifier using 20.00% nodes...
{'micro': 0.6824521364270318, 'macro': 0.6689055009755599, 'samples': 0.6824521364270318, 'weighted': 0.6820686832434618, 'accuracy': 0.6824521364270318}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f146294e2d0>
total iter: 500
epoch 5: train_loss: 0.55601; Allocated: 41049600; Reserved: 62914560; time used = 0.28630852699279785s
epoch 10: train_loss: 0.40349; Allocated: 41049600; Reserved: 62914560; time used = 0.28929615020751953s
epoch 15: train_loss: 0.36739; Allocated: 41049600; Reserved: 62914560; time used = 0.2867574691772461s
epoch 20: train_loss: 0.32294; Allocated: 41049600; Reserved: 62914560; time used = 0.2901918888092041s
epoch 25: train_loss: 0.28639; Allocated: 41049600; Reserved: 62914560; time used = 0.2932002544403076s
epoch 30: train_loss: 0.29161; Allocated: 41049600; Reserved: 62914560; time used = 0.2870047092437744s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5.942004203796387.
Training classifier using 20.00% nodes...
{'micro': 0.7784328642069228, 'macro': 0.767822609400406, 'samples': 0.7784328642069228, 'weighted': 0.7774608636266555, 'accuracy': 0.7784328642069228}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fe5ec6ee640>
head 0
total iter: 500
epoch 5: train_loss: 0.67420; Allocated: 57412608; Reserved: 165675008; time used = 0.7238848209381104s
epoch 10: train_loss: 0.53670; Allocated: 57412608; Reserved: 165675008; time used = 0.6923367977142334s
epoch 15: train_loss: 0.45171; Allocated: 57412608; Reserved: 165675008; time used = 0.6966519355773926s
epoch 20: train_loss: 0.40328; Allocated: 57412608; Reserved: 165675008; time used = 0.6864418983459473s
epoch 25: train_loss: 0.37451; Allocated: 57412608; Reserved: 165675008; time used = 0.714186429977417s
epoch 30: train_loss: 0.36197; Allocated: 57412608; Reserved: 165675008; time used = 0.6952412128448486s
epoch 35: train_loss: 0.35671; Allocated: 57412608; Reserved: 165675008; time used = 0.6942639350891113s
epoch 40: train_loss: 0.35450; Allocated: 57412608; Reserved: 165675008; time used = 0.6920099258422852s
epoch 45: train_loss: 0.35234; Allocated: 57412608; Reserved: 165675008; time used = 0.7026073932647705s
epoch 50: train_loss: 0.34623; Allocated: 57412608; Reserved: 165675008; time used = 0.6980948448181152s
epoch 55: train_loss: 0.35799; Allocated: 57412608; Reserved: 165675008; time used = 0.6885099411010742s
epoch 60: train_loss: 0.34479; Allocated: 57412608; Reserved: 165675008; time used = 0.6899394989013672s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.354689359664917.
Training classifier using 20.00% nodes...
{'micro': 0.22230483271375467, 'macro': 0.10810826613475799, 'samples': 0.22464312546957174, 'weighted': 0.11420697729500498, 'accuracy': 0.22464312546957174}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f1dd28f7730>
total iter: 500
epoch 5: train_loss: 1.39069; Allocated: 53557248; Reserved: 109051904; time used = 0.9027218818664551s
epoch 10: train_loss: 1.33390; Allocated: 53557248; Reserved: 109051904; time used = 0.8959183692932129s
epoch 15: train_loss: 1.25746; Allocated: 53557248; Reserved: 109051904; time used = 0.8931856155395508s
epoch 20: train_loss: 1.23430; Allocated: 53557248; Reserved: 109051904; time used = 0.8845586776733398s
epoch 25: train_loss: 1.19915; Allocated: 53557248; Reserved: 109051904; time used = 0.8983738422393799s
epoch 30: train_loss: 1.09957; Allocated: 53557248; Reserved: 109051904; time used = 0.8945884704589844s
epoch 35: train_loss: 1.09412; Allocated: 53557248; Reserved: 109051904; time used = 0.8870258331298828s
epoch 40: train_loss: 0.97692; Allocated: 53557248; Reserved: 109051904; time used = 0.882537841796875s
epoch 45: train_loss: 0.89708; Allocated: 53557248; Reserved: 109051904; time used = 0.9084148406982422s
epoch 50: train_loss: 0.97053; Allocated: 53557248; Reserved: 109051904; time used = 1.0689990520477295s
epoch 55: train_loss: 0.89550; Allocated: 53557248; Reserved: 109051904; time used = 0.8905556201934814s
epoch 60: train_loss: 0.77881; Allocated: 53557248; Reserved: 109051904; time used = 0.8964827060699463s
epoch 65: train_loss: 0.75398; Allocated: 53557248; Reserved: 109051904; time used = 0.88311767578125s
epoch 70: train_loss: 0.68807; Allocated: 53557248; Reserved: 109051904; time used = 0.8872799873352051s
epoch 75: train_loss: 0.69297; Allocated: 53557248; Reserved: 109051904; time used = 0.8832838535308838s
epoch 80: train_loss: 0.62164; Allocated: 53557248; Reserved: 109051904; time used = 0.8892247676849365s
epoch 85: train_loss: 0.68406; Allocated: 53557248; Reserved: 109051904; time used = 0.9129199981689453s
epoch 90: train_loss: 0.59110; Allocated: 53557248; Reserved: 109051904; time used = 0.8916387557983398s
epoch 95: train_loss: 0.61955; Allocated: 53557248; Reserved: 109051904; time used = 0.8887193202972412s
epoch 100: train_loss: 0.65216; Allocated: 53557248; Reserved: 109051904; time used = 0.884718656539917s
epoch 105: train_loss: 0.70085; Allocated: 53557248; Reserved: 109051904; time used = 0.8864710330963135s
epoch 110: train_loss: 0.62007; Allocated: 53557248; Reserved: 109051904; time used = 0.8872051239013672s
epoch 115: train_loss: 0.55794; Allocated: 53557248; Reserved: 109051904; time used = 0.8989362716674805s
epoch 120: train_loss: 0.54584; Allocated: 53557248; Reserved: 109051904; time used = 0.9120829105377197s
epoch 125: train_loss: 0.51271; Allocated: 53557248; Reserved: 109051904; time used = 1.05946946144104s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27.025699853897095.
Training classifier using 20.00% nodes...
{'micro': 0.4680297397769517, 'macro': 0.3712118917900171, 'samples': 0.4729526671675432, 'weighted': 0.41478389651148356, 'accuracy': 0.4729526671675432}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f68e4572320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2856.09it/s]100%|██████████| 1000/1000 [00:00<00:00, 4320.74it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb3586b8050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.46862; Allocated: 906752; Reserved: 31457280; time used = 11.343412399291992s
epoch 10: train_loss: 1.39438; Allocated: 906752; Reserved: 31457280; time used = 11.480074167251587s
epoch 15: train_loss: 1.38630; Allocated: 906752; Reserved: 31457280; time used = 11.224871397018433s
epoch 20: train_loss: 1.38713; Allocated: 906752; Reserved: 31457280; time used = 11.262698411941528s
epoch 25: train_loss: 1.38731; Allocated: 906752; Reserved: 31457280; time used = 11.300829887390137s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 61.14294481277466.
Training classifier using 80.00% nodes...

{'micro': 0.615, 'macro': 0.614990374759369, 'samples': 0.615, 'weighted': 0.6149518737968449, 'accuracy': 0.615}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3cf5f7cdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fafab4e6550>
total iter: 500
epoch 5: train_loss: 0.53861; Allocated: 647168; Reserved: 4194304; time used = 3.305941581726074s
epoch 10: train_loss: 0.48734; Allocated: 647168; Reserved: 4194304; time used = 3.2410027980804443s
epoch 15: train_loss: 0.31610; Allocated: 647168; Reserved: 4194304; time used = 3.4102916717529297s
epoch 20: train_loss: 0.25596; Allocated: 647168; Reserved: 4194304; time used = 3.24420428276062s
epoch 25: train_loss: 0.23766; Allocated: 647168; Reserved: 4194304; time used = 3.2585504055023193s
epoch 30: train_loss: 0.28989; Allocated: 647168; Reserved: 4194304; time used = 3.266957998275757s
epoch 35: train_loss: 0.20479; Allocated: 647168; Reserved: 4194304; time used = 3.4284493923187256s
epoch 40: train_loss: 0.51673; Allocated: 647168; Reserved: 4194304; time used = 3.272442579269409s
epoch 45: train_loss: 0.60439; Allocated: 647168; Reserved: 4194304; time used = 3.2640886306762695s
epoch 50: train_loss: 0.27485; Allocated: 647168; Reserved: 4194304; time used = 3.2573354244232178s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.116713523864746.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2790.52it/s] 80%|███████▉  | 1592/2000 [00:00<00:00, 3578.40it/s]100%|██████████| 2000/2000 [00:00<00:00, 6007.85it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5cfb61b3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f8fcaff73c0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41373; Allocated: 41553920; Reserved: 1067450368; time used = 533.1080045700073s
epoch 10: train_loss: 1.38833; Allocated: 41553920; Reserved: 1067450368; time used = 457.94495582580566s
epoch 15: train_loss: 1.38632; Allocated: 41553920; Reserved: 1067450368; time used = 434.3710539340973s
epoch 20: train_loss: 1.38690; Allocated: 41553920; Reserved: 1067450368; time used = 349.539608001709s
epoch 25: train_loss: 1.38765; Allocated: 41553920; Reserved: 1067450368; time used = 350.8918936252594s
epoch 30: train_loss: 1.38815; Allocated: 41553920; Reserved: 1067450368; time used = 353.4108040332794s
epoch 35: train_loss: 1.38790; Allocated: 41553920; Reserved: 1067450368; time used = 350.16978335380554s
epoch 40: train_loss: 1.38724; Allocated: 41553920; Reserved: 1067450368; time used = 349.3048975467682s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 4919.229638814926.
Training classifier using 20.00% nodes...
{'micro': 0.3948903258526689, 'macro': 0.1887318395976306, 'samples': 0.3948903258526689, 'weighted': 0.22358513291244597, 'accuracy': 0.3948903258526689}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2265.26it/s]100%|██████████| 1000/1000 [00:00<00:00, 3562.31it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5ca7e7d050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68244; Allocated: 701952; Reserved: 8388608; time used = 53.2975332736969s
epoch 10: train_loss: 0.68242; Allocated: 701952; Reserved: 8388608; time used = 54.72329831123352s
epoch 15: train_loss: 0.68347; Allocated: 701952; Reserved: 8388608; time used = 53.65315055847168s
epoch 20: train_loss: 0.63188; Allocated: 701952; Reserved: 8388608; time used = 53.26485586166382s
epoch 25: train_loss: 0.66605; Allocated: 701952; Reserved: 8388608; time used = 52.94391584396362s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 285.21167945861816.
Training classifier using 80.00% nodes...

{'micro': 0.65, 'macro': 0.6494391025641026, 'samples': 0.65, 'weighted': 0.6491586538461539, 'accuracy': 0.65}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f4bf16ff640>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39552; Allocated: 57551872; Reserved: 163577856; time used = 1.065619945526123s
epoch 10: train_loss: 1.38143; Allocated: 57551872; Reserved: 163577856; time used = 1.0489628314971924s
epoch 15: train_loss: 1.34111; Allocated: 57551872; Reserved: 163577856; time used = 1.0429496765136719s
epoch 20: train_loss: 1.13040; Allocated: 57551872; Reserved: 163577856; time used = 1.0247454643249512s
epoch 25: train_loss: 0.91977; Allocated: 57551872; Reserved: 163577856; time used = 1.025853157043457s
epoch 30: train_loss: 0.70502; Allocated: 57551872; Reserved: 163577856; time used = 1.0260818004608154s
epoch 35: train_loss: 0.60487; Allocated: 57551872; Reserved: 163577856; time used = 1.0289406776428223s
epoch 40: train_loss: 0.50554; Allocated: 57551872; Reserved: 163577856; time used = 1.0463645458221436s
epoch 45: train_loss: 0.46662; Allocated: 57551872; Reserved: 163577856; time used = 1.031665563583374s
epoch 50: train_loss: 0.43121; Allocated: 57551872; Reserved: 163577856; time used = 1.0301692485809326s
epoch 55: train_loss: 0.38182; Allocated: 57551872; Reserved: 163577856; time used = 1.032092571258545s
epoch 60: train_loss: 0.35831; Allocated: 57551872; Reserved: 163577856; time used = 1.0269019603729248s
epoch 65: train_loss: 0.31914; Allocated: 57551872; Reserved: 163577856; time used = 1.027367353439331s
epoch 70: train_loss: 0.29058; Allocated: 57551872; Reserved: 163577856; time used = 1.0267894268035889s
epoch 75: train_loss: 0.39934; Allocated: 57551872; Reserved: 163577856; time used = 1.029050350189209s
epoch 80: train_loss: 0.29296; Allocated: 57551872; Reserved: 163577856; time used = 1.028099775314331s
epoch 85: train_loss: 0.26941; Allocated: 57551872; Reserved: 163577856; time used = 1.028261423110962s
epoch 90: train_loss: 0.17664; Allocated: 57551872; Reserved: 163577856; time used = 1.028564691543579s
epoch 95: train_loss: 0.16882; Allocated: 57551872; Reserved: 163577856; time used = 1.0319955348968506s
epoch 100: train_loss: 0.15941; Allocated: 57551872; Reserved: 163577856; time used = 1.026698350906372s
epoch 105: train_loss: 0.16777; Allocated: 57551872; Reserved: 163577856; time used = 1.0275413990020752s
epoch 110: train_loss: 0.15238; Allocated: 57551872; Reserved: 163577856; time used = 1.0334067344665527s
epoch 115: train_loss: 0.13788; Allocated: 57551872; Reserved: 163577856; time used = 1.0328161716461182s
epoch 120: train_loss: 0.11820; Allocated: 57551872; Reserved: 163577856; time used = 1.0339603424072266s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.83497405052185.
Training classifier using 20.00% nodes...
{'micro': 0.6130111524163568, 'macro': 0.5261515601579502, 'samples': 0.6194590533433508, 'weighted': 0.5868955481756095, 'accuracy': 0.6194590533433508}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f78709524b0>
total iter: 500
epoch 5: train_loss: 0.58803; Allocated: 666112; Reserved: 4194304; time used = 3.1393542289733887s
epoch 10: train_loss: 0.69321; Allocated: 666112; Reserved: 4194304; time used = 3.1603775024414062s
epoch 15: train_loss: 0.69292; Allocated: 666112; Reserved: 4194304; time used = 3.3019962310791016s
epoch 20: train_loss: 0.69294; Allocated: 666112; Reserved: 4194304; time used = 3.1968226432800293s
epoch 25: train_loss: 0.69290; Allocated: 666112; Reserved: 4194304; time used = 3.2526755332946777s
epoch 30: train_loss: 0.69311; Allocated: 666112; Reserved: 4194304; time used = 3.1507179737091064s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.30838918685913.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.5907692307692308, 'samples': 0.631578947368421, 'weighted': 0.611174089068826, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2929.83it/s]100%|██████████| 1500/1500 [00:00<00:00, 5568.39it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe48eecd320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb0a536c050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.36955; Allocated: 1280000; Reserved: 10485760; time used = 3.0080559253692627s
epoch 10: train_loss: 1.36590; Allocated: 1280000; Reserved: 10485760; time used = 2.9883499145507812s
epoch 15: train_loss: 1.33313; Allocated: 1280000; Reserved: 10485760; time used = 3.0095584392547607s
epoch 20: train_loss: 1.26939; Allocated: 1280000; Reserved: 10485760; time used = 2.968848943710327s
epoch 25: train_loss: 1.27251; Allocated: 1280000; Reserved: 10485760; time used = 2.991746425628662s
epoch 30: train_loss: 1.28266; Allocated: 1280000; Reserved: 10485760; time used = 2.984935998916626s
epoch 35: train_loss: 1.27096; Allocated: 1280000; Reserved: 10485760; time used = 2.9803919792175293s
epoch 40: train_loss: 1.25575; Allocated: 1280000; Reserved: 10485760; time used = 3.0564398765563965s
epoch 45: train_loss: 1.21141; Allocated: 1280000; Reserved: 10485760; time used = 3.007662534713745s
epoch 50: train_loss: 1.16409; Allocated: 1280000; Reserved: 10485760; time used = 3.0594985485076904s
epoch 55: train_loss: 1.17333; Allocated: 1280000; Reserved: 10485760; time used = 2.9960741996765137s
epoch 60: train_loss: 1.05991; Allocated: 1280000; Reserved: 10485760; time used = 2.990739345550537s
epoch 65: train_loss: 1.12531; Allocated: 1280000; Reserved: 10485760; time used = 2.972788095474243s
epoch 70: train_loss: 1.07185; Allocated: 1280000; Reserved: 10485760; time used = 2.9563403129577637s
epoch 75: train_loss: 1.02260; Allocated: 1280000; Reserved: 10485760; time used = 2.985628843307495s
epoch 80: train_loss: 0.96202; Allocated: 1280000; Reserved: 10485760; time used = 3.007439613342285s
epoch 85: train_loss: 1.02408; Allocated: 1280000; Reserved: 10485760; time used = 2.9911365509033203s
epoch 90: train_loss: 0.94536; Allocated: 1280000; Reserved: 12582912; time used = 2.999312400817871s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.5078010559082.
Training classifier using 80.00% nodes...
{'micro': 0.5217391304347826, 'macro': 0.5152224824355972, 'samples': 0.5217391304347826, 'weighted': 0.5192953874350881, 'accuracy': 0.5217391304347826}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2941.84it/s] 80%|███████▉  | 1596/2000 [00:00<00:00, 3753.11it/s]100%|██████████| 2000/2000 [00:00<00:00, 6212.39it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc54e004320>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.63158; Allocated: 4196864; Reserved: 31457280; time used = 1217.0600879192352s
epoch 10: train_loss: 0.59770; Allocated: 4196864; Reserved: 35651584; time used = 1219.3025531768799s
epoch 15: train_loss: 0.56376; Allocated: 4196864; Reserved: 31457280; time used = 1224.5761318206787s
epoch 20: train_loss: 0.54762; Allocated: 4196864; Reserved: 33554432; time used = 1234.865990638733s
epoch 25: train_loss: 0.52176; Allocated: 4196864; Reserved: 31457280; time used = 1235.8293397426605s
epoch 30: train_loss: 0.51976; Allocated: 4196864; Reserved: 31457280; time used = 1235.7925724983215s
epoch 35: train_loss: 0.53802; Allocated: 4196864; Reserved: 31457280; time used = 1235.4942278862s
epoch 40: train_loss: 0.50539; Allocated: 4196864; Reserved: 33554432; time used = 1234.4397311210632s
epoch 45: train_loss: 0.48864; Allocated: 4196864; Reserved: 31457280; time used = 1235.025431394577s
epoch 50: train_loss: 0.47643; Allocated: 4196864; Reserved: 35651584; time used = 1221.9847633838654s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13031.335061311722.
Training classifier using 80.00% nodes...

{'micro': 0.615, 'macro': 0.6140350877192984, 'samples': 0.615, 'weighted': 0.6134561403508773, 'accuracy': 0.615}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa4f85d2c30>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2808.33it/s]100%|██████████| 1000/1000 [00:00<00:00, 4278.50it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fedf1fbd050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68407; Allocated: 769536; Reserved: 8388608; time used = 36.150726556777954s
epoch 10: train_loss: 0.66035; Allocated: 769536; Reserved: 10485760; time used = 36.657159090042114s
epoch 15: train_loss: 0.59007; Allocated: 769536; Reserved: 10485760; time used = 36.0773401260376s
epoch 20: train_loss: 0.68386; Allocated: 769536; Reserved: 8388608; time used = 36.267744064331055s
epoch 25: train_loss: 0.63600; Allocated: 769536; Reserved: 8388608; time used = 36.377732038497925s
epoch 30: train_loss: 0.64062; Allocated: 769536; Reserved: 10485760; time used = 36.153937101364136s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 228.4867343902588.
Training classifier using 80.00% nodes...

{'micro': 0.605, 'macro': 0.6049901247531189, 'samples': 0.605, 'weighted': 0.604950623765594, 'accuracy': 0.605}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb7fd475050>
head 0
total iter: 500
epoch 5: train_loss: 0.59977; Allocated: 737280; Reserved: 6291456; time used = 0.9788212776184082s
epoch 10: train_loss: 0.46847; Allocated: 737280; Reserved: 8388608; time used = 0.9653902053833008s
epoch 15: train_loss: 0.33708; Allocated: 737280; Reserved: 6291456; time used = 0.9708666801452637s
epoch 20: train_loss: 0.27042; Allocated: 737280; Reserved: 6291456; time used = 0.978879451751709s
epoch 25: train_loss: 0.19248; Allocated: 737280; Reserved: 6291456; time used = 1.0085811614990234s
epoch 30: train_loss: 0.18545; Allocated: 737280; Reserved: 6291456; time used = 0.9379913806915283s
epoch 35: train_loss: 0.15496; Allocated: 737280; Reserved: 6291456; time used = 0.9375970363616943s
epoch 40: train_loss: 0.15359; Allocated: 737280; Reserved: 6291456; time used = 0.932788610458374s
epoch 45: train_loss: 0.06842; Allocated: 737280; Reserved: 6291456; time used = 1.1037235260009766s
epoch 50: train_loss: 0.06690; Allocated: 737280; Reserved: 6291456; time used = 0.9484124183654785s
epoch 55: train_loss: 0.01893; Allocated: 737280; Reserved: 6291456; time used = 0.9309999942779541s
epoch 60: train_loss: 0.01560; Allocated: 737280; Reserved: 6291456; time used = 0.9374918937683105s
epoch 65: train_loss: 0.00849; Allocated: 737280; Reserved: 6291456; time used = 0.9257774353027344s
epoch 70: train_loss: 0.00564; Allocated: 737280; Reserved: 8388608; time used = 0.9314618110656738s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.53566026687622.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4362745098039216, 'samples': 0.5652173913043478, 'weighted': 0.4558113100312589, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f61770ca6e0>
total iter: 500
epoch 5: train_loss: 0.42452; Allocated: 53478400; Reserved: 109051904; time used = 4.246504068374634s
epoch 10: train_loss: 0.13917; Allocated: 53478400; Reserved: 109051904; time used = 4.302764892578125s
epoch 15: train_loss: 0.05733; Allocated: 53478400; Reserved: 109051904; time used = 4.167194604873657s
epoch 20: train_loss: 0.02816; Allocated: 53478400; Reserved: 109051904; time used = 4.330490350723267s
epoch 25: train_loss: 0.00661; Allocated: 53478400; Reserved: 109051904; time used = 4.154487133026123s
epoch 30: train_loss: 0.01302; Allocated: 53478400; Reserved: 109051904; time used = 4.153505086898804s
epoch 35: train_loss: 0.01385; Allocated: 53478400; Reserved: 109051904; time used = 4.298939943313599s
epoch 40: train_loss: 0.00130; Allocated: 53478400; Reserved: 109051904; time used = 4.161226511001587s
epoch 45: train_loss: 0.01779; Allocated: 53478400; Reserved: 109051904; time used = 4.346123933792114s
epoch 50: train_loss: 0.00631; Allocated: 53478400; Reserved: 109051904; time used = 4.16515040397644s
epoch 55: train_loss: 0.00172; Allocated: 53478400; Reserved: 109051904; time used = 4.254141807556152s
epoch 60: train_loss: 0.00038; Allocated: 53478400; Reserved: 109051904; time used = 4.123881816864014s
epoch 65: train_loss: 0.00035; Allocated: 53478400; Reserved: 109051904; time used = 4.1667938232421875s
epoch 70: train_loss: 0.00054; Allocated: 53478400; Reserved: 109051904; time used = 4.33111047744751s
epoch 75: train_loss: 0.00053; Allocated: 53478400; Reserved: 109051904; time used = 4.1606550216674805s
epoch 80: train_loss: 0.00059; Allocated: 53478400; Reserved: 109051904; time used = 4.282948732376099s
epoch 85: train_loss: 0.00015; Allocated: 53478400; Reserved: 109051904; time used = 4.156286716461182s
epoch 90: train_loss: 0.00042; Allocated: 53478400; Reserved: 109051904; time used = 4.1535844802856445s
epoch 95: train_loss: 0.00021; Allocated: 53478400; Reserved: 109051904; time used = 4.349285840988159s
epoch 100: train_loss: 0.00015; Allocated: 53478400; Reserved: 109051904; time used = 4.147169828414917s
epoch 105: train_loss: 0.00032; Allocated: 53478400; Reserved: 109051904; time used = 4.274716854095459s
epoch 110: train_loss: 0.00047; Allocated: 53478400; Reserved: 109051904; time used = 4.158694267272949s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 98.0699520111084.
Training classifier using 20.00% nodes...
{'micro': 0.5903345724907063, 'macro': 0.5437123682716284, 'samples': 0.5965439519158527, 'weighted': 0.5838847911707736, 'accuracy': 0.5965439519158527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff9d388a2d0>
total iter: 500
epoch 5: train_loss: 337.10759; Allocated: 849920; Reserved: 27262976; time used = 1.219684362411499s
epoch 10: train_loss: 108.91145; Allocated: 849920; Reserved: 27262976; time used = 1.2335293292999268s
epoch 15: train_loss: 88.17264; Allocated: 849920; Reserved: 6291456; time used = 1.2094039916992188s
epoch 20: train_loss: 48.03636; Allocated: 849920; Reserved: 6291456; time used = 1.2133259773254395s
epoch 25: train_loss: 10.00513; Allocated: 849920; Reserved: 6291456; time used = 1.2082700729370117s
epoch 30: train_loss: 1.68538; Allocated: 849920; Reserved: 6291456; time used = 1.2208328247070312s
epoch 35: train_loss: 1.44628; Allocated: 849920; Reserved: 6291456; time used = 1.2079923152923584s
epoch 40: train_loss: 1.44251; Allocated: 849920; Reserved: 6291456; time used = 1.2231171131134033s
epoch 45: train_loss: 1.39864; Allocated: 849920; Reserved: 6291456; time used = 1.2121140956878662s
epoch 50: train_loss: 1.39819; Allocated: 849920; Reserved: 27262976; time used = 1.2054524421691895s
epoch 55: train_loss: 1.38333; Allocated: 849920; Reserved: 6291456; time used = 1.2164809703826904s
epoch 60: train_loss: 1.38771; Allocated: 849920; Reserved: 6291456; time used = 1.2007460594177246s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.087806701660156.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.5521885521885521, 'samples': 0.631578947368421, 'weighted': 0.5819599503810029, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f6c6301a1e0>
total iter: 500
epoch 5: train_loss: 0.68365; Allocated: 934400; Reserved: 29360128; time used = 1.3046681880950928s
epoch 10: train_loss: 0.61525; Allocated: 934400; Reserved: 29360128; time used = 1.2792177200317383s
epoch 15: train_loss: 0.49932; Allocated: 934400; Reserved: 8388608; time used = 1.2673490047454834s
epoch 20: train_loss: 0.49051; Allocated: 934400; Reserved: 8388608; time used = 1.2582647800445557s
epoch 25: train_loss: 0.37146; Allocated: 934400; Reserved: 8388608; time used = 1.26706862449646s
epoch 30: train_loss: 0.18714; Allocated: 934400; Reserved: 8388608; time used = 1.2570133209228516s
epoch 35: train_loss: 0.26665; Allocated: 934400; Reserved: 8388608; time used = 1.259376049041748s
epoch 40: train_loss: 0.39888; Allocated: 934400; Reserved: 8388608; time used = 1.258512258529663s
epoch 45: train_loss: 0.21997; Allocated: 934400; Reserved: 8388608; time used = 1.272521734237671s
epoch 50: train_loss: 0.16822; Allocated: 934400; Reserved: 29360128; time used = 1.2570750713348389s
epoch 55: train_loss: 0.12934; Allocated: 934400; Reserved: 8388608; time used = 1.2601802349090576s
epoch 60: train_loss: 0.09236; Allocated: 934400; Reserved: 8388608; time used = 1.267820119857788s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.73729395866394.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.6833333333333333, 'samples': 0.6842105263157895, 'weighted': 0.6859649122807018, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2744.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 4168.50it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3b1793d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fdba9776d70>
total iter: 500
epoch 5: train_loss: 0.65133; Allocated: 919552; Reserved: 4194304; time used = 0.9649243354797363s
epoch 10: train_loss: 0.59887; Allocated: 919552; Reserved: 6291456; time used = 0.9635012149810791s
epoch 15: train_loss: 0.68949; Allocated: 919552; Reserved: 6291456; time used = 1.032607078552246s
epoch 20: train_loss: 0.68446; Allocated: 919552; Reserved: 4194304; time used = 1.009681224822998s
epoch 25: train_loss: 0.66906; Allocated: 919552; Reserved: 4194304; time used = 0.9480631351470947s
epoch 30: train_loss: 0.57254; Allocated: 919552; Reserved: 4194304; time used = 1.1013476848602295s
epoch 35: train_loss: 0.64668; Allocated: 919552; Reserved: 4194304; time used = 0.9610629081726074s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.30592679977417.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5251942286348501, 'samples': 0.5507246376811594, 'weighted': 0.5331724814618218, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2625.24it/s]100%|██████████| 1000/1000 [00:00<00:00, 4046.32it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fab30b0c500>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39685; Allocated: 701952; Reserved: 8388608; time used = 35.817612171173096s
epoch 10: train_loss: 1.38911; Allocated: 701952; Reserved: 8388608; time used = 35.97797966003418s
epoch 15: train_loss: 1.38676; Allocated: 701952; Reserved: 8388608; time used = 36.12233090400696s
epoch 20: train_loss: 1.38225; Allocated: 701952; Reserved: 8388608; time used = 36.05381512641907s
epoch 25: train_loss: 1.37290; Allocated: 701952; Reserved: 8388608; time used = 35.788522720336914s
epoch 30: train_loss: 1.41915; Allocated: 701952; Reserved: 8388608; time used = 35.808558225631714s
epoch 35: train_loss: 1.38893; Allocated: 701952; Reserved: 8388608; time used = 36.04343891143799s
epoch 40: train_loss: 1.38790; Allocated: 701952; Reserved: 8388608; time used = 36.10828638076782s
epoch 45: train_loss: 1.38645; Allocated: 701952; Reserved: 8388608; time used = 35.71653175354004s
epoch 50: train_loss: 1.38413; Allocated: 701952; Reserved: 8388608; time used = 35.8971734046936s
epoch 55: train_loss: 1.37866; Allocated: 701952; Reserved: 8388608; time used = 35.942816495895386s
epoch 60: train_loss: 1.37234; Allocated: 701952; Reserved: 8388608; time used = 35.741514682769775s
epoch 65: train_loss: 1.35782; Allocated: 701952; Reserved: 8388608; time used = 36.19439196586609s
epoch 70: train_loss: 1.33630; Allocated: 701952; Reserved: 10485760; time used = 35.999916076660156s
epoch 75: train_loss: 1.35273; Allocated: 701952; Reserved: 8388608; time used = 36.08089470863342s
epoch 80: train_loss: 1.31067; Allocated: 701952; Reserved: 8388608; time used = 36.03620886802673s
epoch 85: train_loss: 1.30035; Allocated: 701952; Reserved: 8388608; time used = 35.85730266571045s
epoch 90: train_loss: 1.33573; Allocated: 701952; Reserved: 10485760; time used = 36.05148983001709s
epoch 95: train_loss: 1.33571; Allocated: 701952; Reserved: 8388608; time used = 36.041332483291626s
epoch 100: train_loss: 1.30530; Allocated: 701952; Reserved: 8388608; time used = 35.824079275131226s
epoch 105: train_loss: 1.30108; Allocated: 701952; Reserved: 8388608; time used = 36.07353234291077s
epoch 110: train_loss: 1.26226; Allocated: 701952; Reserved: 8388608; time used = 35.78208947181702s
epoch 115: train_loss: 1.23758; Allocated: 701952; Reserved: 8388608; time used = 35.952024936676025s
epoch 120: train_loss: 1.22824; Allocated: 701952; Reserved: 8388608; time used = 35.97381854057312s
epoch 125: train_loss: 1.19715; Allocated: 701952; Reserved: 8388608; time used = 35.97585344314575s
epoch 130: train_loss: 1.20390; Allocated: 701952; Reserved: 10485760; time used = 36.28264117240906s
epoch 135: train_loss: 1.16942; Allocated: 701952; Reserved: 8388608; time used = 35.78969478607178s
epoch 140: train_loss: 1.15785; Allocated: 701952; Reserved: 10485760; time used = 35.870882749557495s
epoch 145: train_loss: 1.14906; Allocated: 701952; Reserved: 8388608; time used = 35.94867968559265s
epoch 150: train_loss: 1.13774; Allocated: 701952; Reserved: 10485760; time used = 36.13156032562256s
epoch 155: train_loss: 1.11892; Allocated: 701952; Reserved: 8388608; time used = 35.875325441360474s
epoch 160: train_loss: 1.12497; Allocated: 701952; Reserved: 10485760; time used = 35.951966762542725s
epoch 165: train_loss: 1.12050; Allocated: 701952; Reserved: 8388608; time used = 35.74836325645447s
epoch 170: train_loss: 1.10559; Allocated: 701952; Reserved: 12582912; time used = 35.96739172935486s
epoch 175: train_loss: 1.10044; Allocated: 701952; Reserved: 8388608; time used = 35.73388886451721s
epoch 180: train_loss: 1.08742; Allocated: 701952; Reserved: 10485760; time used = 36.06323051452637s
epoch 185: train_loss: 1.07810; Allocated: 701952; Reserved: 8388608; time used = 35.974701166152954s
epoch 190: train_loss: 1.08052; Allocated: 701952; Reserved: 8388608; time used = 35.958269357681274s
epoch 195: train_loss: 1.06563; Allocated: 701952; Reserved: 10485760; time used = 35.887112855911255s
epoch 200: train_loss: 1.06346; Allocated: 701952; Reserved: 8388608; time used = 35.936644315719604s
epoch 205: train_loss: 1.05465; Allocated: 701952; Reserved: 10485760; time used = 36.02568554878235s
epoch 210: train_loss: 1.05397; Allocated: 701952; Reserved: 8388608; time used = 35.783026456832886s
epoch 215: train_loss: 1.04315; Allocated: 701952; Reserved: 8388608; time used = 35.89347243309021s
epoch 220: train_loss: 1.05677; Allocated: 701952; Reserved: 12582912; time used = 35.58943057060242s
epoch 225: train_loss: 1.06054; Allocated: 701952; Reserved: 8388608; time used = 35.73154139518738s
epoch 230: train_loss: 1.05080; Allocated: 701952; Reserved: 8388608; time used = 35.99555277824402s
epoch 235: train_loss: 1.05017; Allocated: 701952; Reserved: 8388608; time used = 35.99644136428833s
epoch 240: train_loss: 1.04186; Allocated: 701952; Reserved: 8388608; time used = 36.08996844291687s
epoch 245: train_loss: 1.03524; Allocated: 701952; Reserved: 10485760; time used = 36.69556927680969s
epoch 250: train_loss: 1.02912; Allocated: 701952; Reserved: 8388608; time used = 37.163923263549805s
epoch 255: train_loss: 1.02389; Allocated: 701952; Reserved: 8388608; time used = 37.41259837150574s
epoch 260: train_loss: 1.03993; Allocated: 701952; Reserved: 8388608; time used = 37.68400859832764s
epoch 265: train_loss: 1.01723; Allocated: 701952; Reserved: 8388608; time used = 38.053189277648926s
epoch 270: train_loss: 0.99973; Allocated: 701952; Reserved: 8388608; time used = 37.89267086982727s
epoch 275: train_loss: 1.00831; Allocated: 701952; Reserved: 10485760; time used = 37.3603298664093s
epoch 280: train_loss: 1.00681; Allocated: 701952; Reserved: 8388608; time used = 37.24141883850098s
epoch 285: train_loss: 1.01555; Allocated: 701952; Reserved: 8388608; time used = 37.09768223762512s
epoch 290: train_loss: 1.00218; Allocated: 701952; Reserved: 10485760; time used = 37.19689059257507s
epoch 295: train_loss: 0.99409; Allocated: 701952; Reserved: 8388608; time used = 37.19981646537781s
epoch 300: train_loss: 0.96507; Allocated: 701952; Reserved: 8388608; time used = 37.027841567993164s
epoch 305: train_loss: 0.98654; Allocated: 701952; Reserved: 8388608; time used = 37.079960107803345s
epoch 310: train_loss: 0.97803; Allocated: 701952; Reserved: 8388608; time used = 36.868486166000366s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2265.5602855682373.
Training classifier using 80.00% nodes...

{'micro': 0.61, 'macro': 0.6068152031454783, 'samples': 0.61, 'weighted': 0.6075229357798165, 'accuracy': 0.61}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2362.48it/s]100%|██████████| 1000/1000 [00:00<00:00, 3693.64it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f4fc0839050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 11.92459225654602s
epoch 10: train_loss: 0.69315; Allocated: 558080; Reserved: 8388608; time used = 11.780125856399536s
epoch 15: train_loss: 0.69308; Allocated: 558080; Reserved: 8388608; time used = 11.944432735443115s
epoch 20: train_loss: 0.69253; Allocated: 558080; Reserved: 6291456; time used = 12.026041030883789s
epoch 25: train_loss: 0.69240; Allocated: 558080; Reserved: 8388608; time used = 11.757361888885498s
epoch 30: train_loss: 0.68954; Allocated: 558080; Reserved: 6291456; time used = 11.98386001586914s
epoch 35: train_loss: 0.67932; Allocated: 558080; Reserved: 6291456; time used = 12.136683702468872s
epoch 40: train_loss: 0.61670; Allocated: 558080; Reserved: 6291456; time used = 11.675590515136719s
epoch 45: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 12.049450874328613s
epoch 50: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 11.899019718170166s
epoch 55: train_loss: 0.61194; Allocated: 558080; Reserved: 6291456; time used = 11.744044542312622s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 141.70865869522095.
Training classifier using 80.00% nodes...

{'micro': 0.7, 'macro': 0.7000000000000001, 'samples': 0.7, 'weighted': 0.7, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f743a28f280>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38505; Allocated: 19079680; Reserved: 46137344; time used = 4.989013433456421s
epoch 10: train_loss: 1.36007; Allocated: 19079680; Reserved: 46137344; time used = 5.182546138763428s
epoch 15: train_loss: 1.32831; Allocated: 19079680; Reserved: 46137344; time used = 4.978544473648071s
epoch 20: train_loss: 1.31826; Allocated: 19079680; Reserved: 46137344; time used = 5.199582099914551s
epoch 25: train_loss: 1.27654; Allocated: 19079680; Reserved: 46137344; time used = 5.0145649909973145s
epoch 30: train_loss: 1.26498; Allocated: 19079680; Reserved: 46137344; time used = 5.0327417850494385s
epoch 35: train_loss: 1.25499; Allocated: 19079680; Reserved: 46137344; time used = 5.160125255584717s
epoch 40: train_loss: 1.24407; Allocated: 19079680; Reserved: 46137344; time used = 4.989145755767822s
epoch 45: train_loss: 1.24356; Allocated: 19079680; Reserved: 46137344; time used = 5.194443464279175s
epoch 50: train_loss: 1.24116; Allocated: 19079680; Reserved: 46137344; time used = 4.9957334995269775s
epoch 55: train_loss: 1.24132; Allocated: 19079680; Reserved: 46137344; time used = 5.179311990737915s
epoch 60: train_loss: 1.23845; Allocated: 19079680; Reserved: 46137344; time used = 5.051592588424683s
epoch 65: train_loss: 1.23230; Allocated: 19079680; Reserved: 46137344; time used = 5.076254844665527s
epoch 70: train_loss: 1.22904; Allocated: 19079680; Reserved: 46137344; time used = 5.169633865356445s
epoch 75: train_loss: 1.23088; Allocated: 19079680; Reserved: 46137344; time used = 4.9641523361206055s
epoch 80: train_loss: 1.22934; Allocated: 19079680; Reserved: 46137344; time used = 5.15048623085022s
epoch 85: train_loss: 1.22802; Allocated: 19079680; Reserved: 46137344; time used = 5.023541688919067s
epoch 90: train_loss: 1.23613; Allocated: 19079680; Reserved: 46137344; time used = 5.053582429885864s
epoch 95: train_loss: 1.23383; Allocated: 19079680; Reserved: 46137344; time used = 5.1865074634552s
epoch 100: train_loss: 1.23521; Allocated: 19079680; Reserved: 46137344; time used = 5.049669027328491s
epoch 105: train_loss: 1.23400; Allocated: 19079680; Reserved: 46137344; time used = 5.184316873550415s
epoch 110: train_loss: 1.23326; Allocated: 19079680; Reserved: 46137344; time used = 5.017588138580322s
epoch 115: train_loss: 1.23125; Allocated: 19079680; Reserved: 46137344; time used = 5.198153257369995s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 121.35704517364502.
Training classifier using 20.00% nodes...
{'micro': 0.3465620673742501, 'macro': 0.20582628360676353, 'samples': 0.3465620673742501, 'weighted': 0.2541670514219627, 'accuracy': 0.3465620673742501}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fbc3adcd5a0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68530; Allocated: 57826304; Reserved: 163577856; time used = 1.782038688659668s
epoch 10: train_loss: 0.69207; Allocated: 57826304; Reserved: 163577856; time used = 1.7982416152954102s
epoch 15: train_loss: 0.68984; Allocated: 57826304; Reserved: 163577856; time used = 1.766193151473999s
epoch 20: train_loss: 0.46580; Allocated: 57826304; Reserved: 163577856; time used = 1.7578098773956299s
epoch 25: train_loss: 0.21801; Allocated: 57826304; Reserved: 163577856; time used = 1.79005765914917s
epoch 30: train_loss: 0.08691; Allocated: 57826304; Reserved: 163577856; time used = 1.7622766494750977s
epoch 35: train_loss: 0.06470; Allocated: 57826304; Reserved: 163577856; time used = 1.7963519096374512s
epoch 40: train_loss: 0.05668; Allocated: 57826304; Reserved: 163577856; time used = 1.7855052947998047s
epoch 45: train_loss: 0.02747; Allocated: 57826304; Reserved: 163577856; time used = 1.7986862659454346s
epoch 50: train_loss: 0.01555; Allocated: 57826304; Reserved: 163577856; time used = 1.7938218116760254s
epoch 55: train_loss: 0.01297; Allocated: 57826304; Reserved: 163577856; time used = 1.782052993774414s
epoch 60: train_loss: 0.00629; Allocated: 57826304; Reserved: 163577856; time used = 1.767580509185791s
epoch 65: train_loss: 0.01116; Allocated: 57826304; Reserved: 163577856; time used = 1.7557499408721924s
epoch 70: train_loss: 0.00465; Allocated: 57826304; Reserved: 163577856; time used = 1.7637906074523926s
epoch 75: train_loss: 0.00381; Allocated: 57826304; Reserved: 163577856; time used = 1.78049635887146s
epoch 80: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7767794132232666s
epoch 85: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.777233600616455s
epoch 90: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7924189567565918s
epoch 95: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7875187397003174s
epoch 100: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7689883708953857s
epoch 105: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.763535737991333s
epoch 110: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7600858211517334s
epoch 115: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7627511024475098s
epoch 120: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7703564167022705s
epoch 125: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.75919508934021s
epoch 130: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7611134052276611s
epoch 135: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7562437057495117s
epoch 140: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7579078674316406s
epoch 145: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7672293186187744s
epoch 150: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7808451652526855s
epoch 155: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7847871780395508s
epoch 160: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.784989356994629s
epoch 165: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.8052635192871094s
epoch 170: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7817208766937256s
epoch 175: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7580246925354004s
epoch 180: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7649035453796387s
epoch 185: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7795522212982178s
epoch 190: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7866604328155518s
epoch 195: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7762565612792969s
epoch 200: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7644462585449219s
epoch 205: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7837800979614258s
epoch 210: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7660515308380127s
epoch 215: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7587873935699463s
epoch 220: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7848808765411377s
epoch 225: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7762603759765625s
epoch 230: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.768876075744629s
epoch 235: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7586839199066162s
epoch 240: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7698752880096436s
epoch 245: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7920188903808594s
epoch 250: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7701618671417236s
epoch 255: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7627274990081787s
epoch 260: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7688453197479248s
epoch 265: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.772085189819336s
epoch 270: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7725825309753418s
epoch 275: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7648921012878418s
epoch 280: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.765385627746582s
epoch 285: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7743480205535889s
epoch 290: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.779555082321167s
epoch 295: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7741270065307617s
epoch 300: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.769575834274292s
epoch 305: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7719933986663818s
epoch 310: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7721738815307617s
epoch 315: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7728161811828613s
epoch 320: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7834784984588623s
epoch 325: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.801236867904663s
epoch 330: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7889127731323242s
epoch 335: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7711563110351562s
epoch 340: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.766960859298706s
epoch 345: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7717745304107666s
epoch 350: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7589192390441895s
epoch 355: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.762871503829956s
epoch 360: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7644155025482178s
epoch 365: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7819361686706543s
epoch 370: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.772914171218872s
epoch 375: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7808864116668701s
epoch 380: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7857251167297363s
epoch 385: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7871928215026855s
epoch 390: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7675349712371826s
epoch 395: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7728357315063477s
epoch 400: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.757554531097412s
epoch 405: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7697625160217285s
epoch 410: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7506554126739502s
epoch 415: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7346291542053223s
epoch 420: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7153689861297607s
epoch 425: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7335617542266846s
epoch 430: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.733412265777588s
epoch 435: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.788151502609253s
epoch 440: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.781008005142212s
epoch 445: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.779249668121338s
epoch 450: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.8004040718078613s
epoch 455: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7901172637939453s
epoch 460: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7721240520477295s
epoch 465: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7763772010803223s
epoch 470: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.78359055519104s
epoch 475: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7866356372833252s
epoch 480: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.784330129623413s
epoch 485: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.7775909900665283s
epoch 490: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.8098208904266357s
epoch 495: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.792891263961792s
epoch 500: train_loss: nan; Allocated: 57826304; Reserved: 163577856; time used = 1.9706189632415771s
Finished training. Time used = 181.00605535507202.
Training classifier using 20.00% nodes...
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 253, in main
    res = task.evaluate(model, res, graph)  # evaluate
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/unsupervised_node_classification.py", line 39, in evaluate
    return self._classify(graph, res, 0)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/unsupervised_node_classification.py", line 46, in _classify
    return clf.train_and_evaluate(graph, self.train_kwargs()['clf_ratio'], seed=seed)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 80, in train_and_evaluate
    self.train(X_train, Y_train, graph.labels()[1])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 50, in train
    self.clf.fit(X_train, Y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 239, in fit
    for i, column in enumerate(columns))
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 1004, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 835, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 754, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 209, in apply_async
    result = ImmediateResult(func)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 590, in __init__
    self.results = batch()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in __call__
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 79, in _fit_binary
    estimator.fit(X, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py", line 2004, in fit
    accept_large_sparse=solver != 'liblinear')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 755, in check_X_y
    estimator=estimator)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 578, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 60, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc2307561e0>
total iter: 500
epoch 5: train_loss: 0.43875; Allocated: 17479680; Reserved: 44040192; time used = 3.353712320327759s
epoch 10: train_loss: 0.38801; Allocated: 17479680; Reserved: 44040192; time used = 3.3166418075561523s
epoch 15: train_loss: 0.38142; Allocated: 17479680; Reserved: 44040192; time used = 3.4405205249786377s
epoch 20: train_loss: 0.37245; Allocated: 17479680; Reserved: 44040192; time used = 3.3070805072784424s
epoch 25: train_loss: 0.38030; Allocated: 17479680; Reserved: 44040192; time used = 3.3367648124694824s
epoch 30: train_loss: 0.37499; Allocated: 17479680; Reserved: 44040192; time used = 3.3157784938812256s
epoch 35: train_loss: 0.37607; Allocated: 17479680; Reserved: 44040192; time used = 3.3405802249908447s
epoch 40: train_loss: 0.37414; Allocated: 17479680; Reserved: 44040192; time used = 3.3251867294311523s
epoch 45: train_loss: 0.37868; Allocated: 17479680; Reserved: 44040192; time used = 3.4685521125793457s
epoch 50: train_loss: 0.36850; Allocated: 17479680; Reserved: 44040192; time used = 3.339017152786255s
epoch 55: train_loss: 0.37516; Allocated: 17479680; Reserved: 44040192; time used = 3.3150665760040283s
epoch 60: train_loss: 0.36681; Allocated: 17479680; Reserved: 44040192; time used = 3.2996392250061035s
epoch 65: train_loss: 0.36494; Allocated: 17479680; Reserved: 44040192; time used = 3.468465805053711s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 48.17931389808655.
Training classifier using 20.00% nodes...
{'micro': 0.7918781725888325, 'macro': 0.7797685337677571, 'samples': 0.7918781725888325, 'weighted': 0.7910003205901748, 'accuracy': 0.7918781725888325}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fa4fdb9d730>
total iter: 500
epoch 5: train_loss: 320.93515; Allocated: 53634048; Reserved: 109051904; time used = 3.7141237258911133s
epoch 10: train_loss: 3.98219; Allocated: 53634048; Reserved: 109051904; time used = 3.8121283054351807s
epoch 15: train_loss: 1.59114; Allocated: 53634048; Reserved: 109051904; time used = 3.685239791870117s
epoch 20: train_loss: 1.41676; Allocated: 53634048; Reserved: 109051904; time used = 3.7015929222106934s
epoch 25: train_loss: 1.41618; Allocated: 53634048; Reserved: 109051904; time used = 3.8597984313964844s
epoch 30: train_loss: 1.41049; Allocated: 53634048; Reserved: 109051904; time used = 3.6879990100860596s
epoch 35: train_loss: 1.40614; Allocated: 53634048; Reserved: 109051904; time used = 3.6870391368865967s
epoch 40: train_loss: 1.40211; Allocated: 53634048; Reserved: 109051904; time used = 3.890658378601074s
epoch 45: train_loss: 1.40088; Allocated: 53634048; Reserved: 109051904; time used = 3.677072048187256s
epoch 50: train_loss: 1.40042; Allocated: 53634048; Reserved: 109051904; time used = 3.6853690147399902s
epoch 55: train_loss: 1.39930; Allocated: 53634048; Reserved: 109051904; time used = 3.6820430755615234s
epoch 60: train_loss: 1.39882; Allocated: 53634048; Reserved: 109051904; time used = 3.859952449798584s
epoch 65: train_loss: 1.39859; Allocated: 53634048; Reserved: 109051904; time used = 3.672532320022583s
epoch 70: train_loss: 1.39814; Allocated: 53634048; Reserved: 109051904; time used = 3.6794848442077637s
epoch 75: train_loss: 1.39765; Allocated: 53634048; Reserved: 109051904; time used = 3.71000599861145s
epoch 80: train_loss: 1.39726; Allocated: 53634048; Reserved: 109051904; time used = 3.8517208099365234s
epoch 85: train_loss: 1.39689; Allocated: 53634048; Reserved: 109051904; time used = 3.6835615634918213s
epoch 90: train_loss: 1.39650; Allocated: 53634048; Reserved: 109051904; time used = 3.6762540340423584s
epoch 95: train_loss: 1.39613; Allocated: 53634048; Reserved: 109051904; time used = 3.7095906734466553s
epoch 100: train_loss: 1.39577; Allocated: 53634048; Reserved: 109051904; time used = 3.8416850566864014s
epoch 105: train_loss: 1.39543; Allocated: 53634048; Reserved: 109051904; time used = 3.6706554889678955s
epoch 110: train_loss: 1.39505; Allocated: 53634048; Reserved: 109051904; time used = 3.670494556427002s
epoch 115: train_loss: 1.39478; Allocated: 53634048; Reserved: 109051904; time used = 3.694178342819214s
epoch 120: train_loss: 1.39448; Allocated: 53634048; Reserved: 109051904; time used = 3.8144845962524414s
epoch 125: train_loss: 1.39418; Allocated: 53634048; Reserved: 109051904; time used = 3.6794662475585938s
epoch 130: train_loss: 1.39390; Allocated: 53634048; Reserved: 109051904; time used = 3.6934449672698975s
epoch 135: train_loss: 1.39362; Allocated: 53634048; Reserved: 109051904; time used = 3.7220568656921387s
epoch 140: train_loss: 1.39325; Allocated: 53634048; Reserved: 109051904; time used = 3.8407373428344727s
epoch 145: train_loss: 1.39312; Allocated: 53634048; Reserved: 109051904; time used = 3.68371844291687s
epoch 150: train_loss: 1.39287; Allocated: 53634048; Reserved: 109051904; time used = 3.6668355464935303s
epoch 155: train_loss: 1.39264; Allocated: 53634048; Reserved: 109051904; time used = 3.682063102722168s
epoch 160: train_loss: 1.39243; Allocated: 53634048; Reserved: 109051904; time used = 3.8319482803344727s
epoch 165: train_loss: 1.39209; Allocated: 53634048; Reserved: 109051904; time used = 3.706045389175415s
epoch 170: train_loss: 1.39201; Allocated: 53634048; Reserved: 109051904; time used = 3.6957876682281494s
epoch 175: train_loss: 1.39181; Allocated: 53634048; Reserved: 109051904; time used = 3.6998775005340576s
epoch 180: train_loss: 1.39163; Allocated: 53634048; Reserved: 109051904; time used = 3.8311607837677s
epoch 185: train_loss: 1.39145; Allocated: 53634048; Reserved: 109051904; time used = 3.670090913772583s
epoch 190: train_loss: 1.39114; Allocated: 53634048; Reserved: 109051904; time used = 3.6779098510742188s
epoch 195: train_loss: 1.39112; Allocated: 53634048; Reserved: 109051904; time used = 3.6946349143981934s
epoch 200: train_loss: 1.39096; Allocated: 53634048; Reserved: 109051904; time used = 3.813657760620117s
epoch 205: train_loss: 1.39067; Allocated: 53634048; Reserved: 109051904; time used = 3.675705671310425s
epoch 210: train_loss: 1.39065; Allocated: 53634048; Reserved: 109051904; time used = 3.6682660579681396s
epoch 215: train_loss: 1.39052; Allocated: 53634048; Reserved: 109051904; time used = 3.6709847450256348s
epoch 220: train_loss: 1.39041; Allocated: 53634048; Reserved: 109051904; time used = 3.8226678371429443s
epoch 225: train_loss: 1.39028; Allocated: 53634048; Reserved: 109051904; time used = 3.667205572128296s
epoch 230: train_loss: 1.39014; Allocated: 53634048; Reserved: 109051904; time used = 3.6745893955230713s
epoch 235: train_loss: 1.38989; Allocated: 53634048; Reserved: 109051904; time used = 3.661482334136963s
epoch 240: train_loss: 1.38992; Allocated: 53634048; Reserved: 109051904; time used = 3.8396406173706055s
epoch 245: train_loss: 1.38965; Allocated: 53634048; Reserved: 109051904; time used = 3.673757791519165s
epoch 250: train_loss: 1.38971; Allocated: 53634048; Reserved: 109051904; time used = 3.669088363647461s
epoch 255: train_loss: 1.38960; Allocated: 53634048; Reserved: 109051904; time used = 3.6698989868164062s
epoch 260: train_loss: 1.38950; Allocated: 53634048; Reserved: 109051904; time used = 3.803544759750366s
epoch 265: train_loss: 1.38941; Allocated: 53634048; Reserved: 109051904; time used = 3.6716835498809814s
epoch 270: train_loss: 1.38912; Allocated: 53634048; Reserved: 109051904; time used = 3.6637704372406006s
epoch 275: train_loss: 1.38907; Allocated: 53634048; Reserved: 109051904; time used = 3.6783382892608643s
epoch 280: train_loss: 1.38915; Allocated: 53634048; Reserved: 109051904; time used = 3.8020217418670654s
epoch 285: train_loss: 1.38908; Allocated: 53634048; Reserved: 109051904; time used = 3.6755990982055664s
epoch 290: train_loss: 1.38899; Allocated: 53634048; Reserved: 109051904; time used = 3.6606268882751465s
epoch 295: train_loss: 1.38893; Allocated: 53634048; Reserved: 109051904; time used = 3.692023992538452s
epoch 300: train_loss: 1.38886; Allocated: 53634048; Reserved: 109051904; time used = 3.8512284755706787s
epoch 305: train_loss: 1.38864; Allocated: 53634048; Reserved: 109051904; time used = 3.6614432334899902s
epoch 310: train_loss: 1.38871; Allocated: 53634048; Reserved: 109051904; time used = 3.680380344390869s
epoch 315: train_loss: 1.38866; Allocated: 53634048; Reserved: 109051904; time used = 3.6653196811676025s
epoch 320: train_loss: 1.38860; Allocated: 53634048; Reserved: 109051904; time used = 3.8033571243286133s
epoch 325: train_loss: 1.38853; Allocated: 53634048; Reserved: 109051904; time used = 3.6635875701904297s
epoch 330: train_loss: 1.38847; Allocated: 53634048; Reserved: 109051904; time used = 3.6737565994262695s
epoch 335: train_loss: 1.38842; Allocated: 53634048; Reserved: 109051904; time used = 3.6649234294891357s
epoch 340: train_loss: 1.38837; Allocated: 53634048; Reserved: 109051904; time used = 3.818662405014038s
epoch 345: train_loss: 1.38810; Allocated: 53634048; Reserved: 109051904; time used = 3.6790387630462646s
epoch 350: train_loss: 1.38828; Allocated: 53634048; Reserved: 109051904; time used = 3.702197313308716s
epoch 355: train_loss: 1.38822; Allocated: 53634048; Reserved: 109051904; time used = 3.662494421005249s
epoch 360: train_loss: 1.38817; Allocated: 53634048; Reserved: 109051904; time used = 3.8329198360443115s
epoch 365: train_loss: 1.38813; Allocated: 53634048; Reserved: 109051904; time used = 3.6609528064727783s
epoch 370: train_loss: 1.38784; Allocated: 53634048; Reserved: 109051904; time used = 3.667107105255127s
epoch 375: train_loss: 1.38805; Allocated: 53634048; Reserved: 109051904; time used = 3.671093225479126s
epoch 380: train_loss: 1.38765; Allocated: 53634048; Reserved: 109051904; time used = 3.8097598552703857s
epoch 385: train_loss: 1.38798; Allocated: 53634048; Reserved: 109051904; time used = 3.671422243118286s
epoch 390: train_loss: 1.38793; Allocated: 53634048; Reserved: 109051904; time used = 3.6669907569885254s
epoch 395: train_loss: 1.38788; Allocated: 53634048; Reserved: 109051904; time used = 3.6753828525543213s
epoch 400: train_loss: 1.38785; Allocated: 53634048; Reserved: 109051904; time used = 3.821462392807007s
epoch 405: train_loss: 1.38782; Allocated: 53634048; Reserved: 109051904; time used = 3.671754837036133s
epoch 410: train_loss: 1.38780; Allocated: 53634048; Reserved: 109051904; time used = 3.692427635192871s
epoch 415: train_loss: 1.38776; Allocated: 53634048; Reserved: 109051904; time used = 3.6860809326171875s
epoch 420: train_loss: 1.38773; Allocated: 53634048; Reserved: 109051904; time used = 3.8362948894500732s
epoch 425: train_loss: 1.38770; Allocated: 53634048; Reserved: 109051904; time used = 3.6816916465759277s
epoch 430: train_loss: 1.38768; Allocated: 53634048; Reserved: 109051904; time used = 3.6509807109832764s
epoch 435: train_loss: 1.38765; Allocated: 53634048; Reserved: 109051904; time used = 3.668769359588623s
epoch 440: train_loss: 1.38762; Allocated: 53634048; Reserved: 109051904; time used = 3.819722890853882s
epoch 445: train_loss: 1.38759; Allocated: 53634048; Reserved: 109051904; time used = 3.664844512939453s
epoch 450: train_loss: 1.38755; Allocated: 53634048; Reserved: 109051904; time used = 3.6605701446533203s
epoch 455: train_loss: 1.38754; Allocated: 53634048; Reserved: 109051904; time used = 3.661529779434204s
epoch 460: train_loss: 1.38751; Allocated: 53634048; Reserved: 109051904; time used = 3.8084795475006104s
epoch 465: train_loss: 1.38748; Allocated: 53634048; Reserved: 109051904; time used = 3.6676552295684814s
epoch 470: train_loss: 1.38746; Allocated: 53634048; Reserved: 109051904; time used = 3.6913139820098877s
epoch 475: train_loss: 1.38659; Allocated: 53634048; Reserved: 109051904; time used = 3.6774673461914062s
epoch 480: train_loss: 1.38741; Allocated: 53634048; Reserved: 109051904; time used = 3.85612154006958s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 361.1491754055023.
Training classifier using 20.00% nodes...
{'micro': 0.19553903345724907, 'macro': 0.059332800030474454, 'samples': 0.19759579263711496, 'weighted': 0.0670162589759653, 'accuracy': 0.19759579263711496}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff908478320>
total iter: 500
epoch 5: train_loss: 0.60768; Allocated: 521728; Reserved: 2097152; time used = 2.9683923721313477s
epoch 10: train_loss: 0.50437; Allocated: 521728; Reserved: 2097152; time used = 2.9799728393554688s
epoch 15: train_loss: 0.43622; Allocated: 521728; Reserved: 2097152; time used = 3.132319927215576s
epoch 20: train_loss: 0.51098; Allocated: 521728; Reserved: 2097152; time used = 2.9640815258026123s
epoch 25: train_loss: 0.45473; Allocated: 521728; Reserved: 2097152; time used = 2.959205150604248s
epoch 30: train_loss: 0.39415; Allocated: 521728; Reserved: 2097152; time used = 3.1379811763763428s
epoch 35: train_loss: 0.38303; Allocated: 521728; Reserved: 2097152; time used = 2.9435226917266846s
epoch 40: train_loss: 0.34501; Allocated: 521728; Reserved: 2097152; time used = 2.9360029697418213s
epoch 45: train_loss: 0.29027; Allocated: 521728; Reserved: 2097152; time used = 3.0796163082122803s
epoch 50: train_loss: 0.41793; Allocated: 521728; Reserved: 2097152; time used = 2.939934253692627s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.65739965438843.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f8b76e7f190>
total iter: 500
epoch 5: train_loss: 1.36400; Allocated: 17394176; Reserved: 41943040; time used = 3.2870161533355713s
epoch 10: train_loss: 1.26521; Allocated: 17394176; Reserved: 41943040; time used = 3.2236168384552s
epoch 15: train_loss: 1.18712; Allocated: 17394176; Reserved: 41943040; time used = 3.3647327423095703s
epoch 20: train_loss: 1.16724; Allocated: 17394176; Reserved: 41943040; time used = 3.2100515365600586s
epoch 25: train_loss: 1.13702; Allocated: 17394176; Reserved: 41943040; time used = 3.2519798278808594s
epoch 30: train_loss: 1.10435; Allocated: 17394176; Reserved: 41943040; time used = 3.232097864151001s
epoch 35: train_loss: 1.08470; Allocated: 17394176; Reserved: 41943040; time used = 3.2022554874420166s
epoch 40: train_loss: 1.07131; Allocated: 17394176; Reserved: 41943040; time used = 3.226733446121216s
epoch 45: train_loss: 1.05072; Allocated: 17394176; Reserved: 41943040; time used = 3.3659322261810303s
epoch 50: train_loss: 1.03715; Allocated: 17394176; Reserved: 41943040; time used = 3.249185562133789s
epoch 55: train_loss: 1.05697; Allocated: 17394176; Reserved: 41943040; time used = 3.2252275943756104s
epoch 60: train_loss: 1.06032; Allocated: 17394176; Reserved: 41943040; time used = 3.221322774887085s
epoch 65: train_loss: 1.01127; Allocated: 17394176; Reserved: 41943040; time used = 3.357032537460327s
epoch 70: train_loss: 1.01497; Allocated: 17394176; Reserved: 41943040; time used = 3.2235000133514404s
epoch 75: train_loss: 1.01241; Allocated: 17394176; Reserved: 41943040; time used = 3.222510814666748s
epoch 80: train_loss: 0.99543; Allocated: 17394176; Reserved: 41943040; time used = 3.259868621826172s
epoch 85: train_loss: 0.99605; Allocated: 17394176; Reserved: 41943040; time used = 3.245847463607788s
epoch 90: train_loss: 0.97544; Allocated: 17394176; Reserved: 41943040; time used = 3.2245266437530518s
epoch 95: train_loss: 0.96480; Allocated: 17394176; Reserved: 41943040; time used = 3.3504228591918945s
epoch 100: train_loss: 0.97296; Allocated: 17394176; Reserved: 41943040; time used = 3.2266147136688232s
epoch 105: train_loss: 0.98549; Allocated: 17394176; Reserved: 41943040; time used = 3.2375643253326416s
epoch 110: train_loss: 0.97036; Allocated: 17394176; Reserved: 41943040; time used = 3.2193806171417236s
epoch 115: train_loss: 0.97514; Allocated: 17394176; Reserved: 41943040; time used = 3.2378032207489014s
epoch 120: train_loss: 0.95446; Allocated: 17394176; Reserved: 41943040; time used = 3.3679137229919434s
epoch 125: train_loss: 0.96118; Allocated: 17394176; Reserved: 41943040; time used = 3.218334913253784s
epoch 130: train_loss: 0.95445; Allocated: 17394176; Reserved: 41943040; time used = 3.2222771644592285s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 90.73464822769165.
Training classifier using 20.00% nodes...
{'micro': 0.7775726811259807, 'macro': 0.7543879795037255, 'samples': 0.7775726811259807, 'weighted': 0.7776039652403696, 'accuracy': 0.7775726811259807}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f396fae1050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2687.04it/s]100%|██████████| 1000/1000 [00:00<00:00, 4125.26it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5ae64b5eb0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40927; Allocated: 906752; Reserved: 8388608; time used = 194.50248003005981s
epoch 10: train_loss: 1.38565; Allocated: 906752; Reserved: 8388608; time used = 197.9846224784851s
epoch 15: train_loss: 1.38370; Allocated: 906752; Reserved: 8388608; time used = 202.20633244514465s
epoch 20: train_loss: 1.40516; Allocated: 906752; Reserved: 8388608; time used = 201.15269923210144s
epoch 25: train_loss: 1.38582; Allocated: 906752; Reserved: 10485760; time used = 198.95236492156982s
epoch 30: train_loss: 1.38247; Allocated: 906752; Reserved: 8388608; time used = 198.21376061439514s
epoch 35: train_loss: 1.37137; Allocated: 906752; Reserved: 8388608; time used = 197.2090654373169s
epoch 40: train_loss: 1.37619; Allocated: 906752; Reserved: 8388608; time used = 193.15243434906006s
epoch 45: train_loss: 1.35094; Allocated: 906752; Reserved: 8388608; time used = 197.12004494667053s
epoch 50: train_loss: 1.47745; Allocated: 906752; Reserved: 10485760; time used = 200.8852858543396s
epoch 55: train_loss: 1.32467; Allocated: 906752; Reserved: 8388608; time used = 198.42939162254333s
epoch 60: train_loss: 1.29140; Allocated: 906752; Reserved: 8388608; time used = 198.9420359134674s
epoch 65: train_loss: 1.36123; Allocated: 906752; Reserved: 8388608; time used = 198.47544860839844s
epoch 70: train_loss: 1.30944; Allocated: 906752; Reserved: 8388608; time used = 199.1157431602478s
epoch 75: train_loss: 1.24088; Allocated: 906752; Reserved: 8388608; time used = 199.52756428718567s
epoch 80: train_loss: 1.22488; Allocated: 906752; Reserved: 8388608; time used = 199.38029503822327s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3338.8245973587036.
Training classifier using 80.00% nodes...

{'micro': 0.595, 'macro': 0.591311587073337, 'samples': 0.595, 'weighted': 0.5905350790887762, 'accuracy': 0.595}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 542/1000 [00:00<00:00, 2238.12it/s]100%|██████████| 1000/1000 [00:00<00:00, 3537.71it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f47359bc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1be0dfed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4791b86dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f99656fc4b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f0d2c7ee140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe4543c1320>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fed498e9cd0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f57e7d76cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2500.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 4960.75it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0a94d58370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb1391abc30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f2e0d2e6550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f78f00a7780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7ff5bbb5e640>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fa94af61370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2623.62it/s]100%|██████████| 1000/1000 [00:00<00:00, 4043.24it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8b99f3d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4136795c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2647.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 4066.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1f9c3631e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2573.94it/s]100%|██████████| 1000/1000 [00:00<00:00, 3965.86it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f091a47c050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fd73d49c1e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f21f4b19280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f4418786690>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7feaf99a8230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6e4dc17050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f86d531d370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2669.24it/s]100%|██████████| 1000/1000 [00:00<00:00, 4078.35it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f29c4778050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f68b4dfd7d0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fe1b544a140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc11e78b0f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2573.56it/s]100%|██████████| 1500/1500 [00:00<00:00, 5068.81it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff6bdd534b0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb01d631230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2659.07it/s] 78%|███████▊  | 1563/2000 [00:00<00:00, 3416.67it/s]100%|██████████| 2000/2000 [00:00<00:00, 5790.49it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fae370de140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2575.25it/s] 81%|████████  | 1614/2000 [00:00<00:00, 3335.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 5775.06it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f7710d51280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f7bb8efc5a0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f523a8d3370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3c4ce66370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f7dfff0a730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f60234f4d70>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2823.40it/s]100%|██████████| 1000/1000 [00:00<00:00, 4288.89it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc648ffe2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f365f014370>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2595.58it/s] 79%|███████▉  | 1580/2000 [00:00<00:00, 3348.49it/s]100%|██████████| 2000/2000 [00:00<00:00, 5750.08it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f52afb6ee60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2587.52it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3346.83it/s]100%|██████████| 2000/2000 [00:00<00:00, 5775.10it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f94c442ddc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 1918.84it/s] 76%|███████▋  | 1525/2000 [00:00<00:00, 2529.27it/s]100%|██████████| 2000/2000 [00:00<00:00, 4780.26it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6debaedd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2426.39it/s] 81%|████████  | 1613/2000 [00:00<00:00, 3159.13it/s]100%|██████████| 2000/2000 [00:00<00:00, 5565.44it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd1e7e69550>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2126.55it/s] 79%|███████▉  | 1588/2000 [00:00<00:00, 2794.19it/s]100%|██████████| 2000/2000 [00:00<00:00, 5089.26it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f361aecd140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f017fc1c1e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f073015bcd0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f2e160b9230>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f19376e4050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fde09175c30>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2603.19it/s]100%|██████████| 1500/1500 [00:00<00:00, 5106.52it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fbee87ea050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc112aaf0f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2592.21it/s]100%|██████████| 1500/1500 [00:00<00:00, 5105.65it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4a796b5050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fdab2793140>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2308.65it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3017.84it/s]100%|██████████| 2000/2000 [00:00<00:00, 5375.52it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f969f192230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2738.79it/s]100%|██████████| 1000/1000 [00:00<00:00, 4183.15it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f31e60d31e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2719.62it/s]100%|██████████| 1000/1000 [00:00<00:00, 4161.89it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1e0103a050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fe3e3ca4230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2598.70it/s]100%|██████████| 1000/1000 [00:00<00:00, 4004.97it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe6ed1653c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2811.48it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3610.57it/s]100%|██████████| 2000/2000 [00:00<00:00, 6087.32it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8c77fd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2448.77it/s]100%|██████████| 1000/1000 [00:00<00:00, 3809.28it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3abe6fc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2246.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 4601.64it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8e2d28f050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8ad7c6ed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2565.82it/s]100%|██████████| 1000/1000 [00:00<00:00, 3958.87it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd9d1efd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f73a8bb0cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7feb87a8fdc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fbd1c092280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2668.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 4081.06it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f352a4954b0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f05bc65b050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc87d408190>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2223.75it/s]100%|██████████| 1000/1000 [00:00<00:00, 3500.40it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0d6ea70280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2500.15it/s]100%|██████████| 1000/1000 [00:00<00:00, 3856.93it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f645a604370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fda600ef550>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2044.68it/s]100%|██████████| 1500/1500 [00:00<00:00, 4247.93it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb00a0c8050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f62286a5cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8ce4c1ae60>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2664.75it/s]100%|██████████| 1000/1000 [00:00<00:00, 4093.30it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7feedb53d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2704.32it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3484.87it/s]100%|██████████| 2000/2000 [00:00<00:00, 5926.94it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcecfae1280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fef85968d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f08a6564c80>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f056b1596e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2445.81it/s]100%|██████████| 1500/1500 [00:00<00:00, 4847.52it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f283b56f050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2320.71it/s] 78%|███████▊  | 1565/2000 [00:00<00:00, 3021.19it/s]100%|██████████| 2000/2000 [00:00<00:00, 5334.82it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4a18d4b230>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd5f201ac30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f26b5580e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2606.14it/s]100%|██████████| 1000/1000 [00:00<00:00, 4013.68it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff671616410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2713.99it/s] 79%|███████▊  | 1572/2000 [00:00<00:00, 3483.31it/s]100%|██████████| 2000/2000 [00:00<00:00, 5848.57it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff493d23280>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f53b4456cd0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f61c12a5d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0ae3d9ae10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2726.73it/s]100%|██████████| 1500/1500 [00:00<00:00, 5264.23it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f2439b97370>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe773158dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f51f4e49d20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f4fc5132410>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f063a2fb280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2465.82it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3202.92it/s]100%|██████████| 2000/2000 [00:00<00:00, 5601.50it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fdb5d6aed70>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2180.55it/s] 80%|███████▉  | 1593/2000 [00:00<00:00, 2860.40it/s]100%|██████████| 2000/2000 [00:00<00:00, 5169.38it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe06ccd6280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2669.39it/s]100%|██████████| 1500/1500 [00:00<00:00, 5215.42it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff15e02a050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f317b094280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7ff5236c82d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7faaceb4b640>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6d46610d20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2783.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4236.27it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb300d7a050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb6185c2dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f97eac01cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2726.74it/s]100%|██████████| 1000/1000 [00:00<00:00, 4160.22it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f436777d050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2865.57it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3671.58it/s]100%|██████████| 2000/2000 [00:00<00:00, 6146.52it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6ec1dce140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2810.26it/s] 80%|███████▉  | 1599/2000 [00:00<00:00, 3603.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 6053.64it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6efdd9d280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2835.57it/s]100%|██████████| 1000/1000 [00:00<00:00, 4310.16it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f905687d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f41acc375f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f06fda02d20>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7ff9283a30f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3ec3aa0050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fc3c569d690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2774.29it/s]100%|██████████| 1500/1500 [00:00<00:00, 5343.38it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9d36033050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2718.08it/s]100%|██████████| 1000/1000 [00:00<00:00, 4152.13it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2af364e370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f13b4c66d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa3bdf29050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2792.29it/s]100%|██████████| 1500/1500 [00:00<00:00, 5376.65it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f983c927050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2716.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 5268.45it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f76597d0550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2321.09it/s]100%|██████████| 1500/1500 [00:00<00:00, 4724.77it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9bcc5c0050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2753.47it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3539.88it/s]100%|██████████| 2000/2000 [00:00<00:00, 5990.88it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4b6ebde140>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2799.88it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3594.88it/s]100%|██████████| 2000/2000 [00:00<00:00, 6056.55it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb821073280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1f1146b050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa150380d20>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2799.33it/s] 80%|███████▉  | 1597/2000 [00:00<00:00, 3590.05it/s]100%|██████████| 2000/2000 [00:00<00:00, 6032.04it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4785073230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2847.64it/s] 80%|███████▉  | 1598/2000 [00:00<00:00, 3646.05it/s]100%|██████████| 2000/2000 [00:00<00:00, 6103.66it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2cd9542140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f89b0818690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc759201d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f51217f7190>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1794987c30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f7128542b90>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f7a8c65ae10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2721.74it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3506.26it/s]100%|██████████| 2000/2000 [00:00<00:00, 5967.32it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff8287e5280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2324.59it/s]100%|██████████| 1500/1500 [00:00<00:00, 4718.10it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f427bb4f050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2702.96it/s]100%|██████████| 1500/1500 [00:00<00:00, 5242.85it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9066d47050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2746.88it/s]100%|██████████| 1500/1500 [00:00<00:00, 5305.82it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f58f5abe050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fcca31f50f0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2698.68it/s] 79%|███████▉  | 1578/2000 [00:00<00:00, 3467.51it/s]100%|██████████| 2000/2000 [00:00<00:00, 5861.43it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb8330182d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fb6eddc4370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f39ce13e0f0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff0e673bc80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3ba4bb5140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f6e81adc0f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f455321a230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2167.00it/s]100%|██████████| 1500/1500 [00:00<00:00, 4486.20it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f248d83b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2856.45it/s]100%|██████████| 1000/1000 [00:00<00:00, 4336.68it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f20f02b9050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1344ec2cd0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2928.24it/s]100%|██████████| 1500/1500 [00:00<00:00, 5573.19it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f97e9bbf050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2812.27it/s]100%|██████████| 1000/1000 [00:00<00:00, 4280.18it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ffa706f8050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6165541050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2824.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 5443.03it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb01bf82050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2680.65it/s] 80%|███████▉  | 1599/2000 [00:00<00:00, 3453.71it/s]100%|██████████| 2000/2000 [00:00<00:00, 5883.56it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbe7b4c2280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f48c0ee1c30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fb13ccd92d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc7f4b85c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2567.45it/s]100%|██████████| 1000/1000 [00:00<00:00, 3962.48it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5a1263c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2391.20it/s]100%|██████████| 1000/1000 [00:00<00:00, 3730.95it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f85be2232d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2322.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 4685.24it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f5426fad500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2066.40it/s]100%|██████████| 1000/1000 [00:00<00:00, 3295.11it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc969d471e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2331.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 4714.20it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd51a730050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f0e9ede14b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2669.56it/s] 77%|███████▋  | 1543/2000 [00:00<00:00, 3421.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 5729.29it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbf453c15f0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2459.01it/s]100%|██████████| 1500/1500 [00:00<00:00, 4906.44it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa3c13a54b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2192.76it/s] 78%|███████▊  | 1560/2000 [00:00<00:00, 2867.38it/s]100%|██████████| 2000/2000 [00:00<00:00, 5245.08it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f213d1b9280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f56c9de2690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0df40b5cd0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9fd71ebcd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd280c25cd0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f2e2c6232d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4caeba2e10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2063.68it/s]100%|██████████| 1500/1500 [00:00<00:00, 4269.28it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7efe67c0fd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f1f57893690>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2016.14it/s]100%|██████████| 1000/1000 [00:00<00:00, 3223.61it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f90af149320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2028.09it/s]100%|██████████| 1500/1500 [00:00<00:00, 4216.74it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7efb5b26f050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9c385dacd0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2596.75it/s] 80%|████████  | 1604/2000 [00:00<00:00, 3357.20it/s]100%|██████████| 2000/2000 [00:00<00:00, 5783.28it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9ede0bb5a0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2005.67it/s]100%|██████████| 1500/1500 [00:00<00:00, 4193.21it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f47e1b6a500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2276.64it/s]100%|██████████| 1500/1500 [00:00<00:00, 4653.18it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0786164050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2271.38it/s]100%|██████████| 1000/1000 [00:00<00:00, 3575.13it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fbaadcbd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2099.56it/s]100%|██████████| 1500/1500 [00:00<00:00, 4364.45it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe5dd4ca500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f7bf0faed70>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f6c4837b6e0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2142.37it/s]100%|██████████| 1000/1000 [00:00<00:00, 3386.75it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7eff01717370>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f4c5d0680f0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa510096e60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f00c17886e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2098.65it/s]100%|██████████| 1500/1500 [00:00<00:00, 4350.28it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fcd35433c30>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2406.43it/s] 79%|███████▉  | 1576/2000 [00:00<00:00, 3125.52it/s]100%|██████████| 2000/2000 [00:00<00:00, 5475.36it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f37dc81f280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f0885576050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc26db89190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2203.61it/s]100%|██████████| 1500/1500 [00:00<00:00, 4505.50it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd796683410>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2091.79it/s] 79%|███████▉  | 1579/2000 [00:00<00:00, 2750.06it/s]100%|██████████| 2000/2000 [00:00<00:00, 4985.72it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8b9ff93280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2148.26it/s]100%|██████████| 1000/1000 [00:00<00:00, 3395.99it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5cb41511e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f68613d0e10>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7faa41718460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2244.47it/s]100%|██████████| 1500/1500 [00:00<00:00, 4587.67it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0c9a2ad050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f5c43d210f0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f3c03a7c320>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7faecff291e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2454.77it/s]100%|██████████| 1500/1500 [00:00<00:00, 4884.84it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f65c9511460>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f47847eb460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 1994.48it/s]100%|██████████| 1000/1000 [00:00<00:00, 3196.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f92e7b72230>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2431.48it/s] 79%|███████▉  | 1587/2000 [00:00<00:00, 3157.98it/s]100%|██████████| 2000/2000 [00:00<00:00, 5512.17it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd68086d280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f59cc007dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2124.09it/s]100%|██████████| 1000/1000 [00:00<00:00, 3371.69it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0d848fb050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2158.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 4479.00it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f81cffc2050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2083.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 3319.76it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2e637df460>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0bf4ca3730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2144.78it/s]100%|██████████| 1500/1500 [00:00<00:00, 4428.29it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f12c024c500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2004.13it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 2646.17it/s]100%|██████████| 2000/2000 [00:00<00:00, 4891.35it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f214b499280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f5b905053c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f41188c2dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f34bf675690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f82981ed1e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2095.09it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 2756.68it/s]100%|██████████| 2000/2000 [00:00<00:00, 5020.22it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3cabfd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2382.05it/s]100%|██████████| 1000/1000 [00:00<00:00, 3729.02it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdc40279050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f655fb734b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f679914fe10>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8618e651e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fa3538d8140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f594bfb6d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fed49587b90>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2021.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 3220.31it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff18687c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2466.32it/s]100%|██████████| 1000/1000 [00:00<00:00, 3823.93it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6b8c57f230>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2701.81it/s]100%|██████████| 1000/1000 [00:00<00:00, 4139.08it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1e60474be0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2812.71it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3612.25it/s]100%|██████████| 2000/2000 [00:00<00:00, 6085.98it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f00cbb6dd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2783.64it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3576.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 6043.23it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff334b180f0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2748.16it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3534.37it/s]100%|██████████| 2000/2000 [00:00<00:00, 5985.69it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd34056edc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2714.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 4138.79it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa0fb63d050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2818.36it/s]100%|██████████| 1000/1000 [00:00<00:00, 4283.85it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f54217bd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f68209766e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2773.11it/s]100%|██████████| 1500/1500 [00:00<00:00, 5339.52it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f54ec5dc370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2715.12it/s]100%|██████████| 1500/1500 [00:00<00:00, 5256.00it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f685990d3c0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f79b4c98c80>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2864.17it/s] 81%|████████  | 1613/2000 [00:00<00:00, 3670.31it/s]100%|██████████| 2000/2000 [00:00<00:00, 6150.72it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbd0f8d9140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0d2198d320>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2770.39it/s] 81%|████████  | 1616/2000 [00:00<00:00, 3562.84it/s]100%|██████████| 2000/2000 [00:00<00:00, 6031.65it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd61e16e280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4091efad70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2885.21it/s] 80%|████████  | 1606/2000 [00:00<00:00, 3691.66it/s]100%|██████████| 2000/2000 [00:00<00:00, 6157.80it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbf6dd2ef00>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2797.46it/s] 80%|████████  | 1600/2000 [00:00<00:00, 3588.90it/s]100%|██████████| 2000/2000 [00:00<00:00, 6032.90it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f506dfb7230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2798.76it/s]100%|██████████| 1500/1500 [00:00<00:00, 5386.38it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f29846fccd0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2780.93it/s]100%|██████████| 1500/1500 [00:00<00:00, 5368.47it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4380693050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f6d37a1edc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f573c03a460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fdba118e370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2208.21it/s] 80%|████████  | 1601/2000 [00:00<00:00, 2895.56it/s]100%|██████████| 2000/2000 [00:00<00:00, 5222.28it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f13ac7a10a0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2349.86it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3067.70it/s]100%|██████████| 2000/2000 [00:00<00:00, 5452.78it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faf246723c0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2389.68it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3114.65it/s]100%|██████████| 2000/2000 [00:00<00:00, 5506.47it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb4c1eae230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f6de0b6f320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe5bae57dc0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2504.57it/s]100%|██████████| 1500/1500 [00:00<00:00, 4968.91it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f79dddf84b0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f1afe7eb2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f0e61591460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2698.11it/s]100%|██████████| 1000/1000 [00:00<00:00, 4122.38it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7fd9cdc2d0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2751.83it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3540.09it/s]100%|██████████| 2000/2000 [00:00<00:00, 6001.91it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3a15e2ee10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3e609bcb90>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2751.77it/s] 80%|████████  | 1607/2000 [00:00<00:00, 3538.82it/s]100%|██████████| 2000/2000 [00:00<00:00, 5993.77it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f949902de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2623.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4029.15it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb4faea72d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2667.71it/s]100%|██████████| 1500/1500 [00:00<00:00, 5175.15it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa1e61c0050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2724.06it/s]100%|██████████| 1500/1500 [00:00<00:00, 5291.56it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f74c047b320>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f519c2145f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2841.29it/s]100%|██████████| 1500/1500 [00:00<00:00, 5443.95it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f39467ad050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2833.12it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3633.49it/s]100%|██████████| 2000/2000 [00:00<00:00, 6106.73it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe3de16de10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2715.64it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3495.19it/s]100%|██████████| 2000/2000 [00:00<00:00, 5937.06it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f447542edc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1d8591d140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2317.06it/s]100%|██████████| 1500/1500 [00:00<00:00, 4718.21it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fae3a60a410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f4b08327780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2803.27it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3600.75it/s]100%|██████████| 2000/2000 [00:00<00:00, 6072.50it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efeca815280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f465aa47e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbfca25de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fdbccbc4370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f82886d2140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2434.77it/s]100%|██████████| 1500/1500 [00:00<00:00, 4837.51it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7feb70dfad70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2c1be66cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe0a2f0d050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2885.51it/s]100%|██████████| 1000/1000 [00:00<00:00, 4372.76it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa7903f8050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f00799eee10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb58f75cd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2551.30it/s]100%|██████████| 1500/1500 [00:00<00:00, 5044.40it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0e90dc6050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f1b4963f730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f743b364500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2276.10it/s]100%|██████████| 1000/1000 [00:00<00:00, 3584.11it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f14fda3d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fcb6d393050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2756.49it/s]100%|██████████| 1000/1000 [00:00<00:00, 4214.03it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fcbf2bdc3c0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f83a68f1e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f8dc4cb9640>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fcfe2b87050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff0463082d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2767.75it/s]100%|██████████| 1500/1500 [00:00<00:00, 5356.09it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb5a0aca050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2331.50it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3043.09it/s]100%|██████████| 2000/2000 [00:00<00:00, 5404.60it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa77e9ade10>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fdcbae2a140>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fdd336c1cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f499c817eb0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1899f3fe10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2162cc8050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2188.46it/s]100%|██████████| 1000/1000 [00:00<00:00, 3434.80it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f78562433c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2760.42it/s] 79%|███████▉  | 1582/2000 [00:00<00:00, 3539.93it/s]100%|██████████| 2000/2000 [00:00<00:00, 5942.20it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1b21f8e280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f7759746280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb473326d70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fd7dec88690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2850.09it/s]100%|██████████| 1500/1500 [00:00<00:00, 5451.22it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff1844c6050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2704.04it/s] 80%|███████▉  | 1593/2000 [00:00<00:00, 3478.85it/s]100%|██████████| 2000/2000 [00:00<00:00, 5907.09it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff194bdd460>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2788.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 5373.58it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7439139050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7eff6a42cd70>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2506.19it/s] 79%|███████▉  | 1581/2000 [00:00<00:00, 3244.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 5609.95it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f041b655280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2790.56it/s] 80%|████████  | 1600/2000 [00:00<00:00, 3580.65it/s]100%|██████████| 2000/2000 [00:00<00:00, 6021.75it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa2a1edb230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8858822dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2840.05it/s] 80%|████████  | 1600/2000 [00:00<00:00, 3638.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 6092.21it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2ea6ca98c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f23871b94b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2552.20it/s] 79%|███████▉  | 1585/2000 [00:00<00:00, 3299.55it/s]100%|██████████| 2000/2000 [00:00<00:00, 5679.69it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f24c746ee60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f010245e1e0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2885.66it/s] 80%|███████▉  | 1597/2000 [00:00<00:00, 3689.44it/s]100%|██████████| 2000/2000 [00:00<00:00, 6143.82it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6037fd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2835.53it/s]100%|██████████| 1000/1000 [00:00<00:00, 4301.35it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc3a62fc050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f2f001e9190>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f8e14272500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2730.64it/s] 80%|███████▉  | 1598/2000 [00:00<00:00, 3511.40it/s]100%|██████████| 2000/2000 [00:00<00:00, 5945.37it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    """
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    @param e_anchor:
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    self.anchor = self.graphs  # densere aut non densere, illa quaestio
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faccdd2de10>
head 0
head 0
head 0
head 0
total iter: 500
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
