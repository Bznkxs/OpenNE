Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 17%|█▋        | 6597/39434 [00:00<00:00, 65966.29it/s] 30%|██▉       | 11793/39434 [00:00<00:00, 60919.72it/s] 69%|██████▊   | 27031/39434 [00:00<00:00, 74297.57it/s] 96%|█████████▋| 38051/39434 [00:00<00:00, 82343.97it/s]100%|██████████| 39434/39434 [00:00<00:00, 94131.45it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2853677272796631 seconds.
Run epoch 1
Epoch 1 ends in 0.41649770736694336 seconds.
39434 sentences created
mode 1: time used = 0.5200262069702148
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 13.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s]  9%|▉         | 3690/39434 [00:00<00:01, 32008.38it/s] 23%|██▎       | 9103/39434 [00:00<00:00, 36480.15it/s] 34%|███▍      | 13409/39434 [00:00<00:00, 37933.31it/s] 46%|████▌     | 18152/39434 [00:00<00:00, 40356.64it/s] 56%|█████▌    | 22029/39434 [00:00<00:00, 38936.77it/s] 68%|██████▊   | 26901/39434 [00:00<00:00, 41210.76it/s] 78%|███████▊  | 30767/39434 [00:00<00:00, 39950.55it/s] 89%|████████▉ | 35186/39434 [00:00<00:00, 40929.85it/s] 99%|█████████▉| 39166/39434 [00:00<00:00, 35574.80it/s]100%|██████████| 39434/39434 [00:01<00:00, 37619.74it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.46349525451660156 seconds.
Run epoch 1
Epoch 1 ends in 0.7515337467193604 seconds.
39434 sentences created
mode 1: time used = 1.4097208976745605
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 13%|█▎        | 5170/39434 [00:00<00:00, 48542.03it/s] 25%|██▌       | 9934/39434 [00:00<00:00, 47119.28it/s] 34%|███▎      | 13270/39434 [00:00<00:00, 41393.95it/s] 47%|████▋     | 18570/39434 [00:00<00:00, 44303.84it/s] 58%|█████▊    | 23053/39434 [00:00<00:00, 44460.31it/s] 68%|██████▊   | 26789/39434 [00:00<00:00, 39146.09it/s] 78%|███████▊  | 30766/39434 [00:00<00:00, 39330.07it/s] 91%|█████████ | 35964/39434 [00:00<00:00, 42426.61it/s]100%|██████████| 39434/39434 [00:00<00:00, 43306.85it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3931450843811035 seconds.
Run epoch 1
Epoch 1 ends in 0.6686127185821533 seconds.
39434 sentences created
mode 1: time used = 1.2499363422393799
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s]  9%|▉         | 3677/39434 [00:00<00:00, 35797.00it/s] 16%|█▋        | 6478/39434 [00:00<00:01, 31343.74it/s] 25%|██▌       | 9938/39434 [00:00<00:00, 31842.57it/s] 33%|███▎      | 12856/39434 [00:00<00:00, 30628.29it/s] 40%|████      | 15942/39434 [00:00<00:00, 29628.22it/s] 49%|████▊     | 19141/39434 [00:00<00:00, 30298.72it/s] 58%|█████▊    | 22692/39434 [00:00<00:00, 31693.81it/s] 65%|██████▍   | 25611/39434 [00:00<00:00, 27693.63it/s] 72%|███████▏  | 28357/39434 [00:00<00:00, 27471.88it/s] 79%|███████▊  | 31046/39434 [00:01<00:00, 23970.68it/s] 85%|████████▌ | 33579/39434 [00:01<00:00, 23043.04it/s] 92%|█████████▏| 36185/39434 [00:01<00:00, 23871.62it/s] 98%|█████████▊| 38605/39434 [00:01<00:00, 23788.74it/s]100%|██████████| 39434/39434 [00:01<00:00, 26573.09it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 55, in _forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 43, in embed
    return self.features[x]
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 50.99 MiB already allocated; 13.44 MiB free; 62.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.9131219387054443 seconds.
Run epoch 1
Epoch 1 ends in 0.8598508834838867 seconds.
39434 sentences created
mode 1: time used = 1.8656024932861328
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 3.80 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 549.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 782.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 25%|██▍       | 9776/39434 [00:00<00:00, 97758.69it/s] 49%|████▉     | 19431/39434 [00:00<00:00, 97391.89it/s] 88%|████████▊ | 34600/39434 [00:00<00:00, 109107.41it/s]100%|██████████| 39434/39434 [00:00<00:00, 112537.36it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1864159107208252 seconds.
Run epoch 1
Epoch 1 ends in 0.28714966773986816 seconds.
39434 sentences created
mode 1: time used = 0.5040030479431152
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 2.37 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 2.10 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 4.01 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: all CUDA-capable devices are busy or unavailable
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s]  9%|▉         | 3746/39434 [00:00<00:00, 37457.09it/s] 18%|█▊        | 7097/39434 [00:00<00:00, 34903.34it/s] 38%|███▊      | 15136/39434 [00:00<00:00, 42039.37it/s] 61%|██████    | 23926/39434 [00:00<00:00, 49839.72it/s] 81%|████████  | 31992/39434 [00:00<00:00, 54856.09it/s] 96%|█████████▌| 37750/39434 [00:00<00:00, 50713.85it/s]100%|██████████| 39434/39434 [00:00<00:00, 51296.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8529/552076 [00:00<00:06, 85283.78it/s]  3%|▎         | 15651/552076 [00:00<00:06, 77513.90it/s]  4%|▍         | 23610/552076 [00:00<00:06, 77960.81it/s]  5%|▌         | 28577/552076 [00:00<00:08, 59625.27it/s]  7%|▋         | 40093/552076 [00:00<00:07, 69710.21it/s]  9%|▉         | 52011/552076 [00:00<00:06, 79625.03it/s] 11%|█         | 60275/552076 [00:00<00:06, 73130.27it/s] 12%|█▏        | 67903/552076 [00:00<00:06, 73879.10it/s] 14%|█▎        | 75660/552076 [00:00<00:06, 74948.87it/s] 15%|█▌        | 83463/552076 [00:01<00:06, 75847.01it/s] 17%|█▋        | 91162/552076 [00:01<00:07, 65424.71it/s] 18%|█▊        | 101583/552076 [00:01<00:06, 73647.63it/s] 20%|██        | 112084/552076 [00:01<00:05, 80895.59it/s] 22%|██▏       | 123966/552076 [00:01<00:04, 89461.03it/s] 25%|██▍       | 136654/552076 [00:01<00:04, 98143.98it/s] 27%|██▋       | 149484/552076 [00:01<00:03, 105588.12it/s] 29%|██▉       | 161733/552076 [00:01<00:03, 110146.80it/s] 31%|███▏      | 173281/552076 [00:01<00:04, 94400.07it/s]  34%|███▎      | 186001/552076 [00:02<00:03, 102313.48it/s] 36%|███▌      | 197895/552076 [00:02<00:03, 106789.89it/s] 38%|███▊      | 210514/552076 [00:02<00:03, 111951.28it/s] 40%|████      | 223198/552076 [00:02<00:02, 116037.14it/s] 43%|████▎     | 235161/552076 [00:02<00:02, 116446.51it/s] 45%|████▍     | 247058/552076 [00:02<00:02, 116990.49it/s] 47%|████▋     | 258951/552076 [00:02<00:02, 117565.54it/s] 49%|████▉     | 271782/552076 [00:02<00:02, 120594.21it/s] 51%|█████▏    | 283948/552076 [00:02<00:02, 95549.43it/s]  54%|█████▍    | 296930/552076 [00:03<00:02, 103766.66it/s] 56%|█████▌    | 308138/552076 [00:03<00:02, 94852.35it/s]  58%|█████▊    | 320425/552076 [00:03<00:02, 101816.60it/s] 60%|██████    | 331262/552076 [00:03<00:02, 103300.90it/s] 62%|██████▏   | 344300/552076 [00:03<00:01, 110164.64it/s] 65%|██████▍   | 357025/552076 [00:03<00:01, 114786.77it/s] 67%|██████▋   | 369422/552076 [00:03<00:01, 117394.71it/s] 69%|██████▉   | 381432/552076 [00:03<00:01, 111388.40it/s] 71%|███████   | 392825/552076 [00:03<00:01, 102032.71it/s] 73%|███████▎  | 403359/552076 [00:04<00:01, 98350.17it/s]  75%|███████▌  | 415727/552076 [00:04<00:01, 104786.66it/s] 78%|███████▊  | 430087/552076 [00:04<00:01, 114033.03it/s] 81%|████████  | 447932/552076 [00:04<00:00, 127881.33it/s] 84%|████████▍ | 463461/552076 [00:04<00:00, 135030.34it/s] 87%|████████▋ | 480030/552076 [00:04<00:00, 142964.55it/s] 90%|████████▉ | 496805/552076 [00:04<00:00, 149594.56it/s] 93%|█████████▎| 514818/552076 [00:04<00:00, 157609.36it/s] 96%|█████████▌| 531056/552076 [00:04<00:00, 142711.46it/s] 99%|█████████▉| 548941/552076 [00:05<00:00, 151917.51it/s]100%|██████████| 552076/552076 [00:05<00:00, 109011.27it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.49997591972351074 seconds.
Run epoch 1
Epoch 1 ends in 0.5160789489746094 seconds.
39434 sentences created
mode 1: time used = 0.903541088104248
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 21%|██        | 8190/39434 [00:00<00:00, 81897.54it/s] 37%|███▋      | 14589/39434 [00:00<00:00, 73073.00it/s] 58%|█████▊    | 22788/39434 [00:00<00:00, 75536.15it/s] 80%|████████  | 31664/39434 [00:00<00:00, 79067.92it/s]100%|██████████| 39434/39434 [00:00<00:00, 79194.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13223/552076 [00:00<00:04, 132229.81it/s]  5%|▍         | 24855/552076 [00:00<00:04, 124441.82it/s]  6%|▌         | 30915/552076 [00:00<00:05, 91128.07it/s]   8%|▊         | 46262/552076 [00:00<00:04, 101981.65it/s] 10%|▉         | 54646/552076 [00:00<00:05, 87181.49it/s]  11%|█▏        | 62469/552076 [00:00<00:06, 77564.20it/s] 14%|█▍        | 77601/552076 [00:00<00:05, 90847.78it/s] 17%|█▋        | 93328/552076 [00:00<00:04, 104027.95it/s] 19%|█▉        | 107104/552076 [00:00<00:03, 112275.28it/s] 22%|██▏       | 120897/552076 [00:01<00:03, 118910.15it/s] 25%|██▍       | 137107/552076 [00:01<00:03, 129240.33it/s] 28%|██▊       | 154631/552076 [00:01<00:02, 140286.22it/s] 32%|███▏      | 174842/552076 [00:01<00:02, 154459.12it/s] 35%|███▍      | 193182/552076 [00:01<00:02, 162134.51it/s] 38%|███▊      | 212150/552076 [00:01<00:02, 169519.68it/s] 42%|████▏     | 230867/552076 [00:01<00:01, 174454.65it/s] 45%|████▌     | 248987/552076 [00:01<00:01, 176423.62it/s] 48%|████▊     | 266983/552076 [00:01<00:01, 177358.82it/s] 52%|█████▏    | 284968/552076 [00:01<00:01, 177737.64it/s] 55%|█████▍    | 302916/552076 [00:02<00:01, 178143.45it/s] 58%|█████▊    | 321468/552076 [00:02<00:01, 180293.00it/s] 62%|██████▏   | 340386/552076 [00:02<00:01, 182869.21it/s] 65%|██████▌   | 358862/552076 [00:02<00:01, 181860.38it/s] 68%|██████▊   | 377101/552076 [00:02<00:01, 172393.30it/s] 71%|███████▏  | 394480/552076 [00:02<00:00, 171898.69it/s] 75%|███████▍  | 411768/552076 [00:02<00:00, 160544.94it/s] 78%|███████▊  | 429810/552076 [00:02<00:00, 166031.24it/s] 81%|████████  | 446615/552076 [00:02<00:00, 154113.43it/s] 84%|████████▎ | 462339/552076 [00:03<00:00, 121788.56it/s] 87%|████████▋ | 480565/552076 [00:03<00:00, 135249.20it/s] 90%|█████████ | 499373/552076 [00:03<00:00, 147694.98it/s] 94%|█████████▍| 518734/552076 [00:03<00:00, 159006.88it/s] 97%|█████████▋| 535788/552076 [00:03<00:00, 154559.13it/s]100%|██████████| 552076/552076 [00:03<00:00, 150758.57it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 14.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.18772077560424805 seconds.
Run epoch 1
Epoch 1 ends in 0.3901188373565674 seconds.
39434 sentences created
mode 1: time used = 0.679145336151123
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 42%|████▏     | 16610/39434 [00:00<00:00, 166093.03it/s] 68%|██████▊   | 26891/39434 [00:00<00:00, 140200.29it/s] 85%|████████▍ | 33464/39434 [00:00<00:00, 94350.93it/s] 100%|██████████| 39434/39434 [00:00<00:00, 102154.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11112/552076 [00:00<00:04, 111118.25it/s]  4%|▍         | 22127/552076 [00:00<00:04, 110824.99it/s]  5%|▌         | 29061/552076 [00:00<00:05, 93205.04it/s]   6%|▋         | 35048/552076 [00:00<00:08, 61458.29it/s]  7%|▋         | 40339/552076 [00:00<00:08, 58615.48it/s]  9%|▊         | 47259/552076 [00:00<00:08, 61434.09it/s] 10%|▉         | 54976/552076 [00:00<00:07, 64987.64it/s] 11%|█         | 61251/552076 [00:00<00:07, 61679.68it/s] 14%|█▍        | 79532/552076 [00:00<00:06, 76982.20it/s] 17%|█▋        | 94448/552076 [00:01<00:05, 90054.38it/s] 19%|█▉        | 105725/552076 [00:01<00:05, 87880.70it/s] 21%|██        | 116982/552076 [00:01<00:04, 94069.78it/s] 23%|██▎       | 129101/552076 [00:01<00:04, 100838.81it/s] 26%|██▌       | 144682/552076 [00:01<00:03, 112773.99it/s] 30%|██▉       | 163363/552076 [00:01<00:03, 127991.22it/s] 33%|███▎      | 181135/552076 [00:01<00:02, 139719.75it/s] 36%|███▌      | 199922/552076 [00:01<00:02, 151355.80it/s] 39%|███▉      | 216302/552076 [00:01<00:02, 154690.60it/s] 42%|████▏     | 232661/552076 [00:02<00:02, 132272.09it/s] 46%|████▌     | 252140/552076 [00:02<00:02, 146364.72it/s] 49%|████▉     | 271805/552076 [00:02<00:01, 158523.70it/s] 52%|█████▏    | 288892/552076 [00:02<00:01, 162035.93it/s] 56%|█████▌    | 307666/552076 [00:02<00:01, 168975.52it/s] 59%|█████▉    | 325876/552076 [00:02<00:01, 172707.42it/s] 62%|██████▏   | 344452/552076 [00:02<00:01, 176424.45it/s] 66%|██████▌   | 362580/552076 [00:02<00:01, 177468.69it/s] 69%|██████▉   | 380585/552076 [00:02<00:01, 169471.70it/s] 72%|███████▏  | 398080/552076 [00:03<00:00, 171075.76it/s] 75%|███████▌  | 415371/552076 [00:03<00:00, 149017.02it/s] 78%|███████▊  | 430912/552076 [00:03<00:00, 146949.80it/s] 81%|████████  | 448559/552076 [00:03<00:00, 154713.41it/s] 85%|████████▍ | 468164/552076 [00:03<00:00, 165159.94it/s] 88%|████████▊ | 488013/552076 [00:03<00:00, 173919.05it/s] 92%|█████████▏| 506826/552076 [00:03<00:00, 177949.32it/s] 95%|█████████▌| 524973/552076 [00:03<00:00, 161633.08it/s] 98%|█████████▊| 542283/552076 [00:03<00:00, 164909.77it/s]100%|██████████| 552076/552076 [00:03<00:00, 139259.29it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_isomorphism.py", line 37, in forward
    y = self.mlp((1 + self.eps) * x + torch.mm(self.adj, x))
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gin
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.18363356590270996 seconds.
Run epoch 1
Epoch 1 ends in 0.2502729892730713 seconds.
39434 sentences created
mode 1: time used = 0.46886396408081055
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: all CUDA-capable devices are busy or unavailable
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 1.05 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 72, in forward
    hx = self.full_embeddings[x]
RuntimeError: CUDA out of memory. Tried to allocate 174.00 MiB (GPU 0; 10.76 GiB total capacity; 371.38 MiB already allocated; 161.44 MiB free; 396.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 2.19 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 2.25 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 9.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19441/39434 [00:00<00:00, 194402.31it/s] 81%|████████▏ | 32124/39434 [00:00<00:00, 167610.25it/s]100%|██████████| 39434/39434 [00:00<00:00, 142520.63it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1529092788696289 seconds.
Run epoch 1
Epoch 1 ends in 0.2747797966003418 seconds.
39434 sentences created
mode 1: time used = 0.3283042907714844
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
epoch 5: {'train_loss': '1.19040'}; time used = 0.27759528160095215s
epoch 10: {'train_loss': '1.11077'}; time used = 0.2055187225341797s
epoch 15: {'train_loss': '1.04404'}; time used = 0.14938068389892578s
epoch 20: {'train_loss': '1.01494'}; time used = 0.2790565490722656s
epoch 25: {'train_loss': '0.99582'}; time used = 0.21387577056884766s
epoch 30: {'train_loss': '0.98345'}; time used = 0.19063973426818848s
epoch 35: {'train_loss': '0.97338'}; time used = 0.18991374969482422s
epoch 40: {'train_loss': '0.96504'}; time used = 0.26408934593200684s
epoch 45: {'train_loss': '0.96006'}; time used = 0.25397825241088867s
epoch 50: {'train_loss': '0.95209'}; time used = 0.2634751796722412s
epoch 55: {'train_loss': '0.94756'}; time used = 0.2547321319580078s
epoch 60: {'train_loss': '0.94444'}; time used = 0.2675950527191162s
epoch 65: {'train_loss': '0.94094'}; time used = 0.3094496726989746s
epoch 70: {'train_loss': '0.93898'}; time used = 0.26700353622436523s
epoch 75: {'train_loss': '0.93407'}; time used = 0.2571854591369629s
epoch 80: {'train_loss': '0.93005'}; time used = 0.2719910144805908s
epoch 85: {'train_loss': '0.92792'}; time used = 0.28426098823547363s
epoch 90: {'train_loss': '0.92823'}; time used = 0.28751182556152344s
epoch 95: {'train_loss': '0.92671'}; time used = 0.29381299018859863s
epoch 100: {'train_loss': '0.92456'}; time used = 0.2621927261352539s
epoch 105: {'train_loss': '0.92312'}; time used = 0.25035548210144043s
epoch 110: {'train_loss': '0.92031'}; time used = 0.41258907318115234s
epoch 115: {'train_loss': '0.92072'}; time used = 0.7648749351501465s
epoch 120: {'train_loss': '0.92008'}; time used = 0.8594067096710205s
epoch 125: {'train_loss': '0.91781'}; time used = 0.6763827800750732s
epoch 130: {'train_loss': '0.91644'}; time used = 0.7621514797210693s
epoch 135: {'train_loss': '0.91584'}; time used = 0.8676166534423828s
epoch 140: {'train_loss': '0.91503'}; time used = 0.8424935340881348s
epoch 145: {'train_loss': '0.91373'}; time used = 0.7079002857208252s
epoch 150: {'train_loss': '0.91244'}; time used = 0.791680097579956s
epoch 155: {'train_loss': '0.91180'}; time used = 0.8702311515808105s
epoch 160: {'train_loss': '0.91227'}; time used = 0.7705097198486328s
epoch 165: {'train_loss': '0.91072'}; time used = 0.7919714450836182s
epoch 170: {'train_loss': '0.91076'}; time used = 0.740715503692627s
epoch 175: {'train_loss': '0.90906'}; time used = 0.6786415576934814s
epoch 180: {'train_loss': '0.90954'}; time used = 0.713247537612915s
epoch 185: {'train_loss': '0.90881'}; time used = 0.7037065029144287s
epoch 190: {'train_loss': '0.90750'}; time used = 0.693840503692627s
epoch 195: {'train_loss': '0.90832'}; time used = 0.7769575119018555s
epoch 200: {'train_loss': '0.90605'}; time used = 0.9800276756286621s
epoch 205: {'train_loss': '0.90765'}; time used = 0.8222780227661133s
epoch 210: {'train_loss': '0.90625'}; time used = 0.6496837139129639s
epoch 215: {'train_loss': '0.90532'}; time used = 0.7415652275085449s
epoch 220: {'train_loss': '0.90559'}; time used = 0.7459983825683594s
epoch 225: {'train_loss': '0.90554'}; time used = 0.7141544818878174s
epoch 230: {'train_loss': '0.90488'}; time used = 0.6832282543182373s
epoch 235: {'train_loss': '0.90296'}; time used = 0.8082554340362549s
epoch 240: {'train_loss': '0.90490'}; time used = 0.8185949325561523s
epoch 245: {'train_loss': '0.90341'}; time used = 0.7468559741973877s
epoch 250: {'train_loss': '0.90363'}; time used = 0.7411398887634277s
epoch 255: {'train_loss': '0.90347'}; time used = 0.7238063812255859s
epoch 260: {'train_loss': '0.90171'}; time used = 0.8401596546173096s
epoch 265: {'train_loss': '0.90358'}; time used = 0.9600162506103516s
epoch 270: {'train_loss': '0.90215'}; time used = 0.7763500213623047s
epoch 275: {'train_loss': '0.90162'}; time used = 0.7284610271453857s
epoch 280: {'train_loss': '0.90155'}; time used = 0.7237834930419922s
epoch 285: {'train_loss': '0.90148'}; time used = 0.6848506927490234s
epoch 290: {'train_loss': '0.90168'}; time used = 0.7344114780426025s
epoch 295: {'train_loss': '0.90138'}; time used = 0.7280745506286621s
epoch 300: {'train_loss': '0.90153'}; time used = 0.6487841606140137s
epoch 305: {'train_loss': '0.90107'}; time used = 0.6284275054931641s
epoch 310: {'train_loss': '0.89968'}; time used = 0.6548030376434326s
epoch 315: {'train_loss': '0.90118'}; time used = 0.6758260726928711s
epoch 320: {'train_loss': '0.89955'}; time used = 0.7425074577331543s
epoch 325: {'train_loss': '0.90125'}; time used = 0.7616913318634033s
epoch 330: {'train_loss': '0.90066'}; time used = 0.8032872676849365s
epoch 335: {'train_loss': '0.90022'}; time used = 0.692441463470459s
epoch 340: {'train_loss': '0.89849'}; time used = 0.6799709796905518s
epoch 345: {'train_loss': '0.89830'}; time used = 0.6430470943450928s
epoch 350: {'train_loss': '0.89963'}; time used = 0.7202956676483154s
epoch 355: {'train_loss': '0.89888'}; time used = 0.6609382629394531s
epoch 360: {'train_loss': '0.89875'}; time used = 0.877194881439209s
epoch 365: {'train_loss': '0.89846'}; time used = 0.7785036563873291s
epoch 370: {'train_loss': '0.89819'}; time used = 0.8904504776000977s
epoch 375: {'train_loss': '0.89903'}; time used = 0.6472561359405518s
epoch 380: {'train_loss': '0.90001'}; time used = 0.7117111682891846s
epoch 385: {'train_loss': '0.89825'}; time used = 0.7602255344390869s
epoch 390: {'train_loss': '0.89933'}; time used = 0.575685977935791s
epoch 395: {'train_loss': '0.89786'}; time used = 0.689345121383667s
epoch 400: {'train_loss': '0.89848'}; time used = 0.7996149063110352s
epoch 405: {'train_loss': '0.89724'}; time used = 0.8310835361480713s
epoch 410: {'train_loss': '0.89736'}; time used = 0.6637585163116455s
epoch 415: {'train_loss': '0.89805'}; time used = 0.668886661529541s
epoch 420: {'train_loss': '0.89716'}; time used = 0.7177238464355469s
epoch 425: {'train_loss': '0.89963'}; time used = 0.7211692333221436s
epoch 430: {'train_loss': '0.89839'}; time used = 0.6748979091644287s
epoch 435: {'train_loss': '0.89745'}; time used = 0.6677405834197998s
epoch 440: {'train_loss': '0.89846'}; time used = 0.7194743156433105s
epoch 445: {'train_loss': '0.89909'}; time used = 0.7477216720581055s
epoch 450: {'train_loss': '0.89740'}; time used = 0.7280063629150391s
epoch 455: {'train_loss': '0.89695'}; time used = 0.754023551940918s
epoch 460: {'train_loss': '0.89758'}; time used = 0.6707978248596191s
epoch 465: {'train_loss': '0.89767'}; time used = 0.6348772048950195s
epoch 470: {'train_loss': '0.89694'}; time used = 0.8612747192382812s
epoch 475: {'train_loss': '0.89737'}; time used = 0.835874080657959s
epoch 480: {'train_loss': '0.89766'}; time used = 0.7535073757171631s
epoch 485: {'train_loss': '0.89717'}; time used = 0.7159137725830078s
epoch 490: {'train_loss': '0.89662'}; time used = 0.6494615077972412s
epoch 495: {'train_loss': '0.89658'}; time used = 0.7246911525726318s

epoch 500: {'train_loss': '0.89752'}; time used = 0.7466955184936523s
Finished training. Time used = 70.5595121383667.
Training classifier using 20.00% nodes...
{'micro': 0.8507670850767085, 'macro': 0.8490064773968139, 'samples': 0.8507670850767085, 'weighted': 0.8506882905779055}
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8741/39434 [00:00<00:00, 87403.83it/s] 42%|████▏     | 16644/39434 [00:00<00:00, 84710.28it/s] 58%|█████▊    | 22723/39434 [00:00<00:00, 75762.13it/s] 78%|███████▊  | 30836/39434 [00:00<00:00, 77294.31it/s] 93%|█████████▎| 36608/39434 [00:00<00:00, 65583.32it/s]100%|██████████| 39434/39434 [00:00<00:00, 66164.46it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.44158196449279785 seconds.
Run epoch 1
Epoch 1 ends in 0.47246384620666504 seconds.
39434 sentences created
mode 1: time used = 0.754472017288208
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
epoch 5: {'train_loss': '1.13079'}; time used = 0.9558603763580322s
epoch 10: {'train_loss': '1.02982'}; time used = 1.0238778591156006s
epoch 15: {'train_loss': '0.99503'}; time used = 1.0231435298919678s
epoch 20: {'train_loss': '0.97285'}; time used = 0.6876225471496582s
epoch 25: {'train_loss': '0.95904'}; time used = 0.6672117710113525s
epoch 30: {'train_loss': '0.94991'}; time used = 0.6840360164642334s
epoch 35: {'train_loss': '0.94313'}; time used = 0.6865496635437012s
epoch 40: {'train_loss': '0.93763'}; time used = 0.7871699333190918s
epoch 45: {'train_loss': '0.93454'}; time used = 0.8542599678039551s
epoch 50: {'train_loss': '0.92862'}; time used = 0.7138650417327881s
epoch 55: {'train_loss': '0.92515'}; time used = 0.9399662017822266s
epoch 60: {'train_loss': '0.92316'}; time used = 0.7958688735961914s
epoch 65: {'train_loss': '0.92065'}; time used = 0.829674243927002s
epoch 70: {'train_loss': '0.91940'}; time used = 0.7532968521118164s
epoch 75: {'train_loss': '0.91577'}; time used = 0.8440377712249756s
epoch 80: {'train_loss': '0.91249'}; time used = 0.7921607494354248s
epoch 85: {'train_loss': '0.91112'}; time used = 0.8690435886383057s
epoch 90: {'train_loss': '0.91175'}; time used = 0.7850263118743896s
epoch 95: {'train_loss': '0.91122'}; time used = 0.6541025638580322s
epoch 100: {'train_loss': '0.90968'}; time used = 0.7351799011230469s
epoch 105: {'train_loss': '0.90877'}; time used = 0.7218320369720459s
epoch 110: {'train_loss': '0.90674'}; time used = 0.8453683853149414s
epoch 115: {'train_loss': '0.90769'}; time used = 0.7961251735687256s
epoch 120: {'train_loss': '0.90731'}; time used = 0.6374554634094238s
epoch 125: {'train_loss': '0.90563'}; time used = 0.3012087345123291s
epoch 130: {'train_loss': '0.90486'}; time used = 0.2985343933105469s
epoch 135: {'train_loss': '0.90459'}; time used = 0.20046329498291016s
epoch 140: {'train_loss': '0.90413'}; time used = 0.25354695320129395s
epoch 145: {'train_loss': '0.90354'}; time used = 0.2406628131866455s
epoch 150: {'train_loss': '0.90236'}; time used = 0.19492149353027344s
epoch 155: {'train_loss': '0.90187'}; time used = 0.29984498023986816s
epoch 160: {'train_loss': '0.90286'}; time used = 0.2068958282470703s
epoch 165: {'train_loss': '0.90126'}; time used = 0.20723509788513184s
epoch 170: {'train_loss': '0.90208'}; time used = 0.19588494300842285s
epoch 175: {'train_loss': '0.90075'}; time used = 0.19026470184326172s
epoch 180: {'train_loss': '0.90145'}; time used = 0.19896197319030762s
epoch 185: {'train_loss': '0.90122'}; time used = 0.20426440238952637s
epoch 190: {'train_loss': '0.89995'}; time used = 0.2010636329650879s
epoch 195: {'train_loss': '0.90110'}; time used = 0.18526577949523926s
epoch 200: {'train_loss': '0.89921'}; time used = 0.3226184844970703s
epoch 205: {'train_loss': '0.90095'}; time used = 0.5328855514526367s
epoch 210: {'train_loss': '0.89963'}; time used = 0.48469042778015137s
epoch 215: {'train_loss': '0.89904'}; time used = 0.3422107696533203s
epoch 220: {'train_loss': '0.89973'}; time used = 0.25766849517822266s
epoch 225: {'train_loss': '0.89991'}; time used = 0.18381547927856445s
epoch 230: {'train_loss': '0.89950'}; time used = 0.18418002128601074s
epoch 235: {'train_loss': '0.89763'}; time used = 0.19620800018310547s
epoch 240: {'train_loss': '0.89949'}; time used = 0.19566893577575684s
epoch 245: {'train_loss': '0.89839'}; time used = 0.19221806526184082s
epoch 250: {'train_loss': '0.89893'}; time used = 0.20008254051208496s
epoch 255: {'train_loss': '0.89910'}; time used = 0.20477724075317383s
epoch 260: {'train_loss': '0.89733'}; time used = 0.19784951210021973s
epoch 265: {'train_loss': '0.89920'}; time used = 0.24174928665161133s
epoch 270: {'train_loss': '0.89779'}; time used = 0.21176457405090332s
epoch 275: {'train_loss': '0.89766'}; time used = 0.19106364250183105s
epoch 280: {'train_loss': '0.89759'}; time used = 0.20112228393554688s
epoch 285: {'train_loss': '0.89800'}; time used = 0.19480395317077637s
epoch 290: {'train_loss': '0.89821'}; time used = 0.19917607307434082s
epoch 295: {'train_loss': '0.89805'}; time used = 0.19564461708068848s
epoch 300: {'train_loss': '0.89832'}; time used = 0.20502376556396484s
epoch 305: {'train_loss': '0.89802'}; time used = 0.22324728965759277s
epoch 310: {'train_loss': '0.89694'}; time used = 0.2619049549102783s
epoch 315: {'train_loss': '0.89862'}; time used = 0.5427851676940918s
epoch 320: {'train_loss': '0.89689'}; time used = 0.1754927635192871s
epoch 325: {'train_loss': '0.89856'}; time used = 0.3415966033935547s
epoch 330: {'train_loss': '0.89808'}; time used = 0.32700610160827637s
epoch 335: {'train_loss': '0.89818'}; time used = 0.17753005027770996s
epoch 340: {'train_loss': '0.89654'}; time used = 0.19143056869506836s
epoch 345: {'train_loss': '0.89614'}; time used = 0.17965364456176758s
epoch 350: {'train_loss': '0.89761'}; time used = 0.17844200134277344s
epoch 355: {'train_loss': '0.89694'}; time used = 0.1798715591430664s
epoch 360: {'train_loss': '0.89698'}; time used = 0.18738174438476562s
epoch 365: {'train_loss': '0.89654'}; time used = 0.19306349754333496s
epoch 370: {'train_loss': '0.89645'}; time used = 0.18911004066467285s
epoch 375: {'train_loss': '0.89768'}; time used = 0.1908729076385498s
epoch 380: {'train_loss': '0.89847'}; time used = 0.1939537525177002s
epoch 385: {'train_loss': '0.89694'}; time used = 0.19658470153808594s
epoch 390: {'train_loss': '0.89799'}; time used = 0.1943073272705078s
epoch 395: {'train_loss': '0.89641'}; time used = 0.1909937858581543s
epoch 400: {'train_loss': '0.89726'}; time used = 0.18667840957641602s
epoch 405: {'train_loss': '0.89603'}; time used = 0.2702372074127197s
epoch 410: {'train_loss': '0.89618'}; time used = 0.21438097953796387s
epoch 415: {'train_loss': '0.89713'}; time used = 0.24230599403381348s
epoch 420: {'train_loss': '0.89621'}; time used = 0.3304595947265625s
epoch 425: {'train_loss': '0.89867'}; time used = 0.22032928466796875s
epoch 430: {'train_loss': '0.89757'}; time used = 0.20064473152160645s
epoch 435: {'train_loss': '0.89660'}; time used = 0.19730162620544434s
epoch 440: {'train_loss': '0.89759'}; time used = 0.17979931831359863s
epoch 445: {'train_loss': '0.89856'}; time used = 0.1792922019958496s
epoch 450: {'train_loss': '0.89662'}; time used = 0.3677711486816406s
epoch 455: {'train_loss': '0.89637'}; time used = 0.2637054920196533s
epoch 460: {'train_loss': '0.89704'}; time used = 0.2763404846191406s
epoch 465: {'train_loss': '0.89720'}; time used = 0.34984612464904785s
epoch 470: {'train_loss': '0.89651'}; time used = 0.374406099319458s
epoch 475: {'train_loss': '0.89682'}; time used = 0.20970988273620605s
epoch 480: {'train_loss': '0.89720'}; time used = 0.18178582191467285s
epoch 485: {'train_loss': '0.89670'}; time used = 0.22352957725524902s
epoch 490: {'train_loss': '0.89607'}; time used = 0.17124223709106445s

epoch 495: {'train_loss': '0.89650'}; time used = 0.1841440200805664s
epoch 500: {'train_loss': '0.89739'}; time used = 0.1865706443786621s
Finished training. Time used = 47.86171555519104.
Training classifier using 20.00% nodes...
{'micro': 0.8515278306073285, 'macro': 0.8498267367058321, 'samples': 0.8515278306073285, 'weighted': 0.8514132016407269}
  0%|          | 0/39434 [00:00<?, ?it/s] 47%|████▋     | 18438/39434 [00:00<00:00, 184377.10it/s] 94%|█████████▍| 37207/39434 [00:00<00:00, 185356.19it/s]100%|██████████| 39434/39434 [00:00<00:00, 185380.75it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.17225980758666992 seconds.
Run epoch 1
Epoch 1 ends in 0.29517698287963867 seconds.
39434 sentences created
mode 1: time used = 0.3556671142578125
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
epoch 5: {'train_loss': '1.08873'}; time used = 0.20665597915649414s
epoch 10: {'train_loss': '1.00759'}; time used = 0.2748837471008301s
epoch 15: {'train_loss': '0.97367'}; time used = 0.22927474975585938s
epoch 20: {'train_loss': '0.95426'}; time used = 0.17319273948669434s
epoch 25: {'train_loss': '0.94332'}; time used = 0.30412888526916504s
epoch 30: {'train_loss': '0.93583'}; time used = 0.1909945011138916s
epoch 35: {'train_loss': '0.93047'}; time used = 0.2053544521331787s
epoch 40: {'train_loss': '0.92593'}; time used = 0.3437507152557373s
epoch 45: {'train_loss': '0.92360'}; time used = 0.19611549377441406s
epoch 50: {'train_loss': '0.91869'}; time used = 0.20633172988891602s
epoch 55: {'train_loss': '0.91576'}; time used = 0.20826363563537598s
epoch 60: {'train_loss': '0.91455'}; time used = 0.1920938491821289s
epoch 65: {'train_loss': '0.91264'}; time used = 0.2033860683441162s
epoch 70: {'train_loss': '0.91177'}; time used = 0.310222864151001s
epoch 75: {'train_loss': '0.90866'}; time used = 0.34983038902282715s
epoch 80: {'train_loss': '0.90595'}; time used = 0.2542757987976074s
epoch 85: {'train_loss': '0.90493'}; time used = 0.3892495632171631s
epoch 90: {'train_loss': '0.90571'}; time used = 0.261394739151001s
epoch 95: {'train_loss': '0.90559'}; time used = 0.3089287281036377s
epoch 100: {'train_loss': '0.90454'}; time used = 0.17949199676513672s
epoch 105: {'train_loss': '0.90381'}; time used = 0.2131175994873047s
epoch 110: {'train_loss': '0.90209'}; time used = 0.20552992820739746s
epoch 115: {'train_loss': '0.90330'}; time used = 0.19804811477661133s
epoch 120: {'train_loss': '0.90318'}; time used = 0.1960442066192627s
epoch 125: {'train_loss': '0.90178'}; time used = 0.19149255752563477s
epoch 130: {'train_loss': '0.90146'}; time used = 0.21034669876098633s
epoch 135: {'train_loss': '0.90123'}; time used = 0.19290804862976074s
epoch 140: {'train_loss': '0.90074'}; time used = 0.20272064208984375s
epoch 145: {'train_loss': '0.90046'}; time used = 0.29195499420166016s
epoch 150: {'train_loss': '0.89948'}; time used = 0.3364732265472412s
epoch 155: {'train_loss': '0.89923'}; time used = 0.27350854873657227s
epoch 160: {'train_loss': '0.90050'}; time used = 0.4360833168029785s
epoch 165: {'train_loss': '0.89880'}; time used = 0.18088197708129883s
epoch 170: {'train_loss': '0.89981'}; time used = 0.23029494285583496s
epoch 175: {'train_loss': '0.89886'}; time used = 0.3576679229736328s
epoch 180: {'train_loss': '0.89955'}; time used = 0.20664143562316895s
epoch 185: {'train_loss': '0.89961'}; time used = 0.19212627410888672s
epoch 190: {'train_loss': '0.89834'}; time used = 0.1916968822479248s
epoch 195: {'train_loss': '0.89958'}; time used = 0.19213318824768066s
epoch 200: {'train_loss': '0.89786'}; time used = 0.20117664337158203s
epoch 205: {'train_loss': '0.89968'}; time used = 0.20021891593933105s
epoch 210: {'train_loss': '0.89831'}; time used = 0.2028348445892334s
epoch 215: {'train_loss': '0.89798'}; time used = 0.19991064071655273s
epoch 220: {'train_loss': '0.89887'}; time used = 0.2001338005065918s
epoch 225: {'train_loss': '0.89909'}; time used = 0.20038485527038574s
epoch 230: {'train_loss': '0.89875'}; time used = 0.2031259536743164s
epoch 235: {'train_loss': '0.89691'}; time used = 0.2907233238220215s
epoch 240: {'train_loss': '0.89879'}; time used = 0.19545984268188477s
epoch 245: {'train_loss': '0.89787'}; time used = 0.2492218017578125s
epoch 250: {'train_loss': '0.89843'}; time used = 0.20195221900939941s
epoch 255: {'train_loss': '0.89871'}; time used = 0.20136523246765137s
epoch 260: {'train_loss': '0.89704'}; time used = 0.1883087158203125s
epoch 265: {'train_loss': '0.89880'}; time used = 0.18658924102783203s
epoch 270: {'train_loss': '0.89765'}; time used = 0.3991217613220215s
epoch 275: {'train_loss': '0.89751'}; time used = 0.2911667823791504s
epoch 280: {'train_loss': '0.89742'}; time used = 0.18317317962646484s
epoch 285: {'train_loss': '0.89800'}; time used = 0.45092129707336426s
epoch 290: {'train_loss': '0.89815'}; time used = 0.18728375434875488s
epoch 295: {'train_loss': '0.89801'}; time used = 0.18886375427246094s
epoch 300: {'train_loss': '0.89820'}; time used = 0.1862802505493164s
epoch 305: {'train_loss': '0.89800'}; time used = 0.1862943172454834s
epoch 310: {'train_loss': '0.89701'}; time used = 0.18845510482788086s
epoch 315: {'train_loss': '0.89876'}; time used = 0.1896350383758545s
epoch 320: {'train_loss': '0.89696'}; time used = 0.19872736930847168s
epoch 325: {'train_loss': '0.89851'}; time used = 0.24793219566345215s
epoch 330: {'train_loss': '0.89817'}; time used = 0.19286847114562988s
epoch 335: {'train_loss': '0.89840'}; time used = 0.1877577304840088s
epoch 340: {'train_loss': '0.89665'}; time used = 0.17776775360107422s
epoch 345: {'train_loss': '0.89630'}; time used = 0.19303488731384277s
epoch 350: {'train_loss': '0.89771'}; time used = 0.19167089462280273s
epoch 355: {'train_loss': '0.89718'}; time used = 0.19460654258728027s
epoch 360: {'train_loss': '0.89715'}; time used = 0.18746161460876465s
epoch 365: {'train_loss': '0.89672'}; time used = 0.17751550674438477s
epoch 370: {'train_loss': '0.89665'}; time used = 0.1830146312713623s
epoch 375: {'train_loss': '0.89805'}; time used = 0.19290733337402344s
epoch 380: {'train_loss': '0.89868'}; time used = 0.20495009422302246s
epoch 385: {'train_loss': '0.89721'}; time used = 0.31603121757507324s
epoch 390: {'train_loss': '0.89821'}; time used = 0.27916502952575684s
epoch 395: {'train_loss': '0.89670'}; time used = 0.21168017387390137s
epoch 400: {'train_loss': '0.89764'}; time used = 0.26195478439331055s
epoch 405: {'train_loss': '0.89633'}; time used = 0.18489933013916016s
epoch 410: {'train_loss': '0.89654'}; time used = 0.5629234313964844s
epoch 415: {'train_loss': '0.89751'}; time used = 0.23559260368347168s
epoch 420: {'train_loss': '0.89657'}; time used = 0.45127177238464355s
epoch 425: {'train_loss': '0.89907'}; time used = 0.21869850158691406s
epoch 430: {'train_loss': '0.89790'}; time used = 0.18034744262695312s
epoch 435: {'train_loss': '0.89704'}; time used = 0.18079018592834473s
epoch 440: {'train_loss': '0.89802'}; time used = 0.2812540531158447s
epoch 445: {'train_loss': '0.89900'}; time used = 0.18470382690429688s
epoch 450: {'train_loss': '0.89701'}; time used = 0.1896805763244629s
epoch 455: {'train_loss': '0.89670'}; time used = 0.19280719757080078s
epoch 460: {'train_loss': '0.89750'}; time used = 0.20015239715576172s
epoch 465: {'train_loss': '0.89764'}; time used = 0.20083904266357422s
epoch 470: {'train_loss': '0.89700'}; time used = 0.19693851470947266s
epoch 475: {'train_loss': '0.89722'}; time used = 0.23377346992492676s
epoch 480: {'train_loss': '0.89764'}; time used = 0.2021198272705078s
epoch 485: {'train_loss': '0.89721'}; time used = 0.20879554748535156s
epoch 490: {'train_loss': '0.89644'}; time used = 0.19985580444335938s

epoch 495: {'train_loss': '0.89701'}; time used = 0.19178175926208496s
epoch 500: {'train_loss': '0.89788'}; time used = 0.18156218528747559s
Finished training. Time used = 28.21426510810852.
Training classifier using 20.00% nodes...
{'micro': 0.8513376442246735, 'macro': 0.8496460019505898, 'samples': 0.8513376442246735, 'weighted': 0.8512229973867441}
  0%|          | 0/39434 [00:00<?, ?it/s] 44%|████▍     | 17313/39434 [00:00<00:00, 173129.75it/s] 85%|████████▌ | 33524/39434 [00:00<00:00, 169666.92it/s]100%|██████████| 39434/39434 [00:00<00:00, 166268.77it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1595001220703125 seconds.
Run epoch 1
Epoch 1 ends in 0.24315857887268066 seconds.
39434 sentences created
mode 1: time used = 0.29595303535461426
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
epoch 5: {'train_loss': '1.37565'}; time used = 0.25833725929260254s
epoch 10: {'train_loss': '1.33609'}; time used = 0.3852076530456543s
epoch 15: {'train_loss': '1.22628'}; time used = 0.2116987705230713s
epoch 20: {'train_loss': '1.15165'}; time used = 0.19301533699035645s
epoch 25: {'train_loss': '1.13951'}; time used = 0.19353866577148438s
epoch 30: {'train_loss': '1.12506'}; time used = 0.4628441333770752s
epoch 35: {'train_loss': '1.11532'}; time used = 0.25045037269592285s
epoch 40: {'train_loss': '1.10248'}; time used = 0.3742027282714844s
epoch 45: {'train_loss': '1.08755'}; time used = 0.3533647060394287s
epoch 50: {'train_loss': '1.07378'}; time used = 0.21276640892028809s
epoch 55: {'train_loss': '1.06606'}; time used = 0.1859571933746338s
epoch 60: {'train_loss': '1.05295'}; time used = 0.19005703926086426s
epoch 65: {'train_loss': '1.03936'}; time used = 0.2682535648345947s
epoch 70: {'train_loss': '1.02761'}; time used = 0.19612979888916016s
epoch 75: {'train_loss': '1.01965'}; time used = 0.2039942741394043s
epoch 80: {'train_loss': '1.01226'}; time used = 0.2057795524597168s
epoch 85: {'train_loss': '1.00754'}; time used = 0.20853686332702637s
epoch 90: {'train_loss': '1.00075'}; time used = 0.2037191390991211s
epoch 95: {'train_loss': '0.99489'}; time used = 0.2043442726135254s
epoch 100: {'train_loss': '0.99045'}; time used = 0.19073796272277832s
epoch 105: {'train_loss': '0.98628'}; time used = 0.20892024040222168s
epoch 110: {'train_loss': '0.98178'}; time used = 0.2216947078704834s
epoch 115: {'train_loss': '0.97989'}; time used = 0.20500922203063965s
epoch 120: {'train_loss': '0.97635'}; time used = 0.242509126663208s
epoch 125: {'train_loss': '0.97159'}; time used = 0.2062385082244873s
epoch 130: {'train_loss': '0.96938'}; time used = 0.2049248218536377s
epoch 135: {'train_loss': '0.96775'}; time used = 0.21834754943847656s
epoch 140: {'train_loss': '0.96462'}; time used = 0.19891595840454102s
epoch 145: {'train_loss': '0.96278'}; time used = 0.19902825355529785s
epoch 150: {'train_loss': '0.96005'}; time used = 0.19221186637878418s
epoch 155: {'train_loss': '0.95882'}; time used = 0.34710216522216797s
epoch 160: {'train_loss': '0.95473'}; time used = 0.41941165924072266s
epoch 165: {'train_loss': '0.95428'}; time used = 0.18728327751159668s
epoch 170: {'train_loss': '0.95256'}; time used = 0.5010037422180176s
epoch 175: {'train_loss': '0.94973'}; time used = 0.19328737258911133s
epoch 180: {'train_loss': '0.94869'}; time used = 0.18912744522094727s
epoch 185: {'train_loss': '0.94490'}; time used = 0.2312159538269043s
epoch 190: {'train_loss': '0.94383'}; time used = 0.21036481857299805s
epoch 195: {'train_loss': '0.94143'}; time used = 0.18877911567687988s
epoch 200: {'train_loss': '0.93836'}; time used = 0.18793606758117676s
epoch 205: {'train_loss': '0.93882'}; time used = 0.21130013465881348s
epoch 210: {'train_loss': '0.93794'}; time used = 0.20151233673095703s
epoch 215: {'train_loss': '0.93603'}; time used = 0.198272705078125s
epoch 220: {'train_loss': '0.93265'}; time used = 0.1981956958770752s
epoch 225: {'train_loss': '0.93108'}; time used = 0.20213532447814941s
epoch 230: {'train_loss': '0.93103'}; time used = 0.20002341270446777s
epoch 235: {'train_loss': '0.93046'}; time used = 0.20059728622436523s
epoch 240: {'train_loss': '0.92830'}; time used = 0.1996455192565918s
epoch 245: {'train_loss': '0.92750'}; time used = 0.19873309135437012s
epoch 250: {'train_loss': '0.92474'}; time used = 0.2198317050933838s
epoch 255: {'train_loss': '0.92613'}; time used = 0.1933274269104004s
epoch 260: {'train_loss': '0.92340'}; time used = 0.22814702987670898s
epoch 265: {'train_loss': '0.92369'}; time used = 0.22690773010253906s
epoch 270: {'train_loss': '0.92168'}; time used = 0.18852782249450684s
epoch 275: {'train_loss': '0.91927'}; time used = 0.2881019115447998s
epoch 280: {'train_loss': '0.92007'}; time used = 0.3883795738220215s
epoch 285: {'train_loss': '0.91979'}; time used = 0.19278335571289062s
epoch 290: {'train_loss': '0.91757'}; time used = 0.4103701114654541s
epoch 295: {'train_loss': '0.91631'}; time used = 0.28701186180114746s
epoch 300: {'train_loss': '0.91638'}; time used = 0.25020527839660645s
epoch 305: {'train_loss': '0.91345'}; time used = 0.345672607421875s
epoch 310: {'train_loss': '0.91236'}; time used = 0.22452449798583984s
epoch 315: {'train_loss': '0.91240'}; time used = 0.17997479438781738s
epoch 320: {'train_loss': '0.91210'}; time used = 0.17802071571350098s
epoch 325: {'train_loss': '0.91242'}; time used = 0.1889500617980957s
epoch 330: {'train_loss': '0.90898'}; time used = 0.1965794563293457s
epoch 335: {'train_loss': '0.90836'}; time used = 0.31003546714782715s
epoch 340: {'train_loss': '0.90839'}; time used = 0.19893932342529297s
epoch 345: {'train_loss': '0.90859'}; time used = 0.20023632049560547s
epoch 350: {'train_loss': '0.90541'}; time used = 0.20025968551635742s
epoch 355: {'train_loss': '0.90766'}; time used = 0.20386791229248047s
epoch 360: {'train_loss': '0.90536'}; time used = 0.20431995391845703s
epoch 365: {'train_loss': '0.90562'}; time used = 0.20264554023742676s
epoch 370: {'train_loss': '0.90296'}; time used = 0.20068669319152832s
epoch 375: {'train_loss': '0.90253'}; time used = 0.19933199882507324s
epoch 380: {'train_loss': '0.90261'}; time used = 0.20390605926513672s
epoch 385: {'train_loss': '0.90161'}; time used = 0.2150261402130127s
epoch 390: {'train_loss': '0.90173'}; time used = 0.21799182891845703s
epoch 395: {'train_loss': '0.90079'}; time used = 0.24563121795654297s
epoch 400: {'train_loss': '0.90083'}; time used = 0.20455694198608398s
epoch 405: {'train_loss': '0.89957'}; time used = 0.18722963333129883s
epoch 410: {'train_loss': '0.89883'}; time used = 0.2974691390991211s
epoch 415: {'train_loss': '0.89860'}; time used = 0.4565291404724121s
epoch 420: {'train_loss': '0.89672'}; time used = 0.18738174438476562s
epoch 425: {'train_loss': '0.89650'}; time used = 0.5207071304321289s
epoch 430: {'train_loss': '0.89494'}; time used = 0.20555901527404785s
epoch 435: {'train_loss': '0.89590'}; time used = 0.1876988410949707s
epoch 440: {'train_loss': '0.89473'}; time used = 0.18784475326538086s
epoch 445: {'train_loss': '0.89379'}; time used = 0.186659574508667s
epoch 450: {'train_loss': '0.89393'}; time used = 0.1881270408630371s
epoch 455: {'train_loss': '0.89304'}; time used = 0.19196867942810059s
epoch 460: {'train_loss': '0.89232'}; time used = 0.19344687461853027s
epoch 465: {'train_loss': '0.89106'}; time used = 0.198317289352417s
epoch 470: {'train_loss': '0.89108'}; time used = 0.22856664657592773s
epoch 475: {'train_loss': '0.89032'}; time used = 0.19580674171447754s
epoch 480: {'train_loss': '0.88958'}; time used = 0.18797802925109863s
epoch 485: {'train_loss': '0.88890'}; time used = 0.1882321834564209s
epoch 490: {'train_loss': '0.88878'}; time used = 0.22265267372131348s

epoch 495: {'train_loss': '0.89012'}; time used = 0.2001199722290039s
epoch 500: {'train_loss': '0.88743'}; time used = 0.19859766960144043s
Finished training. Time used = 28.540982007980347.
Training classifier using 20.00% nodes...
{'micro': 0.8576771903131736, 'macro': 0.855024415168975, 'samples': 0.8576771903131736, 'weighted': 0.8575832075928604}
  0%|          | 0/39434 [00:00<?, ?it/s] 43%|████▎     | 16964/39434 [00:00<00:00, 169631.67it/s] 81%|████████▏ | 32075/39434 [00:00<00:00, 163610.69it/s]100%|██████████| 39434/39434 [00:00<00:00, 143206.73it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 196.00 MiB (GPU 0; 10.76 GiB total capacity; 894.36 MiB already allocated; 64.44 MiB free; 902.00 MiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7f89feca21e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7f89feef864b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7f89feef9464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7f89feef9aa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7f879ccb990e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7f879b0f3949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7f879b10d777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7f87d5ea9c7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7f87d5ea9f97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7f87d5fb4a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7f87d5c444f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7f87d5c46166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7f87d5c4665d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7f87d5c4680a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7f87d5983eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7f879b0e2b40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7f87d5816530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f87d5ffe81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7f87d5f4f82b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0x2f16968 (0x7f87d7cd6968 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: <unknown function> + 0xa56530 (0x7f87d5816530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f87d5ffe81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: at::Tensor::mul(at::Tensor const&) const + 0x4b (0x7f87d60e4d6b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: torch::autograd::generated::MulBackward0::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x235 (0x7f87d7aedda5 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x3375bb7 (0x7f87d8135bb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7f87d8131400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7f87d8131fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7f87d812a119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7f89c387f4ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #29: <unknown function> + 0xbd6df (0x7f89ff9ff6df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #30: <unknown function> + 0x76db (0x7f8a03a5a6db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #31: clone + 0x3f (0x7f8a03d9371f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1599128246307373 seconds.
Run epoch 1
Epoch 1 ends in 0.245955228805542 seconds.
39434 sentences created
mode 1: time used = 0.45942020416259766
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 38%|███▊      | 14927/39434 [00:00<00:00, 149203.62it/s] 72%|███████▏  | 28574/39434 [00:00<00:00, 145140.42it/s]100%|██████████| 39434/39434 [00:00<00:00, 131965.20it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 10.76 GiB total capacity; 38.86 MiB already allocated; 18.44 MiB free; 40.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.430757999420166 seconds.
Run epoch 1
Epoch 1 ends in 0.33536219596862793 seconds.
39434 sentences created
mode 1: time used = 0.3798675537109375
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s]  9%|▊         | 3390/39434 [00:00<00:01, 33438.59it/s] 16%|█▌        | 6225/39434 [00:00<00:01, 31729.49it/s] 28%|██▊       | 10909/39434 [00:00<00:00, 35128.78it/s] 44%|████▍     | 17505/39434 [00:00<00:00, 40560.24it/s] 55%|█████▌    | 21809/39434 [00:00<00:00, 41272.91it/s] 73%|███████▎  | 28638/39434 [00:00<00:00, 46830.63it/s] 94%|█████████▍| 37262/39434 [00:00<00:00, 54269.62it/s]100%|██████████| 39434/39434 [00:00<00:00, 52652.18it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 196.00 MiB (GPU 0; 10.76 GiB total capacity; 934.48 MiB already allocated; 142.44 MiB free; 942.00 MiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7f1b31f481e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7f1b3219e64b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7f1b3219f464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7f1b3219faa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7f18f149290e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7f18ef8cc949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7f18ef8e6777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7f1b3349ac7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7f1b3349af97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7f1b335a5a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7f1b332354f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7f1b33237166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7f1b3323765d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7f1b3323780a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7f1b32f74eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7f18ef8bbb40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7f1b32e07530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f1b335ef81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7f1b3354082b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0x2f16968 (0x7f1b352c7968 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: <unknown function> + 0xa56530 (0x7f1b32e07530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f1b335ef81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: at::Tensor::mul(at::Tensor const&) const + 0x4b (0x7f1b336d5d6b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: torch::autograd::generated::MulBackward0::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x235 (0x7f1b350deda5 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x3375bb7 (0x7f1b35726bb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7f1b35722400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7f1b35722fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7f1b3571b119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7f1b42ebb4ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #29: <unknown function> + 0xbd6df (0x7f1b440176df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #30: <unknown function> + 0x76db (0x7f1b480726db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #31: clone + 0x3f (0x7f1b483ab71f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4056267738342285 seconds.
Run epoch 1
Epoch 1 ends in 0.5107336044311523 seconds.
39434 sentences created
mode 1: time used = 0.8568353652954102
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 28.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 8.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 17%|█▋        | 6802/39434 [00:00<00:00, 68017.47it/s] 49%|████▉     | 19373/39434 [00:00<00:00, 78877.14it/s] 90%|█████████ | 35658/39434 [00:00<00:00, 93311.79it/s]100%|██████████| 39434/39434 [00:00<00:00, 121561.25it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 1.61 GiB already allocated; 168.44 MiB free; 1.63 GiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7fe769f681e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7fe76a1be64b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7fe76a1bf464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7fe76a1bfaa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7fe507f7f90e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7fe5063b9949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7fe5063d3777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7fe54116fc7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7fe54116ff97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7fe54127aa1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7fe540f0a4f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7fe540f0c166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7fe540f0c65d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7fe540f0c80a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7fe540c49eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7fe5063a8b40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7fe540adc530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fe5412c481c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7fe54121582b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0x2f16968 (0x7fe542f9c968 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: <unknown function> + 0xa56530 (0x7fe540adc530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fe5412c481c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: at::Tensor::mul(at::Tensor const&) const + 0x4b (0x7fe5413aad6b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: torch::autograd::generated::MulBackward0::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x235 (0x7fe542db3da5 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x3375bb7 (0x7fe5433fbbb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7fe5433f7400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7fe5433f7fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7fe5433f0119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7fe6383284ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #29: <unknown function> + 0xbd6df (0x7fe76acc56df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #30: <unknown function> + 0x76db (0x7fe76ed206db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #31: clone + 0x3f (0x7fe76f05971f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2214066982269287 seconds.
Run epoch 1
Epoch 1 ends in 0.29766845703125 seconds.
39434 sentences created
mode 1: time used = 0.3810393810272217
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 20%|██        | 8078/39434 [00:00<00:00, 80773.72it/s] 41%|████      | 16247/39434 [00:00<00:00, 81044.39it/s] 62%|██████▏   | 24281/39434 [00:00<00:00, 80829.59it/s] 81%|████████▏ | 32134/39434 [00:00<00:00, 80124.96it/s]100%|██████████| 39434/39434 [00:00<00:00, 80247.06it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 84, in forward
    hx = self.full_embeddings[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 147.74 MiB already allocated; 90.44 MiB free; 158.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.32347774505615234 seconds.
Run epoch 1
Epoch 1 ends in 0.4070322513580322 seconds.
39434 sentences created
mode 1: time used = 0.6213953495025635
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 12%|█▏        | 4879/39434 [00:00<00:00, 48605.56it/s] 30%|███       | 11863/39434 [00:00<00:00, 53482.73it/s] 41%|████      | 16225/39434 [00:00<00:00, 48855.15it/s] 51%|█████     | 20172/39434 [00:00<00:00, 45601.74it/s] 66%|██████▌   | 25982/39434 [00:00<00:00, 48746.39it/s] 78%|███████▊  | 30726/39434 [00:00<00:00, 47826.57it/s] 89%|████████▉ | 35264/39434 [00:00<00:00, 47064.80it/s]100%|██████████| 39434/39434 [00:00<00:00, 49926.63it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 47, in forward
    loss = self.estimator(self.decoder(hx, hpos), self.decoder(hx, hneg))
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_decoder.py", line 25, in forward
    score = torch.sum((x * y), dim=-1)
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 1.29 GiB already allocated; 219.44 MiB free; 1.30 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3106720447540283 seconds.
Run epoch 1
Epoch 1 ends in 0.4444119930267334 seconds.
39434 sentences created
mode 1: time used = 0.9042673110961914
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 47%|████▋     | 18636/39434 [00:00<00:00, 186353.07it/s] 89%|████████▉ | 35129/39434 [00:00<00:00, 179361.53it/s]100%|██████████| 39434/39434 [00:00<00:00, 174771.16it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 55, in _forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 43, in embed
    return self.features[x]
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 49.99 MiB already allocated; 33.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14591503143310547 seconds.
Run epoch 1
Epoch 1 ends in 0.2222123146057129 seconds.
39434 sentences created
mode 1: time used = 0.278409481048584
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19690/39434 [00:00<00:00, 196897.37it/s] 96%|█████████▌| 37805/39434 [00:00<00:00, 191891.45it/s]100%|██████████| 39434/39434 [00:00<00:00, 189007.06it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 72, in forward
    hx = self.full_embeddings[x]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 578.61 MiB already allocated; 187.44 MiB free; 590.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1328141689300537 seconds.
Run epoch 1
Epoch 1 ends in 0.20678949356079102 seconds.
39434 sentences created
mode 1: time used = 0.2598686218261719
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8743/39434 [00:00<00:00, 87415.29it/s] 36%|███▌      | 14160/39434 [00:00<00:00, 73820.95it/s] 79%|███████▉  | 31110/39434 [00:00<00:00, 88870.15it/s]100%|██████████| 39434/39434 [00:00<00:00, 113544.78it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 72, in forward
    hx = self.full_embeddings[x]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 578.61 MiB already allocated; 344.44 MiB free; 590.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14859867095947266 seconds.
Run epoch 1
Epoch 1 ends in 0.21158885955810547 seconds.
39434 sentences created
mode 1: time used = 0.39777636528015137
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8530/39434 [00:00<00:00, 85299.27it/s] 43%|████▎     | 16879/39434 [00:00<00:00, 84586.94it/s] 58%|█████▊    | 22935/39434 [00:00<00:00, 75588.01it/s] 71%|███████   | 27928/39434 [00:00<00:00, 65491.23it/s] 92%|█████████▏| 36279/39434 [00:00<00:00, 70023.87it/s]100%|██████████| 39434/39434 [00:00<00:00, 73065.48it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  [Previous line repeated 1 more time]
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 9.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.29355716705322266 seconds.
Run epoch 1
Epoch 1 ends in 0.3783841133117676 seconds.
39434 sentences created
mode 1: time used = 0.6930108070373535
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 15%|█▍        | 5761/39434 [00:00<00:00, 57609.37it/s] 36%|███▋      | 14360/39434 [00:00<00:00, 62876.93it/s] 46%|████▌     | 17968/39434 [00:00<00:00, 48571.53it/s] 61%|██████▏   | 24182/39434 [00:00<00:00, 51975.18it/s] 74%|███████▍  | 29334/39434 [00:00<00:00, 51837.02it/s] 89%|████████▉ | 35040/39434 [00:00<00:00, 53274.57it/s]100%|██████████| 39434/39434 [00:00<00:00, 55541.96it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 10.76 GiB total capacity; 39.73 MiB already allocated; 15.44 MiB free; 40.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.23418974876403809 seconds.
Run epoch 1
Epoch 1 ends in 0.6284842491149902 seconds.
39434 sentences created
mode 1: time used = 0.8609325885772705
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 18%|█▊        | 7259/39434 [00:00<00:00, 72582.63it/s] 41%|████▏     | 16320/39434 [00:00<00:00, 77189.01it/s] 62%|██████▏   | 24321/39434 [00:00<00:00, 78012.26it/s] 85%|████████▌ | 33706/39434 [00:00<00:00, 82171.73it/s]100%|██████████| 39434/39434 [00:00<00:00, 83496.82it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 72, in forward
    hx = self.full_embeddings[x]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 618.86 MiB already allocated; 354.44 MiB free; 630.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.469890832901001 seconds.
Run epoch 1
Epoch 1 ends in 0.5312075614929199 seconds.
39434 sentences created
mode 1: time used = 0.5975615978240967
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 44%|████▍     | 17476/39434 [00:00<00:00, 174753.50it/s] 88%|████████▊ | 34673/39434 [00:00<00:00, 173907.32it/s]100%|██████████| 39434/39434 [00:00<00:00, 173686.32it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 84, in forward
    hx = self.full_embeddings[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 228.24 MiB already allocated; 338.44 MiB free; 238.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.16150951385498047 seconds.
Run epoch 1
Epoch 1 ends in 0.21267271041870117 seconds.
39434 sentences created
mode 1: time used = 0.2767620086669922
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 46%|████▌     | 18135/39434 [00:00<00:00, 181349.31it/s] 88%|████████▊ | 34864/39434 [00:00<00:00, 176889.14it/s]100%|██████████| 39434/39434 [00:00<00:00, 174687.73it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  [Previous line repeated 1 more time]
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 9.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.15139174461364746 seconds.
Run epoch 1
Epoch 1 ends in 0.2241039276123047 seconds.
39434 sentences created
mode 1: time used = 0.2783679962158203
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 14%|█▍        | 5538/39434 [00:00<00:00, 53301.03it/s] 36%|███▌      | 14247/39434 [00:00<00:00, 59649.13it/s] 50%|█████     | 19737/39434 [00:00<00:00, 58139.97it/s] 69%|██████▊   | 27017/39434 [00:00<00:00, 60801.01it/s] 84%|████████▍ | 33209/39434 [00:00<00:00, 61131.59it/s] 98%|█████████▊| 38537/39434 [00:00<00:00, 56241.58it/s]100%|██████████| 39434/39434 [00:00<00:00, 60237.45it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 84, in forward
    hx = self.full_embeddings[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.48 MiB already allocated; 156.44 MiB free; 138.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4498143196105957 seconds.
Run epoch 1
Epoch 1 ends in 0.49684786796569824 seconds.
39434 sentences created
mode 1: time used = 0.7725296020507812
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 14%|█▎        | 5374/39434 [00:00<00:00, 53739.54it/s] 35%|███▍      | 13634/39434 [00:00<00:00, 58782.01it/s] 44%|████▍     | 17381/39434 [00:00<00:00, 48652.35it/s] 64%|██████▎   | 25078/39434 [00:00<00:00, 54688.07it/s] 82%|████████▏ | 32201/39434 [00:00<00:00, 58205.25it/s] 95%|█████████▌| 37544/39434 [00:00<00:00, 54138.32it/s]100%|██████████| 39434/39434 [00:00<00:00, 54001.24it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  [Previous line repeated 1 more time]
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 9.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4599573612213135 seconds.
Run epoch 1
Epoch 1 ends in 0.3711686134338379 seconds.
39434 sentences created
mode 1: time used = 0.8353843688964844
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 23%|██▎       | 8972/39434 [00:00<00:00, 89717.30it/s] 45%|████▌     | 17877/39434 [00:00<00:00, 89514.74it/s] 68%|██████▊   | 26713/39434 [00:00<00:00, 89162.55it/s] 91%|█████████ | 35697/39434 [00:00<00:00, 89362.70it/s]100%|██████████| 39434/39434 [00:00<00:00, 89226.93it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  [Previous line repeated 1 more time]
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 9.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2842872142791748 seconds.
Run epoch 1
Epoch 1 ends in 0.35547423362731934 seconds.
39434 sentences created
mode 1: time used = 0.5520060062408447
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 24%|██▍       | 9618/39434 [00:00<00:00, 96172.98it/s] 47%|████▋     | 18471/39434 [00:00<00:00, 93741.85it/s] 65%|██████▌   | 25651/39434 [00:00<00:00, 85868.06it/s] 83%|████████▎ | 32547/39434 [00:00<00:00, 79982.21it/s]100%|██████████| 39434/39434 [00:00<00:00, 79431.75it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  [Previous line repeated 1 more time]
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 9.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3384208679199219 seconds.
Run epoch 1
Epoch 1 ends in 0.44657206535339355 seconds.
39434 sentences created
mode 1: time used = 0.6848773956298828
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 19%|█▉        | 7481/39434 [00:00<00:00, 74808.47it/s] 33%|███▎      | 13196/39434 [00:00<00:00, 68462.11it/s] 53%|█████▎    | 20986/39434 [00:00<00:00, 71042.10it/s] 74%|███████▍  | 29250/39434 [00:00<00:00, 74164.13it/s] 96%|█████████▌| 37860/39434 [00:00<00:00, 77380.27it/s]100%|██████████| 39434/39434 [00:00<00:00, 76027.49it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/linear.py", line 46, in forward
    pre_sup = torch.mm(x, self.weight)
RuntimeError: CUDA out of memory. Tried to allocate 40.00 MiB (GPU 0; 10.76 GiB total capacity; 244.01 MiB already allocated; 34.44 MiB free; 260.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3009061813354492 seconds.
Run epoch 1
Epoch 1 ends in 0.40371084213256836 seconds.
39434 sentences created
mode 1: time used = 0.6670598983764648
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 39%|███▉      | 15473/39434 [00:00<00:00, 154719.82it/s] 54%|█████▍    | 21254/39434 [00:00<00:00, 101880.79it/s] 70%|███████   | 27653/39434 [00:00<00:00, 86512.23it/s] 100%|██████████| 39434/39434 [00:00<00:00, 104094.46it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 84, in forward
    hx = self.full_embeddings[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 282.52 MiB already allocated; 182.44 MiB free; 300.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.143723726272583 seconds.
Run epoch 1
Epoch 1 ends in 0.21966981887817383 seconds.
39434 sentences created
mode 1: time used = 0.43134617805480957
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8720/39434 [00:00<00:00, 87199.04it/s] 42%|████▏     | 16653/39434 [00:00<00:00, 84677.88it/s] 59%|█████▊    | 23102/39434 [00:00<00:00, 77407.36it/s] 71%|███████   | 27985/39434 [00:00<00:00, 64506.75it/s] 92%|█████████▏| 36366/39434 [00:00<00:00, 69294.18it/s]100%|██████████| 39434/39434 [00:00<00:00, 72408.69it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/linear.py", line 52, in forward
    return self.act(output)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 1119, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 40.00 MiB (GPU 0; 10.76 GiB total capacity; 205.50 MiB already allocated; 42.44 MiB free; 220.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3830862045288086 seconds.
Run epoch 1
Epoch 1 ends in 0.49963808059692383 seconds.
39434 sentences created
mode 1: time used = 0.755561351776123
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19706/39434 [00:00<00:00, 197052.20it/s] 89%|████████▉ | 35138/39434 [00:00<00:00, 181936.92it/s]100%|██████████| 39434/39434 [00:00<00:00, 175646.27it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 84, in forward
    hx = self.full_embeddings[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 360.54 MiB already allocated; 772.44 MiB free; 382.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.29970860481262207 seconds.
Run epoch 1
Epoch 1 ends in 0.20751214027404785 seconds.
39434 sentences created
mode 1: time used = 0.28034162521362305
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 11%|█         | 4266/39434 [00:00<00:00, 39823.33it/s] 22%|██▏       | 8819/39434 [00:00<00:00, 40488.87it/s] 47%|████▋     | 18609/39434 [00:00<00:00, 49132.08it/s] 66%|██████▌   | 26048/39434 [00:00<00:00, 54633.99it/s] 88%|████████▊ | 34830/39434 [00:00<00:00, 61542.29it/s]100%|██████████| 39434/39434 [00:00<00:00, 63433.95it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/linear.py", line 52, in forward
    return self.act(output)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 1119, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 40.00 MiB (GPU 0; 10.76 GiB total capacity; 206.50 MiB already allocated; 40.44 MiB free; 222.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3325536251068115 seconds.
Run epoch 1
Epoch 1 ends in 1.116926670074463 seconds.
39434 sentences created
mode 1: time used = 0.7253210544586182
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 19%|█▉        | 7626/39434 [00:00<00:00, 76254.98it/s] 43%|████▎     | 16924/39434 [00:00<00:00, 79104.37it/s] 60%|██████    | 23684/39434 [00:00<00:00, 75259.99it/s] 86%|████████▌ | 33838/39434 [00:00<00:00, 81594.73it/s]100%|██████████| 39434/39434 [00:00<00:00, 84390.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7408/552076 [00:00<00:07, 74073.54it/s]  3%|▎         | 14805/552076 [00:00<00:07, 73007.72it/s]  3%|▎         | 18849/552076 [00:00<00:09, 58637.47it/s]  4%|▍         | 24578/552076 [00:00<00:09, 57235.71it/s]  6%|▌         | 30560/552076 [00:00<00:08, 57986.54it/s]  7%|▋         | 35990/552076 [00:00<00:09, 56750.15it/s]  7%|▋         | 40961/552076 [00:00<00:09, 52431.78it/s]  8%|▊         | 45777/552076 [00:00<00:10, 49262.79it/s]  9%|▉         | 51677/552076 [00:00<00:09, 50720.02it/s] 10%|█         | 57391/552076 [00:01<00:09, 51915.77it/s] 11%|█▏        | 63417/552076 [00:01<00:09, 54164.92it/s] 13%|█▎        | 69604/552076 [00:01<00:08, 55065.36it/s] 14%|█▎        | 75629/552076 [00:01<00:08, 55990.70it/s] 15%|█▍        | 81354/552076 [00:01<00:08, 56280.38it/s] 16%|█▌        | 87037/552076 [00:01<00:08, 56181.51it/s] 17%|█▋        | 92873/552076 [00:01<00:08, 56682.73it/s] 18%|█▊        | 98536/552076 [00:01<00:08, 56221.43it/s] 19%|█▉        | 104156/552076 [00:01<00:08, 53897.92it/s] 20%|█▉        | 109565/552076 [00:02<00:09, 45314.49it/s] 21%|██        | 114342/552076 [00:02<00:10, 43091.74it/s] 22%|██▏       | 118846/552076 [00:02<00:10, 41072.63it/s] 22%|██▏       | 123110/552076 [00:02<00:10, 39330.97it/s] 23%|██▎       | 127169/552076 [00:02<00:11, 36456.29it/s] 24%|██▍       | 131728/552076 [00:02<00:10, 38786.95it/s] 25%|██▍       | 135739/552076 [00:02<00:11, 37101.65it/s] 25%|██▌       | 139557/552076 [00:02<00:12, 34266.31it/s] 26%|██▌       | 143102/552076 [00:03<00:12, 33137.25it/s] 27%|██▋       | 147072/552076 [00:03<00:11, 34866.00it/s] 27%|██▋       | 150824/552076 [00:03<00:11, 35621.59it/s] 28%|██▊       | 154452/552076 [00:03<00:12, 33113.10it/s] 29%|██▊       | 158335/552076 [00:03<00:11, 34642.75it/s] 29%|██▉       | 162049/552076 [00:03<00:11, 35355.61it/s] 30%|███       | 166448/552076 [00:03<00:10, 37277.85it/s] 31%|███       | 171832/552076 [00:03<00:09, 40236.43it/s] 32%|███▏      | 177175/552076 [00:03<00:08, 42785.48it/s] 33%|███▎      | 183147/552076 [00:03<00:07, 46762.92it/s] 34%|███▍      | 188683/552076 [00:04<00:07, 48959.23it/s] 35%|███▌      | 193744/552076 [00:04<00:10, 35169.34it/s] 37%|███▋      | 201558/552076 [00:04<00:08, 42117.64it/s] 38%|███▊      | 207497/552076 [00:04<00:07, 46142.63it/s] 39%|███▊      | 213436/552076 [00:04<00:06, 49451.22it/s] 40%|███▉      | 219484/552076 [00:04<00:06, 52312.64it/s] 41%|████      | 225226/552076 [00:04<00:06, 52326.72it/s] 42%|████▏     | 231206/552076 [00:04<00:05, 54363.85it/s] 43%|████▎     | 237378/552076 [00:05<00:05, 54422.41it/s] 44%|████▍     | 243010/552076 [00:05<00:05, 52239.29it/s] 45%|████▍     | 248386/552076 [00:05<00:06, 50275.05it/s] 47%|████▋     | 260374/552076 [00:05<00:04, 60879.19it/s] 48%|████▊     | 267575/552076 [00:05<00:04, 62388.76it/s] 50%|████▉     | 274603/552076 [00:05<00:04, 62809.50it/s] 51%|█████     | 281437/552076 [00:05<00:04, 61321.74it/s] 52%|█████▏    | 287964/552076 [00:05<00:04, 60062.70it/s] 53%|█████▎    | 294253/552076 [00:05<00:04, 60591.83it/s] 54%|█████▍    | 300511/552076 [00:06<00:04, 52282.94it/s] 55%|█████▌    | 306080/552076 [00:06<00:05, 45433.43it/s] 56%|█████▋    | 311022/552076 [00:06<00:05, 44876.32it/s] 57%|█████▋    | 315791/552076 [00:06<00:05, 43595.73it/s] 58%|█████▊    | 320355/552076 [00:06<00:05, 42755.16it/s] 59%|█████▉    | 324778/552076 [00:06<00:05, 42781.47it/s] 60%|█████▉    | 329159/552076 [00:06<00:05, 42271.31it/s] 60%|██████    | 333729/552076 [00:06<00:05, 43243.88it/s] 61%|██████    | 338111/552076 [00:06<00:05, 42360.07it/s] 62%|██████▏   | 342391/552076 [00:07<00:04, 42211.99it/s] 63%|██████▎   | 346643/552076 [00:07<00:05, 37891.63it/s] 64%|██████▎   | 350652/552076 [00:07<00:05, 38370.94it/s] 64%|██████▍   | 354985/552076 [00:07<00:04, 39734.57it/s] 65%|██████▌   | 359478/552076 [00:07<00:04, 40147.37it/s] 66%|██████▌   | 363741/552076 [00:07<00:04, 40723.49it/s] 67%|██████▋   | 368068/552076 [00:07<00:04, 41454.54it/s] 67%|██████▋   | 372532/552076 [00:07<00:04, 42361.12it/s] 68%|██████▊   | 376793/552076 [00:07<00:04, 39567.92it/s] 69%|██████▉   | 380804/552076 [00:08<00:05, 32525.02it/s] 71%|███████   | 391874/552076 [00:08<00:03, 41267.51it/s] 72%|███████▏  | 397643/552076 [00:08<00:03, 45113.14it/s] 73%|███████▎  | 403411/552076 [00:08<00:03, 41994.04it/s] 74%|███████▍  | 408534/552076 [00:08<00:03, 41560.04it/s] 75%|███████▍  | 413337/552076 [00:08<00:03, 40174.68it/s] 76%|███████▌  | 417818/552076 [00:08<00:03, 41138.44it/s] 77%|███████▋  | 423260/552076 [00:08<00:02, 43658.50it/s] 78%|███████▊  | 428853/552076 [00:09<00:02, 46734.00it/s] 79%|███████▊  | 434623/552076 [00:09<00:02, 49559.60it/s] 80%|███████▉  | 440169/552076 [00:09<00:02, 51167.31it/s] 81%|████████  | 445979/552076 [00:09<00:01, 53066.72it/s] 82%|████████▏ | 451560/552076 [00:09<00:01, 53731.61it/s] 83%|████████▎ | 457347/552076 [00:09<00:01, 54908.55it/s] 84%|████████▍ | 462930/552076 [00:09<00:01, 54294.33it/s] 85%|████████▍ | 468682/552076 [00:09<00:01, 54690.19it/s] 86%|████████▌ | 474457/552076 [00:09<00:01, 55573.06it/s] 87%|████████▋ | 480440/552076 [00:09<00:01, 56785.09it/s] 88%|████████▊ | 486147/552076 [00:10<00:01, 40013.07it/s] 89%|████████▉ | 491339/552076 [00:10<00:01, 42898.26it/s] 90%|█████████ | 497249/552076 [00:10<00:01, 46741.84it/s] 91%|█████████ | 502719/552076 [00:10<00:01, 48874.66it/s] 92%|█████████▏| 508352/552076 [00:10<00:00, 50608.73it/s] 93%|█████████▎| 514187/552076 [00:10<00:00, 52705.28it/s] 94%|█████████▍| 519979/552076 [00:10<00:00, 54167.73it/s] 95%|█████████▌| 525555/552076 [00:10<00:00, 54354.78it/s] 96%|█████████▌| 531195/552076 [00:11<00:00, 54952.15it/s] 97%|█████████▋| 536770/552076 [00:11<00:00, 54335.59it/s] 98%|█████████▊| 542644/552076 [00:11<00:00, 55584.55it/s] 99%|█████████▉| 548250/552076 [00:11<00:00, 54268.28it/s]100%|██████████| 552076/552076 [00:11<00:00, 48380.46it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 72, in forward
    hx = self.full_embeddings[x]
RuntimeError: CUDA out of memory. Tried to allocate 98.00 MiB (GPU 0; 10.76 GiB total capacity; 189.93 MiB already allocated; 66.44 MiB free; 196.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.37263965606689453 seconds.
Run epoch 1
Epoch 1 ends in 0.4079911708831787 seconds.
39434 sentences created
mode 1: time used = 0.5677444934844971
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 20%|██        | 7912/39434 [00:00<00:00, 79113.29it/s] 43%|████▎     | 16836/39434 [00:00<00:00, 81899.13it/s] 65%|██████▌   | 25704/39434 [00:00<00:00, 83819.82it/s] 88%|████████▊ | 34731/39434 [00:00<00:00, 85655.17it/s]100%|██████████| 39434/39434 [00:00<00:00, 87636.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10967/552076 [00:00<00:04, 109665.66it/s]  4%|▍         | 21686/552076 [00:00<00:04, 108908.22it/s]  6%|▌         | 33651/552076 [00:00<00:04, 111921.39it/s]  8%|▊         | 45795/552076 [00:00<00:04, 114615.16it/s] 10%|█         | 57776/552076 [00:00<00:04, 116124.59it/s] 13%|█▎        | 70103/552076 [00:00<00:04, 118176.49it/s] 15%|█▍        | 82138/552076 [00:00<00:03, 118819.62it/s] 17%|█▋        | 93137/552076 [00:00<00:04, 104834.48it/s] 19%|█▊        | 103304/552076 [00:00<00:05, 89567.20it/s] 20%|██        | 112427/552076 [00:01<00:05, 84248.74it/s] 23%|██▎       | 124539/552076 [00:01<00:04, 92715.72it/s] 25%|██▍       | 135968/552076 [00:01<00:04, 98281.28it/s] 27%|██▋       | 147626/552076 [00:01<00:03, 103137.04it/s] 29%|██▊       | 158256/552076 [00:01<00:04, 89963.42it/s]  30%|███       | 167776/552076 [00:01<00:04, 88615.90it/s] 33%|███▎      | 179755/552076 [00:01<00:03, 96118.39it/s] 35%|███▍      | 191540/552076 [00:01<00:03, 101746.13it/s] 37%|███▋      | 203666/552076 [00:01<00:03, 106906.13it/s] 39%|███▉      | 216008/552076 [00:02<00:03, 111375.03it/s] 41%|████▏     | 228185/552076 [00:02<00:02, 114300.46it/s] 44%|████▎     | 240322/552076 [00:02<00:02, 116332.71it/s] 46%|████▌     | 252719/552076 [00:02<00:02, 118522.53it/s] 48%|████▊     | 264898/552076 [00:02<00:02, 119482.82it/s] 50%|█████     | 276937/552076 [00:02<00:02, 118444.35it/s] 52%|█████▏    | 288847/552076 [00:02<00:02, 118183.42it/s] 54%|█████▍    | 300712/552076 [00:02<00:02, 115466.94it/s] 57%|█████▋    | 312305/552076 [00:02<00:02, 114970.47it/s] 59%|█████▉    | 324567/552076 [00:02<00:01, 117162.03it/s] 61%|██████    | 336530/552076 [00:03<00:01, 117890.20it/s] 63%|██████▎   | 348344/552076 [00:03<00:01, 104592.62it/s] 65%|██████▌   | 359563/552076 [00:03<00:01, 104722.64it/s] 67%|██████▋   | 370242/552076 [00:03<00:01, 97028.65it/s]  69%|██████▉   | 382331/552076 [00:03<00:01, 102248.05it/s] 71%|███████   | 392811/552076 [00:03<00:01, 84951.74it/s]  73%|███████▎  | 401974/552076 [00:03<00:02, 74678.02it/s] 75%|███████▌  | 414114/552076 [00:04<00:01, 84424.34it/s] 77%|███████▋  | 426277/552076 [00:04<00:01, 92953.92it/s] 79%|███████▉  | 436475/552076 [00:04<00:01, 94455.89it/s] 81%|████████  | 446558/552076 [00:04<00:01, 84609.53it/s] 83%|████████▎ | 458785/552076 [00:04<00:01, 93221.99it/s] 85%|████████▌ | 471068/552076 [00:04<00:00, 100488.53it/s] 87%|████████▋ | 481780/552076 [00:04<00:00, 90551.21it/s]  89%|████████▉ | 491485/552076 [00:04<00:00, 87862.95it/s] 91%|█████████ | 503573/552076 [00:04<00:00, 95704.41it/s] 93%|█████████▎| 514673/552076 [00:05<00:00, 99829.80it/s] 95%|█████████▌| 525078/552076 [00:05<00:00, 87007.64it/s] 97%|█████████▋| 537306/552076 [00:05<00:00, 95249.88it/s]100%|█████████▉| 549532/552076 [00:05<00:00, 102009.31it/s]100%|██████████| 552076/552076 [00:05<00:00, 102382.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9366/552076 [00:00<00:05, 93652.94it/s]  4%|▎         | 19548/552076 [00:00<00:05, 95961.67it/s]  6%|▌         | 31473/552076 [00:00<00:05, 101932.94it/s]  7%|▋         | 38566/552076 [00:00<00:05, 89726.58it/s]   8%|▊         | 45635/552076 [00:00<00:06, 75631.45it/s] 10%|█         | 57700/552076 [00:00<00:05, 85163.92it/s] 13%|█▎        | 69701/552076 [00:00<00:05, 93289.95it/s] 15%|█▍        | 81775/552076 [00:00<00:04, 100117.26it/s] 17%|█▋        | 93786/552076 [00:00<00:04, 105378.00it/s] 19%|█▉        | 105796/552076 [00:01<00:04, 106449.67it/s] 21%|██        | 116579/552076 [00:01<00:04, 104563.56it/s] 23%|██▎       | 127586/552076 [00:01<00:03, 106155.55it/s] 25%|██▌       | 139680/552076 [00:01<00:03, 110195.34it/s] 28%|██▊       | 151905/552076 [00:01<00:03, 113554.24it/s] 30%|██▉       | 164199/552076 [00:01<00:03, 116213.64it/s] 32%|███▏      | 176445/552076 [00:01<00:03, 118018.90it/s] 34%|███▍      | 188685/552076 [00:01<00:03, 119297.48it/s] 36%|███▋      | 200922/552076 [00:01<00:02, 120202.19it/s] 39%|███▊      | 212977/552076 [00:01<00:02, 119025.39it/s] 41%|████      | 224968/552076 [00:02<00:02, 119288.50it/s] 44%|████▍     | 241805/552076 [00:02<00:02, 130719.10it/s] 48%|████▊     | 263008/552076 [00:02<00:01, 147712.00it/s] 52%|█████▏    | 284930/552076 [00:02<00:01, 163733.45it/s] 55%|█████▌    | 306219/552076 [00:02<00:01, 175919.29it/s] 59%|█████▉    | 325535/552076 [00:02<00:01, 180758.90it/s] 63%|██████▎   | 348912/552076 [00:02<00:01, 193951.84it/s] 67%|██████▋   | 369149/552076 [00:02<00:01, 174910.62it/s] 71%|███████   | 391203/552076 [00:02<00:00, 186484.73it/s] 75%|███████▍  | 413595/552076 [00:02<00:00, 196328.73it/s] 79%|███████▊  | 433977/552076 [00:03<00:00, 197347.73it/s] 83%|████████▎ | 456161/552076 [00:03<00:00, 204106.81it/s] 86%|████████▋ | 476999/552076 [00:03<00:00, 180457.78it/s] 90%|█████████ | 498560/552076 [00:03<00:00, 189737.48it/s] 94%|█████████▍| 518341/552076 [00:03<00:00, 192087.92it/s] 98%|█████████▊| 541420/552076 [00:03<00:00, 202261.70it/s]100%|██████████| 552076/552076 [00:03<00:00, 149743.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20088/552076 [00:00<00:02, 200875.40it/s]  7%|▋         | 37419/552076 [00:00<00:02, 191726.45it/s] 10%|▉         | 55140/552076 [00:00<00:02, 187124.74it/s] 13%|█▎        | 72839/552076 [00:00<00:02, 183963.19it/s] 16%|█▋        | 90945/552076 [00:00<00:02, 183082.42it/s] 20%|█▉        | 108486/552076 [00:00<00:02, 180710.79it/s] 24%|██▍       | 131125/552076 [00:00<00:02, 192353.31it/s] 28%|██▊       | 153630/552076 [00:00<00:01, 201118.43it/s] 31%|███▏      | 172854/552076 [00:00<00:02, 189016.02it/s] 35%|███▍      | 191283/552076 [00:01<00:01, 180431.95it/s] 39%|███▉      | 213934/552076 [00:01<00:01, 192158.46it/s] 43%|████▎     | 237397/552076 [00:01<00:01, 203192.41it/s] 47%|████▋     | 260146/552076 [00:01<00:01, 209916.64it/s] 51%|█████     | 281525/552076 [00:01<00:01, 211062.55it/s] 55%|█████▌    | 304343/552076 [00:01<00:01, 215921.39it/s] 59%|█████▉    | 327343/552076 [00:01<00:01, 219959.47it/s] 64%|██████▎   | 351064/552076 [00:01<00:00, 224862.78it/s] 68%|██████▊   | 373651/552076 [00:01<00:00, 223375.13it/s] 72%|███████▏  | 396598/552076 [00:01<00:00, 225167.96it/s] 76%|███████▌  | 420118/552076 [00:02<00:00, 228085.35it/s] 80%|████████  | 443434/552076 [00:02<00:00, 229581.88it/s] 84%|████████▍ | 466428/552076 [00:02<00:00, 227924.82it/s] 89%|████████▊ | 489716/552076 [00:02<00:00, 229387.21it/s] 93%|█████████▎| 513170/552076 [00:02<00:00, 230907.39it/s] 97%|█████████▋| 536473/552076 [00:02<00:00, 231539.35it/s]100%|██████████| 552076/552076 [00:02<00:00, 212017.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20030/552076 [00:00<00:02, 200294.46it/s]  6%|▌         | 32203/552076 [00:00<00:03, 167799.67it/s]  8%|▊         | 44340/552076 [00:00<00:03, 150524.23it/s] 10%|█         | 56485/552076 [00:00<00:03, 140435.06it/s] 12%|█▏        | 68605/552076 [00:00<00:03, 134051.49it/s] 15%|█▍        | 80787/552076 [00:00<00:03, 130131.62it/s] 17%|█▋        | 92956/552076 [00:00<00:03, 127478.22it/s] 19%|█▉        | 104391/552076 [00:00<00:03, 115769.85it/s] 21%|██        | 116244/552076 [00:00<00:03, 116582.86it/s] 23%|██▎       | 127406/552076 [00:01<00:04, 90619.61it/s]  25%|██▍       | 137008/552076 [00:01<00:04, 87071.49it/s] 26%|██▋       | 146123/552076 [00:01<00:05, 75537.98it/s] 28%|██▊       | 154235/552076 [00:01<00:05, 74284.40it/s] 30%|███       | 165791/552076 [00:01<00:04, 83198.18it/s] 32%|███▏      | 174734/552076 [00:01<00:04, 82237.49it/s] 33%|███▎      | 184024/552076 [00:01<00:04, 85169.77it/s] 35%|███▌      | 193713/552076 [00:01<00:04, 88375.95it/s] 38%|███▊      | 209346/552076 [00:02<00:03, 101628.31it/s] 40%|████      | 221666/552076 [00:02<00:03, 107261.21it/s] 42%|████▏     | 233963/552076 [00:02<00:02, 111535.53it/s] 44%|████▍     | 245660/552076 [00:02<00:02, 105617.71it/s] 46%|████▋     | 256667/552076 [00:02<00:03, 93494.50it/s]  49%|████▊     | 268632/552076 [00:02<00:02, 100055.68it/s] 51%|█████     | 280834/552076 [00:02<00:02, 105766.14it/s] 53%|█████▎    | 291936/552076 [00:02<00:02, 107287.81it/s] 55%|█████▌    | 305531/552076 [00:02<00:02, 114530.03it/s] 57%|█████▋    | 317347/552076 [00:02<00:02, 113975.88it/s] 60%|█████▉    | 328999/552076 [00:03<00:02, 98523.14it/s]  62%|██████▏   | 340918/552076 [00:03<00:02, 103928.81it/s] 64%|██████▍   | 352611/552076 [00:03<00:01, 107514.51it/s] 66%|██████▌   | 364510/552076 [00:03<00:01, 110716.75it/s] 68%|██████▊   | 376258/552076 [00:03<00:01, 112661.01it/s] 70%|███████   | 387724/552076 [00:03<00:01, 103594.12it/s] 72%|███████▏  | 399647/552076 [00:03<00:01, 107836.12it/s] 74%|███████▍  | 410674/552076 [00:03<00:01, 80498.55it/s]  76%|███████▌  | 419910/552076 [00:04<00:01, 75862.44it/s] 78%|███████▊  | 428382/552076 [00:04<00:01, 67197.77it/s] 79%|███████▉  | 435904/552076 [00:04<00:01, 66975.45it/s] 80%|████████  | 443164/552076 [00:04<00:01, 66316.44it/s] 82%|████████▏ | 450191/552076 [00:04<00:01, 56073.24it/s] 83%|████████▎ | 456346/552076 [00:04<00:01, 49482.95it/s] 84%|████████▍ | 462970/552076 [00:04<00:01, 53546.63it/s] 85%|████████▍ | 468789/552076 [00:05<00:01, 54344.70it/s] 86%|████████▌ | 474552/552076 [00:05<00:01, 54919.04it/s] 87%|████████▋ | 481256/552076 [00:05<00:01, 58067.51it/s] 88%|████████▊ | 487919/552076 [00:05<00:01, 60395.07it/s] 90%|████████▉ | 494601/552076 [00:05<00:00, 62187.74it/s] 91%|█████████ | 501263/552076 [00:05<00:00, 63452.65it/s] 92%|█████████▏| 507971/552076 [00:05<00:00, 64497.45it/s] 93%|█████████▎| 514495/552076 [00:05<00:00, 54290.50it/s] 94%|█████████▍| 521437/552076 [00:05<00:00, 58087.65it/s] 96%|█████████▌| 528835/552076 [00:06<00:00, 62088.41it/s] 97%|█████████▋| 535333/552076 [00:06<00:00, 61956.65it/s] 98%|█████████▊| 541731/552076 [00:06<00:00, 60556.16it/s] 99%|█████████▉| 548951/552076 [00:06<00:00, 63633.29it/s]100%|██████████| 552076/552076 [00:06<00:00, 86517.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 6912/552076 [00:00<00:07, 69118.91it/s]  3%|▎         | 15005/552076 [00:00<00:07, 72174.75it/s]  4%|▍         | 21080/552076 [00:00<00:07, 68318.43it/s]  5%|▍         | 27167/552076 [00:00<00:08, 65451.82it/s]  7%|▋         | 37461/552076 [00:00<00:07, 73478.43it/s]  9%|▉         | 49401/552076 [00:00<00:06, 83062.11it/s] 11%|█         | 59867/552076 [00:00<00:05, 83746.87it/s] 12%|█▏        | 68150/552076 [00:00<00:06, 69933.89it/s] 14%|█▍        | 78108/552076 [00:00<00:06, 76792.17it/s] 16%|█▋        | 89830/552076 [00:01<00:05, 85653.54it/s] 18%|█▊        | 99418/552076 [00:01<00:05, 87395.82it/s] 20%|██        | 110719/552076 [00:01<00:04, 93770.81it/s] 22%|██▏       | 122594/552076 [00:01<00:04, 100086.12it/s] 24%|██▍       | 134732/552076 [00:01<00:03, 105645.92it/s] 26%|██▋       | 145680/552076 [00:01<00:04, 83719.44it/s]  28%|██▊       | 155491/552076 [00:01<00:04, 87571.01it/s] 30%|██▉       | 165492/552076 [00:01<00:04, 90963.23it/s] 32%|███▏      | 177293/552076 [00:01<00:03, 97679.00it/s] 34%|███▍      | 188453/552076 [00:02<00:03, 101475.23it/s] 36%|███▌      | 199005/552076 [00:02<00:03, 96203.39it/s]  38%|███▊      | 210946/552076 [00:02<00:03, 102158.21it/s] 40%|████      | 222693/552076 [00:02<00:03, 106314.08it/s] 42%|████▏     | 233605/552076 [00:02<00:03, 98049.08it/s]  44%|████▍     | 245059/552076 [00:02<00:02, 102473.50it/s] 46%|████▋     | 256277/552076 [00:02<00:02, 105202.29it/s] 48%|████▊     | 267011/552076 [00:02<00:02, 95366.13it/s]  51%|█████     | 279176/552076 [00:02<00:02, 101974.92it/s] 53%|█████▎    | 291299/552076 [00:03<00:02, 107076.28it/s] 55%|█████▍    | 303579/552076 [00:03<00:02, 111351.65it/s] 57%|█████▋    | 315848/552076 [00:03<00:02, 114525.95it/s] 59%|█████▉    | 328052/552076 [00:03<00:01, 116679.38it/s] 62%|██████▏   | 340256/552076 [00:03<00:01, 118236.26it/s] 64%|██████▍   | 352486/552076 [00:03<00:01, 119426.52it/s] 66%|██████▌   | 364775/552076 [00:03<00:01, 120444.17it/s] 68%|██████▊   | 377022/552076 [00:03<00:01, 121042.57it/s] 71%|███████   | 389352/552076 [00:03<00:01, 121708.87it/s] 73%|███████▎  | 401554/552076 [00:03<00:01, 121262.52it/s] 75%|███████▍  | 413703/552076 [00:04<00:01, 113484.37it/s] 77%|███████▋  | 425272/552076 [00:04<00:01, 114134.87it/s] 79%|███████▉  | 437107/552076 [00:04<00:00, 115366.45it/s] 81%|████████▏ | 449082/552076 [00:04<00:00, 116647.23it/s] 84%|████████▎ | 461289/552076 [00:04<00:00, 118220.20it/s] 86%|████████▌ | 473149/552076 [00:04<00:00, 115342.29it/s] 88%|████████▊ | 485265/552076 [00:04<00:00, 117025.77it/s] 90%|█████████ | 497144/552076 [00:04<00:00, 117548.05it/s] 92%|█████████▏| 508924/552076 [00:04<00:00, 116251.48it/s] 94%|█████████▍| 520570/552076 [00:05<00:00, 102789.02it/s] 96%|█████████▌| 531150/552076 [00:05<00:00, 89569.24it/s]  98%|█████████▊| 540623/552076 [00:05<00:00, 77001.85it/s]100%|█████████▉| 551836/552076 [00:05<00:00, 84988.80it/s]100%|██████████| 552076/552076 [00:05<00:00, 100710.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9611/552076 [00:00<00:05, 96105.51it/s]  4%|▎         | 20475/552076 [00:00<00:05, 99549.66it/s]  6%|▌         | 31410/552076 [00:00<00:05, 102298.33it/s]  8%|▊         | 42406/552076 [00:00<00:04, 104481.65it/s] 10%|█         | 56024/552076 [00:00<00:04, 112323.74it/s] 12%|█▏        | 65836/552076 [00:00<00:05, 96023.63it/s]  14%|█▎        | 74857/552076 [00:00<00:05, 93986.38it/s] 15%|█▌        | 83858/552076 [00:00<00:05, 82734.40it/s] 18%|█▊        | 96646/552076 [00:00<00:04, 92534.32it/s] 19%|█▉        | 107387/552076 [00:01<00:04, 96545.28it/s] 22%|██▏       | 119612/552076 [00:01<00:04, 103043.19it/s] 24%|██▍       | 131794/552076 [00:01<00:03, 108037.65it/s] 26%|██▌       | 142987/552076 [00:01<00:03, 105797.74it/s] 28%|██▊       | 153781/552076 [00:01<00:04, 81869.62it/s]  30%|██▉       | 162945/552076 [00:01<00:05, 77792.87it/s] 31%|███       | 171451/552076 [00:01<00:05, 71073.03it/s] 32%|███▏      | 179241/552076 [00:01<00:05, 72758.53it/s] 34%|███▍      | 187100/552076 [00:02<00:04, 74414.20it/s] 36%|███▌      | 199179/552076 [00:02<00:04, 84100.16it/s] 38%|███▊      | 208236/552076 [00:02<00:04, 81079.15it/s] 39%|███▉      | 216821/552076 [00:02<00:04, 77707.01it/s] 41%|████      | 224955/552076 [00:02<00:04, 74201.33it/s] 42%|████▏     | 232663/552076 [00:02<00:04, 70165.19it/s] 43%|████▎     | 239927/552076 [00:02<00:04, 66935.77it/s] 45%|████▍     | 246825/552076 [00:02<00:04, 67498.17it/s] 47%|████▋     | 258854/552076 [00:02<00:03, 77732.09it/s] 49%|████▉     | 271032/552076 [00:03<00:03, 87193.13it/s] 51%|█████▏    | 283339/552076 [00:03<00:02, 95549.30it/s] 53%|█████▎    | 293722/552076 [00:03<00:03, 84442.72it/s] 55%|█████▌    | 305760/552076 [00:03<00:02, 92748.87it/s] 58%|█████▊    | 317965/552076 [00:03<00:02, 99946.12it/s] 60%|█████▉    | 330504/552076 [00:03<00:02, 106424.66it/s] 62%|██████▏   | 342880/552076 [00:03<00:01, 111090.93it/s] 64%|██████▍   | 354904/552076 [00:03<00:01, 113684.69it/s] 67%|██████▋   | 367302/552076 [00:03<00:01, 116586.92it/s] 69%|██████▉   | 379695/552076 [00:04<00:01, 118695.72it/s] 71%|███████   | 391764/552076 [00:04<00:01, 118111.76it/s] 73%|███████▎  | 403937/552076 [00:04<00:01, 119172.73it/s] 75%|███████▌  | 416231/552076 [00:04<00:01, 120275.70it/s] 78%|███████▊  | 428369/552076 [00:04<00:01, 120601.91it/s] 80%|███████▉  | 440622/552076 [00:04<00:00, 121171.91it/s] 82%|████████▏ | 452893/552076 [00:04<00:00, 121627.24it/s] 84%|████████▍ | 465089/552076 [00:04<00:00, 121724.65it/s] 86%|████████▋ | 477428/552076 [00:04<00:00, 122217.99it/s] 89%|████████▊ | 489663/552076 [00:04<00:00, 119641.85it/s] 91%|█████████ | 501781/552076 [00:05<00:00, 120097.60it/s] 93%|█████████▎| 514069/552076 [00:05<00:00, 120918.44it/s] 95%|█████████▌| 526213/552076 [00:05<00:00, 121073.09it/s] 98%|█████████▊| 538462/552076 [00:05<00:00, 121493.79it/s]100%|█████████▉| 550718/552076 [00:05<00:00, 121811.22it/s]100%|██████████| 552076/552076 [00:05<00:00, 101269.66it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7800/552076 [00:00<00:07, 75286.27it/s]  3%|▎         | 19123/552076 [00:00<00:06, 83699.12it/s]  5%|▌         | 29843/552076 [00:00<00:05, 89590.36it/s]  8%|▊         | 41932/552076 [00:00<00:05, 97134.38it/s] 10%|▉         | 53872/552076 [00:00<00:04, 102888.46it/s] 12%|█▏        | 65752/552076 [00:00<00:04, 107193.53it/s] 14%|█▎        | 75899/552076 [00:00<00:04, 102780.09it/s] 16%|█▌        | 86145/552076 [00:00<00:04, 102682.63it/s] 17%|█▋        | 96160/552076 [00:00<00:04, 94914.66it/s]  19%|█▉        | 106234/552076 [00:01<00:04, 96588.38it/s] 22%|██▏       | 119011/552076 [00:01<00:04, 104217.64it/s] 24%|██▍       | 131123/552076 [00:01<00:03, 108770.70it/s] 26%|██▌       | 142760/552076 [00:01<00:03, 110944.07it/s] 28%|██▊       | 154895/552076 [00:01<00:03, 113873.24it/s] 30%|███       | 167149/552076 [00:01<00:03, 116341.07it/s] 32%|███▏      | 179345/552076 [00:01<00:03, 117971.58it/s] 35%|███▍      | 191208/552076 [00:01<00:03, 117552.78it/s] 37%|███▋      | 203236/552076 [00:01<00:02, 118356.41it/s] 39%|███▉      | 215564/552076 [00:01<00:02, 119789.48it/s] 41%|████▏     | 228675/552076 [00:02<00:02, 122971.89it/s] 44%|████▎     | 241084/552076 [00:02<00:02, 123303.48it/s] 46%|████▌     | 253443/552076 [00:02<00:02, 122953.41it/s] 48%|████▊     | 266267/552076 [00:02<00:02, 124490.92it/s] 50%|█████     | 278735/552076 [00:02<00:02, 94363.55it/s]  53%|█████▎    | 290211/552076 [00:02<00:02, 99677.81it/s] 55%|█████▍    | 302067/552076 [00:02<00:02, 104678.69it/s] 57%|█████▋    | 314332/552076 [00:02<00:02, 109491.07it/s] 59%|█████▉    | 326751/552076 [00:02<00:01, 113519.76it/s] 61%|██████▏   | 339004/552076 [00:03<00:01, 116078.46it/s] 64%|██████▎   | 351273/552076 [00:03<00:01, 117984.69it/s] 66%|██████▌   | 363544/552076 [00:03<00:01, 119361.58it/s] 68%|██████▊   | 375635/552076 [00:03<00:01, 119034.25it/s] 70%|███████   | 387673/552076 [00:03<00:01, 119431.53it/s] 72%|███████▏  | 399733/552076 [00:03<00:01, 119777.93it/s] 75%|███████▍  | 411765/552076 [00:03<00:01, 94337.57it/s]  77%|███████▋  | 424003/552076 [00:03<00:01, 101301.14it/s] 79%|███████▉  | 435605/552076 [00:03<00:01, 105307.33it/s] 81%|████████  | 447841/552076 [00:04<00:00, 109900.40it/s] 83%|████████▎ | 459998/552076 [00:04<00:00, 113159.03it/s] 86%|████████▌ | 472150/552076 [00:04<00:00, 115543.37it/s] 88%|████████▊ | 484069/552076 [00:04<00:00, 116613.50it/s] 90%|████████▉ | 496285/552076 [00:04<00:00, 118223.62it/s] 92%|█████████▏| 508621/552076 [00:04<00:00, 119716.01it/s] 94%|█████████▍| 520689/552076 [00:04<00:00, 97578.29it/s]  96%|█████████▋| 532629/552076 [00:04<00:00, 103238.41it/s] 99%|█████████▊| 544634/552076 [00:04<00:00, 107764.87it/s]100%|██████████| 552076/552076 [00:04<00:00, 110904.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11439/552076 [00:00<00:04, 114388.75it/s]  4%|▍         | 20864/552076 [00:00<00:05, 105164.64it/s]  6%|▌         | 31512/552076 [00:00<00:04, 105554.13it/s]  7%|▋         | 39762/552076 [00:00<00:05, 97387.37it/s]   9%|▉         | 51628/552076 [00:00<00:04, 102922.04it/s] 12%|█▏        | 63498/552076 [00:00<00:04, 107195.77it/s] 14%|█▎        | 75148/552076 [00:00<00:04, 109826.08it/s] 16%|█▌        | 87127/552076 [00:00<00:04, 112634.74it/s] 18%|█▊        | 99131/552076 [00:00<00:03, 114758.06it/s] 20%|██        | 111527/552076 [00:01<00:03, 117371.32it/s] 22%|██▏       | 123326/552076 [00:01<00:03, 117553.51it/s] 25%|██▍       | 135527/552076 [00:01<00:03, 118854.44it/s] 27%|██▋       | 147299/552076 [00:01<00:03, 118490.44it/s] 29%|██▉       | 159527/552076 [00:01<00:03, 119601.52it/s] 31%|███       | 171564/552076 [00:01<00:03, 119830.39it/s] 33%|███▎      | 183901/552076 [00:01<00:03, 120868.59it/s] 35%|███▌      | 195965/552076 [00:01<00:03, 118642.09it/s] 38%|███▊      | 207822/552076 [00:01<00:02, 116077.92it/s] 40%|███▉      | 219437/552076 [00:01<00:02, 115577.99it/s] 42%|████▏     | 234036/552076 [00:02<00:02, 123280.59it/s] 45%|████▍     | 246510/552076 [00:02<00:02, 108435.37it/s] 47%|████▋     | 258797/552076 [00:02<00:02, 112395.93it/s] 49%|████▉     | 270373/552076 [00:02<00:02, 100641.06it/s] 51%|█████     | 280904/552076 [00:02<00:02, 98780.96it/s]  53%|█████▎    | 292085/552076 [00:02<00:02, 102359.05it/s] 55%|█████▍    | 302656/552076 [00:02<00:02, 103340.61it/s] 57%|█████▋    | 313180/552076 [00:02<00:02, 92654.69it/s]  58%|█████▊    | 322786/552076 [00:02<00:02, 91718.99it/s] 60%|██████    | 332199/552076 [00:03<00:02, 77132.79it/s] 62%|██████▏   | 340476/552076 [00:03<00:03, 68100.18it/s] 63%|██████▎   | 347874/552076 [00:03<00:03, 62780.71it/s] 64%|██████▍   | 354646/552076 [00:03<00:03, 56697.21it/s] 65%|██████▌   | 360774/552076 [00:03<00:03, 52479.04it/s] 66%|██████▋   | 366405/552076 [00:03<00:03, 52539.83it/s] 67%|██████▋   | 371927/552076 [00:03<00:03, 48462.93it/s] 68%|██████▊   | 377024/552076 [00:04<00:03, 48478.40it/s] 69%|██████▉   | 382047/552076 [00:04<00:04, 34703.63it/s] 70%|██████▉   | 386190/552076 [00:04<00:05, 29987.57it/s] 71%|███████▏  | 394456/552076 [00:04<00:04, 37074.64it/s] 72%|███████▏  | 399444/552076 [00:04<00:04, 37803.94it/s] 73%|███████▎  | 404312/552076 [00:04<00:03, 39593.27it/s] 74%|███████▍  | 410078/552076 [00:04<00:03, 43700.72it/s] 75%|███████▌  | 415036/552076 [00:05<00:03, 42340.82it/s] 76%|███████▌  | 419849/552076 [00:05<00:03, 43455.14it/s] 77%|███████▋  | 424497/552076 [00:05<00:02, 42886.68it/s] 78%|███████▊  | 428999/552076 [00:05<00:03, 36071.55it/s] 79%|███████▊  | 433702/552076 [00:05<00:03, 38782.44it/s] 79%|███████▉  | 437872/552076 [00:05<00:02, 39507.36it/s] 80%|████████  | 442459/552076 [00:05<00:02, 40352.47it/s] 81%|████████  | 446644/552076 [00:05<00:02, 40291.09it/s] 82%|████████▏ | 450778/552076 [00:05<00:02, 38754.95it/s] 82%|████████▏ | 454817/552076 [00:06<00:02, 38363.23it/s] 83%|████████▎ | 460950/552076 [00:06<00:02, 42614.64it/s] 85%|████████▍ | 466655/552076 [00:06<00:01, 46115.10it/s] 85%|████████▌ | 471484/552076 [00:06<00:02, 38286.95it/s] 86%|████████▌ | 475687/552076 [00:06<00:02, 34314.24it/s] 88%|████████▊ | 486223/552076 [00:06<00:01, 43015.83it/s] 89%|████████▉ | 492023/552076 [00:06<00:01, 46509.10it/s] 90%|█████████ | 497805/552076 [00:06<00:01, 43278.54it/s] 91%|█████████▏| 504091/552076 [00:07<00:01, 47739.72it/s] 92%|█████████▏| 509994/552076 [00:07<00:00, 50265.07it/s] 94%|█████████▎| 516299/552076 [00:07<00:00, 53520.07it/s] 95%|█████████▍| 522401/552076 [00:07<00:00, 54943.07it/s] 96%|█████████▌| 528212/552076 [00:07<00:00, 55610.67it/s] 97%|█████████▋| 533997/552076 [00:07<00:00, 55678.39it/s] 98%|█████████▊| 540231/552076 [00:07<00:00, 57521.58it/s] 99%|█████████▉| 546391/552076 [00:07<00:00, 58686.82it/s]100%|██████████| 552076/552076 [00:07<00:00, 70573.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4452/552076 [00:00<00:12, 43080.04it/s]  2%|▏         | 8510/552076 [00:00<00:12, 42297.59it/s]  3%|▎         | 13868/552076 [00:00<00:11, 45149.69it/s]  3%|▎         | 19049/552076 [00:00<00:11, 45016.25it/s]  4%|▍         | 24265/552076 [00:00<00:11, 46944.81it/s]  5%|▌         | 29525/552076 [00:00<00:10, 47617.37it/s]  6%|▋         | 34545/552076 [00:00<00:10, 48275.91it/s]  7%|▋         | 39056/552076 [00:00<00:10, 47099.35it/s]  8%|▊         | 44324/552076 [00:00<00:10, 47945.06it/s]  9%|▉         | 50018/552076 [00:01<00:09, 50329.13it/s] 10%|█         | 55222/552076 [00:01<00:09, 50233.90it/s] 11%|█         | 60193/552076 [00:01<00:10, 47377.88it/s] 12%|█▏        | 65885/552076 [00:01<00:09, 49885.13it/s] 13%|█▎        | 71008/552076 [00:01<00:09, 48696.73it/s] 14%|█▍        | 76277/552076 [00:01<00:09, 47713.84it/s] 15%|█▍        | 81357/552076 [00:01<00:09, 48598.54it/s] 16%|█▌        | 86239/552076 [00:01<00:09, 47921.14it/s] 17%|█▋        | 91644/552076 [00:01<00:09, 48339.58it/s] 17%|█▋        | 96491/552076 [00:02<00:09, 46234.60it/s] 18%|█▊        | 101143/552076 [00:02<00:10, 42558.60it/s] 19%|█▉        | 105989/552076 [00:02<00:10, 43909.61it/s] 20%|██        | 110445/552076 [00:02<00:10, 41282.68it/s] 21%|██        | 116252/552076 [00:02<00:10, 42217.60it/s] 22%|██▏       | 121129/552076 [00:02<00:09, 43989.96it/s] 23%|██▎       | 125589/552076 [00:02<00:12, 35053.35it/s] 23%|██▎       | 129425/552076 [00:02<00:12, 33981.70it/s] 24%|██▍       | 133352/552076 [00:03<00:11, 35411.42it/s] 25%|██▍       | 137674/552076 [00:03<00:11, 36719.23it/s] 26%|██▌       | 143776/552076 [00:03<00:09, 41700.98it/s] 27%|██▋       | 149086/552076 [00:03<00:09, 44279.89it/s] 28%|██▊       | 154107/552076 [00:03<00:08, 44958.95it/s] 29%|██▉       | 159859/552076 [00:03<00:08, 48109.96it/s] 31%|███▏      | 173725/552076 [00:03<00:06, 59831.53it/s] 34%|███▍      | 189071/552076 [00:03<00:04, 73236.00it/s] 37%|███▋      | 206925/552076 [00:03<00:03, 88980.26it/s] 41%|████      | 224967/552076 [00:03<00:03, 104935.03it/s] 44%|████▍     | 242456/552076 [00:04<00:02, 119243.26it/s] 47%|████▋     | 260348/552076 [00:04<00:02, 132501.26it/s] 50%|█████     | 278117/552076 [00:04<00:01, 143443.02it/s] 53%|█████▎    | 294594/552076 [00:04<00:01, 141497.17it/s] 56%|█████▌    | 310243/552076 [00:04<00:01, 134381.67it/s] 59%|█████▉    | 324805/552076 [00:04<00:01, 125897.90it/s] 61%|██████▏   | 338291/552076 [00:04<00:02, 105014.07it/s] 63%|██████▎   | 350003/552076 [00:04<00:02, 97806.57it/s]  65%|██████▌   | 361099/552076 [00:05<00:01, 101411.85it/s] 67%|██████▋   | 372258/552076 [00:05<00:01, 104263.42it/s] 70%|██████▉   | 384130/552076 [00:05<00:01, 108216.23it/s] 72%|███████▏  | 395745/552076 [00:05<00:01, 110479.98it/s] 74%|███████▎  | 407081/552076 [00:05<00:01, 110508.42it/s] 76%|███████▌  | 418333/552076 [00:05<00:01, 88696.14it/s]  78%|███████▊  | 430068/552076 [00:05<00:01, 95705.40it/s] 80%|███████▉  | 441606/552076 [00:05<00:01, 100864.16it/s] 82%|████████▏ | 453408/552076 [00:05<00:00, 105462.27it/s] 84%|████████▍ | 464997/552076 [00:06<00:00, 108387.03it/s] 86%|████████▋ | 477003/552076 [00:06<00:00, 111643.08it/s] 89%|████████▉ | 491222/552076 [00:06<00:00, 119333.13it/s] 93%|█████████▎| 511815/552076 [00:06<00:00, 136559.36it/s] 97%|█████████▋| 532880/552076 [00:06<00:00, 152667.83it/s]100%|█████████▉| 550943/552076 [00:06<00:00, 160101.31it/s]100%|██████████| 552076/552076 [00:06<00:00, 84695.43it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8217/552076 [00:00<00:06, 82163.81it/s]  4%|▍         | 22951/552076 [00:00<00:05, 94735.20it/s]  8%|▊         | 46111/552076 [00:00<00:04, 115149.46it/s] 12%|█▏        | 68641/552076 [00:00<00:03, 134940.34it/s] 15%|█▌        | 83275/552076 [00:00<00:03, 132017.09it/s] 19%|█▊        | 103072/552076 [00:00<00:03, 146676.37it/s] 23%|██▎       | 124393/552076 [00:00<00:02, 161823.62it/s] 26%|██▌       | 141813/552076 [00:00<00:02, 161988.16it/s] 29%|██▉       | 159996/552076 [00:00<00:02, 167468.47it/s] 32%|███▏      | 177397/552076 [00:01<00:02, 155363.83it/s] 35%|███▌      | 194263/552076 [00:01<00:02, 159125.88it/s] 39%|███▉      | 217184/552076 [00:01<00:01, 175195.49it/s] 44%|████▎     | 240242/552076 [00:01<00:01, 188791.21it/s] 48%|████▊     | 262605/552076 [00:01<00:01, 198041.36it/s] 51%|█████▏    | 283451/552076 [00:01<00:01, 201054.33it/s] 55%|█████▌    | 305864/552076 [00:01<00:01, 207460.48it/s] 60%|█████▉    | 329467/552076 [00:01<00:01, 215275.44it/s] 64%|██████▍   | 352986/552076 [00:01<00:00, 220884.15it/s] 68%|██████▊   | 376006/552076 [00:01<00:00, 223597.89it/s] 72%|███████▏  | 398580/552076 [00:02<00:00, 217407.51it/s] 76%|███████▋  | 422009/552076 [00:02<00:00, 222209.10it/s] 81%|████████  | 445326/552076 [00:02<00:00, 225385.34it/s] 85%|████████▍ | 468849/552076 [00:02<00:00, 228250.07it/s] 89%|████████▉ | 491768/552076 [00:02<00:00, 221830.34it/s] 93%|█████████▎| 515501/552076 [00:02<00:00, 226260.70it/s] 98%|█████████▊| 539340/552076 [00:02<00:00, 229766.52it/s]100%|██████████| 552076/552076 [00:02<00:00, 202269.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17274/552076 [00:00<00:03, 172733.99it/s]  6%|▋         | 34695/552076 [00:00<00:02, 173173.96it/s] 10%|█         | 56100/552076 [00:00<00:02, 183697.29it/s] 14%|█▍        | 78359/552076 [00:00<00:02, 193856.70it/s] 18%|█▊        | 99342/552076 [00:00<00:02, 198385.41it/s] 22%|██▏       | 121009/552076 [00:00<00:02, 203538.12it/s] 26%|██▌       | 142845/552076 [00:00<00:01, 207767.66it/s] 30%|███       | 166309/552076 [00:00<00:01, 215159.28it/s] 34%|███▍      | 187002/552076 [00:00<00:01, 212031.12it/s] 38%|███▊      | 207640/552076 [00:01<00:01, 207121.65it/s] 42%|████▏     | 230731/552076 [00:01<00:01, 213724.19it/s] 46%|████▌     | 253091/552076 [00:01<00:01, 216593.56it/s] 50%|████▉     | 276008/552076 [00:01<00:01, 220217.68it/s] 54%|█████▍    | 297950/552076 [00:01<00:01, 215493.22it/s] 58%|█████▊    | 321241/552076 [00:01<00:01, 220437.33it/s] 62%|██████▏   | 344420/552076 [00:01<00:00, 223723.30it/s] 67%|██████▋   | 367676/552076 [00:01<00:00, 226301.63it/s] 71%|███████   | 390846/552076 [00:01<00:00, 227891.72it/s] 75%|███████▍  | 413651/552076 [00:01<00:00, 220977.75it/s] 79%|███████▉  | 436931/552076 [00:02<00:00, 224396.15it/s] 83%|████████▎ | 460231/552076 [00:02<00:00, 226908.80it/s] 87%|████████▋ | 482966/552076 [00:02<00:00, 226178.01it/s] 92%|█████████▏| 505615/552076 [00:02<00:00, 217535.21it/s] 96%|█████████▌| 528775/552076 [00:02<00:00, 221569.28it/s]100%|█████████▉| 552053/552076 [00:02<00:00, 224815.49it/s]100%|██████████| 552076/552076 [00:02<00:00, 217488.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22969/552076 [00:00<00:02, 229686.39it/s]  8%|▊         | 46104/552076 [00:00<00:02, 230181.05it/s] 12%|█▏        | 68553/552076 [00:00<00:02, 228442.90it/s] 17%|█▋        | 91882/552076 [00:00<00:02, 229875.17it/s] 21%|██        | 115502/552076 [00:00<00:01, 231736.18it/s] 25%|██▌       | 139084/552076 [00:00<00:01, 232943.66it/s] 29%|██▉       | 161518/552076 [00:00<00:01, 230290.41it/s] 33%|███▎      | 182716/552076 [00:00<00:01, 224473.26it/s] 37%|███▋      | 206102/552076 [00:00<00:01, 227207.84it/s] 41%|████▏     | 227933/552076 [00:01<00:01, 220463.35it/s] 45%|████▌     | 249400/552076 [00:01<00:01, 210837.65it/s] 49%|████▉     | 271021/552076 [00:01<00:01, 212418.33it/s] 53%|█████▎    | 292044/552076 [00:01<00:01, 144432.36it/s] 56%|█████▌    | 309241/552076 [00:01<00:02, 105951.85it/s] 59%|█████▊    | 323239/552076 [00:01<00:02, 89523.86it/s]  61%|██████    | 335010/552076 [00:02<00:02, 77413.23it/s] 62%|██████▏   | 345015/552076 [00:02<00:03, 62672.86it/s] 64%|██████▍   | 353321/552076 [00:02<00:03, 53083.00it/s] 65%|██████▌   | 360309/552076 [00:02<00:03, 56572.46it/s] 67%|██████▋   | 367205/552076 [00:02<00:03, 59557.39it/s] 68%|██████▊   | 374070/552076 [00:02<00:02, 61873.13it/s] 69%|██████▉   | 380917/552076 [00:02<00:02, 63533.39it/s] 70%|███████   | 387743/552076 [00:03<00:02, 59205.87it/s] 71%|███████▏  | 394054/552076 [00:03<00:02, 59239.35it/s] 73%|███████▎  | 400767/552076 [00:03<00:02, 61404.55it/s] 74%|███████▍  | 407510/552076 [00:03<00:02, 63095.38it/s] 75%|███████▌  | 414280/552076 [00:03<00:02, 64406.84it/s] 76%|███████▌  | 420867/552076 [00:03<00:02, 64835.88it/s] 77%|███████▋  | 427435/552076 [00:03<00:01, 64234.54it/s] 79%|███████▊  | 433919/552076 [00:03<00:01, 62866.75it/s] 80%|███████▉  | 440636/552076 [00:03<00:01, 64097.84it/s] 81%|████████  | 447394/552076 [00:04<00:01, 65101.59it/s] 82%|████████▏ | 454128/552076 [00:04<00:01, 65755.10it/s] 83%|████████▎ | 460837/552076 [00:04<00:01, 66147.27it/s] 85%|████████▍ | 467469/552076 [00:04<00:01, 60506.35it/s] 86%|████████▌ | 474186/552076 [00:04<00:01, 62359.98it/s] 87%|████████▋ | 480952/552076 [00:04<00:01, 63859.08it/s] 88%|████████▊ | 487678/552076 [00:04<00:00, 64842.48it/s] 90%|████████▉ | 494454/552076 [00:04<00:00, 65689.71it/s] 91%|█████████ | 501216/552076 [00:04<00:00, 66254.91it/s] 92%|█████████▏| 508019/552076 [00:04<00:00, 66777.33it/s] 93%|█████████▎| 514787/552076 [00:05<00:00, 67045.32it/s] 94%|█████████▍| 521571/552076 [00:05<00:00, 67279.83it/s] 96%|█████████▌| 528368/552076 [00:05<00:00, 67484.56it/s] 97%|█████████▋| 535125/552076 [00:05<00:00, 62015.55it/s] 98%|█████████▊| 541419/552076 [00:05<00:00, 62006.01it/s] 99%|█████████▉| 547685/552076 [00:05<00:00, 55913.52it/s]100%|██████████| 552076/552076 [00:05<00:00, 96451.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5729/552076 [00:00<00:10, 53161.17it/s]  3%|▎         | 15710/552076 [00:00<00:08, 61830.47it/s]  5%|▍         | 26697/552076 [00:00<00:07, 71165.15it/s]  6%|▋         | 34825/552076 [00:00<00:06, 73924.31it/s]  8%|▊         | 42617/552076 [00:00<00:06, 75077.68it/s] 10%|▉         | 54606/552076 [00:00<00:05, 84559.00it/s] 12%|█▏        | 64501/552076 [00:00<00:05, 88416.23it/s] 13%|█▎        | 73451/552076 [00:00<00:05, 81380.96it/s] 15%|█▍        | 81776/552076 [00:00<00:06, 73008.63it/s] 16%|█▌        | 89370/552076 [00:01<00:06, 68962.33it/s] 17%|█▋        | 96518/552076 [00:01<00:06, 68845.55it/s] 19%|█▉        | 103632/552076 [00:01<00:06, 66532.58it/s] 20%|██        | 110426/552076 [00:01<00:06, 65212.77it/s] 22%|██▏       | 118923/552076 [00:01<00:06, 70102.72it/s] 24%|██▎       | 130633/552076 [00:01<00:05, 79697.14it/s] 26%|██▌       | 141201/552076 [00:01<00:04, 86042.20it/s] 28%|██▊       | 153303/552076 [00:01<00:04, 94210.55it/s] 30%|██▉       | 165540/552076 [00:01<00:03, 101195.69it/s] 32%|███▏      | 177653/552076 [00:02<00:03, 105558.54it/s] 34%|███▍      | 188662/552076 [00:02<00:03, 102803.24it/s] 36%|███▋      | 201031/552076 [00:02<00:03, 108288.35it/s] 39%|███▊      | 213671/552076 [00:02<00:02, 113151.61it/s] 41%|████      | 225261/552076 [00:02<00:03, 106863.50it/s] 43%|████▎     | 237987/552076 [00:02<00:02, 112259.54it/s] 45%|████▌     | 250739/552076 [00:02<00:02, 116437.56it/s] 48%|████▊     | 262603/552076 [00:02<00:02, 117073.00it/s] 50%|████▉     | 274465/552076 [00:02<00:02, 112108.80it/s] 52%|█████▏    | 285829/552076 [00:03<00:03, 80147.22it/s]  53%|█████▎    | 295228/552076 [00:03<00:03, 81098.95it/s] 55%|█████▌    | 304879/552076 [00:03<00:02, 85177.73it/s] 57%|█████▋    | 315950/552076 [00:03<00:02, 91507.51it/s] 59%|█████▉    | 327241/552076 [00:03<00:02, 97024.12it/s] 61%|██████▏   | 338731/552076 [00:03<00:02, 101771.71it/s] 63%|██████▎   | 350020/552076 [00:03<00:01, 104869.85it/s] 65%|██████▌   | 361251/552076 [00:03<00:01, 106993.77it/s] 68%|██████▊   | 372866/552076 [00:03<00:01, 109584.61it/s] 70%|██████▉   | 384378/552076 [00:04<00:01, 111186.93it/s] 72%|███████▏  | 395675/552076 [00:04<00:01, 111713.50it/s] 74%|███████▎  | 407013/552076 [00:04<00:01, 112208.15it/s] 76%|███████▌  | 418302/552076 [00:04<00:01, 102706.51it/s] 78%|███████▊  | 428777/552076 [00:04<00:01, 98269.16it/s]  79%|███████▉  | 438788/552076 [00:04<00:01, 93977.84it/s] 81%|████████  | 448354/552076 [00:04<00:01, 93968.60it/s] 83%|████████▎ | 458569/552076 [00:04<00:00, 96281.01it/s] 85%|████████▌ | 469659/552076 [00:04<00:00, 100244.34it/s] 87%|████████▋ | 480881/552076 [00:05<00:00, 103559.61it/s] 89%|████████▉ | 492120/552076 [00:05<00:00, 106059.25it/s] 91%|█████████ | 502814/552076 [00:05<00:00, 106109.49it/s] 93%|█████████▎| 513487/552076 [00:05<00:00, 102796.97it/s] 95%|█████████▌| 525641/552076 [00:05<00:00, 107781.97it/s] 97%|█████████▋| 537770/552076 [00:05<00:00, 111505.81it/s]100%|█████████▉| 549709/552076 [00:05<00:00, 113757.84it/s]100%|██████████| 552076/552076 [00:05<00:00, 97937.34it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10033/552076 [00:00<00:05, 100324.83it/s]  3%|▎         | 15999/552076 [00:00<00:06, 83002.39it/s]   5%|▍         | 27405/552076 [00:00<00:05, 90083.94it/s]  7%|▋         | 37285/552076 [00:00<00:05, 92530.81it/s]  8%|▊         | 45463/552076 [00:00<00:05, 87882.93it/s] 10%|▉         | 52883/552076 [00:00<00:06, 79703.51it/s] 12%|█▏        | 64819/552076 [00:00<00:05, 88526.30it/s] 14%|█▍        | 76809/552076 [00:00<00:04, 96066.16it/s] 16%|█▌        | 88556/552076 [00:00<00:04, 101620.62it/s] 18%|█▊        | 100726/552076 [00:01<00:04, 106912.25it/s] 20%|██        | 112748/552076 [00:01<00:03, 110583.54it/s] 23%|██▎       | 125074/552076 [00:01<00:03, 114103.03it/s] 25%|██▍       | 136949/552076 [00:01<00:03, 115457.71it/s] 27%|██▋       | 148581/552076 [00:01<00:04, 95922.86it/s]  29%|██▉       | 158787/552076 [00:01<00:04, 93690.09it/s] 31%|███       | 170043/552076 [00:01<00:03, 98650.85it/s] 33%|███▎      | 180287/552076 [00:01<00:03, 95146.25it/s] 35%|███▍      | 190994/552076 [00:01<00:03, 98434.78it/s] 37%|███▋      | 202214/552076 [00:02<00:03, 102195.78it/s] 39%|███▉      | 214139/552076 [00:02<00:03, 106774.60it/s] 41%|████      | 225010/552076 [00:02<00:03, 94666.75it/s]  43%|████▎     | 237039/552076 [00:02<00:03, 101128.82it/s] 45%|████▍     | 247547/552076 [00:02<00:03, 87463.51it/s]  47%|████▋     | 259611/552076 [00:02<00:03, 95326.50it/s] 49%|████▉     | 269775/552076 [00:02<00:02, 95700.61it/s] 51%|█████     | 279788/552076 [00:02<00:02, 91317.80it/s] 52%|█████▏    | 289272/552076 [00:02<00:03, 82266.15it/s] 54%|█████▍    | 300572/552076 [00:03<00:02, 89574.17it/s] 57%|█████▋    | 312341/552076 [00:03<00:02, 96487.54it/s] 58%|█████▊    | 322708/552076 [00:03<00:02, 97486.20it/s] 60%|██████    | 332802/552076 [00:03<00:02, 98464.03it/s] 62%|██████▏   | 344721/552076 [00:03<00:01, 103882.11it/s] 64%|██████▍   | 355360/552076 [00:03<00:01, 102161.61it/s] 66%|██████▋   | 366628/552076 [00:03<00:01, 105103.76it/s] 69%|██████▊   | 378497/552076 [00:03<00:01, 108838.89it/s] 71%|███████   | 390369/552076 [00:03<00:01, 111623.64it/s] 73%|███████▎  | 402271/552076 [00:04<00:01, 113742.28it/s] 75%|███████▌  | 414238/552076 [00:04<00:01, 115457.96it/s] 77%|███████▋  | 425853/552076 [00:04<00:01, 110756.01it/s] 79%|███████▉  | 437018/552076 [00:04<00:01, 108210.79it/s] 81%|████████  | 447915/552076 [00:04<00:01, 101114.86it/s] 83%|████████▎ | 458421/552076 [00:04<00:00, 102264.76it/s] 85%|████████▌ | 470457/552076 [00:04<00:00, 107094.05it/s] 87%|████████▋ | 482420/552076 [00:04<00:00, 110568.37it/s] 90%|████████▉ | 494337/552076 [00:04<00:00, 113014.32it/s] 92%|█████████▏| 505738/552076 [00:04<00:00, 108279.21it/s] 94%|█████████▍| 517699/552076 [00:05<00:00, 111445.36it/s] 96%|█████████▌| 528945/552076 [00:05<00:00, 108478.57it/s] 98%|█████████▊| 539882/552076 [00:05<00:00, 104855.76it/s]100%|█████████▉| 551881/552076 [00:05<00:00, 108978.30it/s]100%|██████████| 552076/552076 [00:05<00:00, 102388.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11125/552076 [00:00<00:04, 111247.72it/s]  4%|▍         | 23086/552076 [00:00<00:04, 113628.56it/s]  6%|▋         | 34923/552076 [00:00<00:04, 115010.26it/s]  9%|▊         | 46957/552076 [00:00<00:04, 116558.49it/s] 10%|█         | 57696/552076 [00:00<00:04, 113645.89it/s] 12%|█▏        | 67217/552076 [00:00<00:04, 106860.94it/s] 14%|█▍        | 79222/552076 [00:00<00:04, 110501.79it/s] 17%|█▋        | 91416/552076 [00:00<00:04, 113699.86it/s] 19%|█▊        | 103484/552076 [00:00<00:03, 115705.27it/s] 21%|██        | 115497/552076 [00:01<00:03, 116995.67it/s] 23%|██▎       | 127381/552076 [00:01<00:03, 117540.30it/s] 25%|██▌       | 139529/552076 [00:01<00:03, 118692.25it/s] 27%|██▋       | 151275/552076 [00:01<00:03, 117416.31it/s] 30%|██▉       | 162934/552076 [00:01<00:03, 111600.03it/s] 32%|███▏      | 174994/552076 [00:01<00:03, 114155.01it/s] 34%|███▍      | 187237/552076 [00:01<00:03, 116517.18it/s] 36%|███▌      | 198939/552076 [00:01<00:03, 116665.11it/s] 38%|███▊      | 211227/552076 [00:01<00:02, 118460.05it/s] 40%|████      | 223521/552076 [00:01<00:02, 119766.74it/s] 43%|████▎     | 235514/552076 [00:02<00:02, 118186.94it/s] 45%|████▍     | 247730/552076 [00:02<00:02, 119351.24it/s] 47%|████▋     | 260045/552076 [00:02<00:02, 120464.12it/s] 49%|████▉     | 272940/552076 [00:02<00:02, 122887.44it/s] 52%|█████▏    | 285250/552076 [00:02<00:02, 121230.05it/s] 54%|█████▍    | 297393/552076 [00:02<00:02, 118650.42it/s] 56%|█████▌    | 309628/552076 [00:02<00:02, 119736.12it/s] 58%|█████▊    | 321839/552076 [00:02<00:01, 120437.72it/s] 61%|██████    | 334090/552076 [00:02<00:01, 121050.67it/s] 63%|██████▎   | 346207/552076 [00:02<00:01, 118507.64it/s] 65%|██████▍   | 358522/552076 [00:03<00:01, 119860.87it/s] 67%|██████▋   | 370730/552076 [00:03<00:01, 120515.66it/s] 69%|██████▉   | 383081/552076 [00:03<00:01, 121396.42it/s] 72%|███████▏  | 395232/552076 [00:03<00:01, 121266.60it/s] 74%|███████▍  | 407583/552076 [00:03<00:01, 121928.72it/s] 76%|███████▌  | 419986/552076 [00:03<00:01, 122549.46it/s] 78%|███████▊  | 432246/552076 [00:03<00:00, 121878.61it/s] 81%|████████  | 444439/552076 [00:03<00:00, 116319.11it/s] 83%|████████▎ | 456128/552076 [00:03<00:01, 94659.12it/s]  85%|████████▍ | 468264/552076 [00:04<00:00, 101347.30it/s] 87%|████████▋ | 479964/552076 [00:04<00:00, 105583.15it/s] 89%|████████▉ | 492009/552076 [00:04<00:00, 109640.29it/s] 91%|█████████▏| 504729/552076 [00:04<00:00, 114375.12it/s] 94%|█████████▎| 517233/552076 [00:04<00:00, 117377.32it/s] 96%|█████████▌| 529318/552076 [00:04<00:00, 118396.44it/s] 98%|█████████▊| 541563/552076 [00:04<00:00, 119581.24it/s]100%|██████████| 552076/552076 [00:04<00:00, 114478.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11402/552076 [00:00<00:04, 114017.93it/s]  4%|▍         | 23145/552076 [00:00<00:04, 115019.37it/s]  6%|▋         | 34738/552076 [00:00<00:04, 115290.93it/s]  8%|▊         | 46901/552076 [00:00<00:04, 117120.34it/s] 11%|█         | 58535/552076 [00:00<00:04, 116846.22it/s] 12%|█▏        | 68310/552076 [00:00<00:05, 92943.79it/s]  15%|█▍        | 80089/552076 [00:00<00:04, 99221.17it/s] 17%|█▋        | 92119/552076 [00:00<00:04, 104725.02it/s] 19%|█▉        | 104266/552076 [00:00<00:04, 109240.91it/s] 21%|██        | 116370/552076 [00:01<00:03, 112530.43it/s] 23%|██▎       | 128623/552076 [00:01<00:03, 115354.35it/s] 26%|██▌       | 140805/552076 [00:01<00:03, 117219.64it/s] 28%|██▊       | 152549/552076 [00:01<00:04, 90964.16it/s]  30%|██▉       | 164627/552076 [00:01<00:03, 98238.09it/s] 32%|███▏      | 176831/552076 [00:01<00:03, 104343.06it/s] 34%|███▍      | 189155/552076 [00:01<00:03, 109373.23it/s] 36%|███▋      | 201320/552076 [00:01<00:03, 112787.46it/s] 39%|███▊      | 213388/552076 [00:01<00:02, 115042.89it/s] 41%|████      | 225597/552076 [00:02<00:02, 117067.56it/s] 43%|████▎     | 237914/552076 [00:02<00:02, 118831.25it/s] 45%|████▌     | 249953/552076 [00:02<00:02, 115662.08it/s] 47%|████▋     | 262090/552076 [00:02<00:02, 117315.77it/s] 50%|████▉     | 274083/552076 [00:02<00:02, 118085.78it/s] 52%|█████▏    | 285960/552076 [00:02<00:02, 117665.87it/s] 54%|█████▍    | 297775/552076 [00:02<00:02, 117711.32it/s] 56%|█████▌    | 309580/552076 [00:02<00:02, 115123.59it/s] 58%|█████▊    | 321519/552076 [00:02<00:01, 116369.48it/s] 60%|██████    | 333829/552076 [00:02<00:01, 118308.96it/s] 63%|██████▎   | 346652/552076 [00:03<00:01, 121119.30it/s] 65%|██████▌   | 360071/552076 [00:03<00:01, 124762.31it/s] 67%|██████▋   | 372600/552076 [00:03<00:01, 124033.97it/s] 70%|██████▉   | 385042/552076 [00:03<00:01, 123595.25it/s] 72%|███████▏  | 397429/552076 [00:03<00:01, 122696.29it/s] 74%|███████▍  | 409719/552076 [00:03<00:01, 120033.36it/s] 76%|███████▋  | 421964/552076 [00:03<00:01, 120745.84it/s] 79%|███████▊  | 434222/552076 [00:03<00:00, 121287.93it/s] 81%|████████  | 446399/552076 [00:03<00:00, 121429.24it/s] 83%|████████▎ | 458553/552076 [00:03<00:00, 121205.69it/s] 85%|████████▌ | 471319/552076 [00:04<00:00, 123071.50it/s] 88%|████████▊ | 483639/552076 [00:04<00:00, 122280.91it/s] 90%|████████▉ | 495879/552076 [00:04<00:00, 122314.11it/s] 92%|█████████▏| 508198/552076 [00:04<00:00, 122574.64it/s] 94%|█████████▍| 520490/552076 [00:04<00:00, 122676.33it/s] 97%|█████████▋| 532796/552076 [00:04<00:00, 122790.69it/s] 99%|█████████▊| 545167/552076 [00:04<00:00, 123064.90it/s]100%|██████████| 552076/552076 [00:04<00:00, 116309.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11472/552076 [00:00<00:04, 114718.74it/s]  4%|▍         | 21285/552076 [00:00<00:04, 109181.07it/s]  5%|▌         | 30160/552076 [00:00<00:05, 102125.85it/s]  8%|▊         | 42597/552076 [00:00<00:04, 107914.60it/s] 10%|▉         | 54783/552076 [00:00<00:04, 111749.66it/s] 12%|█▏        | 64777/552076 [00:00<00:04, 107920.85it/s] 14%|█▍        | 76468/552076 [00:00<00:04, 109265.42it/s] 16%|█▌        | 86553/552076 [00:00<00:04, 99034.56it/s]  17%|█▋        | 96051/552076 [00:00<00:04, 93914.30it/s] 19%|█▉        | 105214/552076 [00:01<00:07, 63071.04it/s] 20%|██        | 112699/552076 [00:01<00:06, 65759.10it/s] 23%|██▎       | 124755/552076 [00:01<00:05, 76141.12it/s] 25%|██▍       | 136920/552076 [00:01<00:04, 85765.86it/s] 27%|██▋       | 149160/552076 [00:01<00:04, 94225.97it/s] 29%|██▉       | 161329/552076 [00:01<00:03, 101067.22it/s] 31%|███▏      | 173842/552076 [00:01<00:03, 107253.67it/s] 34%|███▎      | 186212/552076 [00:01<00:03, 111708.54it/s] 36%|███▌      | 198082/552076 [00:02<00:03, 113717.90it/s] 38%|███▊      | 209865/552076 [00:02<00:03, 98995.94it/s]  40%|████      | 221561/552076 [00:02<00:03, 103775.08it/s] 42%|████▏     | 233196/552076 [00:02<00:02, 107250.21it/s] 44%|████▍     | 244930/552076 [00:02<00:02, 110089.20it/s] 47%|████▋     | 257044/552076 [00:02<00:02, 113184.47it/s] 49%|████▉     | 269206/552076 [00:02<00:02, 115589.21it/s] 51%|█████     | 281378/552076 [00:02<00:02, 117361.99it/s] 53%|█████▎    | 293586/552076 [00:02<00:02, 118736.46it/s] 55%|█████▌    | 305746/552076 [00:02<00:02, 119578.43it/s] 58%|█████▊    | 317928/552076 [00:03<00:01, 120241.46it/s] 60%|█████▉    | 330161/552076 [00:03<00:01, 120858.74it/s] 62%|██████▏   | 342280/552076 [00:03<00:01, 118776.66it/s] 64%|██████▍   | 355296/552076 [00:03<00:01, 121974.30it/s] 67%|██████▋   | 367771/552076 [00:03<00:01, 122790.53it/s] 69%|██████▉   | 380082/552076 [00:03<00:01, 120949.60it/s] 71%|███████   | 392206/552076 [00:03<00:01, 120084.39it/s] 73%|███████▎  | 404293/552076 [00:03<00:01, 120317.75it/s] 75%|███████▌  | 416340/552076 [00:03<00:01, 120016.41it/s] 78%|███████▊  | 428353/552076 [00:03<00:01, 119772.43it/s] 80%|███████▉  | 440338/552076 [00:04<00:00, 118714.61it/s] 82%|████████▏ | 453003/552076 [00:04<00:00, 120986.87it/s] 84%|████████▍ | 466217/552076 [00:04<00:00, 124128.10it/s] 87%|████████▋ | 478662/552076 [00:04<00:00, 122371.45it/s] 89%|████████▉ | 490927/552076 [00:04<00:00, 120649.05it/s] 91%|█████████ | 503158/552076 [00:04<00:00, 121140.30it/s] 93%|█████████▎| 515290/552076 [00:04<00:00, 120564.47it/s] 96%|█████████▌| 527360/552076 [00:04<00:00, 118998.08it/s] 98%|█████████▊| 539274/552076 [00:04<00:00, 118934.66it/s]100%|█████████▉| 551452/552076 [00:04<00:00, 119772.13it/s]100%|██████████| 552076/552076 [00:04<00:00, 110493.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11304/552076 [00:00<00:04, 113034.72it/s]  4%|▎         | 19586/552076 [00:00<00:05, 97780.76it/s]   5%|▌         | 29558/552076 [00:00<00:05, 98352.93it/s]  7%|▋         | 37120/552076 [00:00<00:05, 90214.74it/s]  8%|▊         | 43739/552076 [00:00<00:06, 73550.25it/s]  9%|▉         | 52101/552076 [00:00<00:06, 74827.49it/s] 11%|█         | 60864/552076 [00:00<00:06, 78257.12it/s] 13%|█▎        | 70026/552076 [00:00<00:05, 81837.10it/s] 15%|█▍        | 80695/552076 [00:00<00:05, 87984.01it/s] 17%|█▋        | 92615/552076 [00:01<00:04, 95484.16it/s] 19%|█▉        | 104004/552076 [00:01<00:04, 100346.10it/s] 21%|██        | 114186/552076 [00:01<00:05, 87045.90it/s]  23%|██▎       | 125894/552076 [00:01<00:04, 94303.09it/s] 25%|██▍       | 136634/552076 [00:01<00:04, 97881.95it/s] 27%|██▋       | 148730/552076 [00:01<00:03, 103822.82it/s] 29%|██▉       | 161036/552076 [00:01<00:03, 108931.34it/s] 31%|███       | 172242/552076 [00:01<00:03, 105414.73it/s] 33%|███▎      | 183027/552076 [00:01<00:03, 98118.98it/s]  35%|███▌      | 194497/552076 [00:02<00:03, 102565.63it/s] 37%|███▋      | 206360/552076 [00:02<00:03, 106907.69it/s] 40%|███▉      | 218555/552076 [00:02<00:03, 111015.07it/s] 42%|████▏     | 231095/552076 [00:02<00:02, 114971.18it/s] 46%|████▌     | 253552/552076 [00:02<00:02, 134691.14it/s] 50%|████▉     | 275401/552076 [00:02<00:01, 152203.21it/s] 54%|█████▎    | 296674/552076 [00:02<00:01, 166406.18it/s] 58%|█████▊    | 318842/552076 [00:02<00:01, 179858.69it/s] 62%|██████▏   | 340640/552076 [00:02<00:01, 189816.63it/s] 65%|██████▌   | 360789/552076 [00:02<00:01, 173451.35it/s] 69%|██████▉   | 380323/552076 [00:03<00:00, 179484.30it/s] 73%|███████▎  | 402626/552076 [00:03<00:00, 190650.59it/s] 77%|███████▋  | 425236/552076 [00:03<00:00, 200060.17it/s] 81%|████████  | 447430/552076 [00:03<00:00, 206154.93it/s] 85%|████████▍ | 468551/552076 [00:03<00:00, 182975.08it/s] 88%|████████▊ | 487685/552076 [00:03<00:00, 183214.20it/s] 93%|█████████▎| 510692/552076 [00:03<00:00, 195136.40it/s] 97%|█████████▋| 533751/552076 [00:03<00:00, 204572.07it/s]100%|██████████| 552076/552076 [00:03<00:00, 141050.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21777/552076 [00:00<00:02, 217764.50it/s]  8%|▊         | 44236/552076 [00:00<00:02, 219766.86it/s] 12%|█▏        | 67413/552076 [00:00<00:02, 223235.11it/s] 16%|█▋        | 90520/552076 [00:00<00:02, 225529.12it/s] 20%|██        | 113101/552076 [00:00<00:01, 225612.73it/s] 25%|██▍       | 135620/552076 [00:00<00:01, 225483.06it/s] 29%|██▉       | 159285/552076 [00:00<00:01, 228718.27it/s] 33%|███▎      | 182304/552076 [00:00<00:01, 229156.08it/s] 37%|███▋      | 204825/552076 [00:00<00:01, 227956.72it/s] 41%|████▏     | 227981/552076 [00:01<00:01, 229024.65it/s] 46%|████▌     | 251285/552076 [00:01<00:01, 230211.95it/s] 50%|████▉     | 274151/552076 [00:01<00:01, 229743.89it/s] 54%|█████▍    | 296830/552076 [00:01<00:01, 228324.71it/s] 58%|█████▊    | 319733/552076 [00:01<00:01, 228533.95it/s] 62%|██████▏   | 342443/552076 [00:01<00:00, 226309.61it/s] 66%|██████▌   | 364979/552076 [00:01<00:00, 195886.17it/s] 70%|██████▉   | 385228/552076 [00:01<00:00, 185154.40it/s] 74%|███████▍  | 408383/552076 [00:01<00:00, 196993.90it/s] 78%|███████▊  | 429452/552076 [00:01<00:00, 200911.14it/s] 82%|████████▏ | 452374/552076 [00:02<00:00, 208639.37it/s] 86%|████████▌ | 474761/552076 [00:02<00:00, 212983.58it/s] 90%|█████████ | 497079/552076 [00:02<00:00, 215940.84it/s] 94%|█████████▍| 519554/552076 [00:02<00:00, 218507.85it/s] 98%|█████████▊| 542889/552076 [00:02<00:00, 222755.41it/s]100%|██████████| 552076/552076 [00:02<00:00, 218693.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19420/552076 [00:00<00:02, 194192.31it/s]  6%|▌         | 31765/552076 [00:00<00:03, 165702.72it/s] 10%|▉         | 53186/552076 [00:00<00:02, 177778.42it/s] 14%|█▎        | 74891/552076 [00:00<00:02, 187978.87it/s] 17%|█▋        | 96521/552076 [00:00<00:02, 195664.57it/s] 22%|██▏       | 118905/552076 [00:00<00:02, 203341.93it/s] 25%|██▌       | 138841/552076 [00:00<00:02, 202127.29it/s] 29%|██▊       | 157786/552076 [00:00<00:02, 163479.87it/s] 32%|███▏      | 174439/552076 [00:00<00:02, 156932.53it/s] 36%|███▌      | 197299/552076 [00:01<00:02, 173223.15it/s] 40%|███▉      | 219407/552076 [00:01<00:01, 185251.22it/s] 44%|████▎     | 241262/552076 [00:01<00:01, 194121.85it/s] 47%|████▋     | 261297/552076 [00:01<00:01, 178005.33it/s] 51%|█████     | 279795/552076 [00:01<00:01, 164923.83it/s] 54%|█████▍    | 298728/552076 [00:01<00:01, 171555.23it/s] 58%|█████▊    | 319362/552076 [00:01<00:01, 180692.99it/s] 62%|██████▏   | 340807/552076 [00:01<00:01, 189647.86it/s] 66%|██████▌   | 362152/552076 [00:01<00:00, 196209.43it/s] 70%|██████▉   | 384540/552076 [00:02<00:00, 203763.48it/s] 74%|███████▎  | 407147/552076 [00:02<00:00, 209978.62it/s] 78%|███████▊  | 429247/552076 [00:02<00:00, 213167.48it/s] 82%|████████▏ | 451930/552076 [00:02<00:00, 217089.56it/s] 86%|████████▌ | 474498/552076 [00:02<00:00, 219595.61it/s] 90%|████████▉ | 496583/552076 [00:02<00:00, 216866.94it/s] 94%|█████████▍| 518599/552076 [00:02<00:00, 217842.22it/s] 98%|█████████▊| 540451/552076 [00:02<00:00, 215944.98it/s]100%|██████████| 552076/552076 [00:02<00:00, 196203.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21011/552076 [00:00<00:02, 210108.20it/s]  8%|▊         | 43528/552076 [00:00<00:02, 214408.99it/s] 12%|█▏        | 66231/552076 [00:00<00:02, 218044.17it/s] 16%|█▌        | 89125/552076 [00:00<00:02, 221200.51it/s] 20%|██        | 110968/552076 [00:00<00:02, 220359.21it/s] 24%|██▍       | 133868/552076 [00:00<00:01, 222881.95it/s] 28%|██▊       | 156957/552076 [00:00<00:01, 225223.13it/s] 33%|███▎      | 179831/552076 [00:00<00:01, 226266.53it/s] 37%|███▋      | 201867/552076 [00:00<00:01, 224459.69it/s] 40%|████      | 223481/552076 [00:01<00:01, 218866.43it/s] 44%|████▍     | 244816/552076 [00:01<00:01, 201758.58it/s] 48%|████▊     | 264870/552076 [00:01<00:01, 163025.55it/s] 51%|█████     | 282285/552076 [00:01<00:02, 128164.43it/s] 54%|█████▍    | 297041/552076 [00:01<00:02, 115550.25it/s] 56%|█████▌    | 310189/552076 [00:01<00:02, 117431.71it/s] 59%|█████▊    | 323055/552076 [00:01<00:01, 118652.83it/s] 61%|██████    | 335926/552076 [00:01<00:01, 121499.14it/s] 63%|██████▎   | 348645/552076 [00:02<00:01, 121584.12it/s] 65%|██████▌   | 361202/552076 [00:02<00:01, 117780.99it/s] 68%|██████▊   | 373285/552076 [00:02<00:01, 118327.90it/s] 70%|██████▉   | 385474/552076 [00:02<00:01, 119372.25it/s] 72%|███████▏  | 397564/552076 [00:02<00:01, 115788.62it/s] 74%|███████▍  | 409273/552076 [00:02<00:01, 114665.78it/s] 76%|███████▋  | 421279/552076 [00:02<00:01, 116229.99it/s] 78%|███████▊  | 433214/552076 [00:02<00:01, 117146.30it/s] 81%|████████  | 445130/552076 [00:02<00:00, 117742.59it/s] 83%|████████▎ | 457372/552076 [00:03<00:00, 119104.90it/s] 85%|████████▌ | 469593/552076 [00:03<00:00, 120018.59it/s] 87%|████████▋ | 481927/552076 [00:03<00:00, 120993.99it/s] 90%|████████▉ | 494248/552076 [00:03<00:00, 121648.52it/s] 92%|█████████▏| 506496/552076 [00:03<00:00, 121894.82it/s] 94%|█████████▍| 518695/552076 [00:03<00:00, 121652.67it/s] 96%|█████████▌| 530867/552076 [00:03<00:00, 121661.85it/s] 98%|█████████▊| 543079/552076 [00:03<00:00, 121797.92it/s]100%|██████████| 552076/552076 [00:03<00:00, 145562.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9641/552076 [00:00<00:05, 96407.10it/s]  3%|▎         | 18161/552076 [00:00<00:05, 92746.60it/s]  5%|▌         | 30154/552076 [00:00<00:05, 99511.75it/s]  8%|▊         | 42181/552076 [00:00<00:04, 104943.49it/s] 10%|▉         | 54179/552076 [00:00<00:04, 109042.21it/s] 12%|█▏        | 66239/552076 [00:00<00:04, 112267.32it/s] 14%|█▍        | 78318/552076 [00:00<00:04, 114693.43it/s] 16%|█▋        | 90588/552076 [00:00<00:03, 116981.53it/s] 19%|█▊        | 102777/552076 [00:00<00:03, 118410.69it/s] 21%|██        | 115128/552076 [00:01<00:03, 119894.33it/s] 23%|██▎       | 127447/552076 [00:01<00:03, 120863.98it/s] 25%|██▌       | 139693/552076 [00:01<00:03, 121336.46it/s] 28%|██▊       | 152073/552076 [00:01<00:03, 122064.94it/s] 30%|██▉       | 164384/552076 [00:01<00:03, 122375.23it/s] 32%|███▏      | 176626/552076 [00:01<00:03, 122386.94it/s] 34%|███▍      | 188829/552076 [00:01<00:02, 122116.71it/s] 36%|███▋      | 201104/552076 [00:01<00:02, 122305.69it/s] 39%|███▊      | 213318/552076 [00:01<00:02, 121607.36it/s] 41%|████      | 225512/552076 [00:01<00:02, 121704.99it/s] 43%|████▎     | 237675/552076 [00:02<00:02, 108700.86it/s] 45%|████▌     | 248800/552076 [00:02<00:02, 104248.60it/s] 47%|████▋     | 259442/552076 [00:02<00:02, 103194.74it/s] 49%|████▉     | 269916/552076 [00:02<00:03, 93804.01it/s]  51%|█████     | 279569/552076 [00:02<00:03, 81477.64it/s] 52%|█████▏    | 288197/552076 [00:02<00:03, 69447.45it/s] 54%|█████▍    | 297410/552076 [00:02<00:03, 74984.57it/s] 56%|█████▌    | 308399/552076 [00:02<00:02, 82881.42it/s] 58%|█████▊    | 319763/552076 [00:03<00:02, 90206.04it/s] 60%|█████▉    | 329818/552076 [00:03<00:02, 93078.24it/s] 62%|██████▏   | 341961/552076 [00:03<00:02, 100086.84it/s] 64%|██████▍   | 354109/552076 [00:03<00:01, 105668.01it/s] 66%|██████▋   | 366282/552076 [00:03<00:01, 110021.02it/s] 69%|██████▊   | 378456/552076 [00:03<00:01, 113291.75it/s] 71%|███████   | 390536/552076 [00:03<00:01, 115441.79it/s] 73%|███████▎  | 402405/552076 [00:03<00:01, 116395.58it/s] 75%|███████▌  | 414524/552076 [00:03<00:01, 117792.98it/s] 77%|███████▋  | 426650/552076 [00:03<00:01, 118810.87it/s] 79%|███████▉  | 438828/552076 [00:04<00:00, 119685.24it/s] 82%|████████▏ | 450849/552076 [00:04<00:00, 116516.53it/s] 84%|████████▍ | 462556/552076 [00:04<00:00, 101918.01it/s] 86%|████████▌ | 473117/552076 [00:04<00:00, 92267.32it/s]  87%|████████▋ | 482812/552076 [00:04<00:00, 93622.53it/s] 90%|████████▉ | 494582/552076 [00:04<00:00, 99742.31it/s] 92%|█████████▏| 505893/552076 [00:04<00:00, 103408.21it/s] 94%|█████████▍| 517830/552076 [00:04<00:00, 107727.53it/s] 96%|█████████▌| 529707/552076 [00:04<00:00, 110818.37it/s] 98%|█████████▊| 541829/552076 [00:05<00:00, 113743.99it/s]100%|██████████| 552076/552076 [00:05<00:00, 108165.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10993/552076 [00:00<00:04, 109929.06it/s]  3%|▎         | 18172/552076 [00:00<00:05, 91918.82it/s]   4%|▍         | 24447/552076 [00:00<00:06, 80667.83it/s]  6%|▌         | 30752/552076 [00:00<00:07, 74427.03it/s]  7%|▋         | 37169/552076 [00:00<00:07, 71019.43it/s]  9%|▊         | 48179/552076 [00:00<00:06, 79481.72it/s] 11%|█         | 58028/552076 [00:00<00:05, 82674.89it/s] 12%|█▏        | 68794/552076 [00:00<00:05, 88854.79it/s] 14%|█▍        | 77494/552076 [00:01<00:06, 69331.70it/s] 15%|█▌        | 85356/552076 [00:01<00:06, 71878.45it/s] 17%|█▋        | 94549/552076 [00:01<00:05, 76910.21it/s] 19%|█▊        | 102616/552076 [00:01<00:06, 74463.09it/s] 20%|█▉        | 110343/552076 [00:01<00:06, 66413.23it/s] 22%|██▏       | 118935/552076 [00:01<00:06, 71265.46it/s] 23%|██▎       | 128130/552076 [00:01<00:05, 76422.70it/s] 25%|██▍       | 136786/552076 [00:01<00:05, 79203.50it/s] 26%|██▋       | 145562/552076 [00:01<00:04, 81584.90it/s] 28%|██▊       | 154349/552076 [00:01<00:05, 77314.81it/s] 29%|██▉       | 162273/552076 [00:02<00:05, 73911.85it/s] 31%|███▏      | 173512/552076 [00:02<00:04, 82372.00it/s] 33%|███▎      | 184762/552076 [00:02<00:04, 89567.42it/s] 35%|███▌      | 195888/552076 [00:02<00:03, 95130.64it/s] 38%|███▊      | 207104/552076 [00:02<00:03, 99668.56it/s] 40%|███▉      | 218304/552076 [00:02<00:03, 103070.92it/s] 42%|████▏     | 229579/552076 [00:02<00:03, 105794.79it/s] 44%|████▎     | 240373/552076 [00:02<00:03, 84889.96it/s]  45%|████▌     | 249672/552076 [00:03<00:05, 51582.41it/s] 47%|████▋     | 256989/552076 [00:03<00:05, 55394.01it/s] 48%|████▊     | 264119/552076 [00:03<00:06, 42600.99it/s] 49%|████▉     | 269941/552076 [00:03<00:07, 37011.10it/s] 50%|████▉     | 274867/552076 [00:03<00:08, 33999.81it/s] 51%|█████     | 279287/552076 [00:04<00:07, 36528.63it/s] 51%|█████▏    | 284143/552076 [00:04<00:06, 39230.19it/s] 52%|█████▏    | 288950/552076 [00:04<00:06, 41519.37it/s] 53%|█████▎    | 293514/552076 [00:04<00:07, 36549.68it/s] 54%|█████▍    | 297566/552076 [00:04<00:06, 36502.49it/s] 55%|█████▍    | 302239/552076 [00:04<00:06, 39067.07it/s] 56%|█████▌    | 306574/552076 [00:04<00:06, 39874.95it/s] 56%|█████▋    | 310737/552076 [00:04<00:06, 39399.93it/s] 57%|█████▋    | 314802/552076 [00:04<00:06, 38966.12it/s] 58%|█████▊    | 321413/552076 [00:05<00:05, 44439.88it/s] 59%|█████▉    | 326967/552076 [00:05<00:04, 46539.20it/s] 60%|██████    | 331877/552076 [00:05<00:05, 42107.36it/s] 61%|██████    | 336348/552076 [00:05<00:05, 39135.89it/s] 62%|██████▏   | 340486/552076 [00:05<00:05, 38742.28it/s] 63%|██████▎   | 347145/552076 [00:05<00:04, 44299.84it/s] 64%|██████▍   | 352234/552076 [00:05<00:04, 45716.96it/s] 65%|██████▍   | 358452/552076 [00:05<00:03, 49659.57it/s] 66%|██████▌   | 363717/552076 [00:05<00:03, 47661.15it/s] 67%|██████▋   | 370024/552076 [00:06<00:03, 51430.70it/s] 68%|██████▊   | 375500/552076 [00:06<00:03, 52384.70it/s] 69%|██████▉   | 380914/552076 [00:06<00:03, 44962.10it/s] 70%|██████▉   | 386205/552076 [00:06<00:03, 47082.07it/s] 71%|███████   | 393095/552076 [00:06<00:03, 52024.24it/s] 72%|███████▏  | 399939/552076 [00:06<00:02, 56057.52it/s] 74%|███████▎  | 405865/552076 [00:06<00:02, 54804.91it/s] 75%|███████▍  | 411576/552076 [00:06<00:03, 45466.29it/s] 75%|███████▌  | 416550/552076 [00:07<00:03, 38200.99it/s] 76%|███████▌  | 420866/552076 [00:07<00:04, 30905.28it/s] 77%|███████▋  | 424529/552076 [00:07<00:04, 30623.77it/s] 78%|███████▊  | 427993/552076 [00:07<00:04, 25842.70it/s] 78%|███████▊  | 430986/552076 [00:07<00:04, 26184.18it/s] 79%|███████▊  | 433892/552076 [00:07<00:05, 22875.44it/s] 79%|███████▉  | 436756/552076 [00:08<00:04, 24299.55it/s] 80%|███████▉  | 439404/552076 [00:08<00:04, 24192.10it/s] 80%|████████  | 442192/552076 [00:08<00:04, 24884.81it/s] 81%|████████  | 444793/552076 [00:08<00:04, 23832.20it/s] 81%|████████  | 447264/552076 [00:08<00:04, 22252.37it/s] 82%|████████▏ | 450017/552076 [00:08<00:04, 23408.70it/s] 82%|████████▏ | 452806/552076 [00:08<00:04, 24233.79it/s] 83%|████████▎ | 455976/552076 [00:08<00:03, 25625.76it/s] 83%|████████▎ | 458602/552076 [00:08<00:03, 24226.65it/s] 84%|████████▎ | 461409/552076 [00:09<00:03, 25080.81it/s] 84%|████████▍ | 464127/552076 [00:09<00:03, 25674.68it/s] 85%|████████▍ | 466733/552076 [00:09<00:03, 25052.05it/s] 85%|████████▌ | 469269/552076 [00:09<00:03, 22906.63it/s] 85%|████████▌ | 471617/552076 [00:09<00:03, 22987.73it/s] 86%|████████▌ | 474392/552076 [00:09<00:03, 24235.11it/s] 86%|████████▋ | 476930/552076 [00:09<00:03, 24468.86it/s] 87%|████████▋ | 479886/552076 [00:09<00:02, 25801.42it/s] 87%|████████▋ | 482509/552076 [00:09<00:02, 23354.07it/s] 88%|████████▊ | 484919/552076 [00:10<00:03, 21504.24it/s] 88%|████████▊ | 487151/552076 [00:10<00:03, 20827.25it/s] 89%|████████▊ | 489645/552076 [00:10<00:02, 21910.62it/s] 89%|████████▉ | 492424/552076 [00:10<00:02, 22958.71it/s] 90%|████████▉ | 495188/552076 [00:10<00:02, 23855.42it/s] 90%|█████████ | 497874/552076 [00:10<00:02, 23586.43it/s] 91%|█████████ | 500266/552076 [00:10<00:02, 23542.22it/s] 91%|█████████ | 502767/552076 [00:10<00:02, 23725.45it/s] 92%|█████████▏| 505157/552076 [00:10<00:02, 20480.77it/s] 92%|█████████▏| 507548/552076 [00:11<00:02, 21400.86it/s] 92%|█████████▏| 509885/552076 [00:11<00:01, 21891.43it/s] 93%|█████████▎| 512327/552076 [00:11<00:01, 22469.09it/s] 93%|█████████▎| 515261/552076 [00:11<00:01, 24166.13it/s] 94%|█████████▍| 517744/552076 [00:11<00:01, 23833.40it/s] 94%|█████████▍| 520175/552076 [00:11<00:01, 23756.33it/s] 95%|█████████▍| 522584/552076 [00:11<00:01, 23015.83it/s] 95%|█████████▌| 524914/552076 [00:11<00:01, 20817.63it/s] 95%|█████████▌| 527056/552076 [00:11<00:01, 20901.33it/s] 96%|█████████▌| 530779/552076 [00:12<00:00, 23809.91it/s] 97%|█████████▋| 534073/552076 [00:12<00:00, 25968.29it/s] 97%|█████████▋| 536847/552076 [00:12<00:00, 25158.46it/s] 98%|█████████▊| 539796/552076 [00:12<00:00, 25639.97it/s] 98%|█████████▊| 543220/552076 [00:12<00:00, 27728.85it/s] 99%|█████████▉| 546107/552076 [00:12<00:00, 25402.06it/s]100%|█████████▉| 551264/552076 [00:12<00:00, 29631.28it/s]100%|██████████| 552076/552076 [00:12<00:00, 43419.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 2942/552076 [00:00<00:20, 26341.88it/s]  1%|          | 4880/552076 [00:00<00:23, 23777.58it/s]  1%|▏         | 7063/552076 [00:00<00:23, 23157.46it/s]  2%|▏         | 8779/552076 [00:00<00:26, 20498.83it/s]  2%|▏         | 11265/552076 [00:00<00:25, 21347.85it/s]  3%|▎         | 14141/552076 [00:00<00:23, 23136.66it/s]  3%|▎         | 16616/552076 [00:00<00:22, 23597.24it/s]  3%|▎         | 19001/552076 [00:00<00:22, 23580.94it/s]  4%|▍         | 21253/552076 [00:00<00:24, 21650.90it/s]  4%|▍         | 23375/552076 [00:01<00:25, 21031.98it/s]  5%|▍         | 25480/552076 [00:01<00:25, 20594.09it/s]  5%|▌         | 27818/552076 [00:01<00:24, 21357.43it/s]  5%|▌         | 29950/552076 [00:01<00:24, 21077.23it/s]  6%|▌         | 32248/552076 [00:01<00:24, 21590.58it/s]  6%|▌         | 34409/552076 [00:01<00:24, 21229.93it/s]  7%|▋         | 36759/552076 [00:01<00:23, 21863.00it/s]  7%|▋         | 39297/552076 [00:01<00:22, 22810.12it/s]  8%|▊         | 41714/552076 [00:01<00:21, 23200.51it/s]  8%|▊         | 44317/552076 [00:01<00:21, 23751.29it/s]  8%|▊         | 46907/552076 [00:02<00:20, 24084.07it/s]  9%|▉         | 49570/552076 [00:02<00:20, 24795.17it/s]  9%|▉         | 52200/552076 [00:02<00:19, 25227.45it/s] 10%|▉         | 54917/552076 [00:02<00:19, 25189.24it/s] 10%|█         | 57530/552076 [00:02<00:19, 25199.18it/s] 11%|█         | 60055/552076 [00:02<00:19, 25113.93it/s] 11%|█▏        | 62597/552076 [00:02<00:19, 25077.76it/s] 12%|█▏        | 65298/552076 [00:02<00:18, 25627.13it/s] 12%|█▏        | 67887/552076 [00:02<00:18, 25704.10it/s] 13%|█▎        | 70461/552076 [00:03<00:18, 25357.59it/s] 13%|█▎        | 73113/552076 [00:03<00:18, 25694.59it/s] 14%|█▎        | 75686/552076 [00:03<00:18, 25166.95it/s] 14%|█▍        | 78208/552076 [00:03<00:19, 24807.85it/s] 15%|█▍        | 80820/552076 [00:03<00:18, 25186.14it/s] 15%|█▌        | 83344/552076 [00:03<00:18, 24871.92it/s] 16%|█▌        | 85867/552076 [00:03<00:18, 24622.75it/s] 16%|█▌        | 88419/552076 [00:03<00:18, 24883.64it/s] 16%|█▋        | 90911/552076 [00:03<00:18, 24486.48it/s] 17%|█▋        | 93395/552076 [00:03<00:18, 24591.38it/s] 17%|█▋        | 95857/552076 [00:04<00:19, 23941.06it/s] 18%|█▊        | 98459/552076 [00:04<00:18, 24528.66it/s] 18%|█▊        | 100989/552076 [00:04<00:18, 24754.24it/s] 19%|█▊        | 103471/552076 [00:04<00:18, 24637.35it/s] 19%|█▉        | 105939/552076 [00:04<00:18, 24564.33it/s] 20%|█▉        | 108399/552076 [00:04<00:18, 24466.29it/s] 20%|██        | 111106/552076 [00:04<00:17, 25192.01it/s] 21%|██        | 113633/552076 [00:04<00:17, 24561.20it/s] 21%|██        | 116210/552076 [00:04<00:17, 24564.31it/s] 21%|██▏       | 118673/552076 [00:04<00:17, 24577.97it/s] 22%|██▏       | 121135/552076 [00:05<00:17, 24469.17it/s] 22%|██▏       | 123683/552076 [00:05<00:17, 24763.68it/s] 23%|██▎       | 126163/552076 [00:05<00:17, 24470.29it/s] 23%|██▎       | 128681/552076 [00:05<00:17, 24677.53it/s] 24%|██▍       | 131262/552076 [00:05<00:16, 24996.31it/s] 24%|██▍       | 133765/552076 [00:05<00:17, 23884.39it/s] 25%|██▍       | 136166/552076 [00:05<00:19, 21172.35it/s] 25%|██▌       | 138716/552076 [00:05<00:19, 21721.89it/s] 26%|██▌       | 142824/552076 [00:05<00:16, 25171.33it/s] 27%|██▋       | 147541/552076 [00:06<00:14, 28475.01it/s] 28%|██▊       | 152197/552076 [00:06<00:12, 32230.19it/s] 28%|██▊       | 156211/552076 [00:06<00:11, 34254.86it/s] 29%|██▉       | 159942/552076 [00:06<00:12, 32260.93it/s] 30%|██▉       | 164177/552076 [00:06<00:11, 34534.61it/s] 31%|███       | 168938/552076 [00:06<00:10, 37635.09it/s] 31%|███▏      | 172932/552076 [00:06<00:11, 33334.34it/s] 32%|███▏      | 176517/552076 [00:06<00:12, 30796.97it/s] 33%|███▎      | 180453/552076 [00:06<00:11, 32550.77it/s] 33%|███▎      | 184595/552076 [00:07<00:10, 34596.34it/s] 34%|███▍      | 188636/552076 [00:07<00:10, 36127.77it/s] 35%|███▍      | 193092/552076 [00:07<00:09, 38301.89it/s] 36%|███▌      | 197786/552076 [00:07<00:08, 40539.20it/s] 37%|███▋      | 203947/552076 [00:07<00:07, 44247.52it/s] 38%|███▊      | 208559/552076 [00:07<00:07, 44711.09it/s] 39%|███▉      | 213989/552076 [00:07<00:07, 45986.76it/s] 40%|███▉      | 219044/552076 [00:07<00:07, 46660.55it/s] 41%|████      | 224321/552076 [00:07<00:06, 47110.09it/s] 41%|████▏     | 229085/552076 [00:08<00:07, 45244.55it/s] 42%|████▏     | 234291/552076 [00:08<00:06, 47093.22it/s] 43%|████▎     | 239057/552076 [00:08<00:07, 44400.33it/s] 44%|████▍     | 244059/552076 [00:08<00:06, 45657.20it/s] 45%|████▌     | 248685/552076 [00:08<00:06, 45836.30it/s] 46%|████▌     | 253310/552076 [00:08<00:07, 42576.57it/s] 47%|████▋     | 259236/552076 [00:08<00:06, 46504.15it/s] 48%|████▊     | 264047/552076 [00:08<00:06, 44059.31it/s] 49%|████▊     | 268592/552076 [00:08<00:06, 43176.32it/s] 49%|████▉     | 273011/552076 [00:09<00:06, 42787.79it/s] 50%|█████     | 277362/552076 [00:09<00:06, 42672.53it/s] 51%|█████     | 281680/552076 [00:09<00:06, 39962.21it/s] 52%|█████▏    | 287286/552076 [00:09<00:06, 42813.05it/s] 53%|█████▎    | 291674/552076 [00:09<00:06, 41945.83it/s] 54%|█████▍    | 296836/552076 [00:09<00:05, 44444.26it/s] 55%|█████▍    | 302237/552076 [00:09<00:05, 46019.28it/s] 56%|█████▌    | 306920/552076 [00:09<00:05, 43522.80it/s] 56%|█████▋    | 311359/552076 [00:09<00:05, 42141.59it/s] 57%|█████▋    | 315642/552076 [00:10<00:06, 33810.15it/s] 58%|█████▊    | 319490/552076 [00:10<00:06, 34173.81it/s] 59%|█████▊    | 323287/552076 [00:10<00:06, 35165.12it/s] 59%|█████▉    | 327967/552076 [00:10<00:05, 37998.96it/s] 60%|██████    | 331945/552076 [00:10<00:05, 37712.81it/s] 61%|██████    | 335842/552076 [00:10<00:05, 38069.30it/s] 62%|██████▏   | 339928/552076 [00:10<00:05, 38712.11it/s] 63%|██████▎   | 345873/552076 [00:10<00:04, 43236.05it/s] 64%|██████▍   | 352064/552076 [00:10<00:04, 47536.90it/s] 65%|██████▍   | 357780/552076 [00:11<00:03, 49419.51it/s] 66%|██████▌   | 363939/552076 [00:11<00:03, 52135.04it/s] 67%|██████▋   | 370339/552076 [00:11<00:03, 55204.49it/s] 68%|██████▊   | 376693/552076 [00:11<00:03, 57464.82it/s] 70%|██████▉   | 383989/552076 [00:11<00:02, 60684.60it/s] 71%|███████   | 390212/552076 [00:11<00:02, 60305.77it/s] 72%|███████▏  | 396352/552076 [00:11<00:02, 60561.58it/s] 73%|███████▎  | 402485/552076 [00:11<00:02, 59023.35it/s] 74%|███████▍  | 408450/552076 [00:11<00:02, 58764.39it/s] 75%|███████▌  | 414494/552076 [00:11<00:02, 59256.05it/s] 76%|███████▌  | 420452/552076 [00:12<00:02, 57767.72it/s] 77%|███████▋  | 426260/552076 [00:12<00:02, 57650.95it/s] 78%|███████▊  | 432285/552076 [00:12<00:02, 58406.30it/s] 79%|███████▉  | 438430/552076 [00:12<00:01, 57547.91it/s] 80%|████████  | 444200/552076 [00:12<00:01, 57102.59it/s] 81%|████████▏ | 449922/552076 [00:12<00:02, 50124.05it/s] 82%|████████▏ | 455098/552076 [00:12<00:02, 47671.83it/s] 83%|████████▎ | 460005/552076 [00:12<00:02, 45094.96it/s] 84%|████████▍ | 464641/552076 [00:12<00:02, 42543.95it/s] 85%|████████▍ | 469014/552076 [00:13<00:01, 42406.21it/s] 86%|████████▌ | 473338/552076 [00:13<00:01, 41791.10it/s] 87%|████████▋ | 477578/552076 [00:13<00:01, 40884.75it/s] 87%|████████▋ | 481914/552076 [00:13<00:01, 41248.08it/s] 88%|████████▊ | 486309/552076 [00:13<00:01, 41900.22it/s] 89%|████████▉ | 490525/552076 [00:13<00:01, 40793.54it/s] 90%|████████▉ | 494694/552076 [00:13<00:01, 39710.59it/s] 90%|█████████ | 498916/552076 [00:13<00:01, 40430.57it/s] 91%|█████████ | 502994/552076 [00:13<00:01, 40055.92it/s] 92%|█████████▏| 507223/552076 [00:14<00:01, 40700.36it/s] 93%|█████████▎| 511394/552076 [00:14<00:00, 40997.72it/s] 93%|█████████▎| 515504/552076 [00:14<00:00, 40395.12it/s] 94%|█████████▍| 519852/552076 [00:14<00:00, 40045.89it/s] 95%|█████████▌| 524575/552076 [00:14<00:00, 41084.08it/s] 96%|█████████▌| 528741/552076 [00:14<00:00, 40295.31it/s] 97%|█████████▋| 533120/552076 [00:14<00:00, 40373.10it/s] 97%|█████████▋| 537266/552076 [00:14<00:00, 40576.22it/s] 98%|█████████▊| 541330/552076 [00:14<00:00, 40438.66it/s] 99%|█████████▉| 545379/552076 [00:14<00:00, 38913.21it/s]100%|█████████▉| 549425/552076 [00:15<00:00, 39364.58it/s]100%|██████████| 552076/552076 [00:15<00:00, 36440.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5149/552076 [00:00<00:10, 50463.64it/s]  2%|▏         | 10644/552076 [00:00<00:10, 51376.26it/s]  3%|▎         | 15719/552076 [00:00<00:10, 51186.26it/s]  4%|▍         | 21298/552076 [00:00<00:10, 52484.99it/s]  5%|▍         | 26485/552076 [00:00<00:10, 51119.32it/s]  6%|▌         | 31604/552076 [00:00<00:10, 49540.48it/s]  7%|▋         | 36479/552076 [00:00<00:10, 49300.63it/s]  8%|▊         | 41897/552076 [00:00<00:10, 50012.11it/s]  9%|▊         | 47554/552076 [00:00<00:09, 51432.07it/s] 10%|▉         | 52997/552076 [00:01<00:09, 52018.05it/s] 11%|█         | 58791/552076 [00:01<00:09, 53661.89it/s] 12%|█▏        | 64082/552076 [00:01<00:09, 51718.82it/s] 13%|█▎        | 69877/552076 [00:01<00:09, 52712.68it/s] 14%|█▎        | 75633/552076 [00:01<00:08, 54078.69it/s] 15%|█▍        | 81035/552076 [00:01<00:08, 53527.36it/s] 16%|█▌        | 86527/552076 [00:01<00:08, 53937.28it/s] 17%|█▋        | 91920/552076 [00:01<00:08, 53618.26it/s] 18%|█▊        | 97851/552076 [00:01<00:08, 55207.29it/s] 19%|█▉        | 103837/552076 [00:01<00:07, 56524.94it/s] 21%|██        | 114224/552076 [00:02<00:06, 65477.92it/s] 22%|██▏       | 121308/552076 [00:02<00:06, 62775.29it/s] 23%|██▎       | 127985/552076 [00:02<00:07, 58872.50it/s] 24%|██▍       | 134201/552076 [00:02<00:07, 57217.42it/s] 25%|██▌       | 140163/552076 [00:02<00:07, 56123.21it/s] 26%|██▋       | 145949/552076 [00:02<00:08, 47950.86it/s] 27%|██▋       | 151073/552076 [00:02<00:09, 43727.44it/s] 28%|██▊       | 155748/552076 [00:02<00:09, 39742.52it/s] 29%|██▉       | 160004/552076 [00:03<00:11, 33913.47it/s] 30%|██▉       | 163741/552076 [00:03<00:12, 31453.51it/s] 30%|███       | 167710/552076 [00:03<00:11, 33058.18it/s] 31%|███       | 171232/552076 [00:03<00:11, 32240.27it/s] 32%|███▏      | 174945/552076 [00:03<00:11, 33390.34it/s] 32%|███▏      | 178704/552076 [00:03<00:10, 34362.48it/s] 33%|███▎      | 182231/552076 [00:03<00:11, 32274.50it/s] 34%|███▎      | 186070/552076 [00:03<00:10, 33646.14it/s] 34%|███▍      | 189789/552076 [00:04<00:10, 34246.20it/s] 35%|███▌      | 193746/552076 [00:04<00:10, 35487.93it/s] 36%|███▌      | 197347/552076 [00:04<00:10, 34878.14it/s] 37%|███▋      | 201570/552076 [00:04<00:11, 30081.81it/s] 37%|███▋      | 204722/552076 [00:04<00:13, 26256.39it/s] 38%|███▊      | 208571/552076 [00:04<00:11, 28863.40it/s] 39%|███▊      | 213419/552076 [00:04<00:10, 32851.14it/s] 39%|███▉      | 217057/552076 [00:04<00:09, 33713.30it/s] 40%|████      | 221647/552076 [00:05<00:09, 35943.51it/s] 41%|████      | 226176/552076 [00:05<00:08, 37794.50it/s] 42%|████▏     | 230702/552076 [00:05<00:08, 38606.25it/s] 43%|████▎     | 234688/552076 [00:05<00:08, 36643.15it/s] 44%|████▎     | 240980/552076 [00:05<00:07, 41891.14it/s] 45%|████▍     | 247282/552076 [00:05<00:06, 46575.18it/s] 46%|████▌     | 252343/552076 [00:05<00:06, 47461.25it/s] 47%|████▋     | 258652/552076 [00:05<00:05, 51270.30it/s] 48%|████▊     | 264822/552076 [00:05<00:05, 52896.43it/s] 49%|████▉     | 271020/552076 [00:05<00:05, 55038.47it/s] 50%|█████     | 277344/552076 [00:06<00:04, 57266.01it/s] 51%|█████▏    | 283704/552076 [00:06<00:04, 59028.70it/s] 52%|█████▏    | 289740/552076 [00:06<00:04, 58393.03it/s] 54%|█████▎    | 295661/552076 [00:06<00:04, 57633.88it/s] 55%|█████▍    | 301601/552076 [00:06<00:04, 58102.32it/s] 56%|█████▌    | 307992/552076 [00:06<00:04, 58793.96it/s] 57%|█████▋    | 314103/552076 [00:06<00:04, 59105.18it/s] 58%|█████▊    | 320465/552076 [00:06<00:03, 60389.63it/s] 59%|█████▉    | 326788/552076 [00:06<00:03, 61214.30it/s] 60%|██████    | 332929/552076 [00:06<00:03, 59808.82it/s] 61%|██████▏   | 338931/552076 [00:07<00:03, 59218.44it/s] 63%|██████▎   | 345353/552076 [00:07<00:03, 60634.06it/s] 64%|██████▎   | 351449/552076 [00:07<00:03, 59481.89it/s] 65%|██████▍   | 357624/552076 [00:07<00:03, 60088.64it/s] 66%|██████▌   | 363961/552076 [00:07<00:03, 61035.39it/s] 67%|██████▋   | 370179/552076 [00:07<00:02, 61373.78it/s] 68%|██████▊   | 376327/552076 [00:07<00:03, 54818.81it/s] 69%|██████▉   | 382520/552076 [00:07<00:02, 56773.91it/s] 70%|███████   | 388312/552076 [00:07<00:03, 53074.06it/s] 71%|███████▏  | 394638/552076 [00:08<00:02, 55766.34it/s] 73%|███████▎  | 400341/552076 [00:08<00:02, 53812.88it/s] 74%|███████▎  | 405826/552076 [00:08<00:02, 51579.02it/s] 74%|███████▍  | 411076/552076 [00:08<00:03, 37484.93it/s] 75%|███████▌  | 415438/552076 [00:08<00:03, 38192.92it/s] 76%|███████▌  | 419690/552076 [00:08<00:03, 37211.90it/s] 77%|███████▋  | 423720/552076 [00:08<00:03, 36671.96it/s] 78%|███████▊  | 428598/552076 [00:08<00:03, 39622.34it/s] 78%|███████▊  | 433174/552076 [00:09<00:02, 40555.25it/s] 79%|███████▉  | 438294/552076 [00:09<00:02, 43252.65it/s] 80%|████████  | 442781/552076 [00:09<00:02, 41812.91it/s] 81%|████████  | 447086/552076 [00:09<00:02, 39488.09it/s] 82%|████████▏ | 451618/552076 [00:09<00:02, 40562.25it/s] 83%|████████▎ | 455761/552076 [00:09<00:02, 40105.21it/s] 83%|████████▎ | 460241/552076 [00:09<00:02, 41385.62it/s] 84%|████████▍ | 464878/552076 [00:09<00:02, 41756.04it/s] 85%|████████▌ | 470201/552076 [00:09<00:01, 43830.76it/s] 86%|████████▌ | 474639/552076 [00:10<00:01, 41885.53it/s] 87%|████████▋ | 478884/552076 [00:10<00:01, 40745.75it/s] 88%|████████▊ | 483801/552076 [00:10<00:01, 41797.81it/s] 88%|████████▊ | 488020/552076 [00:10<00:01, 38941.58it/s] 89%|████████▉ | 493474/552076 [00:10<00:01, 42596.09it/s] 90%|█████████ | 498813/552076 [00:10<00:01, 44982.02it/s] 91%|█████████ | 503452/552076 [00:10<00:01, 45166.37it/s] 92%|█████████▏| 510323/552076 [00:10<00:00, 50340.02it/s] 94%|█████████▎| 516391/552076 [00:10<00:00, 53052.02it/s] 95%|█████████▍| 523183/552076 [00:11<00:00, 56778.77it/s] 96%|█████████▌| 529088/552076 [00:11<00:00, 46255.89it/s] 97%|█████████▋| 534190/552076 [00:11<00:00, 45036.32it/s] 98%|█████████▊| 540644/552076 [00:11<00:00, 48727.10it/s] 99%|█████████▉| 545884/552076 [00:11<00:00, 49772.71it/s]100%|█████████▉| 551095/552076 [00:11<00:00, 33419.90it/s]100%|██████████| 552076/552076 [00:11<00:00, 46756.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3263/552076 [00:00<00:16, 32627.46it/s]  1%|          | 6511/552076 [00:00<00:17, 31281.66it/s]  2%|▏         | 9321/552076 [00:00<00:17, 30253.12it/s]  2%|▏         | 12816/552076 [00:00<00:17, 31523.71it/s]  3%|▎         | 15829/552076 [00:00<00:17, 30809.38it/s]  3%|▎         | 18933/552076 [00:00<00:17, 30877.40it/s]  4%|▍         | 21652/552076 [00:00<00:18, 28789.08it/s]  4%|▍         | 24364/552076 [00:00<00:18, 28266.89it/s]  5%|▍         | 27276/552076 [00:00<00:18, 28517.31it/s]  5%|▌         | 30018/552076 [00:01<00:20, 25816.51it/s]  6%|▌         | 33551/552076 [00:01<00:18, 28084.14it/s]  7%|▋         | 36398/552076 [00:01<00:19, 26319.87it/s]  7%|▋         | 39080/552076 [00:01<00:19, 26304.11it/s]  8%|▊         | 42586/552076 [00:01<00:19, 25609.28it/s]  8%|▊         | 45176/552076 [00:01<00:23, 21569.25it/s]  9%|▊         | 47462/552076 [00:01<00:23, 21455.56it/s]  9%|▉         | 50051/552076 [00:01<00:22, 22199.07it/s] 10%|▉         | 52827/552076 [00:02<00:21, 23153.67it/s] 10%|▉         | 55202/552076 [00:02<00:21, 23204.64it/s] 11%|█         | 58522/552076 [00:02<00:19, 25424.23it/s] 11%|█         | 62093/552076 [00:02<00:17, 27828.46it/s] 12%|█▏        | 65009/552076 [00:02<00:19, 24786.42it/s] 12%|█▏        | 68444/552076 [00:02<00:17, 26967.19it/s] 13%|█▎        | 71524/552076 [00:02<00:17, 27816.40it/s] 13%|█▎        | 74428/552076 [00:02<00:18, 26498.20it/s] 14%|█▍        | 77177/552076 [00:02<00:19, 24133.29it/s] 15%|█▍        | 80365/552076 [00:03<00:18, 26030.16it/s] 15%|█▌        | 83893/552076 [00:03<00:16, 27842.69it/s] 16%|█▌        | 86832/552076 [00:03<00:16, 27934.37it/s] 16%|█▋        | 89925/552076 [00:03<00:16, 27986.54it/s] 17%|█▋        | 93500/552076 [00:03<00:15, 29438.84it/s] 18%|█▊        | 96931/552076 [00:03<00:14, 30493.50it/s] 18%|█▊        | 102001/552076 [00:03<00:12, 34634.17it/s] 19%|█▉        | 106659/552076 [00:03<00:11, 37520.36it/s] 20%|██        | 111746/552076 [00:03<00:10, 40726.63it/s] 21%|██▏       | 117965/552076 [00:03<00:09, 45394.39it/s] 22%|██▏       | 123813/552076 [00:04<00:08, 48659.47it/s] 23%|██▎       | 128982/552076 [00:04<00:09, 45231.36it/s] 25%|██▍       | 135860/552076 [00:04<00:08, 50408.73it/s] 26%|██▌       | 141272/552076 [00:04<00:08, 50996.22it/s] 27%|██▋       | 146633/552076 [00:04<00:09, 43127.07it/s] 28%|██▊       | 153085/552076 [00:04<00:08, 47620.27it/s] 29%|██▉       | 158939/552076 [00:04<00:07, 50441.63it/s] 30%|██▉       | 164322/552076 [00:04<00:08, 45332.63it/s] 31%|███       | 169190/552076 [00:05<00:09, 41535.83it/s] 31%|███▏      | 173640/552076 [00:05<00:09, 38439.51it/s] 32%|███▏      | 179375/552076 [00:05<00:08, 42658.57it/s] 34%|███▎      | 186064/552076 [00:05<00:07, 47858.69it/s] 35%|███▍      | 192167/552076 [00:05<00:07, 51012.62it/s] 36%|███▌      | 197629/552076 [00:05<00:06, 51564.39it/s] 37%|███▋      | 204400/552076 [00:05<00:06, 55536.30it/s] 38%|███▊      | 211180/552076 [00:05<00:05, 58721.51it/s] 39%|███▉      | 217287/552076 [00:05<00:05, 58127.29it/s] 40%|████      | 223379/552076 [00:06<00:05, 58936.88it/s] 42%|████▏     | 229965/552076 [00:06<00:05, 60855.51it/s] 43%|████▎     | 236896/552076 [00:06<00:04, 63165.72it/s] 44%|████▍     | 243305/552076 [00:06<00:05, 58918.91it/s] 45%|████▌     | 250177/552076 [00:06<00:04, 61552.46it/s] 47%|████▋     | 257079/552076 [00:06<00:04, 63616.71it/s] 48%|████▊     | 263540/552076 [00:06<00:04, 62929.25it/s] 49%|████▉     | 270347/552076 [00:06<00:04, 64387.55it/s] 50%|█████     | 276844/552076 [00:06<00:04, 59880.54it/s] 51%|█████▏    | 283370/552076 [00:06<00:04, 61396.31it/s] 53%|█████▎    | 290218/552076 [00:07<00:04, 63361.54it/s] 54%|█████▍    | 296799/552076 [00:07<00:03, 63873.86it/s] 55%|█████▍    | 303239/552076 [00:07<00:03, 63398.84it/s] 56%|█████▌    | 309617/552076 [00:07<00:03, 61092.54it/s] 57%|█████▋    | 315771/552076 [00:07<00:04, 58156.61it/s] 58%|█████▊    | 322560/552076 [00:07<00:03, 60770.23it/s] 60%|█████▉    | 329447/552076 [00:07<00:03, 62992.65it/s] 61%|██████    | 335819/552076 [00:07<00:03, 63207.55it/s] 62%|██████▏   | 342191/552076 [00:07<00:03, 60343.14it/s] 63%|██████▎   | 349060/552076 [00:08<00:03, 62625.26it/s] 64%|██████▍   | 355959/552076 [00:08<00:03, 64407.45it/s] 66%|██████▌   | 362459/552076 [00:08<00:03, 60480.70it/s] 67%|██████▋   | 369319/552076 [00:08<00:02, 62704.97it/s] 68%|██████▊   | 375809/552076 [00:08<00:02, 63345.72it/s] 69%|██████▉   | 382258/552076 [00:08<00:02, 63684.64it/s] 70%|███████   | 388693/552076 [00:08<00:02, 63882.59it/s] 72%|███████▏  | 395534/552076 [00:08<00:02, 65176.10it/s] 73%|███████▎  | 402372/552076 [00:08<00:02, 66105.27it/s] 74%|███████▍  | 409005/552076 [00:08<00:02, 56898.42it/s] 75%|███████▌  | 414937/552076 [00:09<00:02, 54179.89it/s] 76%|███████▋  | 421472/552076 [00:09<00:02, 55835.89it/s] 77%|███████▋  | 427500/552076 [00:09<00:02, 57098.74it/s] 79%|███████▊  | 434207/552076 [00:09<00:01, 59459.83it/s] 80%|███████▉  | 440257/552076 [00:09<00:02, 51621.64it/s] 81%|████████  | 445677/552076 [00:09<00:02, 39071.90it/s] 82%|████████▏ | 450219/552076 [00:09<00:03, 33647.67it/s] 82%|████████▏ | 454161/552076 [00:10<00:03, 30507.27it/s] 83%|████████▎ | 457672/552076 [00:10<00:03, 29033.89it/s] 83%|████████▎ | 460913/552076 [00:10<00:03, 27149.84it/s] 84%|████████▍ | 463889/552076 [00:10<00:03, 26201.79it/s] 85%|████████▍ | 466699/552076 [00:10<00:03, 26014.85it/s] 85%|████████▌ | 469434/552076 [00:10<00:03, 25377.12it/s] 86%|████████▌ | 472069/552076 [00:10<00:03, 25488.35it/s] 86%|████████▌ | 474724/552076 [00:10<00:03, 25233.90it/s] 86%|████████▋ | 477296/552076 [00:11<00:02, 24949.83it/s] 87%|████████▋ | 479914/552076 [00:11<00:02, 25306.12it/s] 87%|████████▋ | 482470/552076 [00:11<00:02, 24816.81it/s] 88%|████████▊ | 484984/552076 [00:11<00:02, 24888.27it/s] 88%|████████▊ | 487612/552076 [00:11<00:02, 25289.65it/s] 89%|████████▉ | 490269/552076 [00:11<00:02, 25660.55it/s] 89%|████████▉ | 492845/552076 [00:11<00:02, 24921.09it/s] 90%|████████▉ | 495486/552076 [00:11<00:02, 25349.58it/s] 90%|█████████ | 498150/552076 [00:11<00:02, 25722.17it/s] 91%|█████████ | 500731/552076 [00:11<00:02, 24973.46it/s] 91%|█████████ | 503315/552076 [00:12<00:01, 25227.21it/s] 92%|█████████▏| 505965/552076 [00:12<00:01, 25595.36it/s] 92%|█████████▏| 508532/552076 [00:12<00:01, 24912.84it/s] 93%|█████████▎| 511309/552076 [00:12<00:01, 24968.00it/s] 93%|█████████▎| 513936/552076 [00:12<00:01, 25086.41it/s] 94%|█████████▎| 516586/552076 [00:12<00:01, 25493.67it/s] 94%|█████████▍| 519153/552076 [00:12<00:01, 25141.62it/s] 94%|█████████▍| 521672/552076 [00:12<00:01, 24471.62it/s] 95%|█████████▍| 524127/552076 [00:13<00:01, 18882.21it/s] 95%|█████████▌| 526215/552076 [00:13<00:01, 18257.21it/s] 96%|█████████▌| 528185/552076 [00:13<00:01, 18293.04it/s] 96%|█████████▌| 530230/552076 [00:13<00:01, 18491.67it/s] 96%|█████████▋| 532345/552076 [00:13<00:01, 19215.77it/s] 97%|█████████▋| 534839/552076 [00:13<00:00, 20636.47it/s] 97%|█████████▋| 537427/552076 [00:13<00:00, 21971.56it/s] 98%|█████████▊| 539954/552076 [00:13<00:00, 22866.38it/s] 98%|█████████▊| 542406/552076 [00:13<00:00, 23051.36it/s] 99%|█████████▊| 545022/552076 [00:13<00:00, 23643.26it/s] 99%|█████████▉| 547596/552076 [00:14<00:00, 24234.69it/s]100%|█████████▉| 550227/552076 [00:14<00:00, 24372.09it/s]100%|██████████| 552076/552076 [00:14<00:00, 38726.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6028/552076 [00:00<00:09, 59405.33it/s]  2%|▏         | 12124/552076 [00:00<00:11, 47708.00it/s]  3%|▎         | 16276/552076 [00:00<00:11, 45665.59it/s]  4%|▍         | 21323/552076 [00:00<00:11, 46356.07it/s]  5%|▍         | 25580/552076 [00:00<00:11, 45150.88it/s]  5%|▌         | 30202/552076 [00:00<00:11, 45372.48it/s]  6%|▋         | 34563/552076 [00:00<00:11, 44208.88it/s]  7%|▋         | 39792/552076 [00:00<00:11, 46357.12it/s]  8%|▊         | 44167/552076 [00:01<00:13, 38705.59it/s]  9%|▊         | 48068/552076 [00:01<00:14, 35387.07it/s]  9%|▉         | 51684/552076 [00:01<00:17, 29034.15it/s] 10%|▉         | 54829/552076 [00:01<00:18, 27313.23it/s] 10%|█         | 57750/552076 [00:01<00:18, 26324.84it/s] 11%|█         | 60523/552076 [00:01<00:18, 26294.09it/s] 11%|█▏        | 63251/552076 [00:01<00:18, 26384.46it/s] 12%|█▏        | 65959/552076 [00:01<00:19, 25336.51it/s] 12%|█▏        | 68550/552076 [00:02<00:19, 25118.77it/s] 13%|█▎        | 71555/552076 [00:02<00:18, 26419.16it/s] 14%|█▎        | 74698/552076 [00:02<00:18, 26309.72it/s] 14%|█▍        | 77513/552076 [00:02<00:18, 25408.97it/s] 15%|█▍        | 80937/552076 [00:02<00:17, 27539.81it/s] 15%|█▌        | 83764/552076 [00:02<00:17, 26241.33it/s] 16%|█▌        | 86952/552076 [00:02<00:17, 26598.95it/s] 16%|█▋        | 89877/552076 [00:02<00:16, 27342.17it/s] 17%|█▋        | 92649/552076 [00:02<00:17, 26298.67it/s] 17%|█▋        | 95516/552076 [00:03<00:17, 26295.72it/s] 18%|█▊        | 98170/552076 [00:03<00:17, 25928.59it/s] 18%|█▊        | 100781/552076 [00:03<00:17, 25182.39it/s] 19%|█▉        | 103903/552076 [00:03<00:17, 26285.87it/s] 19%|█▉        | 106557/552076 [00:03<00:17, 25673.10it/s] 20%|█▉        | 109578/552076 [00:03<00:16, 26582.61it/s] 20%|██        | 112259/552076 [00:03<00:17, 24802.14it/s] 21%|██        | 114838/552076 [00:03<00:17, 24623.94it/s] 21%|██▏       | 117865/552076 [00:03<00:16, 26082.92it/s] 22%|██▏       | 120517/552076 [00:04<00:16, 26000.63it/s] 22%|██▏       | 123148/552076 [00:04<00:16, 25842.02it/s] 23%|██▎       | 125813/552076 [00:04<00:16, 25325.67it/s] 23%|██▎       | 128501/552076 [00:04<00:16, 25543.31it/s] 24%|██▎       | 131068/552076 [00:04<00:16, 25244.67it/s] 24%|██▍       | 134218/552076 [00:04<00:16, 25577.83it/s] 25%|██▍       | 136940/552076 [00:04<00:16, 25820.93it/s] 25%|██▌       | 140086/552076 [00:04<00:15, 27078.34it/s] 26%|██▌       | 142815/552076 [00:04<00:15, 26375.31it/s] 26%|██▋       | 145749/552076 [00:04<00:15, 26052.48it/s] 27%|██▋       | 149105/552076 [00:05<00:14, 27926.64it/s] 28%|██▊       | 151946/552076 [00:05<00:15, 25602.01it/s] 28%|██▊       | 154605/552076 [00:05<00:16, 24821.68it/s] 28%|██▊       | 157143/552076 [00:05<00:16, 23746.63it/s] 29%|██▉       | 159838/552076 [00:05<00:16, 23346.51it/s] 29%|██▉       | 162208/552076 [00:05<00:16, 23413.37it/s] 30%|██▉       | 164575/552076 [00:05<00:17, 22354.44it/s] 30%|███       | 167416/552076 [00:05<00:16, 23145.72it/s] 31%|███       | 170317/552076 [00:06<00:16, 23791.83it/s] 31%|███▏      | 172857/552076 [00:06<00:16, 23609.19it/s] 32%|███▏      | 175485/552076 [00:06<00:16, 23010.34it/s] 32%|███▏      | 178325/552076 [00:06<00:15, 24307.77it/s] 33%|███▎      | 180949/552076 [00:06<00:15, 23355.64it/s] 33%|███▎      | 183549/552076 [00:06<00:15, 24090.32it/s] 34%|███▎      | 185985/552076 [00:06<00:15, 22905.10it/s] 34%|███▍      | 188595/552076 [00:06<00:15, 23297.74it/s] 35%|███▍      | 191660/552076 [00:06<00:14, 24881.44it/s] 35%|███▌      | 194195/552076 [00:07<00:14, 24732.57it/s] 36%|███▌      | 196701/552076 [00:07<00:14, 23888.80it/s] 36%|███▌      | 199318/552076 [00:07<00:14, 24209.54it/s] 37%|███▋      | 201761/552076 [00:07<00:14, 23946.40it/s] 37%|███▋      | 204366/552076 [00:07<00:14, 24034.78it/s] 37%|███▋      | 206884/552076 [00:07<00:14, 23991.75it/s] 38%|███▊      | 209291/552076 [00:07<00:14, 23834.42it/s] 38%|███▊      | 212466/552076 [00:07<00:13, 25167.66it/s] 39%|███▉      | 215007/552076 [00:07<00:13, 25131.52it/s] 39%|███▉      | 217537/552076 [00:07<00:14, 23187.52it/s] 40%|███▉      | 219898/552076 [00:08<00:14, 23157.91it/s] 40%|████      | 222294/552076 [00:08<00:14, 22207.24it/s] 41%|████      | 224771/552076 [00:08<00:14, 22918.44it/s] 41%|████      | 227220/552076 [00:08<00:14, 22221.02it/s] 42%|████▏     | 230176/552076 [00:08<00:13, 24008.56it/s] 42%|████▏     | 233150/552076 [00:08<00:12, 25159.13it/s] 43%|████▎     | 235721/552076 [00:08<00:12, 24801.18it/s] 43%|████▎     | 238241/552076 [00:08<00:12, 24755.86it/s] 44%|████▎     | 240745/552076 [00:08<00:13, 23640.04it/s] 44%|████▍     | 243139/552076 [00:09<00:13, 23248.86it/s] 44%|████▍     | 245653/552076 [00:09<00:12, 23785.58it/s] 45%|████▌     | 248580/552076 [00:09<00:12, 25201.56it/s] 46%|████▌     | 251454/552076 [00:09<00:11, 25200.67it/s] 46%|████▌     | 254226/552076 [00:09<00:11, 25906.99it/s] 47%|████▋     | 256840/552076 [00:09<00:12, 24476.84it/s] 47%|████▋     | 259605/552076 [00:09<00:11, 25022.62it/s] 47%|████▋     | 262133/552076 [00:09<00:11, 24730.50it/s] 48%|████▊     | 265119/552076 [00:09<00:11, 25417.07it/s] 49%|████▊     | 268605/552076 [00:10<00:10, 27664.60it/s] 49%|████▉     | 271443/552076 [00:10<00:10, 27469.21it/s] 50%|████▉     | 274240/552076 [00:10<00:10, 25512.80it/s] 50%|█████     | 277144/552076 [00:10<00:11, 24750.49it/s] 51%|█████     | 279716/552076 [00:10<00:11, 24669.07it/s] 51%|█████     | 282440/552076 [00:10<00:10, 24638.93it/s] 52%|█████▏    | 285482/552076 [00:10<00:10, 26054.75it/s] 52%|█████▏    | 288699/552076 [00:10<00:09, 27126.42it/s] 53%|█████▎    | 292215/552076 [00:10<00:09, 27844.97it/s] 53%|█████▎    | 295032/552076 [00:11<00:10, 25583.71it/s] 54%|█████▍    | 297872/552076 [00:11<00:09, 25452.32it/s] 54%|█████▍    | 300670/552076 [00:11<00:09, 25510.96it/s] 55%|█████▌    | 303954/552076 [00:11<00:09, 27341.29it/s] 56%|█████▌    | 307192/552076 [00:11<00:08, 28421.41it/s] 56%|█████▋    | 310604/552076 [00:11<00:08, 29920.21it/s] 57%|█████▋    | 313929/552076 [00:11<00:07, 30845.95it/s] 57%|█████▋    | 317153/552076 [00:11<00:07, 30515.92it/s] 58%|█████▊    | 320681/552076 [00:11<00:07, 31399.61it/s] 59%|█████▊    | 323851/552076 [00:12<00:07, 29160.20it/s] 60%|██████    | 331308/552076 [00:12<00:06, 35678.08it/s] 62%|██████▏   | 342497/552076 [00:12<00:04, 44840.83it/s] 63%|██████▎   | 350445/552076 [00:12<00:03, 51584.77it/s] 65%|██████▌   | 358904/552076 [00:12<00:03, 58423.38it/s] 66%|██████▋   | 366731/552076 [00:12<00:02, 63232.46it/s] 68%|██████▊   | 375794/552076 [00:12<00:02, 69213.57it/s] 70%|██████▉   | 386197/552076 [00:12<00:02, 76938.40it/s] 72%|███████▏  | 397281/552076 [00:12<00:01, 84711.15it/s] 74%|███████▎  | 406663/552076 [00:12<00:01, 79076.40it/s] 76%|███████▌  | 417407/552076 [00:13<00:01, 85876.88it/s] 77%|███████▋  | 426665/552076 [00:13<00:01, 78178.34it/s] 79%|███████▉  | 435901/552076 [00:13<00:01, 81953.28it/s] 81%|████████  | 447451/552076 [00:13<00:01, 89775.31it/s] 83%|████████▎ | 456982/552076 [00:13<00:01, 82110.03it/s] 85%|████████▍ | 467521/552076 [00:13<00:00, 87005.53it/s] 86%|████████▋ | 476661/552076 [00:13<00:00, 88178.85it/s] 89%|████████▊ | 488692/552076 [00:13<00:00, 95858.93it/s] 91%|█████████ | 500832/552076 [00:13<00:00, 102315.51it/s] 93%|█████████▎| 511474/552076 [00:14<00:00, 86634.86it/s]  95%|█████████▍| 523347/552076 [00:14<00:00, 94279.23it/s] 97%|█████████▋| 533946/552076 [00:14<00:00, 97511.06it/s] 99%|█████████▊| 544817/552076 [00:14<00:00, 100620.37it/s]100%|██████████| 552076/552076 [00:14<00:00, 38161.51it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10185/552076 [00:00<00:05, 101843.06it/s]  3%|▎         | 16950/552076 [00:00<00:06, 87951.97it/s]   5%|▌         | 27915/552076 [00:00<00:05, 93502.47it/s]  7%|▋         | 37326/552076 [00:00<00:05, 93682.80it/s]  8%|▊         | 44481/552076 [00:00<00:06, 81619.66it/s] 10%|█         | 55911/552076 [00:00<00:05, 89276.22it/s] 12%|█▏        | 66485/552076 [00:00<00:05, 92732.28it/s] 14%|█▎        | 75464/552076 [00:00<00:05, 91828.97it/s] 16%|█▌        | 87134/552076 [00:00<00:04, 98099.46it/s] 18%|█▊        | 98555/552076 [00:01<00:04, 102432.28it/s] 20%|█▉        | 109828/552076 [00:01<00:04, 105317.53it/s] 22%|██▏       | 120369/552076 [00:01<00:04, 96040.61it/s]  24%|██▍       | 132154/552076 [00:01<00:04, 101684.74it/s] 26%|██▌       | 142918/552076 [00:01<00:03, 103400.92it/s] 28%|██▊       | 155052/552076 [00:01<00:03, 108199.05it/s] 30%|███       | 166498/552076 [00:01<00:03, 110001.52it/s] 32%|███▏      | 177620/552076 [00:01<00:03, 104688.01it/s] 34%|███▍      | 189933/552076 [00:01<00:03, 109612.94it/s] 36%|███▋      | 201255/552076 [00:01<00:03, 110670.18it/s] 39%|███▊      | 213412/552076 [00:02<00:02, 113728.65it/s] 41%|████      | 225368/552076 [00:02<00:02, 115416.04it/s] 43%|████▎     | 237209/552076 [00:02<00:02, 116295.38it/s] 45%|████▌     | 248894/552076 [00:02<00:02, 115922.53it/s] 47%|████▋     | 260659/552076 [00:02<00:02, 116434.71it/s] 49%|████▉     | 272507/552076 [00:02<00:02, 117039.88it/s] 51%|█████▏    | 284232/552076 [00:02<00:02, 115494.69it/s] 54%|█████▎    | 295889/552076 [00:02<00:02, 115812.84it/s] 56%|█████▌    | 307883/552076 [00:02<00:02, 117019.34it/s] 58%|█████▊    | 319607/552076 [00:02<00:01, 117082.81it/s] 60%|██████    | 331491/552076 [00:03<00:01, 117602.02it/s] 62%|██████▏   | 343269/552076 [00:03<00:01, 117655.22it/s] 64%|██████▍   | 355263/552076 [00:03<00:01, 118328.82it/s] 66%|██████▋   | 367101/552076 [00:03<00:01, 118240.81it/s] 69%|██████▊   | 378928/552076 [00:03<00:01, 117212.13it/s] 71%|███████   | 390654/552076 [00:03<00:01, 116494.23it/s] 73%|███████▎  | 402308/552076 [00:03<00:01, 113979.47it/s] 75%|███████▌  | 414079/552076 [00:03<00:01, 115072.55it/s] 77%|███████▋  | 425719/552076 [00:03<00:01, 115467.46it/s] 79%|███████▉  | 437481/552076 [00:03<00:00, 116103.87it/s] 81%|████████▏ | 449099/552076 [00:04<00:00, 110922.34it/s] 84%|████████▎ | 461139/552076 [00:04<00:00, 113603.44it/s] 86%|████████▌ | 473087/552076 [00:04<00:00, 115301.89it/s] 88%|████████▊ | 484702/552076 [00:04<00:00, 115554.15it/s] 90%|█████████ | 496894/552076 [00:04<00:00, 117390.03it/s] 92%|█████████▏| 508662/552076 [00:04<00:00, 116485.57it/s] 94%|█████████▍| 520586/552076 [00:04<00:00, 117274.87it/s] 97%|█████████▋| 532779/552076 [00:04<00:00, 118631.71it/s] 99%|█████████▊| 544658/552076 [00:04<00:00, 118512.60it/s]100%|██████████| 552076/552076 [00:04<00:00, 110974.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7552/552076 [00:00<00:07, 75514.67it/s]  3%|▎         | 18854/552076 [00:00<00:06, 83863.52it/s]  5%|▌         | 30262/552076 [00:00<00:05, 91101.74it/s]  7%|▋         | 40812/552076 [00:00<00:05, 94989.32it/s]  9%|▉         | 51902/552076 [00:00<00:05, 98496.05it/s] 11%|█         | 60735/552076 [00:00<00:05, 85328.04it/s] 13%|█▎        | 70061/552076 [00:00<00:05, 87560.97it/s] 15%|█▍        | 82074/552076 [00:00<00:04, 95311.78it/s] 17%|█▋        | 94118/552076 [00:00<00:04, 101675.13it/s] 19%|█▉        | 106178/552076 [00:01<00:04, 106697.15it/s] 21%|██▏       | 118295/552076 [00:01<00:03, 110661.94it/s] 24%|██▎       | 130391/552076 [00:01<00:03, 113561.08it/s] 26%|██▌       | 142500/552076 [00:01<00:03, 115717.95it/s] 28%|██▊       | 154491/552076 [00:01<00:03, 116944.25it/s] 30%|███       | 166321/552076 [00:01<00:03, 117345.40it/s] 32%|███▏      | 178105/552076 [00:01<00:03, 114785.79it/s] 34%|███▍      | 189631/552076 [00:01<00:03, 96195.78it/s]  37%|███▋      | 203246/552076 [00:01<00:03, 105481.28it/s] 40%|███▉      | 220614/552076 [00:02<00:02, 119565.17it/s] 42%|████▏     | 233663/552076 [00:02<00:02, 110989.83it/s] 44%|████▍     | 245650/552076 [00:02<00:02, 111623.48it/s] 47%|████▋     | 257435/552076 [00:02<00:02, 100112.57it/s] 49%|████▊     | 268105/552076 [00:02<00:03, 94495.83it/s]  50%|█████     | 278081/552076 [00:02<00:03, 88325.05it/s] 52%|█████▏    | 287364/552076 [00:02<00:02, 89622.48it/s] 54%|█████▎    | 296646/552076 [00:02<00:03, 82840.71it/s] 55%|█████▌    | 305256/552076 [00:03<00:03, 64931.87it/s] 57%|█████▋    | 312578/552076 [00:03<00:03, 63927.43it/s] 58%|█████▊    | 319555/552076 [00:03<00:04, 57572.31it/s] 59%|█████▉    | 327064/552076 [00:03<00:03, 61903.79it/s] 61%|██████    | 336579/552076 [00:03<00:03, 69151.32it/s] 63%|██████▎   | 345451/552076 [00:03<00:02, 74050.74it/s] 65%|██████▍   | 356950/552076 [00:03<00:02, 82904.37it/s] 67%|██████▋   | 368484/552076 [00:03<00:02, 90542.87it/s] 69%|██████▉   | 379743/552076 [00:03<00:01, 96190.72it/s] 71%|███████   | 389949/552076 [00:04<00:01, 81942.27it/s] 72%|███████▏  | 399726/552076 [00:04<00:01, 84976.08it/s] 74%|███████▍  | 408797/552076 [00:04<00:01, 81003.69it/s] 76%|███████▌  | 418265/552076 [00:04<00:01, 84671.93it/s] 78%|███████▊  | 430437/552076 [00:04<00:01, 93179.61it/s] 80%|████████  | 442680/552076 [00:04<00:01, 100372.06it/s] 82%|████████▏ | 454899/552076 [00:04<00:00, 106052.46it/s] 85%|████████▍ | 467118/552076 [00:04<00:00, 110425.94it/s] 87%|████████▋ | 479337/552076 [00:04<00:00, 113709.66it/s] 89%|████████▉ | 491614/552076 [00:05<00:00, 116283.41it/s] 91%|█████████▏| 504001/552076 [00:05<00:00, 118457.99it/s] 94%|█████████▎| 516337/552076 [00:05<00:00, 119886.31it/s] 96%|█████████▌| 528589/552076 [00:05<00:00, 120663.21it/s] 98%|█████████▊| 540736/552076 [00:05<00:00, 112698.73it/s]100%|██████████| 552076/552076 [00:05<00:00, 98996.50it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6603/552076 [00:00<00:08, 66029.75it/s]  2%|▏         | 12911/552076 [00:00<00:08, 65115.32it/s]  4%|▎         | 19517/552076 [00:00<00:08, 65394.13it/s]  5%|▍         | 25923/552076 [00:00<00:08, 64986.84it/s]  6%|▌         | 32200/552076 [00:00<00:08, 64304.50it/s]  7%|▋         | 38698/552076 [00:00<00:07, 64503.49it/s]  8%|▊         | 45138/552076 [00:00<00:07, 64470.58it/s]  9%|▉         | 51564/552076 [00:00<00:07, 64405.43it/s] 11%|█         | 58137/552076 [00:00<00:07, 64794.58it/s] 12%|█▏        | 64403/552076 [00:01<00:07, 64136.85it/s] 13%|█▎        | 70916/552076 [00:01<00:07, 64430.25it/s] 14%|█▍        | 77381/552076 [00:01<00:07, 64495.67it/s] 15%|█▌        | 83741/552076 [00:01<00:07, 64074.36it/s] 16%|█▋        | 90504/552076 [00:01<00:07, 65100.11it/s] 18%|█▊        | 97047/552076 [00:01<00:06, 65195.77it/s] 19%|█▉        | 103659/552076 [00:01<00:06, 65469.64it/s] 20%|█▉        | 110187/552076 [00:01<00:06, 64688.97it/s] 21%|██        | 116887/552076 [00:01<00:06, 65364.97it/s] 22%|██▏       | 123497/552076 [00:01<00:06, 65582.38it/s] 24%|██▎       | 130052/552076 [00:02<00:06, 64927.18it/s] 25%|██▍       | 136791/552076 [00:02<00:06, 65644.56it/s] 26%|██▌       | 143413/552076 [00:02<00:06, 65815.50it/s] 27%|██▋       | 149996/552076 [00:02<00:06, 65307.47it/s] 28%|██▊       | 156658/552076 [00:02<00:06, 65693.24it/s] 30%|██▉       | 163235/552076 [00:02<00:05, 65713.97it/s] 31%|███       | 169980/552076 [00:02<00:05, 66224.46it/s] 32%|███▏      | 176605/552076 [00:02<00:05, 65272.84it/s] 33%|███▎      | 183214/552076 [00:02<00:05, 65515.65it/s] 34%|███▍      | 189885/552076 [00:02<00:05, 65869.08it/s] 36%|███▌      | 196550/552076 [00:03<00:05, 66101.36it/s] 37%|███▋      | 203163/552076 [00:03<00:05, 61280.44it/s] 38%|███▊      | 209363/552076 [00:03<00:05, 60335.24it/s] 39%|███▉      | 215450/552076 [00:03<00:05, 59942.01it/s] 40%|████      | 221483/552076 [00:03<00:05, 59038.33it/s] 41%|████      | 227417/552076 [00:03<00:06, 49790.07it/s] 42%|████▏     | 232665/552076 [00:03<00:06, 48567.58it/s] 43%|████▎     | 237717/552076 [00:03<00:07, 39765.26it/s] 44%|████▍     | 243974/552076 [00:04<00:06, 44646.46it/s] 45%|████▌     | 250342/552076 [00:04<00:06, 49043.17it/s] 46%|████▋     | 256533/552076 [00:04<00:05, 52047.96it/s] 48%|████▊     | 262699/552076 [00:04<00:05, 54599.96it/s] 49%|████▉     | 269274/552076 [00:04<00:04, 57524.86it/s] 50%|████▉     | 275910/552076 [00:04<00:04, 59916.80it/s] 51%|█████     | 282274/552076 [00:04<00:04, 60984.96it/s] 52%|█████▏    | 288981/552076 [00:04<00:04, 62688.79it/s] 54%|█████▎    | 296127/552076 [00:04<00:03, 65084.64it/s] 55%|█████▍    | 303107/552076 [00:04<00:03, 66429.63it/s] 57%|█████▋    | 313557/552076 [00:05<00:03, 74579.69it/s] 58%|█████▊    | 321447/552076 [00:05<00:03, 75825.19it/s] 60%|██████    | 332726/552076 [00:05<00:02, 84092.57it/s] 62%|██████▏   | 344364/552076 [00:05<00:02, 91725.62it/s] 65%|██████▍   | 356385/552076 [00:05<00:01, 98743.35it/s] 67%|██████▋   | 368013/552076 [00:05<00:01, 103420.15it/s] 69%|██████▊   | 378783/552076 [00:05<00:01, 97377.66it/s]  70%|███████   | 388893/552076 [00:05<00:01, 94825.23it/s] 72%|███████▏  | 398651/552076 [00:05<00:02, 69657.14it/s] 74%|███████▎  | 406772/552076 [00:06<00:02, 57717.26it/s] 75%|███████▌  | 414563/552076 [00:06<00:02, 60885.07it/s] 76%|███████▋  | 421704/552076 [00:06<00:02, 63700.39it/s] 78%|███████▊  | 429927/552076 [00:06<00:01, 68317.98it/s] 79%|███████▉  | 437294/552076 [00:06<00:01, 66555.40it/s] 81%|████████  | 444507/552076 [00:06<00:01, 68133.93it/s] 82%|████████▏ | 451950/552076 [00:06<00:01, 69905.85it/s] 83%|████████▎ | 459548/552076 [00:06<00:01, 71622.86it/s] 85%|████████▍ | 466866/552076 [00:07<00:01, 71575.97it/s] 86%|████████▌ | 474278/552076 [00:07<00:01, 72320.62it/s] 87%|████████▋ | 481588/552076 [00:07<00:00, 71016.37it/s] 89%|████████▊ | 488750/552076 [00:07<00:00, 64816.05it/s] 91%|█████████ | 500573/552076 [00:07<00:00, 74977.20it/s] 92%|█████████▏| 510361/552076 [00:07<00:00, 80637.19it/s] 95%|█████████▍| 521769/552076 [00:07<00:00, 88410.81it/s] 96%|█████████▌| 531258/552076 [00:07<00:00, 89049.85it/s] 98%|█████████▊| 540618/552076 [00:07<00:00, 85750.79it/s]100%|█████████▉| 550715/552076 [00:07<00:00, 89811.22it/s]100%|██████████| 552076/552076 [00:07<00:00, 69051.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11773/552076 [00:00<00:04, 117721.41it/s]  4%|▍         | 23773/552076 [00:00<00:04, 118393.46it/s]  6%|▌         | 32772/552076 [00:00<00:04, 108150.90it/s]  8%|▊         | 42254/552076 [00:00<00:04, 103772.70it/s] 10%|▉         | 53944/552076 [00:00<00:04, 107389.15it/s] 12%|█▏        | 65753/552076 [00:00<00:04, 110388.20it/s] 14%|█▎        | 75528/552076 [00:00<00:04, 103822.36it/s] 15%|█▌        | 85106/552076 [00:00<00:05, 87174.87it/s]  17%|█▋        | 95936/552076 [00:00<00:04, 92592.34it/s] 20%|█▉        | 107831/552076 [00:01<00:04, 99184.34it/s] 22%|██▏       | 119946/552076 [00:01<00:04, 104887.47it/s] 24%|██▎       | 130623/552076 [00:01<00:04, 99325.21it/s]  26%|██▌       | 141982/552076 [00:01<00:03, 103212.28it/s] 28%|██▊       | 152478/552076 [00:01<00:04, 88510.85it/s]  29%|██▉       | 161818/552076 [00:01<00:04, 89317.12it/s] 31%|███▏      | 173104/552076 [00:01<00:03, 95278.73it/s] 33%|███▎      | 184886/552076 [00:01<00:03, 100632.90it/s] 35%|███▌      | 195276/552076 [00:01<00:03, 92104.05it/s]  37%|███▋      | 204856/552076 [00:02<00:04, 82199.66it/s] 39%|███▉      | 215042/552076 [00:02<00:03, 87251.60it/s] 41%|████      | 224172/552076 [00:02<00:03, 84617.56it/s] 42%|████▏     | 233556/552076 [00:02<00:03, 87068.43it/s] 44%|████▍     | 244893/552076 [00:02<00:03, 93580.95it/s] 46%|████▋     | 256521/552076 [00:02<00:02, 99401.36it/s] 48%|████▊     | 267210/552076 [00:02<00:02, 101533.16it/s] 50%|█████     | 278029/552076 [00:02<00:02, 103441.62it/s] 52%|█████▏    | 289452/552076 [00:02<00:02, 106456.53it/s] 54%|█████▍    | 300237/552076 [00:03<00:02, 106824.40it/s] 56%|█████▋    | 311877/552076 [00:03<00:02, 109525.43it/s] 59%|█████▊    | 323026/552076 [00:03<00:02, 110106.52it/s] 61%|██████    | 334098/552076 [00:03<00:01, 109687.34it/s] 63%|██████▎   | 345330/552076 [00:03<00:01, 110461.17it/s] 65%|██████▍   | 356408/552076 [00:03<00:01, 110020.97it/s] 67%|██████▋   | 367657/552076 [00:03<00:01, 110748.23it/s] 69%|██████▊   | 379393/552076 [00:03<00:01, 112651.29it/s] 71%|███████   | 390776/552076 [00:03<00:01, 113000.92it/s] 73%|███████▎  | 402091/552076 [00:03<00:01, 112159.27it/s] 75%|███████▍  | 413483/552076 [00:04<00:01, 112681.22it/s] 77%|███████▋  | 424760/552076 [00:04<00:01, 111861.68it/s] 79%|███████▉  | 435954/552076 [00:04<00:01, 110865.93it/s] 81%|████████  | 447048/552076 [00:04<00:00, 110884.52it/s] 83%|████████▎ | 458142/552076 [00:04<00:00, 110626.96it/s] 85%|████████▍ | 469209/552076 [00:04<00:00, 108392.27it/s] 87%|████████▋ | 480550/552076 [00:04<00:00, 109849.61it/s] 89%|████████▉ | 491549/552076 [00:04<00:00, 104037.07it/s] 91%|█████████ | 502637/552076 [00:04<00:00, 105998.68it/s] 93%|█████████▎| 514442/552076 [00:04<00:00, 109345.48it/s] 95%|█████████▌| 526026/552076 [00:05<00:00, 111214.04it/s] 97%|█████████▋| 537776/552076 [00:05<00:00, 113027.38it/s] 99%|█████████▉| 549126/552076 [00:05<00:00, 112491.29it/s]100%|██████████| 552076/552076 [00:05<00:00, 104057.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11189/552076 [00:00<00:04, 111886.91it/s]  4%|▍         | 23243/552076 [00:00<00:04, 114348.07it/s]  6%|▋         | 34950/552076 [00:00<00:04, 115150.49it/s]  9%|▊         | 46955/552076 [00:00<00:04, 116576.65it/s] 11%|█         | 58937/552076 [00:00<00:04, 117531.02it/s] 13%|█▎        | 70483/552076 [00:00<00:04, 116900.04it/s] 15%|█▍        | 81861/552076 [00:00<00:04, 113962.91it/s] 17%|█▋        | 92358/552076 [00:00<00:04, 94618.62it/s]  19%|█▉        | 104516/552076 [00:00<00:04, 101361.22it/s] 21%|██        | 116166/552076 [00:01<00:04, 105472.86it/s] 23%|██▎       | 128799/552076 [00:01<00:03, 110968.72it/s] 25%|██▌       | 140041/552076 [00:01<00:03, 107094.69it/s] 27%|██▋       | 150881/552076 [00:01<00:03, 105528.96it/s] 29%|██▉       | 161531/552076 [00:01<00:03, 101833.62it/s] 31%|███       | 171810/552076 [00:01<00:04, 91329.16it/s]  33%|███▎      | 181214/552076 [00:01<00:05, 73463.90it/s] 35%|███▍      | 191318/552076 [00:01<00:04, 77496.18it/s] 36%|███▋      | 201117/552076 [00:02<00:04, 82683.06it/s] 38%|███▊      | 210808/552076 [00:02<00:03, 86490.53it/s] 40%|███▉      | 219857/552076 [00:02<00:04, 73674.68it/s] 41%|████▏     | 228520/552076 [00:02<00:04, 77134.98it/s] 43%|████▎     | 239601/552076 [00:02<00:03, 84871.24it/s] 45%|████▌     | 248653/552076 [00:02<00:03, 80683.56it/s] 47%|████▋     | 257408/552076 [00:02<00:03, 82626.31it/s] 48%|████▊     | 265990/552076 [00:02<00:03, 81801.29it/s] 50%|█████     | 276118/552076 [00:02<00:03, 86809.67it/s] 52%|█████▏    | 285040/552076 [00:03<00:03, 85947.76it/s] 53%|█████▎    | 293806/552076 [00:03<00:03, 85141.36it/s] 55%|█████▍    | 302709/552076 [00:03<00:02, 86270.22it/s] 56%|█████▋    | 311425/552076 [00:03<00:02, 85544.83it/s] 59%|█████▊    | 323462/552076 [00:03<00:02, 93674.19it/s] 61%|██████    | 334898/552076 [00:03<00:02, 99048.86it/s] 63%|██████▎   | 345756/552076 [00:03<00:02, 101726.01it/s] 65%|██████▍   | 356967/552076 [00:03<00:01, 104633.14it/s] 67%|██████▋   | 368437/552076 [00:03<00:01, 107460.00it/s] 69%|██████▉   | 380564/552076 [00:03<00:01, 111258.75it/s] 71%|███████   | 391821/552076 [00:04<00:01, 101798.11it/s] 73%|███████▎  | 403921/552076 [00:04<00:01, 106886.40it/s] 75%|███████▌  | 414851/552076 [00:04<00:01, 96293.11it/s]  77%|███████▋  | 424848/552076 [00:04<00:01, 94896.04it/s] 79%|███████▊  | 434600/552076 [00:04<00:01, 94120.94it/s] 81%|████████  | 444925/552076 [00:04<00:01, 96684.13it/s] 82%|████████▏ | 455105/552076 [00:04<00:00, 98162.95it/s] 84%|████████▍ | 465030/552076 [00:04<00:00, 95185.81it/s] 86%|████████▌ | 474644/552076 [00:04<00:00, 93327.09it/s] 88%|████████▊ | 484850/552076 [00:05<00:00, 91479.75it/s] 89%|████████▉ | 494059/552076 [00:05<00:00, 91379.39it/s] 91%|█████████▏| 504836/552076 [00:05<00:00, 95747.59it/s] 93%|█████████▎| 515891/552076 [00:05<00:00, 99753.80it/s] 95%|█████████▌| 527111/552076 [00:05<00:00, 103186.55it/s] 98%|█████████▊| 538380/552076 [00:05<00:00, 105862.09it/s] 99%|█████████▉| 549055/552076 [00:05<00:00, 102422.13it/s]100%|██████████| 552076/552076 [00:05<00:00, 96678.17it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5639/552076 [00:00<00:09, 56389.65it/s]  3%|▎         | 14617/552076 [00:00<00:08, 63470.36it/s]  5%|▍         | 25659/552076 [00:00<00:07, 72748.89it/s]  7%|▋         | 36954/552076 [00:00<00:06, 81444.59it/s]  9%|▊         | 47618/552076 [00:00<00:05, 87656.85it/s] 10%|█         | 56743/552076 [00:00<00:05, 88703.21it/s] 12%|█▏        | 65448/552076 [00:00<00:05, 87583.82it/s] 14%|█▍        | 77109/552076 [00:00<00:05, 94651.26it/s] 16%|█▌        | 88784/552076 [00:00<00:04, 100348.69it/s] 18%|█▊        | 98972/552076 [00:01<00:04, 94810.99it/s]  20%|██        | 110570/552076 [00:01<00:04, 100302.32it/s] 22%|██▏       | 120805/552076 [00:01<00:04, 99303.34it/s]  24%|██▍       | 132091/552076 [00:01<00:04, 103014.60it/s] 26%|██▌       | 143271/552076 [00:01<00:03, 105501.70it/s] 28%|██▊       | 154603/552076 [00:01<00:03, 107730.30it/s] 30%|███       | 167542/552076 [00:01<00:03, 113425.21it/s] 32%|███▏      | 179363/552076 [00:01<00:03, 114818.87it/s] 35%|███▍      | 191610/552076 [00:01<00:03, 117010.43it/s] 37%|███▋      | 203634/552076 [00:01<00:02, 117958.65it/s] 39%|███▉      | 216797/552076 [00:02<00:02, 121749.98it/s] 41%|████▏     | 229045/552076 [00:02<00:02, 118333.73it/s] 44%|████▎     | 240951/552076 [00:02<00:03, 99698.61it/s]  46%|████▌     | 251472/552076 [00:02<00:03, 80729.49it/s] 47%|████▋     | 260514/552076 [00:02<00:04, 66666.75it/s] 49%|████▊     | 268564/552076 [00:02<00:04, 67718.49it/s] 50%|█████     | 276100/552076 [00:02<00:03, 69514.53it/s] 52%|█████▏    | 285966/552076 [00:02<00:03, 76273.56it/s] 54%|█████▍    | 298076/552076 [00:03<00:02, 85801.35it/s] 56%|█████▌    | 307455/552076 [00:03<00:02, 87922.62it/s] 58%|█████▊    | 319722/552076 [00:03<00:02, 96086.85it/s] 60%|██████    | 331377/552076 [00:03<00:02, 101428.81it/s] 62%|██████▏   | 343381/552076 [00:03<00:01, 106374.52it/s] 64%|██████▍   | 354445/552076 [00:03<00:01, 99857.14it/s]  66%|██████▌   | 364811/552076 [00:03<00:02, 92240.76it/s] 68%|██████▊   | 374416/552076 [00:03<00:01, 90834.08it/s] 70%|██████▉   | 385880/552076 [00:03<00:01, 96867.20it/s] 72%|███████▏  | 397288/552076 [00:04<00:01, 101458.20it/s] 74%|███████▍  | 408678/552076 [00:04<00:01, 104894.51it/s] 76%|███████▋  | 420965/552076 [00:04<00:01, 109709.10it/s] 78%|███████▊  | 432146/552076 [00:04<00:01, 109935.89it/s] 80%|████████  | 444004/552076 [00:04<00:00, 112393.18it/s] 83%|████████▎ | 455830/552076 [00:04<00:00, 114090.50it/s] 85%|████████▍ | 468353/552076 [00:04<00:00, 117215.30it/s] 87%|████████▋ | 480709/552076 [00:04<00:00, 119048.52it/s] 89%|████████▉ | 493094/552076 [00:04<00:00, 120446.93it/s] 92%|█████████▏| 505527/552076 [00:04<00:00, 121586.01it/s] 94%|█████████▍| 517723/552076 [00:05<00:00, 120134.06it/s] 96%|█████████▌| 529767/552076 [00:05<00:00, 119475.39it/s] 98%|█████████▊| 541930/552076 [00:05<00:00, 120112.81it/s]100%|██████████| 552076/552076 [00:05<00:00, 103068.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6617/552076 [00:00<00:08, 65899.82it/s]  3%|▎         | 16920/552076 [00:00<00:07, 73887.82it/s]  5%|▍         | 26148/552076 [00:00<00:06, 78585.20it/s]  6%|▌         | 32943/552076 [00:00<00:06, 75059.90it/s]  8%|▊         | 44856/552076 [00:00<00:06, 84429.33it/s] 10%|▉         | 52748/552076 [00:00<00:06, 76706.08it/s] 11%|█         | 60169/552076 [00:00<00:06, 71287.78it/s] 12%|█▏        | 67200/552076 [00:00<00:07, 65991.40it/s] 14%|█▍        | 75919/552076 [00:00<00:06, 71182.54it/s] 16%|█▌        | 88000/552076 [00:01<00:05, 81186.76it/s] 18%|█▊        | 100211/552076 [00:01<00:05, 90260.76it/s] 20%|██        | 112179/552076 [00:01<00:04, 97446.81it/s] 22%|██▏       | 122594/552076 [00:01<00:05, 83346.12it/s] 24%|██▍       | 131754/552076 [00:01<00:05, 81257.32it/s] 26%|██▌       | 143897/552076 [00:01<00:04, 90208.92it/s] 28%|██▊       | 156115/552076 [00:01<00:04, 97893.59it/s] 30%|███       | 167566/552076 [00:01<00:03, 102346.85it/s] 33%|███▎      | 179658/552076 [00:01<00:03, 107289.64it/s] 35%|███▍      | 191398/552076 [00:02<00:03, 110133.38it/s] 37%|███▋      | 203654/552076 [00:02<00:03, 113587.60it/s] 39%|███▉      | 215612/552076 [00:02<00:02, 115319.58it/s] 41%|████      | 227622/552076 [00:02<00:02, 116712.16it/s] 43%|████▎     | 239507/552076 [00:02<00:02, 117342.36it/s] 46%|████▌     | 251588/552076 [00:02<00:02, 118359.36it/s] 48%|████▊     | 263654/552076 [00:02<00:02, 119039.31it/s] 50%|████▉     | 275607/552076 [00:02<00:02, 117922.08it/s] 52%|█████▏    | 287490/552076 [00:02<00:02, 118191.18it/s] 54%|█████▍    | 299680/552076 [00:02<00:02, 119277.52it/s] 56%|█████▋    | 311863/552076 [00:03<00:02, 120030.73it/s] 59%|█████▊    | 324174/552076 [00:03<00:01, 120937.82it/s] 61%|██████    | 336326/552076 [00:03<00:01, 121110.37it/s] 63%|██████▎   | 348492/552076 [00:03<00:01, 121273.30it/s] 65%|██████▌   | 360786/552076 [00:03<00:01, 121765.99it/s] 68%|██████▊   | 373016/552076 [00:03<00:01, 121925.48it/s] 70%|██████▉   | 385212/552076 [00:03<00:01, 121755.72it/s] 72%|███████▏  | 397391/552076 [00:03<00:01, 119525.50it/s] 74%|███████▍  | 409504/552076 [00:03<00:01, 120001.21it/s] 76%|███████▋  | 421635/552076 [00:03<00:01, 120389.62it/s] 79%|███████▊  | 433680/552076 [00:04<00:01, 111695.90it/s] 81%|████████  | 445018/552076 [00:04<00:00, 112193.98it/s] 83%|████████▎ | 456655/552076 [00:04<00:00, 113412.87it/s] 85%|████████▍ | 468359/552076 [00:04<00:00, 114474.57it/s] 87%|████████▋ | 480489/552076 [00:04<00:00, 116438.67it/s] 89%|████████▉ | 492667/552076 [00:04<00:00, 117990.68it/s] 91%|█████████▏| 504501/552076 [00:04<00:00, 117626.97it/s] 94%|█████████▎| 516674/552076 [00:04<00:00, 118827.82it/s] 96%|█████████▌| 528703/552076 [00:04<00:00, 119260.65it/s] 98%|█████████▊| 540863/552076 [00:04<00:00, 119950.28it/s]100%|██████████| 552076/552076 [00:05<00:00, 108470.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13229/552076 [00:00<00:04, 132289.50it/s]  5%|▍         | 25074/552076 [00:00<00:04, 127807.94it/s]  7%|▋         | 37045/552076 [00:00<00:04, 125262.29it/s]  9%|▉         | 49082/552076 [00:00<00:04, 123752.20it/s] 11%|█         | 60638/552076 [00:00<00:04, 121175.07it/s] 13%|█▎        | 72853/552076 [00:00<00:03, 121463.09it/s] 15%|█▌        | 85027/552076 [00:00<00:03, 121545.20it/s] 18%|█▊        | 97207/552076 [00:00<00:03, 121619.65it/s] 20%|█▉        | 109305/552076 [00:00<00:03, 121425.43it/s] 22%|██▏       | 121414/552076 [00:01<00:03, 121321.77it/s] 24%|██▍       | 133466/552076 [00:01<00:03, 121079.28it/s] 26%|██▋       | 145444/552076 [00:01<00:03, 120683.97it/s] 29%|██▊       | 157574/552076 [00:01<00:03, 120866.35it/s] 31%|███       | 169535/552076 [00:01<00:03, 119912.61it/s] 33%|███▎      | 181723/552076 [00:01<00:03, 120495.90it/s] 35%|███▌      | 193861/552076 [00:01<00:02, 120758.35it/s] 37%|███▋      | 206190/552076 [00:01<00:02, 121503.98it/s] 40%|███▉      | 218442/552076 [00:01<00:02, 121804.88it/s] 42%|████▏     | 230610/552076 [00:01<00:02, 121765.60it/s] 44%|████▍     | 242919/552076 [00:02<00:02, 122159.69it/s] 46%|████▌     | 255126/552076 [00:02<00:02, 107252.10it/s] 48%|████▊     | 266829/552076 [00:02<00:02, 110007.98it/s] 50%|█████     | 278703/552076 [00:02<00:02, 112489.42it/s] 53%|█████▎    | 290758/552076 [00:02<00:02, 114791.03it/s] 55%|█████▍    | 302379/552076 [00:02<00:02, 106420.46it/s] 57%|█████▋    | 313242/552076 [00:02<00:02, 101908.32it/s] 59%|█████▊    | 323628/552076 [00:02<00:02, 100021.37it/s] 61%|██████    | 335515/552076 [00:02<00:02, 105015.48it/s] 63%|██████▎   | 347606/552076 [00:03<00:01, 109326.21it/s] 65%|██████▌   | 359699/552076 [00:03<00:01, 112566.48it/s] 67%|██████▋   | 371094/552076 [00:03<00:01, 92256.07it/s]  69%|██████▉   | 383231/552076 [00:03<00:01, 99408.68it/s] 72%|███████▏  | 399558/552076 [00:03<00:01, 112622.62it/s] 75%|███████▌  | 416099/552076 [00:03<00:01, 124545.22it/s] 79%|███████▉  | 437291/552076 [00:03<00:00, 142122.77it/s] 82%|████████▏ | 453154/552076 [00:03<00:00, 137465.49it/s] 85%|████████▍ | 468089/552076 [00:03<00:00, 123996.20it/s] 87%|████████▋ | 481571/552076 [00:04<00:00, 122373.22it/s] 91%|█████████ | 501708/552076 [00:04<00:00, 138695.38it/s] 95%|█████████▍| 522962/552076 [00:04<00:00, 154833.93it/s] 98%|█████████▊| 540630/552076 [00:04<00:00, 160795.65it/s]100%|██████████| 552076/552076 [00:04<00:00, 124119.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21718/552076 [00:00<00:02, 217176.58it/s]  6%|▌         | 32017/552076 [00:00<00:03, 162962.80it/s]  8%|▊         | 44969/552076 [00:00<00:03, 151246.12it/s] 12%|█▏        | 67481/552076 [00:00<00:02, 167760.63it/s] 16%|█▌        | 89083/552076 [00:00<00:02, 179810.07it/s] 20%|██        | 111432/552076 [00:00<00:02, 191008.72it/s] 24%|██▍       | 133967/552076 [00:00<00:02, 200158.24it/s] 28%|██▊       | 156971/552076 [00:00<00:01, 208273.83it/s] 32%|███▏      | 179163/552076 [00:00<00:01, 212186.03it/s] 37%|███▋      | 202181/552076 [00:01<00:01, 217280.18it/s] 41%|████      | 225359/552076 [00:01<00:01, 221433.94it/s] 45%|████▍     | 247783/552076 [00:01<00:01, 222268.26it/s] 49%|████▉     | 269923/552076 [00:01<00:01, 220835.23it/s] 53%|█████▎    | 292758/552076 [00:01<00:01, 223035.56it/s] 57%|█████▋    | 315645/552076 [00:01<00:01, 224753.53it/s] 61%|██████    | 338099/552076 [00:01<00:00, 221907.96it/s] 65%|██████▌   | 360283/552076 [00:01<00:00, 212954.31it/s] 69%|██████▉   | 383207/552076 [00:01<00:00, 217588.87it/s] 74%|███████▎  | 406218/552076 [00:01<00:00, 221197.69it/s] 78%|███████▊  | 429342/552076 [00:02<00:00, 224116.56it/s] 82%|████████▏ | 451810/552076 [00:02<00:00, 222379.22it/s] 86%|████████▌ | 474650/552076 [00:02<00:00, 224150.67it/s] 90%|█████████ | 497423/552076 [00:02<00:00, 225210.59it/s] 94%|█████████▍| 519969/552076 [00:02<00:00, 223953.24it/s] 98%|█████████▊| 542383/552076 [00:02<00:00, 219660.73it/s]100%|██████████| 552076/552076 [00:02<00:00, 214486.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22147/552076 [00:00<00:02, 221468.63it/s]  8%|▊         | 45062/552076 [00:00<00:02, 223715.98it/s] 12%|█▏        | 67335/552076 [00:00<00:02, 223416.77it/s] 16%|█▌        | 89319/552076 [00:00<00:02, 222330.19it/s] 20%|██        | 111789/552076 [00:00<00:01, 223034.67it/s] 24%|██▍       | 134260/552076 [00:00<00:01, 223532.32it/s] 28%|██▊       | 156150/552076 [00:00<00:01, 222121.75it/s] 32%|███▏      | 176543/552076 [00:00<00:02, 178008.97it/s] 35%|███▌      | 194467/552076 [00:01<00:02, 141865.86it/s] 39%|███▊      | 213140/552076 [00:01<00:02, 152884.34it/s] 42%|████▏     | 233909/552076 [00:01<00:01, 166026.48it/s] 46%|████▋     | 256397/552076 [00:01<00:01, 180170.58it/s] 50%|█████     | 277866/552076 [00:01<00:01, 189300.51it/s] 54%|█████▍    | 299991/552076 [00:01<00:01, 197872.04it/s] 58%|█████▊    | 322498/552076 [00:01<00:01, 205314.38it/s] 62%|██████▏   | 344598/552076 [00:01<00:00, 209778.68it/s] 66%|██████▋   | 366013/552076 [00:01<00:00, 210716.25it/s] 70%|███████   | 388770/552076 [00:01<00:00, 215502.46it/s] 74%|███████▍  | 411228/552076 [00:02<00:00, 218146.42it/s] 79%|███████▊  | 433853/552076 [00:02<00:00, 220515.33it/s] 83%|████████▎ | 456035/552076 [00:02<00:00, 220041.09it/s] 87%|████████▋ | 478614/552076 [00:02<00:00, 221732.36it/s] 91%|█████████ | 501158/552076 [00:02<00:00, 222829.17it/s] 95%|█████████▍| 524010/552076 [00:02<00:00, 224505.55it/s] 99%|█████████▉| 546498/552076 [00:02<00:00, 223903.27it/s]100%|██████████| 552076/552076 [00:02<00:00, 205878.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21309/552076 [00:00<00:02, 213084.11it/s]  8%|▊         | 43645/552076 [00:00<00:02, 216064.02it/s] 12%|█▏        | 65185/552076 [00:00<00:02, 215862.28it/s] 16%|█▌        | 87189/552076 [00:00<00:02, 217097.53it/s] 20%|█▉        | 109832/552076 [00:00<00:02, 219813.87it/s] 24%|██▍       | 132015/552076 [00:00<00:01, 220412.40it/s] 28%|██▊       | 153862/552076 [00:00<00:01, 219823.28it/s] 32%|███▏      | 174097/552076 [00:00<00:01, 198253.46it/s] 35%|███▍      | 193101/552076 [00:00<00:02, 167149.25it/s] 38%|███▊      | 210075/552076 [00:01<00:02, 151088.55it/s] 41%|████      | 225659/552076 [00:01<00:02, 141438.41it/s] 44%|████▎     | 240261/552076 [00:01<00:02, 135019.37it/s] 46%|████▌     | 254145/552076 [00:01<00:02, 131432.56it/s] 48%|████▊     | 267577/552076 [00:01<00:02, 128377.51it/s] 51%|█████     | 280633/552076 [00:01<00:02, 126739.37it/s] 53%|█████▎    | 293464/552076 [00:01<00:02, 125919.96it/s] 55%|█████▌    | 306168/552076 [00:01<00:01, 124718.09it/s] 58%|█████▊    | 318721/552076 [00:02<00:01, 124531.97it/s] 60%|█████▉    | 331231/552076 [00:02<00:01, 115849.48it/s] 62%|██████▏   | 343458/552076 [00:02<00:01, 117703.33it/s] 64%|██████▍   | 355728/552076 [00:02<00:01, 119157.87it/s] 67%|██████▋   | 367732/552076 [00:02<00:01, 117063.82it/s] 69%|██████▉   | 379947/552076 [00:02<00:01, 118541.95it/s] 71%|███████   | 392112/552076 [00:02<00:01, 119455.41it/s] 73%|███████▎  | 404206/552076 [00:02<00:01, 119894.52it/s] 75%|███████▌  | 416454/552076 [00:02<00:01, 120656.28it/s] 78%|███████▊  | 428721/552076 [00:02<00:01, 121252.60it/s] 80%|███████▉  | 441045/552076 [00:03<00:00, 121841.49it/s] 82%|████████▏ | 453241/552076 [00:03<00:00, 120886.32it/s] 84%|████████▍ | 465340/552076 [00:03<00:00, 108649.61it/s] 86%|████████▋ | 476884/552076 [00:03<00:00, 110599.85it/s] 88%|████████▊ | 488461/552076 [00:03<00:00, 112100.46it/s] 91%|█████████ | 499975/552076 [00:03<00:00, 112993.47it/s] 93%|█████████▎| 511367/552076 [00:03<00:00, 105794.57it/s] 95%|█████████▍| 522104/552076 [00:03<00:00, 104950.87it/s] 96%|█████████▋| 532711/552076 [00:03<00:00, 94837.85it/s]  99%|█████████▊| 544332/552076 [00:04<00:00, 100374.29it/s]100%|██████████| 552076/552076 [00:04<00:00, 134433.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10219/552076 [00:00<00:05, 102180.84it/s]  4%|▍         | 21416/552076 [00:00<00:05, 104932.91it/s]  6%|▌         | 31785/552076 [00:00<00:04, 104554.76it/s]  7%|▋         | 39858/552076 [00:00<00:05, 94594.93it/s]   9%|▉         | 50677/552076 [00:00<00:05, 98300.54it/s] 11%|█         | 59709/552076 [00:00<00:05, 91134.61it/s] 12%|█▏        | 67844/552076 [00:00<00:05, 85752.55it/s] 14%|█▍        | 77512/552076 [00:00<00:05, 88760.76it/s] 16%|█▋        | 90844/552076 [00:00<00:04, 98650.93it/s] 19%|█▊        | 102420/552076 [00:01<00:04, 103227.23it/s] 21%|██        | 114552/552076 [00:01<00:04, 108060.96it/s] 23%|██▎       | 126216/552076 [00:01<00:03, 110496.88it/s] 25%|██▌       | 138440/552076 [00:01<00:03, 113774.09it/s] 27%|██▋       | 150758/552076 [00:01<00:03, 116441.14it/s] 30%|██▉       | 163034/552076 [00:01<00:03, 118262.24it/s] 32%|███▏      | 175263/552076 [00:01<00:03, 119439.96it/s] 34%|███▍      | 187628/552076 [00:01<00:03, 120670.83it/s] 36%|███▌      | 199942/552076 [00:01<00:02, 121398.76it/s] 38%|███▊      | 212191/552076 [00:01<00:02, 121723.86it/s] 41%|████      | 224383/552076 [00:02<00:02, 120144.72it/s] 43%|████▎     | 236603/552076 [00:02<00:02, 120753.02it/s] 45%|████▌     | 248764/552076 [00:02<00:02, 121006.38it/s] 47%|████▋     | 260961/552076 [00:02<00:02, 121290.88it/s] 49%|████▉     | 273097/552076 [00:02<00:02, 121275.92it/s] 52%|█████▏    | 285302/552076 [00:02<00:02, 121506.80it/s] 54%|█████▍    | 297457/552076 [00:02<00:02, 109875.83it/s] 56%|█████▌    | 308660/552076 [00:02<00:02, 101180.78it/s] 58%|█████▊    | 321292/552076 [00:02<00:02, 107604.57it/s] 60%|██████    | 333616/552076 [00:02<00:01, 111860.94it/s] 63%|██████▎   | 345741/552076 [00:03<00:01, 114520.76it/s] 65%|██████▍   | 358067/552076 [00:03<00:01, 117009.46it/s] 67%|██████▋   | 369976/552076 [00:03<00:01, 117624.40it/s] 69%|██████▉   | 381846/552076 [00:03<00:01, 117312.91it/s] 71%|███████▏  | 394284/552076 [00:03<00:01, 119345.57it/s] 74%|███████▎  | 406280/552076 [00:03<00:01, 97685.30it/s]  76%|███████▌  | 417358/552076 [00:03<00:01, 101276.61it/s] 78%|███████▊  | 428774/552076 [00:03<00:01, 104825.42it/s] 80%|███████▉  | 439649/552076 [00:03<00:01, 104363.88it/s] 82%|████████▏ | 450925/552076 [00:04<00:00, 106747.01it/s] 84%|████████▎ | 461806/552076 [00:04<00:00, 106410.28it/s] 86%|████████▌ | 472592/552076 [00:04<00:00, 103546.05it/s] 87%|████████▋ | 483065/552076 [00:04<00:00, 101777.73it/s] 89%|████████▉ | 493333/552076 [00:04<00:00, 97892.73it/s]  92%|█████████▏| 505445/552076 [00:04<00:00, 103867.03it/s] 94%|█████████▎| 517359/552076 [00:04<00:00, 108019.88it/s] 96%|█████████▌| 528998/552076 [00:04<00:00, 110400.33it/s] 98%|█████████▊| 540418/552076 [00:04<00:00, 111512.67it/s]100%|█████████▉| 551659/552076 [00:05<00:00, 94156.49it/s] 100%|██████████| 552076/552076 [00:05<00:00, 108328.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10562/552076 [00:00<00:05, 105611.29it/s]  4%|▍         | 21590/552076 [00:00<00:04, 106968.11it/s]  6%|▌         | 31609/552076 [00:00<00:04, 104838.44it/s]  8%|▊         | 44205/552076 [00:00<00:04, 110389.42it/s] 10%|█         | 56371/552076 [00:00<00:04, 113544.56it/s] 12%|█▏        | 67823/552076 [00:00<00:04, 113833.86it/s] 14%|█▍        | 79689/552076 [00:00<00:04, 115239.60it/s] 17%|█▋        | 91781/552076 [00:00<00:03, 116886.11it/s] 19%|█▉        | 103958/552076 [00:00<00:03, 118306.88it/s] 21%|██        | 116149/552076 [00:01<00:03, 119364.20it/s] 23%|██▎       | 127811/552076 [00:01<00:03, 116555.82it/s] 25%|██▌       | 139289/552076 [00:01<00:03, 113892.41it/s] 27%|██▋       | 150661/552076 [00:01<00:03, 113838.46it/s] 29%|██▉       | 161968/552076 [00:01<00:03, 112918.72it/s] 31%|███▏      | 173208/552076 [00:01<00:04, 92219.57it/s]  34%|███▎      | 185354/552076 [00:01<00:03, 99396.57it/s] 36%|███▌      | 197384/552076 [00:01<00:03, 104861.28it/s] 38%|███▊      | 209605/552076 [00:01<00:03, 109525.10it/s] 40%|████      | 221951/552076 [00:01<00:02, 113362.02it/s] 42%|████▏     | 234324/552076 [00:02<00:02, 116284.59it/s] 45%|████▍     | 246603/552076 [00:02<00:02, 118162.62it/s] 47%|████▋     | 258912/552076 [00:02<00:02, 119596.28it/s] 49%|████▉     | 270996/552076 [00:02<00:03, 93052.11it/s]  51%|█████▏    | 282954/552076 [00:02<00:02, 99685.88it/s] 53%|█████▎    | 295285/552076 [00:02<00:02, 105763.62it/s] 56%|█████▌    | 307617/552076 [00:02<00:02, 110481.21it/s] 58%|█████▊    | 319880/552076 [00:02<00:02, 113865.16it/s] 60%|██████    | 332033/552076 [00:02<00:01, 116060.77it/s] 62%|██████▏   | 344335/552076 [00:03<00:01, 118064.31it/s] 65%|██████▍   | 356575/552076 [00:03<00:01, 119331.79it/s] 67%|██████▋   | 368772/552076 [00:03<00:01, 120110.29it/s] 69%|██████▉   | 381011/552076 [00:03<00:01, 120784.25it/s] 71%|███████   | 393265/552076 [00:03<00:01, 121302.95it/s] 73%|███████▎  | 405515/552076 [00:03<00:01, 121658.00it/s] 76%|███████▌  | 417746/552076 [00:03<00:01, 121852.29it/s] 78%|███████▊  | 430066/552076 [00:03<00:00, 122251.45it/s] 80%|████████  | 442355/552076 [00:03<00:00, 122439.39it/s] 82%|████████▏ | 454613/552076 [00:03<00:00, 120640.87it/s] 85%|████████▍ | 466763/552076 [00:04<00:00, 120897.28it/s] 87%|████████▋ | 478864/552076 [00:04<00:00, 113770.85it/s] 89%|████████▉ | 491074/552076 [00:04<00:00, 116146.87it/s] 91%|█████████ | 502767/552076 [00:04<00:00, 102613.49it/s] 93%|█████████▎| 513792/552076 [00:04<00:00, 104790.96it/s] 95%|█████████▌| 524524/552076 [00:04<00:00, 96015.14it/s]  97%|█████████▋| 534446/552076 [00:04<00:00, 87086.39it/s] 99%|█████████▉| 546177/552076 [00:04<00:00, 94380.64it/s]100%|██████████| 552076/552076 [00:04<00:00, 110910.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11447/552076 [00:00<00:04, 111921.24it/s]  4%|▍         | 22208/552076 [00:00<00:04, 110589.38it/s]  6%|▌         | 31036/552076 [00:00<00:05, 102795.74it/s]  8%|▊         | 42809/552076 [00:00<00:04, 106861.99it/s] 10%|▉         | 54844/552076 [00:00<00:04, 110577.90it/s] 12%|█▏        | 66941/552076 [00:00<00:04, 113502.89it/s] 14%|█▍        | 79068/552076 [00:00<00:04, 115725.83it/s] 16%|█▋        | 91080/552076 [00:00<00:03, 117007.05it/s] 19%|█▊        | 103101/552076 [00:00<00:03, 117948.16it/s] 21%|██        | 115451/552076 [00:01<00:03, 119558.14it/s] 23%|██▎       | 128150/552076 [00:01<00:03, 121694.18it/s] 25%|██▌       | 140238/552076 [00:01<00:03, 121446.02it/s] 28%|██▊       | 152600/552076 [00:01<00:03, 122089.31it/s] 30%|██▉       | 164852/552076 [00:01<00:03, 122217.71it/s] 32%|███▏      | 177011/552076 [00:01<00:03, 120930.89it/s] 34%|███▍      | 189063/552076 [00:01<00:03, 114496.71it/s] 36%|███▋      | 200555/552076 [00:01<00:03, 113515.96it/s] 38%|███▊      | 211939/552076 [00:01<00:03, 98524.72it/s]  40%|████      | 222167/552076 [00:01<00:03, 99347.97it/s] 42%|████▏     | 232367/552076 [00:02<00:03, 97698.94it/s] 44%|████▍     | 242329/552076 [00:02<00:03, 89636.61it/s] 46%|████▌     | 254072/552076 [00:02<00:03, 96486.69it/s] 48%|████▊     | 264055/552076 [00:02<00:02, 96943.47it/s] 50%|████▉     | 274221/552076 [00:02<00:02, 98310.49it/s] 51%|█████▏    | 284221/552076 [00:02<00:02, 96097.18it/s] 53%|█████▎    | 294624/552076 [00:02<00:02, 98345.32it/s] 55%|█████▌    | 304562/552076 [00:02<00:02, 89719.60it/s] 57%|█████▋    | 313753/552076 [00:02<00:02, 83446.86it/s] 59%|█████▉    | 325407/552076 [00:03<00:02, 91217.58it/s] 61%|██████    | 335500/552076 [00:03<00:02, 93927.98it/s] 63%|██████▎   | 346659/552076 [00:03<00:02, 98608.86it/s] 65%|██████▍   | 356785/552076 [00:03<00:02, 95640.37it/s] 67%|██████▋   | 367277/552076 [00:03<00:01, 98245.26it/s] 69%|██████▊   | 379459/552076 [00:03<00:01, 104298.16it/s] 71%|███████   | 390103/552076 [00:03<00:01, 101787.37it/s] 73%|███████▎  | 401015/552076 [00:03<00:01, 103880.80it/s] 75%|███████▍  | 411528/552076 [00:03<00:01, 98942.28it/s]  76%|███████▋  | 421559/552076 [00:04<00:01, 88258.47it/s] 78%|███████▊  | 430696/552076 [00:04<00:01, 88997.14it/s] 80%|███████▉  | 439815/552076 [00:04<00:01, 85809.80it/s] 82%|████████▏ | 451447/552076 [00:04<00:01, 93137.13it/s] 84%|████████▎ | 461068/552076 [00:04<00:00, 91903.17it/s] 85%|████████▌ | 470477/552076 [00:04<00:00, 88461.52it/s] 87%|████████▋ | 482118/552076 [00:04<00:00, 95327.16it/s] 90%|████████▉ | 494168/552076 [00:04<00:00, 101699.58it/s] 91%|█████████▏| 504651/552076 [00:04<00:00, 97399.86it/s]  94%|█████████▍| 518317/552076 [00:05<00:00, 106585.82it/s] 96%|█████████▌| 529944/552076 [00:05<00:00, 109315.31it/s] 98%|█████████▊| 541887/552076 [00:05<00:00, 112162.38it/s]100%|██████████| 552076/552076 [00:05<00:00, 103727.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10897/552076 [00:00<00:04, 108961.01it/s]  4%|▍         | 22447/552076 [00:00<00:04, 110842.36it/s]  6%|▌         | 33897/552076 [00:00<00:04, 111914.05it/s]  8%|▊         | 45333/552076 [00:00<00:04, 112634.27it/s] 10%|█         | 56645/552076 [00:00<00:04, 112777.01it/s] 12%|█▏        | 67675/552076 [00:00<00:04, 112021.44it/s] 14%|█▍        | 78763/552076 [00:00<00:04, 111676.34it/s] 16%|█▋        | 89946/552076 [00:00<00:04, 111721.07it/s] 18%|█▊        | 100493/552076 [00:00<00:04, 94384.08it/s] 20%|██        | 111910/552076 [00:01<00:04, 99558.51it/s] 22%|██▏       | 123765/552076 [00:01<00:04, 104582.78it/s] 24%|██▍       | 134757/552076 [00:01<00:03, 106127.72it/s] 27%|██▋       | 146843/552076 [00:01<00:03, 110153.70it/s] 29%|██▉       | 159040/552076 [00:01<00:03, 113450.20it/s] 31%|███       | 170614/552076 [00:01<00:03, 114125.91it/s] 33%|███▎      | 182954/552076 [00:01<00:03, 116757.56it/s] 35%|███▌      | 195975/552076 [00:01<00:02, 120490.53it/s] 38%|███▊      | 208490/552076 [00:01<00:02, 121849.44it/s] 40%|███▉      | 220732/552076 [00:01<00:02, 121245.94it/s] 42%|████▏     | 232897/552076 [00:02<00:02, 121159.58it/s] 44%|████▍     | 245127/552076 [00:02<00:02, 121497.00it/s] 47%|████▋     | 257297/552076 [00:02<00:02, 121247.84it/s] 49%|████▉     | 269436/552076 [00:02<00:02, 121166.92it/s] 51%|█████     | 281563/552076 [00:02<00:02, 120699.08it/s] 53%|█████▎    | 293684/552076 [00:02<00:02, 120849.35it/s] 55%|█████▌    | 305775/552076 [00:02<00:02, 120109.27it/s] 58%|█████▊    | 318646/552076 [00:02<00:01, 122564.77it/s] 60%|█████▉    | 330919/552076 [00:02<00:01, 121356.21it/s] 62%|██████▏   | 343069/552076 [00:02<00:01, 120633.61it/s] 64%|██████▍   | 355210/552076 [00:03<00:01, 120864.91it/s] 67%|██████▋   | 367353/552076 [00:03<00:01, 121030.81it/s] 69%|██████▊   | 379462/552076 [00:03<00:01, 108564.72it/s] 71%|███████   | 391400/552076 [00:03<00:01, 111595.66it/s] 73%|███████▎  | 402753/552076 [00:03<00:01, 105397.53it/s] 75%|███████▌  | 414719/552076 [00:03<00:01, 109305.14it/s] 77%|███████▋  | 427688/552076 [00:03<00:01, 114713.16it/s] 80%|███████▉  | 439948/552076 [00:03<00:00, 116967.97it/s] 82%|████████▏ | 451794/552076 [00:03<00:00, 103443.28it/s] 84%|████████▍ | 462531/552076 [00:04<00:00, 94590.81it/s]  86%|████████▌ | 474435/552076 [00:04<00:00, 100801.46it/s] 88%|████████▊ | 486511/552076 [00:04<00:00, 106058.13it/s] 90%|█████████ | 497624/552076 [00:04<00:00, 107529.32it/s] 92%|█████████▏| 509276/552076 [00:04<00:00, 110076.75it/s] 94%|█████████▍| 520478/552076 [00:04<00:00, 85975.42it/s]  96%|█████████▌| 530027/552076 [00:04<00:00, 82098.54it/s] 98%|█████████▊| 541575/552076 [00:04<00:00, 89893.44it/s]100%|██████████| 552076/552076 [00:05<00:00, 109890.48it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10600/552076 [00:00<00:05, 105995.80it/s]  3%|▎         | 18310/552076 [00:00<00:05, 95280.96it/s]   5%|▌         | 29154/552076 [00:00<00:05, 97025.25it/s]  6%|▋         | 35736/552076 [00:00<00:06, 83098.36it/s]  8%|▊         | 44464/552076 [00:00<00:06, 82999.04it/s] 10%|▉         | 53972/552076 [00:00<00:05, 86288.05it/s] 12%|█▏        | 65384/552076 [00:00<00:05, 93099.55it/s] 14%|█▎        | 75276/552076 [00:00<00:05, 92597.30it/s] 16%|█▌        | 86207/552076 [00:00<00:04, 94437.92it/s] 17%|█▋        | 95396/552076 [00:01<00:06, 70541.95it/s] 19%|█▊        | 103159/552076 [00:01<00:06, 67559.60it/s] 20%|██        | 110438/552076 [00:01<00:06, 67318.46it/s] 21%|██▏       | 117663/552076 [00:01<00:06, 68724.47it/s] 23%|██▎       | 124799/552076 [00:01<00:06, 68759.05it/s] 24%|██▍       | 131860/552076 [00:01<00:06, 68551.94it/s] 25%|██▌       | 139023/552076 [00:01<00:05, 69446.80it/s] 26%|██▋       | 146061/552076 [00:01<00:05, 69141.35it/s] 28%|██▊       | 153117/552076 [00:01<00:05, 69558.39it/s] 29%|██▉       | 160120/552076 [00:02<00:05, 69277.71it/s] 30%|███       | 167081/552076 [00:02<00:06, 60643.57it/s] 31%|███▏      | 173363/552076 [00:02<00:07, 51098.11it/s] 33%|███▎      | 180228/552076 [00:02<00:06, 55342.00it/s] 34%|███▍      | 187079/552076 [00:02<00:06, 58727.42it/s] 35%|███▌      | 193950/552076 [00:02<00:05, 61403.41it/s] 36%|███▋      | 201020/552076 [00:02<00:05, 63923.78it/s] 38%|███▊      | 207856/552076 [00:02<00:05, 65190.78it/s] 39%|███▉      | 214970/552076 [00:03<00:05, 66868.13it/s] 40%|████      | 222010/552076 [00:03<00:04, 67887.82it/s] 41%|████▏     | 228885/552076 [00:03<00:04, 67301.55it/s] 43%|████▎     | 235755/552076 [00:03<00:04, 67713.13it/s] 44%|████▍     | 242570/552076 [00:03<00:04, 67601.65it/s] 45%|████▌     | 249361/552076 [00:03<00:04, 67115.49it/s] 46%|████▋     | 256095/552076 [00:03<00:04, 66810.84it/s] 48%|████▊     | 262792/552076 [00:03<00:04, 66453.81it/s] 49%|████▉     | 269490/552076 [00:03<00:04, 66609.06it/s] 50%|█████     | 276245/552076 [00:03<00:04, 66888.36it/s] 51%|█████▏    | 282941/552076 [00:04<00:04, 66907.75it/s] 52%|█████▏    | 289636/552076 [00:04<00:03, 66841.02it/s] 54%|█████▎    | 296624/552076 [00:04<00:03, 67722.78it/s] 55%|█████▍    | 303402/552076 [00:04<00:03, 67142.46it/s] 56%|█████▌    | 310121/552076 [00:04<00:03, 66837.02it/s] 57%|█████▋    | 316809/552076 [00:04<00:03, 66784.28it/s] 59%|█████▊    | 323492/552076 [00:04<00:03, 66795.76it/s] 60%|█████▉    | 330174/552076 [00:04<00:03, 66767.53it/s] 61%|██████    | 336852/552076 [00:04<00:03, 66694.35it/s] 62%|██████▏   | 343523/552076 [00:04<00:03, 66672.32it/s] 63%|██████▎   | 350326/552076 [00:05<00:03, 67070.65it/s] 65%|██████▍   | 357035/552076 [00:05<00:02, 66852.98it/s] 66%|██████▌   | 363722/552076 [00:05<00:02, 66711.97it/s] 67%|██████▋   | 370394/552076 [00:05<00:02, 64143.51it/s] 68%|██████▊   | 377059/552076 [00:05<00:02, 64874.64it/s] 70%|██████▉   | 383862/552076 [00:05<00:02, 65789.69it/s] 71%|███████   | 390583/552076 [00:05<00:02, 66208.25it/s] 72%|███████▏  | 397328/552076 [00:05<00:02, 66573.75it/s] 73%|███████▎  | 404045/552076 [00:05<00:02, 66750.39it/s] 74%|███████▍  | 410801/552076 [00:05<00:02, 66988.73it/s] 76%|███████▌  | 417505/552076 [00:06<00:02, 66910.13it/s] 77%|███████▋  | 424200/552076 [00:06<00:01, 66815.82it/s] 78%|███████▊  | 430898/552076 [00:06<00:01, 66862.91it/s] 79%|███████▉  | 437586/552076 [00:06<00:01, 60095.51it/s] 80%|████████  | 443726/552076 [00:06<00:01, 58577.08it/s] 81%|████████▏ | 449684/552076 [00:06<00:02, 48012.51it/s] 82%|████████▏ | 454868/552076 [00:06<00:02, 45640.73it/s] 84%|████████▎ | 461389/552076 [00:06<00:01, 50154.70it/s] 85%|████████▍ | 467670/552076 [00:06<00:01, 53379.70it/s] 86%|████████▌ | 474008/552076 [00:07<00:01, 56030.67it/s] 87%|████████▋ | 480649/552076 [00:07<00:01, 58785.39it/s] 88%|████████▊ | 487130/552076 [00:07<00:01, 60469.83it/s] 89%|████████▉ | 493852/552076 [00:07<00:00, 62346.52it/s] 91%|█████████ | 500210/552076 [00:07<00:00, 54435.97it/s] 92%|█████████▏| 505921/552076 [00:07<00:01, 35411.05it/s] 92%|█████████▏| 510504/552076 [00:08<00:01, 28408.07it/s] 93%|█████████▎| 514295/552076 [00:08<00:01, 27416.65it/s] 94%|█████████▍| 517710/552076 [00:08<00:01, 26924.41it/s] 94%|█████████▍| 520876/552076 [00:08<00:01, 26384.33it/s] 95%|█████████▍| 523848/552076 [00:08<00:01, 25860.62it/s] 95%|█████████▌| 526899/552076 [00:08<00:00, 27099.11it/s] 96%|█████████▌| 529882/552076 [00:08<00:00, 27091.00it/s] 97%|█████████▋| 533065/552076 [00:08<00:00, 27726.23it/s] 97%|█████████▋| 535930/552076 [00:09<00:00, 25980.02it/s] 98%|█████████▊| 539170/552076 [00:09<00:00, 27570.62it/s] 98%|█████████▊| 542015/552076 [00:09<00:00, 26336.32it/s] 99%|█████████▊| 544722/552076 [00:09<00:00, 26122.73it/s] 99%|█████████▉| 547386/552076 [00:09<00:00, 22635.82it/s]100%|█████████▉| 549769/552076 [00:09<00:00, 22766.60it/s]100%|██████████| 552076/552076 [00:09<00:00, 56668.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3032/552076 [00:00<00:18, 30319.09it/s]  1%|          | 5602/552076 [00:00<00:19, 28011.46it/s]  2%|▏         | 8286/552076 [00:00<00:19, 27649.27it/s]  2%|▏         | 11052/552076 [00:00<00:19, 27651.78it/s]  2%|▏         | 13757/552076 [00:00<00:19, 27466.77it/s]  3%|▎         | 16224/552076 [00:00<00:20, 26454.84it/s]  3%|▎         | 19055/552076 [00:00<00:19, 26985.28it/s]  4%|▍         | 21593/552076 [00:00<00:20, 26481.32it/s]  4%|▍         | 24137/552076 [00:00<00:20, 26024.95it/s]  5%|▍         | 26852/552076 [00:01<00:19, 26352.01it/s]  5%|▌         | 29469/552076 [00:01<00:20, 26006.38it/s]  6%|▌         | 32170/552076 [00:01<00:19, 26298.05it/s]  6%|▋         | 34833/552076 [00:01<00:19, 26094.73it/s]  7%|▋         | 37563/552076 [00:01<00:19, 26443.76it/s]  7%|▋         | 40339/552076 [00:01<00:19, 26216.81it/s]  8%|▊         | 43016/552076 [00:01<00:19, 26362.54it/s]  8%|▊         | 45788/552076 [00:01<00:18, 26754.84it/s]  9%|▉         | 48460/552076 [00:01<00:18, 26699.81it/s]  9%|▉         | 51128/552076 [00:01<00:18, 26402.91it/s] 10%|▉         | 53769/552076 [00:02<00:18, 26404.69it/s] 10%|█         | 56515/552076 [00:02<00:18, 26222.71it/s] 11%|█         | 59198/552076 [00:02<00:18, 26222.01it/s] 11%|█         | 61985/552076 [00:02<00:18, 26695.09it/s] 12%|█▏        | 64721/552076 [00:02<00:18, 26890.64it/s] 12%|█▏        | 67412/552076 [00:02<00:18, 26087.48it/s] 13%|█▎        | 70809/552076 [00:02<00:17, 28038.91it/s] 13%|█▎        | 74168/552076 [00:02<00:16, 28936.96it/s] 14%|█▍        | 77644/552076 [00:02<00:15, 30283.00it/s] 15%|█▍        | 80978/552076 [00:02<00:15, 31015.57it/s] 15%|█▌        | 84247/552076 [00:03<00:14, 31352.96it/s] 16%|█▌        | 87695/552076 [00:03<00:14, 32229.62it/s] 16%|█▋        | 90942/552076 [00:03<00:14, 31672.65it/s] 17%|█▋        | 94531/552076 [00:03<00:13, 32829.69it/s] 18%|█▊        | 98024/552076 [00:03<00:13, 32601.58it/s] 18%|█▊        | 101401/552076 [00:03<00:13, 32941.70it/s] 19%|█▉        | 104756/552076 [00:03<00:13, 33121.50it/s] 20%|█▉        | 108289/552076 [00:03<00:13, 33753.10it/s] 20%|██        | 111718/552076 [00:03<00:13, 33440.86it/s] 21%|██        | 115139/552076 [00:03<00:12, 33666.44it/s] 21%|██▏       | 118512/552076 [00:04<00:12, 33457.47it/s] 22%|██▏       | 121862/552076 [00:04<00:13, 32776.56it/s] 23%|██▎       | 125146/552076 [00:04<00:13, 32419.83it/s] 23%|██▎       | 128394/552076 [00:04<00:13, 31808.83it/s] 24%|██▍       | 131581/552076 [00:04<00:13, 31276.03it/s] 24%|██▍       | 134715/552076 [00:04<00:13, 30991.27it/s] 25%|██▍       | 137913/552076 [00:04<00:13, 31278.81it/s] 26%|██▌       | 141046/552076 [00:04<00:13, 31258.63it/s] 26%|██▌       | 144190/552076 [00:04<00:13, 31074.36it/s] 27%|██▋       | 147598/552076 [00:05<00:12, 31918.79it/s] 27%|██▋       | 150798/552076 [00:05<00:12, 31597.54it/s] 28%|██▊       | 154183/552076 [00:05<00:12, 32240.38it/s] 29%|██▊       | 157475/552076 [00:05<00:12, 32071.66it/s] 29%|██▉       | 160895/552076 [00:05<00:11, 32681.63it/s] 30%|██▉       | 164170/552076 [00:05<00:12, 31546.16it/s] 30%|███       | 167423/552076 [00:05<00:12, 31747.86it/s] 31%|███       | 170608/552076 [00:05<00:12, 31735.89it/s] 31%|███▏      | 173823/552076 [00:05<00:11, 31559.04it/s] 32%|███▏      | 177051/552076 [00:05<00:11, 31769.30it/s] 33%|███▎      | 180368/552076 [00:06<00:11, 32175.91it/s] 33%|███▎      | 183590/552076 [00:06<00:11, 31774.87it/s] 34%|███▍      | 186954/552076 [00:06<00:11, 32311.54it/s] 34%|███▍      | 190191/552076 [00:06<00:12, 28404.21it/s] 35%|███▌      | 195335/552076 [00:06<00:11, 32211.01it/s] 36%|███▌      | 199949/552076 [00:06<00:10, 34680.70it/s] 37%|███▋      | 204300/552076 [00:06<00:09, 36928.43it/s] 38%|███▊      | 208400/552076 [00:06<00:09, 38061.41it/s] 39%|███▊      | 212666/552076 [00:06<00:08, 39332.77it/s] 39%|███▉      | 216774/552076 [00:07<00:08, 39821.42it/s] 40%|████      | 221059/552076 [00:07<00:08, 40486.26it/s] 41%|████      | 225640/552076 [00:07<00:08, 40800.30it/s] 42%|████▏     | 229822/552076 [00:07<00:07, 41100.56it/s] 42%|████▏     | 234181/552076 [00:07<00:07, 41816.22it/s] 43%|████▎     | 238387/552076 [00:07<00:07, 40599.12it/s] 44%|████▍     | 242472/552076 [00:07<00:08, 38005.14it/s] 45%|████▍     | 246324/552076 [00:07<00:08, 37536.03it/s] 46%|████▌     | 251918/552076 [00:07<00:07, 41041.96it/s] 46%|████▋     | 256430/552076 [00:07<00:07, 42185.57it/s] 47%|████▋     | 261848/552076 [00:08<00:06, 44222.82it/s] 48%|████▊     | 267032/552076 [00:08<00:06, 46261.90it/s] 49%|████▉     | 271748/552076 [00:08<00:06, 46242.50it/s] 50%|█████     | 276694/552076 [00:08<00:05, 46002.11it/s] 51%|█████     | 282412/552076 [00:08<00:05, 48867.10it/s] 52%|█████▏    | 287379/552076 [00:08<00:05, 48116.60it/s] 53%|█████▎    | 292249/552076 [00:08<00:05, 46260.30it/s] 54%|█████▍    | 296932/552076 [00:08<00:05, 45474.67it/s] 55%|█████▍    | 302190/552076 [00:08<00:05, 47395.03it/s] 56%|█████▌    | 307863/552076 [00:09<00:04, 49736.03it/s] 57%|█████▋    | 312903/552076 [00:09<00:04, 49154.57it/s] 58%|█████▊    | 317867/552076 [00:09<00:04, 47371.40it/s] 58%|█████▊    | 322652/552076 [00:09<00:05, 44641.59it/s] 59%|█████▉    | 328095/552076 [00:09<00:04, 47186.91it/s] 60%|██████    | 333979/552076 [00:09<00:04, 49306.00it/s] 62%|██████▏   | 339998/552076 [00:09<00:04, 52133.14it/s] 63%|██████▎   | 345532/552076 [00:09<00:03, 52066.82it/s] 64%|██████▎   | 350811/552076 [00:09<00:03, 52157.56it/s] 65%|██████▍   | 356555/552076 [00:09<00:03, 52675.75it/s] 66%|██████▌   | 362495/552076 [00:10<00:03, 54420.59it/s] 67%|██████▋   | 368463/552076 [00:10<00:03, 55898.04it/s] 68%|██████▊   | 374441/552076 [00:10<00:03, 57007.99it/s] 69%|██████▉   | 380363/552076 [00:10<00:03, 56424.65it/s] 70%|██████▉   | 386162/552076 [00:10<00:02, 56795.74it/s] 71%|███████   | 391966/552076 [00:10<00:02, 57162.75it/s] 72%|███████▏  | 397695/552076 [00:10<00:02, 55214.73it/s] 73%|███████▎  | 403545/552076 [00:10<00:02, 56160.07it/s] 74%|███████▍  | 409280/552076 [00:10<00:02, 56511.13it/s] 75%|███████▌  | 415320/552076 [00:10<00:02, 57622.89it/s] 76%|███████▋  | 421098/552076 [00:11<00:02, 56940.22it/s] 77%|███████▋  | 427274/552076 [00:11<00:02, 58304.46it/s] 78%|███████▊  | 433164/552076 [00:11<00:02, 57935.14it/s] 80%|███████▉  | 439330/552076 [00:11<00:01, 59004.17it/s] 81%|████████  | 445244/552076 [00:11<00:01, 58219.61it/s] 82%|████████▏ | 451374/552076 [00:11<00:01, 59109.39it/s] 83%|████████▎ | 457297/552076 [00:11<00:01, 57989.19it/s] 84%|████████▍ | 463203/552076 [00:11<00:01, 57875.20it/s] 85%|████████▍ | 469195/552076 [00:11<00:01, 58473.32it/s] 86%|████████▌ | 475185/552076 [00:12<00:01, 58894.11it/s] 87%|████████▋ | 481081/552076 [00:12<00:01, 57707.39it/s] 88%|████████▊ | 486862/552076 [00:12<00:01, 57446.46it/s] 89%|████████▉ | 493002/552076 [00:12<00:01, 58577.10it/s] 90%|█████████ | 498988/552076 [00:12<00:00, 57525.83it/s] 91%|█████████▏| 504995/552076 [00:12<00:00, 57854.24it/s] 93%|█████████▎| 511035/552076 [00:12<00:00, 58594.39it/s] 94%|█████████▎| 516903/552076 [00:12<00:00, 58583.56it/s] 95%|█████████▍| 522768/552076 [00:12<00:00, 57213.05it/s] 96%|█████████▌| 528501/552076 [00:12<00:00, 54071.48it/s] 97%|█████████▋| 533952/552076 [00:13<00:00, 51571.39it/s] 98%|█████████▊| 540171/552076 [00:13<00:00, 53433.40it/s] 99%|█████████▉| 547184/552076 [00:13<00:00, 57542.46it/s]100%|██████████| 552076/552076 [00:13<00:00, 41405.21it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11767/552076 [00:00<00:04, 117669.55it/s]  4%|▍         | 21072/552076 [00:00<00:04, 108302.41it/s]  5%|▌         | 29409/552076 [00:00<00:05, 99383.20it/s]   7%|▋         | 36701/552076 [00:00<00:05, 89210.48it/s]  8%|▊         | 44604/552076 [00:00<00:05, 85890.07it/s] 10%|█         | 56051/552076 [00:00<00:05, 92844.22it/s] 12%|█▏        | 67540/552076 [00:00<00:04, 98515.30it/s] 14%|█▍        | 79021/552076 [00:00<00:04, 102896.21it/s] 16%|█▋        | 90601/552076 [00:00<00:04, 106454.07it/s] 19%|█▊        | 102225/552076 [00:01<00:04, 109211.72it/s] 20%|██        | 112998/552076 [00:01<00:04, 97310.55it/s]  22%|██▏       | 122867/552076 [00:01<00:04, 86639.88it/s] 24%|██▍       | 131845/552076 [00:01<00:04, 84358.80it/s] 26%|██▌       | 143294/552076 [00:01<00:04, 91589.12it/s] 28%|██▊       | 154815/552076 [00:01<00:04, 97590.51it/s] 30%|███       | 166367/552076 [00:01<00:03, 102355.42it/s] 32%|███▏      | 177954/552076 [00:01<00:03, 106066.18it/s] 34%|███▍      | 189661/552076 [00:01<00:03, 109143.70it/s] 36%|███▋      | 201289/552076 [00:01<00:03, 111189.56it/s] 39%|███▊      | 213235/552076 [00:02<00:02, 113545.54it/s] 41%|████      | 224933/552076 [00:02<00:02, 114552.14it/s] 43%|████▎     | 236471/552076 [00:02<00:02, 114671.07it/s] 45%|████▍     | 248111/552076 [00:02<00:02, 115182.09it/s] 47%|████▋     | 259836/552076 [00:02<00:02, 115792.99it/s] 49%|████▉     | 271671/552076 [00:02<00:02, 116546.81it/s] 51%|█████▏    | 283348/552076 [00:02<00:02, 116585.15it/s] 53%|█████▎    | 295040/552076 [00:02<00:02, 116682.77it/s] 56%|█████▌    | 306719/552076 [00:02<00:02, 90341.50it/s]  57%|█████▋    | 316670/552076 [00:03<00:02, 88154.69it/s] 59%|█████▉    | 328261/552076 [00:03<00:02, 94975.92it/s] 62%|██████▏   | 339947/552076 [00:03<00:02, 100627.71it/s] 64%|██████▎   | 351710/552076 [00:03<00:01, 105188.01it/s] 66%|██████▌   | 363395/552076 [00:03<00:01, 108432.23it/s] 68%|██████▊   | 375220/552076 [00:03<00:01, 111201.07it/s] 70%|███████   | 386927/552076 [00:03<00:01, 112897.96it/s] 72%|███████▏  | 398391/552076 [00:03<00:01, 110820.56it/s] 74%|███████▍  | 409603/552076 [00:03<00:01, 106217.66it/s] 76%|███████▋  | 421258/552076 [00:04<00:01, 109118.54it/s] 78%|███████▊  | 432973/552076 [00:04<00:01, 111408.21it/s] 81%|████████  | 444514/552076 [00:04<00:00, 112576.66it/s] 83%|████████▎ | 456189/552076 [00:04<00:00, 113796.71it/s] 85%|████████▍ | 467921/552076 [00:04<00:00, 114828.90it/s] 87%|████████▋ | 479618/552076 [00:04<00:00, 115462.25it/s] 89%|████████▉ | 491191/552076 [00:04<00:00, 103018.78it/s] 91%|█████████ | 501762/552076 [00:04<00:00, 95867.56it/s]  93%|█████████▎| 511637/552076 [00:04<00:00, 96641.11it/s] 94%|█████████▍| 521532/552076 [00:05<00:00, 97321.66it/s] 97%|█████████▋| 533664/552076 [00:05<00:00, 103460.77it/s] 99%|█████████▉| 545259/552076 [00:05<00:00, 106914.71it/s]100%|██████████| 552076/552076 [00:05<00:00, 104801.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9520/552076 [00:00<00:05, 95194.87it/s]  3%|▎         | 17312/552076 [00:00<00:05, 89257.60it/s]  5%|▍         | 25549/552076 [00:00<00:06, 86729.74it/s]  7%|▋         | 36494/552076 [00:00<00:05, 92487.89it/s]  9%|▉         | 48572/552076 [00:00<00:05, 99477.51it/s] 11%|█         | 58421/552076 [00:00<00:04, 99177.64it/s] 12%|█▏        | 67399/552076 [00:00<00:05, 94225.95it/s] 14%|█▍        | 76216/552076 [00:00<00:07, 65732.14it/s] 15%|█▌        | 83544/552076 [00:01<00:07, 62673.30it/s] 16%|█▋        | 90370/552076 [00:01<00:07, 63762.88it/s] 18%|█▊        | 97142/552076 [00:01<00:07, 63305.98it/s] 19%|█▉        | 103751/552076 [00:01<00:07, 58198.78it/s] 20%|█▉        | 110349/552076 [00:01<00:07, 60331.33it/s] 21%|██        | 116874/552076 [00:01<00:07, 61725.24it/s] 22%|██▏       | 123204/552076 [00:01<00:07, 57238.78it/s] 23%|██▎       | 129247/552076 [00:01<00:07, 58159.32it/s] 25%|██▍       | 136011/552076 [00:01<00:06, 60710.75it/s] 26%|██▌       | 142746/552076 [00:02<00:06, 62559.62it/s] 27%|██▋       | 149111/552076 [00:02<00:06, 62882.15it/s] 28%|██▊       | 155886/552076 [00:02<00:06, 64265.75it/s] 29%|██▉       | 162676/552076 [00:02<00:05, 65314.08it/s] 31%|███       | 169250/552076 [00:02<00:05, 65221.55it/s] 32%|███▏      | 176045/552076 [00:02<00:05, 66015.35it/s] 33%|███▎      | 182846/552076 [00:02<00:05, 66599.83it/s] 34%|███▍      | 189524/552076 [00:02<00:05, 66164.91it/s] 36%|███▌      | 196154/552076 [00:02<00:05, 64879.13it/s] 37%|███▋      | 202691/552076 [00:02<00:05, 65022.03it/s] 38%|███▊      | 209270/552076 [00:03<00:05, 65249.99it/s] 39%|███▉      | 215836/552076 [00:03<00:05, 65371.08it/s] 40%|████      | 222425/552076 [00:03<00:05, 65523.68it/s] 41%|████▏     | 228982/552076 [00:03<00:04, 65412.54it/s] 43%|████▎     | 235654/552076 [00:03<00:04, 65798.78it/s] 44%|████▍     | 242331/552076 [00:03<00:04, 66085.59it/s] 45%|████▌     | 248942/552076 [00:03<00:04, 65366.98it/s] 46%|████▋     | 255482/552076 [00:03<00:04, 64190.84it/s] 47%|████▋     | 261909/552076 [00:03<00:04, 64020.42it/s] 49%|████▊     | 268577/552076 [00:03<00:04, 64794.05it/s] 50%|████▉     | 275183/552076 [00:04<00:04, 65167.21it/s] 51%|█████     | 281705/552076 [00:04<00:04, 62112.92it/s] 52%|█████▏    | 288429/552076 [00:04<00:04, 63565.49it/s] 53%|█████▎    | 295117/552076 [00:04<00:03, 64523.11it/s] 55%|█████▍    | 301595/552076 [00:04<00:03, 64254.46it/s] 56%|█████▌    | 308039/552076 [00:04<00:03, 64304.89it/s] 57%|█████▋    | 314483/552076 [00:04<00:03, 63804.47it/s] 58%|█████▊    | 320874/552076 [00:04<00:04, 51708.07it/s] 59%|█████▉    | 326423/552076 [00:05<00:06, 37603.68it/s] 60%|█████▉    | 330997/552076 [00:05<00:06, 31712.88it/s] 61%|██████    | 334896/552076 [00:05<00:07, 29562.97it/s] 61%|██████▏   | 338391/552076 [00:05<00:08, 25360.62it/s] 62%|██████▏   | 341409/552076 [00:05<00:09, 23265.51it/s] 62%|██████▏   | 344107/552076 [00:05<00:08, 23780.20it/s] 63%|██████▎   | 346748/552076 [00:06<00:08, 24505.58it/s] 63%|██████▎   | 349388/552076 [00:06<00:08, 22542.34it/s] 64%|██████▎   | 351806/552076 [00:06<00:08, 22972.23it/s] 64%|██████▍   | 354300/552076 [00:06<00:08, 23528.83it/s] 65%|██████▍   | 356738/552076 [00:06<00:08, 23017.71it/s] 65%|██████▌   | 359186/552076 [00:06<00:08, 23437.69it/s] 66%|██████▌   | 361636/552076 [00:06<00:08, 23745.75it/s] 66%|██████▌   | 364044/552076 [00:06<00:08, 22800.96it/s] 66%|██████▋   | 366524/552076 [00:06<00:07, 23365.52it/s] 67%|██████▋   | 369000/552076 [00:06<00:07, 23211.10it/s] 67%|██████▋   | 371371/552076 [00:07<00:07, 22737.77it/s] 68%|██████▊   | 373660/552076 [00:07<00:08, 20573.08it/s] 68%|██████▊   | 375767/552076 [00:07<00:08, 19662.21it/s] 69%|██████▊   | 378235/552076 [00:07<00:08, 20939.09it/s] 69%|██████▉   | 380640/552076 [00:07<00:07, 21783.55it/s] 69%|██████▉   | 383091/552076 [00:07<00:07, 22100.79it/s] 70%|██████▉   | 385555/552076 [00:07<00:07, 22650.24it/s] 70%|███████   | 388030/552076 [00:07<00:07, 23241.46it/s] 71%|███████   | 390377/552076 [00:07<00:07, 22465.95it/s] 71%|███████   | 392711/552076 [00:08<00:07, 22720.00it/s] 72%|███████▏  | 395232/552076 [00:08<00:06, 23412.94it/s] 72%|███████▏  | 397755/552076 [00:08<00:06, 23928.73it/s] 72%|███████▏  | 400163/552076 [00:08<00:06, 23494.08it/s] 73%|███████▎  | 402546/552076 [00:08<00:06, 23561.66it/s] 73%|███████▎  | 405063/552076 [00:08<00:06, 24021.87it/s] 74%|███████▍  | 407552/552076 [00:08<00:05, 24274.97it/s] 74%|███████▍  | 409986/552076 [00:08<00:05, 23734.03it/s] 75%|███████▍  | 412367/552076 [00:08<00:05, 23686.79it/s] 75%|███████▌  | 414741/552076 [00:08<00:06, 22719.02it/s] 76%|███████▌  | 417025/552076 [00:09<00:05, 22636.03it/s] 76%|███████▌  | 419432/552076 [00:09<00:05, 23047.00it/s] 76%|███████▋  | 421853/552076 [00:09<00:05, 22823.69it/s] 77%|███████▋  | 424283/552076 [00:09<00:05, 23045.73it/s] 77%|███████▋  | 426789/552076 [00:09<00:05, 23613.87it/s] 78%|███████▊  | 429276/552076 [00:09<00:05, 23976.68it/s] 78%|███████▊  | 431680/552076 [00:09<00:05, 23551.13it/s] 79%|███████▊  | 434091/552076 [00:09<00:04, 23599.07it/s] 79%|███████▉  | 436574/552076 [00:09<00:04, 23955.17it/s] 80%|███████▉  | 439097/552076 [00:10<00:04, 24323.84it/s] 80%|███████▉  | 441534/552076 [00:10<00:04, 23573.88it/s] 81%|████████  | 444423/552076 [00:10<00:04, 24714.52it/s] 81%|████████  | 446915/552076 [00:10<00:04, 24135.23it/s] 81%|████████▏ | 449571/552076 [00:10<00:04, 24814.80it/s] 82%|████████▏ | 452111/552076 [00:10<00:04, 24986.60it/s] 82%|████████▏ | 454671/552076 [00:10<00:03, 25166.51it/s] 83%|████████▎ | 457197/552076 [00:10<00:03, 24331.01it/s] 83%|████████▎ | 459643/552076 [00:10<00:03, 23240.50it/s] 84%|████████▎ | 461998/552076 [00:10<00:03, 22859.14it/s] 84%|████████▍ | 464462/552076 [00:11<00:03, 23364.18it/s] 85%|████████▍ | 467007/552076 [00:11<00:03, 23952.40it/s] 85%|████████▌ | 469528/552076 [00:11<00:03, 24315.57it/s] 85%|████████▌ | 471970/552076 [00:11<00:03, 23798.81it/s] 86%|████████▌ | 474406/552076 [00:11<00:03, 23964.39it/s] 86%|████████▋ | 476958/552076 [00:11<00:03, 24410.21it/s] 87%|████████▋ | 479505/552076 [00:11<00:02, 24717.99it/s] 87%|████████▋ | 481983/552076 [00:11<00:02, 24354.05it/s] 88%|████████▊ | 484558/552076 [00:11<00:02, 24755.70it/s] 88%|████████▊ | 487039/552076 [00:11<00:02, 24484.50it/s] 89%|████████▊ | 489687/552076 [00:12<00:02, 25050.00it/s] 89%|████████▉ | 492199/552076 [00:12<00:02, 24811.28it/s] 90%|████████▉ | 494793/552076 [00:12<00:02, 25138.39it/s] 90%|█████████ | 497312/552076 [00:12<00:02, 24805.68it/s] 91%|█████████ | 499797/552076 [00:12<00:02, 21414.49it/s] 91%|█████████ | 502121/552076 [00:12<00:02, 20040.47it/s] 91%|█████████▏| 504595/552076 [00:12<00:02, 21250.65it/s] 92%|█████████▏| 507054/552076 [00:12<00:02, 21889.54it/s] 92%|█████████▏| 509569/552076 [00:12<00:01, 22655.40it/s] 93%|█████████▎| 511881/552076 [00:13<00:01, 22728.37it/s] 93%|█████████▎| 514401/552076 [00:13<00:01, 23417.38it/s] 94%|█████████▎| 516771/552076 [00:13<00:01, 21756.93it/s] 94%|█████████▍| 519613/552076 [00:13<00:01, 22774.35it/s] 95%|█████████▍| 522046/552076 [00:13<00:01, 22252.06it/s] 95%|█████████▍| 524304/552076 [00:13<00:01, 21307.30it/s] 95%|█████████▌| 526467/552076 [00:13<00:01, 20664.73it/s] 96%|█████████▌| 528896/552076 [00:13<00:01, 21633.23it/s] 96%|█████████▌| 531090/552076 [00:13<00:00, 21666.80it/s] 97%|█████████▋| 533660/552076 [00:14<00:00, 21860.00it/s] 97%|█████████▋| 536400/552076 [00:14<00:00, 22948.20it/s] 98%|█████████▊| 539433/552076 [00:14<00:00, 24252.03it/s] 98%|█████████▊| 541896/552076 [00:14<00:00, 22406.93it/s] 99%|█████████▊| 544452/552076 [00:14<00:00, 23267.08it/s] 99%|█████████▉| 547066/552076 [00:14<00:00, 23396.51it/s]100%|█████████▉| 550664/552076 [00:14<00:00, 25783.05it/s]100%|██████████| 552076/552076 [00:14<00:00, 37328.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6626/552076 [00:00<00:08, 66258.48it/s]  2%|▏         | 13255/552076 [00:00<00:08, 66267.67it/s]  4%|▎         | 19933/552076 [00:00<00:08, 66418.20it/s]  5%|▍         | 26631/552076 [00:00<00:07, 66583.26it/s]  6%|▌         | 33375/552076 [00:00<00:07, 66837.67it/s]  7%|▋         | 40123/552076 [00:00<00:07, 67027.34it/s]  8%|▊         | 46881/552076 [00:00<00:07, 67189.82it/s] 10%|▉         | 53654/552076 [00:00<00:07, 67350.74it/s] 11%|█         | 60434/552076 [00:00<00:07, 67483.52it/s] 12%|█▏        | 67222/552076 [00:01<00:07, 67601.37it/s] 13%|█▎        | 74024/552076 [00:01<00:07, 67723.88it/s] 15%|█▍        | 80839/552076 [00:01<00:06, 67848.13it/s] 16%|█▌        | 87533/552076 [00:01<00:06, 67022.39it/s] 17%|█▋        | 94174/552076 [00:01<00:07, 58812.79it/s] 18%|█▊        | 100966/552076 [00:01<00:07, 61275.44it/s] 20%|█▉        | 107740/552076 [00:01<00:07, 63080.66it/s] 21%|██        | 114149/552076 [00:01<00:07, 57651.40it/s] 22%|██▏       | 120476/552076 [00:01<00:07, 59227.37it/s] 23%|██▎       | 127212/552076 [00:01<00:06, 61452.91it/s] 24%|██▍       | 133466/552076 [00:02<00:07, 59294.03it/s] 25%|██▌       | 139488/552076 [00:02<00:07, 54292.38it/s] 26%|██▋       | 145064/552076 [00:02<00:07, 51531.39it/s] 27%|██▋       | 150349/552076 [00:02<00:08, 47052.18it/s] 28%|██▊       | 155223/552076 [00:02<00:09, 41243.60it/s] 29%|██▉       | 159983/552076 [00:02<00:09, 42963.29it/s] 30%|██▉       | 164740/552076 [00:02<00:08, 43883.08it/s] 31%|███       | 169268/552076 [00:02<00:09, 40255.24it/s] 31%|███▏      | 173450/552076 [00:03<00:09, 40437.83it/s] 32%|███▏      | 178099/552076 [00:03<00:08, 42080.00it/s] 33%|███▎      | 182401/552076 [00:03<00:09, 40461.54it/s] 34%|███▍      | 186527/552076 [00:03<00:09, 37691.38it/s] 34%|███▍      | 190390/552076 [00:03<00:10, 34404.19it/s] 35%|███▌      | 194634/552076 [00:03<00:09, 36475.12it/s] 36%|███▌      | 198479/552076 [00:03<00:09, 37045.76it/s] 37%|███▋      | 202269/552076 [00:03<00:10, 31932.43it/s] 38%|███▊      | 207045/552076 [00:04<00:09, 35457.42it/s] 38%|███▊      | 210842/552076 [00:04<00:09, 35082.80it/s] 39%|███▉      | 215727/552076 [00:04<00:08, 38322.18it/s] 40%|███▉      | 220209/552076 [00:04<00:08, 40061.92it/s] 41%|████      | 224857/552076 [00:04<00:08, 40737.34it/s] 42%|████▏     | 229753/552076 [00:04<00:07, 42895.51it/s] 42%|████▏     | 234158/552076 [00:04<00:07, 41718.90it/s] 43%|████▎     | 238564/552076 [00:04<00:07, 42394.44it/s] 44%|████▍     | 243350/552076 [00:04<00:07, 43896.72it/s] 45%|████▍     | 248363/552076 [00:04<00:06, 45596.97it/s] 46%|████▌     | 252981/552076 [00:05<00:06, 43932.82it/s] 47%|████▋     | 258196/552076 [00:05<00:06, 46112.33it/s] 48%|████▊     | 263478/552076 [00:05<00:06, 47937.56it/s] 49%|████▊     | 268466/552076 [00:05<00:05, 48463.24it/s] 50%|████▉     | 273360/552076 [00:05<00:06, 43703.12it/s] 50%|█████     | 277852/552076 [00:05<00:06, 40209.38it/s] 51%|█████     | 282013/552076 [00:05<00:07, 35049.50it/s] 52%|█████▏    | 285735/552076 [00:05<00:07, 34847.00it/s] 52%|█████▏    | 289372/552076 [00:06<00:07, 34391.97it/s] 53%|█████▎    | 293097/552076 [00:06<00:07, 33595.43it/s] 54%|█████▎    | 296677/552076 [00:06<00:07, 33498.99it/s] 54%|█████▍    | 300083/552076 [00:06<00:08, 31485.28it/s] 55%|█████▍    | 303296/552076 [00:06<00:08, 29602.15it/s] 56%|█████▌    | 306892/552076 [00:06<00:07, 30812.55it/s] 56%|█████▌    | 310034/552076 [00:06<00:08, 27561.49it/s] 57%|█████▋    | 313588/552076 [00:06<00:08, 29551.35it/s] 57%|█████▋    | 316705/552076 [00:06<00:07, 30018.25it/s] 58%|█████▊    | 320301/552076 [00:07<00:07, 31582.63it/s] 59%|█████▊    | 323829/552076 [00:07<00:06, 32607.15it/s] 59%|█████▉    | 327154/552076 [00:07<00:06, 32489.61it/s] 60%|█████▉    | 330779/552076 [00:07<00:06, 33532.50it/s] 61%|██████    | 334216/552076 [00:07<00:06, 33215.46it/s] 61%|██████    | 337677/552076 [00:07<00:06, 33605.40it/s] 62%|██████▏   | 341227/552076 [00:07<00:06, 33732.05it/s] 62%|██████▏   | 344694/552076 [00:07<00:06, 33827.91it/s] 63%|██████▎   | 348088/552076 [00:07<00:06, 33762.40it/s] 64%|██████▎   | 351660/552076 [00:07<00:05, 34325.51it/s] 64%|██████▍   | 355100/552076 [00:08<00:05, 34125.51it/s] 65%|██████▍   | 358519/552076 [00:08<00:06, 31694.54it/s] 66%|██████▌   | 361727/552076 [00:08<00:06, 27505.24it/s] 66%|██████▌   | 364604/552076 [00:08<00:06, 27161.79it/s] 67%|██████▋   | 367410/552076 [00:08<00:07, 23598.84it/s] 67%|██████▋   | 371073/552076 [00:08<00:06, 25971.44it/s] 68%|██████▊   | 374692/552076 [00:08<00:06, 28050.92it/s] 69%|██████▊   | 378404/552076 [00:08<00:05, 30268.62it/s] 69%|██████▉   | 381694/552076 [00:08<00:05, 30802.05it/s] 70%|██████▉   | 385285/552076 [00:09<00:05, 32174.01it/s] 70%|███████   | 388719/552076 [00:09<00:05, 32220.46it/s] 71%|███████   | 392305/552076 [00:09<00:04, 33232.08it/s] 72%|███████▏  | 395854/552076 [00:09<00:04, 33114.38it/s] 72%|███████▏  | 399464/552076 [00:09<00:04, 33466.30it/s] 73%|███████▎  | 403008/552076 [00:09<00:04, 34034.64it/s] 74%|███████▎  | 406435/552076 [00:09<00:04, 33956.95it/s] 74%|███████▍  | 409912/552076 [00:09<00:04, 34196.56it/s] 75%|███████▍  | 413344/552076 [00:09<00:04, 34026.53it/s] 76%|███████▌  | 416840/552076 [00:10<00:03, 34300.10it/s] 76%|███████▌  | 420277/552076 [00:10<00:04, 32815.17it/s] 77%|███████▋  | 423871/552076 [00:10<00:03, 33312.76it/s] 77%|███████▋  | 427371/552076 [00:10<00:03, 33800.53it/s] 78%|███████▊  | 430804/552076 [00:10<00:03, 33956.39it/s] 79%|███████▊  | 434356/552076 [00:10<00:03, 34410.36it/s] 79%|███████▉  | 437805/552076 [00:10<00:03, 34263.56it/s] 80%|███████▉  | 441378/552076 [00:10<00:03, 34282.38it/s] 81%|████████  | 444920/552076 [00:10<00:03, 34409.20it/s] 81%|████████  | 448479/552076 [00:10<00:02, 34754.09it/s] 82%|████████▏ | 451998/552076 [00:11<00:02, 34516.06it/s] 83%|████████▎ | 455673/552076 [00:11<00:02, 35156.34it/s] 83%|████████▎ | 459194/552076 [00:11<00:02, 34147.46it/s] 84%|████████▍ | 462859/552076 [00:11<00:02, 34093.48it/s] 84%|████████▍ | 466317/552076 [00:11<00:02, 34236.57it/s] 85%|████████▌ | 469855/552076 [00:11<00:02, 34570.68it/s] 86%|████████▌ | 473433/552076 [00:11<00:02, 34923.70it/s] 86%|████████▋ | 476930/552076 [00:11<00:02, 34536.88it/s] 87%|████████▋ | 480535/552076 [00:11<00:02, 34975.99it/s] 88%|████████▊ | 484037/552076 [00:11<00:02, 33230.21it/s] 88%|████████▊ | 487630/552076 [00:12<00:01, 33632.19it/s] 89%|████████▉ | 491145/552076 [00:12<00:01, 34073.01it/s] 90%|████████▉ | 494565/552076 [00:12<00:01, 33649.65it/s] 90%|█████████ | 497940/552076 [00:12<00:01, 31568.43it/s] 91%|█████████ | 501131/552076 [00:12<00:01, 25558.19it/s] 91%|█████████▏| 503895/552076 [00:12<00:02, 22121.06it/s] 92%|█████████▏| 506335/552076 [00:12<00:02, 20656.27it/s] 92%|█████████▏| 509064/552076 [00:13<00:01, 22114.98it/s] 93%|█████████▎| 511537/552076 [00:13<00:01, 22573.75it/s] 93%|█████████▎| 514387/552076 [00:13<00:01, 23933.89it/s] 94%|█████████▎| 516895/552076 [00:13<00:01, 24266.14it/s] 94%|█████████▍| 519393/552076 [00:13<00:01, 24247.95it/s] 95%|█████████▍| 521868/552076 [00:13<00:01, 23464.79it/s] 95%|█████████▍| 524255/552076 [00:13<00:01, 20551.38it/s] 95%|█████████▌| 526513/552076 [00:13<00:01, 21120.16it/s] 96%|█████████▌| 528695/552076 [00:13<00:01, 19605.45it/s] 96%|█████████▌| 530726/552076 [00:14<00:01, 18746.80it/s] 97%|█████████▋| 533365/552076 [00:14<00:00, 20491.81it/s] 97%|█████████▋| 535512/552076 [00:14<00:00, 20511.02it/s] 98%|█████████▊| 538526/552076 [00:14<00:00, 22684.77it/s] 98%|█████████▊| 542234/552076 [00:14<00:00, 25674.94it/s] 99%|█████████▉| 548840/552076 [00:14<00:00, 31441.24it/s]100%|██████████| 552076/552076 [00:14<00:00, 37865.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16142/552076 [00:00<00:03, 161408.99it/s]  6%|▌         | 30460/552076 [00:00<00:03, 155469.21it/s]  9%|▊         | 48260/552076 [00:00<00:03, 161603.75it/s] 12%|█▏        | 66066/552076 [00:00<00:02, 166210.84it/s] 14%|█▍        | 79972/552076 [00:00<00:03, 151489.24it/s] 17%|█▋        | 92730/552076 [00:00<00:04, 100676.09it/s] 19%|█▊        | 103355/552076 [00:00<00:05, 85534.16it/s] 20%|██        | 112692/552076 [00:01<00:05, 78504.08it/s] 22%|██▏       | 121204/552076 [00:01<00:05, 74667.38it/s] 23%|██▎       | 129174/552076 [00:01<00:05, 71307.24it/s] 25%|██▍       | 136689/552076 [00:01<00:07, 58822.50it/s] 26%|██▌       | 143304/552076 [00:01<00:06, 60843.73it/s] 27%|██▋       | 150062/552076 [00:01<00:06, 62716.20it/s] 28%|██▊       | 156734/552076 [00:01<00:06, 63864.62it/s] 30%|██▉       | 163361/552076 [00:01<00:06, 64371.68it/s] 31%|███       | 169968/552076 [00:01<00:05, 64473.73it/s] 32%|███▏      | 176534/552076 [00:02<00:05, 63066.37it/s] 33%|███▎      | 182931/552076 [00:02<00:05, 62426.15it/s] 34%|███▍      | 189544/552076 [00:02<00:05, 63491.31it/s] 35%|███▌      | 195943/552076 [00:02<00:05, 60566.57it/s] 37%|███▋      | 202063/552076 [00:02<00:06, 56176.76it/s] 38%|███▊      | 207789/552076 [00:02<00:06, 54616.12it/s] 39%|███▊      | 213336/552076 [00:02<00:07, 47220.33it/s] 40%|███▉      | 218295/552076 [00:03<00:10, 32990.38it/s] 40%|████      | 222348/552076 [00:03<00:11, 29536.35it/s] 41%|████▏     | 228372/552076 [00:03<00:09, 34867.46it/s] 43%|████▎     | 234987/552076 [00:03<00:07, 40631.52it/s] 44%|████▎     | 241136/552076 [00:03<00:06, 45234.00it/s] 45%|████▍     | 246473/552076 [00:03<00:06, 45785.58it/s] 46%|████▌     | 252686/552076 [00:03<00:06, 49706.88it/s] 47%|████▋     | 259250/552076 [00:03<00:05, 53609.20it/s] 48%|████▊     | 266258/552076 [00:03<00:04, 57674.56it/s] 49%|████▉     | 272887/552076 [00:04<00:04, 60013.56it/s] 51%|█████     | 279550/552076 [00:04<00:04, 61854.65it/s] 52%|█████▏    | 286162/552076 [00:04<00:04, 63073.16it/s] 53%|█████▎    | 292632/552076 [00:04<00:04, 63457.30it/s] 54%|█████▍    | 299323/552076 [00:04<00:03, 64452.28it/s] 55%|█████▌    | 306038/552076 [00:04<00:03, 65235.95it/s] 57%|█████▋    | 312780/552076 [00:04<00:03, 65874.80it/s] 58%|█████▊    | 319469/552076 [00:04<00:03, 66174.07it/s] 59%|█████▉    | 326118/552076 [00:04<00:03, 61721.99it/s] 60%|██████    | 332816/552076 [00:04<00:03, 63208.89it/s] 61%|██████▏   | 339466/552076 [00:05<00:03, 64161.34it/s] 63%|██████▎   | 345933/552076 [00:05<00:03, 62534.44it/s] 64%|██████▍   | 352527/552076 [00:05<00:03, 63517.17it/s] 65%|██████▌   | 358914/552076 [00:05<00:03, 63379.18it/s] 66%|██████▌   | 365677/552076 [00:05<00:02, 64596.07it/s] 67%|██████▋   | 372451/552076 [00:05<00:02, 65508.10it/s] 69%|██████▊   | 379178/552076 [00:05<00:02, 66024.70it/s] 70%|██████▉   | 385864/552076 [00:05<00:02, 66273.06it/s] 71%|███████   | 392517/552076 [00:05<00:02, 66349.43it/s] 72%|███████▏  | 399160/552076 [00:05<00:02, 64167.37it/s] 73%|███████▎  | 405598/552076 [00:06<00:02, 64018.42it/s] 75%|███████▍  | 412389/552076 [00:06<00:02, 65135.89it/s] 76%|███████▌  | 419006/552076 [00:06<00:02, 65442.32it/s] 77%|███████▋  | 425693/552076 [00:06<00:01, 65861.55it/s] 78%|███████▊  | 432468/552076 [00:06<00:01, 66416.31it/s] 80%|███████▉  | 439117/552076 [00:06<00:01, 65474.26it/s] 81%|████████  | 445745/552076 [00:06<00:01, 65713.05it/s] 82%|████████▏ | 452518/552076 [00:06<00:01, 66302.83it/s] 83%|████████▎ | 459154/552076 [00:06<00:01, 61120.72it/s] 84%|████████▍ | 465350/552076 [00:07<00:01, 61046.67it/s] 85%|████████▌ | 471546/552076 [00:07<00:01, 61316.98it/s] 87%|████████▋ | 478644/552076 [00:07<00:01, 63927.39it/s] 89%|████████▊ | 489910/552076 [00:07<00:00, 70937.70it/s] 90%|█████████ | 498648/552076 [00:07<00:00, 75180.83it/s] 92%|█████████▏| 507351/552076 [00:07<00:00, 78381.38it/s] 94%|█████████▍| 519502/552076 [00:07<00:00, 87720.75it/s] 96%|█████████▋| 531599/552076 [00:07<00:00, 95603.89it/s] 98%|█████████▊| 543741/552076 [00:07<00:00, 102115.38it/s]100%|██████████| 552076/552076 [00:07<00:00, 69696.69it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11590/552076 [00:00<00:04, 115890.72it/s]  4%|▍         | 21236/552076 [00:00<00:04, 109285.36it/s]  6%|▌         | 31685/552076 [00:00<00:04, 107061.88it/s]  7%|▋         | 41380/552076 [00:00<00:04, 103812.71it/s]  9%|▉         | 50670/552076 [00:00<00:05, 100276.34it/s] 11%|█         | 62036/552076 [00:00<00:04, 103947.31it/s] 13%|█▎        | 71153/552076 [00:00<00:05, 89509.31it/s]  15%|█▌        | 83197/552076 [00:00<00:04, 96979.55it/s] 17%|█▋        | 94027/552076 [00:00<00:04, 100117.05it/s] 19%|█▉        | 104749/552076 [00:01<00:04, 102145.55it/s] 21%|██        | 116423/552076 [00:01<00:04, 106123.89it/s] 23%|██▎       | 127027/552076 [00:01<00:04, 101601.96it/s] 25%|██▌       | 139090/552076 [00:01<00:03, 106646.90it/s] 27%|██▋       | 151275/552076 [00:01<00:03, 110793.81it/s] 30%|██▉       | 163323/552076 [00:01<00:03, 113531.05it/s] 32%|███▏      | 175347/552076 [00:01<00:03, 115461.52it/s] 34%|███▍      | 187127/552076 [00:01<00:03, 116151.48it/s] 36%|███▌      | 199404/552076 [00:01<00:02, 118058.88it/s] 38%|███▊      | 211253/552076 [00:01<00:02, 117318.29it/s] 40%|████      | 223022/552076 [00:02<00:02, 117428.00it/s] 43%|████▎     | 234787/552076 [00:02<00:02, 117103.57it/s] 45%|████▍     | 246513/552076 [00:02<00:02, 108689.19it/s] 47%|████▋     | 258508/552076 [00:02<00:02, 111838.50it/s] 49%|████▉     | 269833/552076 [00:02<00:02, 112257.24it/s] 51%|█████     | 281835/552076 [00:02<00:02, 114476.08it/s] 53%|█████▎    | 293897/552076 [00:02<00:02, 116250.38it/s] 55%|█████▌    | 305858/552076 [00:02<00:02, 117235.77it/s] 58%|█████▊    | 317773/552076 [00:02<00:01, 117801.91it/s] 60%|█████▉    | 329955/552076 [00:02<00:01, 118978.93it/s] 62%|██████▏   | 342341/552076 [00:03<00:01, 120399.39it/s] 64%|██████▍   | 354505/552076 [00:03<00:01, 120765.94it/s] 66%|██████▋   | 366596/552076 [00:03<00:01, 114664.75it/s] 68%|██████▊   | 378137/552076 [00:03<00:01, 114098.75it/s] 71%|███████   | 390403/552076 [00:03<00:01, 116537.32it/s] 73%|███████▎  | 402676/552076 [00:03<00:01, 118328.29it/s] 75%|███████▌  | 414847/552076 [00:03<00:01, 119320.26it/s] 77%|███████▋  | 426810/552076 [00:03<00:01, 117913.62it/s] 79%|███████▉  | 438627/552076 [00:03<00:00, 116680.84it/s] 82%|████████▏ | 450316/552076 [00:04<00:00, 108962.94it/s] 84%|████████▎ | 461331/552076 [00:04<00:00, 97188.67it/s]  86%|████████▌ | 473178/552076 [00:04<00:00, 102722.52it/s] 88%|████████▊ | 485299/552076 [00:04<00:00, 107647.15it/s] 90%|█████████ | 497324/552076 [00:04<00:00, 111141.51it/s] 92%|█████████▏| 509674/552076 [00:04<00:00, 114579.59it/s] 95%|█████████▍| 522022/552076 [00:04<00:00, 117109.98it/s] 97%|█████████▋| 534269/552076 [00:04<00:00, 118666.78it/s] 99%|█████████▉| 546546/552076 [00:04<00:00, 119867.35it/s]100%|██████████| 552076/552076 [00:04<00:00, 112139.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6544/552076 [00:00<00:08, 65433.67it/s]  2%|▏         | 12924/552076 [00:00<00:08, 64934.44it/s]  4%|▎         | 19469/552076 [00:00<00:08, 65087.12it/s]  5%|▍         | 26232/552076 [00:00<00:07, 65829.55it/s]  6%|▌         | 32946/552076 [00:00<00:07, 66215.16it/s]  7%|▋         | 39706/552076 [00:00<00:07, 66624.59it/s]  8%|▊         | 46354/552076 [00:00<00:07, 66581.07it/s] 10%|▉         | 53103/552076 [00:00<00:07, 66850.38it/s] 11%|█         | 59759/552076 [00:00<00:07, 66760.91it/s] 12%|█▏        | 66549/552076 [00:01<00:07, 67098.06it/s] 13%|█▎        | 73318/552076 [00:01<00:07, 67273.28it/s] 14%|█▍        | 79987/552076 [00:01<00:07, 67095.22it/s] 16%|█▌        | 86607/552076 [00:01<00:06, 66580.18it/s] 17%|█▋        | 93419/552076 [00:01<00:06, 67032.52it/s] 18%|█▊        | 100233/552076 [00:01<00:06, 67358.56it/s] 19%|█▉        | 107008/552076 [00:01<00:06, 67473.99it/s] 21%|██        | 113735/552076 [00:01<00:06, 67141.36it/s] 22%|██▏       | 122524/552076 [00:01<00:05, 72257.45it/s] 24%|██▎       | 129851/552076 [00:01<00:05, 71011.12it/s] 26%|██▌       | 141690/552076 [00:02<00:05, 80698.49it/s] 28%|██▊       | 152265/552076 [00:02<00:04, 86870.63it/s] 30%|██▉       | 164106/552076 [00:02<00:04, 92964.81it/s] 31%|███▏      | 173864/552076 [00:02<00:04, 93335.98it/s] 34%|███▎      | 185865/552076 [00:02<00:03, 100002.44it/s] 36%|███▌      | 197842/552076 [00:02<00:03, 105211.58it/s] 38%|███▊      | 210068/552076 [00:02<00:03, 109802.56it/s] 40%|████      | 221766/552076 [00:02<00:02, 111860.00it/s] 42%|████▏     | 233966/552076 [00:02<00:02, 114719.44it/s] 44%|████▍     | 245600/552076 [00:02<00:03, 101564.17it/s] 47%|████▋     | 257640/552076 [00:03<00:02, 106565.52it/s] 49%|████▊     | 268635/552076 [00:03<00:03, 83642.97it/s]  51%|█████     | 279915/552076 [00:03<00:03, 90674.05it/s] 53%|█████▎    | 291160/552076 [00:03<00:02, 96264.74it/s] 55%|█████▍    | 301492/552076 [00:03<00:02, 96717.76it/s] 56%|█████▋    | 311659/552076 [00:03<00:02, 89896.39it/s] 58%|█████▊    | 322098/552076 [00:03<00:02, 93803.30it/s] 60%|██████    | 333119/552076 [00:03<00:02, 98186.26it/s] 62%|██████▏   | 343239/552076 [00:04<00:02, 91535.46it/s] 64%|██████▍   | 352695/552076 [00:04<00:02, 84327.70it/s] 65%|██████▌   | 361451/552076 [00:04<00:02, 76486.40it/s] 67%|██████▋   | 372614/552076 [00:04<00:02, 84463.32it/s] 69%|██████▉   | 381574/552076 [00:04<00:02, 80948.15it/s] 71%|███████▏  | 393708/552076 [00:04<00:01, 89928.44it/s] 73%|███████▎  | 403288/552076 [00:04<00:01, 91320.99it/s] 75%|███████▍  | 412836/552076 [00:04<00:01, 90248.49it/s] 76%|███████▋  | 422155/552076 [00:05<00:01, 71933.22it/s] 79%|███████▊  | 434289/552076 [00:05<00:01, 81941.91it/s] 80%|████████  | 443689/552076 [00:05<00:01, 85219.93it/s] 82%|████████▏ | 452971/552076 [00:05<00:01, 86826.18it/s] 84%|████████▎ | 462193/552076 [00:05<00:01, 79537.25it/s] 86%|████████▌ | 474002/552076 [00:05<00:00, 88172.44it/s] 88%|████████▊ | 485648/552076 [00:05<00:00, 95101.38it/s] 90%|█████████ | 497101/552076 [00:05<00:00, 100199.62it/s] 92%|█████████▏| 507617/552076 [00:05<00:00, 76730.80it/s]  94%|█████████▍| 519866/552076 [00:06<00:00, 86414.93it/s] 96%|█████████▋| 531388/552076 [00:06<00:00, 93421.15it/s] 98%|█████████▊| 543253/552076 [00:06<00:00, 99785.87it/s]100%|██████████| 552076/552076 [00:06<00:00, 86939.50it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10653/552076 [00:00<00:05, 106525.28it/s]  4%|▍         | 21914/552076 [00:00<00:04, 108279.42it/s]  6%|▌         | 33405/552076 [00:00<00:04, 110185.66it/s]  8%|▊         | 45201/552076 [00:00<00:04, 112407.91it/s] 10%|█         | 56577/552076 [00:00<00:04, 112810.02it/s] 12%|█▏        | 68663/552076 [00:00<00:04, 115107.88it/s] 15%|█▍        | 80602/552076 [00:00<00:04, 116359.87it/s] 17%|█▋        | 92465/552076 [00:00<00:03, 117029.12it/s] 19%|█▉        | 104035/552076 [00:00<00:03, 116626.30it/s] 21%|██        | 115804/552076 [00:01<00:03, 116942.50it/s] 23%|██▎       | 127841/552076 [00:01<00:03, 117948.29it/s] 25%|██▌       | 139570/552076 [00:01<00:03, 117749.64it/s] 27%|██▋       | 151668/552076 [00:01<00:03, 118699.86it/s] 30%|██▉       | 163632/552076 [00:01<00:03, 118979.79it/s] 32%|███▏      | 175660/552076 [00:01<00:03, 117640.97it/s] 34%|███▍      | 187712/552076 [00:01<00:03, 118487.66it/s] 36%|███▌      | 199532/552076 [00:01<00:02, 117578.96it/s] 38%|███▊      | 211875/552076 [00:01<00:02, 119272.99it/s] 41%|████      | 224026/552076 [00:01<00:02, 119933.74it/s] 43%|████▎     | 236288/552076 [00:02<00:02, 120724.83it/s] 45%|████▍     | 248359/552076 [00:02<00:02, 113396.89it/s] 47%|████▋     | 260511/552076 [00:02<00:02, 115715.76it/s] 49%|████▉     | 272834/552076 [00:02<00:02, 117869.39it/s] 52%|█████▏    | 284919/552076 [00:02<00:02, 118747.72it/s] 54%|█████▍    | 297138/552076 [00:02<00:02, 119758.64it/s] 56%|█████▌    | 309303/552076 [00:02<00:02, 120319.62it/s] 58%|█████▊    | 321383/552076 [00:02<00:01, 120461.73it/s] 60%|██████    | 333538/552076 [00:02<00:01, 120785.42it/s] 63%|██████▎   | 345927/552076 [00:02<00:01, 121699.69it/s] 65%|██████▍   | 358313/552076 [00:03<00:01, 122338.05it/s] 67%|██████▋   | 370680/552076 [00:03<00:01, 122732.03it/s] 69%|██████▉   | 383056/552076 [00:03<00:01, 123038.31it/s] 72%|███████▏  | 395365/552076 [00:03<00:01, 122289.51it/s] 74%|███████▍  | 407734/552076 [00:03<00:01, 122703.57it/s] 76%|███████▌  | 420077/552076 [00:03<00:01, 122919.84it/s] 78%|███████▊  | 432375/552076 [00:03<00:00, 122935.55it/s] 81%|████████  | 444671/552076 [00:03<00:00, 122682.07it/s] 83%|████████▎ | 456941/552076 [00:03<00:00, 122654.24it/s] 85%|████████▍ | 469208/552076 [00:03<00:00, 122609.63it/s] 87%|████████▋ | 481470/552076 [00:04<00:00, 122595.51it/s] 89%|████████▉ | 493790/552076 [00:04<00:00, 122773.64it/s] 92%|█████████▏| 506252/552076 [00:04<00:00, 123320.24it/s] 94%|█████████▍| 518685/552076 [00:04<00:00, 123619.46it/s] 96%|█████████▌| 531048/552076 [00:04<00:00, 123459.83it/s] 98%|█████████▊| 543395/552076 [00:04<00:00, 122891.43it/s]100%|██████████| 552076/552076 [00:04<00:00, 119858.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11838/552076 [00:00<00:04, 118374.47it/s]  4%|▍         | 23794/552076 [00:00<00:04, 118725.83it/s]  6%|▋         | 35810/552076 [00:00<00:04, 119152.08it/s]  9%|▊         | 47904/552076 [00:00<00:04, 119681.82it/s] 11%|█         | 60140/552076 [00:00<00:04, 120470.37it/s] 13%|█▎        | 72436/552076 [00:00<00:03, 121205.36it/s] 15%|█▌        | 84316/552076 [00:00<00:03, 120472.49it/s] 17%|█▋        | 96382/552076 [00:00<00:03, 120526.13it/s] 20%|█▉        | 108625/552076 [00:00<00:03, 121088.59it/s] 22%|██▏       | 120688/552076 [00:01<00:03, 120949.47it/s] 24%|██▍       | 132861/552076 [00:01<00:03, 121182.01it/s] 26%|██▋       | 145068/552076 [00:01<00:03, 121444.14it/s] 28%|██▊       | 157090/552076 [00:01<00:03, 121072.32it/s] 31%|███       | 169416/552076 [00:01<00:03, 121719.00it/s] 33%|███▎      | 181714/552076 [00:01<00:03, 122094.44it/s] 35%|███▌      | 193869/552076 [00:01<00:02, 121650.27it/s] 37%|███▋      | 206029/552076 [00:01<00:02, 121634.44it/s] 40%|███▉      | 218360/552076 [00:01<00:02, 122130.01it/s] 42%|████▏     | 230687/552076 [00:01<00:02, 122469.21it/s] 45%|████▍     | 246111/552076 [00:02<00:02, 130534.33it/s] 49%|████▉     | 269675/552076 [00:02<00:01, 150699.28it/s] 53%|█████▎    | 291736/552076 [00:02<00:01, 166529.78it/s] 57%|█████▋    | 314330/552076 [00:02<00:01, 180790.03it/s] 61%|██████    | 337838/552076 [00:02<00:01, 194246.86it/s] 65%|██████▍   | 358470/552076 [00:02<00:01, 185673.79it/s] 68%|██████▊   | 377963/552076 [00:02<00:00, 181232.83it/s] 73%|███████▎  | 400447/552076 [00:02<00:00, 192429.11it/s] 77%|███████▋  | 423408/552076 [00:02<00:00, 202253.25it/s] 81%|████████  | 446743/552076 [00:02<00:00, 210675.30it/s] 85%|████████▍ | 468317/552076 [00:03<00:00, 201479.36it/s] 89%|████████▊ | 488905/552076 [00:03<00:00, 192709.65it/s] 93%|█████████▎| 512345/552076 [00:03<00:00, 203570.49it/s] 97%|█████████▋| 535898/552076 [00:03<00:00, 212207.14it/s]100%|██████████| 552076/552076 [00:03<00:00, 160437.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21754/552076 [00:00<00:02, 217536.06it/s]  8%|▊         | 44268/552076 [00:00<00:02, 219761.59it/s] 12%|█▏        | 67356/552076 [00:00<00:02, 222980.62it/s] 16%|█▋        | 90717/552076 [00:00<00:02, 226065.90it/s] 20%|██        | 112942/552076 [00:00<00:01, 224906.86it/s] 25%|██▍       | 135738/552076 [00:00<00:01, 225812.00it/s] 29%|██▊       | 158485/552076 [00:00<00:01, 226306.28it/s] 33%|███▎      | 180908/552076 [00:00<00:01, 225678.30it/s] 37%|███▋      | 203794/552076 [00:00<00:01, 226620.65it/s] 41%|████      | 226422/552076 [00:01<00:01, 226517.77it/s] 45%|████▌     | 249296/552076 [00:01<00:01, 227178.50it/s] 49%|████▉     | 271808/552076 [00:01<00:01, 226556.26it/s] 53%|█████▎    | 294847/552076 [00:01<00:01, 227692.02it/s] 58%|█████▊    | 318081/552076 [00:01<00:01, 229066.19it/s] 62%|██████▏   | 340958/552076 [00:01<00:00, 228976.99it/s] 66%|██████▌   | 363847/552076 [00:01<00:00, 228948.98it/s] 70%|███████   | 386672/552076 [00:01<00:00, 228643.19it/s] 74%|███████▍  | 409617/552076 [00:01<00:00, 228880.95it/s] 78%|███████▊  | 432567/552076 [00:01<00:00, 229066.05it/s] 83%|████████▎ | 455640/552076 [00:02<00:00, 229562.12it/s] 87%|████████▋ | 478580/552076 [00:02<00:00, 229317.43it/s] 91%|█████████ | 501501/552076 [00:02<00:00, 228308.08it/s] 95%|█████████▌| 524538/552076 [00:02<00:00, 228921.86it/s] 99%|█████████▉| 547657/552076 [00:02<00:00, 229596.21it/s]100%|██████████| 552076/552076 [00:02<00:00, 228008.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20236/552076 [00:00<00:02, 202356.82it/s]  8%|▊         | 41941/552076 [00:00<00:02, 206548.81it/s] 12%|█▏        | 63572/552076 [00:00<00:02, 209383.31it/s] 16%|█▌        | 86157/552076 [00:00<00:02, 214063.58it/s] 20%|█▉        | 108878/552076 [00:00<00:02, 217842.92it/s] 24%|██▍       | 131859/552076 [00:00<00:01, 221299.09it/s] 28%|██▊       | 154739/552076 [00:00<00:01, 223497.12it/s] 32%|███▏      | 177362/552076 [00:00<00:01, 224309.13it/s] 36%|███▌      | 199427/552076 [00:00<00:01, 223197.16it/s] 40%|████      | 222517/552076 [00:01<00:01, 225450.58it/s] 45%|████▍     | 245871/552076 [00:01<00:01, 227814.99it/s] 49%|████▉     | 269274/552076 [00:01<00:01, 229642.04it/s] 53%|█████▎    | 292318/552076 [00:01<00:01, 229880.09it/s] 57%|█████▋    | 315685/552076 [00:01<00:01, 231002.36it/s] 61%|██████▏   | 339181/552076 [00:01<00:00, 232173.51it/s] 66%|██████▌   | 362846/552076 [00:01<00:00, 233496.83it/s] 70%|██████▉   | 386315/552076 [00:01<00:00, 233853.41it/s] 74%|███████▍  | 409659/552076 [00:01<00:00, 232609.37it/s] 78%|███████▊  | 432893/552076 [00:01<00:00, 232081.50it/s] 83%|████████▎ | 456291/552076 [00:02<00:00, 232647.04it/s] 87%|████████▋ | 479543/552076 [00:02<00:00, 232580.19it/s] 91%|█████████ | 502792/552076 [00:02<00:00, 227683.25it/s] 95%|█████████▌| 525577/552076 [00:02<00:00, 227555.19it/s] 99%|█████████▉| 548434/552076 [00:02<00:00, 227856.31it/s]100%|██████████| 552076/552076 [00:02<00:00, 227599.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22294/552076 [00:00<00:02, 222932.24it/s]  8%|▊         | 45599/552076 [00:00<00:02, 225871.66it/s] 12%|█▏        | 68024/552076 [00:00<00:02, 225381.31it/s] 17%|█▋        | 91345/552076 [00:00<00:02, 227672.80it/s] 21%|██        | 114446/552076 [00:00<00:01, 228662.56it/s] 25%|██▍       | 137399/552076 [00:00<00:01, 228920.37it/s] 29%|██▉       | 160344/552076 [00:00<00:01, 229078.58it/s] 33%|███▎      | 183809/552076 [00:00<00:01, 230719.98it/s] 37%|███▋      | 206985/552076 [00:00<00:01, 231030.41it/s] 42%|████▏     | 230469/552076 [00:01<00:01, 232158.84it/s] 46%|████▌     | 253462/552076 [00:01<00:01, 231483.89it/s] 50%|█████     | 276252/552076 [00:01<00:01, 230391.68it/s] 54%|█████▍    | 298987/552076 [00:01<00:01, 184521.11it/s] 58%|█████▊    | 318681/552076 [00:01<00:01, 159355.43it/s] 61%|██████    | 336094/552076 [00:01<00:01, 146356.72it/s] 64%|██████▍   | 351972/552076 [00:01<00:01, 138637.94it/s] 66%|██████▋   | 366790/552076 [00:01<00:01, 133065.09it/s] 69%|██████▉   | 380812/552076 [00:02<00:01, 129096.21it/s] 71%|███████▏  | 394249/552076 [00:02<00:01, 126971.85it/s] 74%|███████▍  | 407323/552076 [00:02<00:01, 126095.92it/s] 76%|███████▌  | 420198/552076 [00:02<00:01, 125041.10it/s] 78%|███████▊  | 432890/552076 [00:02<00:00, 123249.20it/s] 81%|████████  | 445352/552076 [00:02<00:00, 122635.21it/s] 83%|████████▎ | 457713/552076 [00:02<00:00, 120819.28it/s] 85%|████████▌ | 469869/552076 [00:02<00:00, 120602.36it/s] 87%|████████▋ | 482035/552076 [00:02<00:00, 120911.13it/s] 90%|████████▉ | 494163/552076 [00:02<00:00, 120384.48it/s] 92%|█████████▏| 506228/552076 [00:03<00:00, 119157.30it/s] 94%|█████████▍| 518375/552076 [00:03<00:00, 119839.98it/s] 96%|█████████▌| 530508/552076 [00:03<00:00, 120281.63it/s] 98%|█████████▊| 542607/552076 [00:03<00:00, 120490.90it/s]100%|██████████| 552076/552076 [00:03<00:00, 158983.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4788/552076 [00:00<00:11, 45938.27it/s]  2%|▏         | 11242/552076 [00:00<00:10, 50286.28it/s]  3%|▎         | 17200/552076 [00:00<00:10, 52754.33it/s]  4%|▍         | 22390/552076 [00:00<00:10, 50851.85it/s]  5%|▌         | 27981/552076 [00:00<00:10, 52269.79it/s]  6%|▌         | 34265/552076 [00:00<00:09, 55047.03it/s]  7%|▋         | 40440/552076 [00:00<00:09, 56078.66it/s]  9%|▉         | 51901/552076 [00:00<00:07, 66224.84it/s] 11%|█         | 61315/552076 [00:00<00:06, 72690.97it/s] 13%|█▎        | 69143/552076 [00:01<00:06, 72823.81it/s] 14%|█▍        | 76817/552076 [00:01<00:06, 72366.45it/s] 15%|█▌        | 84329/552076 [00:01<00:06, 72508.43it/s] 17%|█▋        | 91773/552076 [00:01<00:06, 68615.75it/s] 18%|█▊        | 98813/552076 [00:01<00:06, 67607.30it/s] 20%|█▉        | 109933/552076 [00:01<00:05, 76617.16it/s] 22%|██▏       | 119534/552076 [00:01<00:05, 81558.83it/s] 23%|██▎       | 129702/552076 [00:01<00:04, 86704.42it/s] 25%|██▌       | 138766/552076 [00:01<00:05, 77238.06it/s] 27%|██▋       | 148112/552076 [00:02<00:04, 81480.23it/s] 29%|██▉       | 159470/552076 [00:02<00:04, 89028.28it/s] 31%|███       | 171476/552076 [00:02<00:03, 96511.60it/s] 33%|███▎      | 183729/552076 [00:02<00:03, 103076.32it/s] 35%|███▌      | 195813/552076 [00:02<00:03, 107829.65it/s] 38%|███▊      | 207772/552076 [00:02<00:03, 111104.88it/s] 40%|███▉      | 219911/552076 [00:02<00:02, 113999.84it/s] 42%|████▏     | 232073/552076 [00:02<00:02, 116183.50it/s] 44%|████▍     | 244117/552076 [00:02<00:02, 117426.34it/s] 46%|████▋     | 256204/552076 [00:02<00:02, 118436.45it/s] 49%|████▊     | 268137/552076 [00:03<00:02, 118440.97it/s] 51%|█████     | 280212/552076 [00:03<00:02, 119121.62it/s] 53%|█████▎    | 292169/552076 [00:03<00:02, 115275.80it/s] 55%|█████▌    | 304381/552076 [00:03<00:02, 117246.84it/s] 57%|█████▋    | 316667/552076 [00:03<00:01, 118876.05it/s] 60%|█████▉    | 328802/552076 [00:03<00:01, 119605.68it/s] 62%|██████▏   | 340792/552076 [00:03<00:01, 118838.36it/s] 64%|██████▍   | 352698/552076 [00:03<00:01, 105117.53it/s] 66%|██████▌   | 363516/552076 [00:03<00:02, 91837.52it/s]  68%|██████▊   | 373217/552076 [00:04<00:02, 77855.47it/s] 69%|██████▉   | 382674/552076 [00:04<00:02, 82213.77it/s] 71%|███████   | 391471/552076 [00:04<00:02, 79303.33it/s] 72%|███████▏  | 399827/552076 [00:04<00:01, 77325.54it/s] 74%|███████▍  | 410803/552076 [00:04<00:01, 84846.70it/s] 76%|███████▋  | 422218/552076 [00:04<00:01, 91925.25it/s] 78%|███████▊  | 431888/552076 [00:04<00:01, 92469.82it/s] 80%|███████▉  | 441470/552076 [00:04<00:01, 90824.57it/s] 82%|████████▏ | 451928/552076 [00:04<00:01, 94554.81it/s] 84%|████████▎ | 461592/552076 [00:05<00:01, 86945.70it/s] 86%|████████▌ | 472103/552076 [00:05<00:00, 91699.26it/s] 87%|████████▋ | 481529/552076 [00:05<00:00, 90769.69it/s] 89%|████████▉ | 493546/552076 [00:05<00:00, 97957.69it/s] 92%|█████████▏| 505462/552076 [00:05<00:00, 103480.60it/s] 94%|█████████▎| 517447/552076 [00:05<00:00, 107899.44it/s] 96%|█████████▌| 529552/552076 [00:05<00:00, 111532.24it/s] 98%|█████████▊| 541754/552076 [00:05<00:00, 114483.13it/s]100%|██████████| 552076/552076 [00:05<00:00, 94117.90it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7770/552076 [00:00<00:07, 77696.55it/s]  3%|▎         | 17691/552076 [00:00<00:06, 83102.36it/s]  5%|▌         | 29476/552076 [00:00<00:05, 91164.74it/s]  8%|▊         | 41576/552076 [00:00<00:05, 98446.66it/s] 10%|▉         | 53473/552076 [00:00<00:04, 103817.54it/s] 12%|█▏        | 65539/552076 [00:00<00:04, 108354.12it/s] 14%|█▍        | 77681/552076 [00:00<00:04, 111968.36it/s] 16%|█▌        | 89459/552076 [00:00<00:04, 113648.17it/s] 18%|█▊        | 101907/552076 [00:00<00:03, 116692.16it/s] 21%|██        | 114704/552076 [00:01<00:03, 119858.75it/s] 23%|██▎       | 126880/552076 [00:01<00:03, 120420.34it/s] 25%|██▌       | 138966/552076 [00:01<00:03, 120550.56it/s] 27%|██▋       | 151002/552076 [00:01<00:03, 120491.98it/s] 30%|██▉       | 163018/552076 [00:01<00:03, 120013.97it/s] 32%|███▏      | 175123/552076 [00:01<00:03, 120322.43it/s] 34%|███▍      | 187140/552076 [00:01<00:03, 110898.82it/s] 36%|███▌      | 198365/552076 [00:01<00:03, 94687.23it/s]  38%|███▊      | 211406/552076 [00:01<00:03, 103164.28it/s] 41%|████      | 223619/552076 [00:01<00:03, 108204.41it/s] 43%|████▎     | 235443/552076 [00:02<00:02, 111031.35it/s] 45%|████▍     | 246894/552076 [00:02<00:03, 91463.01it/s]  47%|████▋     | 258860/552076 [00:02<00:02, 98419.10it/s] 49%|████▉     | 270791/552076 [00:02<00:02, 103874.80it/s] 51%|█████     | 282807/552076 [00:02<00:02, 108277.18it/s] 53%|█████▎    | 294093/552076 [00:02<00:02, 91545.74it/s]  56%|█████▌    | 307154/552076 [00:02<00:02, 100569.32it/s] 58%|█████▊    | 318016/552076 [00:02<00:02, 92617.07it/s]  59%|█████▉    | 327965/552076 [00:03<00:02, 92041.21it/s] 62%|██████▏   | 339751/552076 [00:03<00:02, 98515.39it/s] 64%|██████▎   | 351334/552076 [00:03<00:01, 103139.96it/s] 66%|██████▌   | 362988/552076 [00:03<00:01, 106823.76it/s] 68%|██████▊   | 374854/552076 [00:03<00:01, 110118.42it/s] 70%|███████   | 386536/552076 [00:03<00:01, 112044.62it/s] 72%|███████▏  | 399054/552076 [00:03<00:01, 115685.57it/s] 74%|███████▍  | 411242/552076 [00:03<00:01, 117476.63it/s] 77%|███████▋  | 423302/552076 [00:03<00:01, 118395.89it/s] 79%|███████▉  | 435261/552076 [00:03<00:00, 118750.55it/s] 81%|████████  | 447305/552076 [00:04<00:00, 119251.66it/s] 83%|████████▎ | 459271/552076 [00:04<00:00, 117164.79it/s] 85%|████████▌ | 471024/552076 [00:04<00:00, 116945.89it/s] 87%|████████▋ | 482745/552076 [00:04<00:00, 115434.69it/s] 90%|████████▉ | 495148/552076 [00:04<00:00, 117883.65it/s] 92%|█████████▏| 508243/552076 [00:04<00:00, 121520.78it/s] 94%|█████████▍| 520504/552076 [00:04<00:00, 121844.07it/s] 96%|█████████▋| 532723/552076 [00:04<00:00, 119633.37it/s] 99%|█████████▊| 544720/552076 [00:04<00:00, 118182.65it/s]100%|██████████| 552076/552076 [00:04<00:00, 111123.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11741/552076 [00:00<00:04, 117406.75it/s]  4%|▍         | 23406/552076 [00:00<00:04, 117177.30it/s]  6%|▋         | 35414/552076 [00:00<00:04, 118031.31it/s]  9%|▊         | 46994/552076 [00:00<00:04, 117349.40it/s] 11%|█         | 58675/552076 [00:00<00:04, 117186.84it/s] 13%|█▎        | 70895/552076 [00:00<00:04, 118644.37it/s] 15%|█▌        | 83092/552076 [00:00<00:03, 119622.31it/s] 17%|█▋        | 95288/552076 [00:00<00:03, 120312.57it/s] 19%|█▉        | 107563/552076 [00:00<00:03, 121030.79it/s] 22%|██▏       | 119671/552076 [00:01<00:03, 121045.33it/s] 24%|██▍       | 131628/552076 [00:01<00:03, 120595.91it/s] 26%|██▌       | 143459/552076 [00:01<00:03, 118599.29it/s] 28%|██▊       | 155516/552076 [00:01<00:03, 119182.81it/s] 30%|███       | 167328/552076 [00:01<00:03, 115885.81it/s] 32%|███▏      | 178862/552076 [00:01<00:03, 114376.61it/s] 34%|███▍      | 190266/552076 [00:01<00:03, 113575.38it/s] 37%|███▋      | 201602/552076 [00:01<00:03, 113126.75it/s] 39%|███▊      | 212900/552076 [00:01<00:03, 112824.89it/s] 41%|████      | 224173/552076 [00:01<00:02, 112765.77it/s] 43%|████▎     | 235443/552076 [00:02<00:02, 112620.84it/s] 45%|████▍     | 247051/552076 [00:02<00:02, 113635.66it/s] 47%|████▋     | 258996/552076 [00:02<00:02, 115317.93it/s] 49%|████▉     | 270946/552076 [00:02<00:02, 116540.87it/s] 51%|█████     | 282924/552076 [00:02<00:02, 117490.96it/s] 53%|█████▎    | 294680/552076 [00:02<00:02, 115271.18it/s] 55%|█████▌    | 306222/552076 [00:02<00:02, 113223.63it/s] 58%|█████▊    | 317563/552076 [00:02<00:02, 111188.57it/s] 60%|█████▉    | 328731/552076 [00:02<00:02, 111334.07it/s] 62%|██████▏   | 341051/552076 [00:02<00:01, 114646.51it/s] 64%|██████▍   | 353306/552076 [00:03<00:01, 116907.40it/s] 66%|██████▌   | 365682/552076 [00:03<00:01, 118881.12it/s] 68%|██████▊   | 377850/552076 [00:03<00:01, 119706.95it/s] 71%|███████   | 389846/552076 [00:03<00:01, 119454.50it/s] 73%|███████▎  | 401809/552076 [00:03<00:01, 114267.70it/s] 75%|███████▍  | 413296/552076 [00:03<00:01, 112363.77it/s] 77%|███████▋  | 425388/552076 [00:03<00:01, 114800.22it/s] 79%|███████▉  | 437993/552076 [00:03<00:00, 117956.41it/s] 81%|████████▏ | 449934/552076 [00:03<00:00, 118387.11it/s] 84%|████████▎ | 461812/552076 [00:04<00:00, 101769.46it/s] 86%|████████▌ | 472426/552076 [00:04<00:01, 69664.90it/s]  87%|████████▋ | 481060/552076 [00:04<00:01, 53455.34it/s] 88%|████████▊ | 488143/552076 [00:04<00:01, 51304.42it/s] 90%|█████████ | 498311/552076 [00:04<00:00, 60260.93it/s] 92%|█████████▏| 507945/552076 [00:04<00:00, 67887.23it/s] 94%|█████████▍| 518606/552076 [00:04<00:00, 76188.48it/s] 96%|█████████▌| 529020/552076 [00:05<00:00, 82858.62it/s] 98%|█████████▊| 538457/552076 [00:05<00:00, 86005.36it/s] 99%|█████████▉| 547836/552076 [00:05<00:00, 66374.67it/s]100%|██████████| 552076/552076 [00:05<00:00, 100836.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5433/552076 [00:00<00:10, 51234.00it/s]  2%|▏         | 11671/552076 [00:00<00:09, 54134.69it/s]  4%|▍         | 21225/552076 [00:00<00:08, 62224.40it/s]  6%|▌         | 31878/552076 [00:00<00:07, 71094.53it/s]  8%|▊         | 42665/552076 [00:00<00:06, 79192.57it/s] 10%|▉         | 53489/552076 [00:00<00:05, 86125.57it/s] 12%|█▏        | 64356/552076 [00:00<00:05, 91841.39it/s] 14%|█▎        | 75433/552076 [00:00<00:04, 96802.22it/s] 16%|█▌        | 86161/552076 [00:00<00:04, 99723.66it/s] 17%|█▋        | 96311/552076 [00:01<00:04, 97390.11it/s] 19%|█▉        | 107193/552076 [00:01<00:04, 100557.66it/s] 22%|██▏       | 118894/552076 [00:01<00:04, 104984.18it/s] 24%|██▎       | 130208/552076 [00:01<00:03, 107303.82it/s] 26%|██▌       | 141312/552076 [00:01<00:03, 108397.88it/s] 28%|██▊       | 152275/552076 [00:01<00:03, 108763.01it/s] 30%|██▉       | 163209/552076 [00:01<00:03, 108933.17it/s] 32%|███▏      | 174194/552076 [00:01<00:03, 109205.01it/s] 34%|███▎      | 185142/552076 [00:01<00:03, 109213.16it/s] 36%|███▌      | 196167/552076 [00:01<00:03, 109519.93it/s] 38%|███▊      | 207657/552076 [00:02<00:03, 111078.48it/s] 40%|███▉      | 218780/552076 [00:02<00:03, 102674.45it/s] 42%|████▏     | 229184/552076 [00:02<00:03, 98781.39it/s]  43%|████▎     | 239190/552076 [00:02<00:03, 90410.95it/s] 45%|████▌     | 250228/552076 [00:02<00:03, 93866.73it/s] 47%|████▋     | 259808/552076 [00:02<00:03, 86499.49it/s] 49%|████▊     | 268707/552076 [00:02<00:03, 85377.38it/s] 51%|█████     | 280190/552076 [00:02<00:02, 92494.12it/s] 53%|█████▎    | 292111/552076 [00:02<00:02, 99160.84it/s] 55%|█████▌    | 304190/552076 [00:03<00:02, 104788.55it/s] 57%|█████▋    | 316329/552076 [00:03<00:02, 109269.36it/s] 59%|█████▉    | 328285/552076 [00:03<00:01, 112165.58it/s] 62%|██████▏   | 339715/552076 [00:03<00:01, 108314.62it/s] 64%|██████▎   | 350725/552076 [00:03<00:01, 103768.90it/s] 66%|██████▌   | 362883/552076 [00:03<00:01, 108538.43it/s] 68%|██████▊   | 375139/552076 [00:03<00:01, 112395.42it/s] 70%|███████   | 387356/552076 [00:03<00:01, 115158.47it/s] 72%|███████▏  | 399634/552076 [00:03<00:01, 117341.80it/s] 75%|███████▍  | 411938/552076 [00:03<00:01, 118993.37it/s] 77%|███████▋  | 424072/552076 [00:04<00:01, 119687.21it/s] 79%|███████▉  | 436159/552076 [00:04<00:00, 120037.94it/s] 81%|████████▏ | 448574/552076 [00:04<00:00, 121241.69it/s] 83%|████████▎ | 460728/552076 [00:04<00:00, 121125.05it/s] 86%|████████▌ | 472917/552076 [00:04<00:00, 121353.04it/s] 88%|████████▊ | 485067/552076 [00:04<00:00, 98614.16it/s]  90%|████████▉ | 495631/552076 [00:04<00:00, 93140.45it/s] 92%|█████████▏| 507674/552076 [00:04<00:00, 99931.94it/s] 94%|█████████▍| 519893/552076 [00:04<00:00, 105707.34it/s] 96%|█████████▋| 532224/552076 [00:05<00:00, 110436.09it/s] 99%|█████████▊| 544401/552076 [00:05<00:00, 113607.64it/s]100%|██████████| 552076/552076 [00:05<00:00, 105459.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6695/552076 [00:00<00:08, 66945.44it/s]  3%|▎         | 17023/552076 [00:00<00:07, 74844.28it/s]  4%|▍         | 22060/552076 [00:00<00:08, 61631.01it/s]  5%|▌         | 27816/552076 [00:00<00:09, 54997.57it/s]  6%|▌         | 34201/552076 [00:00<00:09, 57383.24it/s]  8%|▊         | 43845/552076 [00:00<00:07, 65318.87it/s]  9%|▉         | 51959/552076 [00:00<00:07, 69376.22it/s] 11%|█▏        | 62279/552076 [00:00<00:06, 76941.09it/s] 13%|█▎        | 71093/552076 [00:00<00:06, 79987.90it/s] 14%|█▍        | 79296/552076 [00:01<00:05, 80518.00it/s] 17%|█▋        | 91259/552076 [00:01<00:05, 89272.63it/s] 18%|█▊        | 100585/552076 [00:01<00:05, 84025.12it/s] 20%|██        | 112205/552076 [00:01<00:04, 91635.63it/s] 23%|██▎       | 124370/552076 [00:01<00:04, 98959.66it/s] 25%|██▍       | 136556/552076 [00:01<00:03, 104871.15it/s] 27%|██▋       | 148883/552076 [00:01<00:03, 109786.90it/s] 29%|██▉       | 161146/552076 [00:01<00:03, 113346.14it/s] 31%|███▏      | 173301/552076 [00:01<00:03, 115686.28it/s] 34%|███▎      | 185583/552076 [00:01<00:03, 117736.42it/s] 36%|███▌      | 197766/552076 [00:02<00:02, 118934.60it/s] 38%|███▊      | 209946/552076 [00:02<00:02, 119779.32it/s] 40%|████      | 222206/552076 [00:02<00:02, 120611.24it/s] 42%|████▏     | 234325/552076 [00:02<00:02, 120780.54it/s] 45%|████▍     | 246497/552076 [00:02<00:02, 121060.62it/s] 47%|████▋     | 258632/552076 [00:02<00:02, 121104.09it/s] 49%|████▉     | 270841/552076 [00:02<00:02, 121395.20it/s] 51%|█████▏    | 283032/552076 [00:02<00:02, 121548.87it/s] 53%|█████▎    | 295228/552076 [00:02<00:02, 121669.09it/s] 56%|█████▌    | 307402/552076 [00:02<00:02, 121345.27it/s] 58%|█████▊    | 319542/552076 [00:03<00:01, 120865.99it/s] 60%|██████    | 331633/552076 [00:03<00:01, 120767.57it/s] 62%|██████▏   | 343925/552076 [00:03<00:01, 121403.92it/s] 65%|██████▍   | 356241/552076 [00:03<00:01, 121923.16it/s] 67%|██████▋   | 368441/552076 [00:03<00:01, 121945.54it/s] 69%|██████▉   | 380716/552076 [00:03<00:01, 122184.15it/s] 71%|███████   | 392975/552076 [00:03<00:01, 122305.22it/s] 73%|███████▎  | 405207/552076 [00:03<00:01, 122157.06it/s] 76%|███████▌  | 417424/552076 [00:03<00:01, 122125.78it/s] 78%|███████▊  | 429638/552076 [00:03<00:01, 122040.44it/s] 80%|████████  | 441843/552076 [00:04<00:00, 121788.65it/s] 82%|████████▏ | 454085/552076 [00:04<00:00, 121976.97it/s] 84%|████████▍ | 466284/552076 [00:04<00:00, 98519.41it/s]  87%|████████▋ | 478519/552076 [00:04<00:00, 104632.88it/s] 89%|████████▉ | 490798/552076 [00:04<00:00, 109489.76it/s] 91%|█████████ | 502941/552076 [00:04<00:00, 112815.48it/s] 93%|█████████▎| 515157/552076 [00:04<00:00, 115464.30it/s] 96%|█████████▌| 527469/552076 [00:04<00:00, 117658.45it/s] 98%|█████████▊| 539436/552076 [00:04<00:00, 105121.60it/s]100%|█████████▉| 550339/552076 [00:05<00:00, 100223.62it/s]100%|██████████| 552076/552076 [00:05<00:00, 107530.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11737/552076 [00:00<00:04, 117369.83it/s]  4%|▍         | 23609/552076 [00:00<00:04, 117771.10it/s]  6%|▋         | 35447/552076 [00:00<00:04, 117952.22it/s]  9%|▊         | 47395/552076 [00:00<00:04, 118406.38it/s] 11%|█         | 59624/552076 [00:00<00:04, 119543.93it/s] 13%|█▎        | 71892/552076 [00:00<00:03, 120465.03it/s] 15%|█▌        | 84101/552076 [00:00<00:03, 120947.14it/s] 17%|█▋        | 96209/552076 [00:00<00:03, 120986.65it/s] 19%|█▉        | 107634/552076 [00:00<00:04, 103827.71it/s] 21%|██▏       | 117972/552076 [00:01<00:04, 100898.11it/s] 24%|██▎       | 130224/552076 [00:01<00:03, 106537.47it/s] 26%|██▌       | 142332/552076 [00:01<00:03, 110519.68it/s] 28%|██▊       | 154063/552076 [00:01<00:03, 112472.73it/s] 30%|███       | 166314/552076 [00:01<00:03, 115306.82it/s] 32%|███▏      | 178706/552076 [00:01<00:03, 117760.57it/s] 35%|███▍      | 190962/552076 [00:01<00:03, 119159.41it/s] 37%|███▋      | 203149/552076 [00:01<00:02, 119958.36it/s] 39%|███▉      | 215179/552076 [00:01<00:02, 119952.19it/s] 41%|████      | 227396/552076 [00:01<00:02, 120608.05it/s] 43%|████▎     | 239475/552076 [00:02<00:03, 98595.95it/s]  46%|████▌     | 251675/552076 [00:02<00:02, 104615.48it/s] 48%|████▊     | 263820/552076 [00:02<00:02, 109154.08it/s] 50%|████▉     | 275448/552076 [00:02<00:02, 111197.63it/s] 52%|█████▏    | 287599/552076 [00:02<00:02, 114100.17it/s] 54%|█████▍    | 299691/552076 [00:02<00:02, 116061.76it/s] 56%|█████▋    | 311785/552076 [00:02<00:02, 117481.15it/s] 59%|█████▊    | 323940/552076 [00:02<00:01, 118672.86it/s] 61%|██████    | 336052/552076 [00:02<00:01, 119396.17it/s] 63%|██████▎   | 348348/552076 [00:03<00:01, 120442.46it/s] 65%|██████▌   | 360442/552076 [00:03<00:01, 118812.79it/s] 68%|██████▊   | 372847/552076 [00:03<00:01, 120334.54it/s] 70%|██████▉   | 384913/552076 [00:03<00:01, 117179.11it/s] 72%|███████▏  | 396672/552076 [00:03<00:01, 94772.10it/s]  74%|███████▍  | 408246/552076 [00:03<00:01, 100217.32it/s] 76%|███████▌  | 418856/552076 [00:03<00:01, 88129.20it/s]  78%|███████▊  | 428347/552076 [00:03<00:01, 89720.08it/s] 80%|███████▉  | 440075/552076 [00:03<00:01, 96523.13it/s] 82%|████████▏ | 450211/552076 [00:04<00:01, 97217.38it/s] 83%|████████▎ | 460273/552076 [00:04<00:01, 88039.00it/s] 85%|████████▌ | 469481/552076 [00:04<00:01, 79981.34it/s] 87%|████████▋ | 481381/552076 [00:04<00:00, 88705.84it/s] 89%|████████▉ | 493386/552076 [00:04<00:00, 96243.15it/s] 92%|█████████▏| 505593/552076 [00:04<00:00, 102765.59it/s] 94%|█████████▎| 516414/552076 [00:04<00:00, 98430.17it/s]  96%|█████████▌| 528282/552076 [00:04<00:00, 103738.48it/s] 98%|█████████▊| 540603/552076 [00:04<00:00, 108901.52it/s]100%|█████████▉| 551821/552076 [00:05<00:00, 106751.60it/s]100%|██████████| 552076/552076 [00:05<00:00, 108225.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11983/552076 [00:00<00:04, 119824.69it/s]  5%|▌         | 28194/552076 [00:00<00:04, 129996.95it/s]  9%|▉         | 50740/552076 [00:00<00:03, 148911.30it/s] 13%|█▎        | 72458/552076 [00:00<00:02, 164415.29it/s] 17%|█▋        | 94859/552076 [00:00<00:02, 178674.85it/s] 21%|██▏       | 117980/552076 [00:00<00:02, 191743.26it/s] 25%|██▍       | 136905/552076 [00:00<00:02, 166607.47it/s] 29%|██▊       | 157484/552076 [00:00<00:02, 176700.57it/s] 32%|███▏      | 175610/552076 [00:00<00:02, 176045.09it/s] 35%|███▌      | 193535/552076 [00:01<00:02, 140078.28it/s] 39%|███▊      | 212672/552076 [00:01<00:02, 152326.27it/s] 42%|████▏     | 229188/552076 [00:01<00:02, 134337.44it/s] 45%|████▌     | 250825/552076 [00:01<00:01, 151577.06it/s] 50%|████▉     | 273977/552076 [00:01<00:01, 169092.47it/s] 54%|█████▎    | 296461/552076 [00:01<00:01, 182679.15it/s] 58%|█████▊    | 319551/552076 [00:01<00:01, 194888.26it/s] 62%|██████▏   | 341475/552076 [00:01<00:01, 201605.98it/s] 66%|██████▌   | 364810/552076 [00:01<00:00, 210183.13it/s] 70%|███████   | 387229/552076 [00:02<00:00, 214195.91it/s] 74%|███████▍  | 409217/552076 [00:02<00:00, 213700.34it/s] 78%|███████▊  | 432223/552076 [00:02<00:00, 218356.45it/s] 82%|████████▏ | 454504/552076 [00:02<00:00, 219672.37it/s] 86%|████████▋ | 477439/552076 [00:02<00:00, 222486.40it/s] 91%|█████████ | 500383/552076 [00:02<00:00, 224525.52it/s] 95%|█████████▍| 523384/552076 [00:02<00:00, 226142.32it/s] 99%|█████████▉| 546082/552076 [00:02<00:00, 222447.39it/s]100%|██████████| 552076/552076 [00:02<00:00, 194834.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21836/552076 [00:00<00:02, 218356.56it/s]  8%|▊         | 44582/552076 [00:00<00:02, 221008.37it/s] 12%|█▏        | 66783/552076 [00:00<00:02, 221307.82it/s] 16%|█▌        | 88404/552076 [00:00<00:02, 219753.15it/s] 20%|█▉        | 110166/552076 [00:00<00:02, 219108.26it/s] 23%|██▎       | 128412/552076 [00:00<00:02, 201938.24it/s] 27%|██▋       | 146306/552076 [00:00<00:02, 183796.55it/s] 30%|███       | 168035/552076 [00:00<00:01, 192707.16it/s] 34%|███▍      | 190140/552076 [00:00<00:01, 200416.25it/s] 38%|███▊      | 209706/552076 [00:01<00:01, 184137.00it/s] 41%|████▏     | 228046/552076 [00:01<00:02, 158668.42it/s] 44%|████▍     | 244483/552076 [00:01<00:02, 146070.50it/s] 47%|████▋     | 259686/552076 [00:01<00:02, 137651.29it/s] 50%|████▉     | 273968/552076 [00:01<00:02, 133016.76it/s] 52%|█████▏    | 287666/552076 [00:01<00:02, 130033.03it/s] 55%|█████▍    | 300962/552076 [00:01<00:01, 126858.53it/s] 57%|█████▋    | 313870/552076 [00:01<00:01, 124129.86it/s] 59%|█████▉    | 326451/552076 [00:02<00:01, 123626.51it/s] 61%|██████▏   | 338961/552076 [00:02<00:01, 124062.56it/s] 64%|██████▎   | 351599/552076 [00:02<00:01, 124747.62it/s] 66%|██████▌   | 364133/552076 [00:02<00:01, 124020.59it/s] 68%|██████▊   | 376578/552076 [00:02<00:01, 109928.59it/s] 70%|███████   | 387896/552076 [00:02<00:01, 103714.12it/s] 72%|███████▏  | 400085/552076 [00:02<00:01, 108568.81it/s] 75%|███████▍  | 412253/552076 [00:02<00:01, 112194.79it/s] 77%|███████▋  | 424442/552076 [00:02<00:01, 114935.08it/s] 79%|███████▉  | 436684/552076 [00:02<00:00, 117082.29it/s] 81%|████████▏ | 448857/552076 [00:03<00:00, 118436.71it/s] 84%|████████▎ | 460987/552076 [00:03<00:00, 119279.42it/s] 86%|████████▌ | 472983/552076 [00:03<00:00, 118751.96it/s] 88%|████████▊ | 484906/552076 [00:03<00:00, 118053.66it/s] 90%|████████▉ | 496776/552076 [00:03<00:00, 118245.93it/s] 92%|█████████▏| 508887/552076 [00:03<00:00, 119088.26it/s] 94%|█████████▍| 520986/552076 [00:03<00:00, 119651.33it/s] 97%|█████████▋| 533131/552076 [00:03<00:00, 120184.15it/s] 99%|█████████▉| 545528/552076 [00:03<00:00, 121293.91it/s]100%|██████████| 552076/552076 [00:03<00:00, 140160.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11142/552076 [00:00<00:04, 111417.98it/s]  4%|▎         | 19347/552076 [00:00<00:05, 100613.79it/s]  5%|▌         | 29391/552076 [00:00<00:05, 100559.46it/s]  6%|▋         | 35765/552076 [00:00<00:06, 76418.48it/s]   8%|▊         | 41697/552076 [00:00<00:08, 57695.28it/s]  9%|▊         | 46951/552076 [00:00<00:09, 55848.49it/s] 10%|▉         | 53457/552076 [00:00<00:08, 58324.47it/s] 11%|█         | 59433/552076 [00:00<00:08, 58745.70it/s] 12%|█▏        | 65952/552076 [00:00<00:08, 60539.05it/s] 13%|█▎        | 72545/552076 [00:01<00:07, 62060.74it/s] 14%|█▍        | 78697/552076 [00:01<00:11, 42265.68it/s] 15%|█▌        | 83731/552076 [00:01<00:15, 31103.62it/s] 16%|█▌        | 87832/552076 [00:01<00:17, 27106.83it/s] 17%|█▋        | 91328/552076 [00:01<00:18, 24777.07it/s] 17%|█▋        | 94395/552076 [00:02<00:20, 22341.99it/s] 18%|█▊        | 97087/552076 [00:02<00:21, 21484.78it/s] 18%|█▊        | 99563/552076 [00:02<00:21, 21324.38it/s] 18%|█▊        | 101925/552076 [00:02<00:20, 21807.83it/s] 19%|█▉        | 104270/552076 [00:02<00:20, 21356.37it/s] 19%|█▉        | 106522/552076 [00:02<00:20, 21571.87it/s] 20%|█▉        | 108762/552076 [00:02<00:22, 19591.15it/s] 20%|██        | 111008/552076 [00:02<00:21, 20371.71it/s] 20%|██        | 113118/552076 [00:03<00:21, 20179.42it/s] 21%|██        | 115188/552076 [00:03<00:21, 20310.07it/s] 21%|██        | 117256/552076 [00:03<00:21, 19810.16it/s] 22%|██▏       | 119409/552076 [00:03<00:21, 20294.80it/s] 22%|██▏       | 121497/552076 [00:03<00:21, 20466.25it/s] 22%|██▏       | 123601/552076 [00:03<00:21, 20031.99it/s] 23%|██▎       | 125618/552076 [00:03<00:21, 20013.12it/s] 23%|██▎       | 127782/552076 [00:03<00:20, 20473.79it/s] 24%|██▎       | 129923/552076 [00:03<00:20, 20103.78it/s] 24%|██▍       | 132096/552076 [00:03<00:20, 20564.77it/s] 24%|██▍       | 134161/552076 [00:04<00:20, 20578.17it/s] 25%|██▍       | 136366/552076 [00:04<00:19, 20893.72it/s] 25%|██▌       | 138680/552076 [00:04<00:19, 21203.97it/s] 26%|██▌       | 140806/552076 [00:04<00:20, 19660.30it/s] 26%|██▌       | 143722/552076 [00:04<00:18, 21758.01it/s] 26%|██▋       | 146152/552076 [00:04<00:18, 22462.60it/s] 27%|██▋       | 149469/552076 [00:04<00:16, 24870.69it/s] 28%|██▊       | 152749/552076 [00:04<00:15, 26175.39it/s] 28%|██▊       | 155753/552076 [00:04<00:14, 26936.99it/s] 29%|██▊       | 158528/552076 [00:05<00:14, 26671.53it/s] 29%|██▉       | 161253/552076 [00:05<00:15, 24791.98it/s] 30%|██▉       | 163799/552076 [00:05<00:16, 23925.46it/s] 30%|███       | 166245/552076 [00:05<00:18, 20392.41it/s] 31%|███       | 168587/552076 [00:05<00:18, 20784.54it/s] 31%|███       | 170757/552076 [00:05<00:18, 20955.25it/s] 31%|███▏      | 172917/552076 [00:05<00:17, 21110.49it/s] 32%|███▏      | 175359/552076 [00:05<00:17, 21431.62it/s] 32%|███▏      | 177857/552076 [00:05<00:17, 21818.65it/s] 33%|███▎      | 180242/552076 [00:06<00:16, 22389.92it/s] 33%|███▎      | 182502/552076 [00:06<00:18, 19809.05it/s] 33%|███▎      | 184553/552076 [00:06<00:18, 19375.78it/s] 34%|███▍      | 186542/552076 [00:06<00:21, 17146.37it/s] 34%|███▍      | 188340/552076 [00:06<00:23, 15753.96it/s] 34%|███▍      | 190410/552076 [00:06<00:21, 16969.91it/s] 35%|███▍      | 192537/552076 [00:06<00:20, 17711.52it/s] 35%|███▌      | 194661/552076 [00:06<00:19, 18640.05it/s] 36%|███▌      | 196803/552076 [00:07<00:18, 19395.05it/s] 36%|███▌      | 198792/552076 [00:07<00:18, 19472.92it/s] 36%|███▋      | 200774/552076 [00:07<00:18, 19156.51it/s] 37%|███▋      | 202910/552076 [00:07<00:17, 19767.21it/s] 37%|███▋      | 205093/552076 [00:07<00:17, 20343.38it/s] 38%|███▊      | 207244/552076 [00:07<00:16, 20678.93it/s] 38%|███▊      | 209328/552076 [00:07<00:16, 20237.03it/s] 38%|███▊      | 211365/552076 [00:07<00:17, 20001.49it/s] 39%|███▊      | 213375/552076 [00:07<00:17, 19839.37it/s] 39%|███▉      | 215366/552076 [00:07<00:18, 17917.82it/s] 39%|███▉      | 217566/552076 [00:08<00:17, 18973.66it/s] 40%|███▉      | 219600/552076 [00:08<00:17, 19181.52it/s] 40%|████      | 221784/552076 [00:08<00:16, 19907.93it/s] 41%|████      | 223839/552076 [00:08<00:16, 20095.99it/s] 41%|████      | 225870/552076 [00:08<00:16, 19533.98it/s] 41%|████▏     | 227842/552076 [00:08<00:18, 17608.19it/s] 42%|████▏     | 229692/552076 [00:08<00:18, 17854.82it/s] 42%|████▏     | 231807/552076 [00:08<00:17, 18729.63it/s] 42%|████▏     | 233811/552076 [00:08<00:16, 19062.28it/s] 43%|████▎     | 235940/552076 [00:09<00:16, 19524.91it/s] 43%|████▎     | 238187/552076 [00:09<00:15, 20323.78it/s] 44%|████▎     | 240243/552076 [00:09<00:18, 17219.95it/s] 44%|████▍     | 242240/552076 [00:09<00:17, 17714.73it/s] 44%|████▍     | 244164/552076 [00:09<00:16, 18125.25it/s] 45%|████▍     | 246466/552076 [00:09<00:16, 18951.04it/s] 45%|████▌     | 249519/552076 [00:09<00:14, 21383.85it/s] 46%|████▌     | 252133/552076 [00:09<00:13, 22352.21it/s] 46%|████▋     | 255506/552076 [00:09<00:11, 24868.72it/s] 47%|████▋     | 258158/552076 [00:10<00:12, 24309.36it/s] 47%|████▋     | 261407/552076 [00:10<00:11, 25896.41it/s] 48%|████▊     | 264840/552076 [00:10<00:10, 27605.40it/s] 48%|████▊     | 267710/552076 [00:10<00:10, 27019.13it/s] 49%|████▉     | 270491/552076 [00:10<00:10, 27074.15it/s] 50%|████▉     | 273682/552076 [00:10<00:09, 28363.46it/s] 50%|█████     | 276574/552076 [00:10<00:10, 26765.64it/s] 51%|█████     | 279308/552076 [00:10<00:10, 25343.32it/s] 51%|█████     | 281898/552076 [00:10<00:10, 24916.86it/s] 52%|█████▏    | 285175/552076 [00:11<00:10, 26376.91it/s] 52%|█████▏    | 288542/552076 [00:11<00:09, 28209.53it/s] 53%|█████▎    | 291435/552076 [00:11<00:10, 24385.84it/s] 53%|█████▎    | 294016/552076 [00:11<00:10, 24757.82it/s] 54%|█████▎    | 296666/552076 [00:11<00:10, 25255.56it/s] 54%|█████▍    | 299265/552076 [00:11<00:11, 22874.85it/s] 55%|█████▍    | 301647/552076 [00:11<00:12, 20374.28it/s] 55%|█████▌    | 303888/552076 [00:11<00:11, 20831.55it/s] 55%|█████▌    | 306279/552076 [00:11<00:11, 21667.94it/s] 56%|█████▌    | 308514/552076 [00:12<00:12, 19452.82it/s] 56%|█████▋    | 310550/552076 [00:12<00:12, 19223.70it/s] 57%|█████▋    | 312782/552076 [00:12<00:11, 20057.42it/s] 57%|█████▋    | 315152/552076 [00:12<00:11, 20677.69it/s] 58%|█████▊    | 317803/552076 [00:12<00:10, 21373.95it/s] 58%|█████▊    | 319977/552076 [00:12<00:11, 20400.04it/s] 58%|█████▊    | 322158/552076 [00:12<00:11, 20803.14it/s] 59%|█████▊    | 324265/552076 [00:12<00:11, 20201.11it/s] 59%|█████▉    | 326426/552076 [00:12<00:10, 20594.13it/s] 60%|█████▉    | 328503/552076 [00:13<00:11, 20175.31it/s] 60%|█████▉    | 330535/552076 [00:13<00:11, 19728.84it/s] 60%|██████    | 332601/552076 [00:13<00:10, 19982.84it/s] 61%|██████    | 334609/552076 [00:13<00:11, 19410.09it/s] 61%|██████    | 336761/552076 [00:13<00:10, 19998.05it/s] 62%|██████▏   | 339593/552076 [00:13<00:09, 21512.30it/s] 62%|██████▏   | 341960/552076 [00:13<00:09, 22116.26it/s] 62%|██████▏   | 344205/552076 [00:13<00:09, 22177.97it/s] 63%|██████▎   | 346499/552076 [00:13<00:09, 22274.08it/s] 63%|██████▎   | 349370/552076 [00:14<00:08, 23879.94it/s] 64%|██████▎   | 351802/552076 [00:14<00:08, 23750.60it/s] 64%|██████▍   | 354414/552076 [00:14<00:08, 24414.39it/s] 65%|██████▍   | 356882/552076 [00:14<00:08, 22600.78it/s] 65%|██████▌   | 359188/552076 [00:14<00:09, 20249.22it/s] 65%|██████▌   | 361298/552076 [00:14<00:09, 20187.65it/s] 66%|██████▌   | 363372/552076 [00:14<00:09, 20057.69it/s] 66%|██████▌   | 365661/552076 [00:14<00:09, 20699.91it/s] 67%|██████▋   | 367973/552076 [00:14<00:08, 21141.55it/s] 67%|██████▋   | 370295/552076 [00:15<00:08, 21468.83it/s] 67%|██████▋   | 372601/552076 [00:15<00:08, 21921.38it/s] 68%|██████▊   | 374809/552076 [00:15<00:08, 21931.23it/s] 68%|██████▊   | 377130/552076 [00:15<00:07, 22089.94it/s] 69%|██████▊   | 379347/552076 [00:15<00:07, 22001.31it/s] 69%|██████▉   | 381553/552076 [00:15<00:07, 21343.44it/s] 70%|██████▉   | 383892/552076 [00:15<00:07, 21704.10it/s] 70%|██████▉   | 386073/552076 [00:15<00:07, 21677.95it/s] 70%|███████   | 388246/552076 [00:15<00:08, 20268.17it/s] 71%|███████   | 390556/552076 [00:15<00:07, 21041.95it/s] 71%|███████   | 392941/552076 [00:16<00:07, 21811.46it/s] 72%|███████▏  | 395448/552076 [00:16<00:06, 22695.84it/s] 72%|███████▏  | 397744/552076 [00:16<00:06, 22711.25it/s] 72%|███████▏  | 400034/552076 [00:16<00:06, 22329.11it/s] 73%|███████▎  | 402281/552076 [00:16<00:07, 19208.52it/s] 73%|███████▎  | 404640/552076 [00:16<00:07, 20341.19it/s] 74%|███████▎  | 406948/552076 [00:16<00:06, 20852.68it/s] 74%|███████▍  | 409182/552076 [00:16<00:06, 21277.58it/s] 75%|███████▍  | 411379/552076 [00:16<00:06, 21000.36it/s] 75%|███████▍  | 413737/552076 [00:17<00:06, 21711.81it/s] 75%|███████▌  | 415953/552076 [00:17<00:06, 21843.20it/s] 76%|███████▌  | 418157/552076 [00:17<00:06, 20204.40it/s] 76%|███████▌  | 420327/552076 [00:17<00:06, 20493.72it/s] 77%|███████▋  | 422405/552076 [00:17<00:06, 19989.41it/s] 77%|███████▋  | 424427/552076 [00:17<00:06, 18313.00it/s] 77%|███████▋  | 427271/552076 [00:17<00:06, 20118.28it/s] 78%|███████▊  | 429367/552076 [00:17<00:06, 19119.24it/s] 78%|███████▊  | 431549/552076 [00:17<00:06, 19856.46it/s] 79%|███████▊  | 433734/552076 [00:18<00:05, 20414.81it/s] 79%|███████▉  | 436535/552076 [00:18<00:05, 21891.91it/s] 79%|███████▉  | 438880/552076 [00:18<00:05, 22280.10it/s] 80%|███████▉  | 441356/552076 [00:18<00:04, 22611.57it/s] 80%|████████  | 443649/552076 [00:18<00:05, 21487.18it/s] 81%|████████  | 445925/552076 [00:18<00:04, 21853.00it/s] 81%|████████▏ | 448635/552076 [00:18<00:04, 23199.60it/s] 82%|████████▏ | 451326/552076 [00:18<00:04, 24200.36it/s] 82%|████████▏ | 453786/552076 [00:18<00:04, 22617.77it/s] 83%|████████▎ | 456229/552076 [00:18<00:04, 23131.99it/s] 83%|████████▎ | 459209/552076 [00:19<00:03, 24795.54it/s] 84%|████████▎ | 461748/552076 [00:19<00:03, 24312.69it/s] 84%|████████▍ | 464756/552076 [00:19<00:03, 25795.33it/s] 85%|████████▍ | 467391/552076 [00:19<00:03, 23361.42it/s] 85%|████████▌ | 470424/552076 [00:19<00:03, 24668.11it/s] 86%|████████▌ | 473645/552076 [00:19<00:02, 26268.87it/s] 86%|████████▋ | 476355/552076 [00:19<00:03, 25016.50it/s] 87%|████████▋ | 479315/552076 [00:19<00:02, 26234.32it/s] 87%|████████▋ | 482314/552076 [00:19<00:02, 27258.39it/s] 88%|████████▊ | 485096/552076 [00:20<00:02, 26144.49it/s] 88%|████████▊ | 488166/552076 [00:20<00:02, 27361.97it/s] 89%|████████▉ | 490952/552076 [00:20<00:02, 27425.81it/s] 89%|████████▉ | 493804/552076 [00:20<00:02, 27744.11it/s] 90%|████████▉ | 496604/552076 [00:20<00:02, 24395.55it/s] 90%|█████████ | 499135/552076 [00:20<00:02, 24654.54it/s] 91%|█████████ | 501973/552076 [00:20<00:01, 25334.50it/s] 91%|█████████▏| 504557/552076 [00:20<00:01, 24418.75it/s] 92%|█████████▏| 507290/552076 [00:20<00:01, 22731.50it/s] 92%|█████████▏| 509616/552076 [00:21<00:01, 22188.65it/s] 93%|█████████▎| 512060/552076 [00:21<00:01, 22124.65it/s] 93%|█████████▎| 514612/552076 [00:21<00:01, 22841.84it/s] 94%|█████████▎| 517354/552076 [00:21<00:01, 24045.42it/s] 94%|█████████▍| 519794/552076 [00:21<00:01, 21886.22it/s] 95%|█████████▍| 522825/552076 [00:21<00:01, 23876.41it/s] 95%|█████████▌| 525310/552076 [00:21<00:01, 24116.40it/s] 96%|█████████▌| 528073/552076 [00:21<00:00, 25071.61it/s] 96%|█████████▌| 530638/552076 [00:21<00:00, 22797.30it/s] 97%|█████████▋| 533156/552076 [00:22<00:00, 23061.03it/s] 97%|█████████▋| 536064/552076 [00:22<00:00, 24479.76it/s] 98%|█████████▊| 538598/552076 [00:22<00:00, 24731.24it/s] 98%|█████████▊| 541118/552076 [00:22<00:00, 24706.92it/s] 98%|█████████▊| 543621/552076 [00:22<00:00, 22838.31it/s] 99%|█████████▉| 546581/552076 [00:22<00:00, 24517.87it/s] 99%|█████████▉| 549256/552076 [00:22<00:00, 24978.33it/s]100%|██████████| 552076/552076 [00:22<00:00, 24188.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4210/552076 [00:00<00:13, 41897.66it/s]  2%|▏         | 8631/552076 [00:00<00:12, 42565.13it/s]  2%|▏         | 12895/552076 [00:00<00:13, 41108.45it/s]  3%|▎         | 17196/552076 [00:00<00:12, 41659.80it/s]  4%|▍         | 21550/552076 [00:00<00:12, 42206.45it/s]  5%|▍         | 25866/552076 [00:00<00:12, 41043.05it/s]  5%|▌         | 30117/552076 [00:00<00:12, 41470.99it/s]  6%|▌         | 34115/552076 [00:00<00:12, 41012.01it/s]  7%|▋         | 38531/552076 [00:00<00:12, 41906.78it/s]  8%|▊         | 42848/552076 [00:01<00:12, 41969.16it/s]  9%|▊         | 47197/552076 [00:01<00:11, 42412.65it/s]  9%|▉         | 51362/552076 [00:01<00:11, 42106.08it/s] 10%|█         | 55560/552076 [00:01<00:11, 42066.62it/s] 11%|█         | 59730/552076 [00:01<00:11, 41856.45it/s] 12%|█▏        | 63890/552076 [00:01<00:12, 39947.62it/s] 12%|█▏        | 67903/552076 [00:01<00:12, 40002.06it/s] 13%|█▎        | 71904/552076 [00:01<00:12, 39379.17it/s] 14%|█▎        | 75904/552076 [00:01<00:12, 38983.14it/s] 14%|█▍        | 79805/552076 [00:01<00:12, 38030.74it/s] 15%|█▌        | 83640/552076 [00:02<00:12, 38125.51it/s] 16%|█▌        | 87458/552076 [00:02<00:12, 37559.00it/s] 17%|█▋        | 91536/552076 [00:02<00:11, 38470.07it/s] 17%|█▋        | 95393/552076 [00:02<00:12, 37701.08it/s] 18%|█▊        | 99431/552076 [00:02<00:11, 38304.04it/s] 19%|█▊        | 103271/552076 [00:02<00:11, 38042.58it/s] 19%|█▉        | 107083/552076 [00:02<00:13, 34024.57it/s] 20%|██        | 110570/552076 [00:02<00:13, 31966.49it/s] 21%|██        | 113852/552076 [00:02<00:14, 30443.16it/s] 21%|██▏       | 118272/552076 [00:03<00:13, 32945.67it/s] 22%|██▏       | 122009/552076 [00:03<00:13, 32907.02it/s] 23%|██▎       | 125378/552076 [00:03<00:12, 32914.13it/s] 23%|██▎       | 128725/552076 [00:03<00:13, 32424.81it/s] 24%|██▍       | 132350/552076 [00:03<00:12, 32560.59it/s] 25%|██▍       | 136471/552076 [00:03<00:12, 34286.02it/s] 25%|██▌       | 140394/552076 [00:03<00:11, 35449.04it/s] 26%|██▌       | 144404/552076 [00:03<00:11, 36725.60it/s] 27%|██▋       | 148219/552076 [00:03<00:10, 36787.79it/s] 28%|██▊       | 152289/552076 [00:04<00:10, 37779.42it/s] 28%|██▊       | 156094/552076 [00:04<00:11, 35966.80it/s] 29%|██▉       | 160197/552076 [00:04<00:10, 37349.35it/s] 30%|██▉       | 164332/552076 [00:04<00:10, 37481.69it/s] 30%|███       | 168160/552076 [00:04<00:10, 37716.43it/s] 31%|███       | 172386/552076 [00:04<00:09, 38972.12it/s] 32%|███▏      | 176515/552076 [00:04<00:09, 39638.64it/s] 33%|███▎      | 180623/552076 [00:04<00:09, 39680.76it/s] 33%|███▎      | 184931/552076 [00:04<00:09, 40642.71it/s] 34%|███▍      | 190414/552076 [00:04<00:08, 44012.53it/s] 36%|███▌      | 196602/552076 [00:05<00:07, 48186.00it/s] 37%|███▋      | 202630/552076 [00:05<00:06, 50781.83it/s] 38%|███▊      | 208711/552076 [00:05<00:06, 53424.46it/s] 39%|███▉      | 214552/552076 [00:05<00:06, 52583.08it/s] 40%|███▉      | 220207/552076 [00:05<00:06, 53712.02it/s] 41%|████      | 225741/552076 [00:05<00:06, 53877.04it/s] 42%|████▏     | 231468/552076 [00:05<00:05, 54851.44it/s] 43%|████▎     | 237483/552076 [00:05<00:05, 56339.18it/s] 44%|████▍     | 243519/552076 [00:05<00:05, 57486.75it/s] 45%|████▌     | 249303/552076 [00:05<00:05, 55036.22it/s] 47%|████▋     | 257971/552076 [00:06<00:04, 61803.94it/s] 48%|████▊     | 264457/552076 [00:06<00:05, 51056.68it/s] 49%|████▉     | 270087/552076 [00:06<00:05, 47199.41it/s] 50%|████▉     | 275232/552076 [00:06<00:06, 45102.95it/s] 51%|█████     | 280060/552076 [00:06<00:06, 42418.08it/s] 52%|█████▏    | 284557/552076 [00:06<00:06, 41168.88it/s] 52%|█████▏    | 288861/552076 [00:06<00:06, 40395.93it/s] 53%|█████▎    | 293035/552076 [00:06<00:06, 40176.47it/s] 54%|█████▍    | 297149/552076 [00:07<00:06, 40459.40it/s] 55%|█████▍    | 301262/552076 [00:07<00:06, 39902.15it/s] 55%|█████▌    | 305301/552076 [00:07<00:06, 38885.19it/s] 56%|█████▌    | 309361/552076 [00:07<00:06, 38952.06it/s] 57%|█████▋    | 313349/552076 [00:07<00:06, 39225.11it/s] 57%|█████▋    | 317292/552076 [00:07<00:06, 38878.85it/s] 58%|█████▊    | 321352/552076 [00:07<00:05, 39379.44it/s] 59%|█████▉    | 325577/552076 [00:07<00:05, 39514.55it/s] 60%|█████▉    | 330336/552076 [00:07<00:05, 41201.71it/s] 61%|██████    | 334481/552076 [00:08<00:05, 39802.44it/s] 61%|██████▏   | 338513/552076 [00:08<00:05, 39955.92it/s] 62%|██████▏   | 342528/552076 [00:08<00:06, 32955.32it/s] 63%|██████▎   | 346041/552076 [00:08<00:07, 29372.80it/s] 63%|██████▎   | 349203/552076 [00:08<00:07, 27921.93it/s] 64%|██████▍   | 352168/552076 [00:08<00:07, 26260.70it/s] 64%|██████▍   | 354935/552076 [00:08<00:07, 24927.39it/s] 65%|██████▍   | 357541/552076 [00:08<00:07, 24615.59it/s] 65%|██████▌   | 360083/552076 [00:09<00:08, 23918.02it/s] 66%|██████▌   | 362535/552076 [00:09<00:08, 22265.11it/s] 66%|██████▌   | 364827/552076 [00:09<00:09, 20664.42it/s] 67%|██████▋   | 367221/552076 [00:09<00:08, 21076.81it/s] 67%|██████▋   | 369623/552076 [00:09<00:08, 21000.67it/s] 67%|██████▋   | 371759/552076 [00:09<00:09, 19979.61it/s] 68%|██████▊   | 374093/552076 [00:09<00:08, 20880.49it/s] 68%|██████▊   | 376375/552076 [00:09<00:08, 21425.69it/s] 69%|██████▊   | 378578/552076 [00:09<00:08, 21602.11it/s] 69%|██████▉   | 382544/552076 [00:10<00:06, 25019.34it/s] 70%|███████   | 387218/552076 [00:10<00:05, 29072.09it/s] 71%|███████   | 390522/552076 [00:10<00:06, 26666.24it/s] 71%|███████▏  | 393505/552076 [00:10<00:06, 25628.14it/s] 72%|███████▏  | 396298/552076 [00:10<00:06, 24885.71it/s] 72%|███████▏  | 398953/552076 [00:10<00:06, 24828.50it/s] 73%|███████▎  | 401552/552076 [00:10<00:06, 23896.78it/s] 73%|███████▎  | 404031/552076 [00:10<00:06, 23760.64it/s] 74%|███████▎  | 406470/552076 [00:10<00:06, 23372.19it/s] 74%|███████▍  | 409000/552076 [00:11<00:05, 23918.60it/s] 75%|███████▍  | 411427/552076 [00:11<00:06, 23417.81it/s] 75%|███████▍  | 413796/552076 [00:11<00:06, 22365.21it/s] 75%|███████▌  | 416062/552076 [00:11<00:06, 20056.57it/s] 76%|███████▌  | 418473/552076 [00:11<00:06, 21120.97it/s] 76%|███████▋  | 421009/552076 [00:11<00:05, 22235.78it/s] 77%|███████▋  | 423322/552076 [00:11<00:05, 22494.95it/s] 77%|███████▋  | 425712/552076 [00:11<00:05, 22897.81it/s] 78%|███████▊  | 428033/552076 [00:11<00:05, 22474.66it/s] 78%|███████▊  | 430536/552076 [00:12<00:05, 23183.63it/s] 78%|███████▊  | 432877/552076 [00:12<00:05, 22845.55it/s] 79%|███████▉  | 435459/552076 [00:12<00:05, 23142.61it/s] 79%|███████▉  | 437842/552076 [00:12<00:04, 23338.68it/s] 80%|███████▉  | 440288/552076 [00:12<00:04, 23663.45it/s] 80%|████████  | 442819/552076 [00:12<00:04, 24133.85it/s] 81%|████████  | 445240/552076 [00:12<00:04, 23734.27it/s] 81%|████████  | 447669/552076 [00:12<00:04, 23897.01it/s] 82%|████████▏ | 450064/552076 [00:12<00:04, 23680.33it/s] 82%|████████▏ | 452436/552076 [00:12<00:04, 23459.66it/s] 82%|████████▏ | 454829/552076 [00:13<00:04, 23391.03it/s] 83%|████████▎ | 457333/552076 [00:13<00:03, 23792.39it/s] 83%|████████▎ | 460091/552076 [00:13<00:03, 24799.73it/s] 84%|████████▍ | 462585/552076 [00:13<00:03, 24124.70it/s] 84%|████████▍ | 465011/552076 [00:13<00:03, 23993.63it/s] 85%|████████▍ | 467420/552076 [00:13<00:03, 23623.06it/s] 85%|████████▌ | 469791/552076 [00:13<00:03, 23172.65it/s] 86%|████████▌ | 472379/552076 [00:13<00:03, 23923.22it/s] 86%|████████▌ | 474783/552076 [00:13<00:03, 19966.89it/s] 86%|████████▋ | 476898/552076 [00:14<00:03, 18926.79it/s] 87%|████████▋ | 478885/552076 [00:14<00:04, 18045.47it/s] 87%|████████▋ | 480764/552076 [00:14<00:04, 16870.34it/s] 87%|████████▋ | 482519/552076 [00:14<00:04, 17028.26it/s] 88%|████████▊ | 484270/552076 [00:14<00:03, 17129.89it/s] 88%|████████▊ | 486737/552076 [00:14<00:03, 18693.10it/s] 89%|████████▊ | 488894/552076 [00:14<00:03, 19241.51it/s] 89%|████████▉ | 491309/552076 [00:14<00:03, 19796.91it/s] 89%|████████▉ | 493328/552076 [00:15<00:03, 19087.95it/s] 90%|████████▉ | 495270/552076 [00:15<00:02, 19056.65it/s] 90%|█████████ | 497767/552076 [00:15<00:02, 20399.82it/s] 91%|█████████ | 500196/552076 [00:15<00:02, 20610.07it/s] 91%|█████████ | 502862/552076 [00:15<00:02, 22113.31it/s] 91%|█████████▏| 505126/552076 [00:15<00:02, 20643.47it/s] 92%|█████████▏| 507247/552076 [00:15<00:02, 19982.87it/s] 92%|█████████▏| 509290/552076 [00:15<00:02, 19009.39it/s] 93%|█████████▎| 511232/552076 [00:15<00:02, 17859.45it/s] 93%|█████████▎| 513061/552076 [00:16<00:02, 17782.65it/s] 93%|█████████▎| 514870/552076 [00:16<00:02, 17854.85it/s] 94%|█████████▎| 517501/552076 [00:16<00:01, 19480.01it/s] 94%|█████████▍| 519555/552076 [00:16<00:01, 19785.35it/s] 94%|█████████▍| 521576/552076 [00:16<00:01, 18557.23it/s] 95%|█████████▍| 523875/552076 [00:16<00:01, 19695.80it/s] 95%|█████████▌| 526573/552076 [00:16<00:01, 21431.48it/s] 96%|█████████▌| 528797/552076 [00:16<00:01, 20323.14it/s] 96%|█████████▌| 531061/552076 [00:16<00:01, 20966.38it/s] 97%|█████████▋| 533467/552076 [00:16<00:00, 21806.79it/s] 97%|█████████▋| 535846/552076 [00:17<00:00, 21925.52it/s] 97%|█████████▋| 538136/552076 [00:17<00:00, 22068.05it/s] 98%|█████████▊| 540366/552076 [00:17<00:00, 20156.89it/s] 98%|█████████▊| 542959/552076 [00:17<00:00, 21193.65it/s] 99%|█████████▊| 545127/552076 [00:17<00:00, 20971.79it/s] 99%|█████████▉| 547259/552076 [00:17<00:00, 19148.22it/s]100%|█████████▉| 549639/552076 [00:17<00:00, 20160.35it/s]100%|█████████▉| 551799/552076 [00:17<00:00, 20518.60it/s]100%|██████████| 552076/552076 [00:17<00:00, 30885.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2628/552076 [00:00<00:20, 26275.83it/s]  1%|          | 4641/552076 [00:00<00:23, 23246.95it/s]  1%|          | 6661/552076 [00:00<00:24, 22175.10it/s]  2%|▏         | 9160/552076 [00:00<00:24, 22548.72it/s]  2%|▏         | 12123/552076 [00:00<00:22, 24289.84it/s]  3%|▎         | 14729/552076 [00:00<00:22, 23748.39it/s]  3%|▎         | 17557/552076 [00:00<00:21, 24947.18it/s]  4%|▎         | 20254/552076 [00:00<00:21, 25139.48it/s]  4%|▍         | 22653/552076 [00:00<00:22, 23380.16it/s]  5%|▍         | 24935/552076 [00:01<00:23, 22665.07it/s]  5%|▌         | 27702/552076 [00:01<00:22, 23391.48it/s]  5%|▌         | 30023/552076 [00:01<00:23, 22504.39it/s]  6%|▌         | 32546/552076 [00:01<00:22, 23258.12it/s]  6%|▋         | 35607/552076 [00:01<00:20, 25022.09it/s]  7%|▋         | 38448/552076 [00:01<00:19, 25711.37it/s]  7%|▋         | 41117/552076 [00:01<00:19, 25996.95it/s]  8%|▊         | 43741/552076 [00:01<00:20, 24627.34it/s]  8%|▊         | 46236/552076 [00:01<00:21, 23379.12it/s]  9%|▉         | 48610/552076 [00:02<00:21, 23278.09it/s]  9%|▉         | 50968/552076 [00:02<00:21, 23367.84it/s] 10%|▉         | 53336/552076 [00:02<00:22, 22429.70it/s] 10%|█         | 55754/552076 [00:02<00:22, 22391.99it/s] 11%|█         | 58008/552076 [00:02<00:22, 22406.16it/s] 11%|█         | 60259/552076 [00:02<00:22, 22301.51it/s] 11%|█▏        | 62497/552076 [00:02<00:22, 21570.58it/s] 12%|█▏        | 64665/552076 [00:02<00:25, 19223.82it/s] 12%|█▏        | 67014/552076 [00:02<00:24, 19859.75it/s] 13%|█▎        | 72172/552076 [00:03<00:19, 24352.45it/s] 14%|█▎        | 75780/552076 [00:03<00:18, 26399.24it/s] 14%|█▍        | 79441/552076 [00:03<00:16, 28809.17it/s] 15%|█▌        | 84148/552076 [00:03<00:14, 32292.25it/s] 16%|█▌        | 88185/552076 [00:03<00:13, 33878.43it/s] 17%|█▋        | 92088/552076 [00:03<00:13, 35273.93it/s] 17%|█▋        | 95836/552076 [00:03<00:13, 34267.34it/s] 18%|█▊        | 99424/552076 [00:03<00:13, 32819.43it/s] 19%|█▊        | 102832/552076 [00:03<00:13, 33030.87it/s] 19%|█▉        | 107411/552076 [00:03<00:12, 35838.34it/s] 20%|██        | 112064/552076 [00:04<00:11, 38491.46it/s] 21%|██        | 116061/552076 [00:04<00:12, 35873.43it/s] 22%|██▏       | 119788/552076 [00:04<00:12, 34863.17it/s] 22%|██▏       | 123378/552076 [00:04<00:12, 33559.14it/s] 23%|██▎       | 127744/552076 [00:04<00:11, 36061.77it/s] 24%|██▍       | 131461/552076 [00:04<00:11, 36102.48it/s] 25%|██▍       | 136161/552076 [00:04<00:10, 38801.35it/s] 25%|██▌       | 140153/552076 [00:04<00:11, 36257.13it/s] 26%|██▌       | 143891/552076 [00:04<00:11, 36494.98it/s] 27%|██▋       | 148465/552076 [00:05<00:10, 37230.24it/s] 28%|██▊       | 152659/552076 [00:05<00:10, 38232.93it/s] 28%|██▊       | 156531/552076 [00:05<00:10, 37618.35it/s] 29%|██▉       | 160592/552076 [00:05<00:10, 38316.86it/s] 30%|██▉       | 165105/552076 [00:05<00:09, 39941.46it/s] 31%|███       | 169300/552076 [00:05<00:09, 39147.77it/s] 31%|███▏      | 173245/552076 [00:05<00:09, 38599.79it/s] 32%|███▏      | 177128/552076 [00:05<00:09, 38257.45it/s] 33%|███▎      | 180971/552076 [00:05<00:09, 38059.95it/s] 33%|███▎      | 184789/552076 [00:06<00:10, 36117.41it/s] 34%|███▍      | 189042/552076 [00:06<00:09, 37738.14it/s] 35%|███▌      | 193231/552076 [00:06<00:09, 38449.95it/s] 36%|███▌      | 198394/552076 [00:06<00:08, 41638.77it/s] 37%|███▋      | 202656/552076 [00:06<00:08, 40418.99it/s] 37%|███▋      | 206775/552076 [00:06<00:09, 37021.20it/s] 38%|███▊      | 210873/552076 [00:06<00:09, 37800.12it/s] 39%|███▉      | 215412/552076 [00:06<00:08, 39795.75it/s] 40%|███▉      | 219476/552076 [00:06<00:08, 38641.81it/s] 41%|████      | 224010/552076 [00:07<00:08, 40433.48it/s] 41%|████▏     | 228122/552076 [00:07<00:09, 34857.53it/s] 42%|████▏     | 231858/552076 [00:07<00:09, 35475.65it/s] 43%|████▎     | 235537/552076 [00:07<00:08, 35625.56it/s] 43%|████▎     | 239192/552076 [00:07<00:08, 35053.20it/s] 44%|████▍     | 242764/552076 [00:07<00:09, 32696.32it/s] 45%|████▍     | 246706/552076 [00:07<00:08, 34459.09it/s] 46%|████▌     | 251456/552076 [00:07<00:08, 36927.84it/s] 46%|████▌     | 255255/552076 [00:07<00:08, 36840.79it/s] 47%|████▋     | 259014/552076 [00:08<00:08, 35109.43it/s] 48%|████▊     | 262881/552076 [00:08<00:08, 35010.79it/s] 48%|████▊     | 266838/552076 [00:08<00:08, 34969.34it/s] 49%|████▉     | 270369/552076 [00:08<00:08, 34236.11it/s] 50%|████▉     | 274014/552076 [00:08<00:08, 34491.02it/s] 50%|█████     | 278715/552076 [00:08<00:07, 37485.12it/s] 51%|█████     | 282554/552076 [00:08<00:07, 37141.99it/s] 52%|█████▏    | 287316/552076 [00:08<00:06, 39741.82it/s] 53%|█████▎    | 291386/552076 [00:08<00:06, 39871.92it/s] 54%|█████▎    | 295440/552076 [00:09<00:06, 37414.22it/s] 54%|█████▍    | 299468/552076 [00:09<00:06, 38229.98it/s] 55%|█████▌    | 304027/552076 [00:09<00:06, 39594.30it/s] 56%|█████▌    | 308040/552076 [00:09<00:06, 37887.13it/s] 57%|█████▋    | 312635/552076 [00:09<00:06, 39570.47it/s] 57%|█████▋    | 316793/552076 [00:09<00:05, 39537.06it/s] 58%|█████▊    | 320787/552076 [00:09<00:05, 39013.82it/s] 59%|█████▉    | 324824/552076 [00:09<00:05, 39410.74it/s] 60%|█████▉    | 329470/552076 [00:09<00:05, 40968.05it/s] 60%|██████    | 333598/552076 [00:09<00:05, 40605.22it/s] 61%|██████▏   | 338329/552076 [00:10<00:05, 42407.34it/s] 62%|██████▏   | 342607/552076 [00:10<00:05, 41436.24it/s] 63%|██████▎   | 346782/552076 [00:10<00:05, 40397.44it/s] 64%|██████▎   | 350849/552076 [00:10<00:05, 36990.76it/s] 64%|██████▍   | 354624/552076 [00:10<00:05, 37124.01it/s] 65%|██████▍   | 358676/552076 [00:10<00:05, 36690.28it/s] 66%|██████▌   | 362713/552076 [00:10<00:05, 37504.42it/s] 67%|██████▋   | 367351/552076 [00:10<00:04, 39787.67it/s] 67%|██████▋   | 371561/552076 [00:10<00:04, 40171.98it/s] 68%|██████▊   | 375969/552076 [00:11<00:04, 41269.59it/s] 69%|██████▉   | 380134/552076 [00:11<00:04, 36298.07it/s] 70%|██████▉   | 383899/552076 [00:11<00:04, 36068.78it/s] 70%|███████   | 387601/552076 [00:11<00:04, 35563.64it/s] 71%|███████   | 391797/552076 [00:11<00:04, 37267.20it/s] 72%|███████▏  | 396277/552076 [00:11<00:04, 38775.00it/s] 73%|███████▎  | 401151/552076 [00:11<00:03, 40419.18it/s] 73%|███████▎  | 405256/552076 [00:11<00:03, 39371.36it/s] 74%|███████▍  | 409244/552076 [00:11<00:03, 38656.57it/s] 75%|███████▌  | 414127/552076 [00:12<00:03, 40374.28it/s] 76%|███████▌  | 418299/552076 [00:12<00:03, 39533.57it/s] 77%|███████▋  | 423363/552076 [00:12<00:03, 41938.36it/s] 77%|███████▋  | 427623/552076 [00:12<00:03, 38233.38it/s] 78%|███████▊  | 432233/552076 [00:12<00:02, 40049.13it/s] 79%|███████▉  | 436936/552076 [00:12<00:02, 41915.34it/s] 80%|███████▉  | 441220/552076 [00:12<00:02, 39253.32it/s] 81%|████████  | 445245/552076 [00:12<00:02, 39469.50it/s] 81%|████████▏ | 449262/552076 [00:12<00:02, 37188.27it/s] 82%|████████▏ | 453380/552076 [00:13<00:02, 36199.81it/s] 83%|████████▎ | 457067/552076 [00:13<00:02, 36095.37it/s] 83%|████████▎ | 460784/552076 [00:13<00:02, 35544.05it/s] 84%|████████▍ | 465168/552076 [00:13<00:02, 37682.54it/s] 85%|████████▌ | 469939/552076 [00:13<00:02, 39644.18it/s] 86%|████████▌ | 473971/552076 [00:13<00:02, 38610.09it/s] 87%|████████▋ | 477885/552076 [00:13<00:01, 38466.76it/s] 88%|████████▊ | 483891/552076 [00:13<00:01, 43102.92it/s] 89%|████████▊ | 488896/552076 [00:13<00:01, 44753.03it/s] 89%|████████▉ | 493533/552076 [00:13<00:01, 43906.13it/s] 90%|█████████ | 498041/552076 [00:14<00:01, 40753.89it/s] 91%|█████████ | 502244/552076 [00:14<00:01, 36477.61it/s] 92%|█████████▏| 507288/552076 [00:14<00:01, 39780.51it/s] 93%|█████████▎| 511476/552076 [00:14<00:01, 40259.77it/s] 93%|█████████▎| 515650/552076 [00:14<00:00, 39103.55it/s] 94%|█████████▍| 519898/552076 [00:14<00:00, 39062.06it/s] 95%|█████████▌| 525900/552076 [00:14<00:00, 43478.40it/s] 96%|█████████▋| 531540/552076 [00:14<00:00, 45653.88it/s] 97%|█████████▋| 538120/552076 [00:15<00:00, 47901.71it/s] 98%|█████████▊| 543064/552076 [00:15<00:00, 47642.82it/s] 99%|█████████▉| 547937/552076 [00:15<00:00, 47424.85it/s]100%|██████████| 552076/552076 [00:15<00:00, 36060.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3209/552076 [00:00<00:19, 28100.32it/s]  2%|▏         | 8417/552076 [00:00<00:16, 32345.53it/s]  2%|▏         | 12771/552076 [00:00<00:15, 35048.60it/s]  3%|▎         | 16850/552076 [00:00<00:14, 36218.60it/s]  4%|▎         | 20461/552076 [00:00<00:15, 34807.40it/s]  5%|▍         | 24980/552076 [00:00<00:14, 37288.19it/s]  5%|▌         | 30136/552076 [00:00<00:12, 40664.72it/s]  6%|▌         | 34160/552076 [00:00<00:13, 37214.33it/s]  7%|▋         | 38563/552076 [00:00<00:13, 39026.57it/s]  8%|▊         | 42508/552076 [00:01<00:13, 36880.65it/s]  9%|▉         | 50593/552076 [00:01<00:11, 44070.45it/s] 11%|█         | 61842/552076 [00:01<00:09, 53906.02it/s] 13%|█▎        | 73651/552076 [00:01<00:07, 64407.48it/s] 16%|█▌        | 85669/552076 [00:01<00:06, 74823.88it/s] 18%|█▊        | 97774/552076 [00:01<00:05, 84504.74it/s] 20%|█▉        | 109691/552076 [00:01<00:04, 92583.62it/s] 22%|██▏       | 121916/552076 [00:01<00:04, 99852.69it/s] 24%|██▍       | 133114/552076 [00:01<00:04, 92871.72it/s] 26%|██▌       | 143348/552076 [00:02<00:04, 87907.86it/s] 28%|██▊       | 152857/552076 [00:02<00:05, 79325.71it/s] 29%|██▉       | 161759/552076 [00:02<00:04, 82004.02it/s] 31%|███▏      | 173636/552076 [00:02<00:04, 90398.13it/s] 34%|███▎      | 185616/552076 [00:02<00:03, 97582.25it/s] 36%|███▌      | 197563/552076 [00:02<00:03, 103255.99it/s] 38%|███▊      | 209513/552076 [00:02<00:03, 107644.77it/s] 40%|████      | 221738/552076 [00:02<00:02, 111645.74it/s] 42%|████▏     | 233969/552076 [00:02<00:02, 114643.46it/s] 45%|████▍     | 246265/552076 [00:03<00:02, 117017.41it/s] 47%|████▋     | 258148/552076 [00:03<00:02, 114380.28it/s] 49%|████▉     | 269727/552076 [00:03<00:03, 92599.19it/s]  51%|█████     | 281419/552076 [00:03<00:02, 98760.20it/s] 53%|█████▎    | 293608/552076 [00:03<00:02, 104721.37it/s] 55%|█████▌    | 305770/552076 [00:03<00:02, 109276.18it/s] 58%|█████▊    | 317896/552076 [00:03<00:02, 112614.52it/s] 60%|█████▉    | 330069/552076 [00:03<00:01, 115202.09it/s] 62%|██████▏   | 342404/552076 [00:03<00:01, 117530.38it/s] 64%|██████▍   | 354342/552076 [00:03<00:01, 117776.30it/s] 66%|██████▋   | 366376/552076 [00:04<00:01, 118530.81it/s] 69%|██████▊   | 378321/552076 [00:04<00:01, 118436.24it/s] 71%|███████   | 390229/552076 [00:04<00:01, 108991.45it/s] 73%|███████▎  | 401322/552076 [00:04<00:01, 88929.62it/s]  75%|███████▍  | 412864/552076 [00:04<00:01, 95503.93it/s] 77%|███████▋  | 424829/552076 [00:04<00:01, 101657.06it/s] 79%|███████▉  | 436862/552076 [00:04<00:01, 106618.38it/s] 81%|████████  | 448134/552076 [00:04<00:00, 108377.64it/s] 83%|████████▎ | 459301/552076 [00:05<00:00, 109324.45it/s] 85%|████████▌ | 470466/552076 [00:05<00:00, 108975.47it/s] 87%|████████▋ | 481527/552076 [00:05<00:00, 107879.73it/s] 89%|████████▉ | 493029/552076 [00:05<00:00, 109924.59it/s] 91%|█████████▏| 504643/552076 [00:05<00:00, 111716.94it/s] 93%|█████████▎| 515886/552076 [00:05<00:00, 100598.50it/s] 96%|█████████▌| 527477/552076 [00:05<00:00, 104749.23it/s] 97%|█████████▋| 538178/552076 [00:05<00:00, 88064.58it/s]  99%|█████████▉| 548241/552076 [00:05<00:00, 91490.37it/s]100%|██████████| 552076/552076 [00:05<00:00, 92510.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11573/552076 [00:00<00:04, 115721.01it/s]  4%|▍         | 23250/552076 [00:00<00:04, 116031.03it/s]  6%|▋         | 35213/552076 [00:00<00:04, 117085.93it/s]  9%|▊         | 47434/552076 [00:00<00:04, 118576.17it/s] 11%|█         | 59607/552076 [00:00<00:04, 119502.04it/s] 13%|█▎        | 71685/552076 [00:00<00:04, 119881.34it/s] 15%|█▌        | 83646/552076 [00:00<00:03, 119799.58it/s] 17%|█▋        | 95903/552076 [00:00<00:03, 120616.74it/s] 20%|█▉        | 107961/552076 [00:00<00:03, 120605.40it/s] 22%|██▏       | 120081/552076 [00:01<00:03, 120782.34it/s] 24%|██▍       | 131835/552076 [00:01<00:03, 119615.79it/s] 26%|██▌       | 143572/552076 [00:01<00:04, 92694.29it/s]  28%|██▊       | 155578/552076 [00:01<00:03, 99497.16it/s] 30%|███       | 167713/552076 [00:01<00:03, 105177.81it/s] 33%|███▎      | 179838/552076 [00:01<00:03, 109533.01it/s] 35%|███▍      | 192102/552076 [00:01<00:03, 113160.10it/s] 37%|███▋      | 204275/552076 [00:01<00:03, 115598.77it/s] 39%|███▉      | 216085/552076 [00:01<00:03, 110527.86it/s] 41%|████      | 227360/552076 [00:02<00:03, 91753.89it/s]  43%|████▎     | 237224/552076 [00:02<00:03, 85603.41it/s] 45%|████▍     | 246350/552076 [00:02<00:05, 61102.97it/s] 46%|████▌     | 253837/552076 [00:02<00:05, 50422.25it/s] 47%|████▋     | 260153/552076 [00:02<00:05, 50241.68it/s] 49%|████▊     | 267772/552076 [00:02<00:05, 55958.66it/s] 51%|█████     | 279855/552076 [00:03<00:04, 66701.21it/s] 52%|█████▏    | 287979/552076 [00:03<00:04, 62034.20it/s] 53%|█████▎    | 295266/552076 [00:03<00:04, 59887.53it/s] 55%|█████▌    | 306322/552076 [00:03<00:03, 69434.39it/s] 58%|█████▊    | 317880/552076 [00:03<00:02, 78882.06it/s] 59%|█████▉    | 327244/552076 [00:03<00:02, 82795.21it/s] 61%|██████▏   | 339252/552076 [00:03<00:02, 91298.45it/s] 64%|██████▎   | 351352/552076 [00:03<00:02, 98554.33it/s] 66%|██████▌   | 363507/552076 [00:03<00:01, 104482.62it/s] 68%|██████▊   | 375421/552076 [00:03<00:01, 108485.40it/s] 70%|███████   | 387535/552076 [00:04<00:01, 111994.56it/s] 72%|███████▏  | 399781/552076 [00:04<00:01, 114939.61it/s] 75%|███████▍  | 411558/552076 [00:04<00:01, 113654.48it/s] 77%|███████▋  | 423802/552076 [00:04<00:01, 116152.90it/s] 79%|███████▉  | 436041/552076 [00:04<00:00, 117955.22it/s] 81%|████████  | 448136/552076 [00:04<00:00, 118836.83it/s] 83%|████████▎ | 460323/552076 [00:04<00:00, 119729.08it/s] 86%|████████▌ | 472572/552076 [00:04<00:00, 120542.87it/s] 88%|████████▊ | 484669/552076 [00:04<00:00, 120665.39it/s] 90%|█████████ | 496906/552076 [00:04<00:00, 121170.00it/s] 92%|█████████▏| 509126/552076 [00:05<00:00, 121476.86it/s] 94%|█████████▍| 521344/552076 [00:05<00:00, 121686.20it/s] 97%|█████████▋| 533647/552076 [00:05<00:00, 122083.60it/s] 99%|█████████▉| 545864/552076 [00:05<00:00, 121596.22it/s]100%|██████████| 552076/552076 [00:05<00:00, 101358.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10556/552076 [00:00<00:05, 105554.82it/s]  4%|▎         | 19620/552076 [00:00<00:05, 100586.46it/s]  5%|▌         | 30241/552076 [00:00<00:05, 102209.10it/s]  8%|▊         | 42295/552076 [00:00<00:04, 107094.33it/s] 10%|▉         | 53539/552076 [00:00<00:04, 108643.24it/s] 11%|█▏        | 62698/552076 [00:00<00:04, 99936.37it/s]  14%|█▎        | 74947/552076 [00:00<00:04, 105777.47it/s] 16%|█▌        | 86482/552076 [00:00<00:04, 108477.15it/s] 18%|█▊        | 98690/552076 [00:00<00:04, 112226.96it/s] 20%|█▉        | 109641/552076 [00:01<00:04, 102865.40it/s] 22%|██▏       | 121643/552076 [00:01<00:04, 107472.05it/s] 24%|██▍       | 133092/552076 [00:01<00:03, 109483.48it/s] 26%|██▌       | 144069/552076 [00:01<00:03, 106777.56it/s] 28%|██▊       | 156206/552076 [00:01<00:03, 110771.36it/s] 30%|███       | 167743/552076 [00:01<00:03, 109524.21it/s] 32%|███▏      | 178743/552076 [00:01<00:03, 97871.15it/s]  35%|███▍      | 190891/552076 [00:01<00:03, 103928.30it/s] 37%|███▋      | 203006/552076 [00:01<00:03, 108556.44it/s] 39%|███▉      | 215137/552076 [00:01<00:03, 112090.10it/s] 41%|████      | 226588/552076 [00:02<00:02, 112803.78it/s] 43%|████▎     | 238819/552076 [00:02<00:02, 115494.40it/s] 45%|████▌     | 250824/552076 [00:02<00:02, 116823.33it/s] 48%|████▊     | 263075/552076 [00:02<00:02, 118471.76it/s] 50%|████▉     | 274989/552076 [00:02<00:02, 118471.77it/s] 52%|█████▏    | 287171/552076 [00:02<00:02, 119454.53it/s] 54%|█████▍    | 299151/552076 [00:02<00:02, 113183.08it/s] 56%|█████▋    | 311021/552076 [00:02<00:02, 114782.86it/s] 58%|█████▊    | 322570/552076 [00:02<00:02, 113482.86it/s] 61%|██████    | 334405/552076 [00:03<00:01, 114900.07it/s] 63%|██████▎   | 346498/552076 [00:03<00:01, 116641.28it/s] 65%|██████▍   | 358480/552076 [00:03<00:01, 117576.58it/s] 67%|██████▋   | 370448/552076 [00:03<00:01, 118197.33it/s] 69%|██████▉   | 382287/552076 [00:03<00:01, 117525.70it/s] 71%|███████▏  | 394339/552076 [00:03<00:01, 118404.95it/s] 74%|███████▎  | 406336/552076 [00:03<00:01, 118869.77it/s] 76%|███████▌  | 418351/552076 [00:03<00:01, 119250.58it/s] 78%|███████▊  | 430348/552076 [00:03<00:01, 119463.83it/s] 80%|████████  | 442299/552076 [00:03<00:00, 119465.15it/s] 82%|████████▏ | 454249/552076 [00:04<00:00, 119236.38it/s] 84%|████████▍ | 466175/552076 [00:04<00:00, 117866.74it/s] 87%|████████▋ | 477967/552076 [00:04<00:00, 116085.28it/s] 89%|████████▊ | 489613/552076 [00:04<00:00, 116196.73it/s] 91%|█████████ | 501240/552076 [00:04<00:00, 115478.99it/s] 93%|█████████▎| 513228/552076 [00:04<00:00, 116762.58it/s] 95%|█████████▌| 525228/552076 [00:04<00:00, 117713.53it/s] 97%|█████████▋| 537085/552076 [00:04<00:00, 117968.78it/s] 99%|█████████▉| 548887/552076 [00:04<00:00, 117244.67it/s]100%|██████████| 552076/552076 [00:04<00:00, 113569.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11463/552076 [00:00<00:04, 114628.20it/s]  4%|▍         | 23366/552076 [00:00<00:04, 115914.12it/s]  6%|▋         | 35225/552076 [00:00<00:04, 116702.67it/s]  9%|▊         | 47174/552076 [00:00<00:04, 117524.74it/s] 11%|█         | 59322/552076 [00:00<00:04, 118683.63it/s] 13%|█▎        | 71475/552076 [00:00<00:04, 119521.04it/s] 15%|█▌        | 83646/552076 [00:00<00:03, 120167.16it/s] 17%|█▋        | 95566/552076 [00:00<00:03, 119873.76it/s] 19%|█▉        | 107595/552076 [00:00<00:03, 119997.25it/s] 22%|██▏       | 119706/552076 [00:01<00:03, 120328.87it/s] 24%|██▍       | 131529/552076 [00:01<00:03, 119691.03it/s] 26%|██▌       | 143274/552076 [00:01<00:03, 109965.24it/s] 28%|██▊       | 154269/552076 [00:01<00:04, 98131.99it/s]  30%|██▉       | 164319/552076 [00:01<00:04, 95751.74it/s] 32%|███▏      | 174073/552076 [00:01<00:04, 83856.99it/s] 33%|███▎      | 182851/552076 [00:01<00:04, 79343.53it/s] 35%|███▍      | 192799/552076 [00:01<00:04, 84471.97it/s] 37%|███▋      | 202792/552076 [00:01<00:03, 88581.80it/s] 39%|███▊      | 213480/552076 [00:02<00:03, 93377.39it/s] 41%|████      | 225540/552076 [00:02<00:03, 100159.81it/s] 43%|████▎     | 235878/552076 [00:02<00:03, 85286.21it/s]  44%|████▍     | 245015/552076 [00:02<00:03, 78380.04it/s] 47%|████▋     | 257197/552076 [00:02<00:03, 87769.22it/s] 48%|████▊     | 267527/552076 [00:02<00:03, 91913.74it/s] 50%|█████     | 278191/552076 [00:02<00:02, 95767.20it/s] 52%|█████▏    | 288208/552076 [00:02<00:02, 92296.76it/s] 54%|█████▍    | 299966/552076 [00:02<00:02, 98659.73it/s] 57%|█████▋    | 311965/552076 [00:03<00:02, 104217.05it/s] 59%|█████▊    | 324198/552076 [00:03<00:02, 109059.84it/s] 61%|██████    | 335454/552076 [00:03<00:01, 110085.54it/s] 63%|██████▎   | 346670/552076 [00:03<00:02, 90431.66it/s]  65%|██████▌   | 358882/552076 [00:03<00:01, 98064.59it/s] 67%|██████▋   | 369382/552076 [00:03<00:01, 91620.22it/s] 69%|██████▊   | 379115/552076 [00:03<00:01, 92323.34it/s] 71%|███████   | 389322/552076 [00:03<00:01, 95045.77it/s] 72%|███████▏  | 399128/552076 [00:04<00:01, 84872.06it/s] 74%|███████▍  | 410087/552076 [00:04<00:01, 91030.96it/s] 76%|███████▌  | 419606/552076 [00:04<00:01, 77058.16it/s] 78%|███████▊  | 427971/552076 [00:04<00:01, 75237.67it/s] 79%|███████▉  | 438264/552076 [00:04<00:01, 81842.56it/s] 81%|████████  | 446949/552076 [00:04<00:01, 79195.74it/s] 83%|████████▎ | 455649/552076 [00:04<00:01, 81385.19it/s] 85%|████████▍ | 466521/552076 [00:04<00:00, 88022.68it/s] 87%|████████▋ | 478876/552076 [00:04<00:00, 96332.82it/s] 89%|████████▊ | 488988/552076 [00:05<00:00, 92675.67it/s] 91%|█████████ | 500534/552076 [00:05<00:00, 98506.85it/s] 93%|█████████▎| 512166/552076 [00:05<00:00, 103249.98it/s] 95%|█████████▍| 523858/552076 [00:05<00:00, 107001.50it/s] 97%|█████████▋| 535566/552076 [00:05<00:00, 109836.95it/s] 99%|█████████▉| 547406/552076 [00:05<00:00, 112270.37it/s]100%|██████████| 552076/552076 [00:05<00:00, 98720.81it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6224/552076 [00:00<00:08, 62235.90it/s]  2%|▏         | 13141/552076 [00:00<00:08, 63714.19it/s]  4%|▎         | 19515/552076 [00:00<00:08, 63055.68it/s]  5%|▍         | 25377/552076 [00:00<00:08, 60886.92it/s]  6%|▌         | 32991/552076 [00:00<00:08, 64114.25it/s]  7%|▋         | 39152/552076 [00:00<00:08, 63340.95it/s]  9%|▉         | 49448/552076 [00:00<00:07, 71606.21it/s] 10%|█         | 56490/552076 [00:00<00:07, 65394.96it/s] 12%|█▏        | 66619/552076 [00:00<00:06, 73174.11it/s] 14%|█▍        | 78417/552076 [00:01<00:05, 82582.11it/s] 16%|█▋        | 90004/552076 [00:01<00:05, 90369.77it/s] 18%|█▊        | 100624/552076 [00:01<00:04, 94599.47it/s] 20%|██        | 111222/552076 [00:01<00:04, 97746.67it/s] 22%|██▏       | 122982/552076 [00:01<00:04, 102960.98it/s] 24%|██▍       | 134538/552076 [00:01<00:03, 106441.45it/s] 26%|██▋       | 145520/552076 [00:01<00:03, 107430.68it/s] 28%|██▊       | 156455/552076 [00:01<00:03, 107055.95it/s] 30%|███       | 167460/552076 [00:01<00:03, 107935.28it/s] 32%|███▏      | 178489/552076 [00:01<00:03, 108628.96it/s] 34%|███▍      | 189492/552076 [00:02<00:03, 109045.39it/s] 37%|███▋      | 202222/552076 [00:02<00:03, 113946.50it/s] 41%|████      | 224420/552076 [00:02<00:02, 133426.72it/s] 45%|████▍     | 247277/552076 [00:02<00:01, 152465.51it/s] 49%|████▊     | 268773/552076 [00:02<00:01, 167032.57it/s] 53%|█████▎    | 291894/552076 [00:02<00:01, 182204.51it/s] 57%|█████▋    | 313270/552076 [00:02<00:01, 190646.18it/s] 60%|██████    | 333579/552076 [00:02<00:01, 173305.31it/s] 64%|██████▍   | 355318/552076 [00:02<00:01, 184530.97it/s] 68%|██████▊   | 374816/552076 [00:02<00:00, 187545.96it/s] 71%|███████▏  | 394570/552076 [00:03<00:00, 190435.36it/s] 75%|███████▌  | 414134/552076 [00:03<00:00, 188442.90it/s] 78%|███████▊  | 433348/552076 [00:03<00:00, 171037.45it/s] 82%|████████▏ | 451019/552076 [00:03<00:00, 129597.24it/s] 84%|████████▍ | 465873/552076 [00:03<00:00, 123105.47it/s] 88%|████████▊ | 483688/552076 [00:03<00:00, 135680.68it/s] 91%|█████████ | 503096/552076 [00:03<00:00, 149142.46it/s] 95%|█████████▍| 523283/552076 [00:03<00:00, 161822.24it/s] 99%|█████████▊| 544876/552076 [00:04<00:00, 174975.82it/s]100%|██████████| 552076/552076 [00:04<00:00, 134139.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20809/552076 [00:00<00:02, 208089.21it/s]  8%|▊         | 41408/552076 [00:00<00:02, 207453.68it/s] 11%|█▏        | 62580/552076 [00:00<00:02, 208713.71it/s] 15%|█▌        | 84521/552076 [00:00<00:02, 211808.31it/s] 19%|█▉        | 105002/552076 [00:00<00:02, 209657.17it/s] 23%|██▎       | 126818/552076 [00:00<00:02, 212136.78it/s] 27%|██▋       | 148979/552076 [00:00<00:01, 214892.21it/s] 31%|███       | 169938/552076 [00:00<00:01, 213272.72it/s] 34%|███▍      | 190152/552076 [00:00<00:01, 209803.81it/s] 38%|███▊      | 210535/552076 [00:01<00:01, 207973.16it/s] 42%|████▏     | 230766/552076 [00:01<00:01, 203503.69it/s] 46%|████▌     | 251876/552076 [00:01<00:01, 205722.03it/s] 49%|████▉     | 272794/552076 [00:01<00:01, 206747.12it/s] 53%|█████▎    | 293290/552076 [00:01<00:01, 206008.39it/s] 57%|█████▋    | 313923/552076 [00:01<00:01, 206103.06it/s] 61%|██████    | 334528/552076 [00:01<00:01, 206085.72it/s] 64%|██████▍   | 355450/552076 [00:01<00:00, 207015.87it/s] 68%|██████▊   | 376628/552076 [00:01<00:00, 208420.45it/s] 72%|███████▏  | 399247/552076 [00:01<00:00, 213450.42it/s] 76%|███████▋  | 421812/552076 [00:02<00:00, 216969.12it/s] 80%|████████  | 443971/552076 [00:02<00:00, 218332.77it/s] 85%|████████▍ | 466831/552076 [00:02<00:00, 221313.15it/s] 89%|████████▊ | 489173/552076 [00:02<00:00, 221938.72it/s] 93%|█████████▎| 511795/552076 [00:02<00:00, 223205.74it/s] 97%|█████████▋| 534129/552076 [00:02<00:00, 221819.85it/s]100%|██████████| 552076/552076 [00:02<00:00, 213489.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22491/552076 [00:00<00:02, 224903.78it/s]  8%|▊         | 44774/552076 [00:00<00:02, 224276.54it/s] 12%|█▏        | 66101/552076 [00:00<00:02, 220853.74it/s] 16%|█▌        | 87082/552076 [00:00<00:02, 217417.60it/s] 20%|█▉        | 109568/552076 [00:00<00:02, 219595.38it/s] 24%|██▍       | 132311/552076 [00:00<00:01, 221886.08it/s] 28%|██▊       | 154948/552076 [00:00<00:01, 223210.51it/s] 32%|███▏      | 177055/552076 [00:00<00:01, 222561.04it/s] 36%|███▌      | 199330/552076 [00:00<00:01, 222615.69it/s] 40%|███▉      | 220777/552076 [00:01<00:01, 220104.90it/s] 44%|████▍     | 243771/552076 [00:01<00:01, 222964.46it/s] 48%|████▊     | 266120/552076 [00:01<00:01, 223121.29it/s] 52%|█████▏    | 288914/552076 [00:01<00:01, 224545.28it/s] 56%|█████▋    | 311422/552076 [00:01<00:01, 224703.73it/s] 61%|██████    | 334139/552076 [00:01<00:00, 225437.55it/s] 65%|██████▍   | 356747/552076 [00:01<00:00, 225625.13it/s] 69%|██████▊   | 379535/552076 [00:01<00:00, 226295.99it/s] 73%|███████▎  | 402272/552076 [00:01<00:00, 226614.93it/s] 77%|███████▋  | 425122/552076 [00:01<00:00, 227176.11it/s] 81%|████████  | 447869/552076 [00:02<00:00, 227262.96it/s] 85%|████████▌ | 471143/552076 [00:02<00:00, 228875.98it/s] 90%|████████▉ | 494540/552076 [00:02<00:00, 230380.00it/s] 94%|█████████▍| 517575/552076 [00:02<00:00, 229595.71it/s] 98%|█████████▊| 540533/552076 [00:02<00:00, 223057.15it/s]100%|██████████| 552076/552076 [00:02<00:00, 222807.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11365/552076 [00:00<00:04, 113644.15it/s]  4%|▍         | 22582/552076 [00:00<00:04, 113144.39it/s]  6%|▋         | 34736/552076 [00:00<00:04, 115537.40it/s]  8%|▊         | 46038/552076 [00:00<00:04, 114769.02it/s] 10%|▉         | 54797/552076 [00:00<00:04, 102577.08it/s] 12%|█▏        | 66886/552076 [00:00<00:04, 107458.70it/s] 14%|█▍        | 79043/552076 [00:00<00:04, 111335.08it/s] 17%|█▋        | 91172/552076 [00:00<00:04, 114145.59it/s] 19%|█▊        | 103398/552076 [00:00<00:03, 116463.36it/s] 21%|██        | 115784/552076 [00:01<00:03, 118585.91it/s] 23%|██▎       | 127964/552076 [00:01<00:03, 119531.12it/s] 25%|██▌       | 140121/552076 [00:01<00:03, 120134.41it/s] 28%|██▊       | 152354/552076 [00:01<00:03, 120783.52it/s] 30%|██▉       | 164715/552076 [00:01<00:03, 121617.07it/s] 32%|███▏      | 176826/552076 [00:01<00:03, 117246.17it/s] 34%|███▍      | 188549/552076 [00:01<00:03, 110713.68it/s] 36%|███▋      | 200593/552076 [00:01<00:03, 113462.03it/s] 39%|███▊      | 212570/552076 [00:01<00:02, 115283.49it/s] 41%|████      | 224728/552076 [00:01<00:02, 117102.59it/s] 43%|████▎     | 236908/552076 [00:02<00:02, 118472.86it/s] 45%|████▌     | 249181/552076 [00:02<00:02, 119718.28it/s] 47%|████▋     | 261181/552076 [00:02<00:02, 118963.98it/s] 50%|████▉     | 273511/552076 [00:02<00:02, 120229.69it/s] 52%|█████▏    | 285720/552076 [00:02<00:02, 120779.10it/s] 54%|█████▍    | 297811/552076 [00:02<00:02, 96262.73it/s]  56%|█████▌    | 309996/552076 [00:02<00:02, 102733.86it/s] 58%|█████▊    | 322245/552076 [00:02<00:02, 107957.49it/s] 61%|██████    | 334373/552076 [00:02<00:01, 111634.04it/s] 63%|██████▎   | 346300/552076 [00:03<00:01, 113818.25it/s] 65%|██████▍   | 358354/552076 [00:03<00:01, 115753.88it/s] 67%|██████▋   | 370464/552076 [00:03<00:01, 117305.89it/s] 69%|██████▉   | 382692/552076 [00:03<00:01, 118753.00it/s] 71%|███████▏  | 394682/552076 [00:03<00:01, 100620.89it/s] 73%|███████▎  | 405301/552076 [00:03<00:01, 100851.01it/s] 76%|███████▌  | 417593/552076 [00:03<00:01, 106590.97it/s] 78%|███████▊  | 429803/552076 [00:03<00:01, 110812.41it/s] 80%|████████  | 441997/552076 [00:03<00:00, 113931.17it/s] 82%|████████▏ | 454084/552076 [00:03<00:00, 115926.30it/s] 84%|████████▍ | 466198/552076 [00:04<00:00, 117441.97it/s] 87%|████████▋ | 478408/552076 [00:04<00:00, 118799.68it/s] 89%|████████▉ | 490674/552076 [00:04<00:00, 119931.80it/s] 91%|█████████ | 502802/552076 [00:04<00:00, 120331.60it/s] 93%|█████████▎| 514981/552076 [00:04<00:00, 120762.90it/s] 96%|█████████▌| 527365/552076 [00:04<00:00, 121669.04it/s] 98%|█████████▊| 539557/552076 [00:04<00:00, 120507.52it/s]100%|█████████▉| 551773/552076 [00:04<00:00, 120997.73it/s]100%|██████████| 552076/552076 [00:04<00:00, 115050.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10044/552076 [00:00<00:06, 85677.95it/s]  3%|▎         | 18646/552076 [00:00<00:06, 85779.63it/s]  5%|▌         | 30258/552076 [00:00<00:05, 93074.87it/s]  8%|▊         | 41876/552076 [00:00<00:05, 98979.05it/s] 10%|▉         | 54029/552076 [00:00<00:04, 104813.36it/s] 12%|█▏        | 66203/552076 [00:00<00:04, 109373.32it/s] 14%|█▍        | 78043/552076 [00:00<00:04, 111931.26it/s] 16%|█▋        | 89863/552076 [00:00<00:04, 113739.24it/s] 18%|█▊        | 100873/552076 [00:00<00:04, 111509.10it/s] 20%|██        | 111963/552076 [00:01<00:03, 111323.78it/s] 22%|██▏       | 123177/552076 [00:01<00:03, 111566.87it/s] 24%|██▍       | 134926/552076 [00:01<00:03, 113278.14it/s] 26%|██▋       | 146266/552076 [00:01<00:03, 113314.30it/s] 29%|██▊       | 158227/552076 [00:01<00:03, 115130.04it/s] 31%|███       | 169937/552076 [00:01<00:03, 115713.65it/s] 33%|███▎      | 181908/552076 [00:01<00:03, 116881.84it/s] 35%|███▌      | 194240/552076 [00:01<00:03, 118741.04it/s] 37%|███▋      | 206381/552076 [00:01<00:02, 119527.34it/s] 40%|███▉      | 218671/552076 [00:01<00:02, 120518.73it/s] 42%|████▏     | 230925/552076 [00:02<00:02, 121117.42it/s] 44%|████▍     | 243298/552076 [00:02<00:02, 121887.00it/s] 46%|████▋     | 255616/552076 [00:02<00:02, 122270.60it/s] 49%|████▊     | 268089/552076 [00:02<00:02, 122996.21it/s] 51%|█████     | 280521/552076 [00:02<00:02, 123388.66it/s] 53%|█████▎    | 293013/552076 [00:02<00:02, 123841.77it/s] 55%|█████▌    | 305457/552076 [00:02<00:01, 124019.70it/s] 58%|█████▊    | 317861/552076 [00:02<00:01, 123867.52it/s] 60%|█████▉    | 330249/552076 [00:02<00:01, 123851.81it/s] 62%|██████▏   | 342646/552076 [00:02<00:01, 123885.42it/s] 64%|██████▍   | 355036/552076 [00:03<00:01, 123764.84it/s] 67%|██████▋   | 367413/552076 [00:03<00:01, 123353.17it/s] 69%|██████▉   | 379749/552076 [00:03<00:01, 114921.77it/s] 71%|███████   | 391358/552076 [00:03<00:01, 106196.71it/s] 73%|███████▎  | 402654/552076 [00:03<00:01, 108137.73it/s] 75%|███████▌  | 414820/552076 [00:03<00:01, 111867.70it/s] 77%|███████▋  | 426200/552076 [00:03<00:01, 112439.15it/s] 79%|███████▉  | 437545/552076 [00:03<00:01, 104925.60it/s] 81%|████████▏ | 449031/552076 [00:03<00:00, 107720.27it/s] 84%|████████▎ | 461327/552076 [00:04<00:00, 111878.93it/s] 86%|████████▌ | 472654/552076 [00:04<00:00, 104947.89it/s] 88%|████████▊ | 483334/552076 [00:04<00:00, 104836.58it/s] 90%|████████▉ | 494561/552076 [00:04<00:00, 105948.27it/s] 92%|█████████▏| 505844/552076 [00:04<00:00, 107921.18it/s] 94%|█████████▎| 516711/552076 [00:04<00:00, 94984.75it/s]  95%|█████████▌| 526545/552076 [00:04<00:00, 84995.61it/s] 98%|█████████▊| 538858/552076 [00:04<00:00, 93700.77it/s]100%|█████████▉| 551065/552076 [00:04<00:00, 100721.47it/s]100%|██████████| 552076/552076 [00:04<00:00, 112013.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12413/552076 [00:00<00:04, 124123.31it/s]  4%|▍         | 24150/552076 [00:00<00:04, 120975.47it/s]  6%|▌         | 30532/552076 [00:00<00:05, 95354.71it/s]   8%|▊         | 42569/552076 [00:00<00:05, 101693.10it/s] 10%|▉         | 54667/552076 [00:00<00:04, 106800.59it/s] 12%|█▏        | 66315/552076 [00:00<00:04, 109530.18it/s] 14%|█▍        | 78596/552076 [00:00<00:04, 113200.70it/s] 16%|█▌        | 89217/552076 [00:00<00:04, 110704.05it/s] 18%|█▊        | 101083/552076 [00:00<00:03, 112976.16it/s] 20%|██        | 112058/552076 [00:01<00:04, 103226.28it/s] 22%|██▏       | 123885/552076 [00:01<00:03, 107321.36it/s] 25%|██▍       | 135878/552076 [00:01<00:03, 110816.32it/s] 27%|██▋       | 148084/552076 [00:01<00:03, 113964.86it/s] 29%|██▉       | 159522/552076 [00:01<00:03, 111329.44it/s] 31%|███       | 171147/552076 [00:01<00:03, 112758.76it/s] 33%|███▎      | 182458/552076 [00:01<00:03, 101284.73it/s] 35%|███▌      | 194320/552076 [00:01<00:03, 105926.36it/s] 37%|███▋      | 205140/552076 [00:01<00:03, 97867.40it/s]  39%|███▉      | 215939/552076 [00:02<00:03, 98850.76it/s] 41%|████      | 226023/552076 [00:02<00:03, 96835.74it/s] 43%|████▎     | 235855/552076 [00:02<00:03, 91636.08it/s] 45%|████▍     | 248010/552076 [00:02<00:03, 98939.88it/s] 47%|████▋     | 258693/552076 [00:02<00:02, 99447.63it/s] 49%|████▉     | 270761/552076 [00:02<00:02, 104988.00it/s] 51%|█████     | 281481/552076 [00:02<00:02, 99436.33it/s]  53%|█████▎    | 292158/552076 [00:02<00:02, 101526.10it/s] 55%|█████▌    | 304005/552076 [00:02<00:02, 106075.88it/s] 57%|█████▋    | 315922/552076 [00:02<00:02, 109690.70it/s] 59%|█████▉    | 328072/552076 [00:03<00:01, 112984.33it/s] 62%|██████▏   | 339849/552076 [00:03<00:01, 114377.69it/s] 64%|██████▎   | 351381/552076 [00:03<00:01, 114112.72it/s] 66%|██████▌   | 363166/552076 [00:03<00:01, 115208.57it/s] 68%|██████▊   | 375046/552076 [00:03<00:01, 116262.70it/s] 70%|███████   | 387158/552076 [00:03<00:01, 117675.98it/s] 72%|███████▏  | 399026/552076 [00:03<00:01, 117973.34it/s] 74%|███████▍  | 411261/552076 [00:03<00:01, 119251.72it/s] 77%|███████▋  | 424916/552076 [00:03<00:01, 123962.79it/s] 80%|███████▉  | 439183/552076 [00:03<00:00, 129036.11it/s] 82%|████████▏ | 452183/552076 [00:04<00:00, 126896.77it/s] 84%|████████▍ | 464948/552076 [00:04<00:00, 125161.65it/s] 86%|████████▋ | 477523/552076 [00:04<00:00, 123064.60it/s] 89%|████████▊ | 489878/552076 [00:04<00:00, 120301.85it/s] 91%|█████████ | 501956/552076 [00:04<00:00, 120238.50it/s] 93%|█████████▎| 514014/552076 [00:04<00:00, 119318.02it/s] 95%|█████████▌| 526068/552076 [00:04<00:00, 119681.78it/s] 97%|█████████▋| 538054/552076 [00:04<00:00, 112906.58it/s]100%|█████████▉| 550223/552076 [00:04<00:00, 115403.05it/s]100%|██████████| 552076/552076 [00:04<00:00, 111765.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14223/552076 [00:00<00:03, 142225.05it/s]  5%|▍         | 25875/552076 [00:00<00:03, 133393.70it/s]  7%|▋         | 37639/552076 [00:00<00:04, 128240.82it/s]  9%|▉         | 49648/552076 [00:00<00:03, 125679.87it/s] 11%|█         | 62016/552076 [00:00<00:03, 125073.10it/s] 13%|█▎        | 74286/552076 [00:00<00:03, 124350.90it/s] 16%|█▌        | 86444/552076 [00:00<00:03, 123503.53it/s] 18%|█▊        | 97886/552076 [00:00<00:03, 120627.69it/s] 20%|█▉        | 109169/552076 [00:00<00:03, 116883.09it/s] 22%|██▏       | 122173/552076 [00:01<00:03, 120539.99it/s] 24%|██▍       | 134541/552076 [00:01<00:03, 121464.39it/s] 27%|██▋       | 146743/552076 [00:01<00:03, 121628.32it/s] 29%|██▉       | 158800/552076 [00:01<00:03, 121308.56it/s] 31%|███       | 170845/552076 [00:01<00:03, 121049.57it/s] 33%|███▎      | 182871/552076 [00:01<00:03, 120339.96it/s] 35%|███▌      | 195032/552076 [00:01<00:02, 120716.76it/s] 38%|███▊      | 207295/552076 [00:01<00:02, 121282.41it/s] 40%|███▉      | 220587/552076 [00:01<00:02, 124551.47it/s] 42%|████▏     | 233046/552076 [00:01<00:02, 123881.20it/s] 44%|████▍     | 245438/552076 [00:02<00:02, 122237.12it/s] 47%|████▋     | 257670/552076 [00:02<00:02, 121988.34it/s] 49%|████▉     | 269875/552076 [00:02<00:02, 121666.47it/s] 51%|█████     | 282046/552076 [00:02<00:02, 121092.48it/s] 53%|█████▎    | 294159/552076 [00:02<00:02, 120765.75it/s] 55%|█████▌    | 306340/552076 [00:02<00:02, 121074.25it/s] 58%|█████▊    | 318450/552076 [00:02<00:01, 120953.90it/s] 60%|██████    | 331269/552076 [00:02<00:01, 123037.43it/s] 62%|██████▏   | 344280/552076 [00:02<00:01, 125075.52it/s] 65%|██████▍   | 356803/552076 [00:02<00:01, 122369.72it/s] 67%|██████▋   | 369064/552076 [00:03<00:01, 121927.56it/s] 69%|██████▉   | 381274/552076 [00:03<00:01, 117537.66it/s] 71%|███████   | 393074/552076 [00:03<00:01, 114244.09it/s] 73%|███████▎  | 405252/552076 [00:03<00:01, 116404.00it/s] 76%|███████▌  | 417507/552076 [00:03<00:01, 118179.26it/s] 78%|███████▊  | 429542/552076 [00:03<00:01, 118820.15it/s] 80%|███████▉  | 441453/552076 [00:03<00:00, 118299.73it/s] 82%|████████▏ | 453304/552076 [00:03<00:00, 117265.87it/s] 84%|████████▍ | 465535/552076 [00:03<00:00, 118733.26it/s] 87%|████████▋ | 477733/552076 [00:03<00:00, 119688.94it/s] 89%|████████▊ | 489715/552076 [00:04<00:00, 119410.61it/s] 91%|█████████ | 501666/552076 [00:04<00:00, 113291.25it/s] 93%|█████████▎| 513067/552076 [00:04<00:00, 102718.04it/s] 95%|█████████▌| 525123/552076 [00:04<00:00, 107488.82it/s] 97%|█████████▋| 536823/552076 [00:04<00:00, 110175.63it/s] 99%|█████████▉| 548016/552076 [00:04<00:00, 101885.97it/s]100%|██████████| 552076/552076 [00:04<00:00, 118224.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8846/552076 [00:00<00:06, 88455.02it/s]  4%|▎         | 20685/552076 [00:00<00:05, 95714.18it/s]  6%|▌         | 31786/552076 [00:00<00:05, 99839.54it/s]  8%|▊         | 43702/552076 [00:00<00:04, 104942.84it/s] 10%|█         | 55888/552076 [00:00<00:04, 109503.18it/s] 12%|█▏        | 67901/552076 [00:00<00:04, 112487.63it/s] 15%|█▍        | 80177/552076 [00:00<00:04, 115382.90it/s] 17%|█▋        | 91728/552076 [00:00<00:03, 115420.29it/s] 19%|█▉        | 104222/552076 [00:00<00:03, 118118.27it/s] 21%|██        | 116677/552076 [00:01<00:03, 119976.73it/s] 23%|██▎       | 129124/552076 [00:01<00:03, 121289.72it/s] 26%|██▌       | 141330/552076 [00:01<00:03, 121519.55it/s] 28%|██▊       | 153658/552076 [00:01<00:03, 122042.08it/s] 30%|███       | 166124/552076 [00:01<00:03, 122813.53it/s] 32%|███▏      | 178363/552076 [00:01<00:03, 122154.40it/s] 35%|███▍      | 190600/552076 [00:01<00:02, 122218.16it/s] 37%|███▋      | 202850/552076 [00:01<00:02, 122301.82it/s] 39%|███▉      | 215535/552076 [00:01<00:02, 123629.88it/s] 41%|████▏     | 227892/552076 [00:01<00:02, 122262.68it/s] 43%|████▎     | 240118/552076 [00:02<00:02, 122251.50it/s] 46%|████▌     | 252445/552076 [00:02<00:02, 122555.14it/s] 48%|████▊     | 264767/552076 [00:02<00:02, 122752.83it/s] 50%|█████     | 277142/552076 [00:02<00:02, 123049.80it/s] 52%|█████▏    | 289515/552076 [00:02<00:02, 123253.02it/s] 55%|█████▍    | 301841/552076 [00:02<00:02, 123134.93it/s] 57%|█████▋    | 314155/552076 [00:02<00:01, 122800.88it/s] 59%|█████▉    | 326545/552076 [00:02<00:01, 123126.76it/s] 61%|██████▏   | 338859/552076 [00:02<00:01, 122587.71it/s] 64%|██████▎   | 351119/552076 [00:02<00:01, 120411.16it/s] 66%|██████▌   | 363322/552076 [00:03<00:01, 120890.27it/s] 68%|██████▊   | 375418/552076 [00:03<00:01, 120776.50it/s] 70%|███████   | 387501/552076 [00:03<00:01, 119922.58it/s] 72%|███████▏  | 399499/552076 [00:03<00:01, 119327.40it/s] 75%|███████▍  | 411443/552076 [00:03<00:01, 119358.97it/s] 77%|███████▋  | 423382/552076 [00:03<00:01, 111321.08it/s] 79%|███████▊  | 434754/552076 [00:03<00:01, 112028.99it/s] 81%|████████  | 446036/552076 [00:03<00:00, 106870.34it/s] 83%|████████▎ | 456829/552076 [00:03<00:01, 90826.96it/s]  84%|████████▍ | 466402/552076 [00:04<00:00, 91321.70it/s] 86%|████████▌ | 476032/552076 [00:04<00:00, 92103.67it/s] 88%|████████▊ | 485678/552076 [00:04<00:00, 93367.94it/s] 90%|█████████ | 497393/552076 [00:04<00:00, 99422.49it/s] 92%|█████████▏| 509351/552076 [00:04<00:00, 104717.87it/s] 94%|█████████▍| 521549/552076 [00:04<00:00, 109359.11it/s] 97%|█████████▋| 533841/552076 [00:04<00:00, 113101.43it/s] 99%|█████████▉| 546036/552076 [00:04<00:00, 115615.46it/s]100%|██████████| 552076/552076 [00:04<00:00, 115603.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6255/552076 [00:00<00:08, 62009.69it/s]  3%|▎         | 17777/552076 [00:00<00:07, 71981.51it/s]  5%|▍         | 26699/552076 [00:00<00:06, 76084.86it/s]  6%|▌         | 32986/552076 [00:00<00:07, 71570.43it/s]  7%|▋         | 40702/552076 [00:00<00:06, 73159.36it/s]  9%|▉         | 51702/552076 [00:00<00:06, 81330.30it/s] 12%|█▏        | 63541/552076 [00:00<00:05, 89758.54it/s] 14%|█▎        | 75860/552076 [00:00<00:04, 97713.27it/s] 16%|█▌        | 87021/552076 [00:00<00:04, 101503.53it/s] 18%|█▊        | 99005/552076 [00:01<00:04, 106385.82it/s] 20%|█▉        | 110328/552076 [00:01<00:04, 108349.96it/s] 22%|██▏       | 121329/552076 [00:01<00:04, 106055.66it/s] 24%|██▍       | 132351/552076 [00:01<00:03, 107270.97it/s] 26%|██▌       | 143172/552076 [00:01<00:03, 107548.93it/s] 28%|██▊       | 154023/552076 [00:01<00:03, 107833.96it/s] 30%|██▉       | 165227/552076 [00:01<00:03, 109060.52it/s] 32%|███▏      | 177072/552076 [00:01<00:03, 111715.25it/s] 34%|███▍      | 190227/552076 [00:01<00:03, 117006.65it/s] 37%|███▋      | 202314/552076 [00:01<00:02, 118138.68it/s] 39%|███▉      | 214374/552076 [00:02<00:02, 118865.99it/s] 41%|████      | 226337/552076 [00:02<00:02, 119090.98it/s] 43%|████▎     | 238425/552076 [00:02<00:02, 119621.37it/s] 45%|████▌     | 250413/552076 [00:02<00:02, 119696.74it/s] 48%|████▊     | 262400/552076 [00:02<00:02, 118812.64it/s] 50%|████▉     | 274342/552076 [00:02<00:02, 118991.44it/s] 52%|█████▏    | 286433/552076 [00:02<00:02, 119560.36it/s] 54%|█████▍    | 298491/552076 [00:02<00:02, 119862.17it/s] 56%|█████▋    | 311480/552076 [00:02<00:01, 122703.96it/s] 59%|█████▊    | 323869/552076 [00:02<00:01, 123054.79it/s] 61%|██████    | 336189/552076 [00:03<00:01, 122281.34it/s] 63%|██████▎   | 348429/552076 [00:03<00:01, 121615.36it/s] 65%|██████▌   | 360600/552076 [00:03<00:01, 121608.30it/s] 68%|██████▊   | 372767/552076 [00:03<00:01, 120953.15it/s] 70%|██████▉   | 384868/552076 [00:03<00:01, 119584.79it/s] 72%|███████▏  | 397015/552076 [00:03<00:01, 120141.41it/s] 74%|███████▍  | 409096/552076 [00:03<00:01, 120339.87it/s] 76%|███████▋  | 421186/552076 [00:03<00:01, 120506.54it/s] 79%|███████▊  | 434209/552076 [00:03<00:00, 123264.90it/s] 81%|████████  | 446678/552076 [00:03<00:00, 123688.16it/s] 83%|████████▎ | 459060/552076 [00:04<00:00, 123177.22it/s] 85%|████████▌ | 471388/552076 [00:04<00:00, 93260.54it/s]  87%|████████▋ | 481803/552076 [00:04<00:00, 90032.92it/s] 89%|████████▉ | 493928/552076 [00:04<00:00, 97567.81it/s] 92%|█████████▏| 506134/552076 [00:04<00:00, 103816.58it/s] 94%|█████████▍| 518127/552076 [00:04<00:00, 108174.66it/s] 96%|█████████▌| 530335/552076 [00:04<00:00, 112000.89it/s] 98%|█████████▊| 542895/552076 [00:04<00:00, 115759.46it/s]100%|██████████| 552076/552076 [00:04<00:00, 111909.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9313/552076 [00:00<00:05, 93126.98it/s]  3%|▎         | 14165/552076 [00:00<00:07, 72313.42it/s]  4%|▍         | 21979/552076 [00:00<00:07, 73967.49it/s]  6%|▌         | 33863/552076 [00:00<00:06, 83415.16it/s]  8%|▊         | 45886/552076 [00:00<00:05, 91851.83it/s] 11%|█         | 58095/552076 [00:00<00:04, 99222.51it/s] 13%|█▎        | 70297/552076 [00:00<00:04, 105113.95it/s] 15%|█▍        | 82231/552076 [00:00<00:04, 109010.89it/s] 17%|█▋        | 94479/552076 [00:00<00:04, 112727.39it/s] 19%|█▉        | 106732/552076 [00:01<00:03, 115499.00it/s] 22%|██▏       | 119036/552076 [00:01<00:03, 117659.88it/s] 24%|██▍       | 131205/552076 [00:01<00:03, 118838.73it/s] 26%|██▌       | 143099/552076 [00:01<00:03, 118474.73it/s] 28%|██▊       | 155179/552076 [00:01<00:03, 119160.62it/s] 30%|███       | 167449/552076 [00:01<00:03, 120199.24it/s] 33%|███▎      | 179476/552076 [00:01<00:03, 119980.99it/s] 35%|███▍      | 191626/552076 [00:01<00:02, 120430.25it/s] 37%|███▋      | 203673/552076 [00:01<00:02, 120174.69it/s] 39%|███▉      | 216108/552076 [00:01<00:02, 121395.03it/s] 43%|████▎     | 237625/552076 [00:02<00:02, 139653.23it/s] 47%|████▋     | 260495/552076 [00:02<00:01, 158122.42it/s] 51%|█████     | 282010/552076 [00:02<00:01, 171780.45it/s] 55%|█████▌    | 304359/552076 [00:02<00:01, 184591.18it/s] 59%|█████▉    | 326696/552076 [00:02<00:01, 194731.23it/s] 63%|██████▎   | 347197/552076 [00:02<00:01, 175531.06it/s] 67%|██████▋   | 369646/552076 [00:02<00:00, 187817.75it/s] 71%|███████   | 392845/552076 [00:02<00:00, 199195.62it/s] 75%|███████▌  | 415974/552076 [00:02<00:00, 207847.86it/s] 80%|███████▉  | 439371/552076 [00:02<00:00, 215048.62it/s] 84%|████████▎ | 461441/552076 [00:03<00:00, 187764.88it/s] 88%|████████▊ | 484727/552076 [00:03<00:00, 199345.43it/s] 92%|█████████▏| 507471/552076 [00:03<00:00, 207014.60it/s] 96%|█████████▌| 529615/552076 [00:03<00:00, 211133.52it/s]100%|██████████| 552076/552076 [00:03<00:00, 157725.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22125/552076 [00:00<00:02, 221242.83it/s]  8%|▊         | 44262/552076 [00:00<00:02, 221280.71it/s] 12%|█▏        | 66147/552076 [00:00<00:02, 220543.53it/s] 16%|█▌        | 88384/552076 [00:00<00:02, 221086.96it/s] 20%|█▉        | 109566/552076 [00:00<00:02, 218220.00it/s] 24%|██▍       | 131515/552076 [00:00<00:01, 218598.74it/s] 27%|██▋       | 150779/552076 [00:00<00:02, 195880.08it/s] 31%|███       | 168993/552076 [00:00<00:02, 144868.05it/s] 33%|███▎      | 184447/552076 [00:01<00:02, 146642.70it/s] 37%|███▋      | 204822/552076 [00:01<00:02, 160103.62it/s] 41%|████      | 227175/552076 [00:01<00:01, 175000.32it/s] 45%|████▌     | 250619/552076 [00:01<00:01, 189405.44it/s] 50%|████▉     | 273579/552076 [00:01<00:01, 199903.77it/s] 54%|█████▎    | 296345/552076 [00:01<00:01, 207492.93it/s] 58%|█████▊    | 319066/552076 [00:01<00:01, 213036.62it/s] 62%|██████▏   | 342003/552076 [00:01<00:00, 217686.52it/s] 66%|██████▌   | 364163/552076 [00:01<00:01, 176081.98it/s] 69%|██████▉   | 383329/552076 [00:02<00:01, 129441.50it/s] 72%|███████▏  | 399145/552076 [00:02<00:01, 106831.12it/s] 75%|███████▍  | 412493/552076 [00:02<00:01, 90339.46it/s]  77%|███████▋  | 424643/552076 [00:02<00:01, 97868.17it/s] 79%|███████▉  | 436223/552076 [00:02<00:01, 87287.01it/s] 81%|████████  | 446421/552076 [00:02<00:01, 77169.32it/s] 82%|████████▏ | 455382/552076 [00:03<00:01, 71761.61it/s] 84%|████████▍ | 464601/552076 [00:03<00:01, 76871.79it/s] 86%|████████▌ | 473053/552076 [00:03<00:01, 77884.29it/s] 87%|████████▋ | 481380/552076 [00:03<00:00, 73553.27it/s] 89%|████████▊ | 489162/552076 [00:03<00:00, 67888.63it/s] 90%|████████▉ | 496336/552076 [00:03<00:00, 65505.55it/s] 91%|█████████ | 503174/552076 [00:03<00:00, 65621.71it/s] 92%|█████████▏| 509938/552076 [00:03<00:00, 63254.62it/s] 94%|█████████▎| 516423/552076 [00:04<00:00, 63477.16it/s] 95%|█████████▍| 522883/552076 [00:04<00:00, 61419.29it/s] 96%|█████████▌| 529223/552076 [00:04<00:00, 62000.14it/s] 97%|█████████▋| 535599/552076 [00:04<00:00, 62516.69it/s] 98%|█████████▊| 541898/552076 [00:04<00:00, 60545.82it/s] 99%|█████████▉| 548281/552076 [00:04<00:00, 61493.91it/s]100%|██████████| 552076/552076 [00:04<00:00, 119000.49it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11583/552076 [00:00<00:04, 115822.93it/s]  4%|▍         | 22396/552076 [00:00<00:04, 113401.53it/s]  5%|▌         | 28073/552076 [00:00<00:07, 73170.08it/s]   6%|▌         | 33637/552076 [00:00<00:07, 66849.67it/s]  7%|▋         | 39976/552076 [00:00<00:07, 65772.68it/s]  8%|▊         | 45582/552076 [00:00<00:08, 59856.23it/s]  9%|▉         | 50990/552076 [00:00<00:13, 37086.11it/s] 10%|█         | 55365/552076 [00:01<00:13, 35901.01it/s] 11%|█         | 59430/552076 [00:01<00:13, 35598.66it/s] 12%|█▏        | 64964/552076 [00:01<00:12, 39864.91it/s] 13%|█▎        | 69921/552076 [00:01<00:11, 41093.57it/s] 13%|█▎        | 74319/552076 [00:01<00:12, 39023.54it/s] 14%|█▍        | 79493/552076 [00:01<00:11, 42129.83it/s] 16%|█▌        | 88818/552076 [00:01<00:09, 50421.82it/s] 17%|█▋        | 94724/552076 [00:01<00:09, 45873.38it/s] 18%|█▊        | 99995/552076 [00:02<00:11, 40484.19it/s] 19%|█▉        | 104812/552076 [00:02<00:10, 42518.42it/s] 20%|█▉        | 109507/552076 [00:02<00:10, 41681.95it/s] 21%|██        | 115147/552076 [00:02<00:09, 45221.91it/s] 22%|██▏       | 121313/552076 [00:02<00:08, 49152.34it/s] 23%|██▎       | 126544/552076 [00:02<00:09, 42617.49it/s] 24%|██▍       | 131181/552076 [00:02<00:09, 43321.12it/s] 25%|██▍       | 135779/552076 [00:02<00:09, 43013.75it/s] 25%|██▌       | 140267/552076 [00:02<00:09, 41954.74it/s] 26%|██▌       | 144599/552076 [00:03<00:11, 35647.31it/s] 27%|██▋       | 148423/552076 [00:03<00:12, 33306.66it/s] 28%|██▊       | 151967/552076 [00:03<00:12, 31838.14it/s] 28%|██▊       | 155314/552076 [00:03<00:12, 31969.44it/s] 29%|██▊       | 158625/552076 [00:03<00:12, 30447.61it/s] 29%|██▉       | 161765/552076 [00:03<00:13, 29863.36it/s] 30%|██▉       | 164935/552076 [00:03<00:13, 29440.08it/s] 31%|███       | 168592/552076 [00:03<00:12, 30985.16it/s] 31%|███       | 171747/552076 [00:04<00:13, 29039.51it/s] 32%|███▏      | 175014/552076 [00:04<00:12, 30040.54it/s] 32%|███▏      | 178072/552076 [00:04<00:12, 30147.01it/s] 33%|███▎      | 181125/552076 [00:04<00:12, 29811.72it/s] 33%|███▎      | 184134/552076 [00:04<00:12, 29096.34it/s] 34%|███▍      | 187067/552076 [00:04<00:12, 28913.44it/s] 34%|███▍      | 190242/552076 [00:04<00:12, 29709.35it/s] 35%|███▌      | 193230/552076 [00:04<00:12, 29647.21it/s] 36%|███▌      | 196297/552076 [00:04<00:11, 29946.34it/s] 36%|███▌      | 199301/552076 [00:04<00:12, 29381.23it/s] 37%|███▋      | 202248/552076 [00:05<00:12, 28644.28it/s] 37%|███▋      | 205369/552076 [00:05<00:12, 28316.94it/s] 38%|███▊      | 208737/552076 [00:05<00:11, 29736.91it/s] 38%|███▊      | 212203/552076 [00:05<00:10, 31060.16it/s] 39%|███▉      | 215342/552076 [00:05<00:11, 28981.22it/s] 40%|███▉      | 218291/552076 [00:05<00:11, 28306.49it/s] 40%|████      | 221554/552076 [00:05<00:11, 29477.50it/s] 41%|████      | 224544/552076 [00:05<00:11, 29602.08it/s] 41%|████      | 227533/552076 [00:05<00:11, 29033.84it/s] 42%|████▏     | 230738/552076 [00:06<00:11, 29119.04it/s] 42%|████▏     | 234125/552076 [00:06<00:10, 30398.05it/s] 43%|████▎     | 237191/552076 [00:06<00:10, 30014.62it/s] 44%|████▎     | 240393/552076 [00:06<00:10, 30000.98it/s] 44%|████▍     | 244192/552076 [00:06<00:09, 32020.98it/s] 45%|████▍     | 247442/552076 [00:06<00:10, 30054.32it/s] 45%|████▌     | 250505/552076 [00:06<00:11, 26330.09it/s] 46%|████▌     | 253262/552076 [00:06<00:11, 25378.01it/s] 46%|████▋     | 256027/552076 [00:06<00:11, 25975.41it/s] 47%|████▋     | 259548/552076 [00:07<00:10, 28193.50it/s] 48%|████▊     | 262766/552076 [00:07<00:10, 28057.75it/s] 48%|████▊     | 266877/552076 [00:07<00:09, 30912.49it/s] 49%|████▉     | 270734/552076 [00:07<00:08, 32482.80it/s] 50%|█████     | 277004/552076 [00:07<00:07, 36777.79it/s] 51%|█████     | 280957/552076 [00:07<00:08, 33857.35it/s] 52%|█████▏    | 284776/552076 [00:07<00:07, 35049.69it/s] 52%|█████▏    | 288661/552076 [00:07<00:07, 35550.64it/s] 53%|█████▎    | 295226/552076 [00:07<00:06, 41220.03it/s] 54%|█████▍    | 300855/552076 [00:08<00:05, 44818.79it/s] 55%|█████▌    | 306099/552076 [00:08<00:05, 45739.70it/s] 56%|█████▋    | 310950/552076 [00:08<00:05, 40907.31it/s] 57%|█████▋    | 315331/552076 [00:08<00:07, 30445.94it/s] 58%|█████▊    | 318970/552076 [00:08<00:09, 25683.25it/s] 58%|█████▊    | 322082/552076 [00:08<00:09, 23385.66it/s] 59%|█████▉    | 324841/552076 [00:08<00:09, 22907.82it/s] 59%|█████▉    | 327931/552076 [00:09<00:09, 24145.71it/s] 60%|██████    | 331312/552076 [00:09<00:08, 26139.26it/s] 61%|██████    | 336576/552076 [00:09<00:06, 30789.15it/s] 62%|██████▏   | 340758/552076 [00:09<00:06, 32733.48it/s] 63%|██████▎   | 346552/552076 [00:09<00:05, 37090.47it/s] 64%|██████▎   | 351689/552076 [00:09<00:05, 39912.38it/s] 64%|██████▍   | 356058/552076 [00:09<00:04, 39897.64it/s] 65%|██████▌   | 360312/552076 [00:09<00:05, 37882.22it/s] 66%|██████▌   | 364307/552076 [00:09<00:05, 37311.84it/s] 67%|██████▋   | 368185/552076 [00:10<00:04, 37626.35it/s] 68%|██████▊   | 373580/552076 [00:10<00:04, 40841.22it/s] 68%|██████▊   | 377817/552076 [00:10<00:04, 40982.82it/s] 69%|██████▉   | 383403/552076 [00:10<00:03, 44540.34it/s] 70%|███████   | 388023/552076 [00:10<00:03, 42730.33it/s] 71%|███████▏  | 393652/552076 [00:10<00:03, 46058.20it/s] 72%|███████▏  | 398613/552076 [00:10<00:03, 47068.63it/s] 73%|███████▎  | 403442/552076 [00:10<00:03, 45329.23it/s] 74%|███████▍  | 408074/552076 [00:10<00:03, 41759.69it/s] 75%|███████▍  | 413486/552076 [00:11<00:03, 44830.58it/s] 76%|███████▌  | 418120/552076 [00:11<00:03, 44576.31it/s] 77%|███████▋  | 422684/552076 [00:11<00:02, 43915.52it/s] 78%|███████▊  | 428215/552076 [00:11<00:02, 46808.16it/s] 78%|███████▊  | 433302/552076 [00:11<00:02, 47180.82it/s] 79%|███████▉  | 438601/552076 [00:11<00:02, 48623.19it/s] 80%|████████  | 444047/552076 [00:11<00:02, 50238.41it/s] 81%|████████▏ | 449287/552076 [00:11<00:02, 50866.57it/s] 82%|████████▏ | 454417/552076 [00:11<00:01, 50316.49it/s] 83%|████████▎ | 459480/552076 [00:11<00:01, 50139.49it/s] 84%|████████▍ | 464743/552076 [00:12<00:01, 50860.46it/s] 85%|████████▌ | 470152/552076 [00:12<00:01, 51787.68it/s] 86%|████████▌ | 475474/552076 [00:12<00:01, 50608.93it/s] 87%|████████▋ | 480870/552076 [00:12<00:01, 50898.65it/s] 88%|████████▊ | 486113/552076 [00:12<00:01, 50891.39it/s] 89%|████████▉ | 491419/552076 [00:12<00:01, 50926.06it/s] 90%|████████▉ | 496861/552076 [00:12<00:01, 51925.80it/s] 91%|█████████ | 502244/552076 [00:12<00:00, 52482.19it/s] 92%|█████████▏| 507668/552076 [00:12<00:00, 52996.73it/s] 93%|█████████▎| 512975/552076 [00:13<00:00, 51322.56it/s] 94%|█████████▍| 518241/552076 [00:13<00:00, 51716.48it/s] 95%|█████████▍| 523603/552076 [00:13<00:00, 52272.80it/s] 96%|█████████▌| 528841/552076 [00:13<00:00, 50690.53it/s] 97%|█████████▋| 534268/552076 [00:13<00:00, 51712.60it/s] 98%|█████████▊| 539457/552076 [00:13<00:00, 51420.16it/s] 99%|█████████▊| 544612/552076 [00:13<00:00, 50809.15it/s]100%|█████████▉| 550127/552076 [00:13<00:00, 52037.48it/s]100%|██████████| 552076/552076 [00:13<00:00, 40100.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3426/552076 [00:00<00:16, 34258.56it/s]  1%|▏         | 6933/552076 [00:00<00:15, 34269.17it/s]  2%|▏         | 10635/552076 [00:00<00:15, 34618.64it/s]  3%|▎         | 14576/552076 [00:00<00:14, 35929.00it/s]  3%|▎         | 18064/552076 [00:00<00:15, 35356.12it/s]  4%|▍         | 21369/552076 [00:00<00:15, 34459.86it/s]  4%|▍         | 24425/552076 [00:00<00:16, 31146.38it/s]  5%|▍         | 27328/552076 [00:00<00:18, 27856.42it/s]  6%|▌         | 30688/552076 [00:00<00:18, 28877.85it/s]  6%|▌         | 33937/552076 [00:01<00:18, 28571.79it/s]  7%|▋         | 37040/552076 [00:01<00:17, 29266.30it/s]  7%|▋         | 40020/552076 [00:01<00:17, 29423.59it/s]  8%|▊         | 42950/552076 [00:01<00:17, 29061.75it/s]  8%|▊         | 45848/552076 [00:01<00:18, 27756.22it/s]  9%|▉         | 48777/552076 [00:01<00:17, 28199.11it/s]  9%|▉         | 51604/552076 [00:01<00:17, 27857.37it/s] 10%|▉         | 54396/552076 [00:01<00:17, 27833.94it/s] 10%|█         | 57184/552076 [00:01<00:18, 27484.02it/s] 11%|█         | 60890/552076 [00:02<00:16, 29526.75it/s] 12%|█▏        | 64433/552076 [00:02<00:15, 31079.81it/s] 12%|█▏        | 67778/552076 [00:02<00:15, 31152.47it/s] 13%|█▎        | 71484/552076 [00:02<00:14, 32716.14it/s] 14%|█▎        | 74803/552076 [00:02<00:14, 32537.63it/s] 14%|█▍        | 78090/552076 [00:02<00:14, 32002.10it/s] 15%|█▍        | 81834/552076 [00:02<00:14, 33184.01it/s] 15%|█▌        | 85288/552076 [00:02<00:13, 33430.19it/s] 16%|█▌        | 88652/552076 [00:02<00:13, 33349.14it/s] 17%|█▋        | 92143/552076 [00:02<00:13, 33802.18it/s] 17%|█▋        | 95608/552076 [00:03<00:13, 34050.81it/s] 18%|█▊        | 99022/552076 [00:03<00:13, 33482.46it/s] 19%|█▊        | 102540/552076 [00:03<00:13, 33973.62it/s] 19%|█▉        | 105945/552076 [00:03<00:14, 31543.83it/s] 20%|█▉        | 109639/552076 [00:03<00:13, 32988.62it/s] 20%|██        | 113029/552076 [00:03<00:13, 33255.99it/s] 21%|██        | 116939/552076 [00:03<00:12, 34591.80it/s] 22%|██▏       | 120664/552076 [00:03<00:12, 35347.41it/s] 23%|██▎       | 124229/552076 [00:03<00:12, 34869.18it/s] 23%|██▎       | 127916/552076 [00:03<00:11, 35445.11it/s] 24%|██▍       | 131662/552076 [00:04<00:11, 35131.17it/s] 24%|██▍       | 135189/552076 [00:04<00:11, 35127.97it/s] 25%|██▌       | 138711/552076 [00:04<00:11, 35004.81it/s] 26%|██▌       | 142218/552076 [00:04<00:12, 33501.21it/s] 26%|██▋       | 146244/552076 [00:04<00:11, 35261.83it/s] 27%|██▋       | 149808/552076 [00:04<00:11, 33589.00it/s] 28%|██▊       | 153210/552076 [00:04<00:12, 31981.81it/s] 28%|██▊       | 156707/552076 [00:04<00:12, 32744.70it/s] 29%|██▉       | 160421/552076 [00:04<00:11, 33196.59it/s] 30%|██▉       | 164625/552076 [00:05<00:10, 35431.90it/s] 30%|███       | 168353/552076 [00:05<00:10, 35965.49it/s] 31%|███       | 171995/552076 [00:05<00:10, 35974.31it/s] 32%|███▏      | 176084/552076 [00:05<00:10, 37319.82it/s] 33%|███▎      | 179851/552076 [00:05<00:10, 35433.88it/s] 33%|███▎      | 183650/552076 [00:05<00:10, 36163.25it/s] 34%|███▍      | 187301/552076 [00:05<00:10, 34932.06it/s] 35%|███▍      | 190828/552076 [00:05<00:10, 34523.39it/s] 35%|███▌      | 195203/552076 [00:05<00:09, 36854.61it/s] 36%|███▌      | 198950/552076 [00:06<00:11, 31838.73it/s] 37%|███▋      | 203181/552076 [00:06<00:10, 33967.70it/s] 38%|███▊      | 207412/552076 [00:06<00:09, 34753.17it/s] 38%|███▊      | 211000/552076 [00:06<00:10, 32883.34it/s] 39%|███▉      | 214713/552076 [00:06<00:10, 33714.08it/s] 40%|███▉      | 218160/552076 [00:06<00:09, 33396.08it/s] 40%|████      | 222319/552076 [00:06<00:09, 35131.73it/s] 41%|████      | 226061/552076 [00:06<00:09, 35787.97it/s] 42%|████▏     | 230399/552076 [00:06<00:08, 36236.94it/s] 43%|████▎     | 235238/552076 [00:07<00:08, 39189.33it/s] 44%|████▎     | 240521/552076 [00:07<00:07, 41674.18it/s] 44%|████▍     | 244797/552076 [00:07<00:07, 40000.65it/s] 45%|████▌     | 249615/552076 [00:07<00:07, 41408.06it/s] 46%|████▌     | 253832/552076 [00:07<00:07, 40667.17it/s] 47%|████▋     | 257955/552076 [00:07<00:07, 36858.26it/s] 47%|████▋     | 261826/552076 [00:07<00:07, 37394.89it/s] 48%|████▊     | 267134/552076 [00:07<00:06, 41032.35it/s] 50%|█████     | 277365/552076 [00:07<00:05, 50019.38it/s] 52%|█████▏    | 287966/552076 [00:07<00:04, 59437.03it/s] 54%|█████▍    | 297368/552076 [00:08<00:03, 66809.19it/s] 56%|█████▌    | 308003/552076 [00:08<00:03, 75195.09it/s] 57%|█████▋    | 316803/552076 [00:08<00:03, 73996.26it/s] 59%|█████▉    | 325103/552076 [00:08<00:03, 70632.88it/s] 60%|██████    | 332829/552076 [00:08<00:03, 67134.67it/s] 62%|██████▏   | 340043/552076 [00:08<00:03, 58668.74it/s] 63%|██████▎   | 349599/552076 [00:08<00:03, 65575.02it/s] 65%|██████▍   | 356798/552076 [00:08<00:02, 65349.66it/s] 66%|██████▌   | 365302/552076 [00:09<00:02, 70226.77it/s] 68%|██████▊   | 375337/552076 [00:09<00:02, 75774.01it/s] 70%|██████▉   | 384587/552076 [00:09<00:02, 80118.28it/s] 71%|███████   | 393275/552076 [00:09<00:01, 82032.23it/s] 73%|███████▎  | 402496/552076 [00:09<00:01, 84297.48it/s] 74%|███████▍  | 411126/552076 [00:09<00:01, 83019.64it/s] 76%|███████▌  | 419573/552076 [00:09<00:02, 54373.64it/s] 77%|███████▋  | 426389/552076 [00:09<00:02, 53051.59it/s] 78%|███████▊  | 432667/552076 [00:10<00:02, 51150.84it/s] 79%|███████▉  | 438478/552076 [00:10<00:02, 50033.27it/s] 81%|████████  | 447910/552076 [00:10<00:01, 58236.01it/s] 83%|████████▎ | 457780/552076 [00:10<00:01, 65149.68it/s] 84%|████████▍ | 465157/552076 [00:10<00:01, 63883.73it/s] 86%|████████▌ | 472361/552076 [00:10<00:01, 66128.67it/s] 87%|████████▋ | 481516/552076 [00:10<00:00, 71784.41it/s] 89%|████████▊ | 489241/552076 [00:10<00:00, 73339.74it/s] 91%|█████████ | 500824/552076 [00:10<00:00, 82408.13it/s] 92%|█████████▏| 509661/552076 [00:11<00:00, 82228.09it/s] 94%|█████████▍| 518513/552076 [00:11<00:00, 84019.21it/s] 96%|█████████▌| 527396/552076 [00:11<00:00, 85406.32it/s] 98%|█████████▊| 538800/552076 [00:11<00:00, 92362.81it/s] 99%|█████████▉| 548352/552076 [00:11<00:00, 89619.52it/s]100%|██████████| 552076/552076 [00:11<00:00, 47897.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8565/552076 [00:00<00:06, 85648.65it/s]  4%|▎         | 19365/552076 [00:00<00:05, 91317.42it/s]  5%|▌         | 28349/552076 [00:00<00:05, 90838.92it/s]  6%|▋         | 34569/552076 [00:00<00:06, 74149.54it/s]  8%|▊         | 44332/552076 [00:00<00:06, 79914.82it/s] 10%|█         | 55217/552076 [00:00<00:05, 86839.96it/s] 12%|█▏        | 65831/552076 [00:00<00:05, 91850.38it/s] 14%|█▎        | 74764/552076 [00:00<00:05, 87735.26it/s] 16%|█▌        | 85855/552076 [00:00<00:04, 93601.90it/s] 18%|█▊        | 97138/552076 [00:01<00:04, 98643.85it/s] 20%|█▉        | 108300/552076 [00:01<00:04, 102207.89it/s] 21%|██▏       | 118611/552076 [00:01<00:04, 90463.69it/s]  23%|██▎       | 127969/552076 [00:01<00:04, 87165.39it/s] 25%|██▍       | 137999/552076 [00:01<00:04, 89807.56it/s] 27%|██▋       | 147171/552076 [00:01<00:05, 80258.94it/s] 28%|██▊       | 157264/552076 [00:01<00:04, 85511.27it/s] 30%|███       | 166137/552076 [00:01<00:05, 76840.54it/s] 32%|███▏      | 174212/552076 [00:01<00:04, 76499.09it/s] 33%|███▎      | 182136/552076 [00:02<00:04, 76840.59it/s] 34%|███▍      | 190013/552076 [00:02<00:05, 72361.35it/s] 36%|███▌      | 197438/552076 [00:02<00:05, 69559.45it/s] 38%|███▊      | 207180/552076 [00:02<00:04, 75736.44it/s] 39%|███▉      | 215024/552076 [00:02<00:04, 75140.40it/s] 41%|████      | 225649/552076 [00:02<00:03, 82376.11it/s] 42%|████▏     | 234536/552076 [00:02<00:03, 84220.71it/s] 44%|████▍     | 245048/552076 [00:02<00:03, 89561.08it/s] 46%|████▌     | 254272/552076 [00:02<00:03, 84075.18it/s] 48%|████▊     | 262936/552076 [00:03<00:03, 79405.73it/s] 50%|████▉     | 273544/552076 [00:03<00:03, 85884.21it/s] 51%|█████     | 282502/552076 [00:03<00:03, 86958.02it/s] 53%|█████▎    | 291422/552076 [00:03<00:03, 85485.26it/s] 54%|█████▍    | 300133/552076 [00:03<00:02, 84510.83it/s] 56%|█████▋    | 310739/552076 [00:03<00:02, 88526.55it/s] 58%|█████▊    | 319724/552076 [00:03<00:02, 79422.27it/s] 59%|█████▉    | 327935/552076 [00:03<00:02, 75854.78it/s] 61%|██████    | 336637/552076 [00:03<00:02, 78092.00it/s] 63%|██████▎   | 348327/552076 [00:04<00:02, 86729.35it/s] 65%|██████▌   | 360467/552076 [00:04<00:02, 94856.12it/s] 67%|██████▋   | 372212/552076 [00:04<00:01, 100665.05it/s] 70%|██████▉   | 383873/552076 [00:04<00:01, 104970.04it/s] 72%|███████▏  | 396191/552076 [00:04<00:01, 109839.25it/s] 74%|███████▍  | 408554/552076 [00:04<00:01, 113640.63it/s] 76%|███████▌  | 420879/552076 [00:04<00:01, 116361.98it/s] 78%|███████▊  | 433146/552076 [00:04<00:01, 118184.41it/s] 81%|████████  | 445488/552076 [00:04<00:00, 119707.13it/s] 83%|████████▎ | 457862/552076 [00:04<00:00, 120887.55it/s] 85%|████████▌ | 470113/552076 [00:05<00:00, 121369.53it/s] 87%|████████▋ | 482460/552076 [00:05<00:00, 121991.21it/s] 90%|████████▉ | 494749/552076 [00:05<00:00, 122259.24it/s] 92%|█████████▏| 507081/552076 [00:05<00:00, 122573.75it/s] 94%|█████████▍| 519358/552076 [00:05<00:00, 122585.83it/s] 96%|█████████▋| 531662/552076 [00:05<00:00, 122720.10it/s] 99%|█████████▊| 543944/552076 [00:05<00:00, 122493.09it/s]100%|██████████| 552076/552076 [00:05<00:00, 96179.98it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2724/552076 [00:00<00:20, 27239.96it/s]  1%|          | 6610/552076 [00:00<00:18, 29924.31it/s]  2%|▏         | 10770/552076 [00:00<00:16, 32491.75it/s]  3%|▎         | 15000/552076 [00:00<00:15, 34919.61it/s]  4%|▎         | 19495/552076 [00:00<00:14, 37423.65it/s]  4%|▍         | 24066/552076 [00:00<00:13, 39574.94it/s]  5%|▌         | 28192/552076 [00:00<00:13, 40065.48it/s]  6%|▌         | 32432/552076 [00:00<00:12, 40737.84it/s]  7%|▋         | 37062/552076 [00:00<00:12, 42259.66it/s]  7%|▋         | 41242/552076 [00:01<00:12, 41327.06it/s]  8%|▊         | 45462/552076 [00:01<00:12, 41280.71it/s]  9%|▉         | 49571/552076 [00:01<00:13, 38565.59it/s] 10%|▉         | 53450/552076 [00:01<00:13, 36627.77it/s] 10%|█         | 57149/552076 [00:01<00:13, 35928.59it/s] 11%|█         | 60771/552076 [00:01<00:14, 34920.50it/s] 12%|█▏        | 64731/552076 [00:01<00:13, 36202.53it/s] 13%|█▎        | 69465/552076 [00:01<00:12, 38949.95it/s] 13%|█▎        | 74097/552076 [00:01<00:11, 40901.31it/s] 14%|█▍        | 78822/552076 [00:01<00:11, 42616.99it/s] 15%|█▌        | 83160/552076 [00:02<00:12, 38342.41it/s] 16%|█▌        | 87129/552076 [00:02<00:13, 34131.02it/s] 16%|█▋        | 90723/552076 [00:02<00:14, 30982.40it/s] 17%|█▋        | 94880/552076 [00:02<00:13, 33543.67it/s] 18%|█▊        | 98623/552076 [00:02<00:13, 34620.74it/s] 19%|█▊        | 102226/552076 [00:02<00:14, 31261.40it/s] 19%|█▉        | 105513/552076 [00:02<00:14, 30081.71it/s] 20%|█▉        | 109757/552076 [00:02<00:13, 32960.89it/s] 21%|██        | 113222/552076 [00:03<00:14, 29613.43it/s] 21%|██        | 116366/552076 [00:03<00:16, 27081.48it/s] 22%|██▏       | 119244/552076 [00:03<00:16, 25743.34it/s] 22%|██▏       | 121951/552076 [00:03<00:18, 23367.43it/s] 23%|██▎       | 124423/552076 [00:03<00:18, 22709.39it/s] 23%|██▎       | 126891/552076 [00:03<00:18, 23265.93it/s] 23%|██▎       | 129290/552076 [00:03<00:18, 23468.88it/s] 24%|██▍       | 131688/552076 [00:03<00:19, 21903.16it/s] 24%|██▍       | 133936/552076 [00:04<00:19, 21365.46it/s] 25%|██▍       | 136267/552076 [00:04<00:19, 21294.58it/s] 25%|██▌       | 138646/552076 [00:04<00:18, 21986.30it/s] 26%|██▌       | 140872/552076 [00:04<00:19, 21495.45it/s] 26%|██▌       | 143183/552076 [00:04<00:18, 21955.01it/s] 27%|██▋       | 147828/552076 [00:04<00:15, 26080.49it/s] 27%|██▋       | 150771/552076 [00:04<00:15, 25112.32it/s] 28%|██▊       | 153524/552076 [00:04<00:16, 24337.79it/s] 28%|██▊       | 156133/552076 [00:04<00:17, 23025.95it/s] 29%|██▊       | 158573/552076 [00:05<00:17, 22793.05it/s] 29%|██▉       | 160949/552076 [00:05<00:17, 21974.99it/s] 30%|██▉       | 163221/552076 [00:05<00:17, 22117.63it/s] 30%|██▉       | 165485/552076 [00:05<00:18, 21290.44it/s] 30%|███       | 167657/552076 [00:05<00:18, 21218.90it/s] 31%|███       | 169894/552076 [00:05<00:18, 21055.43it/s] 31%|███       | 172365/552076 [00:05<00:17, 22032.39it/s] 32%|███▏      | 174695/552076 [00:05<00:16, 22326.19it/s] 32%|███▏      | 176948/552076 [00:05<00:17, 21951.50it/s] 32%|███▏      | 179159/552076 [00:06<00:17, 21595.29it/s] 33%|███▎      | 181357/552076 [00:06<00:17, 21707.46it/s] 33%|███▎      | 183813/552076 [00:06<00:16, 21892.78it/s] 34%|███▍      | 186329/552076 [00:06<00:16, 22780.01it/s] 34%|███▍      | 188745/552076 [00:06<00:15, 23176.15it/s] 35%|███▍      | 193043/552076 [00:06<00:13, 26893.30it/s] 36%|███▌      | 196904/552076 [00:06<00:12, 29585.32it/s] 36%|███▌      | 200106/552076 [00:06<00:11, 29349.69it/s] 37%|███▋      | 203260/552076 [00:06<00:11, 29974.03it/s] 37%|███▋      | 206381/552076 [00:06<00:12, 27198.55it/s] 38%|███▊      | 209810/552076 [00:07<00:11, 28997.20it/s] 39%|███▊      | 213051/552076 [00:07<00:11, 29382.07it/s] 39%|███▉      | 216369/552076 [00:07<00:11, 30331.19it/s] 40%|███▉      | 219809/552076 [00:07<00:10, 31446.25it/s] 40%|████      | 223259/552076 [00:07<00:10, 32303.14it/s] 41%|████      | 226538/552076 [00:07<00:11, 27920.36it/s] 42%|████▏     | 229469/552076 [00:07<00:12, 26750.82it/s] 42%|████▏     | 232252/552076 [00:07<00:12, 25963.21it/s] 43%|████▎     | 234929/552076 [00:07<00:12, 25659.37it/s] 43%|████▎     | 238549/552076 [00:08<00:11, 27656.11it/s] 44%|████▍     | 241742/552076 [00:08<00:10, 28703.75it/s] 44%|████▍     | 245662/552076 [00:08<00:09, 31210.27it/s] 46%|████▌     | 251274/552076 [00:08<00:08, 36004.41it/s] 47%|████▋     | 256929/552076 [00:08<00:07, 39519.25it/s] 48%|████▊     | 262698/552076 [00:08<00:06, 43115.23it/s] 49%|████▊     | 268409/552076 [00:08<00:06, 46535.75it/s] 50%|████▉     | 273772/552076 [00:08<00:05, 48434.91it/s] 51%|█████     | 279543/552076 [00:08<00:05, 50888.32it/s] 52%|█████▏    | 285294/552076 [00:09<00:05, 51599.68it/s] 53%|█████▎    | 291057/552076 [00:09<00:04, 53270.61it/s] 54%|█████▎    | 296499/552076 [00:09<00:04, 53373.98it/s] 55%|█████▍    | 302091/552076 [00:09<00:04, 52298.48it/s] 56%|█████▌    | 307676/552076 [00:09<00:04, 52906.81it/s] 57%|█████▋    | 313372/552076 [00:09<00:04, 54060.31it/s] 58%|█████▊    | 318816/552076 [00:09<00:04, 52493.19it/s] 59%|█████▉    | 324446/552076 [00:09<00:04, 52487.19it/s] 60%|█████▉    | 330034/552076 [00:09<00:04, 53459.96it/s] 61%|██████    | 335402/552076 [00:10<00:04, 44977.49it/s] 62%|██████▏   | 340145/552076 [00:10<00:04, 45609.25it/s] 63%|██████▎   | 345994/552076 [00:10<00:04, 48834.87it/s] 64%|██████▎   | 351542/552076 [00:10<00:03, 50654.92it/s] 65%|██████▍   | 356755/552076 [00:10<00:03, 50634.69it/s] 66%|██████▌   | 362377/552076 [00:10<00:03, 52189.22it/s] 67%|██████▋   | 368153/552076 [00:10<00:03, 52980.30it/s] 68%|██████▊   | 373943/552076 [00:10<00:03, 54365.34it/s] 69%|██████▊   | 379524/552076 [00:10<00:03, 54055.15it/s] 70%|██████▉   | 385660/552076 [00:10<00:02, 56056.21it/s] 71%|███████   | 391311/552076 [00:11<00:02, 54200.47it/s] 72%|███████▏  | 397039/552076 [00:11<00:02, 55088.48it/s] 73%|███████▎  | 402894/552076 [00:11<00:02, 56082.62it/s] 74%|███████▍  | 408531/552076 [00:11<00:02, 55159.87it/s] 75%|███████▌  | 414071/552076 [00:11<00:02, 49155.39it/s] 76%|███████▌  | 419125/552076 [00:11<00:02, 49094.80it/s] 77%|███████▋  | 424771/552076 [00:11<00:02, 50540.25it/s] 78%|███████▊  | 429904/552076 [00:11<00:02, 48287.47it/s] 79%|███████▉  | 434809/552076 [00:11<00:02, 44945.94it/s] 80%|███████▉  | 439404/552076 [00:12<00:02, 42298.54it/s] 80%|████████  | 443736/552076 [00:12<00:02, 42513.74it/s] 81%|████████▏ | 448696/552076 [00:12<00:02, 42961.33it/s] 82%|████████▏ | 453044/552076 [00:12<00:02, 41883.45it/s] 83%|████████▎ | 457275/552076 [00:12<00:02, 40619.79it/s] 84%|████████▍ | 462407/552076 [00:12<00:02, 42933.69it/s] 85%|████████▍ | 466763/552076 [00:12<00:02, 41898.58it/s] 85%|████████▌ | 471002/552076 [00:12<00:01, 40537.83it/s] 86%|████████▌ | 475100/552076 [00:12<00:01, 39969.75it/s] 87%|████████▋ | 480346/552076 [00:13<00:01, 42689.86it/s] 88%|████████▊ | 486187/552076 [00:13<00:01, 46439.22it/s] 89%|████████▉ | 490980/552076 [00:13<00:01, 43323.80it/s] 90%|████████▉ | 496479/552076 [00:13<00:01, 46096.26it/s] 91%|█████████ | 501240/552076 [00:13<00:01, 43853.35it/s] 92%|█████████▏| 507186/552076 [00:13<00:00, 46977.58it/s] 93%|█████████▎| 512255/552076 [00:13<00:00, 48032.03it/s] 94%|█████████▎| 517171/552076 [00:13<00:00, 47830.28it/s] 95%|█████████▍| 522033/552076 [00:13<00:00, 46826.31it/s] 96%|█████████▌| 527945/552076 [00:14<00:00, 49394.81it/s] 97%|█████████▋| 532965/552076 [00:14<00:00, 49580.92it/s] 97%|█████████▋| 538154/552076 [00:14<00:00, 49460.99it/s] 99%|█████████▊| 543953/552076 [00:14<00:00, 51743.19it/s] 99%|█████████▉| 549183/552076 [00:14<00:00, 50281.41it/s]100%|██████████| 552076/552076 [00:14<00:00, 38098.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9725/552076 [00:00<00:05, 96585.74it/s]  3%|▎         | 15709/552076 [00:00<00:06, 77910.44it/s]  4%|▍         | 21177/552076 [00:00<00:07, 69101.51it/s]  5%|▍         | 26731/552076 [00:00<00:08, 64384.77it/s]  6%|▌         | 32380/552076 [00:00<00:08, 61793.11it/s]  7%|▋         | 37308/552076 [00:00<00:09, 56980.27it/s]  8%|▊         | 42962/552076 [00:00<00:08, 56847.28it/s]  9%|▊         | 48273/552076 [00:00<00:09, 55643.08it/s] 10%|▉         | 53809/552076 [00:00<00:08, 55557.43it/s] 11%|█         | 59465/552076 [00:01<00:08, 55852.85it/s] 12%|█▏        | 64859/552076 [00:01<00:09, 49489.62it/s] 13%|█▎        | 69808/552076 [00:01<00:11, 43779.56it/s] 14%|█▎        | 75076/552076 [00:01<00:10, 45891.11it/s] 15%|█▍        | 80841/552076 [00:01<00:09, 48881.45it/s] 16%|█▌        | 85924/552076 [00:01<00:09, 49227.51it/s] 17%|█▋        | 91515/552076 [00:01<00:09, 51057.40it/s] 18%|█▊        | 96703/552076 [00:01<00:09, 49963.95it/s] 19%|█▊        | 102327/552076 [00:01<00:08, 51694.03it/s] 19%|█▉        | 107645/552076 [00:02<00:08, 52022.78it/s] 21%|██        | 113301/552076 [00:02<00:08, 53304.75it/s] 22%|██▏       | 118890/552076 [00:02<00:08, 52971.70it/s] 22%|██▏       | 124214/552076 [00:02<00:08, 52688.41it/s] 23%|██▎       | 129569/552076 [00:02<00:08, 52236.51it/s] 24%|██▍       | 135043/552076 [00:02<00:07, 52962.86it/s] 26%|██▌       | 144668/552076 [00:02<00:06, 61222.74it/s] 28%|██▊       | 154191/552076 [00:02<00:05, 68568.23it/s] 30%|██▉       | 163801/552076 [00:02<00:05, 75014.88it/s] 31%|███       | 171920/552076 [00:02<00:05, 69322.72it/s] 33%|███▎      | 182136/552076 [00:03<00:04, 76720.14it/s] 34%|███▍      | 190416/552076 [00:03<00:05, 70235.21it/s] 36%|███▌      | 197972/552076 [00:03<00:05, 67551.47it/s] 37%|███▋      | 206253/552076 [00:03<00:04, 71502.13it/s] 39%|███▉      | 216676/552076 [00:03<00:04, 78937.26it/s] 41%|████      | 226087/552076 [00:03<00:03, 82947.83it/s] 43%|████▎     | 236340/552076 [00:03<00:03, 87987.26it/s] 44%|████▍     | 245493/552076 [00:03<00:03, 82724.82it/s] 46%|████▌     | 254078/552076 [00:03<00:03, 75377.12it/s] 47%|████▋     | 261961/552076 [00:04<00:04, 70047.47it/s] 49%|████▉     | 269283/552076 [00:04<00:04, 64729.24it/s] 50%|█████     | 276058/552076 [00:04<00:04, 62450.99it/s] 51%|█████     | 282532/552076 [00:04<00:04, 59784.58it/s] 52%|█████▏    | 288695/552076 [00:04<00:04, 58436.50it/s] 53%|█████▎    | 294675/552076 [00:04<00:04, 57615.98it/s] 54%|█████▍    | 300535/552076 [00:04<00:04, 56485.46it/s] 55%|█████▌    | 306257/552076 [00:04<00:04, 55659.56it/s] 56%|█████▋    | 311877/552076 [00:05<00:04, 54119.26it/s] 57%|█████▋    | 317337/552076 [00:05<00:04, 54046.73it/s] 59%|█████▊    | 323337/552076 [00:05<00:04, 55704.03it/s] 60%|█████▉    | 329238/552076 [00:05<00:04, 54863.78it/s] 61%|██████    | 335158/552076 [00:05<00:03, 56095.48it/s] 62%|██████▏   | 341106/552076 [00:05<00:03, 57069.31it/s] 63%|██████▎   | 346836/552076 [00:05<00:03, 55318.31it/s] 64%|██████▍   | 352396/552076 [00:05<00:03, 53189.81it/s] 65%|██████▍   | 357834/552076 [00:05<00:03, 53541.15it/s] 66%|██████▌   | 363215/552076 [00:05<00:03, 52468.88it/s] 67%|██████▋   | 368652/552076 [00:06<00:03, 52413.84it/s] 68%|██████▊   | 373991/552076 [00:06<00:03, 52346.54it/s] 69%|██████▊   | 379243/552076 [00:06<00:03, 52397.84it/s] 70%|██████▉   | 384703/552076 [00:06<00:03, 53038.15it/s] 71%|███████   | 390015/552076 [00:06<00:03, 47734.92it/s] 72%|███████▏  | 394895/552076 [00:06<00:03, 41365.26it/s] 72%|███████▏  | 399257/552076 [00:06<00:03, 41497.83it/s] 73%|███████▎  | 403565/552076 [00:06<00:03, 39296.18it/s] 74%|███████▍  | 407630/552076 [00:07<00:03, 38586.66it/s] 75%|███████▍  | 411586/552076 [00:07<00:03, 37149.49it/s] 75%|███████▌  | 415428/552076 [00:07<00:03, 37521.35it/s] 76%|███████▌  | 419237/552076 [00:07<00:03, 36255.67it/s] 77%|███████▋  | 422913/552076 [00:07<00:03, 36403.38it/s] 77%|███████▋  | 426601/552076 [00:07<00:03, 35843.24it/s] 78%|███████▊  | 430232/552076 [00:07<00:03, 35981.45it/s] 79%|███████▊  | 433849/552076 [00:07<00:03, 35702.33it/s] 79%|███████▉  | 437548/552076 [00:07<00:03, 36078.37it/s] 80%|███████▉  | 441167/552076 [00:07<00:03, 35181.05it/s] 81%|████████  | 444698/552076 [00:08<00:03, 34811.68it/s] 81%|████████  | 448408/552076 [00:08<00:02, 35467.06it/s] 82%|████████▏ | 451965/552076 [00:08<00:02, 34726.00it/s] 82%|████████▏ | 455448/552076 [00:08<00:02, 34630.67it/s] 83%|████████▎ | 459156/552076 [00:08<00:02, 35330.02it/s] 84%|████████▍ | 462698/552076 [00:08<00:02, 31338.17it/s] 84%|████████▍ | 465922/552076 [00:08<00:02, 31103.08it/s] 85%|████████▌ | 469636/552076 [00:08<00:02, 32696.42it/s] 86%|████████▌ | 472972/552076 [00:08<00:02, 31994.28it/s] 86%|████████▋ | 476612/552076 [00:09<00:02, 33199.05it/s] 87%|████████▋ | 479979/552076 [00:09<00:02, 32823.81it/s] 88%|████████▊ | 483656/552076 [00:09<00:02, 33914.55it/s] 88%|████████▊ | 487080/552076 [00:09<00:01, 33252.88it/s] 89%|████████▉ | 490501/552076 [00:09<00:01, 33534.00it/s] 89%|████████▉ | 494055/552076 [00:09<00:01, 34110.17it/s] 90%|█████████ | 497633/552076 [00:09<00:01, 34594.48it/s] 91%|█████████ | 501105/552076 [00:09<00:01, 33807.12it/s] 91%|█████████▏| 504664/552076 [00:09<00:01, 34322.26it/s] 92%|█████████▏| 508107/552076 [00:09<00:01, 33151.86it/s] 93%|█████████▎| 511439/552076 [00:10<00:01, 32161.95it/s] 93%|█████████▎| 514945/552076 [00:10<00:01, 32422.90it/s] 94%|█████████▍| 518642/552076 [00:10<00:00, 33664.70it/s] 95%|█████████▍| 522048/552076 [00:10<00:00, 32827.54it/s] 95%|█████████▌| 525351/552076 [00:10<00:00, 31379.57it/s] 96%|█████████▌| 530670/552076 [00:10<00:00, 35781.06it/s] 98%|█████████▊| 539163/552076 [00:10<00:00, 42635.25it/s] 99%|█████████▊| 544858/552076 [00:10<00:00, 46112.38it/s]100%|█████████▉| 550468/552076 [00:10<00:00, 48713.60it/s]100%|██████████| 552076/552076 [00:10<00:00, 50392.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3694/552076 [00:00<00:14, 36683.60it/s]  1%|▏         | 7339/552076 [00:00<00:14, 36612.38it/s]  2%|▏         | 11128/552076 [00:00<00:14, 36985.35it/s]  3%|▎         | 14528/552076 [00:00<00:14, 36034.97it/s]  3%|▎         | 18247/552076 [00:00<00:14, 36371.60it/s]  4%|▍         | 21985/552076 [00:00<00:14, 36667.93it/s]  5%|▍         | 25521/552076 [00:00<00:14, 35343.65it/s]  5%|▌         | 28781/552076 [00:00<00:15, 33196.41it/s]  6%|▌         | 32111/552076 [00:00<00:15, 33226.48it/s]  7%|▋         | 35914/552076 [00:01<00:14, 34535.05it/s]  7%|▋         | 39400/552076 [00:01<00:14, 34314.61it/s]  8%|▊         | 43079/552076 [00:01<00:14, 35021.30it/s]  8%|▊         | 46603/552076 [00:01<00:14, 34707.26it/s]  9%|▉         | 50288/552076 [00:01<00:14, 35321.89it/s] 10%|▉         | 53919/552076 [00:01<00:14, 35166.26it/s] 10%|█         | 57632/552076 [00:01<00:13, 35733.08it/s] 11%|█         | 61254/552076 [00:01<00:13, 35495.53it/s] 12%|█▏        | 65078/552076 [00:01<00:13, 36275.38it/s] 12%|█▏        | 68916/552076 [00:01<00:13, 36406.24it/s] 13%|█▎        | 72616/552076 [00:02<00:13, 36580.81it/s] 14%|█▍        | 76276/552076 [00:02<00:13, 35951.51it/s] 14%|█▍        | 79960/552076 [00:02<00:13, 35575.58it/s] 15%|█▌        | 83526/552076 [00:02<00:13, 35599.73it/s] 16%|█▌        | 87278/552076 [00:02<00:12, 36154.64it/s] 16%|█▋        | 90978/552076 [00:02<00:12, 36403.74it/s] 17%|█▋        | 94622/552076 [00:02<00:12, 36294.92it/s] 18%|█▊        | 98254/552076 [00:02<00:12, 35818.25it/s] 18%|█▊        | 101950/552076 [00:02<00:12, 36152.20it/s] 19%|█▉        | 105569/552076 [00:02<00:12, 35572.81it/s] 20%|█▉        | 109138/552076 [00:03<00:12, 35239.29it/s] 20%|██        | 112857/552076 [00:03<00:12, 35801.48it/s] 21%|██        | 116498/552076 [00:03<00:12, 35357.34it/s] 22%|██▏       | 120115/552076 [00:03<00:12, 35596.31it/s] 22%|██▏       | 123679/552076 [00:03<00:12, 35567.02it/s] 23%|██▎       | 127405/552076 [00:03<00:11, 36057.30it/s] 24%|██▍       | 131970/552076 [00:03<00:11, 37903.55it/s] 25%|██▍       | 135788/552076 [00:03<00:12, 34316.96it/s] 25%|██▌       | 139304/552076 [00:03<00:12, 34002.87it/s] 26%|██▌       | 142764/552076 [00:04<00:12, 32385.13it/s] 26%|██▋       | 146061/552076 [00:04<00:12, 31589.25it/s] 28%|██▊       | 152204/552076 [00:04<00:10, 36977.63it/s] 29%|██▉       | 159587/552076 [00:04<00:09, 43486.84it/s] 30%|██▉       | 164661/552076 [00:04<00:09, 40525.20it/s] 31%|███       | 169262/552076 [00:04<00:09, 38961.76it/s] 31%|███▏      | 173555/552076 [00:04<00:09, 37920.80it/s] 32%|███▏      | 177631/552076 [00:04<00:10, 37350.62it/s] 33%|███▎      | 181567/552076 [00:04<00:09, 37123.21it/s] 34%|███▎      | 185421/552076 [00:05<00:10, 35942.70it/s] 34%|███▍      | 189122/552076 [00:05<00:10, 36155.98it/s] 35%|███▍      | 192813/552076 [00:05<00:10, 35419.95it/s] 36%|███▌      | 196411/552076 [00:05<00:10, 35299.81it/s] 36%|███▋      | 200140/552076 [00:05<00:09, 35873.42it/s] 37%|███▋      | 203769/552076 [00:05<00:09, 35351.72it/s] 38%|███▊      | 207404/552076 [00:05<00:09, 35388.53it/s] 38%|███▊      | 211122/552076 [00:05<00:09, 35907.19it/s] 39%|███▉      | 215106/552076 [00:05<00:09, 37001.46it/s] 40%|███▉      | 218824/552076 [00:06<00:09, 35747.79it/s] 40%|████      | 222498/552076 [00:06<00:09, 36038.35it/s] 41%|████      | 226217/552076 [00:06<00:08, 36375.71it/s] 42%|████▏     | 229867/552076 [00:06<00:09, 35113.91it/s] 42%|████▏     | 233656/552076 [00:06<00:08, 35902.66it/s] 43%|████▎     | 237421/552076 [00:06<00:08, 36408.14it/s] 44%|████▎     | 241076/552076 [00:06<00:08, 35383.79it/s] 44%|████▍     | 244900/552076 [00:06<00:08, 36194.22it/s] 45%|████▌     | 248705/552076 [00:06<00:08, 36730.64it/s] 46%|████▌     | 252391/552076 [00:06<00:08, 35755.83it/s] 46%|████▋     | 255986/552076 [00:07<00:08, 35813.82it/s] 47%|████▋     | 259794/552076 [00:07<00:08, 36464.28it/s] 48%|████▊     | 264688/552076 [00:07<00:07, 39483.52it/s] 49%|████▊     | 268716/552076 [00:07<00:07, 39018.87it/s] 49%|████▉     | 272675/552076 [00:07<00:07, 38043.67it/s] 50%|█████     | 276525/552076 [00:07<00:07, 37615.28it/s] 51%|█████     | 280320/552076 [00:07<00:07, 36960.38it/s] 51%|█████▏    | 284061/552076 [00:07<00:07, 37093.22it/s] 52%|█████▏    | 287789/552076 [00:07<00:07, 36748.95it/s] 53%|█████▎    | 291478/552076 [00:07<00:07, 35728.77it/s] 53%|█████▎    | 295215/552076 [00:08<00:07, 35827.37it/s] 54%|█████▍    | 299089/552076 [00:08<00:06, 36653.40it/s] 55%|█████▍    | 302767/552076 [00:08<00:06, 36367.45it/s] 56%|█████▌    | 306551/552076 [00:08<00:06, 36795.67it/s] 56%|█████▌    | 310348/552076 [00:08<00:06, 37139.76it/s] 57%|█████▋    | 314069/552076 [00:08<00:06, 36055.80it/s] 58%|█████▊    | 317874/552076 [00:08<00:06, 36630.94it/s] 58%|█████▊    | 321673/552076 [00:08<00:06, 37027.41it/s] 59%|█████▉    | 325384/552076 [00:08<00:06, 35871.51it/s] 60%|█████▉    | 329060/552076 [00:09<00:06, 36132.97it/s] 60%|██████    | 332858/552076 [00:09<00:05, 36667.62it/s] 61%|██████    | 336617/552076 [00:09<00:06, 35791.75it/s] 62%|██████▏   | 340265/552076 [00:09<00:05, 35994.71it/s] 62%|██████▏   | 343997/552076 [00:09<00:05, 36381.81it/s] 63%|██████▎   | 347700/552076 [00:09<00:05, 36572.72it/s] 64%|██████▎   | 351363/552076 [00:09<00:05, 35365.40it/s] 64%|██████▍   | 354998/552076 [00:09<00:05, 35654.99it/s] 65%|██████▍   | 358686/552076 [00:09<00:05, 36013.80it/s] 66%|██████▌   | 362295/552076 [00:09<00:05, 35148.37it/s] 66%|██████▋   | 365820/552076 [00:10<00:05, 33805.83it/s] 67%|██████▋   | 369394/552076 [00:10<00:05, 34362.68it/s] 68%|██████▊   | 372928/552076 [00:10<00:05, 33881.66it/s] 68%|██████▊   | 376498/552076 [00:10<00:05, 34244.89it/s] 69%|██████▉   | 380140/552076 [00:10<00:04, 34869.58it/s] 70%|██████▉   | 383800/552076 [00:10<00:04, 35370.95it/s] 70%|███████   | 387346/552076 [00:10<00:04, 34596.83it/s] 71%|███████   | 390859/552076 [00:10<00:04, 34722.33it/s] 71%|███████▏  | 394482/552076 [00:10<00:04, 35160.86it/s] 72%|███████▏  | 398109/552076 [00:10<00:04, 35485.80it/s] 73%|███████▎  | 401663/552076 [00:11<00:04, 34613.30it/s] 73%|███████▎  | 405133/552076 [00:11<00:04, 34527.40it/s] 74%|███████▍  | 408605/552076 [00:11<00:04, 34519.40it/s] 75%|███████▍  | 412155/552076 [00:11<00:04, 34637.93it/s] 75%|███████▌  | 415740/552076 [00:11<00:03, 34991.62it/s] 76%|███████▌  | 419243/552076 [00:11<00:03, 34684.49it/s] 77%|███████▋  | 422715/552076 [00:11<00:03, 33052.74it/s] 77%|███████▋  | 426567/552076 [00:11<00:03, 34407.70it/s] 78%|███████▊  | 430035/552076 [00:11<00:03, 34287.71it/s] 79%|███████▊  | 433601/552076 [00:12<00:03, 34687.68it/s] 79%|███████▉  | 437085/552076 [00:12<00:03, 33704.12it/s] 80%|███████▉  | 440472/552076 [00:12<00:03, 33265.17it/s] 80%|████████  | 443812/552076 [00:12<00:03, 32407.29it/s] 81%|████████  | 447067/552076 [00:12<00:03, 30728.63it/s] 82%|████████▏ | 450713/552076 [00:12<00:03, 31110.53it/s] 82%|████████▏ | 453845/552076 [00:12<00:03, 29448.15it/s] 83%|████████▎ | 457888/552076 [00:12<00:02, 32059.72it/s] 84%|████████▎ | 462297/552076 [00:12<00:02, 34917.76it/s] 85%|████████▍ | 466749/552076 [00:12<00:02, 36518.91it/s] 85%|████████▌ | 471881/552076 [00:13<00:02, 39169.40it/s] 86%|████████▌ | 475934/552076 [00:13<00:02, 37555.51it/s] 87%|████████▋ | 479841/552076 [00:13<00:01, 37148.18it/s] 88%|████████▊ | 484063/552076 [00:13<00:01, 37120.22it/s] 88%|████████▊ | 487830/552076 [00:13<00:01, 37027.38it/s] 89%|████████▉ | 491621/552076 [00:13<00:01, 36948.01it/s] 90%|████████▉ | 496357/552076 [00:13<00:01, 39556.46it/s] 91%|█████████ | 501644/552076 [00:13<00:01, 42028.07it/s] 92%|█████████▏| 506227/552076 [00:13<00:01, 43099.72it/s] 94%|█████████▎| 517249/552076 [00:14<00:00, 52733.12it/s] 96%|█████████▌| 528784/552076 [00:14<00:00, 62991.02it/s] 98%|█████████▊| 540863/552076 [00:14<00:00, 73548.04it/s]100%|█████████▉| 550997/552076 [00:14<00:00, 76976.22it/s]100%|██████████| 552076/552076 [00:14<00:00, 38373.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6620/552076 [00:00<00:08, 66199.59it/s]  2%|▏         | 12755/552076 [00:00<00:08, 64664.24it/s]  3%|▎         | 19175/552076 [00:00<00:08, 64523.31it/s]  5%|▍         | 25905/552076 [00:00<00:08, 65331.11it/s]  6%|▌         | 32831/552076 [00:00<00:07, 66461.27it/s]  7%|▋         | 39097/552076 [00:00<00:07, 65270.77it/s]  8%|▊         | 45728/552076 [00:00<00:07, 65576.43it/s] 10%|▉         | 52708/552076 [00:00<00:07, 66788.49it/s] 11%|█         | 59775/552076 [00:00<00:07, 67906.60it/s] 12%|█▏        | 66906/552076 [00:01<00:07, 68891.85it/s] 13%|█▎        | 73621/552076 [00:01<00:07, 66176.82it/s] 15%|█▍        | 80140/552076 [00:01<00:07, 64755.33it/s] 16%|█▌        | 86553/552076 [00:01<00:07, 61604.84it/s] 17%|█▋        | 92702/552076 [00:01<00:08, 54204.51it/s] 18%|█▊        | 100405/552076 [00:01<00:07, 59490.95it/s] 19%|█▉        | 107335/552076 [00:01<00:07, 62127.23it/s] 21%|██        | 114155/552076 [00:01<00:06, 63829.63it/s] 22%|██▏       | 120700/552076 [00:01<00:06, 63295.09it/s] 23%|██▎       | 128131/552076 [00:01<00:06, 66237.79it/s] 24%|██▍       | 134871/552076 [00:02<00:06, 66340.09it/s] 26%|██▌       | 141587/552076 [00:02<00:06, 65751.84it/s] 27%|██▋       | 148221/552076 [00:02<00:06, 65282.25it/s] 28%|██▊       | 154791/552076 [00:02<00:06, 65087.29it/s] 29%|██▉       | 161545/552076 [00:02<00:05, 65801.74it/s] 30%|███       | 168332/552076 [00:02<00:05, 65621.48it/s] 32%|███▏      | 174910/552076 [00:02<00:05, 64388.53it/s] 33%|███▎      | 181462/552076 [00:02<00:05, 64720.43it/s] 34%|███▍      | 187949/552076 [00:02<00:05, 64762.66it/s] 35%|███▌      | 195060/552076 [00:03<00:05, 66543.20it/s] 37%|███▋      | 201733/552076 [00:03<00:05, 66484.53it/s] 38%|███▊      | 208408/552076 [00:03<00:05, 66560.69it/s] 39%|███▉      | 215073/552076 [00:03<00:05, 63229.53it/s] 41%|████      | 223972/552076 [00:03<00:04, 68766.61it/s] 42%|████▏     | 231020/552076 [00:03<00:04, 67352.75it/s] 43%|████▎     | 237882/552076 [00:03<00:04, 63736.60it/s] 44%|████▍     | 244385/552076 [00:03<00:04, 63034.91it/s] 45%|████▌     | 250874/552076 [00:03<00:04, 61551.39it/s] 47%|████▋     | 257102/552076 [00:04<00:05, 54161.90it/s] 48%|████▊     | 262731/552076 [00:04<00:06, 45602.16it/s] 48%|████▊     | 267671/552076 [00:04<00:07, 39889.05it/s] 49%|████▉     | 272055/552076 [00:04<00:07, 37980.82it/s] 50%|█████     | 276149/552076 [00:04<00:07, 36332.63it/s] 51%|█████     | 280005/552076 [00:04<00:07, 35231.02it/s] 51%|█████▏    | 283691/552076 [00:04<00:07, 34664.41it/s] 52%|█████▏    | 287274/552076 [00:04<00:07, 34124.38it/s] 53%|█████▎    | 290770/552076 [00:05<00:07, 33646.56it/s] 53%|█████▎    | 294333/552076 [00:05<00:07, 33614.47it/s] 54%|█████▍    | 297958/552076 [00:05<00:07, 34363.86it/s] 55%|█████▍    | 301428/552076 [00:05<00:07, 33548.03it/s] 55%|█████▌    | 304811/552076 [00:05<00:07, 33057.48it/s] 56%|█████▌    | 308211/552076 [00:05<00:07, 32904.17it/s] 56%|█████▋    | 311646/552076 [00:05<00:07, 33324.24it/s] 57%|█████▋    | 314991/552076 [00:05<00:07, 31609.44it/s] 58%|█████▊    | 318346/552076 [00:05<00:07, 31173.45it/s] 58%|█████▊    | 321638/552076 [00:06<00:07, 31676.56it/s] 59%|█████▉    | 325104/552076 [00:06<00:06, 32515.44it/s] 60%|█████▉    | 328504/552076 [00:06<00:06, 32945.65it/s] 60%|██████    | 331812/552076 [00:06<00:06, 31969.37it/s] 61%|██████    | 335260/552076 [00:06<00:06, 32682.37it/s] 61%|██████▏   | 338666/552076 [00:06<00:06, 33083.32it/s] 62%|██████▏   | 341996/552076 [00:06<00:06, 32241.25it/s] 63%|██████▎   | 345468/552076 [00:06<00:06, 32945.12it/s] 64%|██████▎   | 350714/552076 [00:06<00:05, 37082.87it/s] 64%|██████▍   | 354603/552076 [00:06<00:05, 35274.42it/s] 65%|██████▍   | 358276/552076 [00:07<00:05, 34860.49it/s] 66%|██████▌   | 361865/552076 [00:07<00:05, 33510.54it/s] 66%|██████▌   | 365299/552076 [00:07<00:05, 33047.26it/s] 67%|██████▋   | 368664/552076 [00:07<00:05, 32600.85it/s] 67%|██████▋   | 371988/552076 [00:07<00:05, 32789.91it/s] 68%|██████▊   | 375298/552076 [00:07<00:05, 31929.35it/s] 69%|██████▊   | 378518/552076 [00:07<00:05, 31913.41it/s] 69%|██████▉   | 381827/552076 [00:07<00:05, 31728.18it/s] 70%|██████▉   | 385013/552076 [00:07<00:05, 31756.30it/s] 70%|███████   | 388249/552076 [00:07<00:05, 31934.07it/s] 71%|███████   | 391513/552076 [00:08<00:05, 31736.77it/s] 72%|███████▏  | 394842/552076 [00:08<00:04, 32186.25it/s] 72%|███████▏  | 398066/552076 [00:08<00:04, 31528.21it/s] 73%|███████▎  | 401459/552076 [00:08<00:04, 31843.04it/s] 73%|███████▎  | 404801/552076 [00:08<00:04, 32300.15it/s] 74%|███████▍  | 408739/552076 [00:08<00:04, 33688.26it/s] 75%|███████▍  | 412745/552076 [00:08<00:03, 35375.25it/s] 75%|███████▌  | 416319/552076 [00:08<00:03, 34598.90it/s] 76%|███████▌  | 419808/552076 [00:08<00:03, 34247.24it/s] 77%|███████▋  | 423254/552076 [00:09<00:04, 27742.89it/s] 77%|███████▋  | 426243/552076 [00:09<00:04, 25362.61it/s] 78%|███████▊  | 428970/552076 [00:09<00:04, 25141.95it/s] 78%|███████▊  | 432757/552076 [00:09<00:04, 27783.78it/s] 79%|███████▉  | 437061/552076 [00:09<00:03, 30764.92it/s] 80%|████████  | 442231/552076 [00:09<00:03, 34826.31it/s] 81%|████████  | 447647/552076 [00:09<00:02, 39003.15it/s] 82%|████████▏ | 452767/552076 [00:09<00:02, 41821.72it/s] 83%|████████▎ | 458007/552076 [00:09<00:02, 44517.56it/s] 84%|████████▍ | 463090/552076 [00:10<00:01, 46239.79it/s] 85%|████████▍ | 468132/552076 [00:10<00:01, 47418.63it/s] 86%|████████▌ | 473431/552076 [00:10<00:01, 48962.81it/s] 87%|████████▋ | 478798/552076 [00:10<00:01, 50284.86it/s] 88%|████████▊ | 483922/552076 [00:10<00:01, 49472.77it/s] 89%|████████▊ | 488939/552076 [00:10<00:01, 49212.04it/s] 90%|████████▉ | 494288/552076 [00:10<00:01, 50421.76it/s] 90%|█████████ | 499372/552076 [00:10<00:01, 47095.90it/s] 91%|█████████▏| 504156/552076 [00:10<00:01, 41311.53it/s] 92%|█████████▏| 508468/552076 [00:11<00:01, 39136.88it/s] 93%|█████████▎| 512532/552076 [00:11<00:01, 37442.44it/s] 94%|█████████▎| 516397/552076 [00:11<00:00, 36022.72it/s] 94%|█████████▍| 520100/552076 [00:11<00:00, 36318.56it/s] 95%|█████████▍| 523800/552076 [00:11<00:00, 35684.11it/s] 96%|█████████▌| 527419/552076 [00:11<00:00, 34395.79it/s] 96%|█████████▌| 530904/552076 [00:11<00:00, 33712.60it/s] 97%|█████████▋| 534310/552076 [00:11<00:00, 33597.70it/s] 97%|█████████▋| 537799/552076 [00:11<00:00, 33974.57it/s] 98%|█████████▊| 541243/552076 [00:12<00:00, 34111.41it/s] 99%|█████████▊| 544688/552076 [00:12<00:00, 34211.76it/s] 99%|█████████▉| 548119/552076 [00:12<00:00, 32983.24it/s]100%|█████████▉| 551528/552076 [00:12<00:00, 33306.45it/s]100%|██████████| 552076/552076 [00:12<00:00, 44549.37it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 1946/552076 [00:00<00:29, 18928.93it/s]  1%|          | 4247/552076 [00:00<00:27, 19992.56it/s]  1%|▏         | 8271/552076 [00:00<00:23, 23546.31it/s]  2%|▏         | 10741/552076 [00:00<00:22, 23880.72it/s]  2%|▏         | 13664/552076 [00:00<00:22, 23926.63it/s]  3%|▎         | 17474/552076 [00:00<00:20, 26345.18it/s]  4%|▍         | 21302/552076 [00:00<00:18, 28656.37it/s]  5%|▍         | 25267/552076 [00:00<00:17, 30974.85it/s]  5%|▌         | 28882/552076 [00:00<00:16, 31470.10it/s]  6%|▌         | 32079/552076 [00:01<00:18, 27448.31it/s]  6%|▋         | 34951/552076 [00:01<00:24, 21475.02it/s]  7%|▋         | 37656/552076 [00:01<00:22, 22457.98it/s]  7%|▋         | 40722/552076 [00:01<00:21, 24170.46it/s]  8%|▊         | 43770/552076 [00:01<00:19, 25453.88it/s]  9%|▊         | 47918/552076 [00:01<00:18, 27291.49it/s] 10%|▉         | 52993/552076 [00:01<00:16, 30541.49it/s] 10%|█         | 57480/552076 [00:01<00:14, 33178.07it/s] 11%|█▏        | 62927/552076 [00:02<00:13, 37585.48it/s] 12%|█▏        | 68165/552076 [00:02<00:11, 41064.31it/s] 13%|█▎        | 73150/552076 [00:02<00:11, 43355.65it/s] 14%|█▍        | 78674/552076 [00:02<00:10, 45768.67it/s] 15%|█▌        | 84598/552076 [00:02<00:09, 47819.03it/s] 16%|█▋        | 89942/552076 [00:02<00:09, 48304.32it/s] 17%|█▋        | 95716/552076 [00:02<00:08, 50793.38it/s] 18%|█▊        | 100921/552076 [00:02<00:09, 47715.83it/s] 19%|█▉        | 107361/552076 [00:02<00:08, 50863.31it/s] 20%|██        | 112593/552076 [00:03<00:08, 50038.99it/s] 21%|██▏       | 117702/552076 [00:03<00:08, 48657.63it/s] 22%|██▏       | 122733/552076 [00:03<00:08, 49140.88it/s] 23%|██▎       | 127706/552076 [00:03<00:08, 48558.79it/s] 24%|██▍       | 132605/552076 [00:03<00:08, 47346.50it/s] 25%|██▍       | 137376/552076 [00:03<00:08, 47414.23it/s] 26%|██▌       | 143107/552076 [00:03<00:08, 50003.51it/s] 27%|██▋       | 148220/552076 [00:03<00:08, 50335.41it/s] 28%|██▊       | 153895/552076 [00:03<00:07, 52101.03it/s] 29%|██▉       | 159149/552076 [00:03<00:07, 51901.70it/s] 30%|██▉       | 165079/552076 [00:04<00:07, 53399.59it/s] 31%|███       | 170452/552076 [00:04<00:07, 52482.04it/s] 32%|███▏      | 176510/552076 [00:04<00:06, 54673.60it/s] 33%|███▎      | 182118/552076 [00:04<00:06, 54127.66it/s] 34%|███▍      | 187562/552076 [00:04<00:07, 51516.80it/s] 35%|███▍      | 192875/552076 [00:04<00:07, 50040.63it/s] 36%|███▌      | 198385/552076 [00:04<00:06, 51458.10it/s] 37%|███▋      | 203571/552076 [00:04<00:06, 51094.94it/s] 38%|███▊      | 208710/552076 [00:04<00:06, 49342.23it/s] 39%|███▉      | 214045/552076 [00:05<00:06, 50479.14it/s] 40%|███▉      | 219433/552076 [00:05<00:06, 49703.33it/s] 41%|████      | 225090/552076 [00:05<00:06, 51581.29it/s] 42%|████▏     | 230368/552076 [00:05<00:06, 51934.69it/s] 43%|████▎     | 235587/552076 [00:05<00:06, 51187.89it/s] 44%|████▍     | 244678/552076 [00:05<00:05, 58909.50it/s] 46%|████▌     | 254108/552076 [00:05<00:04, 66383.01it/s] 47%|████▋     | 261364/552076 [00:05<00:04, 65122.06it/s] 49%|████▊     | 268314/552076 [00:05<00:04, 61798.81it/s] 50%|████▉     | 274836/552076 [00:06<00:04, 61128.41it/s] 51%|█████     | 281233/552076 [00:06<00:04, 61144.95it/s] 52%|█████▏    | 287517/552076 [00:06<00:04, 61512.86it/s] 53%|█████▎    | 293787/552076 [00:06<00:04, 61802.08it/s] 54%|█████▍    | 300051/552076 [00:06<00:04, 58278.45it/s] 55%|█████▌    | 305979/552076 [00:06<00:04, 55309.05it/s] 56%|█████▋    | 311612/552076 [00:06<00:04, 49345.76it/s] 58%|█████▊    | 317616/552076 [00:06<00:04, 52131.22it/s] 59%|█████▊    | 323005/552076 [00:06<00:04, 50643.90it/s] 59%|█████▉    | 328202/552076 [00:07<00:04, 50923.52it/s] 60%|██████    | 333776/552076 [00:07<00:04, 51384.78it/s] 61%|██████▏   | 339498/552076 [00:07<00:04, 53005.54it/s] 62%|██████▏   | 344858/552076 [00:07<00:03, 52144.95it/s] 63%|██████▎   | 350118/552076 [00:07<00:03, 51484.22it/s] 64%|██████▍   | 355300/552076 [00:07<00:03, 49780.31it/s] 65%|██████▌   | 360314/552076 [00:07<00:04, 46582.31it/s] 66%|██████▌   | 365039/552076 [00:07<00:04, 44241.50it/s] 67%|██████▋   | 369535/552076 [00:07<00:04, 42513.90it/s] 68%|██████▊   | 373851/552076 [00:08<00:04, 41210.10it/s] 68%|██████▊   | 378026/552076 [00:08<00:04, 35039.07it/s] 69%|██████▉   | 383019/552076 [00:08<00:04, 38381.22it/s] 70%|███████   | 388315/552076 [00:08<00:04, 40891.45it/s] 71%|███████▏  | 393575/552076 [00:08<00:03, 43817.36it/s] 72%|███████▏  | 398968/552076 [00:08<00:03, 46429.13it/s] 73%|███████▎  | 404392/552076 [00:08<00:03, 48525.15it/s] 74%|███████▍  | 409620/552076 [00:08<00:02, 48493.27it/s] 75%|███████▌  | 414829/552076 [00:08<00:02, 49518.00it/s] 76%|███████▌  | 420296/552076 [00:08<00:02, 50958.25it/s] 77%|███████▋  | 425858/552076 [00:09<00:02, 52272.44it/s] 78%|███████▊  | 431277/552076 [00:09<00:02, 51631.30it/s] 79%|███████▉  | 436687/552076 [00:09<00:02, 52346.81it/s] 80%|████████  | 442279/552076 [00:09<00:02, 53369.83it/s] 81%|████████  | 447908/552076 [00:09<00:01, 54213.09it/s] 82%|████████▏ | 453446/552076 [00:09<00:01, 53299.09it/s] 83%|████████▎ | 458927/552076 [00:09<00:01, 53743.22it/s] 84%|████████▍ | 464715/552076 [00:09<00:01, 54918.92it/s] 85%|████████▌ | 470223/552076 [00:09<00:01, 54921.21it/s] 86%|████████▌ | 475727/552076 [00:10<00:01, 54752.19it/s] 87%|████████▋ | 481351/552076 [00:10<00:01, 55189.09it/s] 88%|████████▊ | 486877/552076 [00:10<00:01, 54481.22it/s] 89%|████████▉ | 492762/552076 [00:10<00:01, 55721.65it/s] 90%|█████████ | 498402/552076 [00:10<00:00, 55923.21it/s] 91%|█████████▏| 504355/552076 [00:10<00:00, 56957.35it/s] 92%|█████████▏| 510062/552076 [00:10<00:00, 55678.10it/s] 93%|█████████▎| 515644/552076 [00:10<00:00, 53370.31it/s] 94%|█████████▍| 521011/552076 [00:10<00:00, 52783.16it/s] 96%|█████████▌| 527584/552076 [00:10<00:00, 56096.08it/s] 97%|█████████▋| 533935/552076 [00:11<00:00, 58129.91it/s] 98%|█████████▊| 540341/552076 [00:11<00:00, 59788.98it/s] 99%|█████████▉| 546381/552076 [00:11<00:00, 57230.67it/s]100%|██████████| 552076/552076 [00:11<00:00, 48398.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6607/552076 [00:00<00:08, 66064.08it/s]  2%|▏         | 12480/552076 [00:00<00:08, 63675.92it/s]  3%|▎         | 19114/552076 [00:00<00:08, 64450.50it/s]  4%|▍         | 24477/552076 [00:00<00:08, 60769.85it/s]  6%|▌         | 30475/552076 [00:00<00:08, 60529.65it/s]  7%|▋         | 37268/552076 [00:00<00:08, 62573.51it/s]  8%|▊         | 44008/552076 [00:00<00:07, 63946.39it/s]  9%|▉         | 50888/552076 [00:00<00:07, 65328.72it/s] 10%|█         | 57543/552076 [00:00<00:07, 65689.32it/s] 12%|█▏        | 63921/552076 [00:01<00:07, 65103.79it/s] 13%|█▎        | 70371/552076 [00:01<00:07, 64919.81it/s] 14%|█▍        | 77647/552076 [00:01<00:07, 67088.24it/s] 15%|█▌        | 84367/552076 [00:01<00:06, 67121.27it/s] 17%|█▋        | 91101/552076 [00:01<00:06, 67184.07it/s] 18%|█▊        | 97894/552076 [00:01<00:06, 67405.90it/s] 19%|█▉        | 104691/552076 [00:01<00:06, 67572.87it/s] 20%|██        | 111485/552076 [00:01<00:06, 67681.40it/s] 21%|██▏       | 118243/552076 [00:01<00:06, 66303.24it/s] 23%|██▎       | 124873/552076 [00:01<00:07, 60743.87it/s] 25%|██▍       | 137020/552076 [00:02<00:05, 71460.77it/s] 27%|██▋       | 149171/552076 [00:02<00:04, 81535.92it/s] 29%|██▊       | 158388/552076 [00:02<00:05, 70683.56it/s] 31%|███       | 170591/552076 [00:02<00:04, 80893.90it/s] 33%|███▎      | 182545/552076 [00:02<00:04, 89580.60it/s] 35%|███▌      | 194730/552076 [00:02<00:03, 97311.70it/s] 37%|███▋      | 206912/552076 [00:02<00:03, 103561.63it/s] 40%|███▉      | 218431/552076 [00:02<00:03, 106794.89it/s] 42%|████▏     | 230348/552076 [00:02<00:02, 110227.23it/s] 44%|████▍     | 241986/552076 [00:03<00:02, 112003.53it/s] 46%|████▌     | 254118/552076 [00:03<00:02, 114643.32it/s] 48%|████▊     | 266501/552076 [00:03<00:02, 117250.20it/s] 50%|█████     | 278447/552076 [00:03<00:02, 117882.32it/s] 53%|█████▎    | 290363/552076 [00:03<00:02, 97711.96it/s]  55%|█████▍    | 302631/552076 [00:03<00:02, 104064.37it/s] 57%|█████▋    | 314919/552076 [00:03<00:02, 109073.47it/s] 59%|█████▉    | 327053/552076 [00:03<00:02, 112482.37it/s] 61%|██████▏   | 338991/552076 [00:03<00:01, 114463.30it/s] 64%|██████▎   | 350812/552076 [00:03<00:01, 115560.79it/s] 66%|██████▌   | 363037/552076 [00:04<00:01, 117486.53it/s] 68%|██████▊   | 375359/552076 [00:04<00:01, 119149.05it/s] 70%|███████   | 387375/552076 [00:04<00:01, 118746.24it/s] 72%|███████▏  | 399321/552076 [00:04<00:01, 112455.81it/s] 74%|███████▍  | 410686/552076 [00:04<00:01, 96311.16it/s]  76%|███████▋  | 421875/552076 [00:04<00:01, 100509.09it/s] 78%|███████▊  | 432316/552076 [00:04<00:01, 89899.25it/s]  80%|████████  | 441789/552076 [00:05<00:01, 68977.59it/s] 81%|████████▏ | 449761/552076 [00:05<00:01, 67267.12it/s] 83%|████████▎ | 457249/552076 [00:05<00:01, 67532.77it/s] 85%|████████▍ | 467553/552076 [00:05<00:01, 75317.86it/s] 87%|████████▋ | 482751/552076 [00:05<00:00, 88747.35it/s] 91%|█████████ | 503756/552076 [00:05<00:00, 107344.36it/s] 95%|█████████▌| 525031/552076 [00:05<00:00, 126083.73it/s] 99%|█████████▉| 546707/552076 [00:05<00:00, 144176.83it/s]100%|██████████| 552076/552076 [00:05<00:00, 95622.10it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21448/552076 [00:00<00:02, 214474.07it/s]  6%|▌         | 32934/552076 [00:00<00:03, 170188.83it/s]  8%|▊         | 46134/552076 [00:00<00:03, 156594.44it/s] 12%|█▏        | 66919/552076 [00:00<00:02, 169104.49it/s] 16%|█▌        | 89333/552076 [00:00<00:02, 182549.89it/s] 20%|██        | 111807/552076 [00:00<00:02, 193442.54it/s] 24%|██▍       | 132623/552076 [00:00<00:02, 197631.76it/s] 27%|██▋       | 151308/552076 [00:00<00:02, 163624.25it/s] 32%|███▏      | 174022/552076 [00:00<00:02, 178607.14it/s] 35%|███▌      | 195894/552076 [00:01<00:01, 189004.10it/s] 39%|███▉      | 216370/552076 [00:01<00:01, 193468.35it/s] 43%|████▎     | 237479/552076 [00:01<00:01, 198436.84it/s] 47%|████▋     | 259394/552076 [00:01<00:01, 204226.36it/s] 51%|█████     | 281911/552076 [00:01<00:01, 210088.40it/s] 55%|█████▌    | 304162/552076 [00:01<00:01, 213664.64it/s] 59%|█████▉    | 327132/552076 [00:01<00:01, 218232.68it/s] 63%|██████▎   | 349103/552076 [00:01<00:00, 213432.41it/s] 67%|██████▋   | 370573/552076 [00:01<00:00, 209081.68it/s] 71%|███████   | 391979/552076 [00:01<00:00, 210548.53it/s] 75%|███████▌  | 414522/552076 [00:02<00:00, 214801.39it/s] 79%|███████▉  | 436085/552076 [00:02<00:00, 215047.68it/s] 83%|████████▎ | 457926/552076 [00:02<00:00, 216044.60it/s] 87%|████████▋ | 480325/552076 [00:02<00:00, 218368.15it/s] 91%|█████████ | 502913/552076 [00:02<00:00, 220567.08it/s] 95%|█████████▌| 525459/552076 [00:02<00:00, 222012.26it/s] 99%|█████████▉| 548280/552076 [00:02<00:00, 223833.50it/s]100%|██████████| 552076/552076 [00:02<00:00, 205025.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21602/552076 [00:00<00:02, 216019.69it/s]  8%|▊         | 43819/552076 [00:00<00:02, 217827.42it/s] 12%|█▏        | 66219/552076 [00:00<00:02, 219642.93it/s] 16%|█▌        | 88852/552076 [00:00<00:02, 221605.85it/s] 20%|██        | 110828/552076 [00:00<00:01, 221046.85it/s] 24%|██▍       | 132128/552076 [00:00<00:01, 218569.25it/s] 27%|██▋       | 151455/552076 [00:00<00:02, 183905.56it/s] 31%|███       | 169011/552076 [00:00<00:02, 160229.94it/s] 34%|███▎      | 184997/552076 [00:01<00:02, 146034.42it/s] 36%|███▌      | 199818/552076 [00:01<00:02, 137682.25it/s] 39%|███▊      | 213837/552076 [00:01<00:02, 133018.72it/s] 41%|████      | 227349/552076 [00:01<00:02, 129546.61it/s] 44%|████▎     | 240471/552076 [00:01<00:02, 127450.87it/s] 46%|████▌     | 253341/552076 [00:01<00:02, 125027.48it/s] 48%|████▊     | 265941/552076 [00:01<00:02, 124321.15it/s] 50%|█████     | 278443/552076 [00:01<00:02, 123691.16it/s] 53%|█████▎    | 290862/552076 [00:01<00:02, 122948.60it/s] 55%|█████▍    | 303200/552076 [00:01<00:02, 123076.33it/s] 57%|█████▋    | 315533/552076 [00:02<00:01, 122524.73it/s] 59%|█████▉    | 327804/552076 [00:02<00:01, 122300.75it/s] 62%|██████▏   | 340047/552076 [00:02<00:01, 121706.44it/s] 64%|██████▍   | 352304/552076 [00:02<00:01, 121962.79it/s] 66%|██████▌   | 364669/552076 [00:02<00:01, 122461.27it/s] 68%|██████▊   | 376921/552076 [00:02<00:01, 121613.36it/s] 70%|███████   | 389088/552076 [00:02<00:01, 119944.28it/s] 73%|███████▎  | 401421/552076 [00:02<00:01, 120939.42it/s] 75%|███████▍  | 413523/552076 [00:02<00:01, 120086.21it/s] 77%|███████▋  | 425701/552076 [00:03<00:01, 120589.24it/s] 79%|███████▉  | 437782/552076 [00:03<00:00, 120654.12it/s] 82%|████████▏ | 449995/552076 [00:03<00:00, 121092.13it/s] 84%|████████▎ | 462108/552076 [00:03<00:00, 117859.29it/s] 86%|████████▌ | 474197/552076 [00:03<00:00, 118750.29it/s] 88%|████████▊ | 486296/552076 [00:03<00:00, 119411.80it/s] 90%|█████████ | 498602/552076 [00:03<00:00, 120481.10it/s] 92%|█████████▏| 510662/552076 [00:03<00:00, 120419.09it/s] 95%|█████████▍| 522712/552076 [00:03<00:00, 119812.18it/s] 97%|█████████▋| 534821/552076 [00:03<00:00, 120191.78it/s] 99%|█████████▉| 546885/552076 [00:04<00:00, 120323.70it/s]100%|██████████| 552076/552076 [00:04<00:00, 136077.87it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10289/552076 [00:00<00:05, 102880.78it/s]  4%|▍         | 21946/552076 [00:00<00:04, 106637.58it/s]  6%|▌         | 34059/552076 [00:00<00:04, 110606.14it/s]  8%|▊         | 43399/552076 [00:00<00:04, 104812.63it/s] 10%|▉         | 54164/552076 [00:00<00:04, 105645.74it/s] 12%|█▏        | 65803/552076 [00:00<00:04, 108652.44it/s] 14%|█▍        | 77433/552076 [00:00<00:04, 110836.81it/s] 16%|█▌        | 87733/552076 [00:00<00:04, 97047.90it/s]  18%|█▊        | 97200/552076 [00:00<00:05, 83670.52it/s] 20%|█▉        | 108919/552076 [00:01<00:04, 91522.81it/s] 22%|██▏       | 120996/552076 [00:01<00:04, 98691.56it/s] 24%|██▍       | 132844/552076 [00:01<00:04, 103896.27it/s] 26%|██▌       | 144797/552076 [00:01<00:03, 108137.45it/s] 28%|██▊       | 156891/552076 [00:01<00:03, 111682.98it/s] 31%|███       | 169227/552076 [00:01<00:03, 114945.30it/s] 33%|███▎      | 181444/552076 [00:01<00:03, 117018.91it/s] 35%|███▌      | 193737/552076 [00:01<00:03, 118729.41it/s] 37%|███▋      | 206019/552076 [00:01<00:02, 119926.05it/s] 40%|███▉      | 218361/552076 [00:01<00:02, 120950.52it/s] 42%|████▏     | 230732/552076 [00:02<00:02, 121763.84it/s] 44%|████▍     | 243082/552076 [00:02<00:02, 122276.72it/s] 46%|████▋     | 255338/552076 [00:02<00:02, 122236.43it/s] 48%|████▊     | 267694/552076 [00:02<00:02, 122628.02it/s] 51%|█████     | 279971/552076 [00:02<00:02, 121547.94it/s] 53%|█████▎    | 292138/552076 [00:02<00:02, 120917.44it/s] 55%|█████▌    | 304267/552076 [00:02<00:02, 121028.06it/s] 57%|█████▋    | 316534/552076 [00:02<00:01, 121515.61it/s] 60%|█████▉    | 328743/552076 [00:02<00:01, 121684.53it/s] 62%|██████▏   | 340985/552076 [00:02<00:01, 121903.93it/s] 64%|██████▍   | 353300/552076 [00:03<00:01, 122272.00it/s] 66%|██████▌   | 365617/552076 [00:03<00:01, 122537.36it/s] 68%|██████▊   | 377889/552076 [00:03<00:01, 122590.38it/s] 71%|███████   | 390187/552076 [00:03<00:01, 122705.55it/s] 73%|███████▎  | 402459/552076 [00:03<00:01, 122630.98it/s] 75%|███████▌  | 414723/552076 [00:03<00:01, 122151.21it/s] 77%|███████▋  | 426993/552076 [00:03<00:01, 122314.93it/s] 80%|███████▉  | 439226/552076 [00:03<00:00, 121883.63it/s] 82%|████████▏ | 451416/552076 [00:03<00:00, 121352.99it/s] 84%|████████▍ | 463659/552076 [00:03<00:00, 121671.37it/s] 86%|████████▌ | 475904/552076 [00:04<00:00, 121901.95it/s] 88%|████████▊ | 488105/552076 [00:04<00:00, 121932.29it/s] 91%|█████████ | 500299/552076 [00:04<00:00, 121690.68it/s] 93%|█████████▎| 512613/552076 [00:04<00:00, 122119.92it/s] 95%|█████████▌| 524826/552076 [00:04<00:00, 122018.60it/s] 97%|█████████▋| 537147/552076 [00:04<00:00, 122372.41it/s]100%|█████████▉| 549385/552076 [00:04<00:00, 99753.78it/s] 100%|██████████| 552076/552076 [00:04<00:00, 114546.66it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10492/552076 [00:00<00:05, 104918.60it/s]  4%|▍         | 21225/552076 [00:00<00:05, 105628.81it/s]  6%|▌         | 32804/552076 [00:00<00:04, 108482.62it/s]  8%|▊         | 44447/552076 [00:00<00:04, 110747.93it/s] 10%|▉         | 53146/552076 [00:00<00:04, 102358.59it/s] 11%|█         | 61763/552076 [00:00<00:05, 91967.18it/s]  13%|█▎        | 72897/552076 [00:00<00:04, 97030.92it/s] 15%|█▌        | 83911/552076 [00:00<00:04, 100623.42it/s] 17%|█▋        | 94972/552076 [00:00<00:04, 103422.94it/s] 19%|█▉        | 106217/552076 [00:01<00:04, 105974.94it/s] 21%|██        | 116662/552076 [00:01<00:04, 98008.22it/s]  23%|██▎       | 126475/552076 [00:01<00:05, 79689.78it/s] 25%|██▍       | 136324/552076 [00:01<00:04, 84530.26it/s] 27%|██▋       | 148219/552076 [00:01<00:04, 92564.64it/s] 29%|██▉       | 158746/552076 [00:01<00:04, 95712.06it/s] 31%|███       | 171281/552076 [00:01<00:03, 103019.14it/s] 33%|███▎      | 183499/552076 [00:01<00:03, 108104.01it/s] 35%|███▌      | 195507/552076 [00:01<00:03, 111438.20it/s] 37%|███▋      | 206945/552076 [00:02<00:03, 111693.17it/s] 40%|███▉      | 218321/552076 [00:02<00:02, 111772.11it/s] 42%|████▏     | 229643/552076 [00:02<00:03, 104199.55it/s] 44%|████▍     | 241742/552076 [00:02<00:02, 108724.74it/s] 46%|████▌     | 252809/552076 [00:02<00:02, 100730.62it/s] 48%|████▊     | 263135/552076 [00:02<00:03, 90009.12it/s]  50%|████▉     | 274648/552076 [00:02<00:02, 96312.34it/s] 52%|█████▏    | 286552/552076 [00:02<00:02, 102163.05it/s] 54%|█████▍    | 298769/552076 [00:02<00:02, 107439.40it/s] 56%|█████▋    | 311044/552076 [00:03<00:02, 111613.59it/s] 58%|█████▊    | 322834/552076 [00:03<00:02, 113426.14it/s] 61%|██████    | 334433/552076 [00:03<00:01, 114180.37it/s] 63%|██████▎   | 346580/552076 [00:03<00:01, 116272.79it/s] 65%|██████▍   | 358316/552076 [00:03<00:02, 92329.51it/s]  67%|██████▋   | 370135/552076 [00:03<00:01, 98814.05it/s] 69%|██████▉   | 382310/552076 [00:03<00:01, 104732.56it/s] 71%|███████▏  | 394341/552076 [00:03<00:01, 108963.03it/s] 74%|███████▎  | 406351/552076 [00:03<00:01, 112080.77it/s] 76%|███████▌  | 418512/552076 [00:04<00:01, 114776.97it/s] 78%|███████▊  | 430669/552076 [00:04<00:01, 116731.44it/s] 80%|████████  | 442927/552076 [00:04<00:00, 118424.46it/s] 82%|████████▏ | 455275/552076 [00:04<00:00, 119894.82it/s] 85%|████████▍ | 468030/552076 [00:04<00:00, 122092.15it/s] 87%|████████▋ | 481219/552076 [00:04<00:00, 124871.99it/s] 89%|████████▉ | 493779/552076 [00:04<00:00, 123663.25it/s] 92%|█████████▏| 506199/552076 [00:04<00:00, 123756.67it/s] 94%|█████████▍| 518612/552076 [00:04<00:00, 122668.62it/s] 96%|█████████▌| 530908/552076 [00:04<00:00, 121759.80it/s] 98%|█████████▊| 543106/552076 [00:05<00:00, 121760.75it/s]100%|██████████| 552076/552076 [00:05<00:00, 108370.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9115/552076 [00:00<00:05, 91147.48it/s]  4%|▎         | 19488/552076 [00:00<00:05, 94589.52it/s]  6%|▌         | 31086/552076 [00:00<00:05, 100128.33it/s]  8%|▊         | 43517/552076 [00:00<00:04, 106332.89it/s] 10%|█         | 56228/552076 [00:00<00:04, 111814.60it/s] 12%|█▏        | 67341/552076 [00:00<00:04, 111607.00it/s] 14%|█▍        | 79479/552076 [00:00<00:04, 114369.06it/s] 17%|█▋        | 91753/552076 [00:00<00:03, 116755.44it/s] 19%|█▉        | 104062/552076 [00:00<00:03, 118584.84it/s] 21%|██        | 116359/552076 [00:01<00:03, 119866.14it/s] 23%|██▎       | 128703/552076 [00:01<00:03, 120915.22it/s] 26%|██▌       | 140814/552076 [00:01<00:03, 120971.90it/s] 28%|██▊       | 152814/552076 [00:01<00:03, 120456.82it/s] 30%|███       | 165646/552076 [00:01<00:03, 122712.14it/s] 32%|███▏      | 178039/552076 [00:01<00:03, 123071.78it/s] 34%|███▍      | 190351/552076 [00:01<00:02, 123084.16it/s] 37%|███▋      | 202642/552076 [00:01<00:02, 122947.92it/s] 39%|███▉      | 214969/552076 [00:01<00:02, 123042.73it/s] 41%|████      | 227265/552076 [00:01<00:02, 118583.78it/s] 43%|████▎     | 239152/552076 [00:02<00:02, 110263.47it/s] 46%|████▌     | 251414/552076 [00:02<00:02, 113699.84it/s] 48%|████▊     | 263718/552076 [00:02<00:02, 116349.00it/s] 50%|████▉     | 275975/552076 [00:02<00:02, 118146.13it/s] 52%|█████▏    | 288755/552076 [00:02<00:02, 120882.85it/s] 55%|█████▍    | 300946/552076 [00:02<00:02, 121187.66it/s] 57%|█████▋    | 313114/552076 [00:02<00:01, 121261.81it/s] 59%|█████▉    | 325338/552076 [00:02<00:01, 121552.61it/s] 61%|██████    | 337619/552076 [00:02<00:01, 121924.82it/s] 63%|██████▎   | 349974/552076 [00:02<00:01, 122406.94it/s] 66%|██████▌   | 362258/552076 [00:03<00:01, 122535.53it/s] 68%|██████▊   | 374530/552076 [00:03<00:01, 122590.76it/s] 70%|███████   | 386845/552076 [00:03<00:01, 122757.42it/s] 72%|███████▏  | 399198/552076 [00:03<00:01, 122985.93it/s] 75%|███████▍  | 411501/552076 [00:03<00:01, 122999.01it/s] 77%|███████▋  | 423804/552076 [00:03<00:01, 122711.82it/s] 79%|███████▉  | 436077/552076 [00:03<00:00, 122616.02it/s] 81%|████████  | 448340/552076 [00:03<00:00, 122590.44it/s] 83%|████████▎ | 460600/552076 [00:03<00:00, 120500.62it/s] 86%|████████▌ | 472659/552076 [00:03<00:00, 110442.33it/s] 88%|████████▊ | 484646/552076 [00:04<00:00, 113109.05it/s] 90%|████████▉ | 496665/552076 [00:04<00:00, 115143.31it/s] 92%|█████████▏| 508283/552076 [00:04<00:00, 114609.68it/s] 94%|█████████▍| 520515/552076 [00:04<00:00, 116818.54it/s] 96%|█████████▋| 532529/552076 [00:04<00:00, 117794.58it/s] 99%|█████████▊| 544354/552076 [00:04<00:00, 117709.87it/s]100%|██████████| 552076/552076 [00:04<00:00, 118869.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9875/552076 [00:00<00:05, 98743.97it/s]  3%|▎         | 16624/552076 [00:00<00:06, 84764.72it/s]  5%|▌         | 28534/552076 [00:00<00:05, 92789.43it/s]  6%|▋         | 34897/552076 [00:00<00:06, 77437.42it/s]  8%|▊         | 42588/552076 [00:00<00:06, 74596.40it/s] 10%|▉         | 54346/552076 [00:00<00:05, 83784.64it/s] 12%|█▏        | 66332/552076 [00:00<00:05, 92099.93it/s] 14%|█▎        | 75523/552076 [00:00<00:05, 92040.78it/s] 16%|█▌        | 87777/552076 [00:00<00:04, 99467.71it/s] 18%|█▊        | 98068/552076 [00:01<00:04, 100475.51it/s] 20%|█▉        | 110115/552076 [00:01<00:04, 105738.16it/s] 22%|██▏       | 120841/552076 [00:01<00:04, 99269.05it/s]  24%|██▍       | 131649/552076 [00:01<00:04, 99825.72it/s] 26%|██▌       | 141764/552076 [00:01<00:04, 92894.88it/s] 28%|██▊       | 153839/552076 [00:01<00:03, 99800.29it/s] 30%|███       | 165884/552076 [00:01<00:03, 105209.45it/s] 32%|███▏      | 177894/552076 [00:01<00:03, 109273.54it/s] 34%|███▍      | 189774/552076 [00:01<00:03, 111965.39it/s] 37%|███▋      | 201569/552076 [00:01<00:03, 113693.94it/s] 39%|███▊      | 213070/552076 [00:02<00:03, 109154.41it/s] 41%|████      | 225528/552076 [00:02<00:02, 113363.40it/s] 43%|████▎     | 237658/552076 [00:02<00:02, 115630.81it/s] 45%|████▌     | 249326/552076 [00:02<00:02, 115759.15it/s] 47%|████▋     | 260975/552076 [00:02<00:03, 85388.51it/s]  49%|████▉     | 270719/552076 [00:02<00:03, 80020.99it/s] 51%|█████     | 282450/552076 [00:02<00:03, 88455.30it/s] 53%|█████▎    | 294565/552076 [00:02<00:02, 96246.52it/s] 56%|█████▌    | 306616/552076 [00:03<00:02, 102433.12it/s] 58%|█████▊    | 318732/552076 [00:03<00:02, 107413.68it/s] 60%|█████▉    | 330026/552076 [00:03<00:02, 104161.96it/s] 62%|██████▏   | 340851/552076 [00:03<00:02, 84296.49it/s]  64%|██████▍   | 352438/552076 [00:03<00:02, 91800.05it/s] 66%|██████▌   | 364290/552076 [00:03<00:01, 98458.33it/s] 68%|██████▊   | 376313/552076 [00:03<00:01, 104113.41it/s] 70%|███████   | 388603/552076 [00:03<00:01, 109116.39it/s] 72%|███████▏  | 399989/552076 [00:03<00:01, 102052.33it/s] 74%|███████▍  | 410619/552076 [00:04<00:01, 100325.72it/s] 77%|███████▋  | 422407/552076 [00:04<00:01, 105016.86it/s] 78%|███████▊  | 433179/552076 [00:04<00:01, 84035.41it/s]  80%|████████  | 443183/552076 [00:04<00:01, 88270.90it/s] 82%|████████▏ | 455250/552076 [00:04<00:01, 96003.56it/s] 85%|████████▍ | 467505/552076 [00:04<00:00, 102674.16it/s] 87%|████████▋ | 479877/552076 [00:04<00:00, 108195.62it/s] 89%|████████▉ | 492038/552076 [00:04<00:00, 111897.05it/s] 91%|█████████▏| 504331/552076 [00:04<00:00, 114992.81it/s] 94%|█████████▎| 516712/552076 [00:05<00:00, 117502.14it/s] 96%|█████████▌| 528676/552076 [00:05<00:00, 96411.22it/s]  98%|█████████▊| 540908/552076 [00:05<00:00, 102952.75it/s]100%|██████████| 552076/552076 [00:05<00:00, 101097.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11729/552076 [00:00<00:04, 117283.40it/s]  4%|▍         | 23474/552076 [00:00<00:04, 117331.18it/s]  6%|▋         | 35624/552076 [00:00<00:04, 118550.77it/s]  9%|▊         | 47071/552076 [00:00<00:04, 117293.34it/s] 11%|█         | 59137/552076 [00:00<00:04, 118279.83it/s] 13%|█▎        | 71161/552076 [00:00<00:04, 118858.23it/s] 15%|█▌        | 82989/552076 [00:00<00:03, 118681.64it/s] 17%|█▋        | 95139/552076 [00:00<00:03, 119511.51it/s] 19%|█▉        | 107262/552076 [00:00<00:03, 120021.61it/s] 22%|██▏       | 118794/552076 [00:01<00:03, 116438.57it/s] 24%|██▎       | 130983/552076 [00:01<00:03, 118021.32it/s] 26%|██▌       | 143051/552076 [00:01<00:03, 118803.90it/s] 28%|██▊       | 155275/552076 [00:01<00:03, 119813.47it/s] 30%|███       | 167297/552076 [00:01<00:03, 119933.80it/s] 33%|███▎      | 179536/552076 [00:01<00:03, 120659.43it/s] 35%|███▍      | 191701/552076 [00:01<00:02, 120953.91it/s] 37%|███▋      | 203869/552076 [00:01<00:02, 121169.74it/s] 39%|███▉      | 216032/552076 [00:01<00:02, 121305.67it/s] 41%|████▏     | 228158/552076 [00:01<00:02, 121291.39it/s] 44%|████▎     | 240430/552076 [00:02<00:02, 121713.65it/s] 46%|████▌     | 252594/552076 [00:02<00:02, 116841.78it/s] 48%|████▊     | 264315/552076 [00:02<00:02, 106249.75it/s] 50%|████▉     | 275151/552076 [00:02<00:03, 87036.28it/s]  52%|█████▏    | 284573/552076 [00:02<00:03, 81391.61it/s] 53%|█████▎    | 294318/552076 [00:02<00:03, 85624.11it/s] 55%|█████▍    | 303343/552076 [00:02<00:03, 80429.01it/s] 57%|█████▋    | 313967/552076 [00:02<00:02, 86751.48it/s] 59%|█████▊    | 323056/552076 [00:03<00:02, 77759.09it/s] 60%|██████    | 331297/552076 [00:03<00:03, 72735.59it/s] 61%|██████▏   | 338962/552076 [00:03<00:03, 68171.73it/s] 63%|██████▎   | 346112/552076 [00:03<00:03, 67937.38it/s] 65%|██████▍   | 357818/552076 [00:03<00:02, 77721.68it/s] 67%|██████▋   | 368064/552076 [00:03<00:02, 83789.47it/s] 69%|██████▊   | 379239/552076 [00:03<00:01, 90588.81it/s] 70%|███████   | 388904/552076 [00:03<00:01, 92325.08it/s] 72%|███████▏  | 398769/552076 [00:03<00:01, 94135.30it/s] 74%|███████▍  | 409898/552076 [00:04<00:01, 98698.51it/s] 76%|███████▋  | 421062/552076 [00:04<00:01, 102251.98it/s] 78%|███████▊  | 431506/552076 [00:04<00:01, 100481.72it/s] 80%|████████  | 441791/552076 [00:04<00:01, 98753.70it/s]  82%|████████▏ | 451785/552076 [00:04<00:01, 94065.88it/s] 84%|████████▍ | 464159/552076 [00:04<00:00, 101356.53it/s] 86%|████████▌ | 474547/552076 [00:04<00:00, 100266.40it/s] 88%|████████▊ | 485809/552076 [00:04<00:00, 103676.48it/s] 90%|████████▉ | 496332/552076 [00:04<00:00, 96433.82it/s]  92%|█████████▏| 507931/552076 [00:04<00:00, 101570.25it/s] 94%|█████████▍| 518308/552076 [00:05<00:00, 90237.09it/s]  96%|█████████▌| 527720/552076 [00:05<00:00, 89910.41it/s] 97%|█████████▋| 538168/552076 [00:05<00:00, 93835.12it/s] 99%|█████████▉| 547787/552076 [00:05<00:00, 88541.63it/s]100%|██████████| 552076/552076 [00:05<00:00, 100396.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11582/552076 [00:00<00:04, 115817.35it/s]  4%|▍         | 23461/552076 [00:00<00:04, 115023.79it/s]  5%|▌         | 29290/552076 [00:00<00:05, 87290.55it/s]   7%|▋         | 41288/552076 [00:00<00:05, 95059.16it/s]  9%|▉         | 50503/552076 [00:00<00:05, 93646.11it/s] 11%|█         | 58559/552076 [00:00<00:05, 84060.39it/s] 12%|█▏        | 67661/552076 [00:00<00:05, 86031.77it/s] 14%|█▎        | 75764/552076 [00:00<00:07, 63808.55it/s] 15%|█▍        | 82630/552076 [00:01<00:09, 50369.78it/s] 16%|█▋        | 90279/552076 [00:01<00:08, 56118.51it/s] 18%|█▊        | 99506/552076 [00:01<00:07, 63593.18it/s] 20%|█▉        | 110163/552076 [00:01<00:06, 72345.12it/s] 22%|██▏       | 121602/552076 [00:01<00:05, 81310.08it/s] 24%|██▍       | 133368/552076 [00:01<00:04, 89614.62it/s] 26%|██▋       | 145649/552076 [00:01<00:04, 97522.17it/s] 28%|██▊       | 156317/552076 [00:01<00:04, 94824.61it/s] 30%|███       | 167425/552076 [00:01<00:03, 99177.56it/s] 32%|███▏      | 179370/552076 [00:02<00:03, 104497.52it/s] 34%|███▍      | 190255/552076 [00:02<00:03, 93814.54it/s]  36%|███▋      | 200147/552076 [00:02<00:03, 88596.21it/s] 38%|███▊      | 210076/552076 [00:02<00:03, 91552.86it/s] 40%|████      | 221876/552076 [00:02<00:03, 98152.33it/s] 42%|████▏     | 232844/552076 [00:02<00:03, 101347.54it/s] 44%|████▍     | 244675/552076 [00:02<00:02, 105900.88it/s] 47%|████▋     | 256750/552076 [00:02<00:02, 109955.33it/s] 49%|████▊     | 268976/552076 [00:02<00:02, 113377.93it/s] 51%|█████     | 281085/552076 [00:03<00:02, 115585.32it/s] 53%|█████▎    | 293317/552076 [00:03<00:02, 117524.56it/s] 55%|█████▌    | 305433/552076 [00:03<00:02, 118591.20it/s] 57%|█████▋    | 317366/552076 [00:03<00:02, 98533.97it/s]  60%|█████▉    | 329273/552076 [00:03<00:02, 103910.17it/s] 62%|██████▏   | 340176/552076 [00:03<00:02, 93316.84it/s]  63%|██████▎   | 350070/552076 [00:03<00:02, 90977.80it/s] 65%|██████▌   | 360980/552076 [00:03<00:01, 95748.94it/s] 67%|██████▋   | 371091/552076 [00:03<00:01, 97295.02it/s] 69%|██████▉   | 381073/552076 [00:04<00:01, 94398.63it/s] 71%|███████   | 390708/552076 [00:04<00:01, 93767.99it/s] 73%|███████▎  | 400328/552076 [00:04<00:01, 94483.88it/s] 75%|███████▍  | 412636/552076 [00:04<00:01, 101562.61it/s] 77%|███████▋  | 424576/552076 [00:04<00:01, 106327.12it/s] 79%|███████▉  | 436748/552076 [00:04<00:01, 110519.53it/s] 81%|████████▏ | 449020/552076 [00:04<00:00, 113915.26it/s] 84%|████████▎ | 461240/552076 [00:04<00:00, 116277.78it/s] 86%|████████▌ | 473155/552076 [00:04<00:00, 117124.34it/s] 88%|████████▊ | 485391/552076 [00:04<00:00, 118646.34it/s] 90%|█████████ | 497759/552076 [00:05<00:00, 120110.00it/s] 92%|█████████▏| 510462/552076 [00:05<00:00, 122105.05it/s] 95%|█████████▍| 522717/552076 [00:05<00:00, 121641.85it/s] 97%|█████████▋| 534913/552076 [00:05<00:00, 121693.20it/s] 99%|█████████▉| 547124/552076 [00:05<00:00, 121816.06it/s]100%|██████████| 552076/552076 [00:05<00:00, 100097.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5535/552076 [00:00<00:10, 52393.07it/s]  3%|▎         | 14590/552076 [00:00<00:08, 59974.83it/s]  5%|▍         | 26771/552076 [00:00<00:07, 70748.76it/s]  7%|▋         | 38804/552076 [00:00<00:06, 80726.62it/s]  9%|▉         | 50361/552076 [00:00<00:05, 88752.82it/s] 11%|█▏        | 62199/552076 [00:00<00:05, 95956.98it/s] 13%|█▎        | 72991/552076 [00:00<00:04, 99256.09it/s] 15%|█▌        | 83219/552076 [00:00<00:04, 100141.82it/s] 17%|█▋        | 94940/552076 [00:00<00:04, 104715.37it/s] 19%|█▉        | 107211/552076 [00:01<00:04, 109533.44it/s] 22%|██▏       | 119371/552076 [00:01<00:03, 112891.50it/s] 24%|██▍       | 131335/552076 [00:01<00:03, 114834.13it/s] 26%|██▌       | 143304/552076 [00:01<00:03, 116246.54it/s] 29%|██▊       | 158314/552076 [00:01<00:03, 124681.65it/s] 33%|███▎      | 180059/552076 [00:01<00:02, 142979.83it/s] 37%|███▋      | 201936/552076 [00:01<00:02, 159563.25it/s] 40%|████      | 223401/552076 [00:01<00:01, 172871.97it/s] 44%|████▍     | 244392/552076 [00:01<00:01, 182533.18it/s] 48%|████▊     | 263719/552076 [00:01<00:01, 185624.34it/s] 51%|█████▏    | 283032/552076 [00:02<00:01, 174918.43it/s] 55%|█████▌    | 304327/552076 [00:02<00:01, 184819.69it/s] 59%|█████▉    | 325742/552076 [00:02<00:01, 192737.85it/s] 63%|██████▎   | 348070/552076 [00:02<00:01, 200984.88it/s] 67%|██████▋   | 369137/552076 [00:02<00:00, 203790.87it/s] 71%|███████   | 389841/552076 [00:02<00:00, 181283.07it/s] 74%|███████▍  | 410609/552076 [00:02<00:00, 188467.85it/s] 78%|███████▊  | 432637/552076 [00:02<00:00, 197000.68it/s] 82%|████████▏ | 454489/552076 [00:02<00:00, 202995.26it/s] 86%|████████▌ | 476073/552076 [00:02<00:00, 206683.03it/s] 90%|█████████ | 498117/552076 [00:03<00:00, 210624.86it/s] 94%|█████████▍| 519428/552076 [00:03<00:00, 211363.16it/s] 98%|█████████▊| 540720/552076 [00:03<00:00, 210910.28it/s]100%|██████████| 552076/552076 [00:03<00:00, 165723.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12255/552076 [00:00<00:04, 122549.53it/s]  5%|▍         | 25080/552076 [00:00<00:04, 124203.28it/s]  7%|▋         | 37632/552076 [00:00<00:04, 124594.01it/s]  9%|▉         | 50224/552076 [00:00<00:04, 124985.35it/s] 11%|█▏        | 63075/552076 [00:00<00:03, 126020.99it/s] 14%|█▍        | 75970/552076 [00:00<00:03, 126882.35it/s] 16%|█▌        | 88703/552076 [00:00<00:03, 127014.18it/s] 18%|█▊        | 101291/552076 [00:00<00:03, 126670.54it/s] 21%|██        | 113254/552076 [00:00<00:03, 120004.96it/s] 23%|██▎       | 126634/552076 [00:01<00:03, 123835.13it/s] 25%|██▌       | 139350/552076 [00:01<00:03, 124813.78it/s] 28%|██▊       | 152016/552076 [00:01<00:03, 125361.92it/s] 30%|██▉       | 164426/552076 [00:01<00:03, 124956.57it/s] 32%|███▏      | 177670/552076 [00:01<00:02, 127110.08it/s] 35%|███▍      | 190613/552076 [00:01<00:02, 127793.34it/s] 37%|███▋      | 203357/552076 [00:01<00:02, 127629.64it/s] 39%|███▉      | 216167/552076 [00:01<00:02, 127767.78it/s] 41%|████▏     | 228927/552076 [00:01<00:02, 108154.13it/s] 45%|████▌     | 250579/552076 [00:01<00:02, 127261.55it/s] 49%|████▉     | 270911/552076 [00:02<00:01, 143348.72it/s] 52%|█████▏    | 287105/552076 [00:02<00:01, 141138.87it/s] 56%|█████▌    | 309016/552076 [00:02<00:01, 158006.15it/s] 59%|█████▉    | 326385/552076 [00:02<00:01, 156851.91it/s] 63%|██████▎   | 345201/552076 [00:02<00:01, 165092.73it/s] 66%|██████▋   | 366266/552076 [00:02<00:01, 176544.58it/s] 70%|██████▉   | 384762/552076 [00:02<00:01, 163882.85it/s] 74%|███████▎  | 407090/552076 [00:02<00:00, 178095.57it/s] 78%|███████▊  | 429229/552076 [00:02<00:00, 189193.66it/s] 82%|████████▏ | 451954/552076 [00:03<00:00, 199200.72it/s] 86%|████████▌ | 473405/552076 [00:03<00:00, 203558.68it/s] 90%|████████▉ | 494284/552076 [00:03<00:00, 204966.32it/s] 93%|█████████▎| 516159/552076 [00:03<00:00, 208913.44it/s] 98%|█████████▊| 538784/552076 [00:03<00:00, 213827.48it/s]100%|██████████| 552076/552076 [00:03<00:00, 158021.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22643/552076 [00:00<00:02, 226429.68it/s]  8%|▊         | 44917/552076 [00:00<00:02, 225309.41it/s] 12%|█▏        | 67310/552076 [00:00<00:02, 224891.77it/s] 16%|█▋        | 89941/552076 [00:00<00:02, 225314.47it/s] 20%|██        | 113139/552076 [00:00<00:01, 227271.87it/s] 25%|██▍       | 135453/552076 [00:00<00:01, 226014.60it/s] 29%|██▊       | 158491/552076 [00:00<00:01, 227306.33it/s] 33%|███▎      | 181931/552076 [00:00<00:01, 229387.88it/s] 37%|███▋      | 205327/552076 [00:00<00:01, 230737.94it/s] 41%|████      | 227629/552076 [00:01<00:01, 228366.94it/s] 45%|████▌     | 250926/552076 [00:01<00:01, 229727.42it/s] 50%|████▉     | 273628/552076 [00:01<00:01, 228905.69it/s] 54%|█████▍    | 296955/552076 [00:01<00:01, 230197.32it/s] 58%|█████▊    | 320378/552076 [00:01<00:01, 231391.55it/s] 62%|██████▏   | 343370/552076 [00:01<00:00, 230847.51it/s] 66%|██████▋   | 366352/552076 [00:01<00:00, 229568.52it/s] 71%|███████   | 389239/552076 [00:01<00:00, 226105.39it/s] 75%|███████▍  | 411813/552076 [00:01<00:00, 165844.47it/s] 78%|███████▊  | 430682/552076 [00:02<00:01, 121097.68it/s] 81%|████████  | 446120/552076 [00:02<00:01, 93727.49it/s]  83%|████████▎ | 458768/552076 [00:02<00:01, 80826.01it/s] 85%|████████▌ | 469457/552076 [00:02<00:00, 83602.53it/s] 87%|████████▋ | 479666/552076 [00:02<00:00, 85685.83it/s] 89%|████████▉ | 490776/552076 [00:02<00:00, 91997.30it/s] 91%|█████████ | 502942/552076 [00:03<00:00, 99256.92it/s] 93%|█████████▎| 513898/552076 [00:03<00:00, 102137.00it/s] 95%|█████████▌| 524760/552076 [00:03<00:00, 86358.46it/s]  97%|█████████▋| 535548/552076 [00:03<00:00, 91854.36it/s] 99%|█████████▉| 545440/552076 [00:03<00:00, 81725.75it/s]100%|██████████| 552076/552076 [00:03<00:00, 149412.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11675/552076 [00:00<00:04, 116743.71it/s]  4%|▍         | 23249/552076 [00:00<00:04, 116438.13it/s]  6%|▋         | 35040/552076 [00:00<00:04, 116873.20it/s]  9%|▊         | 47085/552076 [00:00<00:04, 117921.87it/s] 11%|█         | 59148/552076 [00:00<00:04, 118718.98it/s] 13%|█▎        | 71325/552076 [00:00<00:04, 119616.88it/s] 15%|█▌        | 83537/552076 [00:00<00:03, 120354.55it/s] 17%|█▋        | 95977/552076 [00:00<00:03, 121537.77it/s] 20%|█▉        | 108200/552076 [00:00<00:03, 121742.31it/s] 22%|██▏       | 120516/552076 [00:01<00:03, 122163.61it/s] 24%|██▍       | 132907/552076 [00:01<00:03, 122679.15it/s] 26%|██▋       | 145027/552076 [00:01<00:03, 122230.34it/s] 28%|██▊       | 157328/552076 [00:01<00:03, 122461.93it/s] 31%|███       | 169533/552076 [00:01<00:03, 122335.37it/s] 33%|███▎      | 182004/552076 [00:01<00:03, 123036.08it/s] 35%|███▌      | 194446/552076 [00:01<00:02, 123447.61it/s] 37%|███▋      | 206754/552076 [00:01<00:02, 120993.21it/s] 40%|███▉      | 219143/552076 [00:01<00:02, 121845.39it/s] 42%|████▏     | 231319/552076 [00:01<00:02, 121036.97it/s] 44%|████▍     | 243661/552076 [00:02<00:02, 121739.27it/s] 46%|████▋     | 255899/552076 [00:02<00:02, 121930.12it/s] 49%|████▊     | 268091/552076 [00:02<00:02, 121472.35it/s] 51%|█████     | 280438/552076 [00:02<00:02, 122063.99it/s] 53%|█████▎    | 292645/552076 [00:02<00:02, 121521.04it/s] 55%|█████▌    | 304823/552076 [00:02<00:02, 121597.69it/s] 57%|█████▋    | 317305/552076 [00:02<00:01, 122543.80it/s] 60%|█████▉    | 329562/552076 [00:02<00:01, 122417.31it/s] 62%|██████▏   | 341806/552076 [00:02<00:01, 120553.62it/s] 64%|██████▍   | 353869/552076 [00:02<00:01, 120110.79it/s] 66%|██████▋   | 365886/552076 [00:03<00:01, 99193.68it/s]  68%|██████▊   | 376414/552076 [00:03<00:01, 95350.75it/s] 70%|██████▉   | 386407/552076 [00:03<00:01, 95867.48it/s] 72%|███████▏  | 396315/552076 [00:03<00:01, 80117.44it/s] 73%|███████▎  | 405675/552076 [00:03<00:01, 83735.01it/s] 75%|███████▌  | 414554/552076 [00:03<00:01, 80902.58it/s] 77%|███████▋  | 424202/552076 [00:03<00:01, 85019.81it/s] 79%|███████▊  | 434656/552076 [00:03<00:01, 90064.15it/s] 80%|████████  | 443976/552076 [00:04<00:01, 90981.85it/s] 83%|████████▎ | 455906/552076 [00:04<00:00, 97956.46it/s] 85%|████████▍ | 467726/552076 [00:04<00:00, 103260.49it/s] 87%|████████▋ | 479676/552076 [00:04<00:00, 107649.09it/s] 89%|████████▉ | 491652/552076 [00:04<00:00, 111015.17it/s] 91%|█████████ | 503695/552076 [00:04<00:00, 113678.68it/s] 93%|█████████▎| 515773/552076 [00:04<00:00, 115717.95it/s] 96%|█████████▌| 527886/552076 [00:04<00:00, 117289.97it/s] 98%|█████████▊| 539704/552076 [00:04<00:00, 116946.04it/s]100%|█████████▉| 551623/552076 [00:04<00:00, 117609.35it/s]100%|██████████| 552076/552076 [00:04<00:00, 112498.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5686/552076 [00:00<00:10, 53102.74it/s]  2%|▏         | 13516/552076 [00:00<00:09, 58777.08it/s]  4%|▍         | 21898/552076 [00:00<00:08, 64563.11it/s]  6%|▌         | 30610/552076 [00:00<00:07, 69717.11it/s]  7%|▋         | 38612/552076 [00:00<00:07, 72066.98it/s]  8%|▊         | 46419/552076 [00:00<00:06, 73767.73it/s] 11%|█         | 58150/552076 [00:00<00:05, 83010.56it/s] 13%|█▎        | 70230/552076 [00:00<00:05, 91605.95it/s] 15%|█▍        | 82118/552076 [00:00<00:04, 98376.31it/s] 17%|█▋        | 94249/552076 [00:01<00:04, 104289.17it/s] 19%|█▉        | 106314/552076 [00:01<00:04, 108711.43it/s] 21%|██▏       | 117483/552076 [00:01<00:03, 109139.07it/s] 23%|██▎       | 128606/552076 [00:01<00:03, 108253.83it/s] 26%|██▌       | 140941/552076 [00:01<00:03, 112378.77it/s] 28%|██▊       | 153048/552076 [00:01<00:03, 114850.16it/s] 30%|██▉       | 165250/552076 [00:01<00:03, 116909.64it/s] 32%|███▏      | 177583/552076 [00:01<00:03, 118763.17it/s] 34%|███▍      | 189927/552076 [00:01<00:03, 120128.28it/s] 37%|███▋      | 201993/552076 [00:01<00:02, 120010.51it/s] 39%|███▉      | 214031/552076 [00:02<00:02, 118078.25it/s] 41%|████      | 225872/552076 [00:02<00:02, 117827.46it/s] 43%|████▎     | 238055/552076 [00:02<00:02, 119000.28it/s] 45%|████▌     | 250230/552076 [00:02<00:02, 119810.84it/s] 48%|████▊     | 262398/552076 [00:02<00:02, 120363.01it/s] 50%|████▉     | 274446/552076 [00:02<00:02, 119417.71it/s] 52%|█████▏    | 286397/552076 [00:02<00:02, 119339.04it/s] 54%|█████▍    | 298338/552076 [00:02<00:02, 118713.60it/s] 56%|█████▌    | 310215/552076 [00:02<00:02, 116627.52it/s] 58%|█████▊    | 322248/552076 [00:02<00:01, 117712.09it/s] 61%|██████    | 334221/552076 [00:03<00:01, 118308.48it/s] 63%|██████▎   | 346089/552076 [00:03<00:01, 118419.05it/s] 65%|██████▍   | 357937/552076 [00:03<00:01, 105653.86it/s] 67%|██████▋   | 369325/552076 [00:03<00:01, 107991.54it/s] 69%|██████▉   | 380320/552076 [00:03<00:01, 104439.03it/s] 71%|███████   | 392155/552076 [00:03<00:01, 108255.58it/s] 73%|███████▎  | 403130/552076 [00:03<00:01, 98247.40it/s]  75%|███████▌  | 414662/552076 [00:03<00:01, 102811.53it/s] 77%|███████▋  | 425196/552076 [00:03<00:01, 101845.78it/s] 79%|███████▉  | 435560/552076 [00:04<00:01, 96854.65it/s]  81%|████████  | 445422/552076 [00:04<00:01, 82581.72it/s] 82%|████████▏ | 454169/552076 [00:04<00:01, 82019.43it/s] 84%|████████▍ | 466045/552076 [00:04<00:00, 90409.80it/s] 86%|████████▌ | 475590/552076 [00:04<00:00, 89288.34it/s] 88%|████████▊ | 485982/552076 [00:04<00:00, 90762.86it/s] 90%|████████▉ | 496356/552076 [00:04<00:00, 94297.42it/s] 92%|█████████▏| 508322/552076 [00:04<00:00, 100700.47it/s] 94%|█████████▍| 519245/552076 [00:04<00:00, 103115.85it/s] 96%|█████████▌| 529760/552076 [00:05<00:00, 99605.10it/s]  98%|█████████▊| 539889/552076 [00:05<00:00, 84034.41it/s] 99%|█████████▉| 548827/552076 [00:05<00:00, 75190.52it/s]100%|██████████| 552076/552076 [00:05<00:00, 101695.21it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5962/552076 [00:00<00:09, 59615.22it/s]  2%|▏         | 12163/552076 [00:00<00:08, 60313.10it/s]  3%|▎         | 18036/552076 [00:00<00:09, 58219.83it/s]  4%|▍         | 23913/552076 [00:00<00:09, 58382.36it/s]  5%|▌         | 29041/552076 [00:00<00:09, 56052.24it/s]  7%|▋         | 37309/552076 [00:00<00:08, 60951.54it/s]  8%|▊         | 45861/552076 [00:00<00:07, 66402.46it/s]  9%|▉         | 52256/552076 [00:00<00:07, 63110.92it/s] 11%|█▏        | 63253/552076 [00:00<00:06, 72360.09it/s] 13%|█▎        | 73346/552076 [00:01<00:06, 79073.62it/s] 15%|█▍        | 81708/552076 [00:01<00:05, 79618.58it/s] 16%|█▋        | 89989/552076 [00:01<00:05, 78602.62it/s] 18%|█▊        | 98076/552076 [00:01<00:06, 70464.21it/s] 19%|█▉        | 107437/552076 [00:01<00:05, 76109.18it/s] 21%|██        | 115400/552076 [00:01<00:06, 72323.38it/s] 22%|██▏       | 123664/552076 [00:01<00:05, 75137.16it/s] 24%|██▍       | 132594/552076 [00:01<00:05, 78890.22it/s] 26%|██▌       | 144118/552076 [00:01<00:04, 87134.49it/s] 28%|██▊       | 154795/552076 [00:02<00:04, 92221.65it/s] 30%|███       | 166345/552076 [00:02<00:03, 98156.18it/s] 32%|███▏      | 177615/552076 [00:02<00:03, 102108.81it/s] 34%|███▍      | 189510/552076 [00:02<00:03, 106636.89it/s] 36%|███▋      | 201067/552076 [00:02<00:03, 109167.30it/s] 38%|███▊      | 212470/552076 [00:02<00:03, 110580.19it/s] 41%|████      | 223806/552076 [00:02<00:02, 111396.30it/s] 43%|████▎     | 235047/552076 [00:02<00:03, 84988.56it/s]  45%|████▍     | 246619/552076 [00:02<00:03, 92345.15it/s] 47%|████▋     | 257309/552076 [00:03<00:03, 96276.45it/s] 48%|████▊     | 267606/552076 [00:03<00:03, 91142.54it/s] 50%|█████     | 277246/552076 [00:03<00:03, 75796.41it/s] 52%|█████▏    | 285627/552076 [00:03<00:03, 69747.69it/s] 53%|█████▎    | 293258/552076 [00:03<00:03, 65918.24it/s] 54%|█████▍    | 300352/552076 [00:03<00:03, 63814.67it/s] 56%|█████▌    | 307100/552076 [00:03<00:03, 61341.45it/s] 57%|█████▋    | 313511/552076 [00:03<00:04, 59232.43it/s] 58%|█████▊    | 322029/552076 [00:04<00:03, 65188.68it/s] 60%|██████    | 332603/552076 [00:04<00:02, 73662.72it/s] 62%|██████▏   | 344180/552076 [00:04<00:02, 82684.51it/s] 65%|██████▍   | 356123/552076 [00:04<00:02, 91090.83it/s] 66%|██████▋   | 366495/552076 [00:04<00:01, 94543.26it/s] 68%|██████▊   | 376549/552076 [00:04<00:01, 94383.94it/s] 70%|███████   | 388130/552076 [00:04<00:01, 99928.93it/s] 73%|███████▎  | 400459/552076 [00:04<00:01, 105950.91it/s] 75%|███████▍  | 411915/552076 [00:04<00:01, 108392.84it/s] 77%|███████▋  | 423025/552076 [00:04<00:01, 105058.28it/s] 79%|███████▊  | 433743/552076 [00:05<00:01, 72815.98it/s]  80%|████████  | 442518/552076 [00:05<00:01, 65354.25it/s] 82%|████████▏ | 450243/552076 [00:05<00:01, 61254.25it/s] 83%|████████▎ | 457254/552076 [00:05<00:01, 56481.44it/s] 84%|████████▍ | 464099/552076 [00:05<00:01, 58676.84it/s] 85%|████████▌ | 470474/552076 [00:05<00:01, 59755.13it/s] 87%|████████▋ | 481315/552076 [00:05<00:01, 69051.76it/s] 89%|████████▉ | 491113/552076 [00:06<00:00, 75760.83it/s] 91%|█████████ | 501623/552076 [00:06<00:00, 82684.44it/s] 93%|█████████▎| 513854/552076 [00:06<00:00, 91585.57it/s] 95%|█████████▍| 523979/552076 [00:06<00:00, 94284.61it/s] 97%|█████████▋| 533984/552076 [00:06<00:00, 95313.57it/s] 99%|█████████▊| 543922/552076 [00:06<00:00, 93900.43it/s]100%|██████████| 552076/552076 [00:06<00:00, 82565.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4140/552076 [00:00<00:14, 37999.78it/s]  3%|▎         | 14875/552076 [00:00<00:11, 47134.51it/s]  5%|▍         | 26044/552076 [00:00<00:09, 57021.85it/s]  7%|▋         | 37626/552076 [00:00<00:07, 67265.11it/s]  9%|▉         | 49091/552076 [00:00<00:06, 76785.07it/s] 11%|█         | 58633/552076 [00:00<00:06, 81563.51it/s] 12%|█▏        | 67720/552076 [00:00<00:05, 83636.00it/s] 14%|█▍        | 76748/552076 [00:00<00:05, 83587.58it/s] 16%|█▌        | 89169/552076 [00:00<00:04, 92680.19it/s] 18%|█▊        | 100737/552076 [00:01<00:04, 98556.89it/s] 20%|██        | 112193/552076 [00:01<00:04, 102865.81it/s] 23%|██▎       | 124447/552076 [00:01<00:03, 108069.83it/s] 25%|██▍       | 136634/552076 [00:01<00:03, 111869.69it/s] 27%|██▋       | 148116/552076 [00:01<00:03, 104146.92it/s] 29%|██▉       | 158844/552076 [00:01<00:04, 92786.04it/s]  31%|███       | 169731/552076 [00:01<00:03, 97087.81it/s] 33%|███▎      | 179807/552076 [00:01<00:03, 93608.62it/s] 35%|███▍      | 191117/552076 [00:01<00:03, 98711.14it/s] 37%|███▋      | 203223/552076 [00:02<00:03, 104497.57it/s] 39%|███▉      | 213956/552076 [00:02<00:03, 105009.32it/s] 41%|████      | 225500/552076 [00:02<00:03, 107932.67it/s] 43%|████▎     | 236453/552076 [00:02<00:03, 95475.06it/s]  45%|████▍     | 248153/552076 [00:02<00:03, 101050.88it/s] 47%|████▋     | 258610/552076 [00:02<00:02, 98888.30it/s]  49%|████▉     | 270434/552076 [00:02<00:02, 103992.35it/s] 51%|█████     | 282021/552076 [00:02<00:02, 107291.24it/s] 53%|█████▎    | 293974/552076 [00:02<00:02, 110691.03it/s] 56%|█████▌    | 307287/552076 [00:02<00:02, 116585.92it/s] 58%|█████▊    | 319147/552076 [00:03<00:02, 112885.21it/s] 60%|█████▉    | 330602/552076 [00:03<00:02, 109772.44it/s] 62%|██████▏   | 342679/552076 [00:03<00:01, 112854.62it/s] 64%|██████▍   | 354081/552076 [00:03<00:02, 96828.23it/s]  66%|██████▌   | 364245/552076 [00:03<00:02, 82149.55it/s] 68%|██████▊   | 373180/552076 [00:03<00:02, 72152.58it/s] 69%|██████▉   | 381121/552076 [00:03<00:02, 68934.85it/s] 71%|███████   | 389779/552076 [00:04<00:02, 73422.89it/s] 73%|███████▎  | 401046/552076 [00:04<00:01, 81990.08it/s] 74%|███████▍  | 409886/552076 [00:04<00:01, 80593.00it/s] 76%|███████▌  | 418399/552076 [00:04<00:01, 81639.54it/s] 77%|███████▋  | 427577/552076 [00:04<00:01, 84293.86it/s] 79%|███████▉  | 436253/552076 [00:04<00:01, 82734.30it/s] 81%|████████  | 446653/552076 [00:04<00:01, 87434.74it/s] 83%|████████▎ | 455594/552076 [00:04<00:01, 79196.34it/s] 84%|████████▍ | 463801/552076 [00:04<00:01, 71909.08it/s] 85%|████████▌ | 471322/552076 [00:05<00:01, 65107.57it/s] 87%|████████▋ | 480517/552076 [00:05<00:01, 71355.36it/s] 88%|████████▊ | 488218/552076 [00:05<00:00, 72961.52it/s] 90%|█████████ | 498992/552076 [00:05<00:00, 80783.91it/s] 92%|█████████▏| 507548/552076 [00:05<00:00, 74308.11it/s] 94%|█████████▎| 516890/552076 [00:05<00:00, 79166.45it/s] 95%|█████████▌| 525588/552076 [00:05<00:00, 81358.35it/s] 97%|█████████▋| 534014/552076 [00:05<00:00, 74056.65it/s] 98%|█████████▊| 541750/552076 [00:05<00:00, 69311.66it/s] 99%|█████████▉| 548974/552076 [00:06<00:00, 68529.19it/s]100%|██████████| 552076/552076 [00:06<00:00, 90589.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3954/552076 [00:00<00:13, 39532.03it/s]  1%|▏         | 7503/552076 [00:00<00:14, 38224.30it/s]  2%|▏         | 11130/552076 [00:00<00:14, 37615.31it/s]  3%|▎         | 14728/552076 [00:00<00:14, 36102.68it/s]  3%|▎         | 18286/552076 [00:00<00:14, 35943.03it/s]  4%|▍         | 22050/552076 [00:00<00:14, 36434.71it/s]  5%|▍         | 25425/552076 [00:00<00:14, 35583.52it/s]  5%|▌         | 28837/552076 [00:00<00:14, 34924.72it/s]  6%|▌         | 32448/552076 [00:00<00:14, 35270.34it/s]  7%|▋         | 36472/552076 [00:01<00:14, 36419.76it/s]  7%|▋         | 40056/552076 [00:01<00:14, 36242.60it/s]  8%|▊         | 43692/552076 [00:01<00:14, 36277.26it/s]  9%|▊         | 47273/552076 [00:01<00:14, 35296.89it/s]  9%|▉         | 50952/552076 [00:01<00:14, 34905.07it/s] 10%|▉         | 54498/552076 [00:01<00:14, 35069.48it/s] 11%|█         | 57993/552076 [00:01<00:14, 33203.04it/s] 11%|█         | 61695/552076 [00:01<00:14, 34262.35it/s] 12%|█▏        | 65318/552076 [00:01<00:14, 33857.70it/s] 13%|█▎        | 69060/552076 [00:01<00:14, 34444.48it/s] 13%|█▎        | 72991/552076 [00:02<00:13, 35772.45it/s] 14%|█▍        | 76590/552076 [00:02<00:13, 35032.21it/s] 15%|█▍        | 80166/552076 [00:02<00:13, 35246.29it/s] 15%|█▌        | 83796/552076 [00:02<00:13, 35554.21it/s] 16%|█▌        | 87541/552076 [00:02<00:12, 36100.48it/s] 17%|█▋        | 91160/552076 [00:02<00:13, 35210.68it/s] 17%|█▋        | 94805/552076 [00:02<00:12, 35573.30it/s] 18%|█▊        | 98461/552076 [00:02<00:12, 35862.78it/s] 18%|█▊        | 102109/552076 [00:02<00:12, 34962.27it/s] 19%|█▉        | 105711/552076 [00:02<00:12, 35272.40it/s] 20%|█▉        | 109340/552076 [00:03<00:12, 35570.18it/s] 21%|██        | 113365/552076 [00:03<00:11, 36854.97it/s] 21%|██        | 117067/552076 [00:03<00:12, 34490.51it/s] 22%|██▏       | 120784/552076 [00:03<00:12, 34590.47it/s] 23%|██▎       | 124273/552076 [00:03<00:13, 31840.27it/s] 23%|██▎       | 127784/552076 [00:03<00:12, 32754.54it/s] 24%|██▎       | 131111/552076 [00:03<00:13, 31274.38it/s] 25%|██▍       | 135392/552076 [00:03<00:12, 33652.95it/s] 25%|██▌       | 139871/552076 [00:03<00:11, 36365.47it/s] 26%|██▌       | 143689/552076 [00:04<00:11, 36361.35it/s] 27%|██▋       | 148145/552076 [00:04<00:10, 38485.46it/s] 28%|██▊       | 152088/552076 [00:04<00:10, 37649.40it/s] 28%|██▊       | 155923/552076 [00:04<00:10, 37067.24it/s] 29%|██▉       | 160015/552076 [00:04<00:10, 37842.94it/s] 30%|██▉       | 163839/552076 [00:04<00:11, 35070.69it/s] 30%|███       | 167917/552076 [00:04<00:10, 36589.30it/s] 31%|███       | 171641/552076 [00:04<00:11, 33606.41it/s] 32%|███▏      | 176042/552076 [00:04<00:10, 36171.17it/s] 33%|███▎      | 180172/552076 [00:05<00:09, 37290.36it/s] 33%|███▎      | 184392/552076 [00:05<00:09, 38060.20it/s] 34%|███▍      | 189136/552076 [00:05<00:09, 40187.48it/s] 35%|███▌      | 194831/552076 [00:05<00:08, 43805.82it/s] 36%|███▌      | 199365/552076 [00:05<00:08, 42606.47it/s] 37%|███▋      | 203740/552076 [00:05<00:08, 41002.16it/s] 38%|███▊      | 207933/552076 [00:05<00:09, 36589.31it/s] 38%|███▊      | 212045/552076 [00:05<00:08, 37839.29it/s] 39%|███▉      | 215948/552076 [00:05<00:09, 37320.00it/s] 40%|███▉      | 219765/552076 [00:06<00:09, 34858.51it/s] 40%|████      | 223343/552076 [00:06<00:09, 34187.35it/s] 41%|████      | 227302/552076 [00:06<00:09, 34918.75it/s] 42%|████▏     | 231696/552076 [00:06<00:08, 37210.43it/s] 43%|████▎     | 235495/552076 [00:06<00:09, 34459.47it/s] 43%|████▎     | 239933/552076 [00:06<00:08, 36079.27it/s] 44%|████▍     | 243627/552076 [00:06<00:08, 35985.37it/s] 45%|████▍     | 247286/552076 [00:06<00:08, 35235.00it/s] 45%|████▌     | 250856/552076 [00:06<00:08, 33935.34it/s] 46%|████▌     | 254292/552076 [00:07<00:09, 30887.95it/s] 47%|████▋     | 258593/552076 [00:07<00:08, 33740.27it/s] 47%|████▋     | 262104/552076 [00:07<00:08, 33763.22it/s] 48%|████▊     | 265677/552076 [00:07<00:08, 34029.63it/s] 49%|████▉     | 269477/552076 [00:07<00:08, 34608.45it/s] 49%|████▉     | 272988/552076 [00:07<00:08, 31939.31it/s] 50%|█████     | 277493/552076 [00:07<00:07, 34682.48it/s] 51%|█████     | 281455/552076 [00:07<00:07, 35982.91it/s] 52%|█████▏    | 286339/552076 [00:07<00:06, 38725.78it/s] 53%|█████▎    | 290340/552076 [00:08<00:06, 38484.04it/s] 53%|█████▎    | 294279/552076 [00:08<00:06, 38003.87it/s] 54%|█████▍    | 298444/552076 [00:08<00:06, 38821.86it/s] 55%|█████▍    | 302376/552076 [00:08<00:06, 36706.05it/s] 55%|█████▌    | 306105/552076 [00:08<00:06, 35701.72it/s] 56%|█████▌    | 309723/552076 [00:08<00:07, 32068.23it/s] 57%|█████▋    | 313668/552076 [00:08<00:07, 33670.75it/s] 57%|█████▋    | 317128/552076 [00:08<00:07, 31307.89it/s] 58%|█████▊    | 320672/552076 [00:08<00:07, 31828.45it/s] 59%|█████▊    | 323926/552076 [00:09<00:07, 29706.09it/s] 59%|█████▉    | 327948/552076 [00:09<00:07, 31935.44it/s] 60%|██████    | 332180/552076 [00:09<00:06, 34472.95it/s] 61%|██████    | 335757/552076 [00:09<00:06, 32657.61it/s] 61%|██████▏   | 339134/552076 [00:09<00:06, 32778.75it/s] 62%|██████▏   | 343303/552076 [00:09<00:05, 35024.47it/s] 63%|██████▎   | 347277/552076 [00:09<00:05, 35610.09it/s] 64%|██████▎   | 351423/552076 [00:09<00:05, 37098.35it/s] 64%|██████▍   | 355199/552076 [00:09<00:05, 36019.59it/s] 65%|██████▌   | 358854/552076 [00:10<00:05, 33179.91it/s] 66%|██████▌   | 362949/552076 [00:10<00:05, 35182.07it/s] 66%|██████▋   | 366698/552076 [00:10<00:05, 35843.40it/s] 67%|██████▋   | 370667/552076 [00:10<00:04, 36915.77it/s] 68%|██████▊   | 374413/552076 [00:10<00:04, 36148.17it/s] 68%|██████▊   | 378070/552076 [00:10<00:04, 35376.86it/s] 69%|██████▉   | 382433/552076 [00:10<00:04, 36499.82it/s] 70%|██████▉   | 386115/552076 [00:10<00:04, 35776.11it/s] 71%|███████   | 390169/552076 [00:10<00:04, 35805.04it/s] 71%|███████▏  | 393768/552076 [00:11<00:04, 34801.26it/s] 72%|███████▏  | 397267/552076 [00:11<00:04, 34800.82it/s] 73%|███████▎  | 400961/552076 [00:11<00:04, 33497.27it/s] 73%|███████▎  | 404331/552076 [00:11<00:04, 33115.28it/s] 74%|███████▍  | 407766/552076 [00:11<00:04, 32916.22it/s] 74%|███████▍  | 411069/552076 [00:11<00:04, 32609.41it/s] 75%|███████▌  | 414927/552076 [00:11<00:04, 33783.94it/s] 76%|███████▌  | 419327/552076 [00:11<00:03, 36312.92it/s] 77%|███████▋  | 423024/552076 [00:11<00:03, 33532.62it/s] 77%|███████▋  | 426875/552076 [00:12<00:03, 34500.05it/s] 78%|███████▊  | 430394/552076 [00:12<00:03, 34270.82it/s] 79%|███████▊  | 433870/552076 [00:12<00:03, 31492.31it/s] 79%|███████▉  | 437098/552076 [00:12<00:03, 29506.11it/s] 80%|███████▉  | 440129/552076 [00:12<00:03, 28111.71it/s] 80%|████████  | 443011/552076 [00:12<00:03, 27935.25it/s] 81%|████████  | 446408/552076 [00:12<00:03, 29457.40it/s] 81%|████████▏ | 449411/552076 [00:12<00:03, 28761.02it/s] 82%|████████▏ | 452407/552076 [00:12<00:03, 29110.32it/s] 83%|████████▎ | 455670/552076 [00:13<00:03, 29857.43it/s] 83%|████████▎ | 460358/552076 [00:13<00:02, 33507.37it/s] 84%|████████▍ | 463874/552076 [00:13<00:02, 32356.78it/s] 85%|████████▍ | 467234/552076 [00:13<00:02, 31907.47it/s] 85%|████████▌ | 470513/552076 [00:13<00:02, 29682.01it/s] 86%|████████▌ | 474662/552076 [00:13<00:02, 32065.54it/s] 87%|████████▋ | 478075/552076 [00:13<00:02, 32656.28it/s] 87%|████████▋ | 481472/552076 [00:13<00:02, 33039.22it/s] 88%|████████▊ | 484838/552076 [00:13<00:02, 33073.87it/s] 88%|████████▊ | 488376/552076 [00:13<00:01, 33732.92it/s] 89%|████████▉ | 492460/552076 [00:14<00:01, 34029.98it/s] 90%|████████▉ | 496300/552076 [00:14<00:01, 35169.83it/s] 91%|█████████ | 501245/552076 [00:14<00:01, 38505.51it/s] 92%|█████████▏| 505209/552076 [00:14<00:01, 36516.33it/s] 92%|█████████▏| 508962/552076 [00:14<00:01, 33623.04it/s] 93%|█████████▎| 512440/552076 [00:14<00:01, 32128.10it/s] 94%|█████████▎| 516552/552076 [00:14<00:01, 34331.05it/s] 94%|█████████▍| 520487/552076 [00:14<00:00, 35696.76it/s] 95%|█████████▍| 524147/552076 [00:14<00:00, 35806.32it/s] 96%|█████████▌| 528127/552076 [00:15<00:00, 36916.96it/s] 96%|█████████▋| 532081/552076 [00:15<00:00, 36373.55it/s] 97%|█████████▋| 535758/552076 [00:15<00:00, 33534.75it/s] 98%|█████████▊| 539183/552076 [00:15<00:00, 31728.19it/s] 98%|█████████▊| 542426/552076 [00:15<00:00, 31037.66it/s] 99%|█████████▉| 546895/552076 [00:15<00:00, 33707.24it/s]100%|█████████▉| 551116/552076 [00:15<00:00, 34996.77it/s]100%|██████████| 552076/552076 [00:15<00:00, 34952.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 2792/552076 [00:00<00:19, 27917.23it/s]  1%|          | 5349/552076 [00:00<00:20, 27121.79it/s]  1%|▏         | 8141/552076 [00:00<00:19, 27355.57it/s]  2%|▏         | 10917/552076 [00:00<00:19, 27474.71it/s]  2%|▏         | 13639/552076 [00:00<00:19, 26969.33it/s]  3%|▎         | 17706/552076 [00:00<00:17, 30001.12it/s]  4%|▍         | 21024/552076 [00:00<00:17, 30888.12it/s]  4%|▍         | 24050/552076 [00:00<00:18, 29271.42it/s]  5%|▍         | 27251/552076 [00:00<00:17, 29797.07it/s]  6%|▌         | 32467/552076 [00:01<00:15, 34181.23it/s]  7%|▋         | 36075/552076 [00:01<00:14, 34509.58it/s]  7%|▋         | 40585/552076 [00:01<00:13, 37124.75it/s]  8%|▊         | 44447/552076 [00:01<00:13, 37139.11it/s]  9%|▊         | 48266/552076 [00:01<00:13, 37330.81it/s]  9%|▉         | 52073/552076 [00:01<00:13, 36509.19it/s] 10%|█         | 55955/552076 [00:01<00:13, 36525.75it/s] 11%|█         | 59647/552076 [00:01<00:13, 36044.77it/s] 11%|█▏        | 63281/552076 [00:01<00:14, 32622.23it/s] 12%|█▏        | 67514/552076 [00:01<00:14, 34432.91it/s] 13%|█▎        | 71371/552076 [00:02<00:13, 35088.84it/s] 14%|█▎        | 75031/552076 [00:02<00:13, 34512.38it/s] 14%|█▍        | 78528/552076 [00:02<00:14, 32852.17it/s] 15%|█▍        | 82735/552076 [00:02<00:13, 35162.79it/s] 16%|█▌        | 86331/552076 [00:02<00:14, 31501.19it/s] 16%|█▋        | 90556/552076 [00:02<00:14, 32328.55it/s] 17%|█▋        | 93884/552076 [00:02<00:14, 31885.69it/s] 18%|█▊        | 97141/552076 [00:02<00:15, 30185.45it/s] 18%|█▊        | 100356/552076 [00:03<00:14, 30749.00it/s] 19%|█▉        | 104310/552076 [00:03<00:13, 32945.05it/s] 20%|█▉        | 107871/552076 [00:03<00:13, 33567.68it/s] 20%|██        | 111286/552076 [00:03<00:13, 33568.31it/s] 21%|██        | 114975/552076 [00:03<00:12, 33846.81it/s] 21%|██▏       | 118389/552076 [00:03<00:13, 33227.75it/s] 22%|██▏       | 121880/552076 [00:03<00:12, 33196.25it/s] 23%|██▎       | 125459/552076 [00:03<00:12, 33933.74it/s] 23%|██▎       | 129087/552076 [00:03<00:12, 34604.68it/s] 24%|██▍       | 132562/552076 [00:03<00:13, 31289.18it/s] 25%|██▍       | 136554/552076 [00:04<00:12, 33400.31it/s] 25%|██▌       | 139983/552076 [00:04<00:12, 33022.37it/s] 26%|██▌       | 143349/552076 [00:04<00:12, 33189.83it/s] 27%|██▋       | 146713/552076 [00:04<00:13, 30172.36it/s] 27%|██▋       | 149815/552076 [00:04<00:13, 29995.55it/s] 28%|██▊       | 152874/552076 [00:04<00:14, 28502.65it/s] 28%|██▊       | 156009/552076 [00:04<00:13, 29300.13it/s] 29%|██▉       | 158985/552076 [00:04<00:15, 25998.59it/s] 29%|██▉       | 161956/552076 [00:04<00:14, 27009.64it/s] 30%|███       | 166206/552076 [00:05<00:12, 30325.16it/s] 31%|███       | 169696/552076 [00:05<00:12, 31565.84it/s] 31%|███▏      | 172999/552076 [00:05<00:12, 29671.57it/s] 32%|███▏      | 176440/552076 [00:05<00:12, 29856.09it/s] 33%|███▎      | 179514/552076 [00:05<00:13, 28409.44it/s] 33%|███▎      | 182481/552076 [00:05<00:12, 28775.97it/s] 34%|███▎      | 185414/552076 [00:05<00:12, 28672.12it/s] 34%|███▍      | 189351/552076 [00:05<00:11, 31216.00it/s] 35%|███▍      | 192714/552076 [00:05<00:11, 31902.67it/s] 36%|███▌      | 197067/552076 [00:06<00:10, 34681.41it/s] 36%|███▋      | 200655/552076 [00:06<00:10, 32815.48it/s] 37%|███▋      | 204041/552076 [00:06<00:10, 33039.84it/s] 38%|███▊      | 207881/552076 [00:06<00:09, 34483.31it/s] 38%|███▊      | 211398/552076 [00:06<00:10, 33149.50it/s] 39%|███▉      | 214894/552076 [00:06<00:10, 32129.55it/s] 40%|███▉      | 219180/552076 [00:06<00:09, 34738.64it/s] 40%|████      | 222833/552076 [00:06<00:09, 33424.90it/s] 41%|████      | 226953/552076 [00:06<00:09, 35345.85it/s] 42%|████▏     | 230572/552076 [00:07<00:09, 33010.92it/s] 42%|████▏     | 234475/552076 [00:07<00:09, 34285.99it/s] 43%|████▎     | 238136/552076 [00:07<00:08, 34950.97it/s] 44%|████▍     | 241687/552076 [00:07<00:09, 33714.34it/s] 44%|████▍     | 245526/552076 [00:07<00:08, 34586.03it/s] 45%|████▌     | 249865/552076 [00:07<00:08, 36827.11it/s] 46%|████▌     | 253616/552076 [00:07<00:09, 32999.54it/s] 47%|████▋     | 257039/552076 [00:07<00:08, 32872.33it/s] 47%|████▋     | 260889/552076 [00:07<00:08, 34041.37it/s] 48%|████▊     | 264364/552076 [00:08<00:08, 34055.91it/s] 49%|████▊     | 267925/552076 [00:08<00:08, 34485.15it/s] 49%|████▉     | 271410/552076 [00:08<00:08, 33957.86it/s] 50%|████▉     | 275652/552076 [00:08<00:07, 36118.49it/s] 51%|█████     | 279321/552076 [00:08<00:08, 33780.02it/s] 51%|█████     | 282909/552076 [00:08<00:07, 34382.74it/s] 52%|█████▏    | 287488/552076 [00:08<00:07, 37159.67it/s] 53%|█████▎    | 291332/552076 [00:08<00:07, 35938.48it/s] 53%|█████▎    | 295006/552076 [00:08<00:07, 34333.69it/s] 54%|█████▍    | 298510/552076 [00:09<00:07, 32465.65it/s] 55%|█████▍    | 301828/552076 [00:09<00:08, 31111.22it/s] 56%|█████▌    | 306884/552076 [00:09<00:07, 34989.50it/s] 56%|█████▋    | 311656/552076 [00:09<00:06, 37959.82it/s] 57%|█████▋    | 317157/552076 [00:09<00:05, 41537.76it/s] 58%|█████▊    | 321562/552076 [00:09<00:06, 37955.13it/s] 59%|█████▉    | 325594/552076 [00:09<00:06, 35676.07it/s] 60%|█████▉    | 329355/552076 [00:09<00:06, 35193.24it/s] 60%|██████    | 333011/552076 [00:09<00:06, 35570.97it/s] 61%|██████    | 336665/552076 [00:10<00:06, 35847.27it/s] 62%|██████▏   | 340344/552076 [00:10<00:05, 36124.07it/s] 62%|██████▏   | 344005/552076 [00:10<00:05, 34956.58it/s] 63%|██████▎   | 347700/552076 [00:10<00:05, 35531.34it/s] 64%|██████▎   | 351315/552076 [00:10<00:05, 35713.27it/s] 64%|██████▍   | 354909/552076 [00:10<00:05, 34402.77it/s] 65%|██████▍   | 358743/552076 [00:10<00:05, 35495.22it/s] 66%|██████▌   | 362320/552076 [00:10<00:05, 34914.80it/s] 66%|██████▋   | 365930/552076 [00:10<00:05, 35262.04it/s] 67%|██████▋   | 369472/552076 [00:10<00:05, 34314.28it/s] 68%|██████▊   | 372922/552076 [00:11<00:05, 34369.55it/s] 68%|██████▊   | 376493/552076 [00:11<00:05, 34759.24it/s] 69%|██████▉   | 380299/552076 [00:11<00:04, 35687.42it/s] 70%|██████▉   | 383912/552076 [00:11<00:04, 35019.97it/s] 70%|███████   | 387603/552076 [00:11<00:04, 35565.00it/s] 71%|███████   | 391348/552076 [00:11<00:04, 36109.09it/s] 72%|███████▏  | 395937/552076 [00:11<00:04, 38575.22it/s] 72%|███████▏  | 399946/552076 [00:11<00:03, 38229.72it/s] 73%|███████▎  | 403807/552076 [00:11<00:03, 38175.80it/s] 74%|███████▍  | 407652/552076 [00:11<00:03, 37956.92it/s] 75%|███████▍  | 411467/552076 [00:12<00:03, 36555.26it/s] 75%|███████▌  | 415147/552076 [00:12<00:03, 36585.53it/s] 76%|███████▌  | 418823/552076 [00:12<00:03, 35564.66it/s] 77%|███████▋  | 422398/552076 [00:12<00:03, 35350.66it/s] 77%|███████▋  | 426135/552076 [00:12<00:03, 35931.64it/s] 78%|███████▊  | 429773/552076 [00:12<00:03, 35231.27it/s] 79%|███████▊  | 433564/552076 [00:12<00:03, 35614.42it/s] 79%|███████▉  | 437474/552076 [00:12<00:03, 36592.82it/s] 80%|███████▉  | 441323/552076 [00:12<00:02, 37140.97it/s] 81%|████████  | 445049/552076 [00:13<00:02, 36710.12it/s] 81%|████████▏ | 448732/552076 [00:13<00:02, 35498.88it/s] 82%|████████▏ | 452297/552076 [00:13<00:03, 31793.79it/s] 83%|████████▎ | 456380/552076 [00:13<00:02, 34054.69it/s] 83%|████████▎ | 459889/552076 [00:13<00:02, 33973.94it/s] 84%|████████▍ | 463925/552076 [00:13<00:02, 35665.75it/s] 85%|████████▍ | 467565/552076 [00:13<00:02, 33533.85it/s] 85%|████████▌ | 470996/552076 [00:13<00:02, 30733.59it/s] 86%|████████▌ | 475368/552076 [00:13<00:02, 33739.77it/s] 87%|████████▋ | 479242/552076 [00:14<00:02, 34361.76it/s] 87%|████████▋ | 482906/552076 [00:14<00:02, 33487.89it/s] 88%|████████▊ | 486340/552076 [00:14<00:02, 30233.30it/s] 89%|████████▊ | 489483/552076 [00:14<00:02, 28145.79it/s] 89%|████████▉ | 492411/552076 [00:14<00:02, 27925.47it/s] 90%|████████▉ | 495688/552076 [00:14<00:01, 29220.98it/s] 90%|█████████ | 498987/552076 [00:14<00:01, 30257.48it/s] 91%|█████████ | 502807/552076 [00:14<00:01, 32268.96it/s] 92%|█████████▏| 506113/552076 [00:14<00:01, 30645.42it/s] 92%|█████████▏| 509752/552076 [00:15<00:01, 31358.42it/s] 93%|█████████▎| 513494/552076 [00:15<00:01, 32022.09it/s] 94%|█████████▎| 517348/552076 [00:15<00:01, 32752.99it/s] 94%|█████████▍| 520657/552076 [00:15<00:00, 32775.20it/s] 95%|█████████▌| 524652/552076 [00:15<00:00, 34538.69it/s] 96%|█████████▌| 529003/552076 [00:15<00:00, 36815.47it/s] 97%|█████████▋| 532756/552076 [00:15<00:00, 33650.03it/s] 97%|█████████▋| 536224/552076 [00:15<00:00, 29838.95it/s] 98%|█████████▊| 539360/552076 [00:15<00:00, 28910.54it/s] 98%|█████████▊| 542364/552076 [00:16<00:00, 28942.59it/s] 99%|█████████▉| 546298/552076 [00:16<00:00, 31434.61it/s]100%|█████████▉| 550488/552076 [00:16<00:00, 33979.74it/s]100%|██████████| 552076/552076 [00:16<00:00, 33741.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3108/552076 [00:00<00:18, 30473.58it/s]  1%|▏         | 6902/552076 [00:00<00:17, 31908.97it/s]  2%|▏         | 11271/552076 [00:00<00:15, 33891.07it/s]  3%|▎         | 15469/552076 [00:00<00:14, 35970.12it/s]  3%|▎         | 18402/552076 [00:00<00:16, 32876.24it/s]  4%|▍         | 21794/552076 [00:00<00:15, 33181.41it/s]  4%|▍         | 24824/552076 [00:00<00:17, 30131.77it/s]  5%|▌         | 28704/552076 [00:00<00:16, 31986.59it/s]  6%|▌         | 31846/552076 [00:00<00:16, 30957.66it/s]  6%|▋         | 35669/552076 [00:01<00:15, 32830.67it/s]  7%|▋         | 40332/552076 [00:01<00:14, 35816.04it/s]  8%|▊         | 45107/552076 [00:01<00:13, 37375.89it/s]  9%|▉         | 50484/552076 [00:01<00:12, 40636.21it/s] 10%|█         | 55983/552076 [00:01<00:11, 43812.85it/s] 11%|█         | 61046/552076 [00:01<00:10, 45656.34it/s] 12%|█▏        | 66177/552076 [00:01<00:10, 47216.32it/s] 13%|█▎        | 71145/552076 [00:01<00:10, 46794.03it/s] 14%|█▍        | 76335/552076 [00:01<00:09, 48216.85it/s] 15%|█▍        | 81629/552076 [00:01<00:09, 49541.23it/s] 16%|█▌        | 87039/552076 [00:02<00:09, 50825.32it/s] 17%|█▋        | 92168/552076 [00:02<00:09, 49591.17it/s] 18%|█▊        | 97258/552076 [00:02<00:09, 49976.64it/s] 19%|█▊        | 102598/552076 [00:02<00:08, 50955.49it/s] 20%|█▉        | 107883/552076 [00:02<00:08, 50502.89it/s] 21%|██        | 113295/552076 [00:02<00:08, 51535.92it/s] 21%|██▏       | 118467/552076 [00:02<00:08, 51212.23it/s] 22%|██▏       | 123712/552076 [00:02<00:08, 51577.32it/s] 23%|██▎       | 128880/552076 [00:02<00:08, 50598.94it/s] 24%|██▍       | 134111/552076 [00:03<00:08, 50592.11it/s] 25%|██▌       | 139369/552076 [00:03<00:08, 51171.96it/s] 26%|██▌       | 144552/552076 [00:03<00:08, 50294.45it/s] 27%|██▋       | 149878/552076 [00:03<00:07, 51147.98it/s] 28%|██▊       | 155003/552076 [00:03<00:07, 50822.78it/s] 29%|██▉       | 160093/552076 [00:03<00:08, 44399.10it/s] 30%|██▉       | 164685/552076 [00:03<00:09, 42200.21it/s] 31%|███       | 169034/552076 [00:03<00:10, 35235.54it/s] 31%|███▏      | 173489/552076 [00:03<00:10, 37593.44it/s] 32%|███▏      | 177491/552076 [00:04<00:10, 36124.37it/s] 33%|███▎      | 181944/552076 [00:04<00:09, 38292.42it/s] 34%|███▎      | 185936/552076 [00:04<00:11, 30886.03it/s] 34%|███▍      | 189369/552076 [00:04<00:13, 27796.02it/s] 35%|███▍      | 192462/552076 [00:04<00:12, 28666.38it/s] 36%|███▌      | 196223/552076 [00:04<00:11, 30868.50it/s] 36%|███▌      | 199510/552076 [00:04<00:12, 27468.36it/s] 37%|███▋      | 202467/552076 [00:04<00:12, 27205.72it/s] 37%|███▋      | 205870/552076 [00:05<00:12, 28839.26it/s] 38%|███▊      | 208928/552076 [00:05<00:11, 29339.78it/s] 39%|███▊      | 212720/552076 [00:05<00:10, 31475.91it/s] 39%|███▉      | 215977/552076 [00:05<00:10, 31104.17it/s] 40%|███▉      | 219646/552076 [00:05<00:10, 32592.73it/s] 40%|████      | 223336/552076 [00:05<00:09, 33775.42it/s] 41%|████▏     | 227837/552076 [00:05<00:08, 36508.67it/s] 42%|████▏     | 231595/552076 [00:05<00:09, 34663.39it/s] 43%|████▎     | 235808/552076 [00:05<00:08, 36139.04it/s] 43%|████▎     | 239505/552076 [00:06<00:08, 35744.14it/s] 44%|████▍     | 243568/552076 [00:06<00:08, 37081.30it/s] 45%|████▍     | 247372/552076 [00:06<00:08, 36666.37it/s] 45%|████▌     | 251078/552076 [00:06<00:08, 35768.53it/s] 46%|████▌     | 254687/552076 [00:06<00:09, 32650.43it/s] 47%|████▋     | 258052/552076 [00:06<00:08, 32833.11it/s] 47%|████▋     | 261552/552076 [00:06<00:08, 33454.30it/s] 48%|████▊     | 264938/552076 [00:06<00:09, 31013.16it/s] 49%|████▊     | 268860/552076 [00:06<00:08, 33090.24it/s] 49%|████▉     | 272252/552076 [00:07<00:08, 31570.59it/s] 50%|████▉     | 275482/552076 [00:07<00:08, 31216.93it/s] 50%|█████     | 278656/552076 [00:07<00:08, 31330.95it/s] 51%|█████     | 282919/552076 [00:07<00:07, 33938.21it/s] 52%|█████▏    | 286402/552076 [00:07<00:07, 33972.15it/s] 53%|█████▎    | 290068/552076 [00:07<00:07, 34621.37it/s] 53%|█████▎    | 293855/552076 [00:07<00:07, 35535.28it/s] 54%|█████▍    | 297726/552076 [00:07<00:06, 36430.99it/s] 55%|█████▍    | 301402/552076 [00:07<00:07, 34962.41it/s] 55%|█████▌    | 305101/552076 [00:07<00:06, 35546.70it/s] 56%|█████▌    | 308731/552076 [00:08<00:06, 34967.47it/s] 57%|█████▋    | 312384/552076 [00:08<00:06, 35307.78it/s] 57%|█████▋    | 316172/552076 [00:08<00:06, 36040.69it/s] 58%|█████▊    | 319963/552076 [00:08<00:06, 36581.12it/s] 59%|█████▊    | 323634/552076 [00:08<00:06, 35783.47it/s] 59%|█████▉    | 327316/552076 [00:08<00:06, 35760.55it/s] 60%|█████▉    | 331065/552076 [00:08<00:06, 36262.18it/s] 61%|██████    | 334799/552076 [00:08<00:06, 36071.86it/s] 61%|██████▏   | 338607/552076 [00:08<00:05, 36651.13it/s] 62%|██████▏   | 342496/552076 [00:08<00:05, 36932.57it/s] 63%|██████▎   | 346195/552076 [00:09<00:05, 35657.32it/s] 63%|██████▎   | 350299/552076 [00:09<00:05, 36752.03it/s] 65%|██████▌   | 358945/552076 [00:09<00:04, 44412.06it/s] 66%|██████▌   | 364124/552076 [00:09<00:04, 44400.30it/s] 67%|██████▋   | 369081/552076 [00:09<00:04, 43175.13it/s] 68%|██████▊   | 373768/552076 [00:09<00:04, 41155.77it/s] 68%|██████▊   | 378162/552076 [00:09<00:04, 35831.94it/s] 69%|██████▉   | 382064/552076 [00:09<00:05, 32951.51it/s] 71%|███████▏  | 394375/552076 [00:10<00:03, 42229.17it/s] 74%|███████▎  | 405938/552076 [00:10<00:02, 52162.26it/s] 76%|███████▌  | 417283/552076 [00:10<00:02, 62250.76it/s] 78%|███████▊  | 429040/552076 [00:10<00:01, 72481.01it/s] 80%|███████▉  | 440591/552076 [00:10<00:01, 81599.17it/s] 82%|████████▏ | 451763/552076 [00:10<00:01, 88778.57it/s] 84%|████████▍ | 463323/552076 [00:10<00:00, 95419.05it/s] 86%|████████▌ | 474527/552076 [00:10<00:00, 99861.73it/s] 88%|████████▊ | 486033/552076 [00:10<00:00, 103980.38it/s] 90%|█████████ | 497154/552076 [00:11<00:00, 87826.51it/s]  92%|█████████▏| 506873/552076 [00:11<00:00, 86356.72it/s] 94%|█████████▍| 518926/552076 [00:11<00:00, 94384.83it/s] 96%|█████████▌| 529050/552076 [00:11<00:00, 88665.59it/s] 98%|█████████▊| 538467/552076 [00:11<00:00, 85115.59it/s]100%|█████████▉| 550688/552076 [00:11<00:00, 93641.58it/s]100%|██████████| 552076/552076 [00:11<00:00, 47503.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9253/552076 [00:00<00:05, 92525.68it/s]  4%|▍         | 21093/552076 [00:00<00:05, 99017.03it/s]  6%|▌         | 32147/552076 [00:00<00:05, 101862.63it/s]  8%|▊         | 43020/552076 [00:00<00:04, 103829.38it/s] 10%|▉         | 54279/552076 [00:00<00:04, 106309.23it/s] 12%|█▏        | 65316/552076 [00:00<00:04, 107495.32it/s] 14%|█▍        | 77545/552076 [00:00<00:04, 111543.43it/s] 16%|█▌        | 89708/552076 [00:00<00:04, 114386.91it/s] 18%|█▊        | 101982/552076 [00:00<00:03, 116769.41it/s] 21%|██        | 114265/552076 [00:01<00:03, 118522.73it/s] 23%|██▎       | 126524/552076 [00:01<00:03, 119712.90it/s] 25%|██▌       | 138351/552076 [00:01<00:03, 118900.12it/s] 27%|██▋       | 150457/552076 [00:01<00:03, 119537.37it/s] 29%|██▉       | 162342/552076 [00:01<00:03, 113610.32it/s] 31%|███▏      | 173872/552076 [00:01<00:03, 114109.94it/s] 34%|███▎      | 185293/552076 [00:01<00:03, 113295.93it/s] 36%|███▌      | 196631/552076 [00:01<00:03, 111137.48it/s] 38%|███▊      | 207760/552076 [00:01<00:03, 109766.75it/s] 40%|███▉      | 218751/552076 [00:01<00:03, 102082.57it/s] 42%|████▏     | 229299/552076 [00:02<00:03, 103076.25it/s] 44%|████▎     | 240811/552076 [00:02<00:02, 106413.69it/s] 46%|████▌     | 251540/552076 [00:02<00:02, 105760.82it/s] 47%|████▋     | 262178/552076 [00:02<00:02, 105540.33it/s] 49%|████▉     | 272802/552076 [00:02<00:02, 105746.96it/s] 52%|█████▏    | 284988/552076 [00:02<00:02, 110112.65it/s] 54%|█████▎    | 296068/552076 [00:02<00:02, 108514.55it/s] 56%|█████▌    | 307353/552076 [00:02<00:02, 109778.00it/s] 58%|█████▊    | 319467/552076 [00:02<00:02, 112954.48it/s] 60%|█████▉    | 330814/552076 [00:02<00:01, 113050.40it/s] 62%|██████▏   | 342155/552076 [00:03<00:01, 113107.70it/s] 64%|██████▍   | 353491/552076 [00:03<00:02, 88112.95it/s]  66%|██████▌   | 363171/552076 [00:03<00:02, 67793.22it/s] 67%|██████▋   | 371269/552076 [00:03<00:02, 64300.86it/s] 69%|██████▊   | 378660/552076 [00:03<00:02, 62909.37it/s] 70%|██████▉   | 385630/552076 [00:03<00:02, 59651.38it/s] 71%|███████   | 392106/552076 [00:03<00:02, 57859.78it/s] 72%|███████▏  | 398261/552076 [00:04<00:02, 58022.04it/s] 73%|███████▎  | 405526/552076 [00:04<00:02, 61752.12it/s] 76%|███████▌  | 417713/552076 [00:04<00:01, 72477.16it/s] 77%|███████▋  | 426970/552076 [00:04<00:01, 77524.12it/s] 79%|███████▉  | 436066/552076 [00:04<00:01, 81117.98it/s] 81%|████████  | 444733/552076 [00:04<00:01, 74738.45it/s] 82%|████████▏ | 454279/552076 [00:04<00:01, 79843.73it/s] 84%|████████▍ | 462702/552076 [00:04<00:01, 73506.98it/s] 86%|████████▌ | 473494/552076 [00:04<00:00, 80501.32it/s] 87%|████████▋ | 482028/552076 [00:05<00:00, 78275.49it/s] 90%|████████▉ | 494408/552076 [00:05<00:00, 87980.58it/s] 91%|█████████▏| 503848/552076 [00:05<00:00, 89552.33it/s] 93%|█████████▎| 513260/552076 [00:05<00:00, 90644.67it/s] 95%|█████████▍| 522647/552076 [00:05<00:00, 81685.55it/s] 97%|█████████▋| 534982/552076 [00:05<00:00, 90894.72it/s] 99%|█████████▊| 544676/552076 [00:05<00:00, 91928.13it/s]100%|██████████| 552076/552076 [00:05<00:00, 94895.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6384/552076 [00:00<00:08, 62760.61it/s]  2%|▏         | 13393/552076 [00:00<00:08, 64792.81it/s]  4%|▍         | 23916/552076 [00:00<00:07, 73234.60it/s]  6%|▌         | 32512/552076 [00:00<00:06, 76637.81it/s]  8%|▊         | 41960/552076 [00:00<00:06, 81239.61it/s]  9%|▉         | 49556/552076 [00:00<00:06, 79578.59it/s] 11%|█         | 61171/552076 [00:00<00:05, 87878.83it/s] 13%|█▎        | 71488/552076 [00:00<00:05, 91967.36it/s] 15%|█▍        | 81409/552076 [00:00<00:05, 92708.16it/s] 16%|█▋        | 90770/552076 [00:01<00:04, 92974.86it/s] 19%|█▊        | 103124/552076 [00:01<00:04, 100428.70it/s] 21%|██        | 113332/552076 [00:01<00:04, 100301.51it/s] 22%|██▏       | 123478/552076 [00:01<00:04, 92391.65it/s]  24%|██▍       | 134896/552076 [00:01<00:04, 98000.95it/s] 26%|██▋       | 144932/552076 [00:01<00:04, 84316.44it/s] 28%|██▊       | 156246/552076 [00:01<00:04, 91293.34it/s] 30%|███       | 165893/552076 [00:01<00:04, 85585.63it/s] 32%|███▏      | 177438/552076 [00:01<00:04, 92786.07it/s] 34%|███▍      | 187197/552076 [00:02<00:04, 86955.65it/s] 36%|███▌      | 197278/552076 [00:02<00:03, 90694.59it/s] 37%|███▋      | 206677/552076 [00:02<00:03, 88617.68it/s] 39%|███▉      | 216614/552076 [00:02<00:03, 91588.71it/s] 41%|████      | 225967/552076 [00:02<00:03, 91326.74it/s] 43%|████▎     | 236715/552076 [00:02<00:03, 95637.76it/s] 46%|████▌     | 251740/552076 [00:02<00:02, 107342.23it/s] 48%|████▊     | 266156/552076 [00:02<00:02, 116248.49it/s] 50%|█████     | 278395/552076 [00:02<00:02, 113866.16it/s] 54%|█████▎    | 296182/552076 [00:02<00:02, 127644.86it/s] 57%|█████▋    | 312590/552076 [00:03<00:01, 136754.32it/s] 59%|█████▉    | 327043/552076 [00:03<00:01, 130120.38it/s] 62%|██████▏   | 340667/552076 [00:03<00:02, 103886.76it/s] 64%|██████▍   | 352957/552076 [00:03<00:01, 108942.71it/s] 66%|██████▌   | 364804/552076 [00:03<00:01, 96144.41it/s]  68%|██████▊   | 377074/552076 [00:03<00:01, 102819.32it/s] 70%|███████   | 388145/552076 [00:03<00:01, 88443.37it/s]  72%|███████▏  | 397895/552076 [00:04<00:01, 82371.25it/s] 74%|███████▍  | 410111/552076 [00:04<00:01, 91290.58it/s] 76%|███████▋  | 421877/552076 [00:04<00:01, 97869.05it/s] 78%|███████▊  | 433227/552076 [00:04<00:01, 102085.77it/s] 80%|████████  | 443970/552076 [00:04<00:01, 80830.21it/s]  83%|████████▎ | 455895/552076 [00:04<00:01, 89478.42it/s] 85%|████████▍ | 466961/552076 [00:04<00:00, 92690.58it/s] 86%|████████▋ | 476985/552076 [00:04<00:00, 94407.87it/s] 88%|████████▊ | 486962/552076 [00:04<00:00, 91612.63it/s] 90%|█████████ | 498178/552076 [00:05<00:00, 96939.75it/s] 92%|█████████▏| 510241/552076 [00:05<00:00, 103006.02it/s] 95%|█████████▍| 522239/552076 [00:05<00:00, 107571.05it/s] 97%|█████████▋| 534318/552076 [00:05<00:00, 111220.90it/s] 99%|█████████▉| 546019/552076 [00:05<00:00, 112894.43it/s]100%|██████████| 552076/552076 [00:05<00:00, 99717.53it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11557/552076 [00:00<00:04, 115564.88it/s]  4%|▍         | 23300/552076 [00:00<00:04, 116116.63it/s]  6%|▋         | 34979/552076 [00:00<00:04, 116315.95it/s]  8%|▊         | 45875/552076 [00:00<00:04, 114005.79it/s] 10%|█         | 57276/552076 [00:00<00:04, 114005.13it/s] 12%|█▏        | 68928/552076 [00:00<00:04, 114746.05it/s] 14%|█▍        | 80038/552076 [00:00<00:04, 113627.22it/s] 17%|█▋        | 91525/552076 [00:00<00:04, 113994.58it/s] 19%|█▊        | 103157/552076 [00:00<00:03, 114680.64it/s] 21%|██        | 114354/552076 [00:01<00:03, 113851.07it/s] 23%|██▎       | 125458/552076 [00:01<00:03, 112992.37it/s] 25%|██▍       | 137054/552076 [00:01<00:03, 113864.06it/s] 27%|██▋       | 148560/552076 [00:01<00:03, 114220.09it/s] 29%|██▉       | 160357/552076 [00:01<00:03, 115319.02it/s] 31%|███       | 172245/552076 [00:01<00:03, 116361.97it/s] 33%|███▎      | 184011/552076 [00:01<00:03, 116747.15it/s] 35%|███▌      | 195652/552076 [00:01<00:03, 116208.00it/s] 38%|███▊      | 207250/552076 [00:01<00:03, 97859.49it/s]  39%|███▉      | 217514/552076 [00:01<00:03, 96583.50it/s] 41%|████      | 227511/552076 [00:02<00:03, 94295.18it/s] 43%|████▎     | 238903/552076 [00:02<00:03, 99432.83it/s] 45%|████▌     | 249096/552076 [00:02<00:03, 82702.18it/s] 47%|████▋     | 258013/552076 [00:02<00:03, 75058.53it/s] 48%|████▊     | 266107/552076 [00:02<00:04, 69943.48it/s] 50%|████▉     | 273583/552076 [00:02<00:04, 67353.49it/s] 51%|█████     | 280677/552076 [00:02<00:04, 63510.21it/s] 55%|█████▌    | 303949/552076 [00:02<00:03, 81228.13it/s] 59%|█████▉    | 328174/552076 [00:03<00:02, 101459.86it/s] 64%|██████▍   | 352528/552076 [00:03<00:01, 122983.87it/s] 68%|██████▊   | 376830/552076 [00:03<00:01, 144377.40it/s] 72%|███████▏  | 399720/552076 [00:03<00:00, 162362.12it/s] 77%|███████▋  | 423134/552076 [00:03<00:00, 178805.35it/s] 81%|████████  | 446894/552076 [00:03<00:00, 193142.86it/s] 85%|████████▌ | 470401/552076 [00:03<00:00, 204061.48it/s] 89%|████████▉ | 494061/552076 [00:03<00:00, 212841.70it/s] 94%|█████████▎| 517507/552076 [00:03<00:00, 218895.14it/s] 98%|█████████▊| 541450/552076 [00:03<00:00, 224673.48it/s]100%|██████████| 552076/552076 [00:04<00:00, 137108.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22101/552076 [00:00<00:02, 221004.41it/s]  8%|▊         | 45129/552076 [00:00<00:02, 223706.33it/s] 12%|█▏        | 68410/552076 [00:00<00:02, 226360.12it/s] 17%|█▋        | 91797/552076 [00:00<00:02, 228560.58it/s] 21%|██        | 115401/552076 [00:00<00:01, 230753.25it/s] 25%|██▌       | 138590/552076 [00:00<00:01, 231090.37it/s] 29%|██▉       | 162408/552076 [00:00<00:01, 233172.45it/s] 34%|███▍      | 186444/552076 [00:00<00:01, 235282.74it/s] 38%|███▊      | 210472/552076 [00:00<00:01, 236757.35it/s] 42%|████▏     | 233985/552076 [00:01<00:01, 236264.82it/s] 47%|████▋     | 257712/552076 [00:01<00:01, 236565.21it/s] 51%|█████     | 281556/552076 [00:01<00:01, 237124.10it/s] 55%|█████▌    | 304967/552076 [00:01<00:01, 236172.45it/s] 59%|█████▉    | 328375/552076 [00:01<00:00, 234498.86it/s] 64%|██████▍   | 352439/552076 [00:01<00:00, 236306.28it/s] 68%|██████▊   | 376461/552076 [00:01<00:00, 237465.33it/s] 72%|███████▏  | 400141/552076 [00:01<00:00, 236629.80it/s] 77%|███████▋  | 423758/552076 [00:01<00:00, 210945.18it/s] 81%|████████  | 445340/552076 [00:01<00:00, 189927.95it/s] 85%|████████▍ | 468445/552076 [00:02<00:00, 200640.33it/s] 89%|████████▉ | 490689/552076 [00:02<00:00, 206716.26it/s] 93%|█████████▎| 513952/552076 [00:02<00:00, 213863.15it/s] 97%|█████████▋| 536603/552076 [00:02<00:00, 217504.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 225176.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21016/552076 [00:00<00:02, 210156.69it/s]  8%|▊         | 41662/552076 [00:00<00:02, 209032.56it/s] 11%|█▏        | 63236/552076 [00:00<00:02, 210998.28it/s] 15%|█▌        | 85092/552076 [00:00<00:02, 213211.19it/s] 19%|█▉        | 106851/552076 [00:00<00:02, 214504.16it/s] 23%|██▎       | 124778/552076 [00:00<00:02, 171851.72it/s] 26%|██▋       | 145100/552076 [00:00<00:02, 180194.37it/s] 29%|██▉       | 162539/552076 [00:00<00:02, 178409.55it/s] 33%|███▎      | 179913/552076 [00:00<00:02, 176419.97it/s] 36%|███▌      | 197233/552076 [00:01<00:02, 174167.67it/s] 39%|███▉      | 214431/552076 [00:01<00:01, 172573.00it/s] 42%|████▏     | 231539/552076 [00:01<00:02, 155025.42it/s] 45%|████▍     | 247274/552076 [00:01<00:01, 154951.68it/s] 48%|████▊     | 262932/552076 [00:01<00:01, 154952.34it/s] 50%|█████     | 278541/552076 [00:01<00:01, 141236.86it/s] 54%|█████▎    | 296019/552076 [00:01<00:01, 149863.26it/s] 57%|█████▋    | 313484/552076 [00:01<00:01, 156526.43it/s] 60%|█████▉    | 331208/552076 [00:01<00:01, 162213.19it/s] 63%|██████▎   | 348888/552076 [00:02<00:01, 166328.23it/s] 66%|██████▋   | 366495/552076 [00:02<00:01, 169134.78it/s] 70%|██████▉   | 384267/552076 [00:02<00:00, 171620.83it/s] 73%|███████▎  | 402066/552076 [00:02<00:00, 173481.43it/s] 76%|███████▌  | 419509/552076 [00:02<00:00, 173494.49it/s] 79%|███████▉  | 436925/552076 [00:02<00:00, 171429.98it/s] 82%|████████▏ | 454242/552076 [00:02<00:00, 171945.79it/s] 85%|████████▌ | 471778/552076 [00:02<00:00, 172953.01it/s] 89%|████████▊ | 489101/552076 [00:02<00:00, 165155.68it/s] 92%|█████████▏| 505710/552076 [00:02<00:00, 151969.88it/s] 94%|█████████▍| 521180/552076 [00:03<00:00, 138378.08it/s] 97%|█████████▋| 535444/552076 [00:03<00:00, 131411.97it/s] 99%|█████████▉| 548957/552076 [00:03<00:00, 126409.97it/s]100%|██████████| 552076/552076 [00:03<00:00, 163626.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14128/552076 [00:00<00:03, 141271.38it/s]  5%|▍         | 27452/552076 [00:00<00:03, 138761.94it/s]  9%|▊         | 47219/552076 [00:00<00:03, 152384.56it/s] 12%|█▏        | 68066/552076 [00:00<00:02, 165762.62it/s] 16%|█▌        | 88676/552076 [00:00<00:02, 176101.60it/s] 20%|█▉        | 108643/552076 [00:00<00:02, 182564.84it/s] 23%|██▎       | 129519/552076 [00:00<00:02, 189704.94it/s] 27%|██▋       | 151511/552076 [00:00<00:02, 197857.72it/s] 32%|███▏      | 174600/552076 [00:00<00:01, 206730.01it/s] 36%|███▌      | 197617/552076 [00:01<00:01, 213243.29it/s] 40%|███▉      | 220429/552076 [00:01<00:01, 217497.96it/s] 44%|████▍     | 242951/552076 [00:01<00:01, 219756.16it/s] 48%|████▊     | 265381/552076 [00:01<00:01, 221097.27it/s] 52%|█████▏    | 287477/552076 [00:01<00:01, 216325.89it/s] 56%|█████▌    | 309271/552076 [00:01<00:01, 216805.97it/s] 60%|█████▉    | 331159/552076 [00:01<00:01, 217423.18it/s] 64%|██████▍   | 353687/552076 [00:01<00:00, 219721.06it/s] 68%|██████▊   | 376262/552076 [00:01<00:00, 221494.94it/s] 72%|███████▏  | 398423/552076 [00:01<00:00, 211843.05it/s] 76%|███████▌  | 419705/552076 [00:02<00:00, 187794.04it/s] 80%|███████▉  | 439056/552076 [00:02<00:00, 158629.96it/s] 83%|████████▎ | 456095/552076 [00:02<00:00, 144473.34it/s] 85%|████████▌ | 471610/552076 [00:02<00:00, 136256.89it/s] 88%|████████▊ | 486079/552076 [00:02<00:00, 130250.16it/s] 91%|█████████ | 499751/552076 [00:02<00:00, 127867.98it/s] 93%|█████████▎| 513000/552076 [00:03<00:00, 78873.22it/s]  95%|█████████▍| 523524/552076 [00:03<00:00, 50714.58it/s] 96%|█████████▋| 531721/552076 [00:03<00:00, 44907.88it/s] 98%|█████████▊| 538522/552076 [00:03<00:00, 39037.81it/s] 99%|█████████▊| 544180/552076 [00:04<00:00, 35725.25it/s] 99%|█████████▉| 549036/552076 [00:04<00:00, 34013.14it/s]100%|██████████| 552076/552076 [00:04<00:00, 127136.09it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2096/552076 [00:00<00:26, 20958.42it/s]  1%|          | 4088/552076 [00:00<00:26, 20635.16it/s]  1%|▏         | 6910/552076 [00:00<00:24, 21979.08it/s]  2%|▏         | 12134/552076 [00:00<00:20, 26601.79it/s]  3%|▎         | 18227/552076 [00:00<00:16, 32011.84it/s]  4%|▍         | 24465/552076 [00:00<00:14, 37486.10it/s]  6%|▌         | 31190/552076 [00:00<00:12, 43224.68it/s]  7%|▋         | 37860/552076 [00:00<00:10, 48325.86it/s]  8%|▊         | 44574/552076 [00:00<00:09, 52761.20it/s]  9%|▉         | 51265/552076 [00:01<00:08, 56333.60it/s] 11%|█         | 57984/552076 [00:01<00:08, 59202.28it/s] 12%|█▏        | 64679/552076 [00:01<00:07, 61331.11it/s] 13%|█▎        | 71114/552076 [00:01<00:07, 60930.08it/s] 14%|█▍        | 77419/552076 [00:01<00:09, 48726.25it/s] 15%|█▌        | 84017/552076 [00:01<00:08, 52872.42it/s] 16%|█▋        | 90679/552076 [00:01<00:08, 56360.85it/s] 18%|█▊        | 97251/552076 [00:01<00:07, 58874.94it/s] 19%|█▉        | 103938/552076 [00:01<00:07, 61063.63it/s] 20%|██        | 110711/552076 [00:02<00:07, 62921.37it/s] 21%|██▏       | 117369/552076 [00:02<00:06, 63974.86it/s] 22%|██▏       | 123914/552076 [00:02<00:06, 64409.71it/s] 24%|██▎       | 130578/552076 [00:02<00:06, 65061.17it/s] 25%|██▍       | 137334/552076 [00:02<00:06, 65790.24it/s] 26%|██▌       | 144075/552076 [00:02<00:06, 66266.84it/s] 27%|██▋       | 150801/552076 [00:02<00:06, 66559.88it/s] 29%|██▊       | 157482/552076 [00:02<00:05, 66145.46it/s] 30%|██▉       | 164115/552076 [00:02<00:05, 65981.80it/s] 31%|███       | 170859/552076 [00:02<00:05, 66410.32it/s] 32%|███▏      | 177510/552076 [00:03<00:05, 66257.00it/s] 33%|███▎      | 184200/552076 [00:03<00:05, 66447.72it/s] 35%|███▍      | 190983/552076 [00:03<00:05, 66856.43it/s] 36%|███▌      | 197673/552076 [00:03<00:05, 64840.76it/s] 37%|███▋      | 204174/552076 [00:03<00:06, 56516.45it/s] 38%|███▊      | 210903/552076 [00:03<00:05, 59366.86it/s] 39%|███▉      | 217441/552076 [00:03<00:05, 61049.92it/s] 41%|████      | 223719/552076 [00:03<00:05, 60444.66it/s] 42%|████▏     | 229862/552076 [00:03<00:05, 60128.88it/s] 43%|████▎     | 236484/552076 [00:03<00:05, 61833.29it/s] 44%|████▍     | 242964/552076 [00:04<00:04, 62693.75it/s] 45%|████▌     | 249675/552076 [00:04<00:04, 63955.64it/s] 46%|████▋     | 256425/552076 [00:04<00:04, 64978.05it/s] 48%|████▊     | 263187/552076 [00:04<00:04, 65748.13it/s] 49%|████▉     | 269947/552076 [00:04<00:04, 66290.73it/s] 50%|█████     | 276594/552076 [00:04<00:04, 65710.57it/s] 51%|█████▏    | 283228/552076 [00:04<00:04, 65896.94it/s] 53%|█████▎    | 289922/552076 [00:04<00:03, 66203.45it/s] 54%|█████▎    | 296730/552076 [00:04<00:03, 66753.19it/s] 55%|█████▍    | 303412/552076 [00:04<00:03, 66583.92it/s] 56%|█████▌    | 310075/552076 [00:05<00:03, 66343.06it/s] 57%|█████▋    | 316713/552076 [00:05<00:03, 66294.91it/s] 59%|█████▊    | 323345/552076 [00:05<00:03, 60751.91it/s] 60%|█████▉    | 329513/552076 [00:05<00:04, 55268.90it/s] 61%|██████    | 336188/552076 [00:05<00:03, 58275.62it/s] 62%|██████▏   | 343027/552076 [00:05<00:03, 60980.65it/s] 63%|██████▎   | 349557/552076 [00:05<00:03, 62213.31it/s] 65%|██████▍   | 356141/552076 [00:05<00:03, 63258.59it/s] 66%|██████▌   | 362617/552076 [00:05<00:02, 63701.40it/s] 67%|██████▋   | 369132/552076 [00:06<00:02, 64128.02it/s] 68%|██████▊   | 375585/552076 [00:06<00:02, 60600.51it/s] 69%|██████▉   | 381713/552076 [00:06<00:02, 59786.93it/s] 70%|███████   | 388062/552076 [00:06<00:02, 60851.66it/s] 71%|███████▏  | 394683/552076 [00:06<00:02, 62364.80it/s] 73%|███████▎  | 401451/552076 [00:06<00:02, 63867.83it/s] 74%|███████▍  | 408061/552076 [00:06<00:02, 64518.76it/s] 75%|███████▌  | 414817/552076 [00:06<00:02, 65400.83it/s] 76%|███████▋  | 421553/552076 [00:06<00:01, 65973.76it/s] 78%|███████▊  | 428190/552076 [00:06<00:01, 66091.82it/s] 79%|███████▉  | 434811/552076 [00:07<00:01, 65780.92it/s] 80%|███████▉  | 441398/552076 [00:07<00:01, 64658.83it/s] 81%|████████  | 447937/552076 [00:07<00:01, 64874.77it/s] 82%|████████▏ | 454549/552076 [00:07<00:01, 65242.76it/s] 84%|████████▎ | 461168/552076 [00:07<00:01, 65521.77it/s] 85%|████████▍ | 467813/552076 [00:07<00:01, 65795.24it/s] 86%|████████▌ | 474478/552076 [00:07<00:01, 66047.74it/s] 87%|████████▋ | 481086/552076 [00:07<00:01, 65386.68it/s] 88%|████████▊ | 487647/552076 [00:07<00:00, 65450.64it/s] 90%|████████▉ | 494195/552076 [00:07<00:00, 65072.07it/s] 91%|█████████ | 500705/552076 [00:08<00:01, 51332.54it/s] 92%|█████████▏| 506961/552076 [00:08<00:00, 54252.46it/s] 93%|█████████▎| 513484/552076 [00:08<00:00, 57136.04it/s] 94%|█████████▍| 519493/552076 [00:08<00:00, 46619.16it/s] 95%|█████████▌| 526063/552076 [00:08<00:00, 51067.78it/s] 97%|█████████▋| 532987/552076 [00:08<00:00, 54836.17it/s] 98%|█████████▊| 539644/552076 [00:08<00:00, 57897.28it/s] 99%|█████████▉| 546160/552076 [00:08<00:00, 59899.25it/s]100%|██████████| 552076/552076 [00:09<00:00, 60944.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5684/552076 [00:00<00:09, 56833.82it/s]  2%|▏         | 9031/552076 [00:00<00:11, 46991.20it/s]  3%|▎         | 15485/552076 [00:00<00:10, 51164.27it/s]  4%|▍         | 22061/552076 [00:00<00:09, 54813.27it/s]  5%|▍         | 27438/552076 [00:00<00:09, 54495.09it/s]  6%|▌         | 33062/552076 [00:00<00:09, 55004.87it/s]  7%|▋         | 39537/552076 [00:00<00:08, 57605.82it/s]  8%|▊         | 45889/552076 [00:00<00:08, 59261.09it/s] 10%|▉         | 52529/552076 [00:00<00:08, 61234.73it/s] 11%|█         | 59301/552076 [00:01<00:07, 63044.75it/s] 12%|█▏        | 65931/552076 [00:01<00:07, 63985.86it/s] 13%|█▎        | 72612/552076 [00:01<00:07, 64807.14it/s] 14%|█▍        | 79057/552076 [00:01<00:07, 64207.55it/s] 15%|█▌        | 85467/552076 [00:01<00:07, 63620.95it/s] 17%|█▋        | 91814/552076 [00:01<00:07, 59524.49it/s] 18%|█▊        | 98338/552076 [00:01<00:07, 61127.97it/s] 19%|█▉        | 105051/552076 [00:01<00:07, 62812.38it/s] 20%|██        | 111394/552076 [00:01<00:06, 62994.22it/s] 21%|██▏       | 117954/552076 [00:01<00:06, 63753.71it/s] 23%|██▎       | 124652/552076 [00:02<00:06, 64687.34it/s] 24%|██▍       | 131140/552076 [00:02<00:07, 58176.33it/s] 25%|██▍       | 137095/552076 [00:02<00:07, 56942.64it/s] 26%|██▌       | 143072/552076 [00:02<00:07, 57760.93it/s] 27%|██▋       | 148923/552076 [00:02<00:07, 56286.31it/s] 28%|██▊       | 155563/552076 [00:02<00:06, 58980.92it/s] 29%|██▉       | 162003/552076 [00:02<00:06, 60507.08it/s] 31%|███       | 168687/552076 [00:02<00:06, 62276.91it/s] 32%|███▏      | 175191/552076 [00:02<00:05, 63078.13it/s] 33%|███▎      | 181731/552076 [00:02<00:05, 63755.74it/s] 34%|███▍      | 188138/552076 [00:03<00:05, 63546.23it/s] 35%|███▌      | 194724/552076 [00:03<00:05, 64221.16it/s] 36%|███▋      | 201164/552076 [00:03<00:05, 61887.58it/s] 38%|███▊      | 207384/552076 [00:03<00:05, 60180.36it/s] 39%|███▊      | 213881/552076 [00:03<00:05, 61540.15it/s] 40%|███▉      | 220419/552076 [00:03<00:05, 62643.74it/s] 41%|████      | 226994/552076 [00:03<00:05, 63543.36it/s] 42%|████▏     | 233370/552076 [00:03<00:05, 62584.49it/s] 43%|████▎     | 239985/552076 [00:03<00:04, 63610.52it/s] 45%|████▍     | 246522/552076 [00:04<00:04, 64128.26it/s] 46%|████▌     | 252948/552076 [00:04<00:04, 61244.93it/s] 47%|████▋     | 259109/552076 [00:04<00:05, 57961.27it/s] 48%|████▊     | 265241/552076 [00:04<00:04, 58929.22it/s] 49%|████▉     | 271703/552076 [00:04<00:04, 60528.29it/s] 50%|█████     | 278241/552076 [00:04<00:04, 61904.81it/s] 52%|█████▏    | 284706/552076 [00:04<00:04, 62700.94it/s] 53%|█████▎    | 291250/552076 [00:04<00:04, 63497.32it/s] 54%|█████▍    | 297641/552076 [00:04<00:03, 63620.04it/s] 55%|█████▌    | 304183/552076 [00:04<00:03, 64147.62it/s] 56%|█████▋    | 310809/552076 [00:05<00:03, 64764.50it/s] 57%|█████▋    | 317296/552076 [00:05<00:04, 50629.48it/s] 59%|█████▊    | 324126/552076 [00:05<00:04, 54889.08it/s] 60%|█████▉    | 330842/552076 [00:05<00:03, 58070.95it/s] 61%|██████    | 337186/552076 [00:05<00:03, 59581.81it/s] 62%|██████▏   | 343406/552076 [00:05<00:04, 50177.30it/s] 63%|██████▎   | 348860/552076 [00:05<00:04, 42522.00it/s] 64%|██████▍   | 355554/552076 [00:05<00:04, 47745.62it/s] 66%|██████▌   | 362591/552076 [00:06<00:03, 52842.00it/s] 67%|██████▋   | 369433/552076 [00:06<00:03, 56714.13it/s] 68%|██████▊   | 375580/552076 [00:06<00:03, 53688.40it/s] 69%|██████▉   | 381315/552076 [00:06<00:04, 41499.09it/s] 70%|██████▉   | 386144/552076 [00:06<00:04, 37768.94it/s] 71%|███████   | 390461/552076 [00:06<00:04, 36526.61it/s] 71%|███████▏  | 394501/552076 [00:06<00:04, 35690.34it/s] 72%|███████▏  | 398345/552076 [00:07<00:04, 35138.26it/s] 73%|███████▎  | 402054/552076 [00:07<00:04, 35088.39it/s] 73%|███████▎  | 405699/552076 [00:07<00:04, 34445.99it/s] 74%|███████▍  | 409242/552076 [00:07<00:04, 34405.99it/s] 75%|███████▍  | 412770/552076 [00:07<00:04, 34663.45it/s] 75%|███████▌  | 416285/552076 [00:07<00:03, 33957.60it/s] 76%|███████▋  | 422025/552076 [00:07<00:03, 38698.62it/s] 78%|███████▊  | 428016/552076 [00:07<00:02, 43297.19it/s] 79%|███████▉  | 435332/552076 [00:07<00:02, 49338.08it/s] 80%|████████  | 441896/552076 [00:07<00:02, 53306.94it/s] 81%|████████  | 448127/552076 [00:08<00:01, 55720.36it/s] 82%|████████▏ | 454663/552076 [00:08<00:01, 58297.51it/s] 83%|████████▎ | 460775/552076 [00:08<00:01, 58587.86it/s] 85%|████████▍ | 466832/552076 [00:08<00:01, 58447.12it/s] 86%|████████▌ | 473118/552076 [00:08<00:01, 59704.02it/s] 87%|████████▋ | 479192/552076 [00:08<00:01, 58213.90it/s] 88%|████████▊ | 485094/552076 [00:08<00:01, 52418.74it/s] 89%|████████▉ | 492096/552076 [00:08<00:01, 56693.97it/s] 90%|█████████ | 497982/552076 [00:08<00:01, 49927.20it/s] 91%|█████████▏| 504080/552076 [00:09<00:00, 52797.24it/s] 92%|█████████▏| 509614/552076 [00:09<00:00, 50446.40it/s] 93%|█████████▎| 515258/552076 [00:09<00:00, 52105.23it/s] 95%|█████████▌| 526515/552076 [00:09<00:00, 62113.66it/s] 97%|█████████▋| 537754/552076 [00:09<00:00, 71741.19it/s]100%|█████████▉| 549320/552076 [00:09<00:00, 80964.11it/s]100%|██████████| 552076/552076 [00:09<00:00, 57339.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8616/552076 [00:00<00:06, 86159.67it/s]  3%|▎         | 19151/552076 [00:00<00:05, 91139.87it/s]  5%|▌         | 30290/552076 [00:00<00:05, 96395.64it/s]  7%|▋         | 39582/552076 [00:00<00:05, 95325.42it/s]  9%|▉         | 51077/552076 [00:00<00:04, 100470.76it/s] 11%|█▏        | 62857/552076 [00:00<00:04, 105108.69it/s] 14%|█▎        | 74797/552076 [00:00<00:04, 109022.59it/s] 16%|█▌        | 86323/552076 [00:00<00:04, 110820.19it/s] 18%|█▊        | 98572/552076 [00:00<00:03, 114079.52it/s] 20%|█▉        | 110323/552076 [00:01<00:03, 115086.60it/s] 22%|██▏       | 121661/552076 [00:01<00:04, 101161.21it/s] 24%|██▍       | 133102/552076 [00:01<00:03, 104800.79it/s] 26%|██▌       | 144918/552076 [00:01<00:03, 108477.91it/s] 28%|██▊       | 156346/552076 [00:01<00:03, 110153.17it/s] 30%|███       | 167472/552076 [00:01<00:03, 103002.67it/s] 32%|███▏      | 178838/552076 [00:01<00:03, 105982.28it/s] 34%|███▍      | 189578/552076 [00:01<00:03, 101125.31it/s] 36%|███▋      | 200767/552076 [00:01<00:03, 104130.17it/s] 38%|███▊      | 211305/552076 [00:01<00:03, 102085.53it/s] 40%|████      | 221610/552076 [00:02<00:03, 84941.42it/s]  42%|████▏     | 231844/552076 [00:02<00:03, 89505.70it/s] 44%|████▎     | 241245/552076 [00:02<00:03, 87266.41it/s] 46%|████▌     | 252665/552076 [00:02<00:03, 93909.33it/s] 48%|████▊     | 264500/552076 [00:02<00:02, 100109.56it/s] 50%|████▉     | 274885/552076 [00:02<00:02, 97625.00it/s]  52%|█████▏    | 284923/552076 [00:02<00:03, 73560.05it/s] 53%|█████▎    | 293351/552076 [00:03<00:03, 72290.26it/s] 55%|█████▌    | 304451/552076 [00:03<00:03, 80735.97it/s] 57%|█████▋    | 316642/552076 [00:03<00:02, 89837.70it/s] 60%|█████▉    | 328592/552076 [00:03<00:02, 97064.93it/s] 62%|██████▏   | 339571/552076 [00:03<00:02, 100560.73it/s] 63%|██████▎   | 350226/552076 [00:03<00:02, 88571.70it/s]  65%|██████▌   | 359763/552076 [00:03<00:02, 79318.65it/s] 67%|██████▋   | 368574/552076 [00:03<00:02, 81764.78it/s] 68%|██████▊   | 377230/552076 [00:03<00:02, 82415.91it/s] 70%|███████   | 389108/552076 [00:04<00:01, 90749.50it/s] 72%|███████▏  | 398676/552076 [00:04<00:01, 86246.52it/s] 74%|███████▍  | 410008/552076 [00:04<00:01, 92904.15it/s] 76%|███████▋  | 422060/552076 [00:04<00:01, 99761.75it/s] 79%|███████▊  | 434108/552076 [00:04<00:01, 105186.33it/s] 81%|████████  | 446142/552076 [00:04<00:00, 109315.36it/s] 83%|████████▎ | 458286/552076 [00:04<00:00, 112690.57it/s] 85%|████████▌ | 470143/552076 [00:04<00:00, 114388.89it/s] 87%|████████▋ | 482260/552076 [00:04<00:00, 116340.76it/s] 90%|████████▉ | 494538/552076 [00:04<00:00, 118200.19it/s] 92%|█████████▏| 506620/552076 [00:05<00:00, 118971.56it/s] 94%|█████████▍| 518589/552076 [00:05<00:00, 107484.58it/s] 96%|█████████▌| 529599/552076 [00:05<00:00, 97789.82it/s]  98%|█████████▊| 539730/552076 [00:05<00:00, 93807.66it/s]100%|█████████▉| 549559/552076 [00:05<00:00, 95108.34it/s]100%|██████████| 552076/552076 [00:05<00:00, 98834.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10337/552076 [00:00<00:05, 103367.14it/s]  4%|▍         | 22117/552076 [00:00<00:05, 105112.29it/s]  6%|▌         | 33862/552076 [00:00<00:04, 108532.18it/s]  8%|▊         | 42704/552076 [00:00<00:05, 101598.73it/s] 10%|▉         | 54076/552076 [00:00<00:04, 104954.16it/s] 12%|█▏        | 65324/552076 [00:00<00:04, 107102.36it/s] 14%|█▍        | 76848/552076 [00:00<00:04, 109418.76it/s] 16%|█▌        | 87011/552076 [00:00<00:04, 98544.62it/s]  18%|█▊        | 98997/552076 [00:00<00:04, 104097.91it/s] 20%|██        | 110921/552076 [00:01<00:04, 108218.66it/s] 22%|██▏       | 121990/552076 [00:01<00:04, 107365.37it/s] 24%|██▍       | 132682/552076 [00:01<00:04, 103899.56it/s] 26%|██▌       | 144082/552076 [00:01<00:03, 106735.66it/s] 28%|██▊       | 155891/552076 [00:01<00:03, 109904.97it/s] 30%|███       | 168100/552076 [00:01<00:03, 113295.81it/s] 33%|███▎      | 179480/552076 [00:01<00:03, 112612.27it/s] 35%|███▍      | 191296/552076 [00:01<00:03, 114220.75it/s] 37%|███▋      | 202910/552076 [00:01<00:03, 114787.51it/s] 39%|███▉      | 215050/552076 [00:01<00:02, 116693.51it/s] 41%|████      | 226743/552076 [00:02<00:02, 115282.44it/s] 43%|████▎     | 239004/552076 [00:02<00:02, 117386.62it/s] 46%|████▌     | 251259/552076 [00:02<00:02, 118888.41it/s] 48%|████▊     | 263169/552076 [00:02<00:02, 118592.46it/s] 50%|████▉     | 275525/552076 [00:02<00:02, 120037.47it/s] 52%|█████▏    | 287818/552076 [00:02<00:02, 120888.40it/s] 54%|█████▍    | 299919/552076 [00:02<00:02, 119573.43it/s] 56%|█████▋    | 311888/552076 [00:02<00:02, 117272.52it/s] 59%|█████▊    | 323818/552076 [00:02<00:01, 117870.53it/s] 61%|██████    | 335897/552076 [00:02<00:01, 118730.22it/s] 63%|██████▎   | 348040/552076 [00:03<00:01, 119524.98it/s] 65%|██████▌   | 360002/552076 [00:03<00:01, 118742.94it/s] 67%|██████▋   | 372287/552076 [00:03<00:01, 119945.80it/s] 70%|██████▉   | 384408/552076 [00:03<00:01, 120322.14it/s] 72%|███████▏  | 396464/552076 [00:03<00:01, 120393.01it/s] 74%|███████▍  | 408508/552076 [00:03<00:01, 118845.09it/s] 76%|███████▌  | 420400/552076 [00:03<00:01, 117635.24it/s] 78%|███████▊  | 432301/552076 [00:03<00:01, 118042.43it/s] 80%|████████  | 444112/552076 [00:03<00:00, 111179.53it/s] 82%|████████▏ | 455317/552076 [00:04<00:00, 110875.74it/s] 85%|████████▍ | 466623/552076 [00:04<00:00, 111521.11it/s] 87%|████████▋ | 478875/552076 [00:04<00:00, 114606.03it/s] 89%|████████▉ | 490388/552076 [00:04<00:00, 114304.17it/s] 91%|█████████ | 502297/552076 [00:04<00:00, 115696.26it/s] 93%|█████████▎| 513897/552076 [00:04<00:00, 109535.38it/s] 95%|█████████▌| 524940/552076 [00:04<00:00, 106280.51it/s] 97%|█████████▋| 536492/552076 [00:04<00:00, 108891.18it/s] 99%|█████████▉| 547456/552076 [00:04<00:00, 105749.80it/s]100%|██████████| 552076/552076 [00:04<00:00, 113072.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11105/552076 [00:00<00:05, 99481.95it/s]  3%|▎         | 18319/552076 [00:00<00:05, 89324.25it/s]  5%|▌         | 30200/552076 [00:00<00:05, 96509.29it/s]  7%|▋         | 40068/552076 [00:00<00:05, 97149.48it/s]  9%|▉         | 52113/552076 [00:00<00:04, 103133.65it/s] 12%|█▏        | 64044/552076 [00:00<00:04, 107506.13it/s] 14%|█▍        | 76130/552076 [00:00<00:04, 111190.17it/s] 16%|█▌        | 87354/552076 [00:00<00:04, 108911.81it/s] 18%|█▊        | 97814/552076 [00:00<00:04, 105823.38it/s] 20%|█▉        | 108114/552076 [00:01<00:04, 100934.78it/s] 23%|██▎       | 126343/552076 [00:01<00:03, 116537.42it/s] 26%|██▌       | 144718/552076 [00:01<00:03, 130901.28it/s] 30%|██▉       | 163585/552076 [00:01<00:02, 144140.52it/s] 33%|███▎      | 184658/552076 [00:01<00:02, 159234.54it/s] 37%|███▋      | 204330/552076 [00:01<00:02, 168887.49it/s] 40%|████      | 222305/552076 [00:01<00:01, 171872.26it/s] 44%|████▎     | 241410/552076 [00:01<00:01, 177206.69it/s] 48%|████▊     | 262480/552076 [00:01<00:01, 186078.08it/s] 51%|█████     | 281901/552076 [00:01<00:01, 188445.03it/s] 55%|█████▍    | 301121/552076 [00:02<00:01, 185835.06it/s] 58%|█████▊    | 320926/552076 [00:02<00:01, 189337.24it/s] 62%|██████▏   | 341963/552076 [00:02<00:01, 195190.70it/s] 66%|██████▌   | 361672/552076 [00:02<00:00, 194192.12it/s] 69%|██████▉   | 381442/552076 [00:02<00:00, 195229.88it/s] 73%|███████▎  | 404838/552076 [00:02<00:00, 205431.30it/s] 78%|███████▊  | 428324/552076 [00:02<00:00, 213453.54it/s] 82%|████████▏ | 452148/552076 [00:02<00:00, 220330.25it/s] 86%|████████▌ | 475721/552076 [00:02<00:00, 224733.83it/s] 90%|█████████ | 498489/552076 [00:02<00:00, 225607.47it/s] 95%|█████████▍| 522036/552076 [00:03<00:00, 228475.74it/s] 99%|█████████▊| 544977/552076 [00:03<00:00, 228412.20it/s]100%|██████████| 552076/552076 [00:03<00:00, 173658.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21416/552076 [00:00<00:02, 214150.50it/s]  8%|▊         | 44698/552076 [00:00<00:02, 219427.20it/s] 12%|█▏        | 68033/552076 [00:00<00:02, 223425.87it/s] 16%|█▋        | 90722/552076 [00:00<00:02, 224453.06it/s] 21%|██        | 113390/552076 [00:00<00:01, 225113.88it/s] 25%|██▍       | 137071/552076 [00:00<00:01, 228499.33it/s] 29%|██▉       | 160833/552076 [00:00<00:01, 231160.74it/s] 33%|███▎      | 184497/552076 [00:00<00:01, 232777.42it/s] 38%|███▊      | 207406/552076 [00:00<00:01, 231656.51it/s] 42%|████▏     | 231118/552076 [00:01<00:01, 233268.02it/s] 46%|████▌     | 254841/552076 [00:01<00:01, 234439.90it/s] 50%|█████     | 278382/552076 [00:01<00:01, 234726.97it/s] 55%|█████▍    | 301567/552076 [00:01<00:01, 233307.26it/s] 59%|█████▉    | 325434/552076 [00:01<00:00, 234890.17it/s] 63%|██████▎   | 349196/552076 [00:01<00:00, 235700.07it/s] 68%|██████▊   | 372721/552076 [00:01<00:00, 235564.09it/s] 72%|███████▏  | 396211/552076 [00:01<00:00, 229660.32it/s] 76%|███████▌  | 419163/552076 [00:01<00:00, 218163.28it/s] 80%|████████  | 441825/552076 [00:01<00:00, 220632.26it/s] 84%|████████▍ | 463973/552076 [00:02<00:00, 215484.63it/s] 88%|████████▊ | 485607/552076 [00:02<00:00, 176832.30it/s] 92%|█████████▏| 508619/552076 [00:02<00:00, 190032.88it/s] 96%|█████████▌| 530473/552076 [00:02<00:00, 197770.32it/s]100%|██████████| 552076/552076 [00:02<00:00, 220178.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14066/552076 [00:00<00:03, 140655.10it/s]  5%|▌         | 28488/552076 [00:00<00:03, 141704.87it/s]  7%|▋         | 38936/552076 [00:00<00:04, 128020.67it/s] 10%|█         | 55740/552076 [00:00<00:03, 137870.24it/s] 14%|█▍        | 76644/552076 [00:00<00:03, 153552.59it/s] 18%|█▊        | 99355/552076 [00:00<00:02, 170076.98it/s] 22%|██▏       | 120863/552076 [00:00<00:02, 181467.50it/s] 25%|██▌       | 139577/552076 [00:00<00:02, 183130.56it/s] 29%|██▊       | 157791/552076 [00:00<00:02, 170999.78it/s] 33%|███▎      | 181173/552076 [00:01<00:01, 185989.12it/s] 37%|███▋      | 204407/552076 [00:01<00:01, 197828.87it/s] 41%|████      | 227524/552076 [00:01<00:01, 206773.51it/s] 45%|████▌     | 248673/552076 [00:01<00:01, 201901.11it/s] 49%|████▉     | 270361/552076 [00:01<00:01, 206172.15it/s] 53%|█████▎    | 293214/552076 [00:01<00:01, 212406.05it/s] 57%|█████▋    | 316550/552076 [00:01<00:01, 218283.61it/s] 61%|██████▏   | 338585/552076 [00:01<00:00, 215490.83it/s] 66%|██████▌   | 361642/552076 [00:01<00:00, 219801.60it/s] 70%|██████▉   | 384479/552076 [00:01<00:00, 222303.75it/s] 74%|███████▍  | 407269/552076 [00:02<00:00, 223944.48it/s] 78%|███████▊  | 429734/552076 [00:02<00:00, 206889.05it/s] 82%|████████▏ | 450730/552076 [00:02<00:00, 200306.11it/s] 85%|████████▌ | 471295/552076 [00:02<00:00, 201877.53it/s] 89%|████████▉ | 492894/552076 [00:02<00:00, 205913.54it/s] 93%|█████████▎| 513717/552076 [00:02<00:00, 206600.17it/s] 97%|█████████▋| 536646/552076 [00:02<00:00, 212918.83it/s]100%|██████████| 552076/552076 [00:02<00:00, 200952.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21564/552076 [00:00<00:02, 215633.52it/s]  8%|▊         | 43039/552076 [00:00<00:02, 215366.22it/s] 12%|█▏        | 63749/552076 [00:00<00:02, 212817.64it/s] 15%|█▌        | 84575/552076 [00:00<00:02, 211426.68it/s] 19%|█▉        | 106419/552076 [00:00<00:02, 213482.84it/s] 23%|██▎       | 126813/552076 [00:00<00:02, 210526.33it/s] 27%|██▋       | 149275/552076 [00:00<00:01, 214563.61it/s] 31%|███       | 171769/552076 [00:00<00:01, 217571.50it/s] 35%|███▌      | 194391/552076 [00:00<00:01, 220094.03it/s] 39%|███▉      | 216580/552076 [00:01<00:01, 220627.16it/s] 43%|████▎     | 238958/552076 [00:01<00:01, 221562.61it/s] 47%|████▋     | 262145/552076 [00:01<00:01, 224555.97it/s] 52%|█████▏    | 285363/552076 [00:01<00:01, 226788.72it/s] 56%|█████▌    | 307853/552076 [00:01<00:01, 225974.00it/s] 60%|█████▉    | 330975/552076 [00:01<00:00, 227522.38it/s] 64%|██████▍   | 354153/552076 [00:01<00:00, 228782.25it/s] 68%|██████▊   | 377361/552076 [00:01<00:00, 229761.43it/s] 73%|███████▎  | 400296/552076 [00:01<00:00, 228388.47it/s] 77%|███████▋  | 423547/552076 [00:01<00:00, 229607.13it/s] 81%|████████  | 446562/552076 [00:02<00:00, 229768.64it/s] 85%|████████▌ | 470072/552076 [00:02<00:00, 231340.60it/s] 89%|████████▉ | 493200/552076 [00:02<00:00, 229684.93it/s] 93%|█████████▎| 516167/552076 [00:02<00:00, 225964.01it/s] 98%|█████████▊| 538776/552076 [00:02<00:00, 222284.68it/s]100%|██████████| 552076/552076 [00:02<00:00, 222959.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19884/552076 [00:00<00:02, 198834.50it/s]  8%|▊         | 41724/552076 [00:00<00:02, 204325.82it/s] 11%|█▏        | 62723/552076 [00:00<00:02, 205989.60it/s] 15%|█▍        | 82686/552076 [00:00<00:02, 204038.74it/s] 19%|█▊        | 103165/552076 [00:00<00:02, 204261.27it/s] 23%|██▎       | 125517/552076 [00:00<00:02, 209678.42it/s] 27%|██▋       | 148730/552076 [00:00<00:01, 215942.15it/s] 31%|███       | 171889/552076 [00:00<00:01, 220409.19it/s] 35%|███▌      | 195243/552076 [00:00<00:01, 224187.87it/s] 39%|███▉      | 218042/552076 [00:01<00:01, 225313.44it/s] 44%|████▎     | 241265/552076 [00:01<00:01, 227344.03it/s] 48%|████▊     | 264670/552076 [00:01<00:01, 229313.09it/s] 52%|█████▏    | 287904/552076 [00:01<00:01, 230211.12it/s] 56%|█████▋    | 310756/552076 [00:01<00:01, 228739.67it/s] 61%|██████    | 334172/552076 [00:01<00:00, 230337.68it/s] 65%|██████▍   | 357222/552076 [00:01<00:00, 230385.76it/s] 69%|██████▉   | 380206/552076 [00:01<00:00, 221557.21it/s] 73%|███████▎  | 402396/552076 [00:01<00:00, 199659.34it/s] 77%|███████▋  | 424070/552076 [00:01<00:00, 204492.69it/s] 81%|████████  | 444853/552076 [00:02<00:00, 204502.11it/s] 84%|████████▍ | 466329/552076 [00:02<00:00, 207472.42it/s] 88%|████████▊ | 487891/552076 [00:02<00:00, 209848.88it/s] 92%|█████████▏| 510010/552076 [00:02<00:00, 213125.93it/s] 96%|█████████▋| 532211/552076 [00:02<00:00, 215714.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 216639.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15250/552076 [00:00<00:03, 152492.15it/s]  5%|▌         | 28945/552076 [00:00<00:03, 147468.84it/s]  9%|▉         | 49613/552076 [00:00<00:03, 161334.18it/s] 13%|█▎        | 71513/552076 [00:00<00:02, 175169.58it/s] 17%|█▋        | 92832/552076 [00:00<00:02, 185071.23it/s] 21%|██        | 114624/552076 [00:00<00:02, 192101.84it/s] 25%|██▍       | 136214/552076 [00:00<00:02, 198670.97it/s] 29%|██▊       | 158632/552076 [00:00<00:01, 205690.61it/s] 32%|███▏      | 178856/552076 [00:00<00:01, 204640.67it/s] 36%|███▌      | 198945/552076 [00:01<00:02, 170262.56it/s] 39%|███▉      | 216677/552076 [00:01<00:02, 152679.19it/s] 42%|████▏     | 232781/552076 [00:01<00:02, 142293.86it/s] 45%|████▍     | 247738/552076 [00:01<00:02, 133595.63it/s] 47%|████▋     | 261715/552076 [00:01<00:02, 129361.87it/s] 50%|████▉     | 275113/552076 [00:01<00:02, 124582.17it/s] 52%|█████▏    | 287933/552076 [00:01<00:02, 122829.38it/s] 54%|█████▍    | 300475/552076 [00:01<00:02, 122597.91it/s] 57%|█████▋    | 312916/552076 [00:02<00:01, 123086.51it/s] 59%|█████▉    | 325352/552076 [00:02<00:02, 107235.33it/s] 61%|██████    | 336860/552076 [00:02<00:01, 109471.59it/s] 63%|██████▎   | 349210/552076 [00:02<00:01, 113333.11it/s] 66%|██████▌   | 361631/552076 [00:02<00:01, 116388.76it/s] 68%|██████▊   | 373884/552076 [00:02<00:01, 118164.24it/s] 70%|██████▉   | 386102/552076 [00:02<00:01, 119338.50it/s] 72%|███████▏  | 398387/552076 [00:02<00:01, 120368.53it/s] 74%|███████▍  | 410502/552076 [00:02<00:01, 104796.07it/s] 76%|███████▋  | 421398/552076 [00:03<00:01, 89787.05it/s]  78%|███████▊  | 431044/552076 [00:03<00:01, 87134.98it/s] 80%|███████▉  | 440242/552076 [00:03<00:01, 87531.00it/s] 81%|████████▏ | 449335/552076 [00:03<00:01, 71166.24it/s] 83%|████████▎ | 457187/552076 [00:03<00:01, 64905.28it/s] 84%|████████▍ | 464299/552076 [00:03<00:01, 58691.18it/s] 85%|████████▌ | 470717/552076 [00:03<00:01, 53057.10it/s] 87%|████████▋ | 480377/552076 [00:04<00:01, 61353.17it/s] 89%|████████▉ | 491297/552076 [00:04<00:00, 70637.14it/s] 91%|█████████ | 501333/552076 [00:04<00:00, 77524.65it/s] 92%|█████████▏| 510044/552076 [00:04<00:00, 73157.24it/s] 95%|█████████▍| 522015/552076 [00:04<00:00, 82818.81it/s] 97%|█████████▋| 533979/552076 [00:04<00:00, 91243.27it/s] 99%|█████████▉| 546073/552076 [00:04<00:00, 98497.73it/s]100%|██████████| 552076/552076 [00:04<00:00, 117089.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11623/552076 [00:00<00:04, 116228.73it/s]  4%|▍         | 23204/552076 [00:00<00:04, 116099.41it/s]  6%|▌         | 33150/552076 [00:00<00:05, 99526.27it/s]   7%|▋         | 39531/552076 [00:00<00:07, 67356.91it/s]  9%|▉         | 51282/552076 [00:00<00:06, 77246.96it/s] 11%|█▏        | 63452/552076 [00:00<00:05, 86752.90it/s] 14%|█▎        | 75197/552076 [00:00<00:05, 94133.48it/s] 16%|█▌        | 87313/552076 [00:00<00:04, 100883.86it/s] 18%|█▊        | 99511/552076 [00:00<00:04, 106403.48it/s] 20%|██        | 111688/552076 [00:01<00:03, 110588.64it/s] 22%|██▏       | 123813/552076 [00:01<00:03, 113583.06it/s] 25%|██▍       | 135878/552076 [00:01<00:03, 115613.98it/s] 27%|██▋       | 148133/552076 [00:01<00:03, 117607.81it/s] 29%|██▉       | 160322/552076 [00:01<00:03, 118859.82it/s] 31%|███▏      | 172928/552076 [00:01<00:03, 120931.54it/s] 34%|███▎      | 186246/552076 [00:01<00:02, 124362.01it/s] 36%|███▌      | 198891/552076 [00:01<00:02, 124980.90it/s] 38%|███▊      | 211441/552076 [00:01<00:02, 124257.83it/s] 41%|████      | 223904/552076 [00:02<00:02, 123555.39it/s] 43%|████▎     | 236287/552076 [00:02<00:02, 123378.19it/s] 45%|████▌     | 248644/552076 [00:02<00:02, 122078.01it/s] 47%|████▋     | 260869/552076 [00:02<00:02, 121988.99it/s] 49%|████▉     | 273211/552076 [00:02<00:02, 122412.83it/s] 52%|█████▏    | 285461/552076 [00:02<00:02, 121946.44it/s] 54%|█████▍    | 297662/552076 [00:02<00:02, 121424.92it/s] 56%|█████▌    | 309810/552076 [00:02<00:01, 121256.88it/s] 58%|█████▊    | 322137/552076 [00:02<00:01, 121852.80it/s] 61%|██████    | 334326/552076 [00:02<00:01, 120981.89it/s] 63%|██████▎   | 346428/552076 [00:03<00:01, 120432.88it/s] 65%|██████▍   | 358475/552076 [00:03<00:01, 120259.24it/s] 67%|██████▋   | 370504/552076 [00:03<00:01, 118927.88it/s] 69%|██████▉   | 382462/552076 [00:03<00:01, 119120.34it/s] 72%|███████▏  | 395186/552076 [00:03<00:01, 121443.51it/s] 74%|███████▍  | 408364/552076 [00:03<00:01, 124368.53it/s] 76%|███████▌  | 420828/552076 [00:03<00:01, 123941.81it/s] 78%|███████▊  | 433242/552076 [00:03<00:00, 121343.02it/s] 81%|████████  | 445402/552076 [00:03<00:00, 119302.34it/s] 83%|████████▎ | 457358/552076 [00:03<00:00, 118905.53it/s] 85%|████████▌ | 469267/552076 [00:04<00:00, 118360.01it/s] 87%|████████▋ | 481249/552076 [00:04<00:00, 118792.77it/s] 89%|████████▉ | 493138/552076 [00:04<00:00, 104409.00it/s] 91%|█████████▏| 503903/552076 [00:04<00:00, 104872.00it/s] 93%|█████████▎| 515381/552076 [00:04<00:00, 107659.40it/s] 96%|█████████▌| 527353/552076 [00:04<00:00, 111014.21it/s] 98%|█████████▊| 539606/552076 [00:04<00:00, 114231.98it/s]100%|█████████▉| 551474/552076 [00:04<00:00, 115529.16it/s]100%|██████████| 552076/552076 [00:04<00:00, 115227.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11854/552076 [00:00<00:04, 118532.20it/s]  5%|▍         | 25159/552076 [00:00<00:04, 122195.57it/s]  7%|▋         | 37493/552076 [00:00<00:04, 122535.39it/s]  9%|▉         | 49878/552076 [00:00<00:04, 122924.08it/s] 11%|█         | 61043/552076 [00:00<00:04, 119309.30it/s] 13%|█▎        | 72785/552076 [00:00<00:04, 118734.73it/s] 15%|█▌        | 84160/552076 [00:00<00:03, 117192.52it/s] 17%|█▋        | 96385/552076 [00:00<00:03, 118663.24it/s] 19%|█▉        | 107588/552076 [00:00<00:04, 106695.45it/s] 21%|██▏       | 118021/552076 [00:01<00:04, 105743.87it/s] 23%|██▎       | 128432/552076 [00:01<00:05, 70981.20it/s]  25%|██▌       | 140397/552076 [00:01<00:05, 80846.42it/s] 27%|██▋       | 150346/552076 [00:01<00:04, 85660.36it/s] 29%|██▉       | 160075/552076 [00:01<00:04, 88843.46it/s] 31%|███       | 169755/552076 [00:01<00:04, 87260.22it/s] 32%|███▏      | 179044/552076 [00:01<00:04, 83966.39it/s] 34%|███▍      | 190253/552076 [00:01<00:03, 90799.59it/s] 37%|███▋      | 202349/552076 [00:02<00:03, 96927.22it/s] 38%|███▊      | 212475/552076 [00:02<00:03, 95966.93it/s] 40%|████      | 222377/552076 [00:02<00:03, 92108.61it/s] 42%|████▏     | 233455/552076 [00:02<00:03, 97012.29it/s] 44%|████▍     | 244995/552076 [00:02<00:03, 101880.99it/s] 47%|████▋     | 256915/552076 [00:02<00:02, 106523.52it/s] 49%|████▊     | 268562/552076 [00:02<00:02, 109322.30it/s] 51%|█████     | 280165/552076 [00:02<00:02, 111249.25it/s] 53%|█████▎    | 292177/552076 [00:02<00:02, 113768.97it/s] 55%|█████▌    | 303803/552076 [00:02<00:02, 114503.02it/s] 57%|█████▋    | 316276/552076 [00:03<00:02, 117388.71it/s] 60%|█████▉    | 328700/552076 [00:03<00:01, 119362.31it/s] 62%|██████▏   | 340694/552076 [00:03<00:01, 113381.98it/s] 64%|██████▍   | 352785/552076 [00:03<00:01, 115536.72it/s] 66%|██████▌   | 364652/552076 [00:03<00:01, 116456.77it/s] 68%|██████▊   | 376391/552076 [00:03<00:01, 116732.14it/s] 70%|███████   | 388570/552076 [00:03<00:01, 118203.72it/s] 73%|███████▎  | 400424/552076 [00:03<00:01, 118131.40it/s] 75%|███████▍  | 412701/552076 [00:03<00:01, 119484.87it/s] 77%|███████▋  | 424670/552076 [00:03<00:01, 117926.23it/s] 79%|███████▉  | 437089/552076 [00:04<00:00, 119735.72it/s] 81%|████████▏ | 449083/552076 [00:04<00:00, 118940.62it/s] 84%|████████▎ | 460993/552076 [00:04<00:00, 104623.82it/s] 86%|████████▌ | 473025/552076 [00:04<00:00, 108884.34it/s] 88%|████████▊ | 484640/552076 [00:04<00:00, 110965.97it/s] 90%|████████▉ | 496612/552076 [00:04<00:00, 113453.23it/s] 92%|█████████▏| 508112/552076 [00:04<00:00, 112514.22it/s] 94%|█████████▍| 519982/552076 [00:04<00:00, 114300.19it/s] 96%|█████████▋| 532069/552076 [00:04<00:00, 116192.77it/s] 99%|█████████▊| 543962/552076 [00:05<00:00, 116997.52it/s]100%|██████████| 552076/552076 [00:05<00:00, 108050.16it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6193/552076 [00:00<00:08, 61926.37it/s]  2%|▏         | 11950/552076 [00:00<00:08, 60550.87it/s]  3%|▎         | 18053/552076 [00:00<00:08, 59772.91it/s]  4%|▍         | 24673/552076 [00:00<00:08, 61565.96it/s]  6%|▌         | 33593/552076 [00:00<00:07, 67872.92it/s]  8%|▊         | 44169/552076 [00:00<00:06, 75814.10it/s] 10%|▉         | 54065/552076 [00:00<00:06, 81532.69it/s] 12%|█▏        | 63999/552076 [00:00<00:05, 86165.19it/s] 13%|█▎        | 74433/552076 [00:00<00:05, 90914.13it/s] 16%|█▌        | 86042/552076 [00:01<00:04, 97238.83it/s] 18%|█▊        | 97431/552076 [00:01<00:04, 101696.66it/s] 20%|█▉        | 107781/552076 [00:01<00:04, 98695.75it/s] 22%|██▏       | 119932/552076 [00:01<00:04, 104586.69it/s] 24%|██▍       | 132196/552076 [00:01<00:03, 109418.00it/s] 26%|██▌       | 144246/552076 [00:01<00:03, 112520.73it/s] 28%|██▊       | 156172/552076 [00:01<00:03, 114461.03it/s] 30%|███       | 168050/552076 [00:01<00:03, 115721.80it/s] 33%|███▎      | 179710/552076 [00:01<00:03, 115523.13it/s] 35%|███▍      | 191736/552076 [00:01<00:03, 116902.22it/s] 37%|███▋      | 203961/552076 [00:02<00:02, 118454.42it/s] 39%|███▉      | 216233/552076 [00:02<00:02, 119702.00it/s] 41%|████▏     | 228403/552076 [00:02<00:02, 120292.72it/s] 44%|████▎     | 240644/552076 [00:02<00:02, 120919.10it/s] 46%|████▌     | 253352/552076 [00:02<00:02, 122702.74it/s] 48%|████▊     | 265746/552076 [00:02<00:02, 123069.60it/s] 50%|█████     | 278066/552076 [00:02<00:02, 122784.29it/s] 53%|█████▎    | 290390/552076 [00:02<00:02, 122919.28it/s] 55%|█████▍    | 302689/552076 [00:02<00:02, 122927.95it/s] 57%|█████▋    | 315058/552076 [00:02<00:01, 123153.60it/s] 59%|█████▉    | 327377/552076 [00:03<00:01, 122486.68it/s] 62%|██████▏   | 339629/552076 [00:03<00:01, 122118.84it/s] 64%|██████▎   | 351872/552076 [00:03<00:01, 122211.71it/s] 66%|██████▌   | 364095/552076 [00:03<00:01, 122109.29it/s] 68%|██████▊   | 376409/552076 [00:03<00:01, 122415.94it/s] 70%|███████   | 388652/552076 [00:03<00:01, 122399.79it/s] 73%|███████▎  | 401313/552076 [00:03<00:01, 123630.60it/s] 75%|███████▍  | 413680/552076 [00:03<00:01, 122576.58it/s] 77%|███████▋  | 425943/552076 [00:03<00:01, 120810.45it/s] 79%|███████▉  | 438207/552076 [00:03<00:00, 121351.61it/s] 82%|████████▏ | 450349/552076 [00:04<00:00, 121063.75it/s] 84%|████████▍ | 462461/552076 [00:04<00:00, 121025.19it/s] 86%|████████▌ | 474567/552076 [00:04<00:00, 119888.29it/s] 88%|████████▊ | 486748/552076 [00:04<00:00, 120456.40it/s] 90%|█████████ | 498798/552076 [00:04<00:00, 120345.76it/s] 93%|█████████▎| 511121/552076 [00:04<00:00, 121196.70it/s] 95%|█████████▍| 523268/552076 [00:04<00:00, 121276.09it/s] 97%|█████████▋| 535484/552076 [00:04<00:00, 121538.48it/s] 99%|█████████▉| 547825/552076 [00:04<00:00, 122091.74it/s]100%|██████████| 552076/552076 [00:04<00:00, 113320.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11045/552076 [00:00<00:05, 103973.19it/s]  4%|▍         | 22816/552076 [00:00<00:04, 107744.55it/s]  6%|▋         | 34671/552076 [00:00<00:04, 110772.10it/s]  8%|▊         | 46842/552076 [00:00<00:04, 113840.75it/s] 11%|█         | 59071/552076 [00:00<00:04, 116248.94it/s] 13%|█▎        | 71200/552076 [00:00<00:04, 117714.86it/s] 15%|█▍        | 82452/552076 [00:00<00:04, 116104.70it/s] 17%|█▋        | 94741/552076 [00:00<00:03, 118059.59it/s] 19%|█▉        | 106806/552076 [00:00<00:03, 118824.24it/s] 22%|██▏       | 119033/552076 [00:01<00:03, 119834.49it/s] 24%|██▍       | 131151/552076 [00:01<00:03, 120233.75it/s] 26%|██▌       | 143003/552076 [00:01<00:03, 119713.10it/s] 28%|██▊       | 154840/552076 [00:01<00:03, 103368.17it/s] 30%|███       | 166739/552076 [00:01<00:03, 107606.04it/s] 32%|███▏      | 178991/552076 [00:01<00:03, 111684.35it/s] 35%|███▍      | 191199/552076 [00:01<00:03, 114610.76it/s] 37%|███▋      | 202832/552076 [00:01<00:03, 114716.75it/s] 39%|███▉      | 215022/552076 [00:01<00:02, 116778.87it/s] 41%|████      | 227309/552076 [00:01<00:02, 118541.30it/s] 43%|████▎     | 239583/552076 [00:02<00:02, 119770.30it/s] 46%|████▌     | 251863/552076 [00:02<00:02, 120661.48it/s] 48%|████▊     | 263969/552076 [00:02<00:02, 120706.72it/s] 50%|█████     | 276067/552076 [00:02<00:02, 118986.20it/s] 52%|█████▏    | 288109/552076 [00:02<00:02, 119412.02it/s] 54%|█████▍    | 300497/552076 [00:02<00:02, 120716.30it/s] 57%|█████▋    | 312608/552076 [00:02<00:01, 120833.92it/s] 59%|█████▉    | 324910/552076 [00:02<00:01, 121478.83it/s] 61%|██████    | 337067/552076 [00:02<00:01, 121278.53it/s] 63%|██████▎   | 349201/552076 [00:02<00:01, 119401.98it/s] 65%|██████▌   | 361294/552076 [00:03<00:01, 119853.46it/s] 68%|██████▊   | 373288/552076 [00:03<00:01, 117255.54it/s] 70%|██████▉   | 385032/552076 [00:03<00:01, 109430.75it/s] 72%|███████▏  | 396094/552076 [00:03<00:01, 100349.14it/s] 74%|███████▎  | 406359/552076 [00:03<00:01, 100612.63it/s] 76%|███████▌  | 417763/552076 [00:03<00:01, 104296.16it/s] 78%|███████▊  | 429642/552076 [00:03<00:01, 108258.65it/s] 80%|███████▉  | 441556/552076 [00:03<00:00, 111307.01it/s] 82%|████████▏ | 452996/552076 [00:03<00:00, 112215.58it/s] 84%|████████▍ | 464725/552076 [00:04<00:00, 113690.99it/s] 86%|████████▋ | 476443/552076 [00:04<00:00, 114713.95it/s] 88%|████████▊ | 488194/552076 [00:04<00:00, 115537.91it/s] 91%|█████████ | 500234/552076 [00:04<00:00, 116954.67it/s] 93%|█████████▎| 512306/552076 [00:04<00:00, 118058.75it/s] 95%|█████████▍| 524448/552076 [00:04<00:00, 119047.20it/s] 97%|█████████▋| 536371/552076 [00:04<00:00, 118002.85it/s] 99%|█████████▉| 548186/552076 [00:04<00:00, 115512.00it/s]100%|██████████| 552076/552076 [00:04<00:00, 115542.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11090/552076 [00:00<00:04, 110897.73it/s]  4%|▍         | 21972/552076 [00:00<00:04, 110265.52it/s]  6%|▌         | 33022/552076 [00:00<00:04, 110335.55it/s]  8%|▊         | 44150/552076 [00:00<00:04, 110616.60it/s] 10%|▉         | 53808/552076 [00:00<00:04, 105995.06it/s] 11%|█▏        | 62586/552076 [00:00<00:05, 82963.72it/s]  13%|█▎        | 70382/552076 [00:00<00:06, 73781.62it/s] 14%|█▍        | 77599/552076 [00:00<00:07, 66984.16it/s] 15%|█▌        | 84305/552076 [00:01<00:07, 65724.01it/s] 16%|█▋        | 91039/552076 [00:01<00:07, 62720.23it/s] 18%|█▊        | 97347/552076 [00:01<00:07, 61109.07it/s] 19%|█▊        | 103493/552076 [00:01<00:07, 60651.90it/s] 20%|█▉        | 109583/552076 [00:01<00:07, 57316.85it/s] 21%|██        | 115370/552076 [00:01<00:07, 55420.25it/s] 22%|██▏       | 121219/552076 [00:01<00:07, 56306.74it/s] 23%|██▎       | 126910/552076 [00:01<00:07, 54589.46it/s] 24%|██▍       | 132770/552076 [00:01<00:07, 55732.53it/s] 25%|██▌       | 138508/552076 [00:02<00:07, 56215.98it/s] 26%|██▌       | 144250/552076 [00:02<00:07, 54636.01it/s] 27%|██▋       | 150192/552076 [00:02<00:07, 55988.15it/s] 28%|██▊       | 156214/552076 [00:02<00:07, 56546.32it/s] 29%|██▉       | 162034/552076 [00:02<00:06, 57032.45it/s] 30%|███       | 167842/552076 [00:02<00:06, 57342.22it/s] 31%|███▏      | 173746/552076 [00:02<00:06, 55873.01it/s] 33%|███▎      | 179582/552076 [00:02<00:06, 56595.17it/s] 34%|███▎      | 185255/552076 [00:03<00:10, 34029.45it/s] 35%|███▍      | 191113/552076 [00:03<00:09, 38922.59it/s] 36%|███▌      | 196758/552076 [00:03<00:08, 41948.32it/s] 37%|███▋      | 202641/552076 [00:03<00:07, 45899.12it/s] 38%|███▊      | 208061/552076 [00:03<00:07, 48108.77it/s] 39%|███▊      | 213658/552076 [00:03<00:06, 48654.75it/s] 40%|███▉      | 219086/552076 [00:03<00:06, 50215.66it/s] 41%|████      | 224360/552076 [00:03<00:06, 50249.03it/s] 42%|████▏     | 230047/552076 [00:03<00:06, 52067.12it/s] 43%|████▎     | 235599/552076 [00:03<00:05, 53056.39it/s] 44%|████▎     | 241171/552076 [00:04<00:05, 52135.58it/s] 45%|████▍     | 246724/552076 [00:04<00:05, 53109.50it/s] 46%|████▌     | 252099/552076 [00:04<00:05, 53298.84it/s] 47%|████▋     | 257728/552076 [00:04<00:05, 52351.21it/s] 48%|████▊     | 263102/552076 [00:04<00:05, 52758.71it/s] 49%|████▊     | 268924/552076 [00:04<00:05, 54285.87it/s] 50%|████▉     | 274380/552076 [00:04<00:07, 35728.25it/s] 52%|█████▏    | 284355/552076 [00:04<00:06, 44248.02it/s] 53%|█████▎    | 294542/552076 [00:05<00:04, 53290.63it/s] 55%|█████▍    | 302025/552076 [00:05<00:04, 58326.13it/s] 57%|█████▋    | 313022/552076 [00:05<00:03, 67890.42it/s] 58%|█████▊    | 321477/552076 [00:05<00:03, 70965.59it/s] 60%|██████    | 332058/552076 [00:05<00:02, 78743.84it/s] 62%|██████▏   | 341042/552076 [00:05<00:02, 72793.85it/s] 63%|██████▎   | 349187/552076 [00:05<00:02, 68464.42it/s] 65%|██████▍   | 356692/552076 [00:05<00:03, 64627.88it/s] 66%|██████▌   | 363661/552076 [00:06<00:03, 60682.54it/s] 67%|██████▋   | 370133/552076 [00:06<00:03, 60159.98it/s] 68%|██████▊   | 376433/552076 [00:06<00:03, 58087.73it/s] 69%|██████▉   | 382456/552076 [00:06<00:02, 57492.36it/s] 70%|███████   | 388525/552076 [00:06<00:02, 58415.36it/s] 71%|███████▏  | 394476/552076 [00:06<00:02, 57482.16it/s] 73%|███████▎  | 400413/552076 [00:06<00:02, 57816.70it/s] 74%|███████▎  | 406527/552076 [00:06<00:02, 58773.69it/s] 75%|███████▍  | 412694/552076 [00:06<00:02, 59613.38it/s] 76%|███████▌  | 418689/552076 [00:06<00:02, 58505.75it/s] 77%|███████▋  | 424568/552076 [00:07<00:02, 52365.46it/s] 78%|███████▊  | 429945/552076 [00:07<00:02, 48559.33it/s] 79%|███████▉  | 438364/552076 [00:07<00:02, 55620.81it/s] 81%|████████  | 446654/552076 [00:07<00:01, 61712.02it/s] 83%|████████▎ | 455630/552076 [00:07<00:01, 67995.39it/s] 84%|████████▍ | 463002/552076 [00:07<00:01, 65614.19it/s] 85%|████████▌ | 469983/552076 [00:07<00:01, 64921.06it/s] 86%|████████▋ | 476770/552076 [00:07<00:01, 62650.27it/s] 88%|████████▊ | 483259/552076 [00:08<00:01, 61433.17it/s] 89%|████████▊ | 489565/552076 [00:08<00:01, 60959.87it/s] 90%|████████▉ | 495776/552076 [00:08<00:00, 59854.40it/s] 91%|█████████ | 501846/552076 [00:08<00:00, 59296.75it/s] 92%|█████████▏| 507968/552076 [00:08<00:00, 59860.51it/s] 93%|█████████▎| 513998/552076 [00:08<00:00, 58924.98it/s] 94%|█████████▍| 520005/552076 [00:08<00:00, 59263.47it/s] 95%|█████████▌| 525956/552076 [00:08<00:00, 58552.55it/s] 96%|█████████▋| 531993/552076 [00:08<00:00, 59084.76it/s] 97%|█████████▋| 537916/552076 [00:08<00:00, 58082.50it/s] 99%|█████████▊| 543939/552076 [00:09<00:00, 57565.61it/s]100%|█████████▉| 549972/552076 [00:09<00:00, 57941.36it/s]100%|██████████| 552076/552076 [00:09<00:00, 59548.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11709/552076 [00:00<00:04, 117081.46it/s]  4%|▍         | 23589/552076 [00:00<00:04, 117589.81it/s]  6%|▋         | 35626/552076 [00:00<00:04, 118409.57it/s]  9%|▊         | 47694/552076 [00:00<00:04, 119080.12it/s] 11%|█         | 59793/552076 [00:00<00:04, 119644.47it/s] 13%|█▎        | 71810/552076 [00:00<00:04, 119799.71it/s] 15%|█▌        | 83639/552076 [00:00<00:03, 119342.37it/s] 17%|█▋        | 95204/552076 [00:00<00:03, 118207.32it/s] 19%|█▉        | 106354/552076 [00:00<00:03, 113632.38it/s] 21%|██▏       | 117905/552076 [00:01<00:03, 114186.99it/s] 23%|██▎       | 129022/552076 [00:01<00:04, 92841.92it/s]  25%|██▌       | 138744/552076 [00:01<00:04, 91380.25it/s] 27%|██▋       | 148194/552076 [00:01<00:04, 86735.74it/s] 28%|██▊       | 157135/552076 [00:01<00:05, 68110.27it/s] 31%|███       | 168947/552076 [00:01<00:04, 78018.78it/s] 33%|███▎      | 179666/552076 [00:01<00:04, 84954.08it/s] 34%|███▍      | 189096/552076 [00:01<00:04, 80904.28it/s] 36%|███▋      | 201140/552076 [00:02<00:03, 89740.53it/s] 38%|███▊      | 210943/552076 [00:02<00:03, 92075.93it/s] 40%|████      | 221420/552076 [00:02<00:03, 93130.15it/s] 42%|████▏     | 231133/552076 [00:02<00:03, 92354.56it/s] 44%|████▎     | 240650/552076 [00:02<00:03, 92562.71it/s] 45%|████▌     | 250185/552076 [00:02<00:03, 93381.47it/s] 47%|████▋     | 262198/552076 [00:02<00:02, 100063.93it/s] 49%|████▉     | 272437/552076 [00:02<00:02, 96702.17it/s]  51%|█████     | 282294/552076 [00:02<00:03, 86957.15it/s] 53%|█████▎    | 291775/552076 [00:03<00:02, 89170.56it/s] 55%|█████▍    | 303345/552076 [00:03<00:02, 93416.32it/s] 57%|█████▋    | 312905/552076 [00:03<00:02, 80220.00it/s] 59%|█████▉    | 324416/552076 [00:03<00:02, 88243.80it/s] 61%|██████    | 335603/552076 [00:03<00:02, 93828.08it/s] 63%|██████▎   | 345489/552076 [00:03<00:02, 78344.88it/s] 64%|██████▍   | 354106/552076 [00:03<00:02, 74928.78it/s] 66%|██████▌   | 365629/552076 [00:03<00:02, 83710.81it/s] 68%|██████▊   | 374776/552076 [00:03<00:02, 85896.06it/s] 70%|██████▉   | 383895/552076 [00:04<00:02, 75476.44it/s] 71%|███████▏  | 394290/552076 [00:04<00:01, 82232.95it/s] 74%|███████▎  | 406227/552076 [00:04<00:01, 90696.72it/s] 76%|███████▌  | 418171/552076 [00:04<00:01, 97751.71it/s] 78%|███████▊  | 428584/552076 [00:04<00:01, 99424.41it/s] 80%|███████▉  | 438980/552076 [00:04<00:01, 94358.90it/s] 81%|████████▏ | 448865/552076 [00:04<00:01, 95661.42it/s] 83%|████████▎ | 458696/552076 [00:04<00:01, 92712.88it/s] 85%|████████▍ | 468172/552076 [00:05<00:01, 78988.06it/s] 86%|████████▋ | 476567/552076 [00:05<00:01, 72381.47it/s] 88%|████████▊ | 484260/552076 [00:05<00:01, 67377.02it/s] 89%|████████▉ | 491386/552076 [00:05<00:00, 64925.44it/s] 90%|█████████ | 498170/552076 [00:05<00:00, 62589.91it/s] 91%|█████████▏| 504651/552076 [00:05<00:00, 60977.36it/s] 93%|█████████▎| 510913/552076 [00:05<00:00, 60544.97it/s] 94%|█████████▎| 517084/552076 [00:05<00:00, 60273.01it/s] 95%|█████████▍| 523293/552076 [00:05<00:00, 60805.92it/s] 96%|█████████▌| 529432/552076 [00:06<00:00, 59828.27it/s] 97%|█████████▋| 535459/552076 [00:06<00:00, 59002.62it/s] 98%|█████████▊| 541638/552076 [00:06<00:00, 59811.38it/s] 99%|█████████▉| 547646/552076 [00:06<00:00, 58529.87it/s]100%|██████████| 552076/552076 [00:06<00:00, 85454.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4098/552076 [00:00<00:13, 39660.48it/s]  1%|▏         | 8255/552076 [00:00<00:13, 40214.25it/s]  3%|▎         | 14500/552076 [00:00<00:11, 44856.19it/s]  3%|▎         | 18663/552076 [00:00<00:12, 42500.38it/s]  4%|▍         | 24725/552076 [00:00<00:11, 45983.70it/s]  5%|▌         | 30099/552076 [00:00<00:10, 47981.38it/s]  7%|▋         | 36506/552076 [00:00<00:09, 51889.95it/s]  8%|▊         | 42193/552076 [00:00<00:09, 53288.89it/s]  9%|▊         | 47442/552076 [00:00<00:09, 50471.20it/s] 10%|▉         | 53877/552076 [00:01<00:09, 53962.15it/s] 11%|█         | 59516/552076 [00:01<00:09, 54667.60it/s] 12%|█▏        | 65020/552076 [00:01<00:09, 53809.39it/s] 13%|█▎        | 70430/552076 [00:01<00:09, 50772.02it/s] 14%|█▍        | 76344/552076 [00:01<00:09, 52412.22it/s] 15%|█▍        | 81638/552076 [00:01<00:09, 50802.54it/s] 16%|█▌        | 86847/552076 [00:01<00:09, 51181.77it/s] 17%|█▋        | 91999/552076 [00:01<00:08, 51238.14it/s] 18%|█▊        | 97147/552076 [00:01<00:09, 45514.39it/s] 18%|█▊        | 101834/552076 [00:02<00:10, 44389.59it/s] 19%|█▉        | 106453/552076 [00:02<00:10, 44424.62it/s] 20%|██        | 112943/552076 [00:02<00:08, 49068.84it/s] 21%|██▏       | 118181/552076 [00:02<00:08, 49483.04it/s] 22%|██▏       | 123954/552076 [00:02<00:08, 51697.70it/s] 24%|██▍       | 131303/552076 [00:02<00:07, 56745.37it/s] 26%|██▌       | 143852/552076 [00:02<00:06, 67904.67it/s] 29%|██▉       | 162216/552076 [00:02<00:04, 83736.29it/s] 33%|███▎      | 179800/552076 [00:02<00:03, 99346.96it/s] 35%|███▍      | 192804/552076 [00:02<00:03, 105048.78it/s] 37%|███▋      | 205545/552076 [00:03<00:03, 108442.11it/s] 39%|███▉      | 217983/552076 [00:03<00:03, 108410.65it/s] 42%|████▏     | 229940/552076 [00:03<00:02, 111446.18it/s] 44%|████▍     | 242407/552076 [00:03<00:02, 115107.37it/s] 46%|████▌     | 254510/552076 [00:03<00:03, 93598.97it/s]  48%|████▊     | 267529/552076 [00:03<00:02, 102215.16it/s] 51%|█████     | 279336/552076 [00:03<00:02, 106504.20it/s] 53%|█████▎    | 291213/552076 [00:03<00:02, 109907.85it/s] 55%|█████▍    | 302910/552076 [00:03<00:02, 111934.87it/s] 57%|█████▋    | 314834/552076 [00:04<00:02, 114030.23it/s] 59%|█████▉    | 326905/552076 [00:04<00:01, 115952.31it/s] 61%|██████▏   | 338706/552076 [00:04<00:01, 116064.68it/s] 63%|██████▎   | 350456/552076 [00:04<00:01, 113107.46it/s] 66%|██████▌   | 361884/552076 [00:04<00:01, 108833.05it/s] 68%|██████▊   | 372884/552076 [00:04<00:01, 104876.41it/s] 70%|██████▉   | 384534/552076 [00:04<00:01, 108110.74it/s] 72%|███████▏  | 396619/552076 [00:04<00:01, 111638.97it/s] 74%|███████▍  | 408819/552076 [00:04<00:01, 114555.77it/s] 76%|███████▌  | 420851/552076 [00:05<00:01, 116223.74it/s] 78%|███████▊  | 432895/552076 [00:05<00:01, 117453.72it/s] 81%|████████  | 444984/552076 [00:05<00:00, 118463.12it/s] 83%|████████▎ | 456869/552076 [00:05<00:00, 116234.52it/s] 85%|████████▍ | 468529/552076 [00:05<00:00, 95017.56it/s]  87%|████████▋ | 478690/552076 [00:05<00:00, 94919.79it/s] 89%|████████▊ | 488644/552076 [00:05<00:00, 95654.69it/s] 91%|█████████ | 499644/552076 [00:05<00:00, 99547.90it/s] 93%|█████████▎| 511258/552076 [00:05<00:00, 104003.48it/s] 95%|█████████▍| 522959/552076 [00:05<00:00, 107589.96it/s] 97%|█████████▋| 533917/552076 [00:06<00:00, 102255.34it/s] 99%|█████████▉| 545333/552076 [00:06<00:00, 105555.76it/s]100%|██████████| 552076/552076 [00:06<00:00, 87583.40it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8782/552076 [00:00<00:06, 87813.59it/s]  4%|▎         | 19502/552076 [00:00<00:05, 92849.05it/s]  5%|▌         | 29978/552076 [00:00<00:05, 96127.11it/s]  7%|▋         | 41036/552076 [00:00<00:05, 100048.95it/s]  9%|▉         | 51974/552076 [00:00<00:04, 102676.40it/s] 11%|█▏        | 62628/552076 [00:00<00:04, 103804.67it/s] 13%|█▎        | 73758/552076 [00:00<00:04, 105943.67it/s] 15%|█▌        | 84817/552076 [00:00<00:04, 107294.37it/s] 17%|█▋        | 95084/552076 [00:00<00:04, 99853.24it/s]  19%|█▉        | 104849/552076 [00:01<00:04, 96453.84it/s] 21%|██        | 116409/552076 [00:01<00:04, 101496.39it/s] 23%|██▎       | 127947/552076 [00:01<00:04, 105295.48it/s] 25%|██▌       | 139455/552076 [00:01<00:03, 108050.35it/s] 27%|██▋       | 151604/552076 [00:01<00:03, 111758.39it/s] 30%|██▉       | 163262/552076 [00:01<00:03, 113160.93it/s] 32%|███▏      | 175236/552076 [00:01<00:03, 115055.92it/s] 34%|███▍      | 187233/552076 [00:01<00:03, 116484.95it/s] 36%|███▌      | 199213/552076 [00:01<00:03, 117458.84it/s] 38%|███▊      | 211135/552076 [00:01<00:02, 117979.73it/s] 41%|████      | 223666/552076 [00:02<00:02, 120086.28it/s] 43%|████▎     | 236621/552076 [00:02<00:02, 122774.92it/s] 45%|████▌     | 248929/552076 [00:02<00:02, 122599.76it/s] 47%|████▋     | 261210/552076 [00:02<00:02, 122260.49it/s] 50%|████▉     | 273496/552076 [00:02<00:02, 122439.42it/s] 52%|█████▏    | 285763/552076 [00:02<00:02, 122507.14it/s] 54%|█████▍    | 298021/552076 [00:02<00:02, 122326.38it/s] 56%|█████▌    | 310259/552076 [00:02<00:01, 122183.67it/s] 58%|█████▊    | 322492/552076 [00:02<00:01, 122227.04it/s] 61%|██████    | 335749/552076 [00:02<00:01, 125154.41it/s] 63%|██████▎   | 348293/552076 [00:03<00:01, 125233.10it/s] 65%|██████▌   | 360830/552076 [00:03<00:01, 124469.89it/s] 68%|██████▊   | 373288/552076 [00:03<00:01, 123370.18it/s] 70%|██████▉   | 385635/552076 [00:03<00:01, 122191.33it/s] 72%|███████▏  | 397864/552076 [00:03<00:01, 121929.22it/s] 74%|███████▍  | 410064/552076 [00:03<00:01, 121201.35it/s] 76%|███████▋  | 422190/552076 [00:03<00:01, 120549.76it/s] 79%|███████▊  | 434512/552076 [00:03<00:00, 121337.09it/s] 81%|████████  | 447827/552076 [00:03<00:00, 124653.39it/s] 83%|████████▎ | 460319/552076 [00:03<00:00, 121308.28it/s] 86%|████████▌ | 472488/552076 [00:04<00:00, 120656.28it/s] 88%|████████▊ | 484611/552076 [00:04<00:00, 120826.48it/s] 90%|████████▉ | 496798/552076 [00:04<00:00, 121135.71it/s] 92%|█████████▏| 508926/552076 [00:04<00:00, 120688.49it/s] 94%|█████████▍| 521005/552076 [00:04<00:00, 120715.59it/s] 97%|█████████▋| 533084/552076 [00:04<00:00, 118892.46it/s] 99%|█████████▉| 546117/552076 [00:04<00:00, 122106.13it/s]100%|██████████| 552076/552076 [00:04<00:00, 116887.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11817/552076 [00:00<00:04, 118159.97it/s]  4%|▍         | 23178/552076 [00:00<00:04, 116755.23it/s]  6%|▋         | 34922/552076 [00:00<00:04, 116959.60it/s]  8%|▊         | 46656/552076 [00:00<00:04, 117072.99it/s] 10%|█         | 55529/552076 [00:00<00:05, 90315.34it/s]  12%|█▏        | 66782/552076 [00:00<00:05, 95999.51it/s] 14%|█▍        | 79563/552076 [00:00<00:04, 103743.72it/s] 17%|█▋        | 92012/552076 [00:00<00:04, 109201.80it/s] 19%|█▊        | 102821/552076 [00:01<00:04, 92057.56it/s] 21%|██        | 114757/552076 [00:01<00:04, 98838.27it/s] 23%|██▎       | 126159/552076 [00:01<00:04, 102949.86it/s] 25%|██▍       | 136784/552076 [00:01<00:04, 94372.50it/s]  27%|██▋       | 146592/552076 [00:01<00:04, 89378.71it/s] 29%|██▊       | 158484/552076 [00:01<00:04, 96574.15it/s] 31%|███       | 170679/552076 [00:01<00:03, 103002.68it/s] 33%|███▎      | 183505/552076 [00:01<00:03, 109468.10it/s] 35%|███▌      | 195906/552076 [00:01<00:03, 113457.32it/s] 38%|███▊      | 207557/552076 [00:01<00:03, 108957.94it/s] 40%|███▉      | 218705/552076 [00:02<00:03, 85411.01it/s]  42%|████▏     | 230669/552076 [00:02<00:03, 93428.57it/s] 44%|████▍     | 242841/552076 [00:02<00:03, 100430.06it/s] 46%|████▌     | 254944/552076 [00:02<00:02, 105832.82it/s] 48%|████▊     | 267108/552076 [00:02<00:02, 110125.99it/s] 51%|█████     | 279714/552076 [00:02<00:02, 114465.48it/s] 53%|█████▎    | 292018/552076 [00:02<00:02, 116907.80it/s] 55%|█████▌    | 303988/552076 [00:02<00:02, 115365.45it/s] 57%|█████▋    | 316045/552076 [00:02<00:02, 116878.72it/s] 59%|█████▉    | 328095/552076 [00:03<00:01, 117940.43it/s] 62%|██████▏   | 340362/552076 [00:03<00:01, 119319.59it/s] 64%|██████▍   | 352531/552076 [00:03<00:01, 120019.47it/s] 66%|██████▌   | 364703/552076 [00:03<00:01, 120523.97it/s] 68%|██████▊   | 376845/552076 [00:03<00:01, 120789.27it/s] 71%|███████   | 389487/552076 [00:03<00:01, 122422.09it/s] 73%|███████▎  | 402043/552076 [00:03<00:01, 123345.35it/s] 75%|███████▌  | 414397/552076 [00:03<00:01, 122863.15it/s] 77%|███████▋  | 426697/552076 [00:03<00:01, 122214.09it/s] 80%|███████▉  | 438929/552076 [00:04<00:00, 119148.92it/s] 82%|████████▏ | 450992/552076 [00:04<00:00, 119586.39it/s] 84%|████████▍ | 462985/552076 [00:04<00:00, 119686.48it/s] 86%|████████▌ | 474966/552076 [00:04<00:00, 118686.58it/s] 88%|████████▊ | 486846/552076 [00:04<00:00, 107221.47it/s] 90%|█████████ | 497787/552076 [00:04<00:00, 107070.96it/s] 92%|█████████▏| 508896/552076 [00:04<00:00, 107474.32it/s] 94%|█████████▍| 521127/552076 [00:04<00:00, 111530.49it/s] 96%|█████████▋| 532395/552076 [00:04<00:00, 90084.66it/s]  98%|█████████▊| 542148/552076 [00:05<00:00, 92056.09it/s]100%|██████████| 552076/552076 [00:05<00:00, 108072.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11962/552076 [00:00<00:04, 119615.27it/s]  4%|▍         | 22198/552076 [00:00<00:04, 113855.56it/s]  5%|▌         | 29388/552076 [00:00<00:05, 96890.71it/s]   7%|▋         | 41105/552076 [00:00<00:04, 102196.96it/s] 10%|▉         | 53442/552076 [00:00<00:04, 107743.85it/s] 12%|█▏        | 66265/552076 [00:00<00:04, 113167.17it/s] 14%|█▍        | 78460/552076 [00:00<00:04, 115663.77it/s] 16%|█▋        | 90625/552076 [00:00<00:03, 117394.78it/s] 19%|█▊        | 102823/552076 [00:00<00:03, 118733.61it/s] 21%|██        | 115020/552076 [00:01<00:03, 119684.95it/s] 23%|██▎       | 127176/552076 [00:01<00:03, 120238.59it/s] 25%|██▌       | 139400/552076 [00:01<00:03, 120830.34it/s] 27%|██▋       | 151597/552076 [00:01<00:03, 121167.53it/s] 30%|██▉       | 164311/552076 [00:01<00:03, 122898.70it/s] 32%|███▏      | 176685/552076 [00:01<00:03, 123147.46it/s] 34%|███▍      | 188964/552076 [00:01<00:02, 121918.43it/s] 36%|███▋      | 201223/552076 [00:01<00:02, 122118.55it/s] 39%|███▊      | 213419/552076 [00:01<00:02, 121467.74it/s] 41%|████      | 225561/552076 [00:01<00:02, 121451.97it/s] 43%|████▎     | 237699/552076 [00:02<00:02, 121094.29it/s] 45%|████▌     | 249804/552076 [00:02<00:02, 120942.59it/s] 47%|████▋     | 261895/552076 [00:02<00:02, 120846.14it/s] 50%|████▉     | 274625/552076 [00:02<00:02, 122710.10it/s] 52%|█████▏    | 286902/552076 [00:02<00:02, 121864.86it/s] 54%|█████▍    | 299134/552076 [00:02<00:02, 121998.38it/s] 56%|█████▋    | 311338/552076 [00:02<00:02, 119770.15it/s] 59%|█████▊    | 323327/552076 [00:02<00:01, 115944.05it/s] 61%|██████    | 334957/552076 [00:02<00:01, 112177.95it/s] 63%|██████▎   | 346226/552076 [00:02<00:01, 106081.63it/s] 65%|██████▍   | 356939/552076 [00:03<00:02, 87246.26it/s]  67%|██████▋   | 368993/552076 [00:03<00:01, 95128.14it/s] 69%|██████▉   | 381308/552076 [00:03<00:01, 102096.00it/s] 71%|███████   | 393114/552076 [00:03<00:01, 106411.78it/s] 73%|███████▎  | 405636/552076 [00:03<00:01, 111431.96it/s] 76%|███████▌  | 418015/552076 [00:03<00:01, 114871.79it/s] 78%|███████▊  | 429801/552076 [00:03<00:01, 113330.11it/s] 80%|████████  | 441751/552076 [00:03<00:00, 112935.42it/s] 82%|████████▏ | 453195/552076 [00:03<00:00, 110345.98it/s] 84%|████████▍ | 464348/552076 [00:04<00:00, 104472.08it/s] 86%|████████▌ | 474943/552076 [00:04<00:00, 96388.74it/s]  88%|████████▊ | 484809/552076 [00:04<00:00, 72895.28it/s] 89%|████████▉ | 493110/552076 [00:04<00:00, 60242.96it/s] 91%|█████████ | 500207/552076 [00:04<00:00, 61455.60it/s] 92%|█████████▏| 508589/552076 [00:04<00:00, 65029.14it/s] 94%|█████████▍| 519457/552076 [00:04<00:00, 73937.99it/s] 96%|█████████▋| 531515/552076 [00:05<00:00, 83643.25it/s] 98%|█████████▊| 543118/552076 [00:05<00:00, 91286.04it/s]100%|██████████| 552076/552076 [00:05<00:00, 106064.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7012/552076 [00:00<00:07, 70114.22it/s]  3%|▎         | 17905/552076 [00:00<00:06, 78506.48it/s]  5%|▌         | 28729/552076 [00:00<00:06, 85555.87it/s]  7%|▋         | 40687/552076 [00:00<00:05, 93539.99it/s] 10%|▉         | 52557/552076 [00:00<00:05, 99891.14it/s] 12%|█▏        | 64722/552076 [00:00<00:04, 105554.00it/s] 14%|█▍        | 76290/552076 [00:00<00:04, 108398.13it/s] 16%|█▌        | 86867/552076 [00:00<00:04, 98267.13it/s]  18%|█▊        | 96691/552076 [00:00<00:05, 87010.08it/s] 19%|█▉        | 105628/552076 [00:01<00:06, 63994.45it/s] 20%|██        | 113071/552076 [00:01<00:08, 50755.55it/s] 22%|██▏       | 119308/552076 [00:01<00:09, 44870.03it/s] 23%|██▎       | 124734/552076 [00:01<00:09, 47088.88it/s] 24%|██▎       | 130129/552076 [00:01<00:09, 45513.31it/s] 24%|██▍       | 135172/552076 [00:01<00:09, 45571.72it/s] 25%|██▌       | 140074/552076 [00:02<00:09, 44914.95it/s] 26%|██▌       | 144809/552076 [00:02<00:08, 45264.40it/s] 27%|██▋       | 149507/552076 [00:02<00:08, 45594.68it/s] 28%|██▊       | 154459/552076 [00:02<00:08, 44634.02it/s] 29%|██▉       | 159062/552076 [00:02<00:08, 43878.73it/s] 30%|██▉       | 163515/552076 [00:02<00:09, 42786.36it/s] 30%|███       | 167846/552076 [00:02<00:09, 42386.21it/s] 31%|███       | 172306/552076 [00:02<00:08, 43025.30it/s] 32%|███▏      | 176637/552076 [00:02<00:08, 42264.49it/s] 33%|███▎      | 180887/552076 [00:02<00:08, 42310.04it/s] 34%|███▎      | 185134/552076 [00:03<00:08, 41726.83it/s] 34%|███▍      | 189332/552076 [00:03<00:08, 41802.41it/s] 35%|███▌      | 194899/552076 [00:03<00:07, 45177.86it/s] 36%|███▌      | 200066/552076 [00:03<00:07, 46706.43it/s] 37%|███▋      | 205417/552076 [00:03<00:07, 48557.49it/s] 38%|███▊      | 210883/552076 [00:03<00:06, 50238.63it/s] 39%|███▉      | 216276/552076 [00:03<00:06, 50030.88it/s] 40%|████      | 221625/552076 [00:03<00:06, 51014.56it/s] 41%|████      | 227269/552076 [00:03<00:06, 52528.42it/s] 42%|████▏     | 232842/552076 [00:04<00:05, 53448.29it/s] 43%|████▎     | 238217/552076 [00:04<00:05, 52947.58it/s] 44%|████▍     | 243534/552076 [00:04<00:06, 51407.47it/s] 45%|████▌     | 249041/552076 [00:04<00:05, 51832.23it/s] 46%|████▌     | 254243/552076 [00:04<00:06, 47975.59it/s] 47%|████▋     | 259111/552076 [00:04<00:07, 41699.58it/s] 48%|████▊     | 263646/552076 [00:04<00:06, 42095.20it/s] 49%|████▊     | 267994/552076 [00:04<00:07, 39777.36it/s] 49%|████▉     | 272095/552076 [00:04<00:07, 37036.30it/s] 50%|█████     | 277092/552076 [00:05<00:07, 38877.44it/s] 51%|█████     | 281097/552076 [00:05<00:07, 37099.34it/s] 52%|█████▏    | 285804/552076 [00:05<00:06, 39616.04it/s] 53%|█████▎    | 291056/552076 [00:05<00:06, 41798.39it/s] 54%|█████▎    | 296566/552076 [00:05<00:05, 45061.32it/s] 55%|█████▍    | 302076/552076 [00:05<00:05, 47665.76it/s] 56%|█████▌    | 307615/552076 [00:05<00:04, 49746.84it/s] 57%|█████▋    | 312716/552076 [00:05<00:04, 48902.62it/s] 58%|█████▊    | 318246/552076 [00:05<00:04, 50660.12it/s] 59%|█████▊    | 323393/552076 [00:06<00:04, 50866.66it/s] 60%|█████▉    | 328568/552076 [00:06<00:04, 49509.01it/s] 60%|██████    | 333917/552076 [00:06<00:04, 50639.58it/s] 61%|██████▏   | 339207/552076 [00:06<00:04, 51295.68it/s] 62%|██████▏   | 344662/552076 [00:06<00:03, 52230.26it/s] 63%|██████▎   | 349910/552076 [00:06<00:04, 49914.92it/s] 65%|██████▍   | 357846/552076 [00:06<00:03, 56128.53it/s] 66%|██████▌   | 363741/552076 [00:06<00:03, 55722.61it/s] 67%|██████▋   | 369512/552076 [00:06<00:03, 55257.37it/s] 68%|██████▊   | 375178/552076 [00:06<00:03, 54094.42it/s] 69%|██████▉   | 380691/552076 [00:07<00:03, 53964.44it/s] 70%|██████▉   | 386329/552076 [00:07<00:03, 54667.07it/s] 71%|███████   | 391849/552076 [00:07<00:02, 53800.77it/s] 72%|███████▏  | 397270/552076 [00:07<00:02, 53375.42it/s] 73%|███████▎  | 402637/552076 [00:07<00:02, 53458.17it/s] 74%|███████▍  | 408003/552076 [00:07<00:02, 52168.69it/s] 75%|███████▍  | 413441/552076 [00:07<00:02, 51192.69it/s] 76%|███████▌  | 418891/552076 [00:07<00:02, 52141.33it/s] 77%|███████▋  | 424480/552076 [00:07<00:02, 53211.12it/s] 78%|███████▊  | 429819/552076 [00:08<00:02, 52090.71it/s] 79%|███████▉  | 435424/552076 [00:08<00:02, 53218.22it/s] 80%|███████▉  | 440765/552076 [00:08<00:02, 52727.07it/s] 81%|████████  | 446052/552076 [00:08<00:02, 51794.92it/s] 82%|████████▏ | 451245/552076 [00:08<00:02, 48869.98it/s] 83%|████████▎ | 456643/552076 [00:08<00:01, 50298.21it/s] 84%|████████▎ | 461982/552076 [00:08<00:01, 50347.01it/s] 85%|████████▍ | 467420/552076 [00:08<00:01, 51492.65it/s] 86%|████████▌ | 472650/552076 [00:08<00:01, 51547.08it/s] 87%|████████▋ | 478116/552076 [00:08<00:01, 52442.23it/s] 88%|████████▊ | 483683/552076 [00:09<00:01, 52748.24it/s] 89%|████████▊ | 489236/552076 [00:09<00:01, 53552.26it/s] 90%|████████▉ | 494606/552076 [00:09<00:01, 52565.47it/s] 91%|█████████ | 500197/552076 [00:09<00:00, 53525.55it/s] 92%|█████████▏| 505563/552076 [00:09<00:00, 53054.28it/s] 93%|█████████▎| 511145/552076 [00:09<00:00, 53854.77it/s] 94%|█████████▎| 516541/552076 [00:09<00:00, 53039.54it/s] 95%|█████████▍| 522213/552076 [00:09<00:00, 54090.81it/s] 96%|█████████▌| 527634/552076 [00:09<00:00, 53054.87it/s] 97%|█████████▋| 533156/552076 [00:09<00:00, 52956.86it/s] 98%|█████████▊| 538511/552076 [00:10<00:00, 53133.36it/s] 99%|█████████▊| 543836/552076 [00:10<00:00, 53131.20it/s]100%|█████████▉| 549379/552076 [00:10<00:00, 53799.76it/s]100%|██████████| 552076/552076 [00:10<00:00, 53429.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4147/552076 [00:00<00:13, 41466.58it/s]  1%|▏         | 7800/552076 [00:00<00:13, 39065.76it/s]  2%|▏         | 12331/552076 [00:00<00:13, 40383.68it/s]  3%|▎         | 15320/552076 [00:00<00:14, 36193.21it/s]  3%|▎         | 19153/552076 [00:00<00:14, 36364.51it/s]  4%|▍         | 22614/552076 [00:00<00:15, 34903.27it/s]  5%|▍         | 26930/552076 [00:00<00:14, 36876.62it/s]  5%|▌         | 30351/552076 [00:00<00:14, 35850.14it/s]  6%|▌         | 34381/552076 [00:00<00:14, 36943.15it/s]  7%|▋         | 38361/552076 [00:01<00:13, 36991.27it/s]  8%|▊         | 44247/552076 [00:01<00:12, 41110.93it/s]  9%|▉         | 49670/552076 [00:01<00:11, 44327.18it/s] 10%|█         | 55263/552076 [00:01<00:10, 47268.73it/s] 11%|█         | 60799/552076 [00:01<00:09, 49435.88it/s] 12%|█▏        | 66076/552076 [00:01<00:09, 49260.75it/s] 13%|█▎        | 71705/552076 [00:01<00:09, 50495.57it/s] 14%|█▍        | 77524/552076 [00:01<00:09, 52580.58it/s] 15%|█▌        | 82854/552076 [00:01<00:08, 52692.31it/s] 16%|█▌        | 88360/552076 [00:01<00:08, 53380.30it/s] 17%|█▋        | 93762/552076 [00:02<00:08, 52421.68it/s] 18%|█▊        | 99184/552076 [00:02<00:08, 52333.30it/s] 19%|█▉        | 104778/552076 [00:02<00:08, 53365.02it/s] 20%|█▉        | 110248/552076 [00:02<00:08, 52524.63it/s] 21%|██        | 115910/552076 [00:02<00:08, 51979.23it/s] 22%|██▏       | 121319/552076 [00:02<00:08, 52594.43it/s] 23%|██▎       | 126590/552076 [00:02<00:08, 52232.83it/s] 24%|██▍       | 131822/552076 [00:02<00:08, 51822.80it/s] 25%|██▍       | 137158/552076 [00:02<00:07, 52273.82it/s] 26%|██▌       | 142433/552076 [00:02<00:07, 51344.57it/s] 27%|██▋       | 147758/552076 [00:03<00:07, 51901.09it/s] 28%|██▊       | 152955/552076 [00:03<00:07, 51577.66it/s] 29%|██▊       | 158279/552076 [00:03<00:07, 52064.10it/s] 30%|██▉       | 163491/552076 [00:03<00:07, 50926.58it/s] 31%|███       | 168593/552076 [00:03<00:07, 49952.22it/s] 32%|███▏      | 174216/552076 [00:03<00:07, 50646.02it/s] 33%|███▎      | 179736/552076 [00:03<00:07, 51931.12it/s] 33%|███▎      | 184944/552076 [00:03<00:07, 51652.53it/s] 34%|███▍      | 190413/552076 [00:03<00:06, 52527.47it/s] 35%|███▌      | 195677/552076 [00:04<00:06, 51619.13it/s] 36%|███▋      | 201116/552076 [00:04<00:06, 51806.01it/s] 37%|███▋      | 206684/552076 [00:04<00:06, 52909.30it/s] 38%|███▊      | 212273/552076 [00:04<00:06, 52595.03it/s] 39%|███▉      | 217781/552076 [00:04<00:06, 53315.82it/s] 40%|████      | 223121/552076 [00:04<00:06, 53059.77it/s] 41%|████▏     | 228838/552076 [00:04<00:05, 54227.74it/s] 42%|████▏     | 234365/552076 [00:04<00:05, 53549.32it/s] 43%|████▎     | 240006/552076 [00:04<00:05, 54375.40it/s] 44%|████▍     | 245454/552076 [00:04<00:05, 54029.62it/s] 45%|████▌     | 250865/552076 [00:05<00:05, 50329.03it/s] 46%|████▋     | 255954/552076 [00:05<00:06, 47791.73it/s] 47%|████▋     | 261278/552076 [00:05<00:05, 49125.93it/s] 48%|████▊     | 266797/552076 [00:05<00:05, 50799.44it/s] 49%|████▉     | 272554/552076 [00:05<00:05, 52656.95it/s] 50%|█████     | 278096/552076 [00:05<00:05, 52597.11it/s] 51%|█████▏    | 283716/552076 [00:05<00:05, 53293.42it/s] 52%|█████▏    | 289241/552076 [00:05<00:04, 53865.25it/s] 53%|█████▎    | 294873/552076 [00:05<00:04, 54578.28it/s] 54%|█████▍    | 300349/552076 [00:06<00:04, 53252.50it/s] 55%|█████▌    | 305694/552076 [00:06<00:04, 52512.43it/s] 56%|█████▋    | 310962/552076 [00:06<00:04, 51294.86it/s] 57%|█████▋    | 316557/552076 [00:06<00:04, 52313.48it/s] 58%|█████▊    | 322179/552076 [00:06<00:04, 53426.62it/s] 59%|█████▉    | 327714/552076 [00:06<00:04, 53989.31it/s] 60%|██████    | 333127/552076 [00:06<00:04, 52921.53it/s] 61%|██████▏   | 338479/552076 [00:06<00:04, 52953.24it/s] 62%|██████▏   | 343954/552076 [00:06<00:03, 53479.44it/s] 63%|██████▎   | 349542/552076 [00:06<00:03, 54177.08it/s] 64%|██████▍   | 354968/552076 [00:07<00:03, 51935.61it/s] 65%|██████▌   | 360187/552076 [00:07<00:03, 52004.52it/s] 66%|██████▌   | 365427/552076 [00:07<00:03, 51292.27it/s] 67%|██████▋   | 370571/552076 [00:07<00:03, 50339.72it/s] 68%|██████▊   | 376092/552076 [00:07<00:03, 51707.76it/s] 69%|██████▉   | 381499/552076 [00:07<00:03, 51592.89it/s] 70%|███████   | 386951/552076 [00:07<00:03, 52437.13it/s] 71%|███████   | 392239/552076 [00:07<00:03, 52361.55it/s] 72%|███████▏  | 397877/552076 [00:07<00:02, 53504.66it/s] 73%|███████▎  | 403363/552076 [00:07<00:02, 52775.57it/s] 74%|███████▍  | 408896/552076 [00:08<00:02, 53515.80it/s] 75%|███████▌  | 414258/552076 [00:08<00:02, 53123.64it/s] 76%|███████▌  | 419911/552076 [00:08<00:02, 54101.00it/s] 77%|███████▋  | 425333/552076 [00:08<00:02, 53284.68it/s] 78%|███████▊  | 431018/552076 [00:08<00:02, 54305.43it/s] 79%|███████▉  | 436461/552076 [00:08<00:02, 54015.85it/s] 80%|████████  | 442081/552076 [00:08<00:02, 54652.85it/s] 81%|████████  | 447554/552076 [00:08<00:01, 53390.96it/s] 82%|████████▏ | 452905/552076 [00:08<00:01, 52869.28it/s] 83%|████████▎ | 458554/552076 [00:09<00:01, 53904.38it/s] 84%|████████▍ | 464242/552076 [00:09<00:01, 53769.85it/s] 85%|████████▌ | 469930/552076 [00:09<00:01, 54665.92it/s] 86%|████████▌ | 475406/552076 [00:09<00:01, 54335.77it/s] 87%|████████▋ | 481152/552076 [00:09<00:01, 55236.22it/s] 88%|████████▊ | 486687/552076 [00:09<00:01, 54331.17it/s] 89%|████████▉ | 492762/552076 [00:09<00:01, 56109.15it/s] 90%|█████████ | 498395/552076 [00:09<00:00, 54243.08it/s] 91%|█████████▏| 503942/552076 [00:09<00:00, 54604.90it/s] 92%|█████████▏| 509498/552076 [00:09<00:00, 54886.89it/s] 93%|█████████▎| 515002/552076 [00:10<00:00, 53775.35it/s] 94%|█████████▍| 520440/552076 [00:10<00:00, 53232.99it/s] 95%|█████████▌| 526201/552076 [00:10<00:00, 54474.39it/s] 96%|█████████▋| 531730/552076 [00:10<00:00, 54488.41it/s] 97%|█████████▋| 537588/552076 [00:10<00:00, 55653.40it/s] 98%|█████████▊| 543291/552076 [00:10<00:00, 54991.82it/s] 99%|█████████▉| 548802/552076 [00:10<00:00, 54949.34it/s]100%|██████████| 552076/552076 [00:10<00:00, 51526.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3679/552076 [00:00<00:15, 34530.48it/s]  1%|▏         | 7372/552076 [00:00<00:15, 35059.73it/s]  2%|▏         | 13733/552076 [00:00<00:13, 40515.05it/s]  4%|▍         | 21950/552076 [00:00<00:11, 47454.76it/s]  5%|▌         | 28199/552076 [00:00<00:10, 51144.80it/s]  7%|▋         | 36423/552076 [00:00<00:08, 57674.05it/s]  9%|▊         | 47762/552076 [00:00<00:07, 67553.45it/s] 10%|█         | 56487/552076 [00:00<00:06, 72459.90it/s] 12%|█▏        | 67842/552076 [00:00<00:05, 81284.07it/s] 14%|█▍        | 76917/552076 [00:01<00:05, 83908.66it/s] 16%|█▌        | 85912/552076 [00:01<00:06, 77350.76it/s] 17%|█▋        | 94172/552076 [00:01<00:05, 78148.65it/s] 19%|█▊        | 102356/552076 [00:01<00:05, 78784.36it/s] 20%|██        | 110494/552076 [00:01<00:05, 76534.64it/s] 21%|██▏       | 118344/552076 [00:01<00:05, 76286.69it/s] 23%|██▎       | 126110/552076 [00:01<00:06, 69846.97it/s] 24%|██▍       | 134195/552076 [00:01<00:05, 72818.97it/s] 26%|██▌       | 141652/552076 [00:01<00:05, 73036.65it/s] 28%|██▊       | 152983/552076 [00:02<00:04, 81583.19it/s] 29%|██▉       | 161548/552076 [00:02<00:07, 51806.30it/s] 31%|███▏      | 173499/552076 [00:02<00:06, 62413.56it/s] 34%|███▎      | 185500/552076 [00:02<00:05, 72910.41it/s] 36%|███▌      | 197666/552076 [00:02<00:04, 82871.42it/s] 38%|███▊      | 207937/552076 [00:02<00:04, 85881.54it/s] 39%|███▉      | 217942/552076 [00:02<00:03, 89562.21it/s] 42%|████▏     | 230095/552076 [00:02<00:03, 97233.73it/s] 44%|████▍     | 242461/552076 [00:03<00:02, 103892.58it/s] 46%|████▌     | 254811/552076 [00:03<00:02, 109087.73it/s] 48%|████▊     | 266326/552076 [00:03<00:02, 109125.46it/s] 50%|█████     | 278509/552076 [00:03<00:02, 112647.41it/s] 53%|█████▎    | 290774/552076 [00:03<00:02, 115472.07it/s] 55%|█████▍    | 302980/552076 [00:03<00:02, 117370.73it/s] 57%|█████▋    | 315267/552076 [00:03<00:01, 118967.49it/s] 59%|█████▉    | 327514/552076 [00:03<00:01, 119996.98it/s] 62%|██████▏   | 339608/552076 [00:03<00:01, 120259.12it/s] 64%|██████▎   | 351806/552076 [00:03<00:01, 120767.39it/s] 66%|██████▌   | 363930/552076 [00:04<00:02, 79698.81it/s]  68%|██████▊   | 374369/552076 [00:04<00:02, 85785.47it/s] 70%|██████▉   | 385035/552076 [00:04<00:01, 91134.74it/s] 72%|███████▏  | 395239/552076 [00:04<00:02, 73018.57it/s] 73%|███████▎  | 403878/552076 [00:04<00:02, 65001.28it/s] 75%|███████▍  | 411478/552076 [00:04<00:02, 57418.83it/s] 76%|███████▌  | 418152/552076 [00:05<00:02, 59566.86it/s] 77%|███████▋  | 424782/552076 [00:05<00:02, 58733.03it/s] 78%|███████▊  | 431129/552076 [00:05<00:02, 56290.86it/s] 79%|███████▉  | 437112/552076 [00:05<00:02, 56425.81it/s] 80%|████████  | 443002/552076 [00:05<00:01, 54750.62it/s] 81%|████████▏ | 448661/552076 [00:05<00:01, 54962.56it/s] 82%|████████▏ | 454287/552076 [00:05<00:01, 53372.05it/s] 83%|████████▎ | 459725/552076 [00:05<00:01, 53661.91it/s] 84%|████████▍ | 465162/552076 [00:05<00:01, 52551.23it/s] 85%|████████▌ | 470596/552076 [00:06<00:01, 52570.87it/s] 86%|████████▌ | 476146/552076 [00:06<00:01, 53415.79it/s] 87%|████████▋ | 482036/552076 [00:06<00:01, 54949.36it/s] 88%|████████▊ | 487563/552076 [00:06<00:01, 54055.26it/s] 89%|████████▉ | 493070/552076 [00:06<00:01, 54034.89it/s] 90%|█████████ | 498665/552076 [00:06<00:00, 54594.85it/s] 91%|█████████▏| 504296/552076 [00:06<00:00, 55097.37it/s] 92%|█████████▏| 509817/552076 [00:06<00:00, 54055.80it/s] 93%|█████████▎| 515235/552076 [00:06<00:00, 53742.55it/s] 94%|█████████▍| 520950/552076 [00:06<00:00, 54721.02it/s] 95%|█████████▌| 526734/552076 [00:07<00:00, 54068.09it/s] 97%|█████████▋| 533076/552076 [00:07<00:00, 56570.60it/s] 99%|█████████▊| 543987/552076 [00:07<00:00, 66122.20it/s]100%|█████████▉| 551439/552076 [00:07<00:00, 68434.93it/s]100%|██████████| 552076/552076 [00:07<00:00, 74867.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6339/552076 [00:00<00:08, 60696.12it/s]  2%|▏         | 11895/552076 [00:00<00:09, 59056.85it/s]  3%|▎         | 17123/552076 [00:00<00:09, 56845.62it/s]  4%|▍         | 22890/552076 [00:00<00:09, 57089.42it/s]  5%|▌         | 28467/552076 [00:00<00:09, 56686.36it/s]  6%|▌         | 34033/552076 [00:00<00:09, 54613.90it/s]  7%|▋         | 39520/552076 [00:00<00:09, 54689.83it/s]  8%|▊         | 45255/552076 [00:00<00:09, 55461.20it/s]  9%|▉         | 50943/552076 [00:00<00:08, 55878.97it/s] 10%|█         | 56326/552076 [00:01<00:09, 53925.36it/s] 11%|█▏        | 62167/552076 [00:01<00:08, 55196.19it/s] 12%|█▏        | 67952/552076 [00:01<00:08, 55965.31it/s] 13%|█▎        | 73721/552076 [00:01<00:08, 56471.01it/s] 14%|█▍        | 79324/552076 [00:01<00:08, 54586.35it/s] 15%|█▌        | 85181/552076 [00:01<00:08, 55722.54it/s] 16%|█▋        | 90747/552076 [00:01<00:08, 52699.43it/s] 17%|█▋        | 96047/552076 [00:01<00:09, 47818.45it/s] 18%|█▊        | 100937/552076 [00:01<00:10, 43618.91it/s] 19%|█▉        | 105446/552076 [00:02<00:11, 40046.68it/s] 20%|█▉        | 109825/552076 [00:02<00:11, 39692.01it/s] 21%|██        | 114009/552076 [00:02<00:10, 40312.67it/s] 21%|██▏       | 118122/552076 [00:02<00:11, 38180.46it/s] 22%|██▏       | 122021/552076 [00:02<00:11, 37966.52it/s] 23%|██▎       | 126071/552076 [00:02<00:11, 38692.31it/s] 24%|██▎       | 129984/552076 [00:02<00:11, 37907.10it/s] 24%|██▍       | 134199/552076 [00:02<00:10, 38804.25it/s] 25%|██▌       | 138779/552076 [00:02<00:10, 40666.10it/s] 26%|██▌       | 142890/552076 [00:03<00:10, 38354.05it/s] 27%|██▋       | 146821/552076 [00:03<00:10, 38545.42it/s] 27%|██▋       | 150717/552076 [00:03<00:11, 35913.58it/s] 28%|██▊       | 154373/552076 [00:03<00:11, 35130.36it/s] 29%|██▊       | 157936/552076 [00:03<00:11, 33160.47it/s] 29%|██▉       | 162064/552076 [00:03<00:11, 34733.32it/s] 30%|███       | 166399/552076 [00:03<00:10, 36935.67it/s] 31%|███       | 170173/552076 [00:03<00:10, 36613.56it/s] 31%|███▏      | 173891/552076 [00:03<00:11, 32867.30it/s] 32%|███▏      | 177348/552076 [00:04<00:11, 32966.24it/s] 33%|███▎      | 181403/552076 [00:04<00:10, 33937.80it/s] 33%|███▎      | 184859/552076 [00:04<00:11, 33241.74it/s] 34%|███▍      | 188230/552076 [00:04<00:11, 31374.80it/s] 35%|███▍      | 191422/552076 [00:04<00:11, 30378.37it/s] 35%|███▌      | 195555/552076 [00:04<00:11, 32311.56it/s] 36%|███▌      | 198852/552076 [00:04<00:11, 31356.02it/s] 37%|███▋      | 203228/552076 [00:04<00:10, 34269.48it/s] 38%|███▊      | 207173/552076 [00:04<00:09, 35674.49it/s] 38%|███▊      | 210860/552076 [00:05<00:09, 35582.49it/s] 39%|███▉      | 216491/552076 [00:05<00:08, 39999.35it/s] 40%|████      | 221962/552076 [00:05<00:07, 43343.52it/s] 41%|████▏     | 227741/552076 [00:05<00:06, 46855.59it/s] 42%|████▏     | 233346/552076 [00:05<00:06, 48540.73it/s] 43%|████▎     | 238935/552076 [00:05<00:06, 50532.90it/s] 44%|████▍     | 244306/552076 [00:05<00:05, 51445.66it/s] 45%|████▌     | 249986/552076 [00:05<00:05, 52941.77it/s] 46%|████▋     | 255609/552076 [00:05<00:05, 53885.52it/s] 47%|████▋     | 261065/552076 [00:05<00:05, 53017.69it/s] 48%|████▊     | 266609/552076 [00:06<00:05, 53237.51it/s] 49%|████▉     | 272199/552076 [00:06<00:05, 54008.02it/s] 50%|█████     | 277628/552076 [00:06<00:05, 52410.80it/s] 51%|█████     | 282899/552076 [00:06<00:05, 52305.44it/s] 52%|█████▏    | 288414/552076 [00:06<00:04, 53126.40it/s] 53%|█████▎    | 293999/552076 [00:06<00:04, 52419.80it/s] 54%|█████▍    | 299492/552076 [00:06<00:04, 53147.86it/s] 55%|█████▌    | 304820/552076 [00:06<00:04, 52232.04it/s] 56%|█████▋    | 311758/552076 [00:06<00:04, 56414.07it/s] 58%|█████▊    | 317505/552076 [00:06<00:04, 56391.39it/s] 59%|█████▊    | 323218/552076 [00:07<00:04, 54338.27it/s] 60%|█████▉    | 328896/552076 [00:07<00:04, 55047.39it/s] 61%|██████    | 334576/552076 [00:07<00:03, 54421.78it/s] 62%|██████▏   | 340419/552076 [00:07<00:03, 54948.13it/s] 63%|██████▎   | 346280/552076 [00:07<00:03, 55997.25it/s] 64%|██████▍   | 352122/552076 [00:07<00:03, 55405.07it/s] 65%|██████▍   | 357681/552076 [00:07<00:03, 52117.74it/s] 66%|██████▌   | 362946/552076 [00:07<00:04, 41379.48it/s] 67%|██████▋   | 367761/552076 [00:08<00:04, 43201.50it/s] 69%|██████▊   | 378356/552076 [00:08<00:03, 52535.50it/s] 70%|███████   | 387684/552076 [00:08<00:02, 60457.25it/s] 72%|███████▏  | 394967/552076 [00:08<00:02, 59096.70it/s] 74%|███████▎  | 405974/552076 [00:08<00:02, 68631.41it/s] 76%|███████▌  | 417049/552076 [00:08<00:01, 77468.78it/s] 77%|███████▋  | 426173/552076 [00:08<00:01, 74826.52it/s] 79%|███████▊  | 434523/552076 [00:08<00:02, 51374.23it/s] 80%|███████▉  | 441258/552076 [00:09<00:02, 44496.32it/s] 81%|████████  | 446990/552076 [00:09<00:02, 43339.97it/s] 82%|████████▏ | 452228/552076 [00:09<00:02, 41217.13it/s] 83%|████████▎ | 457005/552076 [00:09<00:02, 36680.19it/s] 84%|████████▎ | 461224/552076 [00:09<00:02, 38067.69it/s] 84%|████████▍ | 465430/552076 [00:09<00:02, 38170.51it/s] 85%|████████▌ | 470076/552076 [00:09<00:02, 40328.50it/s] 86%|████████▌ | 474338/552076 [00:10<00:01, 40721.64it/s] 87%|████████▋ | 478571/552076 [00:10<00:01, 41141.96it/s] 87%|████████▋ | 482799/552076 [00:10<00:01, 39899.61it/s] 88%|████████▊ | 486903/552076 [00:10<00:01, 40233.39it/s] 89%|████████▉ | 491148/552076 [00:10<00:01, 40873.35it/s] 90%|████████▉ | 495282/552076 [00:10<00:01, 40053.40it/s] 90%|█████████ | 499324/552076 [00:10<00:01, 39877.78it/s] 91%|█████████ | 503634/552076 [00:10<00:01, 40791.49it/s] 92%|█████████▏| 507738/552076 [00:10<00:01, 40006.66it/s] 93%|█████████▎| 511889/552076 [00:10<00:00, 40253.44it/s] 93%|█████████▎| 516128/552076 [00:11<00:00, 40871.12it/s] 94%|█████████▍| 520228/552076 [00:11<00:00, 40847.68it/s] 95%|█████████▍| 524322/552076 [00:11<00:00, 39505.43it/s] 96%|█████████▌| 528449/552076 [00:11<00:00, 40018.46it/s] 96%|█████████▋| 532543/552076 [00:11<00:00, 40289.61it/s] 97%|█████████▋| 536582/552076 [00:11<00:00, 38887.94it/s] 98%|█████████▊| 540543/552076 [00:11<00:00, 39100.13it/s] 99%|█████████▊| 544718/552076 [00:11<00:00, 39858.20it/s] 99%|█████████▉| 548965/552076 [00:11<00:00, 39919.20it/s]100%|██████████| 552076/552076 [00:11<00:00, 46211.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8315/552076 [00:00<00:06, 83146.31it/s]  3%|▎         | 18642/552076 [00:00<00:06, 88307.14it/s]  5%|▍         | 25730/552076 [00:00<00:06, 82238.85it/s]  6%|▌         | 32711/552076 [00:00<00:06, 78068.97it/s]  8%|▊         | 42243/552076 [00:00<00:06, 82549.69it/s]  9%|▉         | 49272/552076 [00:00<00:06, 73366.91it/s] 11%|█         | 61329/552076 [00:00<00:05, 83129.29it/s] 13%|█▎        | 69614/552076 [00:00<00:06, 78151.49it/s] 14%|█▍        | 77471/552076 [00:00<00:06, 72214.34it/s] 16%|█▌        | 87488/552076 [00:01<00:05, 78811.61it/s] 18%|█▊        | 97359/552076 [00:01<00:05, 83093.69it/s] 19%|█▉        | 105914/552076 [00:01<00:06, 68782.59it/s] 21%|██        | 113375/552076 [00:01<00:06, 66410.78it/s] 22%|██▏       | 120442/552076 [00:01<00:06, 63000.00it/s] 23%|██▎       | 129492/552076 [00:01<00:06, 69318.52it/s] 26%|██▌       | 141154/552076 [00:01<00:05, 78279.54it/s] 27%|██▋       | 149668/552076 [00:01<00:05, 75996.71it/s] 29%|██▉       | 161737/552076 [00:02<00:04, 85494.58it/s] 31%|███       | 171024/552076 [00:02<00:04, 82550.14it/s] 33%|███▎      | 179817/552076 [00:02<00:04, 79826.88it/s] 34%|███▍      | 188881/552076 [00:02<00:04, 82788.70it/s] 36%|███▌      | 197466/552076 [00:02<00:04, 75379.57it/s] 38%|███▊      | 209556/552076 [00:02<00:04, 84977.31it/s] 40%|███▉      | 218699/552076 [00:02<00:04, 81679.09it/s] 41%|████      | 227346/552076 [00:02<00:04, 72607.72it/s] 43%|████▎     | 235129/552076 [00:03<00:05, 61113.55it/s] 44%|████▍     | 241916/552076 [00:03<00:05, 56271.20it/s] 46%|████▌     | 253623/552076 [00:03<00:04, 66655.69it/s] 48%|████▊     | 265776/552076 [00:03<00:03, 77098.62it/s] 50%|████▉     | 274906/552076 [00:03<00:03, 76517.56it/s] 51%|█████▏    | 283553/552076 [00:03<00:03, 70792.73it/s] 53%|█████▎    | 291414/552076 [00:03<00:03, 66202.96it/s] 55%|█████▍    | 301803/552076 [00:03<00:03, 74286.83it/s] 56%|█████▋    | 311383/552076 [00:03<00:03, 78849.64it/s] 58%|█████▊    | 321749/552076 [00:04<00:02, 84947.48it/s] 60%|██████    | 332670/552076 [00:04<00:02, 91012.61it/s] 62%|██████▏   | 342281/552076 [00:04<00:02, 81348.30it/s] 64%|██████▎   | 350965/552076 [00:04<00:02, 76357.06it/s] 65%|██████▌   | 359047/552076 [00:04<00:02, 77281.17it/s] 67%|██████▋   | 369944/552076 [00:04<00:02, 84513.58it/s] 69%|██████▊   | 378818/552076 [00:04<00:02, 73760.58it/s] 71%|███████   | 390260/552076 [00:04<00:01, 82560.24it/s] 72%|███████▏  | 399235/552076 [00:05<00:02, 72044.09it/s] 74%|███████▍  | 407184/552076 [00:05<00:02, 70882.18it/s] 76%|███████▌  | 418142/552076 [00:05<00:01, 78869.99it/s] 77%|███████▋  | 426682/552076 [00:05<00:01, 72106.09it/s] 79%|███████▊  | 434463/552076 [00:05<00:01, 63847.96it/s] 80%|████████  | 442569/552076 [00:05<00:01, 66341.34it/s] 81%|████████▏ | 449630/552076 [00:05<00:01, 61510.76it/s] 83%|████████▎ | 456150/552076 [00:05<00:01, 55257.01it/s] 84%|████████▎ | 462054/552076 [00:06<00:01, 54497.25it/s] 85%|████████▍ | 468313/552076 [00:06<00:01, 56696.19it/s] 86%|████████▌ | 474193/552076 [00:06<00:01, 54302.25it/s] 87%|████████▋ | 479792/552076 [00:06<00:01, 53098.68it/s] 88%|████████▊ | 486344/552076 [00:06<00:01, 54883.36it/s] 89%|████████▉ | 492418/552076 [00:06<00:01, 56517.87it/s] 90%|█████████ | 498593/552076 [00:06<00:00, 57991.26it/s] 92%|█████████▏| 506155/552076 [00:06<00:00, 62350.94it/s] 93%|█████████▎| 515581/552076 [00:06<00:00, 69398.61it/s] 95%|█████████▍| 522872/552076 [00:07<00:00, 65063.82it/s] 96%|█████████▌| 529679/552076 [00:07<00:00, 65328.70it/s] 97%|█████████▋| 536423/552076 [00:07<00:00, 54252.09it/s] 98%|█████████▊| 542310/552076 [00:07<00:00, 51934.02it/s] 99%|█████████▉| 547848/552076 [00:07<00:00, 48344.29it/s]100%|██████████| 552076/552076 [00:07<00:00, 71816.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11715/552076 [00:00<00:04, 117149.27it/s]  4%|▍         | 23780/552076 [00:00<00:04, 118176.35it/s]  7%|▋         | 35994/552076 [00:00<00:04, 119335.53it/s]  9%|▊         | 48196/552076 [00:00<00:04, 120128.34it/s] 11%|█         | 60579/552076 [00:00<00:04, 121215.08it/s] 13%|█▎        | 72853/552076 [00:00<00:03, 121666.70it/s] 15%|█▌        | 85064/552076 [00:00<00:03, 121798.61it/s] 18%|█▊        | 97139/552076 [00:00<00:03, 121481.71it/s] 20%|█▉        | 109299/552076 [00:00<00:03, 121514.78it/s] 22%|██▏       | 120980/552076 [00:01<00:03, 110472.09it/s] 24%|██▍       | 131891/552076 [00:01<00:04, 101418.23it/s] 26%|██▌       | 142083/552076 [00:01<00:04, 100717.70it/s] 28%|██▊       | 154383/552076 [00:01<00:03, 106505.95it/s] 30%|██▉       | 165149/552076 [00:01<00:03, 103847.98it/s] 32%|███▏      | 175766/552076 [00:01<00:03, 104532.56it/s] 34%|███▍      | 187955/552076 [00:01<00:03, 109196.12it/s] 36%|███▋      | 200189/552076 [00:01<00:03, 112832.37it/s] 39%|███▊      | 212562/552076 [00:01<00:02, 115893.41it/s] 41%|████      | 224868/552076 [00:01<00:02, 117953.41it/s] 43%|████▎     | 237101/552076 [00:02<00:02, 119232.52it/s] 45%|████▌     | 249342/552076 [00:02<00:02, 120168.08it/s] 47%|████▋     | 261422/552076 [00:02<00:02, 120355.03it/s] 50%|████▉     | 273486/552076 [00:02<00:02, 119568.08it/s] 52%|█████▏    | 285895/552076 [00:02<00:02, 120888.36it/s] 54%|█████▍    | 298359/552076 [00:02<00:02, 121989.61it/s] 56%|█████▋    | 310745/552076 [00:02<00:01, 122542.64it/s] 59%|█████▊    | 323265/552076 [00:02<00:01, 123325.53it/s] 61%|██████    | 335666/552076 [00:02<00:01, 123528.53it/s] 63%|██████▎   | 348026/552076 [00:02<00:01, 118007.07it/s] 65%|██████▌   | 359884/552076 [00:03<00:01, 117257.38it/s] 67%|██████▋   | 371651/552076 [00:03<00:01, 112293.44it/s] 70%|██████▉   | 383976/552076 [00:03<00:01, 115369.06it/s] 72%|███████▏  | 395659/552076 [00:03<00:01, 112708.71it/s] 74%|███████▎  | 406994/552076 [00:03<00:01, 96753.36it/s]  76%|███████▌  | 419188/552076 [00:03<00:01, 103143.80it/s] 78%|███████▊  | 430170/552076 [00:03<00:01, 104147.28it/s] 80%|███████▉  | 441578/552076 [00:03<00:01, 106939.20it/s] 82%|████████▏ | 453313/552076 [00:03<00:00, 109862.85it/s] 84%|████████▍ | 465752/552076 [00:04<00:00, 113851.43it/s] 87%|████████▋ | 477913/552076 [00:04<00:00, 116072.11it/s] 89%|████████▉ | 490394/552076 [00:04<00:00, 118560.43it/s] 91%|█████████ | 502351/552076 [00:04<00:00, 110209.63it/s] 93%|█████████▎| 514582/552076 [00:04<00:00, 113580.61it/s] 95%|█████████▌| 526188/552076 [00:04<00:00, 109838.82it/s] 97%|█████████▋| 537309/552076 [00:04<00:00, 104290.55it/s]100%|█████████▉| 549537/552076 [00:04<00:00, 109105.07it/s]100%|██████████| 552076/552076 [00:04<00:00, 113756.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3584/552076 [00:00<00:16, 33938.90it/s]  1%|▏         | 7213/552076 [00:00<00:15, 34611.52it/s]  2%|▏         | 10902/552076 [00:00<00:15, 35264.07it/s]  3%|▎         | 14588/552076 [00:00<00:15, 34973.19it/s]  3%|▎         | 18261/552076 [00:00<00:15, 35481.56it/s]  4%|▍         | 21835/552076 [00:00<00:15, 35071.77it/s]  5%|▍         | 25511/552076 [00:00<00:14, 35561.13it/s]  5%|▌         | 29011/552076 [00:00<00:14, 35041.03it/s]  6%|▌         | 32705/552076 [00:00<00:14, 35589.20it/s]  7%|▋         | 36266/552076 [00:01<00:14, 35097.86it/s]  7%|▋         | 39813/552076 [00:01<00:14, 35208.34it/s]  8%|▊         | 43399/552076 [00:01<00:14, 35064.62it/s]  9%|▊         | 47223/552076 [00:01<00:14, 35960.24it/s]  9%|▉         | 51069/552076 [00:01<00:13, 36185.88it/s] 10%|█         | 55226/552076 [00:01<00:13, 37648.22it/s] 11%|█         | 59170/552076 [00:01<00:13, 37804.23it/s] 11%|█▏        | 63275/552076 [00:01<00:12, 38722.74it/s] 12%|█▏        | 67314/552076 [00:01<00:12, 38656.20it/s] 13%|█▎        | 71473/552076 [00:01<00:12, 39491.65it/s] 14%|█▎        | 75443/552076 [00:02<00:12, 38986.81it/s] 14%|█▍        | 79550/552076 [00:02<00:11, 39587.93it/s] 15%|█▌        | 83516/552076 [00:02<00:11, 39247.64it/s] 16%|█▌        | 87552/552076 [00:02<00:11, 39574.51it/s] 17%|█▋        | 91515/552076 [00:02<00:11, 38944.54it/s] 17%|█▋        | 95970/552076 [00:02<00:11, 40402.51it/s] 18%|█▊        | 100181/552076 [00:02<00:11, 40899.11it/s] 19%|█▉        | 104337/552076 [00:02<00:10, 41094.39it/s] 20%|█▉        | 108457/552076 [00:02<00:11, 39685.21it/s] 20%|██        | 112443/552076 [00:03<00:12, 35877.54it/s] 21%|██        | 116410/552076 [00:03<00:11, 36899.77it/s] 22%|██▏       | 120165/552076 [00:03<00:11, 37035.56it/s] 23%|██▎       | 124550/552076 [00:03<00:11, 38443.27it/s] 23%|██▎       | 128440/552076 [00:03<00:11, 35856.13it/s] 24%|██▍       | 132525/552076 [00:03<00:11, 37220.22it/s] 25%|██▍       | 136759/552076 [00:03<00:10, 38020.88it/s] 25%|██▌       | 140608/552076 [00:03<00:11, 36845.64it/s] 26%|██▌       | 144618/552076 [00:03<00:11, 36868.11it/s] 27%|██▋       | 149076/552076 [00:03<00:10, 38734.31it/s] 28%|██▊       | 154587/552076 [00:04<00:09, 42524.86it/s] 29%|██▉       | 158983/552076 [00:04<00:09, 41168.82it/s] 30%|██▉       | 163210/552076 [00:04<00:09, 40897.54it/s] 30%|███       | 167378/552076 [00:04<00:09, 39244.40it/s] 31%|███       | 171371/552076 [00:04<00:09, 38443.22it/s] 32%|███▏      | 175267/552076 [00:04<00:10, 36519.06it/s] 32%|███▏      | 178976/552076 [00:04<00:10, 35487.29it/s] 33%|███▎      | 182571/552076 [00:04<00:12, 28805.81it/s] 34%|███▎      | 185688/552076 [00:05<00:13, 26945.73it/s] 34%|███▍      | 189361/552076 [00:05<00:12, 28972.37it/s] 35%|███▌      | 193248/552076 [00:05<00:11, 31368.20it/s] 36%|███▌      | 196963/552076 [00:05<00:10, 32904.19it/s] 36%|███▋      | 200787/552076 [00:05<00:10, 34341.26it/s] 37%|███▋      | 204340/552076 [00:05<00:10, 33777.15it/s] 38%|███▊      | 208067/552076 [00:05<00:09, 34753.26it/s] 38%|███▊      | 211743/552076 [00:05<00:09, 35331.13it/s] 39%|███▉      | 215475/552076 [00:05<00:09, 34818.57it/s] 40%|███▉      | 219200/552076 [00:05<00:09, 35512.75it/s] 40%|████      | 223318/552076 [00:06<00:08, 37041.62it/s] 41%|████      | 227447/552076 [00:06<00:08, 38221.30it/s] 42%|████▏     | 231305/552076 [00:06<00:09, 35161.30it/s] 43%|████▎     | 235377/552076 [00:06<00:08, 36662.19it/s] 43%|████▎     | 239111/552076 [00:06<00:09, 33892.96it/s] 44%|████▍     | 242590/552076 [00:06<00:09, 33087.00it/s] 45%|████▍     | 246839/552076 [00:06<00:08, 35439.15it/s] 45%|████▌     | 250545/552076 [00:06<00:08, 35910.01it/s] 46%|████▌     | 254929/552076 [00:06<00:07, 37970.41it/s] 47%|████▋     | 258805/552076 [00:07<00:08, 34826.67it/s] 48%|████▊     | 262394/552076 [00:07<00:09, 31751.21it/s] 48%|████▊     | 266653/552076 [00:07<00:08, 34375.37it/s] 49%|████▉     | 270242/552076 [00:07<00:08, 33523.25it/s] 50%|████▉     | 274182/552076 [00:07<00:07, 34772.37it/s] 50%|█████     | 277964/552076 [00:07<00:07, 35633.00it/s] 51%|█████     | 282358/552076 [00:07<00:07, 37327.51it/s] 52%|█████▏    | 286160/552076 [00:07<00:07, 36849.86it/s] 53%|█████▎    | 290329/552076 [00:07<00:06, 38179.50it/s] 53%|█████▎    | 294452/552076 [00:08<00:06, 39045.74it/s] 54%|█████▍    | 298948/552076 [00:08<00:06, 40649.67it/s] 55%|█████▍    | 303057/552076 [00:08<00:06, 39340.84it/s] 56%|█████▌    | 308134/552076 [00:08<00:05, 42162.57it/s] 57%|█████▋    | 312656/552076 [00:08<00:05, 42669.18it/s] 58%|█████▊    | 317659/552076 [00:08<00:05, 44639.20it/s] 59%|█████▊    | 323214/552076 [00:08<00:04, 46903.78it/s] 60%|█████▉    | 329002/552076 [00:08<00:04, 49732.04it/s] 61%|██████    | 334549/552076 [00:08<00:04, 51104.73it/s] 62%|██████▏   | 339739/552076 [00:08<00:04, 49389.03it/s] 62%|██████▏   | 344746/552076 [00:09<00:04, 45679.10it/s] 63%|██████▎   | 349417/552076 [00:09<00:04, 41809.08it/s] 64%|██████▍   | 353734/552076 [00:09<00:04, 40572.39it/s] 65%|██████▍   | 358682/552076 [00:09<00:04, 42888.54it/s] 66%|██████▌   | 363079/552076 [00:09<00:04, 42766.17it/s] 67%|██████▋   | 367432/552076 [00:09<00:04, 40974.68it/s] 67%|██████▋   | 371599/552076 [00:09<00:04, 41048.82it/s] 68%|██████▊   | 375753/552076 [00:09<00:04, 39390.84it/s] 69%|██████▉   | 379790/552076 [00:09<00:04, 39679.47it/s] 70%|██████▉   | 383793/552076 [00:10<00:04, 37290.78it/s] 70%|███████   | 387787/552076 [00:10<00:04, 37588.36it/s] 71%|███████   | 391584/552076 [00:10<00:04, 37614.09it/s] 72%|███████▏  | 396875/552076 [00:10<00:03, 40041.06it/s] 73%|███████▎  | 401436/552076 [00:10<00:03, 41562.96it/s] 73%|███████▎  | 405651/552076 [00:10<00:03, 38988.91it/s] 74%|███████▍  | 409640/552076 [00:10<00:03, 39090.46it/s] 76%|███████▌  | 419041/552076 [00:10<00:02, 46991.56it/s] 77%|███████▋  | 424482/552076 [00:10<00:02, 48212.03it/s] 79%|███████▉  | 435806/552076 [00:11<00:01, 58245.95it/s] 80%|████████  | 443463/552076 [00:11<00:01, 62097.66it/s] 82%|████████▏ | 450665/552076 [00:11<00:01, 58577.74it/s] 83%|████████▎ | 457258/552076 [00:11<00:01, 58686.39it/s] 84%|████████▍ | 463642/552076 [00:11<00:01, 55259.35it/s] 85%|████████▌ | 469570/552076 [00:11<00:01, 56136.41it/s] 86%|████████▌ | 475468/552076 [00:11<00:01, 47320.58it/s] 87%|████████▋ | 481853/552076 [00:11<00:01, 51305.08it/s] 88%|████████▊ | 487994/552076 [00:12<00:01, 53432.90it/s] 90%|████████▉ | 494372/552076 [00:12<00:01, 56165.90it/s] 91%|█████████ | 502199/552076 [00:12<00:00, 61364.76it/s] 93%|█████████▎| 511098/552076 [00:12<00:00, 67666.29it/s] 94%|█████████▍| 518286/552076 [00:12<00:00, 61999.84it/s] 96%|█████████▌| 529846/552076 [00:12<00:00, 72017.23it/s] 98%|█████████▊| 538968/552076 [00:12<00:00, 76870.14it/s] 99%|█████████▉| 547360/552076 [00:12<00:00, 78704.93it/s]100%|██████████| 552076/552076 [00:12<00:00, 42970.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10586/552076 [00:00<00:05, 105858.33it/s]  3%|▎         | 16637/552076 [00:00<00:06, 85081.09it/s]   4%|▍         | 22378/552076 [00:00<00:07, 74331.64it/s]  5%|▍         | 27499/552076 [00:00<00:08, 63825.67it/s]  6%|▌         | 32092/552076 [00:00<00:10, 50936.61it/s]  7%|▋         | 39932/552076 [00:00<00:08, 56917.49it/s]  9%|▉         | 50717/552076 [00:00<00:07, 66312.28it/s] 10%|█         | 57684/552076 [00:00<00:07, 64695.24it/s] 12%|█▏        | 64397/552076 [00:01<00:09, 51251.39it/s] 13%|█▎        | 70339/552076 [00:01<00:09, 53455.85it/s] 14%|█▍        | 76136/552076 [00:01<00:08, 54077.92it/s] 15%|█▍        | 81980/552076 [00:01<00:08, 54267.34it/s] 16%|█▌        | 87795/552076 [00:01<00:08, 55376.19it/s] 17%|█▋        | 93494/552076 [00:01<00:08, 54999.40it/s] 18%|█▊        | 99350/552076 [00:01<00:08, 55376.49it/s] 19%|█▉        | 105262/552076 [00:01<00:07, 56447.74it/s] 20%|██        | 111137/552076 [00:01<00:07, 55866.17it/s] 21%|██        | 117102/552076 [00:01<00:07, 56948.94it/s] 22%|██▏       | 122833/552076 [00:02<00:07, 56564.18it/s] 23%|██▎       | 128555/552076 [00:02<00:07, 56758.64it/s] 24%|██▍       | 134487/552076 [00:02<00:07, 56660.92it/s] 25%|██▌       | 140166/552076 [00:02<00:07, 56452.64it/s] 26%|██▋       | 146038/552076 [00:02<00:07, 57114.06it/s] 28%|██▊       | 151897/552076 [00:02<00:06, 57548.18it/s] 29%|██▊       | 157659/552076 [00:02<00:07, 55629.70it/s] 30%|██▉       | 163241/552076 [00:02<00:07, 50281.11it/s] 30%|███       | 168381/552076 [00:02<00:08, 43435.20it/s] 31%|███▏      | 172968/552076 [00:03<00:08, 43330.66it/s] 32%|███▏      | 177472/552076 [00:03<00:09, 40787.79it/s] 33%|███▎      | 182082/552076 [00:03<00:08, 42247.40it/s] 34%|███▍      | 188022/552076 [00:03<00:07, 46254.11it/s] 35%|███▌      | 194073/552076 [00:03<00:07, 49771.41it/s] 36%|███▌      | 199953/552076 [00:03<00:06, 52174.15it/s] 37%|███▋      | 205712/552076 [00:03<00:06, 52065.71it/s] 38%|███▊      | 211614/552076 [00:03<00:06, 53972.67it/s] 39%|███▉      | 217260/552076 [00:03<00:06, 54694.35it/s] 40%|████      | 222906/552076 [00:04<00:06, 53337.07it/s] 41%|████▏     | 228567/552076 [00:04<00:05, 54277.33it/s] 42%|████▏     | 234321/552076 [00:04<00:05, 55215.30it/s] 43%|████▎     | 240099/552076 [00:04<00:05, 54078.34it/s] 45%|████▍     | 245784/552076 [00:04<00:05, 54879.42it/s] 46%|████▌     | 251297/552076 [00:04<00:05, 54429.97it/s] 47%|████▋     | 256758/552076 [00:04<00:05, 54227.62it/s] 47%|████▋     | 262194/552076 [00:04<00:05, 52887.14it/s] 49%|████▊     | 267922/552076 [00:04<00:05, 54131.47it/s] 50%|████▉     | 273644/552076 [00:04<00:05, 53451.99it/s] 51%|█████     | 279403/552076 [00:05<00:04, 54628.82it/s] 52%|█████▏    | 285164/552076 [00:05<00:04, 55489.67it/s] 53%|█████▎    | 290959/552076 [00:05<00:04, 56204.28it/s] 54%|█████▎    | 296593/552076 [00:05<00:04, 54326.64it/s] 55%|█████▍    | 302255/552076 [00:05<00:04, 54994.38it/s] 56%|█████▌    | 307979/552076 [00:05<00:04, 55649.29it/s] 57%|█████▋    | 313559/552076 [00:05<00:04, 53941.76it/s] 58%|█████▊    | 319418/552076 [00:05<00:04, 55256.10it/s] 59%|█████▉    | 325104/552076 [00:05<00:04, 55726.45it/s] 60%|█████▉    | 330694/552076 [00:06<00:04, 54136.72it/s] 61%|██████    | 336578/552076 [00:06<00:03, 55466.19it/s] 62%|██████▏   | 342342/552076 [00:06<00:03, 56100.86it/s] 63%|██████▎   | 347971/552076 [00:06<00:03, 54243.18it/s] 64%|██████▍   | 353729/552076 [00:06<00:03, 55202.69it/s] 65%|██████▌   | 359371/552076 [00:06<00:03, 55561.37it/s] 66%|██████▌   | 365051/552076 [00:06<00:03, 54095.79it/s] 67%|██████▋   | 370739/552076 [00:06<00:03, 54900.73it/s] 68%|██████▊   | 376429/552076 [00:06<00:03, 55485.42it/s] 69%|██████▉   | 382349/552076 [00:06<00:03, 56549.62it/s] 70%|███████   | 388019/552076 [00:07<00:02, 55526.28it/s] 71%|███████▏  | 393586/552076 [00:07<00:03, 52626.98it/s] 72%|███████▏  | 399060/552076 [00:07<00:02, 52791.49it/s] 73%|███████▎  | 404655/552076 [00:07<00:02, 53700.20it/s] 74%|███████▍  | 410435/552076 [00:07<00:02, 54866.60it/s] 75%|███████▌  | 415945/552076 [00:07<00:02, 53933.09it/s] 76%|███████▋  | 421483/552076 [00:07<00:02, 54081.66it/s] 77%|███████▋  | 427037/552076 [00:07<00:02, 54510.99it/s] 78%|███████▊  | 432629/552076 [00:07<00:02, 54925.97it/s] 79%|███████▉  | 438130/552076 [00:08<00:02, 40406.78it/s] 80%|████████  | 442731/552076 [00:08<00:02, 38132.11it/s] 81%|████████  | 447073/552076 [00:08<00:02, 39403.36it/s] 82%|████████▏ | 451317/552076 [00:08<00:02, 38209.38it/s] 82%|████████▏ | 455359/552076 [00:08<00:02, 33944.93it/s] 83%|████████▎ | 458996/552076 [00:08<00:03, 26926.54it/s] 84%|████████▍ | 465254/552076 [00:08<00:02, 32442.39it/s] 85%|████████▌ | 470832/552076 [00:09<00:02, 37098.34it/s] 86%|████████▌ | 475566/552076 [00:09<00:01, 39127.90it/s] 87%|████████▋ | 480423/552076 [00:09<00:01, 38776.30it/s] 88%|████████▊ | 484706/552076 [00:09<00:02, 27206.10it/s] 89%|████████▊ | 489091/552076 [00:09<00:02, 30701.60it/s] 89%|████████▉ | 492842/552076 [00:09<00:01, 30926.80it/s] 90%|████████▉ | 496412/552076 [00:09<00:01, 31859.52it/s] 91%|█████████ | 500063/552076 [00:09<00:01, 33059.08it/s] 91%|█████████▏| 503785/552076 [00:10<00:01, 34002.74it/s] 92%|█████████▏| 507368/552076 [00:10<00:01, 31588.68it/s] 93%|█████████▎| 510689/552076 [00:10<00:01, 23808.92it/s] 93%|█████████▎| 513467/552076 [00:10<00:01, 22739.22it/s] 93%|█████████▎| 516029/552076 [00:10<00:01, 19541.09it/s] 94%|█████████▍| 518264/552076 [00:10<00:01, 18440.37it/s] 94%|█████████▍| 520318/552076 [00:10<00:01, 18482.19it/s] 95%|█████████▍| 522805/552076 [00:11<00:01, 20025.15it/s] 95%|█████████▌| 525883/552076 [00:11<00:01, 22108.50it/s] 96%|█████████▌| 528259/552076 [00:11<00:01, 21746.94it/s] 96%|█████████▌| 530551/552076 [00:11<00:00, 21697.95it/s] 97%|█████████▋| 533569/552076 [00:11<00:00, 23499.08it/s] 98%|█████████▊| 538555/552076 [00:11<00:00, 27928.64it/s] 99%|█████████▊| 544951/552076 [00:11<00:00, 33608.17it/s]100%|██████████| 552076/552076 [00:11<00:00, 46928.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5562/552076 [00:00<00:09, 54923.02it/s]  2%|▏         | 11076/552076 [00:00<00:09, 54986.78it/s]  3%|▎         | 16222/552076 [00:00<00:10, 53287.10it/s]  4%|▍         | 21676/552076 [00:00<00:09, 53588.12it/s]  5%|▍         | 27085/552076 [00:00<00:09, 53737.30it/s]  6%|▌         | 32332/552076 [00:00<00:09, 53349.70it/s]  7%|▋         | 37606/552076 [00:00<00:09, 53164.10it/s]  8%|▊         | 42474/552076 [00:00<00:10, 48857.35it/s]  9%|▊         | 47976/552076 [00:00<00:10, 49316.56it/s] 10%|▉         | 53339/552076 [00:01<00:09, 50487.46it/s] 11%|█         | 58839/552076 [00:01<00:09, 51760.58it/s] 12%|█▏        | 64387/552076 [00:01<00:09, 52821.72it/s] 13%|█▎        | 69707/552076 [00:01<00:09, 51751.10it/s] 14%|█▎        | 74970/552076 [00:01<00:09, 51971.24it/s] 15%|█▍        | 80527/552076 [00:01<00:08, 53000.10it/s] 16%|█▌        | 86174/552076 [00:01<00:08, 53995.10it/s] 17%|█▋        | 91755/552076 [00:01<00:08, 53318.73it/s] 18%|█▊        | 97321/552076 [00:01<00:08, 53957.12it/s] 19%|█▊        | 102720/552076 [00:01<00:08, 53187.08it/s] 20%|█▉        | 108044/552076 [00:02<00:08, 51888.03it/s] 21%|██        | 113243/552076 [00:02<00:08, 50280.07it/s] 21%|██▏       | 118672/552076 [00:02<00:08, 51418.41it/s] 22%|██▏       | 124109/552076 [00:02<00:08, 52268.62it/s] 23%|██▎       | 129367/552076 [00:02<00:08, 51133.84it/s] 24%|██▍       | 134612/552076 [00:02<00:08, 51520.88it/s] 25%|██▌       | 139927/552076 [00:02<00:07, 51518.70it/s] 26%|██▋       | 145254/552076 [00:02<00:07, 51908.85it/s] 27%|██▋       | 150693/552076 [00:02<00:07, 52628.53it/s] 28%|██▊       | 155970/552076 [00:02<00:07, 52669.85it/s] 29%|██▉       | 161243/552076 [00:03<00:07, 51315.22it/s] 30%|███       | 166387/552076 [00:03<00:07, 51352.31it/s] 31%|███       | 171912/552076 [00:03<00:07, 52462.32it/s] 32%|███▏      | 177363/552076 [00:03<00:07, 53059.71it/s] 33%|███▎      | 182679/552076 [00:03<00:07, 51345.82it/s] 34%|███▍      | 188011/552076 [00:03<00:07, 51921.45it/s] 35%|███▌      | 193581/552076 [00:03<00:06, 52999.47it/s] 36%|███▌      | 198897/552076 [00:03<00:06, 52439.89it/s] 37%|███▋      | 204154/552076 [00:03<00:06, 52298.47it/s] 38%|███▊      | 209393/552076 [00:04<00:06, 51915.54it/s] 39%|███▉      | 214978/552076 [00:04<00:06, 53036.25it/s] 40%|███▉      | 220378/552076 [00:04<00:06, 52646.59it/s] 41%|████      | 226021/552076 [00:04<00:06, 53726.83it/s] 42%|████▏     | 231405/552076 [00:04<00:06, 53250.47it/s] 43%|████▎     | 236878/552076 [00:04<00:05, 53685.84it/s] 44%|████▍     | 242549/552076 [00:04<00:05, 53090.54it/s] 45%|████▍     | 248006/552076 [00:04<00:05, 53525.64it/s] 46%|████▌     | 253506/552076 [00:04<00:05, 53958.31it/s] 47%|████▋     | 258907/552076 [00:04<00:05, 53894.58it/s] 48%|████▊     | 264300/552076 [00:05<00:05, 51501.61it/s] 49%|████▉     | 269475/552076 [00:05<00:05, 49784.83it/s] 50%|████▉     | 274948/552076 [00:05<00:05, 51171.37it/s] 51%|█████     | 280185/552076 [00:05<00:05, 51524.34it/s] 52%|█████▏    | 285980/552076 [00:05<00:04, 53296.65it/s] 53%|█████▎    | 291341/552076 [00:05<00:04, 52482.03it/s] 54%|█████▍    | 296755/552076 [00:05<00:04, 52614.12it/s] 55%|█████▍    | 302357/552076 [00:05<00:04, 53590.47it/s] 56%|█████▌    | 307866/552076 [00:05<00:04, 54029.88it/s] 57%|█████▋    | 313282/552076 [00:05<00:04, 52913.06it/s] 58%|█████▊    | 318588/552076 [00:06<00:04, 52766.13it/s] 59%|█████▊    | 324255/552076 [00:06<00:04, 53878.72it/s] 60%|█████▉    | 329888/552076 [00:06<00:04, 53324.43it/s] 61%|██████    | 335512/552076 [00:06<00:04, 53660.95it/s] 62%|██████▏   | 341215/552076 [00:06<00:03, 54628.64it/s] 63%|██████▎   | 346896/552076 [00:06<00:03, 55264.43it/s] 64%|██████▍   | 352431/552076 [00:06<00:03, 53377.32it/s] 65%|██████▍   | 357789/552076 [00:06<00:03, 53334.60it/s] 66%|██████▌   | 363137/552076 [00:06<00:03, 51950.99it/s] 67%|██████▋   | 368623/552076 [00:07<00:03, 52023.00it/s] 68%|██████▊   | 373838/552076 [00:07<00:03, 48308.26it/s] 69%|██████▊   | 379445/552076 [00:07<00:03, 50008.83it/s] 70%|██████▉   | 385535/552076 [00:07<00:03, 52292.02it/s] 71%|███████   | 390833/552076 [00:07<00:03, 49717.47it/s] 72%|███████▏  | 397092/552076 [00:07<00:02, 52985.09it/s] 73%|███████▎  | 402502/552076 [00:07<00:02, 52447.76it/s] 74%|███████▍  | 407826/552076 [00:07<00:03, 46696.88it/s] 75%|███████▍  | 412669/552076 [00:07<00:03, 41016.41it/s] 76%|███████▌  | 417017/552076 [00:08<00:03, 39031.29it/s] 76%|███████▋  | 421113/552076 [00:08<00:03, 36725.80it/s] 77%|███████▋  | 424997/552076 [00:08<00:03, 37335.04it/s] 78%|███████▊  | 428847/552076 [00:08<00:03, 36150.59it/s] 78%|███████▊  | 432552/552076 [00:08<00:03, 36044.40it/s] 79%|███████▉  | 436220/552076 [00:08<00:03, 34743.50it/s] 80%|███████▉  | 439749/552076 [00:08<00:03, 34738.33it/s] 80%|████████  | 443261/552076 [00:08<00:03, 34082.39it/s] 81%|████████  | 446771/552076 [00:08<00:03, 34380.71it/s] 82%|████████▏ | 450258/552076 [00:09<00:02, 34525.49it/s] 82%|████████▏ | 453726/552076 [00:09<00:02, 33581.42it/s] 83%|████████▎ | 457101/552076 [00:09<00:02, 33369.18it/s] 83%|████████▎ | 460450/552076 [00:09<00:02, 32221.80it/s] 84%|████████▍ | 463899/552076 [00:09<00:02, 32869.58it/s] 85%|████████▍ | 467201/552076 [00:09<00:02, 32248.73it/s] 85%|████████▌ | 470610/552076 [00:09<00:02, 32778.85it/s] 86%|████████▌ | 474049/552076 [00:09<00:02, 33244.73it/s] 87%|████████▋ | 477585/552076 [00:09<00:02, 33850.78it/s] 87%|████████▋ | 480980/552076 [00:10<00:02, 32823.51it/s] 88%|████████▊ | 484480/552076 [00:10<00:02, 33447.25it/s] 88%|████████▊ | 488037/552076 [00:10<00:01, 34056.27it/s] 89%|████████▉ | 491705/552076 [00:10<00:01, 33915.86it/s] 90%|████████▉ | 495498/552076 [00:10<00:01, 35027.42it/s] 90%|█████████ | 499085/552076 [00:10<00:01, 35274.18it/s] 91%|█████████ | 502739/552076 [00:10<00:01, 35644.51it/s] 92%|█████████▏| 510605/552076 [00:10<00:00, 42639.77it/s] 94%|█████████▍| 521420/552076 [00:10<00:00, 52108.54it/s] 96%|█████████▋| 532319/552076 [00:10<00:00, 61780.75it/s] 99%|█████████▊| 544287/552076 [00:11<00:00, 72269.46it/s]100%|██████████| 552076/552076 [00:11<00:00, 49812.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11544/552076 [00:00<00:04, 115435.16it/s]  4%|▍         | 23308/552076 [00:00<00:04, 116085.62it/s]  6%|▋         | 35245/552076 [00:00<00:04, 117049.94it/s]  8%|▊         | 43828/552076 [00:00<00:04, 105533.31it/s]  9%|▉         | 51827/552076 [00:00<00:05, 88078.88it/s]  11%|█▏        | 63462/552076 [00:00<00:05, 95002.58it/s] 13%|█▎        | 72802/552076 [00:00<00:05, 94270.45it/s] 15%|█▍        | 81702/552076 [00:00<00:05, 81190.78it/s] 17%|█▋        | 92672/552076 [00:00<00:05, 88055.34it/s] 19%|█▉        | 103808/552076 [00:01<00:04, 93953.75it/s] 21%|██        | 115257/552076 [00:01<00:04, 99295.06it/s] 23%|██▎       | 126950/552076 [00:01<00:04, 103999.26it/s] 25%|██▍       | 137566/552076 [00:01<00:04, 85846.20it/s]  27%|██▋       | 149276/552076 [00:01<00:04, 93317.41it/s] 29%|██▉       | 160869/552076 [00:01<00:03, 99115.65it/s] 31%|███       | 171432/552076 [00:01<00:03, 100981.74it/s] 33%|███▎      | 182757/552076 [00:01<00:03, 104371.10it/s] 35%|███▌      | 194185/552076 [00:01<00:03, 107156.40it/s] 37%|███▋      | 205951/552076 [00:02<00:03, 110103.85it/s] 40%|███▉      | 219723/552076 [00:02<00:02, 117150.73it/s] 43%|████▎     | 239359/552076 [00:02<00:02, 133279.47it/s] 47%|████▋     | 259475/552076 [00:02<00:01, 148291.29it/s] 51%|█████     | 280702/552076 [00:02<00:01, 163031.35it/s] 55%|█████▍    | 302279/552076 [00:02<00:01, 175930.67it/s] 59%|█████▊    | 323901/552076 [00:02<00:01, 186345.34it/s] 63%|██████▎   | 345901/552076 [00:02<00:01, 195306.77it/s] 67%|██████▋   | 368378/552076 [00:02<00:00, 203300.11it/s] 71%|███████   | 390123/552076 [00:02<00:00, 207345.80it/s] 75%|███████▍  | 411453/552076 [00:03<00:00, 209096.33it/s] 78%|███████▊  | 432700/552076 [00:03<00:00, 208149.36it/s] 82%|████████▏ | 453753/552076 [00:03<00:00, 178791.79it/s] 86%|████████▌ | 472526/552076 [00:03<00:00, 161130.96it/s] 89%|████████▊ | 489595/552076 [00:03<00:00, 152049.33it/s] 92%|█████████▏| 505575/552076 [00:03<00:00, 144892.49it/s] 94%|█████████▍| 520678/552076 [00:03<00:00, 140047.00it/s] 97%|█████████▋| 535147/552076 [00:03<00:00, 138591.37it/s]100%|█████████▉| 549335/552076 [00:04<00:00, 137079.29it/s]100%|██████████| 552076/552076 [00:04<00:00, 136364.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12355/552076 [00:00<00:04, 123541.58it/s]  5%|▍         | 25471/552076 [00:00<00:04, 125732.30it/s]  7%|▋         | 38594/552076 [00:00<00:04, 127331.07it/s]  9%|▉         | 51645/552076 [00:00<00:03, 128265.70it/s] 12%|█▏        | 64480/552076 [00:00<00:03, 128288.27it/s] 14%|█▍        | 78039/552076 [00:00<00:03, 130394.35it/s] 17%|█▋        | 91679/552076 [00:00<00:03, 132139.17it/s] 19%|█▉        | 105132/552076 [00:00<00:03, 132846.27it/s] 21%|██▏       | 118204/552076 [00:00<00:03, 132199.67it/s] 24%|██▍       | 131702/552076 [00:01<00:03, 133019.83it/s] 26%|██▋       | 145256/552076 [00:01<00:03, 133765.27it/s] 29%|██▉       | 158851/552076 [00:01<00:02, 134410.46it/s] 31%|███       | 172470/552076 [00:01<00:02, 134936.97it/s] 34%|███▎      | 185848/552076 [00:01<00:02, 132766.63it/s] 36%|███▌      | 199052/552076 [00:01<00:02, 132505.31it/s] 38%|███▊      | 212252/552076 [00:01<00:02, 131976.55it/s] 41%|████      | 225415/552076 [00:01<00:02, 131492.80it/s] 43%|████▎     | 238540/552076 [00:01<00:02, 127933.62it/s] 46%|████▌     | 252038/552076 [00:01<00:02, 129968.56it/s] 48%|████▊     | 265315/552076 [00:02<00:02, 130795.52it/s] 50%|█████     | 278404/552076 [00:02<00:02, 130315.60it/s] 53%|█████▎    | 291961/552076 [00:02<00:01, 131847.49it/s] 55%|█████▌    | 305278/552076 [00:02<00:01, 132239.73it/s] 58%|█████▊    | 318509/552076 [00:02<00:01, 132245.24it/s] 60%|██████    | 331739/552076 [00:02<00:01, 130205.52it/s] 63%|██████▎   | 345162/552076 [00:02<00:01, 131387.24it/s] 65%|██████▍   | 358748/552076 [00:02<00:01, 132697.41it/s] 67%|██████▋   | 372341/552076 [00:02<00:01, 133648.33it/s] 70%|██████▉   | 385715/552076 [00:02<00:01, 133173.45it/s] 72%|███████▏  | 399689/552076 [00:03<00:01, 135076.70it/s] 75%|███████▍  | 413323/552076 [00:03<00:01, 135451.24it/s] 77%|███████▋  | 426940/552076 [00:03<00:00, 135663.98it/s] 80%|███████▉  | 440513/552076 [00:03<00:00, 134260.74it/s] 82%|████████▏ | 454301/552076 [00:03<00:00, 135324.93it/s] 85%|████████▍ | 467841/552076 [00:03<00:00, 134938.70it/s] 87%|████████▋ | 481341/552076 [00:03<00:00, 134309.94it/s] 90%|████████▉ | 494777/552076 [00:03<00:00, 132875.44it/s] 92%|█████████▏| 508361/552076 [00:03<00:00, 133748.35it/s] 95%|█████████▍| 522059/552076 [00:03<00:00, 134701.19it/s] 97%|█████████▋| 535535/552076 [00:04<00:00, 134198.39it/s] 99%|█████████▉| 548960/552076 [00:04<00:00, 132786.51it/s]100%|██████████| 552076/552076 [00:04<00:00, 132660.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12683/552076 [00:00<00:04, 126822.56it/s]  5%|▍         | 25991/552076 [00:00<00:04, 128637.07it/s]  7%|▋         | 38851/552076 [00:00<00:03, 128624.51it/s]  9%|▉         | 51955/552076 [00:00<00:03, 129337.14it/s] 12%|█▏        | 65190/552076 [00:00<00:03, 130225.53it/s] 14%|█▍        | 78671/552076 [00:00<00:03, 131565.81it/s] 17%|█▋        | 91344/552076 [00:00<00:03, 130075.65it/s] 19%|█▉        | 104974/552076 [00:00<00:03, 131880.64it/s] 21%|██▏       | 118653/552076 [00:00<00:03, 133314.04it/s] 24%|██▍       | 132205/552076 [00:01<00:03, 133966.11it/s] 26%|██▋       | 145265/552076 [00:01<00:03, 132936.49it/s] 29%|██▉       | 158934/552076 [00:01<00:02, 134038.50it/s] 31%|███       | 172421/552076 [00:01<00:02, 134284.14it/s] 34%|███▎      | 185733/552076 [00:01<00:02, 132961.72it/s] 36%|███▌      | 198951/552076 [00:01<00:02, 131809.61it/s] 38%|███▊      | 212423/552076 [00:01<00:02, 132666.95it/s] 41%|████      | 226042/552076 [00:01<00:02, 133702.55it/s] 43%|████▎     | 239390/552076 [00:01<00:02, 131921.81it/s] 46%|████▌     | 252820/552076 [00:01<00:02, 132625.20it/s] 48%|████▊     | 266387/552076 [00:02<00:02, 133524.04it/s] 51%|█████     | 280188/552076 [00:02<00:02, 134838.66it/s] 53%|█████▎    | 293673/552076 [00:02<00:01, 133314.24it/s] 56%|█████▌    | 307264/552076 [00:02<00:01, 134079.60it/s] 58%|█████▊    | 320677/552076 [00:02<00:01, 133950.70it/s] 61%|██████    | 334076/552076 [00:02<00:01, 115218.30it/s] 63%|██████▎   | 346061/552076 [00:02<00:01, 110588.41it/s] 65%|██████▍   | 358634/552076 [00:02<00:01, 114733.18it/s] 67%|██████▋   | 371082/552076 [00:02<00:01, 117491.95it/s] 69%|██████▉   | 383054/552076 [00:02<00:01, 117106.36it/s] 72%|███████▏  | 394921/552076 [00:03<00:01, 114525.18it/s] 74%|███████▍  | 407361/552076 [00:03<00:01, 117317.05it/s] 76%|███████▌  | 419195/552076 [00:03<00:01, 111803.40it/s] 78%|███████▊  | 430502/552076 [00:03<00:01, 94198.14it/s]  80%|████████  | 442937/552076 [00:03<00:01, 101587.47it/s] 82%|████████▏ | 455226/552076 [00:03<00:00, 107159.04it/s] 85%|████████▍ | 468013/552076 [00:03<00:00, 112629.37it/s] 87%|████████▋ | 480903/552076 [00:03<00:00, 117061.79it/s] 89%|████████▉ | 492938/552076 [00:04<00:00, 102910.95it/s] 92%|█████████▏| 505549/552076 [00:04<00:00, 108919.71it/s] 94%|█████████▍| 517874/552076 [00:04<00:00, 112854.73it/s] 96%|█████████▌| 530720/552076 [00:04<00:00, 117121.88it/s] 98%|█████████▊| 543679/552076 [00:04<00:00, 120600.86it/s]100%|██████████| 552076/552076 [00:04<00:00, 122805.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10258/552076 [00:00<00:05, 102577.16it/s]  4%|▍         | 23028/552076 [00:00<00:04, 109010.15it/s]  6%|▋         | 35468/552076 [00:00<00:04, 113211.24it/s]  9%|▊         | 47740/552076 [00:00<00:04, 115904.63it/s] 11%|█         | 59336/552076 [00:00<00:04, 115920.44it/s] 13%|█▎        | 72282/552076 [00:00<00:04, 119672.18it/s] 15%|█▌        | 85427/552076 [00:00<00:03, 122975.11it/s] 18%|█▊        | 97807/552076 [00:00<00:03, 123221.19it/s] 20%|█▉        | 109593/552076 [00:00<00:03, 121100.91it/s] 22%|██▏       | 122214/552076 [00:01<00:03, 121940.35it/s] 24%|██▍       | 134495/552076 [00:01<00:03, 122199.81it/s] 27%|██▋       | 147352/552076 [00:01<00:03, 124042.17it/s] 29%|██▉       | 159676/552076 [00:01<00:03, 123797.79it/s] 31%|███       | 171973/552076 [00:01<00:03, 123144.26it/s] 34%|███▎      | 185166/552076 [00:01<00:02, 125653.36it/s] 36%|███▌      | 197704/552076 [00:01<00:02, 125174.75it/s] 38%|███▊      | 210204/552076 [00:01<00:02, 125120.88it/s] 40%|████      | 222703/552076 [00:01<00:02, 124967.57it/s] 43%|████▎     | 235322/552076 [00:01<00:02, 125329.08it/s] 45%|████▍     | 247849/552076 [00:02<00:02, 124879.65it/s] 47%|████▋     | 260726/552076 [00:02<00:02, 126021.53it/s] 50%|████▉     | 273328/552076 [00:02<00:02, 124811.63it/s] 52%|█████▏    | 286193/552076 [00:02<00:02, 125936.97it/s] 54%|█████▍    | 299318/552076 [00:02<00:01, 127483.42it/s] 57%|█████▋    | 312507/552076 [00:02<00:01, 128773.39it/s] 59%|█████▉    | 325393/552076 [00:02<00:01, 128098.35it/s] 61%|██████▏   | 338570/552076 [00:02<00:01, 129177.13it/s] 64%|██████▎   | 351495/552076 [00:02<00:01, 126403.62it/s] 66%|██████▌   | 364154/552076 [00:02<00:01, 124762.81it/s] 68%|██████▊   | 376828/552076 [00:03<00:01, 125348.52it/s] 71%|███████   | 390057/552076 [00:03<00:01, 127351.18it/s] 73%|███████▎  | 403377/552076 [00:03<00:01, 129049.33it/s] 75%|███████▌  | 416300/552076 [00:03<00:01, 128869.16it/s] 78%|███████▊  | 429199/552076 [00:03<00:00, 127542.59it/s] 80%|████████  | 442509/552076 [00:03<00:00, 129160.14it/s] 83%|████████▎ | 455760/552076 [00:03<00:00, 130146.49it/s] 85%|████████▍ | 468786/552076 [00:03<00:00, 129771.66it/s] 87%|████████▋ | 481772/552076 [00:03<00:00, 126481.54it/s] 90%|████████▉ | 495023/552076 [00:03<00:00, 128231.54it/s] 92%|█████████▏| 508337/552076 [00:04<00:00, 129662.98it/s] 94%|█████████▍| 521609/552076 [00:04<00:00, 130565.05it/s] 97%|█████████▋| 534681/552076 [00:04<00:00, 125890.84it/s] 99%|█████████▉| 547317/552076 [00:04<00:00, 125972.75it/s]100%|██████████| 552076/552076 [00:04<00:00, 125791.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12336/552076 [00:00<00:04, 123351.59it/s]  5%|▍         | 25408/552076 [00:00<00:04, 125472.05it/s]  7%|▋         | 37860/552076 [00:00<00:04, 125184.22it/s]  9%|▉         | 50219/552076 [00:00<00:04, 124701.42it/s] 11%|█▏        | 62766/552076 [00:00<00:03, 124930.24it/s] 14%|█▎        | 75827/552076 [00:00<00:03, 126579.54it/s] 16%|█▌        | 88283/552076 [00:00<00:03, 125964.05it/s] 18%|█▊        | 100401/552076 [00:00<00:03, 124488.30it/s] 20%|██        | 112984/552076 [00:00<00:03, 124886.68it/s] 23%|██▎       | 126097/552076 [00:01<00:03, 126696.21it/s] 25%|██▌       | 139362/552076 [00:01<00:03, 128423.99it/s] 28%|██▊       | 152746/552076 [00:01<00:03, 130000.25it/s] 30%|██▉       | 165590/552076 [00:01<00:02, 129249.49it/s] 32%|███▏      | 178407/552076 [00:01<00:02, 128377.73it/s] 35%|███▍      | 191237/552076 [00:01<00:02, 128351.68it/s] 37%|███▋      | 204233/552076 [00:01<00:02, 128828.10it/s] 39%|███▉      | 217080/552076 [00:01<00:02, 128184.29it/s] 42%|████▏     | 229874/552076 [00:01<00:02, 127204.26it/s] 44%|████▍     | 243239/552076 [00:01<00:02, 129069.64it/s] 46%|████▋     | 256232/552076 [00:02<00:02, 129325.30it/s] 49%|████▉     | 269371/552076 [00:02<00:02, 129936.06it/s] 51%|█████     | 282364/552076 [00:02<00:02, 128308.19it/s] 53%|█████▎    | 295199/552076 [00:02<00:02, 127383.53it/s] 56%|█████▌    | 307942/552076 [00:02<00:01, 126556.51it/s] 58%|█████▊    | 320668/552076 [00:02<00:01, 126764.70it/s] 60%|██████    | 333348/552076 [00:02<00:01, 125969.53it/s] 63%|██████▎   | 345949/552076 [00:02<00:01, 124536.07it/s] 65%|██████▍   | 358532/552076 [00:02<00:01, 124919.89it/s] 67%|██████▋   | 371388/552076 [00:02<00:01, 125988.98it/s] 70%|██████▉   | 384657/552076 [00:03<00:01, 127927.07it/s] 72%|███████▏  | 397806/552076 [00:03<00:01, 128974.37it/s] 74%|███████▍  | 410714/552076 [00:03<00:01, 126682.35it/s] 77%|███████▋  | 423399/552076 [00:03<00:01, 126503.38it/s] 79%|███████▉  | 436671/552076 [00:03<00:00, 128305.50it/s] 81%|████████▏ | 449906/552076 [00:03<00:00, 129489.97it/s] 84%|████████▍ | 462868/552076 [00:03<00:00, 128922.38it/s] 86%|████████▌ | 476117/552076 [00:03<00:00, 129971.18it/s] 89%|████████▊ | 489337/552076 [00:03<00:00, 130629.53it/s] 91%|█████████ | 502407/552076 [00:03<00:00, 129215.74it/s] 93%|█████████▎| 515406/552076 [00:04<00:00, 129446.99it/s] 96%|█████████▌| 528357/552076 [00:04<00:00, 126556.77it/s] 98%|█████████▊| 541363/552076 [00:04<00:00, 127586.19it/s]100%|██████████| 552076/552076 [00:04<00:00, 127714.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11685/552076 [00:00<00:04, 116841.75it/s]  4%|▍         | 23719/552076 [00:00<00:04, 117867.74it/s]  7%|▋         | 36772/552076 [00:00<00:04, 121398.67it/s]  9%|▉         | 49596/552076 [00:00<00:04, 123371.51it/s] 11%|█         | 61861/552076 [00:00<00:03, 123150.84it/s] 14%|█▎        | 74858/552076 [00:00<00:03, 125118.65it/s] 16%|█▌        | 87689/552076 [00:00<00:03, 126056.55it/s] 18%|█▊        | 99349/552076 [00:00<00:04, 101964.02it/s] 20%|█▉        | 109627/552076 [00:01<00:05, 85108.16it/s] 21%|██▏       | 118664/552076 [00:01<00:05, 78728.08it/s] 23%|██▎       | 127000/552076 [00:01<00:05, 75025.09it/s] 24%|██▍       | 134864/552076 [00:01<00:05, 72256.86it/s] 26%|██▌       | 142365/552076 [00:01<00:05, 71487.87it/s] 27%|██▋       | 149708/552076 [00:01<00:05, 70127.74it/s] 28%|██▊       | 156863/552076 [00:01<00:05, 69391.86it/s] 30%|██▉       | 163904/552076 [00:01<00:05, 68730.07it/s] 31%|███       | 170850/552076 [00:01<00:05, 68300.43it/s] 32%|███▏      | 177732/552076 [00:02<00:05, 62435.66it/s] 34%|███▍      | 187268/552076 [00:02<00:05, 69648.82it/s] 35%|███▌      | 195918/552076 [00:02<00:04, 73971.61it/s] 37%|███▋      | 203641/552076 [00:02<00:05, 61048.54it/s] 38%|███▊      | 212243/552076 [00:02<00:05, 66872.03it/s] 41%|████      | 224324/552076 [00:02<00:04, 77213.47it/s] 43%|████▎     | 236325/552076 [00:02<00:03, 86462.31it/s] 45%|████▍     | 248122/552076 [00:02<00:03, 93993.43it/s] 47%|████▋     | 259973/552076 [00:02<00:02, 100210.44it/s] 49%|████▉     | 271952/552076 [00:03<00:02, 105377.03it/s] 51%|█████▏    | 283626/552076 [00:03<00:02, 108545.54it/s] 54%|█████▎    | 295566/552076 [00:03<00:02, 111587.09it/s] 56%|█████▌    | 307060/552076 [00:03<00:02, 94624.03it/s]  58%|█████▊    | 318697/552076 [00:03<00:02, 100243.30it/s] 60%|█████▉    | 330294/552076 [00:03<00:02, 104492.93it/s] 62%|██████▏   | 342096/552076 [00:03<00:01, 108211.55it/s] 64%|██████▍   | 353713/552076 [00:03<00:01, 110479.67it/s] 66%|██████▌   | 365294/552076 [00:03<00:01, 112024.07it/s] 68%|██████▊   | 377153/552076 [00:04<00:01, 113914.53it/s] 70%|███████   | 389124/552076 [00:04<00:01, 115592.38it/s] 73%|███████▎  | 401243/552076 [00:04<00:01, 117216.31it/s] 75%|███████▍  | 413346/552076 [00:04<00:01, 118333.90it/s] 77%|███████▋  | 425235/552076 [00:04<00:01, 117669.98it/s] 79%|███████▉  | 437042/552076 [00:04<00:01, 101215.16it/s] 81%|████████▏ | 448962/552076 [00:04<00:00, 106013.37it/s] 84%|████████▎ | 461046/552076 [00:04<00:00, 110062.90it/s] 86%|████████▌ | 472620/552076 [00:04<00:00, 111705.17it/s] 88%|████████▊ | 484555/552076 [00:04<00:00, 113892.25it/s] 90%|████████▉ | 496575/552076 [00:05<00:00, 115711.27it/s] 92%|█████████▏| 508265/552076 [00:05<00:00, 115990.42it/s] 94%|█████████▍| 519966/552076 [00:05<00:00, 116294.29it/s] 96%|█████████▋| 531654/552076 [00:05<00:00, 112746.53it/s] 98%|█████████▊| 543397/552076 [00:05<00:00, 114109.84it/s]100%|██████████| 552076/552076 [00:05<00:00, 99373.95it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8174/552076 [00:00<00:06, 77909.52it/s]  3%|▎         | 18038/552076 [00:00<00:06, 83151.59it/s]  5%|▌         | 29781/552076 [00:00<00:05, 91132.14it/s]  7%|▋         | 41240/552076 [00:00<00:05, 97094.87it/s]  9%|▉         | 49396/552076 [00:00<00:05, 86476.08it/s] 11%|█         | 60296/552076 [00:00<00:05, 92189.59it/s] 13%|█▎        | 72188/552076 [00:00<00:04, 98855.45it/s] 15%|█▌        | 83637/552076 [00:00<00:04, 103076.01it/s] 17%|█▋        | 94996/552076 [00:00<00:04, 106019.25it/s] 19%|█▉        | 106587/552076 [00:01<00:04, 108804.02it/s] 21%|██▏       | 117449/552076 [00:01<00:04, 104040.66it/s] 23%|██▎       | 127884/552076 [00:01<00:04, 88395.06it/s]  25%|██▌       | 138712/552076 [00:01<00:04, 93548.52it/s] 27%|██▋       | 148448/552076 [00:01<00:04, 93974.09it/s] 29%|██▉       | 159795/552076 [00:01<00:03, 99080.79it/s] 31%|███       | 171158/552076 [00:01<00:03, 103037.28it/s] 33%|███▎      | 181686/552076 [00:01<00:03, 97688.36it/s]  35%|███▍      | 191669/552076 [00:02<00:04, 78174.57it/s] 37%|███▋      | 203238/552076 [00:02<00:04, 83305.99it/s] 38%|███▊      | 212201/552076 [00:02<00:04, 82658.81it/s] 40%|████      | 220911/552076 [00:02<00:04, 73287.26it/s] 42%|████▏     | 231234/552076 [00:02<00:03, 80271.53it/s] 44%|████▎     | 241392/552076 [00:02<00:03, 85661.14it/s] 45%|████▌     | 250840/552076 [00:02<00:03, 88127.51it/s] 47%|████▋     | 260013/552076 [00:02<00:03, 76945.30it/s] 49%|████▊     | 268215/552076 [00:03<00:04, 66851.00it/s] 50%|████▉     | 275492/552076 [00:03<00:04, 65684.93it/s] 51%|█████▏    | 284009/552076 [00:03<00:03, 70525.15it/s] 53%|█████▎    | 291456/552076 [00:03<00:04, 52306.07it/s] 54%|█████▍    | 300814/552076 [00:03<00:04, 60167.14it/s] 56%|█████▋    | 311193/552076 [00:03<00:03, 68846.90it/s] 58%|█████▊    | 322729/552076 [00:03<00:02, 78319.99it/s] 60%|██████    | 333014/552076 [00:03<00:02, 83533.83it/s] 62%|██████▏   | 342874/552076 [00:03<00:02, 87544.59it/s] 64%|██████▍   | 352381/552076 [00:04<00:02, 76978.41it/s] 65%|██████▌   | 361383/552076 [00:04<00:02, 80475.80it/s] 68%|██████▊   | 372696/552076 [00:04<00:02, 88103.57it/s] 69%|██████▉   | 382746/552076 [00:04<00:01, 91487.71it/s] 71%|███████▏  | 394002/552076 [00:04<00:01, 96930.02it/s] 73%|███████▎  | 405290/552076 [00:04<00:01, 101218.73it/s] 76%|███████▌  | 416871/552076 [00:04<00:01, 105193.61it/s] 77%|███████▋  | 427668/552076 [00:04<00:01, 90906.18it/s]  79%|███████▉  | 437297/552076 [00:04<00:01, 90682.35it/s] 81%|████████  | 446742/552076 [00:05<00:01, 82554.96it/s] 83%|████████▎ | 456115/552076 [00:05<00:01, 85617.21it/s] 84%|████████▍ | 464999/552076 [00:05<00:01, 86559.19it/s] 86%|████████▌ | 473876/552076 [00:05<00:01, 75717.39it/s] 87%|████████▋ | 481848/552076 [00:05<00:00, 75739.08it/s] 89%|████████▉ | 489979/552076 [00:05<00:00, 77326.75it/s] 90%|█████████ | 497916/552076 [00:05<00:00, 77880.60it/s] 92%|█████████▏| 509106/552076 [00:05<00:00, 85695.52it/s] 94%|█████████▍| 521241/552076 [00:05<00:00, 93977.38it/s] 96%|█████████▋| 532524/552076 [00:06<00:00, 98934.78it/s] 99%|█████████▊| 544002/552076 [00:06<00:00, 103209.04it/s]100%|██████████| 552076/552076 [00:06<00:00, 88483.36it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9316/552076 [00:00<00:05, 93154.31it/s]  4%|▎         | 19691/552076 [00:00<00:05, 96098.18it/s]  5%|▌         | 28906/552076 [00:00<00:05, 94878.40it/s]  7%|▋         | 41068/552076 [00:00<00:05, 101577.40it/s]  9%|▉         | 52271/552076 [00:00<00:04, 104501.40it/s] 12%|█▏        | 64390/552076 [00:00<00:04, 109004.32it/s] 14%|█▍        | 76130/552076 [00:00<00:04, 111392.62it/s] 16%|█▌        | 87794/552076 [00:00<00:04, 112915.83it/s] 18%|█▊        | 99255/552076 [00:00<00:03, 113416.34it/s] 20%|██        | 110847/552076 [00:01<00:03, 114155.96it/s] 22%|██▏       | 122775/552076 [00:01<00:03, 115644.37it/s] 24%|██▍       | 135023/552076 [00:01<00:03, 117611.43it/s] 27%|██▋       | 146687/552076 [00:01<00:03, 116780.82it/s] 29%|██▉       | 158783/552076 [00:01<00:03, 118003.89it/s] 31%|███       | 170820/552076 [00:01<00:03, 118701.50it/s] 33%|███▎      | 182700/552076 [00:01<00:03, 118729.45it/s] 35%|███▌      | 194625/552076 [00:01<00:03, 118884.92it/s] 37%|███▋      | 206685/552076 [00:01<00:02, 119393.07it/s] 40%|███▉      | 218615/552076 [00:01<00:02, 119290.47it/s] 42%|████▏     | 231267/552076 [00:02<00:02, 121368.26it/s] 44%|████▍     | 243408/552076 [00:02<00:03, 97816.74it/s]  46%|████▌     | 253927/552076 [00:02<00:03, 90391.82it/s] 48%|████▊     | 263594/552076 [00:02<00:04, 60024.82it/s] 49%|████▉     | 271371/552076 [00:02<00:04, 56664.77it/s] 51%|█████     | 279671/552076 [00:02<00:04, 62625.02it/s] 52%|█████▏    | 287112/552076 [00:02<00:04, 65747.23it/s] 54%|█████▍    | 297944/552076 [00:03<00:03, 74535.02it/s] 55%|█████▌    | 306359/552076 [00:03<00:03, 73257.27it/s] 57%|█████▋    | 314363/552076 [00:03<00:04, 57025.38it/s] 58%|█████▊    | 321094/552076 [00:03<00:04, 54455.36it/s] 60%|██████    | 332796/552076 [00:03<00:03, 64858.01it/s] 62%|██████▏   | 344603/552076 [00:03<00:02, 74997.05it/s] 64%|██████▍   | 355125/552076 [00:03<00:02, 82067.55it/s] 66%|██████▋   | 366521/552076 [00:03<00:02, 87336.29it/s] 68%|██████▊   | 376777/552076 [00:04<00:01, 91405.83it/s] 70%|███████   | 387294/552076 [00:04<00:01, 95140.37it/s] 72%|███████▏  | 398597/552076 [00:04<00:01, 99881.52it/s] 74%|███████▍  | 410259/552076 [00:04<00:01, 104373.73it/s] 76%|███████▋  | 421581/552076 [00:04<00:01, 106878.00it/s] 78%|███████▊  | 432999/552076 [00:04<00:01, 108965.97it/s] 81%|████████  | 444469/552076 [00:04<00:00, 110622.80it/s] 83%|████████▎ | 456336/552076 [00:04<00:00, 112919.10it/s] 85%|████████▍ | 468521/552076 [00:04<00:00, 115455.73it/s] 87%|████████▋ | 480389/552076 [00:04<00:00, 116404.17it/s] 89%|████████▉ | 492410/552076 [00:05<00:00, 117518.52it/s] 91%|█████████▏| 504422/552076 [00:05<00:00, 118284.59it/s] 94%|█████████▎| 516722/552076 [00:05<00:00, 119658.26it/s] 96%|█████████▌| 528717/552076 [00:05<00:00, 119399.36it/s] 98%|█████████▊| 540708/552076 [00:05<00:00, 119551.02it/s]100%|██████████| 552076/552076 [00:05<00:00, 99718.06it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10089/552076 [00:00<00:05, 100887.21it/s]  4%|▍         | 21799/552076 [00:00<00:05, 105257.16it/s]  6%|▌         | 33237/552076 [00:00<00:04, 107836.62it/s]  8%|▊         | 43951/552076 [00:00<00:04, 107624.94it/s] 10%|█         | 56018/552076 [00:00<00:04, 107737.86it/s] 12%|█▏        | 65121/552076 [00:00<00:05, 89900.76it/s]  14%|█▎        | 74920/552076 [00:00<00:05, 89261.40it/s] 15%|█▌        | 83648/552076 [00:00<00:05, 88655.24it/s] 17%|█▋        | 95378/552076 [00:00<00:04, 95662.43it/s] 19%|█▉        | 105403/552076 [00:01<00:04, 96988.93it/s] 21%|██        | 115728/552076 [00:01<00:04, 98783.70it/s] 23%|██▎       | 127029/552076 [00:01<00:04, 102659.17it/s] 25%|██▍       | 137318/552076 [00:01<00:04, 99293.39it/s]  27%|██▋       | 149411/552076 [00:01<00:03, 104924.95it/s] 29%|██▉       | 160018/552076 [00:01<00:03, 104114.10it/s] 31%|███       | 170511/552076 [00:01<00:04, 93134.78it/s]  33%|███▎      | 180098/552076 [00:01<00:04, 89794.68it/s] 34%|███▍      | 189295/552076 [00:01<00:04, 89577.51it/s] 36%|███▋      | 200871/552076 [00:02<00:03, 96097.63it/s] 38%|███▊      | 210721/552076 [00:02<00:03, 88869.33it/s] 40%|████      | 223102/552076 [00:02<00:03, 97088.08it/s] 42%|████▏     | 234629/552076 [00:02<00:03, 101387.28it/s] 44%|████▍     | 245111/552076 [00:02<00:03, 96624.01it/s]  47%|████▋     | 256858/552076 [00:02<00:02, 102056.60it/s] 48%|████▊     | 267347/552076 [00:02<00:02, 100680.14it/s] 50%|█████     | 277734/552076 [00:02<00:02, 101615.23it/s] 52%|█████▏    | 288040/552076 [00:02<00:02, 101849.95it/s] 54%|█████▍    | 298326/552076 [00:03<00:02, 98626.49it/s]  56%|█████▌    | 310066/552076 [00:03<00:02, 103594.33it/s] 58%|█████▊    | 320557/552076 [00:03<00:02, 99836.70it/s]  60%|█████▉    | 330662/552076 [00:03<00:02, 93069.24it/s] 62%|██████▏   | 342466/552076 [00:03<00:02, 99374.63it/s] 64%|██████▍   | 353809/552076 [00:03<00:01, 103210.13it/s] 66%|██████▌   | 364543/552076 [00:03<00:01, 104413.47it/s] 68%|██████▊   | 375134/552076 [00:03<00:01, 104506.99it/s] 70%|██████▉   | 385689/552076 [00:03<00:01, 104762.54it/s] 72%|███████▏  | 397682/552076 [00:03<00:01, 108893.53it/s] 74%|███████▍  | 409326/552076 [00:04<00:01, 111050.25it/s] 76%|███████▌  | 420507/552076 [00:04<00:01, 104273.53it/s] 78%|███████▊  | 431241/552076 [00:04<00:01, 105172.66it/s] 80%|████████  | 443365/552076 [00:04<00:00, 109526.65it/s] 83%|████████▎ | 455643/552076 [00:04<00:00, 113191.38it/s] 85%|████████▍ | 467783/552076 [00:04<00:00, 115533.45it/s] 87%|████████▋ | 479953/552076 [00:04<00:00, 117315.04it/s] 89%|████████▉ | 492000/552076 [00:04<00:00, 118241.58it/s] 91%|█████████▏| 504080/552076 [00:04<00:00, 118996.26it/s] 93%|█████████▎| 516017/552076 [00:04<00:00, 117227.91it/s] 96%|█████████▌| 527772/552076 [00:05<00:00, 102940.92it/s] 98%|█████████▊| 539090/552076 [00:05<00:00, 105812.44it/s]100%|█████████▉| 550311/552076 [00:05<00:00, 107652.62it/s]100%|██████████| 552076/552076 [00:05<00:00, 103335.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11046/552076 [00:00<00:04, 110454.84it/s]  4%|▍         | 22999/552076 [00:00<00:04, 113028.20it/s]  6%|▋         | 34806/552076 [00:00<00:04, 114494.42it/s]  8%|▊         | 46669/552076 [00:00<00:04, 115703.00it/s] 11%|█         | 58223/552076 [00:00<00:04, 114458.54it/s] 12%|█▏        | 67825/552076 [00:00<00:04, 107769.76it/s] 14%|█▍        | 79448/552076 [00:00<00:04, 110174.68it/s] 17%|█▋        | 91176/552076 [00:00<00:04, 112213.62it/s] 18%|█▊        | 101823/552076 [00:01<00:05, 76760.41it/s] 20%|██        | 110602/552076 [00:01<00:06, 71484.14it/s] 21%|██▏       | 118595/552076 [00:01<00:06, 68943.83it/s] 23%|██▎       | 126100/552076 [00:01<00:06, 66833.31it/s] 24%|██▍       | 133225/552076 [00:01<00:06, 64908.41it/s] 25%|██▌       | 140037/552076 [00:01<00:06, 63895.65it/s] 27%|██▋       | 146655/552076 [00:01<00:06, 63620.39it/s] 28%|██▊       | 153190/552076 [00:01<00:06, 64129.51it/s] 29%|██▉       | 159717/552076 [00:01<00:06, 62870.72it/s] 30%|███       | 166089/552076 [00:02<00:06, 59092.33it/s] 31%|███▏      | 172553/552076 [00:02<00:06, 60653.61it/s] 32%|███▏      | 178703/552076 [00:02<00:06, 60016.00it/s] 34%|███▎      | 185201/552076 [00:02<00:05, 61422.76it/s] 35%|███▍      | 191692/552076 [00:02<00:05, 62428.02it/s] 36%|███▌      | 197975/552076 [00:02<00:05, 61510.25it/s] 37%|███▋      | 204358/552076 [00:02<00:05, 61337.52it/s] 38%|███▊      | 211082/552076 [00:02<00:05, 62995.56it/s] 39%|███▉      | 217408/552076 [00:02<00:05, 62283.33it/s] 41%|████      | 223657/552076 [00:03<00:05, 58175.27it/s] 42%|████▏     | 229544/552076 [00:03<00:05, 57702.82it/s] 44%|████▎     | 240285/552076 [00:03<00:04, 67005.08it/s] 45%|████▍     | 247581/552076 [00:03<00:04, 65224.39it/s] 46%|████▌     | 254531/552076 [00:03<00:04, 63625.96it/s] 47%|████▋     | 261202/552076 [00:03<00:04, 64267.85it/s] 49%|████▊     | 267846/552076 [00:03<00:04, 62417.40it/s] 50%|████▉     | 274291/552076 [00:03<00:04, 63012.60it/s] 51%|█████     | 280730/552076 [00:03<00:04, 63418.13it/s] 52%|█████▏    | 287154/552076 [00:04<00:04, 61441.68it/s] 53%|█████▎    | 293555/552076 [00:04<00:04, 62189.25it/s] 54%|█████▍    | 299973/552076 [00:04<00:04, 62772.00it/s] 55%|█████▌    | 306288/552076 [00:04<00:04, 60933.83it/s] 57%|█████▋    | 312659/552076 [00:04<00:03, 61740.53it/s] 58%|█████▊    | 318996/552076 [00:04<00:03, 62220.00it/s] 59%|█████▉    | 325240/552076 [00:04<00:03, 59925.08it/s] 60%|██████    | 331592/552076 [00:04<00:03, 60959.57it/s] 61%|██████    | 337919/552076 [00:04<00:03, 61633.34it/s] 62%|██████▏   | 344104/552076 [00:04<00:03, 60320.82it/s] 63%|██████▎   | 350158/552076 [00:05<00:03, 59221.94it/s] 65%|██████▍   | 356327/552076 [00:05<00:03, 58766.97it/s] 66%|██████▌   | 362218/552076 [00:05<00:03, 55315.23it/s] 67%|██████▋   | 368171/552076 [00:05<00:03, 56315.04it/s] 68%|██████▊   | 374588/552076 [00:05<00:03, 58461.89it/s] 69%|██████▉   | 381083/552076 [00:05<00:02, 60267.91it/s] 70%|███████   | 387159/552076 [00:05<00:02, 59289.01it/s] 71%|███████▏  | 393416/552076 [00:05<00:02, 59955.23it/s] 72%|███████▏  | 399909/552076 [00:05<00:02, 61364.75it/s] 74%|███████▎  | 406368/552076 [00:05<00:02, 62297.32it/s] 75%|███████▍  | 412621/552076 [00:06<00:02, 61013.12it/s] 76%|███████▌  | 418808/552076 [00:06<00:02, 61170.99it/s] 77%|███████▋  | 425303/552076 [00:06<00:02, 62256.61it/s] 78%|███████▊  | 431811/552076 [00:06<00:01, 63077.10it/s] 79%|███████▉  | 438133/552076 [00:06<00:01, 61792.82it/s] 80%|████████  | 444383/552076 [00:06<00:01, 61860.21it/s] 82%|████████▏ | 450819/552076 [00:06<00:01, 62588.32it/s] 83%|████████▎ | 457280/552076 [00:06<00:01, 63180.86it/s] 84%|████████▍ | 463607/552076 [00:06<00:01, 61743.33it/s] 85%|████████▌ | 469795/552076 [00:07<00:01, 61716.24it/s] 86%|████████▋ | 476294/552076 [00:07<00:01, 62662.66it/s] 87%|████████▋ | 482769/552076 [00:07<00:01, 63274.52it/s] 89%|████████▊ | 489105/552076 [00:07<00:01, 61775.31it/s] 90%|████████▉ | 495297/552076 [00:07<00:00, 61799.34it/s] 91%|█████████ | 501487/552076 [00:07<00:00, 56282.48it/s] 92%|█████████▏| 507218/552076 [00:07<00:00, 52714.77it/s] 93%|█████████▎| 513575/552076 [00:07<00:00, 55182.29it/s] 94%|█████████▍| 520067/552076 [00:07<00:00, 57781.81it/s] 95%|█████████▌| 526525/552076 [00:07<00:00, 59665.94it/s] 96%|█████████▋| 532585/552076 [00:08<00:00, 59125.42it/s] 98%|█████████▊| 539017/552076 [00:08<00:00, 60029.79it/s] 99%|█████████▉| 545542/552076 [00:08<00:00, 61505.05it/s]100%|█████████▉| 552073/552076 [00:08<00:00, 62598.49it/s]100%|██████████| 552076/552076 [00:08<00:00, 65785.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4448/552076 [00:00<00:12, 43399.68it/s]  2%|▏         | 8593/552076 [00:00<00:12, 42228.24it/s]  2%|▏         | 11177/552076 [00:00<00:15, 34989.25it/s]  2%|▏         | 13400/552076 [00:00<00:18, 29342.32it/s]  4%|▎         | 19834/552076 [00:00<00:15, 34956.78it/s]  5%|▍         | 27155/552076 [00:00<00:12, 41454.78it/s]  6%|▌         | 32213/552076 [00:00<00:12, 42762.36it/s]  7%|▋         | 37943/552076 [00:00<00:11, 46233.26it/s]  8%|▊         | 44031/552076 [00:00<00:10, 49819.47it/s]  9%|▉         | 50360/552076 [00:01<00:09, 53217.02it/s] 10%|█         | 56567/552076 [00:01<00:08, 55595.27it/s] 12%|█▏        | 64432/552076 [00:01<00:08, 60954.63it/s] 13%|█▎        | 72514/552076 [00:01<00:07, 65805.42it/s] 15%|█▍        | 80652/552076 [00:01<00:07, 63686.26it/s] 16%|█▌        | 87264/552076 [00:01<00:07, 58619.62it/s] 17%|█▋        | 94325/552076 [00:01<00:07, 61765.79it/s] 18%|█▊        | 101513/552076 [00:01<00:06, 64486.46it/s] 20%|█▉        | 108823/552076 [00:01<00:06, 66848.63it/s] 21%|██        | 115660/552076 [00:02<00:06, 65036.51it/s] 22%|██▏       | 122281/552076 [00:02<00:06, 61530.49it/s] 23%|██▎       | 128772/552076 [00:02<00:07, 59769.93it/s] 25%|██▍       | 135735/552076 [00:02<00:06, 62420.71it/s] 26%|██▌       | 142075/552076 [00:02<00:07, 54056.37it/s] 27%|██▋       | 149995/552076 [00:02<00:06, 59745.17it/s] 28%|██▊       | 156426/552076 [00:02<00:06, 61044.41it/s] 30%|██▉       | 163895/552076 [00:02<00:06, 64584.05it/s] 31%|███       | 172227/552076 [00:02<00:05, 68754.99it/s] 33%|███▎      | 179817/552076 [00:03<00:05, 70751.75it/s] 34%|███▍      | 187194/552076 [00:03<00:05, 69211.04it/s] 35%|███▌      | 194253/552076 [00:03<00:05, 68444.50it/s] 37%|███▋      | 201539/552076 [00:03<00:05, 69709.12it/s] 38%|███▊      | 208585/552076 [00:03<00:04, 68836.48it/s] 39%|███▉      | 216195/552076 [00:03<00:04, 70862.75it/s] 40%|████      | 223335/552076 [00:03<00:05, 57222.25it/s] 42%|████▏     | 229518/552076 [00:03<00:05, 57884.50it/s] 43%|████▎     | 237221/552076 [00:03<00:05, 62547.92it/s] 44%|████▍     | 244925/552076 [00:04<00:04, 66279.29it/s] 46%|████▌     | 251848/552076 [00:04<00:04, 66399.43it/s] 47%|████▋     | 259697/552076 [00:04<00:04, 69615.58it/s] 49%|████▊     | 268061/552076 [00:04<00:03, 73302.58it/s] 50%|█████     | 276206/552076 [00:04<00:03, 73898.34it/s] 51%|█████▏    | 283725/552076 [00:04<00:03, 69968.16it/s] 53%|█████▎    | 290856/552076 [00:04<00:04, 63400.78it/s] 54%|█████▍    | 297408/552076 [00:04<00:04, 60682.89it/s] 55%|█████▌    | 305451/552076 [00:04<00:03, 65507.79it/s] 57%|█████▋    | 313566/552076 [00:05<00:03, 69527.24it/s] 58%|█████▊    | 320748/552076 [00:05<00:03, 66607.65it/s] 59%|█████▉    | 327595/552076 [00:05<00:03, 57792.64it/s] 60%|██████    | 333713/552076 [00:05<00:04, 50848.06it/s] 61%|██████▏   | 339187/552076 [00:05<00:04, 47699.52it/s] 62%|██████▏   | 344269/552076 [00:05<00:05, 40366.46it/s] 63%|██████▎   | 348718/552076 [00:05<00:05, 35181.86it/s] 64%|██████▍   | 353036/552076 [00:05<00:05, 37251.05it/s] 65%|██████▍   | 357136/552076 [00:06<00:05, 37889.29it/s] 65%|██████▌   | 361437/552076 [00:06<00:04, 39292.46it/s] 66%|██████▌   | 365538/552076 [00:06<00:04, 39369.44it/s] 67%|██████▋   | 369812/552076 [00:06<00:04, 40323.01it/s] 68%|██████▊   | 374011/552076 [00:06<00:04, 40267.34it/s] 69%|██████▊   | 378594/552076 [00:06<00:04, 41788.02it/s] 69%|██████▉   | 382832/552076 [00:06<00:04, 37769.18it/s] 70%|███████   | 386724/552076 [00:06<00:05, 32306.74it/s] 71%|███████   | 391021/552076 [00:07<00:04, 34904.48it/s] 72%|███████▏  | 395171/552076 [00:07<00:04, 36651.79it/s] 72%|███████▏  | 399285/552076 [00:07<00:04, 36851.96it/s] 73%|███████▎  | 403440/552076 [00:07<00:03, 38144.91it/s] 74%|███████▍  | 407721/552076 [00:07<00:03, 39433.36it/s] 75%|███████▍  | 411980/552076 [00:07<00:03, 40329.21it/s] 75%|███████▌  | 416073/552076 [00:07<00:03, 39366.98it/s] 76%|███████▌  | 420107/552076 [00:07<00:03, 39400.18it/s] 77%|███████▋  | 424080/552076 [00:07<00:03, 34998.49it/s] 77%|███████▋  | 427694/552076 [00:07<00:03, 33730.79it/s] 79%|███████▊  | 434057/552076 [00:08<00:03, 39265.70it/s] 79%|███████▉  | 438390/552076 [00:08<00:02, 40378.23it/s] 80%|████████  | 442721/552076 [00:08<00:02, 39045.15it/s] 81%|████████  | 446840/552076 [00:08<00:02, 39621.21it/s] 82%|████████▏ | 451081/552076 [00:08<00:02, 40418.49it/s] 82%|████████▏ | 455319/552076 [00:08<00:02, 40986.57it/s] 83%|████████▎ | 459497/552076 [00:08<00:02, 39876.81it/s] 84%|████████▍ | 463547/552076 [00:08<00:02, 37087.99it/s] 85%|████████▍ | 467339/552076 [00:08<00:02, 36279.41it/s] 85%|████████▌ | 471029/552076 [00:09<00:02, 34827.71it/s] 86%|████████▌ | 475213/552076 [00:09<00:02, 36670.71it/s] 87%|████████▋ | 479173/552076 [00:09<00:01, 36688.62it/s] 88%|████████▊ | 483278/552076 [00:09<00:01, 37895.70it/s] 88%|████████▊ | 487487/552076 [00:09<00:01, 39062.70it/s] 89%|████████▉ | 491544/552076 [00:09<00:01, 39501.68it/s] 90%|████████▉ | 495523/552076 [00:09<00:01, 38615.42it/s] 90%|█████████ | 499409/552076 [00:09<00:01, 37867.38it/s] 91%|█████████ | 503216/552076 [00:09<00:01, 36335.75it/s] 92%|█████████▏| 506877/552076 [00:10<00:01, 33952.16it/s] 93%|█████████▎| 510878/552076 [00:10<00:01, 35191.90it/s] 93%|█████████▎| 514876/552076 [00:10<00:01, 36502.48it/s] 94%|█████████▍| 518572/552076 [00:10<00:00, 36538.47it/s] 95%|█████████▍| 522737/552076 [00:10<00:00, 37934.85it/s] 95%|█████████▌| 527047/552076 [00:10<00:00, 39348.18it/s] 96%|█████████▌| 531196/552076 [00:10<00:00, 39205.63it/s] 97%|█████████▋| 535414/552076 [00:10<00:00, 39949.12it/s] 98%|█████████▊| 539769/552076 [00:10<00:00, 40707.04it/s] 99%|█████████▊| 544035/552076 [00:10<00:00, 40965.27it/s] 99%|█████████▉| 548245/552076 [00:11<00:00, 41298.59it/s]100%|██████████| 552076/552076 [00:11<00:00, 49518.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7901/552076 [00:00<00:06, 79001.22it/s]  3%|▎         | 15417/552076 [00:00<00:06, 77519.50it/s]  4%|▍         | 22018/552076 [00:00<00:07, 73664.02it/s]  5%|▌         | 30313/552076 [00:00<00:06, 76222.74it/s]  7%|▋         | 38577/552076 [00:00<00:06, 78040.48it/s]  8%|▊         | 46735/552076 [00:00<00:06, 79069.41it/s] 10%|▉         | 53750/552076 [00:00<00:06, 74997.91it/s] 11%|█         | 61063/552076 [00:00<00:06, 74425.34it/s] 12%|█▏        | 68552/552076 [00:00<00:06, 74563.62it/s] 14%|█▍        | 76838/552076 [00:01<00:06, 76869.81it/s] 15%|█▌        | 84444/552076 [00:01<00:06, 76624.20it/s] 17%|█▋        | 91981/552076 [00:01<00:06, 67852.83it/s] 18%|█▊        | 98863/552076 [00:01<00:07, 64098.23it/s] 19%|█▉        | 105780/552076 [00:01<00:06, 65539.09it/s] 21%|██        | 114133/552076 [00:01<00:06, 69165.49it/s] 22%|██▏       | 121556/552076 [00:01<00:06, 70609.24it/s] 24%|██▎       | 130252/552076 [00:01<00:05, 74828.71it/s] 25%|██▌       | 138454/552076 [00:01<00:05, 76848.95it/s] 27%|██▋       | 150533/552076 [00:01<00:04, 86261.82it/s] 29%|██▉       | 162691/552076 [00:02<00:04, 94496.44it/s] 32%|███▏      | 174912/552076 [00:02<00:03, 101394.12it/s] 34%|███▎      | 185579/552076 [00:02<00:03, 102684.75it/s] 36%|███▌      | 196221/552076 [00:02<00:03, 91786.69it/s]  37%|███▋      | 206246/552076 [00:02<00:03, 94171.07it/s] 39%|███▉      | 217811/552076 [00:02<00:03, 99726.02it/s] 42%|████▏     | 229753/552076 [00:02<00:03, 104914.46it/s] 44%|████▍     | 242040/552076 [00:02<00:02, 109724.23it/s] 46%|████▌     | 253284/552076 [00:02<00:02, 110049.66it/s] 48%|████▊     | 265066/552076 [00:03<00:02, 112270.70it/s] 50%|█████     | 277157/552076 [00:03<00:02, 114729.35it/s] 52%|█████▏    | 289424/552076 [00:03<00:02, 117000.94it/s] 55%|█████▍    | 301717/552076 [00:03<00:02, 118717.44it/s] 57%|█████▋    | 313781/552076 [00:03<00:01, 119285.16it/s] 59%|█████▉    | 325759/552076 [00:03<00:02, 96332.05it/s]  61%|██████    | 336819/552076 [00:03<00:02, 100208.61it/s] 63%|██████▎   | 348964/552076 [00:03<00:01, 105755.71it/s] 65%|██████▌   | 360979/552076 [00:03<00:01, 109697.88it/s] 68%|██████▊   | 373093/552076 [00:04<00:01, 112895.54it/s] 70%|██████▉   | 385216/552076 [00:04<00:01, 115271.01it/s] 72%|███████▏  | 397034/552076 [00:04<00:01, 116127.61it/s] 74%|███████▍  | 408796/552076 [00:04<00:01, 116079.95it/s] 76%|███████▌  | 420509/552076 [00:04<00:01, 115806.64it/s] 78%|███████▊  | 432163/552076 [00:04<00:01, 110309.23it/s] 80%|████████  | 443300/552076 [00:04<00:01, 96194.71it/s]  82%|████████▏ | 454778/552076 [00:04<00:00, 101105.78it/s] 85%|████████▍ | 466920/552076 [00:04<00:00, 106447.70it/s] 87%|████████▋ | 479147/552076 [00:04<00:00, 110746.15it/s] 89%|████████▉ | 490489/552076 [00:05<00:00, 109774.95it/s] 91%|█████████ | 502424/552076 [00:05<00:00, 112481.21it/s] 93%|█████████▎| 514650/552076 [00:05<00:00, 115244.11it/s] 95%|█████████▌| 526571/552076 [00:05<00:00, 116404.05it/s] 98%|█████████▊| 538299/552076 [00:05<00:00, 116490.19it/s]100%|█████████▉| 550494/552076 [00:05<00:00, 118073.85it/s]100%|██████████| 552076/552076 [00:05<00:00, 98752.44it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6226/552076 [00:00<00:08, 62259.91it/s]  2%|▏         | 11464/552076 [00:00<00:09, 58923.91it/s]  3%|▎         | 14343/552076 [00:00<00:13, 40560.29it/s]  4%|▍         | 20919/552076 [00:00<00:11, 45828.75it/s]  5%|▍         | 27520/552076 [00:00<00:10, 50456.42it/s]  6%|▌         | 34034/552076 [00:00<00:09, 54114.09it/s]  7%|▋         | 40262/552076 [00:00<00:09, 56328.22it/s]  8%|▊         | 46463/552076 [00:00<00:08, 57918.61it/s] 10%|▉         | 52823/552076 [00:00<00:08, 59511.38it/s] 11%|█         | 59409/552076 [00:01<00:08, 61283.15it/s] 12%|█▏        | 65531/552076 [00:01<00:08, 55362.56it/s] 13%|█▎        | 71172/552076 [00:01<00:09, 52182.08it/s] 14%|█▍        | 77118/552076 [00:01<00:08, 54169.71it/s] 15%|█▍        | 82632/552076 [00:01<00:08, 52547.63it/s] 16%|█▌        | 89050/552076 [00:01<00:08, 55565.88it/s] 17%|█▋        | 95391/552076 [00:01<00:07, 57706.79it/s] 18%|█▊        | 101866/552076 [00:01<00:07, 59652.75it/s] 20%|█▉        | 108260/552076 [00:01<00:07, 60876.50it/s] 21%|██        | 114451/552076 [00:01<00:07, 61182.37it/s] 22%|██▏       | 120614/552076 [00:02<00:07, 57894.50it/s] 23%|██▎       | 127370/552076 [00:02<00:07, 60489.83it/s] 24%|██▍       | 134141/552076 [00:02<00:06, 62488.29it/s] 26%|██▌       | 140797/552076 [00:02<00:06, 63656.36it/s] 27%|██▋       | 147384/552076 [00:02<00:06, 64303.43it/s] 28%|██▊       | 154074/552076 [00:02<00:06, 65059.20it/s] 29%|██▉       | 160611/552076 [00:02<00:06, 64970.87it/s] 30%|███       | 167130/552076 [00:02<00:05, 64270.67it/s] 31%|███▏      | 173574/552076 [00:02<00:05, 64317.72it/s] 33%|███▎      | 180079/552076 [00:03<00:05, 64535.46it/s] 34%|███▍      | 186541/552076 [00:03<00:05, 64460.67it/s] 35%|███▍      | 193177/552076 [00:03<00:05, 65018.43it/s] 36%|███▌      | 199918/552076 [00:03<00:05, 65717.82it/s] 37%|███▋      | 206717/552076 [00:03<00:05, 66382.50it/s] 39%|███▊      | 213514/552076 [00:03<00:05, 66850.65it/s] 40%|███▉      | 220276/552076 [00:03<00:04, 67077.06it/s] 41%|████      | 227000/552076 [00:03<00:04, 67125.54it/s] 42%|████▏     | 233715/552076 [00:03<00:04, 66881.29it/s] 44%|████▎     | 240406/552076 [00:03<00:04, 65219.29it/s] 45%|████▍     | 246939/552076 [00:04<00:04, 65172.49it/s] 46%|████▌     | 253464/552076 [00:04<00:04, 65183.91it/s] 47%|████▋     | 260194/552076 [00:04<00:04, 65804.28it/s] 48%|████▊     | 266964/552076 [00:04<00:04, 66361.73it/s] 50%|████▉     | 273690/552076 [00:04<00:04, 66628.56it/s] 51%|█████     | 280416/552076 [00:04<00:04, 66814.10it/s] 52%|█████▏    | 287100/552076 [00:04<00:03, 66661.68it/s] 53%|█████▎    | 293904/552076 [00:04<00:03, 67068.59it/s] 54%|█████▍    | 300613/552076 [00:04<00:03, 66731.59it/s] 56%|█████▌    | 307288/552076 [00:04<00:03, 66508.98it/s] 57%|█████▋    | 313941/552076 [00:05<00:03, 66249.15it/s] 58%|█████▊    | 320568/552076 [00:05<00:03, 66160.04it/s] 59%|█████▉    | 327230/552076 [00:05<00:03, 66294.55it/s] 60%|██████    | 333914/552076 [00:05<00:03, 66455.75it/s] 62%|██████▏   | 340685/552076 [00:05<00:03, 66825.44it/s] 63%|██████▎   | 347456/552076 [00:05<00:03, 67085.78it/s] 64%|██████▍   | 354186/552076 [00:05<00:02, 67147.38it/s] 65%|██████▌   | 360950/552076 [00:05<00:02, 67293.04it/s] 67%|██████▋   | 367680/552076 [00:05<00:02, 66784.64it/s] 68%|██████▊   | 374360/552076 [00:05<00:02, 66233.66it/s] 69%|██████▉   | 381126/552076 [00:06<00:02, 66652.92it/s] 70%|███████   | 387794/552076 [00:06<00:02, 66647.05it/s] 71%|███████▏  | 394529/552076 [00:06<00:02, 66854.04it/s] 73%|███████▎  | 401269/552076 [00:06<00:02, 67014.53it/s] 74%|███████▍  | 407972/552076 [00:06<00:02, 66911.05it/s] 75%|███████▌  | 414664/552076 [00:06<00:02, 66406.24it/s] 76%|███████▋  | 421306/552076 [00:06<00:01, 65648.23it/s] 78%|███████▊  | 428013/552076 [00:06<00:01, 66065.52it/s] 79%|███████▊  | 434723/552076 [00:06<00:01, 66370.92it/s] 80%|███████▉  | 441555/552076 [00:06<00:01, 66941.49it/s] 81%|████████  | 448373/552076 [00:07<00:01, 67306.46it/s] 82%|████████▏ | 455170/552076 [00:07<00:01, 67502.45it/s] 84%|████████▎ | 461923/552076 [00:07<00:01, 67099.40it/s] 85%|████████▍ | 468635/552076 [00:07<00:01, 62874.10it/s] 86%|████████▌ | 474978/552076 [00:07<00:01, 60405.27it/s] 87%|████████▋ | 481079/552076 [00:07<00:01, 48156.32it/s] 88%|████████▊ | 486330/552076 [00:07<00:01, 45925.02it/s] 89%|████████▉ | 491294/552076 [00:07<00:01, 46978.18it/s] 90%|█████████ | 497490/552076 [00:07<00:01, 50651.78it/s] 91%|█████████ | 502802/552076 [00:08<00:01, 45002.51it/s] 93%|█████████▎| 512636/552076 [00:08<00:00, 53747.93it/s] 95%|█████████▍| 524440/552076 [00:08<00:00, 64245.53it/s] 97%|█████████▋| 534612/552076 [00:08<00:00, 71637.50it/s] 99%|█████████▉| 546722/552076 [00:08<00:00, 81640.83it/s]100%|██████████| 552076/552076 [00:08<00:00, 64203.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11601/552076 [00:00<00:04, 116002.64it/s]  4%|▍         | 23630/552076 [00:00<00:04, 117255.14it/s]  6%|▋         | 35622/552076 [00:00<00:04, 118040.70it/s]  9%|▊         | 47559/552076 [00:00<00:04, 118434.22it/s] 11%|█         | 58146/552076 [00:00<00:04, 114361.83it/s] 13%|█▎        | 70564/552076 [00:00<00:04, 117139.47it/s] 15%|█▌        | 83066/552076 [00:00<00:03, 119394.72it/s] 17%|█▋        | 96497/552076 [00:00<00:03, 123506.67it/s] 20%|█▉        | 108242/552076 [00:00<00:03, 119516.66it/s] 22%|██▏       | 119798/552076 [00:01<00:05, 73097.90it/s]  23%|██▎       | 129038/552076 [00:01<00:06, 61926.23it/s] 25%|██▍       | 136875/552076 [00:01<00:07, 58094.28it/s] 26%|██▌       | 143884/552076 [00:01<00:07, 57902.34it/s] 27%|██▋       | 150514/552076 [00:01<00:07, 57360.82it/s] 28%|██▊       | 156839/552076 [00:01<00:06, 57502.22it/s] 30%|██▉       | 163002/552076 [00:02<00:06, 56363.20it/s] 31%|███       | 168932/552076 [00:02<00:06, 57109.13it/s] 32%|███▏      | 174851/552076 [00:02<00:06, 55704.75it/s] 33%|███▎      | 180575/552076 [00:02<00:06, 55949.49it/s] 34%|███▎      | 186278/552076 [00:02<00:06, 52398.09it/s] 35%|███▍      | 191871/552076 [00:02<00:06, 52055.32it/s] 36%|███▌      | 197288/552076 [00:02<00:06, 51209.52it/s] 37%|███▋      | 202472/552076 [00:02<00:06, 50522.33it/s] 38%|███▊      | 207863/552076 [00:02<00:06, 51371.26it/s] 39%|███▊      | 213881/552076 [00:02<00:06, 53730.15it/s] 40%|███▉      | 219896/552076 [00:03<00:05, 55506.95it/s] 41%|████      | 225499/552076 [00:03<00:06, 52979.59it/s] 42%|████▏     | 230858/552076 [00:03<00:06, 52310.60it/s] 43%|████▎     | 236134/552076 [00:03<00:06, 51429.00it/s] 44%|████▎     | 241312/552076 [00:03<00:06, 49322.25it/s] 45%|████▍     | 246287/552076 [00:03<00:06, 48790.69it/s] 46%|████▌     | 251215/552076 [00:03<00:06, 48850.63it/s] 47%|████▋     | 256899/552076 [00:03<00:05, 51000.66it/s] 48%|████▊     | 262412/552076 [00:03<00:05, 52171.55it/s] 49%|████▊     | 267890/552076 [00:04<00:05, 51326.10it/s] 50%|████▉     | 273480/552076 [00:04<00:05, 52616.90it/s] 51%|█████     | 278890/552076 [00:04<00:05, 53052.04it/s] 52%|█████▏    | 284545/552076 [00:04<00:04, 54054.71it/s] 53%|█████▎    | 289969/552076 [00:04<00:04, 52777.46it/s] 54%|█████▎    | 295536/552076 [00:04<00:04, 53612.81it/s] 55%|█████▍    | 301297/552076 [00:04<00:04, 54750.53it/s] 56%|█████▌    | 307089/552076 [00:04<00:04, 55662.52it/s] 57%|█████▋    | 312672/552076 [00:04<00:04, 53178.30it/s] 58%|█████▊    | 318334/552076 [00:04<00:04, 54165.45it/s] 59%|█████▊    | 323780/552076 [00:05<00:04, 53631.66it/s] 60%|█████▉    | 329548/552076 [00:05<00:04, 54784.52it/s] 61%|██████    | 335048/552076 [00:05<00:04, 54165.95it/s] 62%|██████▏   | 340980/552076 [00:05<00:03, 55614.77it/s] 63%|██████▎   | 346770/552076 [00:05<00:03, 55993.69it/s] 64%|██████▍   | 354213/552076 [00:05<00:03, 60487.66it/s] 66%|██████▌   | 363621/552076 [00:05<00:02, 67743.50it/s] 67%|██████▋   | 370758/552076 [00:05<00:02, 64157.42it/s] 68%|██████▊   | 377467/552076 [00:05<00:02, 59242.10it/s] 69%|██████▉   | 383671/552076 [00:06<00:02, 59318.36it/s] 71%|███████   | 389799/552076 [00:06<00:02, 57264.95it/s] 72%|███████▏  | 395678/552076 [00:06<00:02, 57195.03it/s] 73%|███████▎  | 401505/552076 [00:06<00:02, 55141.50it/s] 74%|███████▎  | 407110/552076 [00:06<00:02, 55229.05it/s] 75%|███████▍  | 412697/552076 [00:06<00:02, 53350.45it/s] 76%|███████▌  | 418091/552076 [00:06<00:02, 52463.02it/s] 77%|███████▋  | 423382/552076 [00:06<00:02, 51930.09it/s] 78%|███████▊  | 428773/552076 [00:06<00:02, 52507.69it/s] 79%|███████▊  | 434048/552076 [00:07<00:02, 52569.48it/s] 80%|███████▉  | 439582/552076 [00:07<00:02, 53369.79it/s] 81%|████████  | 444934/552076 [00:07<00:02, 44320.62it/s] 81%|████████▏ | 449633/552076 [00:07<00:02, 43640.83it/s] 83%|████████▎ | 456823/552076 [00:07<00:01, 49473.62it/s] 84%|████████▍ | 465648/552076 [00:07<00:01, 56020.48it/s] 85%|████████▌ | 471821/552076 [00:07<00:01, 56443.54it/s] 87%|████████▋ | 477866/552076 [00:07<00:01, 55104.63it/s] 88%|████████▊ | 483664/552076 [00:07<00:01, 53790.57it/s] 89%|████████▊ | 489273/552076 [00:08<00:01, 54459.77it/s] 90%|████████▉ | 494911/552076 [00:08<00:01, 55020.90it/s] 91%|█████████ | 500518/552076 [00:08<00:00, 53424.92it/s] 92%|█████████▏| 506190/552076 [00:08<00:00, 54371.47it/s] 93%|█████████▎| 511838/552076 [00:08<00:00, 54985.83it/s] 94%|█████████▎| 517504/552076 [00:08<00:00, 53803.78it/s] 95%|█████████▍| 523370/552076 [00:08<00:00, 54478.39it/s] 96%|█████████▌| 528992/552076 [00:08<00:00, 54419.02it/s] 97%|█████████▋| 534454/552076 [00:08<00:00, 45268.82it/s] 98%|█████████▊| 539253/552076 [00:09<00:00, 43618.54it/s] 99%|█████████▊| 544767/552076 [00:09<00:00, 46535.54it/s]100%|█████████▉| 550091/552076 [00:09<00:00, 48361.65it/s]100%|██████████| 552076/552076 [00:09<00:00, 59364.16it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5260/552076 [00:00<00:10, 52599.30it/s]  2%|▏         | 10706/552076 [00:00<00:10, 53142.77it/s]  3%|▎         | 15788/552076 [00:00<00:10, 51666.61it/s]  4%|▍         | 21147/552076 [00:00<00:10, 52228.22it/s]  5%|▍         | 26169/552076 [00:00<00:10, 51608.58it/s]  6%|▌         | 31531/552076 [00:00<00:09, 52194.61it/s]  7%|▋         | 36863/552076 [00:00<00:09, 52527.04it/s]  8%|▊         | 41979/552076 [00:00<00:09, 51379.05it/s]  9%|▊         | 47481/552076 [00:00<00:09, 51937.78it/s] 10%|▉         | 53034/552076 [00:01<00:09, 52964.72it/s] 11%|█         | 58448/552076 [00:01<00:09, 53311.40it/s] 12%|█▏        | 63684/552076 [00:01<00:09, 52052.58it/s] 12%|█▏        | 68838/552076 [00:01<00:09, 51611.75it/s] 13%|█▎        | 74016/552076 [00:01<00:09, 51661.98it/s] 14%|█▍        | 79154/552076 [00:01<00:09, 50599.43it/s] 15%|█▌        | 84199/552076 [00:01<00:09, 50392.42it/s] 16%|█▌        | 89290/552076 [00:01<00:09, 49288.04it/s] 17%|█▋        | 94217/552076 [00:01<00:09, 47476.17it/s] 18%|█▊        | 98978/552076 [00:01<00:10, 45146.21it/s] 19%|█▉        | 104608/552076 [00:02<00:09, 47998.50it/s] 20%|█▉        | 109894/552076 [00:02<00:09, 48105.61it/s] 21%|██        | 115193/552076 [00:02<00:08, 49473.11it/s] 22%|██▏       | 120607/552076 [00:02<00:08, 50785.85it/s] 23%|██▎       | 126035/552076 [00:02<00:08, 51784.78it/s] 24%|██▍       | 131254/552076 [00:02<00:08, 50701.67it/s] 25%|██▍       | 136578/552076 [00:02<00:08, 51436.58it/s] 26%|██▌       | 141903/552076 [00:02<00:07, 51967.27it/s] 27%|██▋       | 147149/552076 [00:02<00:07, 52113.13it/s] 28%|██▊       | 152373/552076 [00:02<00:07, 50050.63it/s] 29%|██▊       | 157846/552076 [00:03<00:07, 51367.57it/s] 30%|██▉       | 163010/552076 [00:03<00:07, 50312.33it/s] 30%|███       | 168065/552076 [00:03<00:07, 49573.67it/s] 32%|███▏      | 175185/552076 [00:03<00:06, 54543.78it/s] 33%|███▎      | 184431/552076 [00:03<00:05, 61315.11it/s] 35%|███▌      | 195177/552076 [00:03<00:05, 70381.98it/s] 37%|███▋      | 203679/552076 [00:03<00:04, 74214.96it/s] 39%|███▉      | 214283/552076 [00:03<00:04, 81556.07it/s] 41%|████      | 225228/552076 [00:03<00:03, 88306.84it/s] 43%|████▎     | 235939/552076 [00:04<00:03, 93215.74it/s] 45%|████▍     | 245755/552076 [00:04<00:03, 83617.61it/s] 46%|████▌     | 254649/552076 [00:04<00:03, 75567.45it/s] 48%|████▊     | 262726/552076 [00:04<00:04, 69113.05it/s] 49%|████▉     | 270109/552076 [00:04<00:04, 65901.99it/s] 51%|█████     | 278831/552076 [00:04<00:03, 71115.14it/s] 52%|█████▏    | 286314/552076 [00:04<00:03, 68849.05it/s] 53%|█████▎    | 293475/552076 [00:04<00:03, 65785.76it/s] 54%|█████▍    | 300276/552076 [00:05<00:03, 63533.03it/s] 56%|█████▌    | 308695/552076 [00:05<00:03, 68579.71it/s] 58%|█████▊    | 319353/552076 [00:05<00:03, 76793.41it/s] 60%|█████▉    | 329618/552076 [00:05<00:02, 83068.60it/s] 62%|██████▏   | 340525/552076 [00:05<00:02, 89465.04it/s] 64%|██████▎   | 351277/552076 [00:05<00:02, 91354.86it/s] 65%|██████▌   | 360759/552076 [00:05<00:02, 79905.40it/s] 67%|██████▋   | 369251/552076 [00:05<00:02, 74476.20it/s] 68%|██████▊   | 377463/552076 [00:05<00:02, 76613.87it/s] 70%|███████   | 387886/552076 [00:06<00:01, 83227.67it/s] 72%|███████▏  | 396595/552076 [00:06<00:01, 77877.67it/s] 73%|███████▎  | 404723/552076 [00:06<00:02, 72572.60it/s] 75%|███████▍  | 412291/552076 [00:06<00:02, 69701.82it/s] 77%|███████▋  | 423117/552076 [00:06<00:01, 74554.96it/s] 78%|███████▊  | 430836/552076 [00:06<00:01, 66644.97it/s] 79%|███████▉  | 437842/552076 [00:06<00:01, 62962.76it/s] 80%|████████  | 444420/552076 [00:06<00:01, 59886.85it/s] 82%|████████▏ | 450637/552076 [00:07<00:01, 57217.49it/s] 83%|████████▎ | 456544/552076 [00:07<00:01, 56558.95it/s] 84%|████████▎ | 462332/552076 [00:07<00:01, 54782.00it/s] 85%|████████▍ | 467979/552076 [00:07<00:01, 55277.49it/s] 86%|████████▌ | 473581/552076 [00:07<00:01, 55329.17it/s] 87%|████████▋ | 479166/552076 [00:07<00:01, 53441.99it/s] 88%|████████▊ | 484561/552076 [00:07<00:01, 53357.02it/s] 89%|████████▊ | 489932/552076 [00:07<00:01, 51435.91it/s] 90%|████████▉ | 495278/552076 [00:07<00:01, 52026.80it/s] 91%|█████████ | 500637/552076 [00:07<00:00, 52485.57it/s] 92%|█████████▏| 505907/552076 [00:08<00:00, 51414.72it/s] 93%|█████████▎| 511069/552076 [00:08<00:01, 38653.72it/s] 94%|█████████▍| 518293/552076 [00:08<00:00, 44918.33it/s] 96%|█████████▌| 528801/552076 [00:08<00:00, 54232.79it/s] 97%|█████████▋| 536053/552076 [00:08<00:00, 58670.39it/s] 98%|█████████▊| 542988/552076 [00:08<00:00, 58862.02it/s]100%|█████████▉| 549622/552076 [00:08<00:00, 60521.59it/s]100%|██████████| 552076/552076 [00:08<00:00, 62244.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6173/552076 [00:00<00:08, 61596.13it/s]  3%|▎         | 15165/552076 [00:00<00:07, 68023.22it/s]  5%|▍         | 25100/552076 [00:00<00:07, 75130.03it/s]  6%|▋         | 35242/552076 [00:00<00:06, 81463.70it/s]  8%|▊         | 43435/552076 [00:00<00:06, 81602.71it/s] 10%|▉         | 53176/552076 [00:00<00:05, 85776.89it/s] 12%|█▏        | 63635/552076 [00:00<00:05, 90667.64it/s] 13%|█▎        | 74160/552076 [00:00<00:05, 94597.81it/s] 15%|█▌        | 83490/552076 [00:00<00:05, 89320.85it/s] 17%|█▋        | 92392/552076 [00:01<00:05, 80372.78it/s] 18%|█▊        | 100578/552076 [00:01<00:06, 64526.48it/s] 20%|██        | 111045/552076 [00:01<00:06, 72915.11it/s] 22%|██▏       | 121683/552076 [00:01<00:05, 80512.04it/s] 24%|██▎       | 130530/552076 [00:01<00:05, 79935.77it/s] 25%|██▌       | 139082/552076 [00:01<00:05, 75337.91it/s] 27%|██▋       | 149366/552076 [00:01<00:04, 81908.36it/s] 29%|██▊       | 158036/552076 [00:01<00:05, 78071.19it/s] 30%|███       | 166217/552076 [00:02<00:05, 73449.93it/s] 31%|███▏      | 173880/552076 [00:02<00:05, 66689.34it/s] 33%|███▎      | 180891/552076 [00:02<00:05, 62056.19it/s] 34%|███▍      | 187401/552076 [00:02<00:05, 61767.80it/s] 35%|███▌      | 193791/552076 [00:02<00:05, 61668.84it/s] 37%|███▋      | 203568/552076 [00:02<00:05, 69350.50it/s] 39%|███▉      | 214036/552076 [00:02<00:04, 77162.24it/s] 40%|████      | 222325/552076 [00:02<00:04, 72148.21it/s] 42%|████▏     | 230007/552076 [00:02<00:04, 67990.74it/s] 43%|████▎     | 237182/552076 [00:03<00:04, 65889.76it/s] 44%|████▍     | 244049/552076 [00:03<00:04, 64421.97it/s] 45%|████▌     | 250693/552076 [00:03<00:04, 64123.30it/s] 47%|████▋     | 260935/552076 [00:03<00:04, 72225.10it/s] 49%|████▉     | 271005/552076 [00:03<00:03, 78918.91it/s] 51%|█████     | 280575/552076 [00:03<00:03, 83167.41it/s] 52%|█████▏    | 289297/552076 [00:03<00:03, 75306.71it/s] 54%|█████▍    | 297342/552076 [00:03<00:03, 75026.49it/s] 55%|█████▌    | 305143/552076 [00:03<00:03, 71530.49it/s] 57%|█████▋    | 314185/552076 [00:04<00:03, 76312.19it/s] 59%|█████▉    | 324656/552076 [00:04<00:02, 83070.50it/s] 61%|██████    | 335137/552076 [00:04<00:02, 88581.76it/s] 62%|██████▏   | 344346/552076 [00:04<00:02, 89164.22it/s] 65%|██████▍   | 356238/552076 [00:04<00:02, 96399.27it/s] 66%|██████▋   | 366220/552076 [00:04<00:01, 94534.32it/s] 68%|██████▊   | 377003/552076 [00:04<00:01, 98165.43it/s] 70%|███████   | 387029/552076 [00:04<00:01, 93582.04it/s] 72%|███████▏  | 398884/552076 [00:04<00:01, 99891.88it/s] 74%|███████▍  | 409234/552076 [00:05<00:01, 100946.52it/s] 76%|███████▌  | 419508/552076 [00:05<00:01, 92673.92it/s]  78%|███████▊  | 431652/552076 [00:05<00:01, 99762.38it/s] 80%|████████  | 441963/552076 [00:05<00:01, 99574.59it/s] 82%|████████▏ | 452986/552076 [00:05<00:00, 102546.70it/s] 84%|████████▍ | 463427/552076 [00:05<00:01, 75705.46it/s]  86%|████████▌ | 474855/552076 [00:05<00:00, 84177.11it/s] 88%|████████▊ | 484619/552076 [00:05<00:00, 87809.30it/s] 90%|████████▉ | 494920/552076 [00:05<00:00, 91874.73it/s] 91%|█████████▏| 504726/552076 [00:06<00:00, 75948.20it/s] 93%|█████████▎| 513213/552076 [00:06<00:00, 66713.27it/s] 94%|█████████▍| 520713/552076 [00:06<00:00, 65059.13it/s] 96%|█████████▌| 527808/552076 [00:06<00:00, 63479.70it/s] 97%|█████████▋| 534577/552076 [00:06<00:00, 63484.01it/s] 98%|█████████▊| 541220/552076 [00:06<00:00, 62447.49it/s] 99%|█████████▉| 547675/552076 [00:06<00:00, 62352.44it/s]100%|██████████| 552076/552076 [00:06<00:00, 79475.66it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7517/552076 [00:00<00:07, 75169.35it/s]  2%|▏         | 12802/552076 [00:00<00:08, 65955.53it/s]  3%|▎         | 18976/552076 [00:00<00:08, 64629.97it/s]  4%|▍         | 24843/552076 [00:00<00:08, 62153.98it/s]  5%|▌         | 30337/552076 [00:00<00:08, 59797.35it/s]  6%|▋         | 35729/552076 [00:00<00:08, 57903.27it/s]  7%|▋         | 41089/552076 [00:00<00:09, 55611.68it/s]  8%|▊         | 46136/552076 [00:00<00:09, 53961.63it/s]  9%|▉         | 51446/552076 [00:00<00:09, 53285.85it/s] 10%|█         | 57050/552076 [00:01<00:09, 54081.84it/s] 11%|█▏        | 62646/552076 [00:01<00:09, 53780.32it/s] 12%|█▏        | 68385/552076 [00:01<00:08, 54814.61it/s] 13%|█▎        | 73786/552076 [00:01<00:08, 53817.23it/s] 14%|█▍        | 79230/552076 [00:01<00:08, 54001.20it/s] 15%|█▌        | 84594/552076 [00:01<00:08, 53831.53it/s] 16%|█▋        | 90126/552076 [00:01<00:08, 54268.85it/s] 17%|█▋        | 95861/552076 [00:01<00:08, 55156.66it/s] 18%|█▊        | 101369/552076 [00:01<00:08, 54048.01it/s] 19%|█▉        | 106773/552076 [00:01<00:08, 52684.16it/s] 20%|██        | 112237/552076 [00:02<00:08, 53255.65it/s] 21%|██▏       | 117942/552076 [00:02<00:07, 54339.64it/s] 22%|██▏       | 123386/552076 [00:02<00:08, 52715.30it/s] 23%|██▎       | 128867/552076 [00:02<00:08, 52506.99it/s] 24%|██▍       | 134755/552076 [00:02<00:07, 54268.36it/s] 25%|██▌       | 140206/552076 [00:02<00:07, 52998.06it/s] 26%|██▋       | 146077/552076 [00:02<00:07, 53420.80it/s] 27%|██▋       | 151586/552076 [00:02<00:07, 53910.56it/s] 28%|██▊       | 157225/552076 [00:02<00:07, 54629.84it/s] 29%|██▉       | 162700/552076 [00:02<00:07, 52017.35it/s] 30%|███       | 168111/552076 [00:03<00:07, 52626.02it/s] 31%|███▏      | 173410/552076 [00:03<00:07, 51245.67it/s] 32%|███▏      | 178561/552076 [00:03<00:07, 51070.72it/s] 33%|███▎      | 183687/552076 [00:03<00:07, 50930.58it/s] 34%|███▍      | 189271/552076 [00:03<00:07, 51013.22it/s] 35%|███▌      | 195017/552076 [00:03<00:06, 52771.60it/s] 36%|███▋      | 200741/552076 [00:03<00:06, 54036.76it/s] 37%|███▋      | 206409/552076 [00:03<00:06, 54802.28it/s] 38%|███▊      | 212064/552076 [00:03<00:06, 51747.70it/s] 39%|███▉      | 217287/552076 [00:04<00:06, 49998.27it/s] 40%|████      | 222334/552076 [00:04<00:06, 49065.58it/s] 41%|████      | 227277/552076 [00:04<00:07, 46191.71it/s] 42%|████▏     | 232813/552076 [00:04<00:06, 48605.49it/s] 43%|████▎     | 237890/552076 [00:04<00:06, 46862.09it/s] 44%|████▍     | 243172/552076 [00:04<00:06, 47529.76it/s] 45%|████▍     | 247974/552076 [00:04<00:06, 45260.54it/s] 46%|████▌     | 253761/552076 [00:04<00:06, 48425.39it/s] 47%|████▋     | 258706/552076 [00:04<00:06, 45847.74it/s] 48%|████▊     | 263391/552076 [00:05<00:06, 44402.61it/s] 49%|████▉     | 269183/552076 [00:05<00:05, 47745.36it/s] 50%|████▉     | 274085/552076 [00:05<00:05, 47078.32it/s] 51%|█████     | 278884/552076 [00:05<00:05, 46455.40it/s] 52%|█████▏    | 284651/552076 [00:05<00:05, 49332.45it/s] 52%|█████▏    | 289679/552076 [00:05<00:05, 45731.59it/s] 53%|█████▎    | 294371/552076 [00:05<00:05, 44153.56it/s] 54%|█████▍    | 298882/552076 [00:05<00:05, 44233.61it/s] 55%|█████▌    | 304134/552076 [00:05<00:05, 46431.29it/s] 56%|█████▌    | 308853/552076 [00:06<00:05, 46429.17it/s] 57%|█████▋    | 314289/552076 [00:06<00:04, 48553.18it/s] 58%|█████▊    | 319207/552076 [00:06<00:04, 47994.33it/s] 59%|█████▊    | 324052/552076 [00:06<00:05, 45006.56it/s] 60%|█████▉    | 328623/552076 [00:06<00:05, 41815.08it/s] 60%|██████    | 332899/552076 [00:06<00:05, 40837.50it/s] 61%|██████    | 337054/552076 [00:06<00:05, 40522.47it/s] 62%|██████▏   | 342870/552076 [00:06<00:04, 44577.72it/s] 63%|██████▎   | 347487/552076 [00:06<00:04, 43666.01it/s] 64%|██████▍   | 351969/552076 [00:07<00:04, 41005.78it/s] 65%|██████▍   | 356184/552076 [00:07<00:04, 39443.91it/s] 65%|██████▌   | 360310/552076 [00:07<00:04, 39970.46it/s] 66%|██████▌   | 364374/552076 [00:07<00:05, 36614.81it/s] 67%|██████▋   | 368137/552076 [00:07<00:05, 33478.29it/s] 68%|██████▊   | 373686/552076 [00:07<00:04, 36771.83it/s] 69%|██████▊   | 378389/552076 [00:07<00:04, 39346.23it/s] 69%|██████▉   | 383681/552076 [00:07<00:03, 42134.74it/s] 70%|███████   | 388076/552076 [00:07<00:03, 42113.76it/s] 71%|███████▏  | 393403/552076 [00:08<00:03, 44891.02it/s] 72%|███████▏  | 398032/552076 [00:08<00:03, 44865.05it/s] 73%|███████▎  | 402616/552076 [00:08<00:03, 42233.98it/s] 74%|███████▎  | 406940/552076 [00:08<00:03, 39587.20it/s] 74%|███████▍  | 411003/552076 [00:08<00:03, 39722.96it/s] 75%|███████▌  | 415048/552076 [00:08<00:03, 38106.51it/s] 76%|███████▌  | 419433/552076 [00:08<00:03, 39363.00it/s] 77%|███████▋  | 425188/552076 [00:08<00:02, 42928.99it/s] 78%|███████▊  | 430720/552076 [00:08<00:02, 46020.79it/s] 79%|███████▉  | 435479/552076 [00:09<00:02, 43811.80it/s] 80%|████████  | 441835/552076 [00:09<00:02, 47701.05it/s] 81%|████████  | 447490/552076 [00:09<00:02, 50050.42it/s] 82%|████████▏ | 453651/552076 [00:09<00:01, 52539.92it/s] 83%|████████▎ | 460043/552076 [00:09<00:01, 55503.41it/s] 84%|████████▍ | 466290/552076 [00:09<00:01, 56743.77it/s] 86%|████████▌ | 472685/552076 [00:09<00:01, 58728.85it/s] 87%|████████▋ | 478846/552076 [00:09<00:01, 58946.24it/s] 88%|████████▊ | 485331/552076 [00:09<00:01, 60601.18it/s] 89%|████████▉ | 491599/552076 [00:09<00:01, 60433.57it/s] 90%|█████████ | 497684/552076 [00:10<00:00, 60434.97it/s] 91%|█████████ | 503757/552076 [00:10<00:00, 59926.27it/s] 92%|█████████▏| 510117/552076 [00:10<00:00, 60982.81it/s] 94%|█████████▎| 516235/552076 [00:10<00:00, 59225.07it/s] 95%|█████████▍| 522183/552076 [00:10<00:00, 58079.49it/s] 96%|█████████▌| 528606/552076 [00:10<00:00, 59796.96it/s] 97%|█████████▋| 535144/552076 [00:10<00:00, 61368.77it/s] 98%|█████████▊| 541661/552076 [00:10<00:00, 62461.17it/s] 99%|█████████▉| 547933/552076 [00:10<00:00, 60833.85it/s]100%|██████████| 552076/552076 [00:10<00:00, 50426.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7073/552076 [00:00<00:08, 67523.03it/s]  2%|▏         | 13228/552076 [00:00<00:08, 65612.76it/s]  4%|▎         | 19672/552076 [00:00<00:08, 65255.12it/s]  5%|▍         | 26039/552076 [00:00<00:08, 64769.78it/s]  6%|▌         | 31654/552076 [00:00<00:08, 61916.55it/s]  7%|▋         | 38076/552076 [00:00<00:08, 62589.72it/s]  8%|▊         | 44473/552076 [00:00<00:08, 62996.06it/s]  9%|▉         | 50638/552076 [00:00<00:08, 61281.24it/s] 10%|█         | 56925/552076 [00:00<00:08, 61571.96it/s] 11%|█▏        | 62826/552076 [00:01<00:08, 60653.74it/s] 12%|█▏        | 68715/552076 [00:01<00:09, 53493.38it/s] 13%|█▎        | 74096/552076 [00:01<00:09, 48742.09it/s] 14%|█▍        | 79074/552076 [00:01<00:10, 46110.63it/s] 15%|█▌        | 83787/552076 [00:01<00:10, 45010.38it/s] 16%|█▌        | 88366/552076 [00:01<00:10, 44353.01it/s] 17%|█▋        | 92858/552076 [00:01<00:10, 43880.58it/s] 18%|█▊        | 97287/552076 [00:01<00:10, 42929.56it/s] 18%|█▊        | 101613/552076 [00:01<00:10, 42681.44it/s] 19%|█▉        | 106886/552076 [00:02<00:09, 45269.25it/s] 20%|██        | 112719/552076 [00:02<00:09, 48528.81it/s] 21%|██▏       | 117679/552076 [00:02<00:09, 44481.67it/s] 22%|██▏       | 122269/552076 [00:02<00:09, 43939.00it/s] 23%|██▎       | 126764/552076 [00:02<00:09, 43614.34it/s] 24%|██▍       | 131216/552076 [00:02<00:09, 43803.16it/s] 25%|██▍       | 137417/552076 [00:02<00:08, 47998.10it/s] 26%|██▌       | 143896/552076 [00:02<00:07, 52043.75it/s] 27%|██▋       | 150246/552076 [00:02<00:07, 55021.15it/s] 28%|██▊       | 156130/552076 [00:02<00:07, 56112.85it/s] 29%|██▉       | 162474/552076 [00:03<00:06, 58126.61it/s] 31%|███       | 168896/552076 [00:03<00:06, 59829.44it/s] 32%|███▏      | 175009/552076 [00:03<00:06, 58874.98it/s] 34%|███▎      | 186317/552076 [00:03<00:05, 67524.49it/s] 35%|███▌      | 193569/552076 [00:03<00:05, 65362.72it/s] 37%|███▋      | 203207/552076 [00:03<00:04, 72346.20it/s] 39%|███▉      | 215142/552076 [00:03<00:04, 82038.81it/s] 41%|████      | 227344/552076 [00:03<00:03, 90980.91it/s] 43%|████▎     | 237295/552076 [00:03<00:03, 81236.49it/s] 45%|████▍     | 247353/552076 [00:04<00:03, 86209.12it/s] 47%|████▋     | 257541/552076 [00:04<00:03, 90378.87it/s] 48%|████▊     | 267078/552076 [00:04<00:03, 78930.86it/s] 51%|█████     | 279286/552076 [00:04<00:03, 88291.47it/s] 52%|█████▏    | 288901/552076 [00:04<00:02, 90080.09it/s] 54%|█████▍    | 299681/552076 [00:04<00:02, 94752.38it/s] 56%|█████▌    | 309612/552076 [00:04<00:02, 80904.80it/s] 58%|█████▊    | 318374/552076 [00:04<00:03, 73743.22it/s] 59%|█████▉    | 326341/552076 [00:05<00:03, 72715.47it/s] 61%|██████▏   | 338149/552076 [00:05<00:02, 82187.86it/s] 63%|██████▎   | 347074/552076 [00:05<00:02, 83259.25it/s] 65%|██████▍   | 358221/552076 [00:05<00:02, 90098.54it/s] 67%|██████▋   | 367742/552076 [00:05<00:02, 80095.92it/s] 68%|██████▊   | 376315/552076 [00:05<00:02, 71857.91it/s] 70%|██████▉   | 384055/552076 [00:05<00:02, 67375.79it/s] 71%|███████   | 391238/552076 [00:05<00:02, 65081.62it/s] 72%|███████▏  | 398075/552076 [00:06<00:02, 63268.90it/s] 73%|███████▎  | 404643/552076 [00:06<00:02, 63955.68it/s] 74%|███████▍  | 411209/552076 [00:06<00:02, 61479.74it/s] 76%|███████▌  | 417503/552076 [00:06<00:02, 61909.45it/s] 77%|███████▋  | 423793/552076 [00:06<00:02, 62193.09it/s] 78%|███████▊  | 430082/552076 [00:06<00:02, 60351.15it/s] 79%|███████▉  | 436375/552076 [00:06<00:01, 61101.30it/s] 80%|████████  | 442530/552076 [00:06<00:01, 61115.73it/s] 81%|████████▏ | 448673/552076 [00:06<00:01, 58868.84it/s] 82%|████████▏ | 454905/552076 [00:06<00:01, 59862.98it/s] 84%|████████▎ | 461291/552076 [00:07<00:01, 59247.86it/s] 85%|████████▍ | 467260/552076 [00:07<00:01, 59378.90it/s] 86%|████████▌ | 473487/552076 [00:07<00:01, 59991.88it/s] 87%|████████▋ | 479853/552076 [00:07<00:01, 60587.59it/s] 88%|████████▊ | 486277/552076 [00:07<00:01, 61638.92it/s] 89%|████████▉ | 492650/552076 [00:07<00:00, 62250.89it/s] 90%|█████████ | 498885/552076 [00:07<00:00, 60834.35it/s] 91%|█████████▏| 504983/552076 [00:07<00:01, 45318.34it/s] 93%|█████████▎| 510783/552076 [00:08<00:00, 48128.72it/s] 94%|█████████▎| 516804/552076 [00:08<00:00, 51211.41it/s] 95%|█████████▍| 522443/552076 [00:08<00:00, 52270.55it/s] 96%|█████████▌| 528202/552076 [00:08<00:00, 53355.86it/s] 97%|█████████▋| 533732/552076 [00:08<00:00, 53580.76it/s] 98%|█████████▊| 539226/552076 [00:08<00:00, 51636.90it/s] 99%|█████████▊| 544500/552076 [00:08<00:00, 50835.56it/s]100%|█████████▉| 549664/552076 [00:08<00:00, 48781.59it/s]100%|██████████| 552076/552076 [00:08<00:00, 62635.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7895/552076 [00:00<00:06, 78947.25it/s]  3%|▎         | 14076/552076 [00:00<00:07, 71886.59it/s]  4%|▎         | 19901/552076 [00:00<00:07, 67167.56it/s]  5%|▍         | 25232/552076 [00:00<00:08, 59918.34it/s]  6%|▌         | 31269/552076 [00:00<00:08, 59215.97it/s]  7%|▋         | 37589/552076 [00:00<00:08, 58549.46it/s]  8%|▊         | 43448/552076 [00:00<00:08, 57951.90it/s]  9%|▉         | 49244/552076 [00:00<00:08, 57953.60it/s] 10%|▉         | 54829/552076 [00:00<00:08, 56989.55it/s] 11%|█         | 60788/552076 [00:01<00:08, 57744.56it/s] 12%|█▏        | 66671/552076 [00:01<00:08, 56856.91it/s] 13%|█▎        | 72532/552076 [00:01<00:08, 57370.33it/s] 14%|█▍        | 78181/552076 [00:01<00:08, 55022.48it/s] 15%|█▌        | 83642/552076 [00:01<00:09, 48629.15it/s] 17%|█▋        | 94081/552076 [00:01<00:07, 57424.94it/s] 18%|█▊        | 100541/552076 [00:01<00:07, 59266.28it/s] 19%|█▉        | 106985/552076 [00:01<00:07, 59311.11it/s] 21%|██        | 114297/552076 [00:01<00:06, 62872.06it/s] 23%|██▎       | 126494/552076 [00:02<00:05, 73564.67it/s] 25%|██▍       | 135839/552076 [00:02<00:05, 78579.87it/s] 26%|██▋       | 145634/552076 [00:02<00:04, 82116.70it/s] 28%|██▊       | 154406/552076 [00:02<00:05, 76284.58it/s] 29%|██▉       | 162509/552076 [00:02<00:05, 69287.87it/s] 31%|███       | 169894/552076 [00:02<00:05, 66952.98it/s] 32%|███▏      | 176926/552076 [00:02<00:05, 65491.44it/s] 33%|███▎      | 183718/552076 [00:02<00:05, 65032.38it/s] 34%|███▍      | 190392/552076 [00:02<00:05, 63037.36it/s] 36%|███▌      | 196905/552076 [00:03<00:05, 63649.98it/s] 37%|███▋      | 203365/552076 [00:03<00:05, 63071.68it/s] 38%|███▊      | 209793/552076 [00:03<00:05, 63428.19it/s] 39%|███▉      | 216184/552076 [00:03<00:05, 62167.54it/s] 40%|████      | 222440/552076 [00:03<00:05, 61828.68it/s] 41%|████▏     | 228651/552076 [00:03<00:06, 50321.99it/s] 42%|████▏     | 234481/552076 [00:03<00:06, 52475.14it/s] 44%|████▎     | 240903/552076 [00:03<00:05, 55520.26it/s] 45%|████▍     | 246768/552076 [00:03<00:05, 55658.99it/s] 46%|████▌     | 253144/552076 [00:04<00:05, 57864.48it/s] 47%|████▋     | 259073/552076 [00:04<00:05, 58197.01it/s] 48%|████▊     | 265499/552076 [00:04<00:04, 59891.61it/s] 49%|████▉     | 271864/552076 [00:04<00:04, 59685.42it/s] 50%|█████     | 278315/552076 [00:04<00:04, 61054.51it/s] 52%|█████▏    | 284469/552076 [00:04<00:04, 60818.73it/s] 53%|█████▎    | 290939/552076 [00:04<00:04, 61931.85it/s] 54%|█████▍    | 297175/552076 [00:04<00:04, 59393.21it/s] 55%|█████▌    | 303674/552076 [00:04<00:04, 60967.59it/s] 56%|█████▌    | 310035/552076 [00:04<00:03, 60530.34it/s] 57%|█████▋    | 316490/552076 [00:05<00:03, 61681.47it/s] 58%|█████▊    | 322684/552076 [00:05<00:03, 61372.69it/s] 60%|█████▉    | 329193/552076 [00:05<00:03, 62442.11it/s] 61%|██████    | 335455/552076 [00:05<00:03, 59863.21it/s] 62%|██████▏   | 341477/552076 [00:05<00:04, 50770.24it/s] 63%|██████▎   | 347282/552076 [00:05<00:04, 50236.85it/s] 64%|██████▍   | 352491/552076 [00:05<00:04, 49112.05it/s] 65%|██████▍   | 357538/552076 [00:05<00:04, 47518.14it/s] 66%|██████▌   | 363725/552076 [00:06<00:03, 50050.30it/s] 67%|██████▋   | 368840/552076 [00:06<00:03, 50244.34it/s] 68%|██████▊   | 373942/552076 [00:06<00:03, 48116.04it/s] 69%|██████▊   | 379065/552076 [00:06<00:03, 49009.52it/s] 70%|██████▉   | 385478/552076 [00:06<00:03, 52739.90it/s] 71%|███████   | 390872/552076 [00:06<00:03, 46056.33it/s] 72%|███████▏  | 395714/552076 [00:06<00:03, 44664.04it/s] 73%|███████▎  | 402007/552076 [00:06<00:03, 48923.44it/s] 74%|███████▎  | 407144/552076 [00:06<00:02, 49150.95it/s] 75%|███████▍  | 412231/552076 [00:06<00:02, 48869.62it/s] 76%|███████▌  | 417239/552076 [00:07<00:02, 48690.27it/s] 77%|███████▋  | 422376/552076 [00:07<00:02, 48588.36it/s] 78%|███████▊  | 428037/552076 [00:07<00:02, 48922.45it/s] 78%|███████▊  | 432972/552076 [00:07<00:02, 49003.41it/s] 79%|███████▉  | 437902/552076 [00:07<00:02, 42238.29it/s] 80%|████████  | 442312/552076 [00:07<00:02, 42010.91it/s] 81%|████████  | 447590/552076 [00:07<00:02, 43662.49it/s] 82%|████████▏ | 453715/552076 [00:07<00:02, 47778.15it/s] 83%|████████▎ | 458685/552076 [00:08<00:01, 46856.16it/s] 84%|████████▍ | 463509/552076 [00:08<00:01, 45940.50it/s] 85%|████████▌ | 469712/552076 [00:08<00:01, 49816.49it/s] 86%|████████▌ | 474860/552076 [00:08<00:01, 48568.79it/s] 87%|████████▋ | 481354/552076 [00:08<00:01, 52542.43it/s] 88%|████████▊ | 486871/552076 [00:08<00:01, 51963.11it/s] 89%|████████▉ | 492912/552076 [00:08<00:01, 52379.38it/s] 90%|█████████ | 498240/552076 [00:08<00:01, 50117.32it/s] 91%|█████████▏| 504707/552076 [00:08<00:00, 53745.16it/s] 92%|█████████▏| 510214/552076 [00:08<00:00, 52094.80it/s] 93%|█████████▎| 515528/552076 [00:09<00:00, 49552.79it/s] 94%|█████████▍| 521578/552076 [00:09<00:00, 51553.47it/s] 95%|█████████▌| 526824/552076 [00:09<00:00, 50990.23it/s] 96%|█████████▋| 532272/552076 [00:09<00:00, 51988.03it/s] 97%|█████████▋| 537521/552076 [00:09<00:00, 46509.12it/s] 98%|█████████▊| 542525/552076 [00:09<00:00, 47513.91it/s] 99%|█████████▉| 548530/552076 [00:09<00:00, 48295.76it/s]100%|██████████| 552076/552076 [00:09<00:00, 56013.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10896/552076 [00:00<00:04, 108952.57it/s]  3%|▎         | 19034/552076 [00:00<00:05, 97786.11it/s]   5%|▍         | 25329/552076 [00:00<00:06, 80111.46it/s]  7%|▋         | 37618/552076 [00:00<00:05, 89452.45it/s]  9%|▉         | 49224/552076 [00:00<00:05, 96058.96it/s] 11%|█         | 60809/552076 [00:00<00:04, 101245.28it/s] 13%|█▎        | 70226/552076 [00:00<00:05, 91479.05it/s]  14%|█▍        | 79058/552076 [00:00<00:05, 86572.21it/s] 17%|█▋        | 91329/552076 [00:00<00:04, 94961.95it/s] 18%|█▊        | 100954/552076 [00:01<00:05, 82651.34it/s] 20%|█▉        | 109595/552076 [00:01<00:05, 74091.02it/s] 21%|██▏       | 117434/552076 [00:01<00:06, 70041.40it/s] 23%|██▎       | 124785/552076 [00:01<00:06, 66403.47it/s] 24%|██▍       | 131708/552076 [00:01<00:06, 61367.28it/s] 25%|██▌       | 138118/552076 [00:01<00:06, 61361.81it/s] 26%|██▌       | 144446/552076 [00:01<00:06, 59152.36it/s] 27%|██▋       | 150513/552076 [00:01<00:06, 59312.66it/s] 28%|██▊       | 156551/552076 [00:02<00:06, 58020.51it/s] 29%|██▉       | 162434/552076 [00:02<00:06, 56205.73it/s] 30%|███       | 168320/552076 [00:02<00:06, 56975.17it/s] 32%|███▏      | 174167/552076 [00:02<00:06, 56100.14it/s] 33%|███▎      | 180096/552076 [00:02<00:06, 56366.80it/s] 34%|███▎      | 185760/552076 [00:02<00:06, 52392.71it/s] 35%|███▍      | 191075/552076 [00:02<00:07, 47522.91it/s] 36%|███▌      | 196752/552076 [00:02<00:07, 49781.91it/s] 37%|███▋      | 202638/552076 [00:02<00:06, 52196.50it/s] 38%|███▊      | 208521/552076 [00:03<00:06, 54023.10it/s] 39%|███▉      | 214505/552076 [00:03<00:06, 55645.50it/s] 40%|███▉      | 220152/552076 [00:03<00:06, 54556.05it/s] 41%|████      | 226045/552076 [00:03<00:05, 55797.65it/s] 42%|████▏     | 231993/552076 [00:03<00:05, 56852.70it/s] 43%|████▎     | 238006/552076 [00:03<00:05, 57797.25it/s] 44%|████▍     | 243818/552076 [00:03<00:05, 56141.51it/s] 45%|████▌     | 249743/552076 [00:03<00:05, 57039.04it/s] 46%|████▋     | 255825/552076 [00:03<00:05, 58122.49it/s] 47%|████▋     | 261661/552076 [00:03<00:05, 56285.14it/s] 48%|████▊     | 267605/552076 [00:04<00:04, 56981.28it/s] 50%|████▉     | 273401/552076 [00:04<00:04, 57271.26it/s] 51%|█████     | 279145/552076 [00:04<00:06, 43518.91it/s] 51%|█████▏    | 284002/552076 [00:04<00:06, 42432.15it/s] 54%|█████▎    | 295461/552076 [00:04<00:04, 52159.50it/s] 55%|█████▍    | 302048/552076 [00:04<00:04, 51740.05it/s] 56%|█████▌    | 308183/552076 [00:04<00:04, 52967.92it/s] 57%|█████▋    | 314160/552076 [00:04<00:04, 49041.60it/s] 58%|█████▊    | 319598/552076 [00:05<00:04, 48226.54it/s] 59%|█████▉    | 325139/552076 [00:05<00:04, 48883.48it/s] 60%|█████▉    | 330308/552076 [00:05<00:04, 49184.97it/s] 61%|██████    | 335413/552076 [00:05<00:04, 47500.95it/s] 62%|██████▏   | 341491/552076 [00:05<00:04, 50832.28it/s] 63%|██████▎   | 347538/552076 [00:05<00:03, 52392.05it/s] 64%|██████▍   | 352905/552076 [00:05<00:03, 51330.78it/s] 65%|██████▍   | 358133/552076 [00:05<00:03, 50296.34it/s] 66%|██████▌   | 363974/552076 [00:05<00:03, 51729.79it/s] 67%|██████▋   | 370083/552076 [00:06<00:03, 54221.80it/s] 68%|██████▊   | 375869/552076 [00:06<00:03, 55125.69it/s] 69%|██████▉   | 381437/552076 [00:06<00:03, 45280.45it/s] 70%|██████▉   | 386294/552076 [00:06<00:03, 41913.30it/s] 71%|███████   | 391627/552076 [00:06<00:03, 44766.93it/s] 72%|███████▏  | 396354/552076 [00:06<00:03, 44372.71it/s] 73%|███████▎  | 402358/552076 [00:06<00:03, 48140.52it/s] 74%|███████▍  | 407388/552076 [00:06<00:03, 47233.41it/s] 75%|███████▍  | 412267/552076 [00:07<00:03, 46589.59it/s] 76%|███████▌  | 417037/552076 [00:07<00:02, 45718.10it/s] 76%|███████▋  | 421690/552076 [00:07<00:03, 43091.34it/s] 77%|███████▋  | 427792/552076 [00:07<00:02, 47256.48it/s] 78%|███████▊  | 432701/552076 [00:07<00:02, 45700.73it/s] 79%|███████▉  | 437637/552076 [00:07<00:02, 46739.69it/s] 80%|████████  | 442415/552076 [00:07<00:02, 45106.84it/s] 81%|████████  | 447011/552076 [00:07<00:02, 44199.32it/s] 82%|████████▏ | 452774/552076 [00:07<00:02, 46397.22it/s] 83%|████████▎ | 457487/552076 [00:08<00:02, 45412.87it/s] 84%|████████▎ | 462085/552076 [00:08<00:02, 44028.75it/s] 85%|████████▍ | 466643/552076 [00:08<00:01, 44482.87it/s] 85%|████████▌ | 471142/552076 [00:08<00:01, 44316.46it/s] 86%|████████▋ | 476888/552076 [00:08<00:01, 47580.64it/s] 87%|████████▋ | 481732/552076 [00:08<00:01, 44291.23it/s] 88%|████████▊ | 486991/552076 [00:08<00:01, 45293.00it/s] 89%|████████▉ | 491600/552076 [00:08<00:01, 44385.87it/s] 90%|████████▉ | 496099/552076 [00:08<00:01, 41689.44it/s] 91%|█████████ | 501247/552076 [00:08<00:01, 44210.93it/s] 92%|█████████▏| 506323/552076 [00:09<00:00, 45832.00it/s] 93%|█████████▎| 510988/552076 [00:09<00:00, 44717.08it/s] 93%|█████████▎| 515523/552076 [00:09<00:00, 42361.19it/s] 94%|█████████▍| 519829/552076 [00:09<00:00, 40111.57it/s] 95%|█████████▍| 523914/552076 [00:09<00:00, 40309.23it/s] 96%|█████████▌| 527997/552076 [00:09<00:00, 40456.59it/s] 97%|█████████▋| 533561/552076 [00:09<00:00, 44063.61it/s] 98%|█████████▊| 538281/552076 [00:09<00:00, 44959.45it/s] 98%|█████████▊| 542866/552076 [00:09<00:00, 43065.58it/s] 99%|█████████▉| 548359/552076 [00:10<00:00, 45694.36it/s]100%|██████████| 552076/552076 [00:10<00:00, 54536.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6617/552076 [00:00<00:08, 64379.87it/s]  2%|▏         | 12475/552076 [00:00<00:08, 60828.04it/s]  3%|▎         | 16374/552076 [00:00<00:10, 51725.34it/s]  4%|▎         | 20633/552076 [00:00<00:10, 48597.66it/s]  4%|▍         | 24600/552076 [00:00<00:11, 45182.43it/s]  5%|▌         | 28941/552076 [00:00<00:11, 44102.18it/s]  6%|▌         | 34063/552076 [00:00<00:11, 45718.13it/s]  7%|▋         | 38224/552076 [00:00<00:11, 44365.90it/s]  8%|▊         | 42918/552076 [00:00<00:11, 44009.08it/s]  9%|▊         | 47246/552076 [00:01<00:11, 43612.39it/s] 10%|▉         | 52595/552076 [00:01<00:11, 44189.61it/s] 10%|█         | 57008/552076 [00:01<00:11, 44171.63it/s] 11%|█         | 61361/552076 [00:01<00:11, 42158.80it/s] 12%|█▏        | 65639/552076 [00:01<00:11, 42342.70it/s] 13%|█▎        | 70480/552076 [00:01<00:10, 43996.60it/s] 14%|█▎        | 75052/552076 [00:01<00:10, 44499.22it/s] 15%|█▍        | 81102/552076 [00:01<00:09, 48201.05it/s] 16%|█▌        | 86015/552076 [00:01<00:10, 45587.24it/s] 16%|█▋        | 90668/552076 [00:02<00:10, 42834.52it/s] 17%|█▋        | 95123/552076 [00:02<00:10, 42465.97it/s] 18%|█▊        | 99441/552076 [00:02<00:11, 40518.62it/s] 19%|█▉        | 104473/552076 [00:02<00:10, 43033.04it/s] 20%|█▉        | 108867/552076 [00:02<00:10, 41067.15it/s] 20%|██        | 113056/552076 [00:02<00:10, 40346.36it/s] 21%|██▏       | 117830/552076 [00:02<00:10, 41501.97it/s] 22%|██▏       | 122281/552076 [00:02<00:10, 41592.13it/s] 23%|██▎       | 126696/552076 [00:02<00:10, 42326.70it/s] 24%|██▍       | 131969/552076 [00:02<00:09, 44085.86it/s] 25%|██▍       | 137208/552076 [00:03<00:08, 46286.05it/s] 26%|██▌       | 142706/552076 [00:03<00:08, 48590.65it/s] 27%|██▋       | 147635/552076 [00:03<00:08, 46242.66it/s] 28%|██▊       | 152332/552076 [00:03<00:09, 41803.46it/s] 28%|██▊       | 156645/552076 [00:03<00:09, 41764.00it/s] 29%|██▉       | 161522/552076 [00:03<00:08, 43644.55it/s] 30%|███       | 166650/552076 [00:03<00:08, 44980.87it/s] 31%|███       | 172185/552076 [00:03<00:08, 47205.54it/s] 32%|███▏      | 177657/552076 [00:03<00:07, 48712.27it/s] 33%|███▎      | 182596/552076 [00:04<00:07, 48665.06it/s] 34%|███▍      | 187510/552076 [00:04<00:07, 48458.93it/s] 35%|███▍      | 192390/552076 [00:04<00:07, 46788.80it/s] 36%|███▌      | 197167/552076 [00:04<00:07, 47078.82it/s] 37%|███▋      | 202040/552076 [00:04<00:07, 46051.24it/s] 38%|███▊      | 207326/552076 [00:04<00:07, 47901.53it/s] 39%|███▊      | 212946/552076 [00:04<00:06, 50120.94it/s] 40%|███▉      | 218571/552076 [00:04<00:06, 51814.00it/s] 41%|████      | 223803/552076 [00:04<00:06, 49561.79it/s] 41%|████▏     | 228816/552076 [00:05<00:06, 48999.46it/s] 42%|████▏     | 233926/552076 [00:05<00:06, 49610.73it/s] 43%|████▎     | 239335/552076 [00:05<00:06, 49934.55it/s] 44%|████▍     | 244800/552076 [00:05<00:05, 51260.48it/s] 45%|████▌     | 249951/552076 [00:05<00:05, 50503.49it/s] 46%|████▌     | 255287/552076 [00:05<00:06, 49314.57it/s] 47%|████▋     | 260239/552076 [00:05<00:06, 48306.67it/s] 48%|████▊     | 265250/552076 [00:05<00:05, 48831.72it/s] 49%|████▉     | 270746/552076 [00:05<00:05, 50521.46it/s] 50%|█████     | 276273/552076 [00:05<00:05, 51858.02it/s] 51%|█████▏    | 283569/552076 [00:06<00:04, 56784.13it/s] 54%|█████▎    | 295747/552076 [00:06<00:03, 67608.91it/s] 56%|█████▌    | 307793/552076 [00:06<00:03, 77856.19it/s] 57%|█████▋    | 316825/552076 [00:06<00:03, 68549.89it/s] 59%|█████▉    | 324755/552076 [00:06<00:03, 66633.80it/s] 60%|██████    | 332183/552076 [00:06<00:03, 65617.70it/s] 61%|██████▏   | 339284/552076 [00:06<00:03, 64420.66it/s] 63%|██████▎   | 346108/552076 [00:06<00:03, 64772.31it/s] 64%|██████▍   | 352853/552076 [00:06<00:03, 65254.30it/s] 65%|██████▌   | 359567/552076 [00:07<00:03, 62896.17it/s] 66%|██████▋   | 366007/552076 [00:07<00:03, 61726.42it/s] 67%|██████▋   | 372290/552076 [00:07<00:02, 60804.18it/s] 69%|██████▊   | 378777/552076 [00:07<00:02, 61969.02it/s] 70%|██████▉   | 385244/552076 [00:07<00:02, 61329.71it/s] 71%|███████   | 391628/552076 [00:07<00:02, 62061.49it/s] 72%|███████▏  | 397920/552076 [00:07<00:02, 62315.84it/s] 73%|███████▎  | 404321/552076 [00:07<00:02, 62814.13it/s] 74%|███████▍  | 410620/552076 [00:07<00:02, 60698.57it/s] 76%|███████▌  | 416957/552076 [00:08<00:02, 61475.68it/s] 77%|███████▋  | 423390/552076 [00:08<00:02, 62304.95it/s] 78%|███████▊  | 429639/552076 [00:08<00:02, 60450.68it/s] 79%|███████▉  | 435853/552076 [00:08<00:01, 60670.10it/s] 80%|████████  | 442367/552076 [00:08<00:01, 61944.85it/s] 81%|████████▏ | 448581/552076 [00:08<00:01, 61608.80it/s] 82%|████████▏ | 455154/552076 [00:08<00:01, 62789.31it/s] 84%|████████▎ | 461507/552076 [00:08<00:01, 61942.03it/s] 85%|████████▍ | 467997/552076 [00:08<00:01, 62799.34it/s] 86%|████████▌ | 474289/552076 [00:08<00:01, 62325.15it/s] 87%|████████▋ | 480756/552076 [00:09<00:01, 63010.48it/s] 88%|████████▊ | 487066/552076 [00:09<00:01, 59997.89it/s] 89%|████████▉ | 493479/552076 [00:09<00:00, 61179.44it/s] 90%|█████████ | 499628/552076 [00:09<00:00, 55960.10it/s] 92%|█████████▏| 505858/552076 [00:09<00:00, 57446.10it/s] 93%|█████████▎| 511689/552076 [00:09<00:00, 57376.80it/s] 94%|█████████▍| 517934/552076 [00:09<00:00, 58808.64it/s] 95%|█████████▍| 523866/552076 [00:09<00:00, 54946.66it/s] 96%|█████████▌| 530295/552076 [00:09<00:00, 57450.86it/s] 97%|█████████▋| 536131/552076 [00:10<00:00, 56655.25it/s] 98%|█████████▊| 541863/552076 [00:10<00:00, 54733.70it/s] 99%|█████████▉| 547636/552076 [00:10<00:00, 55599.36it/s]100%|██████████| 552076/552076 [00:10<00:00, 53400.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5803/552076 [00:00<00:09, 58028.95it/s]  2%|▏         | 9565/552076 [00:00<00:10, 49837.35it/s]  3%|▎         | 14182/552076 [00:00<00:11, 46677.21it/s]  3%|▎         | 17856/552076 [00:00<00:12, 43172.87it/s]  6%|▋         | 35646/552076 [00:00<00:09, 55865.06it/s] 10%|▉         | 52779/552076 [00:00<00:07, 70021.86it/s] 13%|█▎        | 69232/552076 [00:00<00:05, 84600.10it/s] 16%|█▌        | 86761/552076 [00:00<00:04, 100143.30it/s] 19%|█▉        | 104623/552076 [00:00<00:03, 115345.25it/s] 22%|██▏       | 120272/552076 [00:01<00:03, 125221.62it/s] 25%|██▍       | 135511/552076 [00:01<00:03, 132296.79it/s] 27%|██▋       | 150731/552076 [00:01<00:04, 94315.79it/s]  30%|██▉       | 163080/552076 [00:01<00:04, 82924.49it/s] 31%|███▏      | 173665/552076 [00:01<00:05, 75177.79it/s] 33%|███▎      | 182926/552076 [00:01<00:05, 71006.55it/s] 35%|███▍      | 191295/552076 [00:02<00:05, 68164.36it/s] 36%|███▌      | 200114/552076 [00:02<00:04, 73146.72it/s] 38%|███▊      | 211296/552076 [00:02<00:04, 81613.68it/s] 40%|████      | 223012/552076 [00:02<00:03, 89784.54it/s] 42%|████▏     | 234069/552076 [00:02<00:03, 95150.21it/s] 45%|████▍     | 246479/552076 [00:02<00:02, 102308.74it/s] 47%|████▋     | 259553/552076 [00:02<00:02, 109447.18it/s] 49%|████▉     | 271813/552076 [00:02<00:02, 113083.89it/s] 51%|█████▏    | 283554/552076 [00:02<00:02, 98766.97it/s]  53%|█████▎    | 294060/552076 [00:02<00:02, 98350.59it/s] 56%|█████▌    | 306474/552076 [00:03<00:02, 104885.85it/s] 58%|█████▊    | 318730/552076 [00:03<00:02, 109627.91it/s] 60%|█████▉    | 330110/552076 [00:03<00:02, 110845.00it/s] 62%|██████▏   | 341447/552076 [00:03<00:02, 102138.75it/s] 64%|██████▍   | 351973/552076 [00:03<00:01, 102930.99it/s] 66%|██████▌   | 364675/552076 [00:03<00:01, 109140.27it/s] 68%|██████▊   | 377240/552076 [00:03<00:01, 113617.43it/s] 71%|███████   | 389290/552076 [00:03<00:01, 115598.16it/s] 73%|███████▎  | 401017/552076 [00:03<00:01, 113194.28it/s] 75%|███████▍  | 413870/552076 [00:04<00:01, 117396.12it/s] 77%|███████▋  | 427160/552076 [00:04<00:01, 121651.57it/s] 80%|███████▉  | 439569/552076 [00:04<00:00, 122371.03it/s] 82%|████████▏ | 451898/552076 [00:04<00:00, 116911.66it/s] 84%|████████▍ | 464219/552076 [00:04<00:00, 118730.56it/s] 86%|████████▋ | 476979/552076 [00:04<00:00, 121259.12it/s] 89%|████████▊ | 489684/552076 [00:04<00:00, 122939.37it/s] 91%|█████████ | 502649/552076 [00:04<00:00, 124877.38it/s] 93%|█████████▎| 515543/552076 [00:04<00:00, 126067.92it/s] 96%|█████████▌| 528594/552076 [00:04<00:00, 127366.90it/s] 98%|█████████▊| 541360/552076 [00:05<00:00, 119636.25it/s]100%|██████████| 552076/552076 [00:05<00:00, 107160.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21811/552076 [00:00<00:02, 218106.57it/s]  8%|▊         | 44168/552076 [00:00<00:02, 219715.72it/s] 12%|█▏        | 66080/552076 [00:00<00:02, 219534.21it/s] 16%|█▌        | 87455/552076 [00:00<00:02, 217763.55it/s] 20%|█▉        | 110050/552076 [00:00<00:02, 220155.50it/s] 24%|██▍       | 133355/552076 [00:00<00:01, 223869.25it/s] 28%|██▊       | 155276/552076 [00:00<00:01, 222448.94it/s] 32%|███▏      | 175820/552076 [00:00<00:01, 217056.94it/s] 36%|███▌      | 196640/552076 [00:00<00:01, 214318.64it/s] 39%|███▉      | 217229/552076 [00:01<00:01, 211133.86it/s] 43%|████▎     | 238929/552076 [00:01<00:01, 212859.89it/s] 47%|████▋     | 260167/552076 [00:01<00:01, 212715.45it/s] 51%|█████     | 281417/552076 [00:01<00:01, 212648.24it/s] 55%|█████▌    | 303806/552076 [00:01<00:01, 215900.18it/s] 59%|█████▉    | 326435/552076 [00:01<00:01, 218914.86it/s] 63%|██████▎   | 350098/552076 [00:01<00:00, 223944.10it/s] 68%|██████▊   | 372754/552076 [00:01<00:00, 224719.70it/s] 72%|███████▏  | 395245/552076 [00:01<00:00, 224776.66it/s] 76%|███████▌  | 417711/552076 [00:01<00:00, 224104.48it/s] 80%|███████▉  | 440313/552076 [00:02<00:00, 224675.62it/s] 84%|████████▍ | 462776/552076 [00:02<00:00, 218104.97it/s] 88%|████████▊ | 485614/552076 [00:02<00:00, 221086.23it/s] 92%|█████████▏| 507760/552076 [00:02<00:00, 219365.02it/s] 96%|█████████▌| 530491/552076 [00:02<00:00, 221689.18it/s]100%|██████████| 552076/552076 [00:02<00:00, 218792.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20619/552076 [00:00<00:02, 206184.30it/s]  8%|▊         | 42733/552076 [00:00<00:02, 210453.55it/s] 12%|█▏        | 65035/552076 [00:00<00:02, 214069.35it/s] 15%|█▌        | 84174/552076 [00:00<00:02, 206719.02it/s] 19%|█▉        | 106517/552076 [00:00<00:02, 211462.59it/s] 23%|██▎       | 128193/552076 [00:00<00:01, 213024.18it/s] 27%|██▋       | 151204/552076 [00:00<00:01, 217875.59it/s] 31%|███       | 171362/552076 [00:00<00:01, 212426.20it/s] 35%|███▌      | 194542/552076 [00:00<00:01, 217888.44it/s] 39%|███▉      | 216367/552076 [00:01<00:01, 217994.82it/s] 43%|████▎     | 237647/552076 [00:01<00:01, 212594.28it/s] 47%|████▋     | 258573/552076 [00:01<00:01, 202191.85it/s] 51%|█████     | 280151/552076 [00:01<00:01, 206084.35it/s] 54%|█████▍    | 300856/552076 [00:01<00:01, 206373.01it/s] 59%|█████▊    | 323416/552076 [00:01<00:01, 211782.90it/s] 62%|██████▏   | 344595/552076 [00:01<00:01, 205721.59it/s] 66%|██████▌   | 365206/552076 [00:01<00:00, 199682.58it/s] 70%|██████▉   | 386021/552076 [00:01<00:00, 202146.83it/s] 74%|███████▎  | 406826/552076 [00:01<00:00, 203881.50it/s] 77%|███████▋  | 427273/552076 [00:02<00:00, 204057.61it/s] 81%|████████▏ | 449899/552076 [00:02<00:00, 210245.73it/s] 86%|████████▌ | 472151/552076 [00:02<00:00, 213781.58it/s] 90%|████████▉ | 494904/552076 [00:02<00:00, 217727.30it/s] 94%|█████████▎| 516738/552076 [00:02<00:00, 217817.21it/s] 98%|█████████▊| 538563/552076 [00:02<00:00, 213549.77it/s]100%|██████████| 552076/552076 [00:02<00:00, 211494.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13257/552076 [00:00<00:04, 132567.91it/s]  5%|▍         | 25305/552076 [00:00<00:04, 128694.04it/s]  6%|▌         | 33196/552076 [00:00<00:04, 106925.80it/s]  7%|▋         | 39975/552076 [00:00<00:06, 80542.41it/s]   8%|▊         | 46254/552076 [00:00<00:07, 71121.04it/s] 10%|▉         | 52641/552076 [00:00<00:07, 68776.29it/s] 11%|█         | 59596/552076 [00:00<00:07, 69005.58it/s] 12%|█▏        | 68506/552076 [00:00<00:06, 71519.89it/s] 14%|█▍        | 76508/552076 [00:00<00:06, 73873.26it/s] 16%|█▌        | 86102/552076 [00:01<00:05, 79348.17it/s] 18%|█▊        | 98082/552076 [00:01<00:05, 88291.98it/s] 20%|█▉        | 110089/552076 [00:01<00:04, 95906.72it/s] 22%|██▏       | 122096/552076 [00:01<00:04, 102068.64it/s] 24%|██▍       | 133175/552076 [00:01<00:04, 104534.45it/s] 26%|██▌       | 143916/552076 [00:01<00:04, 99760.67it/s]  28%|██▊       | 155106/552076 [00:01<00:03, 103114.87it/s] 30%|███       | 166226/552076 [00:01<00:03, 100604.15it/s] 32%|███▏      | 176441/552076 [00:01<00:03, 94186.21it/s]  34%|███▍      | 187501/552076 [00:02<00:03, 98574.24it/s] 36%|███▌      | 199551/552076 [00:02<00:03, 104264.66it/s] 38%|███▊      | 210501/552076 [00:02<00:03, 105779.40it/s] 40%|████      | 221645/552076 [00:02<00:03, 107413.78it/s] 42%|████▏     | 232504/552076 [00:02<00:04, 79265.34it/s]  44%|████▍     | 243044/552076 [00:02<00:03, 85635.04it/s] 46%|████▌     | 254241/552076 [00:02<00:03, 92135.87it/s] 48%|████▊     | 264262/552076 [00:02<00:03, 86307.04it/s] 50%|████▉     | 273533/552076 [00:02<00:03, 86185.44it/s] 51%|█████     | 282600/552076 [00:03<00:03, 74110.19it/s] 53%|█████▎    | 290622/552076 [00:03<00:03, 72855.25it/s] 54%|█████▍    | 300509/552076 [00:03<00:03, 79097.65it/s] 56%|█████▋    | 311795/552076 [00:03<00:02, 86895.51it/s] 58%|█████▊    | 322704/552076 [00:03<00:02, 92543.77it/s] 60%|██████    | 333942/552076 [00:03<00:02, 97716.88it/s] 63%|██████▎   | 345385/552076 [00:03<00:02, 102193.43it/s] 65%|██████▍   | 356705/552076 [00:03<00:01, 105261.69it/s] 67%|██████▋   | 369057/552076 [00:03<00:01, 110145.52it/s] 69%|██████▉   | 380473/552076 [00:04<00:01, 111319.31it/s] 71%|███████   | 391780/552076 [00:04<00:01, 111117.17it/s] 73%|███████▎  | 403288/552076 [00:04<00:01, 112275.53it/s] 75%|███████▌  | 415538/552076 [00:04<00:01, 115157.93it/s] 77%|███████▋  | 427135/552076 [00:04<00:01, 115076.12it/s] 80%|███████▉  | 439390/552076 [00:04<00:00, 117220.09it/s] 82%|████████▏ | 451162/552076 [00:04<00:00, 116346.31it/s] 84%|████████▍ | 463218/552076 [00:04<00:00, 117577.14it/s] 86%|████████▌ | 475368/552076 [00:04<00:00, 118725.02it/s] 88%|████████▊ | 487436/552076 [00:04<00:00, 119303.34it/s] 91%|█████████ | 499787/552076 [00:05<00:00, 120532.28it/s] 93%|█████████▎| 511971/552076 [00:05<00:00, 120918.76it/s] 95%|█████████▍| 524074/552076 [00:05<00:00, 118896.90it/s] 97%|█████████▋| 536040/552076 [00:05<00:00, 119124.16it/s] 99%|█████████▉| 547963/552076 [00:05<00:00, 66668.50it/s] 100%|██████████| 552076/552076 [00:05<00:00, 94498.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4253/552076 [00:00<00:12, 42524.97it/s]  1%|▏         | 8220/552076 [00:00<00:13, 41625.66it/s]  2%|▏         | 11675/552076 [00:00<00:13, 39215.43it/s]  3%|▎         | 14833/552076 [00:00<00:14, 36561.96it/s]  3%|▎         | 18259/552076 [00:00<00:14, 35837.05it/s]  4%|▍         | 21739/552076 [00:00<00:15, 34305.89it/s]  5%|▍         | 25078/552076 [00:00<00:15, 34025.75it/s]  5%|▌         | 28406/552076 [00:00<00:15, 33798.53it/s]  6%|▌         | 31859/552076 [00:00<00:15, 34014.37it/s]  6%|▋         | 35105/552076 [00:01<00:15, 32626.22it/s]  7%|▋         | 38496/552076 [00:01<00:15, 33000.29it/s]  8%|▊         | 41932/552076 [00:01<00:15, 33396.43it/s]  8%|▊         | 45387/552076 [00:01<00:15, 32677.96it/s]  9%|▉         | 48832/552076 [00:01<00:15, 33189.89it/s]  9%|▉         | 52350/552076 [00:01<00:14, 33762.07it/s] 10%|█         | 55879/552076 [00:01<00:14, 34205.74it/s] 11%|█         | 59294/552076 [00:01<00:14, 32988.03it/s] 11%|█▏        | 62939/552076 [00:01<00:14, 33953.27it/s] 12%|█▏        | 67082/552076 [00:01<00:13, 35895.77it/s] 13%|█▎        | 70985/552076 [00:02<00:13, 36759.44it/s] 14%|█▎        | 74693/552076 [00:02<00:13, 35840.32it/s] 14%|█▍        | 78305/552076 [00:02<00:13, 35610.29it/s] 15%|█▍        | 81981/552076 [00:02<00:13, 35675.82it/s] 15%|█▌        | 85563/552076 [00:02<00:13, 35220.82it/s] 16%|█▌        | 89099/552076 [00:02<00:13, 35261.18it/s] 17%|█▋        | 92959/552076 [00:02<00:12, 36199.12it/s] 18%|█▊        | 96983/552076 [00:02<00:12, 37323.04it/s] 18%|█▊        | 100784/552076 [00:02<00:12, 37220.31it/s] 19%|█▉        | 104527/552076 [00:02<00:12, 37282.85it/s] 20%|█▉        | 108312/552076 [00:03<00:11, 37450.63it/s] 20%|██        | 112539/552076 [00:03<00:11, 38774.23it/s] 21%|██        | 116448/552076 [00:03<00:11, 38479.90it/s] 22%|██▏       | 120349/552076 [00:03<00:11, 38424.61it/s] 23%|██▎       | 124443/552076 [00:03<00:10, 39143.74it/s] 23%|██▎       | 128445/552076 [00:03<00:10, 39402.41it/s] 24%|██▍       | 132392/552076 [00:03<00:10, 39278.30it/s] 25%|██▍       | 136325/552076 [00:03<00:11, 37489.81it/s] 26%|██▌       | 140830/552076 [00:03<00:10, 39476.36it/s] 26%|██▌       | 144821/552076 [00:04<00:10, 37924.37it/s] 27%|██▋       | 149085/552076 [00:04<00:10, 39224.43it/s] 28%|██▊       | 155480/552076 [00:04<00:08, 44370.35it/s] 29%|██▉       | 161839/552076 [00:04<00:07, 48793.25it/s] 30%|███       | 167829/552076 [00:04<00:07, 51665.51it/s] 31%|███▏      | 173261/552076 [00:04<00:07, 49839.05it/s] 33%|███▎      | 179650/552076 [00:04<00:06, 53358.21it/s] 34%|███▎      | 185784/552076 [00:04<00:06, 55524.89it/s] 35%|███▍      | 191506/552076 [00:04<00:06, 55568.09it/s] 36%|███▌      | 198003/552076 [00:04<00:06, 58088.28it/s] 37%|███▋      | 203925/552076 [00:05<00:06, 53776.79it/s] 38%|███▊      | 210216/552076 [00:05<00:06, 56225.35it/s] 40%|████      | 221350/552076 [00:05<00:05, 66031.16it/s] 42%|████▏     | 229215/552076 [00:05<00:04, 68989.29it/s] 44%|████▎     | 241000/552076 [00:05<00:03, 78788.59it/s] 45%|████▌     | 249763/552076 [00:05<00:03, 76188.16it/s] 47%|████▋     | 259614/552076 [00:05<00:03, 80520.76it/s] 49%|████▊     | 268179/552076 [00:05<00:03, 80256.67it/s] 50%|█████     | 276564/552076 [00:05<00:03, 78543.23it/s] 52%|█████▏    | 287767/552076 [00:06<00:03, 86278.57it/s] 54%|█████▍    | 296808/552076 [00:06<00:02, 85472.11it/s] 56%|█████▌    | 308723/552076 [00:06<00:02, 93389.96it/s] 58%|█████▊    | 320574/552076 [00:06<00:02, 99731.48it/s] 60%|██████    | 332420/552076 [00:06<00:02, 104695.12it/s] 62%|██████▏   | 343908/552076 [00:06<00:01, 107553.43it/s] 64%|██████▍   | 355815/552076 [00:06<00:01, 110765.02it/s] 67%|██████▋   | 367421/552076 [00:06<00:01, 112299.93it/s] 69%|██████▊   | 378805/552076 [00:06<00:01, 112298.22it/s] 71%|███████   | 390143/552076 [00:06<00:01, 93553.61it/s]  72%|███████▏  | 400099/552076 [00:07<00:01, 85234.88it/s] 75%|███████▍  | 411676/552076 [00:07<00:01, 92558.43it/s] 77%|███████▋  | 423655/552076 [00:07<00:01, 99330.77it/s] 79%|███████▉  | 435002/552076 [00:07<00:01, 103186.73it/s] 81%|████████  | 446872/552076 [00:07<00:00, 107397.46it/s] 83%|████████▎ | 458592/552076 [00:07<00:00, 110159.13it/s] 85%|████████▌ | 470357/552076 [00:07<00:00, 112303.31it/s] 87%|████████▋ | 482175/552076 [00:07<00:00, 114003.27it/s] 89%|████████▉ | 494008/552076 [00:07<00:00, 115267.08it/s] 92%|█████████▏| 505635/552076 [00:08<00:00, 114142.29it/s] 94%|█████████▎| 517122/552076 [00:08<00:00, 96934.11it/s]  96%|█████████▌| 527314/552076 [00:08<00:00, 95750.03it/s] 97%|█████████▋| 537242/552076 [00:08<00:00, 96697.38it/s] 99%|█████████▉| 547470/552076 [00:08<00:00, 98306.26it/s]100%|██████████| 552076/552076 [00:08<00:00, 64658.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10045/552076 [00:00<00:05, 97847.32it/s]  4%|▍         | 21178/552076 [00:00<00:05, 101534.67it/s]  6%|▌         | 32575/552076 [00:00<00:04, 104968.86it/s]  8%|▊         | 43823/552076 [00:00<00:04, 107112.19it/s] 10%|█         | 55496/552076 [00:00<00:04, 109826.49it/s] 12%|█▏        | 64886/552076 [00:00<00:04, 100500.60it/s] 14%|█▍        | 76417/552076 [00:00<00:04, 104527.95it/s] 16%|█▌        | 86368/552076 [00:00<00:04, 102968.96it/s] 18%|█▊        | 96795/552076 [00:00<00:04, 103353.82it/s] 19%|█▉        | 106826/552076 [00:01<00:04, 98804.63it/s] 21%|██        | 116536/552076 [00:01<00:04, 98162.50it/s] 23%|██▎       | 128299/552076 [00:01<00:04, 103290.13it/s] 25%|██▌       | 140107/552076 [00:01<00:03, 107321.31it/s] 28%|██▊       | 151990/552076 [00:01<00:03, 110531.03it/s] 30%|██▉       | 164165/552076 [00:01<00:03, 113672.50it/s] 32%|███▏      | 176503/552076 [00:01<00:03, 116419.33it/s] 34%|███▍      | 188793/552076 [00:01<00:03, 118289.83it/s] 36%|███▋      | 200720/552076 [00:01<00:02, 118580.36it/s] 39%|███▊      | 212611/552076 [00:01<00:02, 116270.39it/s] 41%|████      | 224423/552076 [00:02<00:02, 116818.20it/s] 43%|████▎     | 236129/552076 [00:02<00:02, 106967.93it/s] 45%|████▌     | 249180/552076 [00:02<00:02, 113087.06it/s] 48%|████▊     | 262837/552076 [00:02<00:02, 119235.30it/s] 50%|████▉     | 275004/552076 [00:02<00:02, 119840.26it/s] 52%|█████▏    | 287178/552076 [00:02<00:02, 120401.66it/s] 54%|█████▍    | 299339/552076 [00:02<00:02, 119572.76it/s] 56%|█████▋    | 311622/552076 [00:02<00:01, 120530.24it/s] 59%|█████▊    | 323737/552076 [00:02<00:01, 120395.66it/s] 61%|██████    | 336047/552076 [00:02<00:01, 121191.79it/s] 63%|██████▎   | 348198/552076 [00:03<00:02, 101655.75it/s] 65%|██████▌   | 358920/552076 [00:03<00:01, 97886.88it/s]  67%|██████▋   | 369128/552076 [00:03<00:02, 84179.92it/s] 69%|██████▊   | 379133/552076 [00:03<00:01, 87701.53it/s] 70%|███████   | 388383/552076 [00:03<00:01, 87250.48it/s] 72%|███████▏  | 397445/552076 [00:03<00:01, 84948.04it/s] 74%|███████▎  | 406189/552076 [00:03<00:02, 72863.42it/s] 75%|███████▌  | 415127/552076 [00:03<00:01, 77139.81it/s] 77%|███████▋  | 424106/552076 [00:04<00:01, 80543.94it/s] 78%|███████▊  | 432480/552076 [00:04<00:01, 73321.81it/s] 80%|███████▉  | 440161/552076 [00:04<00:01, 70525.90it/s] 82%|████████▏ | 450244/552076 [00:04<00:01, 76987.97it/s] 83%|████████▎ | 458306/552076 [00:04<00:01, 70728.14it/s] 84%|████████▍ | 465733/552076 [00:04<00:01, 68315.43it/s] 86%|████████▌ | 475244/552076 [00:04<00:01, 74108.19it/s] 88%|████████▊ | 486499/552076 [00:04<00:00, 82568.25it/s] 90%|████████▉ | 495294/552076 [00:05<00:00, 81829.08it/s] 91%|█████████▏| 504557/552076 [00:05<00:00, 84794.81it/s] 93%|█████████▎| 515344/552076 [00:05<00:00, 90608.46it/s] 95%|█████████▌| 526849/552076 [00:05<00:00, 96774.10it/s] 98%|█████████▊| 541292/552076 [00:05<00:00, 107404.43it/s]100%|██████████| 552076/552076 [00:05<00:00, 99116.97it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5789/552076 [00:00<00:09, 57885.78it/s]  2%|▏         | 11977/552076 [00:00<00:09, 59026.79it/s]  3%|▎         | 18099/552076 [00:00<00:08, 59667.35it/s]  4%|▍         | 24165/552076 [00:00<00:08, 59959.87it/s]  5%|▌         | 30356/552076 [00:00<00:08, 60530.71it/s]  7%|▋         | 36377/552076 [00:00<00:08, 60431.21it/s]  8%|▊         | 42846/552076 [00:00<00:08, 61646.66it/s]  9%|▉         | 49823/552076 [00:00<00:07, 63875.73it/s] 10%|█         | 56025/552076 [00:00<00:07, 63307.34it/s] 11%|█▏        | 62408/552076 [00:01<00:07, 63461.81it/s] 12%|█▏        | 68674/552076 [00:01<00:07, 63218.96it/s] 14%|█▎        | 75192/552076 [00:01<00:07, 63794.02it/s] 15%|█▍        | 81714/552076 [00:01<00:07, 64212.62it/s] 16%|█▌        | 88086/552076 [00:01<00:07, 63519.80it/s] 17%|█▋        | 94757/552076 [00:01<00:07, 64441.21it/s] 18%|█▊        | 101182/552076 [00:01<00:07, 57627.90it/s] 20%|█▉        | 108011/552076 [00:01<00:07, 60459.29it/s] 21%|██        | 114179/552076 [00:01<00:07, 55503.21it/s] 22%|██▏       | 120884/552076 [00:01<00:07, 58525.83it/s] 23%|██▎       | 127265/552076 [00:02<00:07, 59168.78it/s] 24%|██▍       | 134179/552076 [00:02<00:06, 61842.82it/s] 25%|██▌       | 140474/552076 [00:02<00:07, 58236.91it/s] 27%|██▋       | 149445/552076 [00:02<00:06, 65087.15it/s] 29%|██▉       | 161350/552076 [00:02<00:05, 75330.23it/s] 31%|███       | 171754/552076 [00:02<00:04, 82128.24it/s] 33%|███▎      | 182562/552076 [00:02<00:04, 88503.50it/s] 35%|███▌      | 193446/552076 [00:02<00:03, 93758.43it/s] 37%|███▋      | 205280/552076 [00:02<00:03, 99989.14it/s] 39%|███▉      | 216937/552076 [00:03<00:03, 104443.40it/s] 41%|████▏     | 228359/552076 [00:03<00:03, 107195.90it/s] 44%|████▎     | 240302/552076 [00:03<00:02, 110592.66it/s] 46%|████▌     | 252267/552076 [00:03<00:02, 113160.65it/s] 48%|████▊     | 264121/552076 [00:03<00:02, 114717.12it/s] 50%|█████     | 276068/552076 [00:03<00:02, 116102.75it/s] 52%|█████▏    | 288133/552076 [00:03<00:02, 117428.34it/s] 54%|█████▍    | 300367/552076 [00:03<00:02, 118859.88it/s] 57%|█████▋    | 312738/552076 [00:03<00:01, 120272.53it/s] 59%|█████▉    | 325115/552076 [00:03<00:01, 121299.34it/s] 61%|██████    | 337277/552076 [00:04<00:01, 119807.19it/s] 63%|██████▎   | 349284/552076 [00:04<00:01, 106201.77it/s] 65%|██████▌   | 360208/552076 [00:04<00:01, 102021.89it/s] 67%|██████▋   | 370658/552076 [00:04<00:01, 96928.96it/s]  69%|██████▉   | 382693/552076 [00:04<00:01, 102936.84it/s] 71%|███████   | 393247/552076 [00:04<00:01, 100952.40it/s] 73%|███████▎  | 405318/552076 [00:04<00:01, 106164.39it/s] 76%|███████▌  | 416980/552076 [00:04<00:01, 109097.20it/s] 78%|███████▊  | 428929/552076 [00:04<00:01, 112017.83it/s] 80%|███████▉  | 440958/552076 [00:04<00:00, 114376.37it/s] 82%|████████▏ | 453201/552076 [00:05<00:00, 116676.77it/s] 84%|████████▍ | 465551/552076 [00:05<00:00, 118641.56it/s] 86%|████████▋ | 477484/552076 [00:05<00:00, 113557.62it/s] 89%|████████▊ | 489287/552076 [00:05<00:00, 114861.69it/s] 91%|█████████ | 500843/552076 [00:05<00:00, 114652.56it/s] 93%|█████████▎| 512837/552076 [00:05<00:00, 116188.74it/s] 95%|█████████▌| 524776/552076 [00:05<00:00, 117128.59it/s] 97%|█████████▋| 536518/552076 [00:05<00:00, 115171.32it/s] 99%|█████████▉| 548403/552076 [00:05<00:00, 116250.74it/s]100%|██████████| 552076/552076 [00:05<00:00, 92631.52it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11028/552076 [00:00<00:04, 110276.95it/s]  4%|▍         | 22523/552076 [00:00<00:04, 111637.89it/s]  6%|▌         | 32826/552076 [00:00<00:04, 108906.41it/s]  8%|▊         | 42210/552076 [00:00<00:04, 103401.62it/s]  9%|▉         | 51150/552076 [00:00<00:05, 98758.75it/s]  11%|█▏        | 63064/552076 [00:00<00:04, 104100.37it/s] 14%|█▎        | 75090/552076 [00:00<00:04, 108471.88it/s] 16%|█▌        | 86888/552076 [00:00<00:04, 111156.67it/s] 18%|█▊        | 97672/552076 [00:00<00:04, 110139.27it/s] 20%|█▉        | 109235/552076 [00:01<00:03, 111729.74it/s] 22%|██▏       | 120568/552076 [00:01<00:03, 112203.42it/s] 24%|██▍       | 131617/552076 [00:01<00:03, 111357.32it/s] 26%|██▌       | 142635/552076 [00:01<00:03, 104351.47it/s] 28%|██▊       | 153087/552076 [00:01<00:03, 104401.93it/s] 30%|██▉       | 164580/552076 [00:01<00:03, 107349.62it/s] 32%|███▏      | 175339/552076 [00:01<00:03, 106881.71it/s] 34%|███▍      | 187446/552076 [00:01<00:03, 110775.53it/s] 36%|███▌      | 199499/552076 [00:01<00:03, 113530.54it/s] 38%|███▊      | 211289/552076 [00:01<00:02, 114805.18it/s] 40%|████      | 222809/552076 [00:02<00:02, 114022.56it/s] 42%|████▏     | 234240/552076 [00:02<00:02, 110512.10it/s] 44%|████▍     | 245335/552076 [00:02<00:03, 95448.78it/s]  46%|████▌     | 255277/552076 [00:02<00:03, 96605.25it/s] 48%|████▊     | 265217/552076 [00:02<00:03, 78783.09it/s] 50%|████▉     | 273827/552076 [00:02<00:03, 74062.22it/s] 51%|█████     | 281804/552076 [00:02<00:03, 73160.20it/s] 53%|█████▎    | 290253/552076 [00:02<00:03, 76226.49it/s] 55%|█████▍    | 301960/552076 [00:03<00:02, 85135.67it/s] 56%|█████▋    | 311124/552076 [00:03<00:02, 86986.28it/s] 59%|█████▊    | 323485/552076 [00:03<00:02, 95470.60it/s] 60%|██████    | 333561/552076 [00:03<00:02, 91187.25it/s] 62%|██████▏   | 344826/552076 [00:03<00:02, 96714.89it/s] 64%|██████▍   | 354876/552076 [00:03<00:02, 82742.75it/s] 66%|██████▌   | 363768/552076 [00:03<00:02, 74698.44it/s] 68%|██████▊   | 374753/552076 [00:03<00:02, 82630.13it/s] 69%|██████▉   | 383684/552076 [00:03<00:02, 79116.53it/s] 72%|███████▏  | 395185/552076 [00:04<00:01, 87288.60it/s] 73%|███████▎  | 404523/552076 [00:04<00:01, 80463.16it/s] 75%|███████▌  | 414957/552076 [00:04<00:01, 86393.62it/s] 77%|███████▋  | 424092/552076 [00:04<00:01, 83241.69it/s] 79%|███████▉  | 435583/552076 [00:04<00:01, 90743.41it/s] 81%|████████  | 445118/552076 [00:04<00:01, 91325.89it/s] 82%|████████▏ | 454574/552076 [00:04<00:01, 87846.97it/s] 84%|████████▍ | 463613/552076 [00:04<00:01, 81956.18it/s] 86%|████████▌ | 473982/552076 [00:04<00:00, 87455.35it/s] 88%|████████▊ | 485721/552076 [00:05<00:00, 94698.60it/s] 90%|█████████ | 496963/552076 [00:05<00:00, 99399.10it/s] 92%|█████████▏| 509063/552076 [00:05<00:00, 105021.68it/s] 94%|█████████▍| 520962/552076 [00:05<00:00, 108853.44it/s] 97%|█████████▋| 532995/552076 [00:05<00:00, 112058.16it/s] 99%|█████████▊| 544755/552076 [00:05<00:00, 113662.44it/s]100%|██████████| 552076/552076 [00:05<00:00, 97854.73it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10737/552076 [00:00<00:05, 107369.59it/s]  4%|▍         | 23660/552076 [00:00<00:04, 113108.54it/s]  6%|▋         | 35682/552076 [00:00<00:04, 115150.97it/s]  9%|▊         | 47487/552076 [00:00<00:04, 116005.57it/s] 11%|█         | 59237/552076 [00:00<00:04, 116449.26it/s] 13%|█▎        | 71331/552076 [00:00<00:04, 117759.38it/s] 15%|█▌        | 83142/552076 [00:00<00:03, 117861.77it/s] 17%|█▋        | 95101/552076 [00:00<00:03, 118374.51it/s] 19%|█▉        | 106890/552076 [00:00<00:03, 118228.35it/s] 22%|██▏       | 118957/552076 [00:01<00:03, 118947.92it/s] 24%|██▎       | 130837/552076 [00:01<00:03, 118902.94it/s] 26%|██▌       | 142521/552076 [00:01<00:03, 117681.91it/s] 28%|██▊       | 154397/552076 [00:01<00:03, 118000.63it/s] 30%|███       | 166667/552076 [00:01<00:03, 119371.24it/s] 32%|███▏      | 178736/552076 [00:01<00:03, 119762.25it/s] 35%|███▍      | 190667/552076 [00:01<00:03, 119555.26it/s] 37%|███▋      | 202591/552076 [00:01<00:02, 118684.49it/s] 39%|███▉      | 214627/552076 [00:01<00:02, 119181.33it/s] 41%|████      | 226532/552076 [00:01<00:02, 119115.59it/s] 43%|████▎     | 238434/552076 [00:02<00:02, 118502.86it/s] 45%|████▌     | 250279/552076 [00:02<00:02, 118309.02it/s] 48%|████▊     | 262367/552076 [00:02<00:02, 119068.70it/s] 50%|████▉     | 274802/552076 [00:02<00:02, 120604.08it/s] 52%|█████▏    | 286959/552076 [00:02<00:02, 120890.98it/s] 54%|█████▍    | 299051/552076 [00:02<00:02, 115258.60it/s] 56%|█████▋    | 310634/552076 [00:02<00:02, 107367.94it/s] 58%|█████▊    | 321520/552076 [00:02<00:02, 103717.04it/s] 61%|██████    | 335750/552076 [00:02<00:01, 112900.24it/s] 63%|██████▎   | 348106/552076 [00:02<00:01, 115899.24it/s] 67%|██████▋   | 367592/552076 [00:03<00:01, 131937.51it/s] 71%|███████   | 390276/552076 [00:03<00:01, 150873.67it/s] 75%|███████▍  | 411860/552076 [00:03<00:00, 165849.39it/s] 78%|███████▊  | 433370/552076 [00:03<00:00, 178080.99it/s] 82%|████████▏ | 454925/552076 [00:03<00:00, 187877.78it/s] 86%|████████▌ | 474810/552076 [00:03<00:00, 173687.31it/s] 90%|████████▉ | 494623/552076 [00:03<00:00, 180360.12it/s] 94%|█████████▎| 516502/552076 [00:03<00:00, 190392.29it/s] 97%|█████████▋| 537978/552076 [00:03<00:00, 197100.02it/s]100%|██████████| 552076/552076 [00:03<00:00, 139469.37it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13719/552076 [00:00<00:03, 137180.65it/s]  6%|▌         | 32746/552076 [00:00<00:03, 149711.56it/s] 10%|█         | 56231/552076 [00:00<00:02, 167979.42it/s] 14%|█▍        | 79432/552076 [00:00<00:02, 183141.23it/s] 19%|█▊        | 102467/552076 [00:00<00:02, 195138.56it/s] 23%|██▎       | 124439/552076 [00:00<00:02, 201913.61it/s] 27%|██▋       | 146935/552076 [00:00<00:01, 208313.42it/s] 31%|███       | 169496/552076 [00:00<00:01, 213215.27it/s] 35%|███▍      | 192734/552076 [00:00<00:01, 218621.91it/s] 39%|███▉      | 216119/552076 [00:01<00:01, 222976.94it/s] 43%|████▎     | 239477/552076 [00:01<00:01, 226054.35it/s] 48%|████▊     | 262301/552076 [00:01<00:01, 226704.25it/s] 52%|█████▏    | 285801/552076 [00:01<00:01, 229130.25it/s] 56%|█████▌    | 308680/552076 [00:01<00:01, 226009.49it/s] 60%|██████    | 332112/552076 [00:01<00:00, 228437.44it/s] 64%|██████▍   | 355366/552076 [00:01<00:00, 229651.69it/s] 69%|██████▊   | 378331/552076 [00:01<00:00, 229247.72it/s] 73%|███████▎  | 401256/552076 [00:01<00:00, 229035.99it/s] 77%|███████▋  | 424473/552076 [00:01<00:00, 229966.69it/s] 81%|████████  | 447471/552076 [00:02<00:00, 228105.32it/s] 85%|████████▌ | 470738/552076 [00:02<00:00, 229454.74it/s] 90%|████████▉ | 494195/552076 [00:02<00:00, 230964.02it/s] 94%|█████████▎| 517297/552076 [00:02<00:00, 229037.64it/s] 98%|█████████▊| 540209/552076 [00:02<00:00, 227097.95it/s]100%|██████████| 552076/552076 [00:02<00:00, 224017.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22550/552076 [00:00<00:02, 225491.61it/s]  8%|▊         | 44076/552076 [00:00<00:02, 222319.53it/s] 12%|█▏        | 66547/552076 [00:00<00:02, 223030.27it/s] 16%|█▌        | 88895/552076 [00:00<00:02, 223164.74it/s] 20%|██        | 112443/552076 [00:00<00:01, 226720.41it/s] 25%|██▍       | 135828/552076 [00:00<00:01, 228812.64it/s] 28%|██▊       | 157118/552076 [00:00<00:01, 223792.28it/s] 33%|███▎      | 179836/552076 [00:00<00:01, 224795.93it/s] 37%|███▋      | 201963/552076 [00:00<00:01, 223725.50it/s] 41%|████      | 225152/552076 [00:01<00:01, 226112.49it/s] 45%|████▌     | 248440/552076 [00:01<00:01, 228098.26it/s] 49%|████▉     | 271980/552076 [00:01<00:01, 230237.94it/s] 53%|█████▎    | 294710/552076 [00:01<00:01, 228006.91it/s] 57%|█████▋    | 317310/552076 [00:01<00:01, 226682.21it/s] 62%|██████▏   | 339840/552076 [00:01<00:00, 220721.84it/s] 66%|██████▌   | 362598/552076 [00:01<00:00, 222733.37it/s] 70%|██████▉   | 385227/552076 [00:01<00:00, 223787.52it/s] 74%|███████▍  | 407597/552076 [00:01<00:00, 223761.00it/s] 78%|███████▊  | 429955/552076 [00:01<00:00, 221007.78it/s] 82%|████████▏ | 452676/552076 [00:02<00:00, 222832.03it/s] 86%|████████▌ | 475202/552076 [00:02<00:00, 223552.75it/s] 90%|█████████ | 497558/552076 [00:02<00:00, 216737.10it/s] 94%|█████████▍| 519278/552076 [00:02<00:00, 174689.76it/s] 97%|█████████▋| 538090/552076 [00:02<00:00, 153888.80it/s]100%|██████████| 552076/552076 [00:02<00:00, 206148.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11723/552076 [00:00<00:04, 117229.83it/s]  4%|▍         | 23184/552076 [00:00<00:04, 116429.65it/s]  6%|▋         | 34771/552076 [00:00<00:04, 116260.64it/s]  8%|▊         | 46537/552076 [00:00<00:04, 116676.81it/s] 11%|█         | 58359/552076 [00:00<00:04, 117132.98it/s] 13%|█▎        | 70222/552076 [00:00<00:04, 117577.22it/s] 15%|█▍        | 82135/552076 [00:00<00:03, 118035.81it/s] 17%|█▋        | 94336/552076 [00:00<00:03, 119198.31it/s] 19%|█▉        | 106335/552076 [00:00<00:03, 117550.48it/s] 21%|██▏       | 118221/552076 [00:01<00:03, 117938.74it/s] 24%|██▎       | 130308/552076 [00:01<00:03, 118802.36it/s] 26%|██▌       | 142303/552076 [00:01<00:03, 119142.09it/s] 28%|██▊       | 154351/552076 [00:01<00:03, 119540.03it/s] 30%|███       | 166403/552076 [00:01<00:03, 119832.29it/s] 32%|███▏      | 178477/552076 [00:01<00:03, 120102.94it/s] 34%|███▍      | 190448/552076 [00:01<00:03, 119982.59it/s] 37%|███▋      | 202409/552076 [00:01<00:03, 112567.06it/s] 39%|███▊      | 213733/552076 [00:01<00:03, 111111.53it/s] 41%|████      | 225518/552076 [00:01<00:02, 113049.93it/s] 43%|████▎     | 237321/552076 [00:02<00:02, 114498.41it/s] 45%|████▌     | 249257/552076 [00:02<00:02, 115911.77it/s] 47%|████▋     | 260878/552076 [00:02<00:02, 115232.76it/s] 49%|████▉     | 272423/552076 [00:02<00:02, 114345.43it/s] 51%|█████▏    | 283880/552076 [00:02<00:02, 114411.43it/s] 54%|█████▎    | 295951/552076 [00:02<00:02, 116230.20it/s] 56%|█████▌    | 307590/552076 [00:02<00:02, 111679.58it/s] 58%|█████▊    | 318807/552076 [00:02<00:02, 108260.05it/s] 60%|█████▉    | 329750/552076 [00:02<00:02, 108605.96it/s] 62%|██████▏   | 341036/552076 [00:02<00:01, 109847.38it/s] 64%|██████▍   | 352639/552076 [00:03<00:01, 111629.74it/s] 66%|██████▌   | 364041/552076 [00:03<00:01, 112334.04it/s] 68%|██████▊   | 375557/552076 [00:03<00:01, 113166.24it/s] 70%|███████   | 387181/552076 [00:03<00:01, 114069.99it/s] 72%|███████▏  | 398754/552076 [00:03<00:01, 114560.65it/s] 74%|███████▍  | 410220/552076 [00:03<00:01, 104422.60it/s] 76%|███████▋  | 422024/552076 [00:03<00:01, 108164.21it/s] 79%|███████▊  | 433579/552076 [00:03<00:01, 110275.51it/s] 81%|████████  | 445688/552076 [00:03<00:00, 113311.25it/s] 83%|████████▎ | 457641/552076 [00:03<00:00, 115105.43it/s] 85%|████████▌ | 469543/552076 [00:04<00:00, 116249.68it/s] 87%|████████▋ | 481228/552076 [00:04<00:00, 107236.64it/s] 89%|████████▉ | 492132/552076 [00:04<00:00, 86697.90it/s]  91%|█████████ | 501563/552076 [00:04<00:00, 79132.20it/s] 93%|█████████▎| 511198/552076 [00:04<00:00, 83451.91it/s] 94%|█████████▍| 520069/552076 [00:04<00:00, 71147.30it/s] 96%|█████████▋| 531811/552076 [00:04<00:00, 80686.30it/s] 98%|█████████▊| 543497/552076 [00:05<00:00, 88945.61it/s]100%|██████████| 552076/552076 [00:05<00:00, 108476.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10432/552076 [00:00<00:05, 104314.38it/s]  4%|▎         | 20211/552076 [00:00<00:05, 101551.02it/s]  6%|▌         | 30395/552076 [00:00<00:05, 101635.39it/s]  7%|▋         | 40107/552076 [00:00<00:05, 100236.07it/s]  9%|▊         | 47639/552076 [00:00<00:05, 84490.44it/s]  11%|█         | 59720/552076 [00:00<00:05, 92863.92it/s] 13%|█▎        | 71768/552076 [00:00<00:04, 99720.17it/s] 15%|█▌        | 83800/552076 [00:00<00:04, 105117.56it/s] 17%|█▋        | 95794/552076 [00:00<00:04, 109162.20it/s] 19%|█▉        | 106644/552076 [00:01<00:04, 103483.29it/s] 21%|██        | 117008/552076 [00:01<00:04, 90262.85it/s]  23%|██▎       | 128504/552076 [00:01<00:04, 96480.13it/s] 25%|██▌       | 138491/552076 [00:01<00:04, 89010.11it/s] 27%|██▋       | 147744/552076 [00:01<00:06, 58659.31it/s] 28%|██▊       | 155201/552076 [00:01<00:08, 46730.98it/s] 29%|██▉       | 161372/552076 [00:02<00:09, 41380.42it/s] 30%|███       | 166672/552076 [00:02<00:10, 38079.86it/s] 31%|███       | 171345/552076 [00:02<00:10, 36229.91it/s] 32%|███▏      | 175592/552076 [00:02<00:10, 34980.74it/s] 33%|███▎      | 179537/552076 [00:02<00:10, 34329.91it/s] 33%|███▎      | 183285/552076 [00:02<00:10, 34199.80it/s] 34%|███▍      | 186926/552076 [00:02<00:10, 33362.90it/s] 34%|███▍      | 190422/552076 [00:03<00:10, 33613.70it/s] 35%|███▌      | 193896/552076 [00:03<00:11, 32185.15it/s] 36%|███▌      | 197206/552076 [00:03<00:11, 31941.73it/s] 36%|███▋      | 200593/552076 [00:03<00:10, 32496.30it/s] 37%|███▋      | 203890/552076 [00:03<00:10, 32294.43it/s] 38%|███▊      | 208382/552076 [00:03<00:09, 35267.44it/s] 39%|███▊      | 213777/552076 [00:03<00:08, 38856.02it/s] 40%|███▉      | 219199/552076 [00:03<00:07, 42301.12it/s] 41%|████      | 224548/552076 [00:03<00:07, 45133.36it/s] 42%|████▏     | 230010/552076 [00:03<00:06, 47613.77it/s] 43%|████▎     | 235212/552076 [00:04<00:06, 47999.56it/s] 44%|████▎     | 240537/552076 [00:04<00:06, 49234.52it/s] 44%|████▍     | 245657/552076 [00:04<00:06, 48021.83it/s] 45%|████▌     | 250534/552076 [00:04<00:06, 45776.44it/s] 46%|████▌     | 255186/552076 [00:04<00:07, 42389.05it/s] 47%|████▋     | 259527/552076 [00:04<00:06, 42229.26it/s] 48%|████▊     | 263822/552076 [00:04<00:07, 40052.51it/s] 49%|████▊     | 267901/552076 [00:04<00:08, 34822.57it/s] 49%|████▉     | 271781/552076 [00:05<00:07, 35111.84it/s] 50%|████▉     | 275944/552076 [00:05<00:07, 36841.95it/s] 51%|█████     | 279737/552076 [00:05<00:08, 33541.97it/s] 51%|█████▏    | 283224/552076 [00:05<00:08, 32230.53it/s] 52%|█████▏    | 286669/552076 [00:05<00:08, 32499.14it/s] 53%|█████▎    | 290645/552076 [00:05<00:07, 33934.57it/s] 53%|█████▎    | 294291/552076 [00:05<00:07, 33982.57it/s] 54%|█████▍    | 298850/552076 [00:05<00:06, 36792.44it/s] 55%|█████▍    | 302630/552076 [00:05<00:07, 35538.31it/s] 55%|█████▌    | 306264/552076 [00:06<00:07, 34886.19it/s] 56%|█████▌    | 310217/552076 [00:06<00:06, 36159.82it/s] 57%|█████▋    | 314628/552076 [00:06<00:06, 37544.22it/s] 58%|█████▊    | 318433/552076 [00:06<00:06, 37085.07it/s] 58%|█████▊    | 322179/552076 [00:06<00:06, 33357.28it/s] 59%|█████▉    | 325953/552076 [00:06<00:06, 33637.48it/s] 60%|█████▉    | 330843/552076 [00:06<00:06, 36415.18it/s] 61%|██████    | 335871/552076 [00:06<00:05, 39698.51it/s] 62%|██████▏   | 341686/552076 [00:06<00:04, 43874.79it/s] 63%|██████▎   | 347504/552076 [00:06<00:04, 47367.96it/s] 64%|██████▍   | 352985/552076 [00:07<00:04, 48649.32it/s] 65%|██████▌   | 359188/552076 [00:07<00:03, 50698.28it/s] 66%|██████▌   | 364874/552076 [00:07<00:03, 52401.32it/s] 67%|██████▋   | 370497/552076 [00:07<00:03, 53359.75it/s] 68%|██████▊   | 376475/552076 [00:07<00:03, 54546.94it/s] 69%|██████▉   | 382431/552076 [00:07<00:03, 55958.84it/s] 70%|███████   | 388102/552076 [00:07<00:02, 55492.95it/s] 71%|███████▏  | 393693/552076 [00:07<00:03, 48217.17it/s] 72%|███████▏  | 399288/552076 [00:07<00:03, 50302.27it/s] 73%|███████▎  | 404482/552076 [00:08<00:03, 45547.64it/s] 74%|███████▍  | 410078/552076 [00:08<00:02, 47917.61it/s] 75%|███████▌  | 416292/552076 [00:08<00:02, 51449.44it/s] 76%|███████▋  | 421632/552076 [00:08<00:02, 49789.98it/s] 77%|███████▋  | 426994/552076 [00:08<00:02, 50880.05it/s] 78%|███████▊  | 432192/552076 [00:08<00:02, 50541.66it/s] 79%|███████▉  | 438157/552076 [00:08<00:02, 52966.90it/s] 80%|████████  | 443539/552076 [00:08<00:02, 51246.38it/s] 81%|████████▏ | 449117/552076 [00:08<00:01, 51757.88it/s] 82%|████████▏ | 454344/552076 [00:09<00:01, 49370.62it/s] 83%|████████▎ | 460143/552076 [00:09<00:01, 50917.98it/s] 84%|████████▍ | 465868/552076 [00:09<00:01, 52664.99it/s] 85%|████████▌ | 471188/552076 [00:09<00:01, 46544.56it/s] 86%|████████▌ | 476010/552076 [00:09<00:01, 39896.47it/s] 87%|████████▋ | 481824/552076 [00:09<00:01, 44042.29it/s] 88%|████████▊ | 487038/552076 [00:09<00:01, 45673.40it/s] 89%|████████▉ | 491853/552076 [00:09<00:01, 45407.58it/s] 90%|████████▉ | 496568/552076 [00:09<00:01, 44612.62it/s] 91%|█████████ | 501154/552076 [00:10<00:01, 42014.91it/s] 92%|█████████▏| 505474/552076 [00:10<00:01, 41236.84it/s] 92%|█████████▏| 510192/552076 [00:10<00:00, 42855.49it/s] 93%|█████████▎| 514555/552076 [00:10<00:00, 41943.05it/s] 94%|█████████▍| 518808/552076 [00:10<00:00, 40388.44it/s] 95%|█████████▍| 524434/552076 [00:10<00:00, 44122.65it/s] 96%|█████████▌| 529572/552076 [00:10<00:00, 45479.57it/s] 97%|█████████▋| 534229/552076 [00:10<00:00, 44026.20it/s] 98%|█████████▊| 540157/552076 [00:10<00:00, 46891.01it/s] 99%|█████████▊| 544997/552076 [00:11<00:00, 47333.28it/s]100%|█████████▉| 550802/552076 [00:11<00:00, 49068.54it/s]100%|██████████| 552076/552076 [00:11<00:00, 49330.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4529/552076 [00:00<00:12, 43037.07it/s]  1%|▏         | 8223/552076 [00:00<00:13, 41005.43it/s]  2%|▏         | 12444/552076 [00:00<00:13, 41358.63it/s]  3%|▎         | 17539/552076 [00:00<00:12, 43691.58it/s]  4%|▍         | 21571/552076 [00:00<00:12, 42220.26it/s]  5%|▍         | 25433/552076 [00:00<00:12, 40682.25it/s]  5%|▌         | 29278/552076 [00:00<00:13, 39984.97it/s]  6%|▋         | 34674/552076 [00:00<00:12, 42291.77it/s]  7%|▋         | 38925/552076 [00:00<00:12, 41942.57it/s]  8%|▊         | 42988/552076 [00:01<00:12, 40724.71it/s]  9%|▊         | 46976/552076 [00:01<00:12, 39324.65it/s]  9%|▉         | 50860/552076 [00:01<00:13, 38451.66it/s] 10%|▉         | 54676/552076 [00:01<00:13, 38236.32it/s] 11%|█         | 58479/552076 [00:01<00:13, 36499.24it/s] 11%|█▏        | 62200/552076 [00:01<00:13, 36522.28it/s] 12%|█▏        | 65854/552076 [00:01<00:15, 32070.82it/s] 13%|█▎        | 69161/552076 [00:01<00:15, 30547.97it/s] 13%|█▎        | 73476/552076 [00:01<00:14, 33480.51it/s] 14%|█▍        | 77436/552076 [00:02<00:13, 35107.21it/s] 15%|█▍        | 81653/552076 [00:02<00:13, 35429.13it/s] 15%|█▌        | 85282/552076 [00:02<00:14, 31338.39it/s] 16%|█▌        | 88837/552076 [00:02<00:14, 32492.77it/s] 17%|█▋        | 92902/552076 [00:02<00:13, 34573.78it/s] 17%|█▋        | 96549/552076 [00:02<00:12, 35120.46it/s] 18%|█▊        | 100145/552076 [00:02<00:13, 34055.11it/s] 19%|█▉        | 103616/552076 [00:02<00:14, 30922.60it/s] 19%|█▉        | 107448/552076 [00:02<00:13, 32799.01it/s] 20%|██        | 110830/552076 [00:03<00:13, 32421.05it/s] 21%|██        | 114145/552076 [00:03<00:13, 32220.58it/s] 21%|██▏       | 117418/552076 [00:03<00:14, 30051.45it/s] 22%|██▏       | 120489/552076 [00:03<00:15, 28399.94it/s] 22%|██▏       | 123394/552076 [00:03<00:15, 28028.26it/s] 23%|██▎       | 126420/552076 [00:03<00:14, 28446.75it/s] 23%|██▎       | 129428/552076 [00:03<00:14, 28452.57it/s] 24%|██▍       | 132596/552076 [00:03<00:14, 28622.40it/s] 25%|██▍       | 135673/552076 [00:03<00:14, 28736.79it/s] 25%|██▌       | 138559/552076 [00:04<00:14, 28745.04it/s] 26%|██▌       | 141524/552076 [00:04<00:14, 29010.01it/s] 26%|██▌       | 144519/552076 [00:04<00:13, 29285.62it/s] 27%|██▋       | 147486/552076 [00:04<00:14, 28261.42it/s] 27%|██▋       | 150513/552076 [00:04<00:13, 28835.27it/s] 28%|██▊       | 153408/552076 [00:04<00:15, 25786.57it/s] 28%|██▊       | 156272/552076 [00:04<00:14, 26465.50it/s] 29%|██▉       | 158971/552076 [00:04<00:19, 20432.32it/s] 29%|██▉       | 161467/552076 [00:04<00:18, 21608.16it/s] 30%|██▉       | 163819/552076 [00:05<00:17, 21859.10it/s] 30%|███       | 166330/552076 [00:05<00:17, 22141.91it/s] 31%|███       | 168639/552076 [00:05<00:17, 21607.01it/s] 31%|███       | 171052/552076 [00:05<00:17, 22306.59it/s] 31%|███▏      | 173476/552076 [00:05<00:16, 22276.70it/s] 32%|███▏      | 176086/552076 [00:05<00:16, 22751.84it/s] 32%|███▏      | 178750/552076 [00:05<00:15, 23792.72it/s] 33%|███▎      | 181163/552076 [00:05<00:16, 22724.35it/s] 33%|███▎      | 183955/552076 [00:05<00:15, 24067.93it/s] 34%|███▍      | 187224/552076 [00:06<00:14, 25818.67it/s] 34%|███▍      | 189873/552076 [00:06<00:13, 26005.22it/s] 35%|███▍      | 192521/552076 [00:06<00:14, 25301.79it/s] 35%|███▌      | 195089/552076 [00:06<00:14, 24452.39it/s] 36%|███▌      | 197567/552076 [00:06<00:15, 23437.33it/s] 36%|███▌      | 199943/552076 [00:06<00:15, 22570.04it/s] 37%|███▋      | 202229/552076 [00:06<00:15, 22503.26it/s] 37%|███▋      | 204688/552076 [00:06<00:15, 22304.45it/s] 37%|███▋      | 206934/552076 [00:06<00:16, 20946.38it/s] 38%|███▊      | 209432/552076 [00:07<00:15, 22012.46it/s] 38%|███▊      | 211667/552076 [00:07<00:15, 21613.62it/s] 39%|███▉      | 214192/552076 [00:07<00:15, 21948.96it/s] 39%|███▉      | 216685/552076 [00:07<00:14, 22764.98it/s] 40%|███▉      | 219110/552076 [00:07<00:14, 22862.49it/s] 40%|████      | 221411/552076 [00:07<00:14, 22473.08it/s] 41%|████      | 224179/552076 [00:07<00:14, 23410.55it/s] 41%|████      | 226539/552076 [00:07<00:15, 21526.57it/s] 41%|████▏     | 228735/552076 [00:07<00:15, 21133.70it/s] 42%|████▏     | 231897/552076 [00:08<00:13, 23468.29it/s] 43%|████▎     | 235458/552076 [00:08<00:12, 26141.70it/s] 43%|████▎     | 240032/552076 [00:08<00:10, 29499.02it/s] 44%|████▍     | 243244/552076 [00:08<00:11, 27579.99it/s] 45%|████▍     | 246211/552076 [00:08<00:11, 26430.12it/s] 45%|████▌     | 249011/552076 [00:08<00:17, 17437.31it/s] 46%|████▌     | 251263/552076 [00:08<00:17, 17094.44it/s] 46%|████▌     | 253548/552076 [00:09<00:16, 18491.34it/s] 46%|████▋     | 255837/552076 [00:09<00:15, 19621.85it/s] 47%|████▋     | 258025/552076 [00:09<00:14, 20248.14it/s] 47%|████▋     | 260501/552076 [00:09<00:14, 20711.33it/s] 48%|████▊     | 262865/552076 [00:09<00:13, 21509.89it/s] 48%|████▊     | 265255/552076 [00:09<00:13, 21580.31it/s] 48%|████▊     | 267700/552076 [00:09<00:13, 21838.12it/s] 49%|████▉     | 270247/552076 [00:09<00:12, 22060.00it/s] 49%|████▉     | 272525/552076 [00:09<00:12, 22270.17it/s] 50%|████▉     | 274886/552076 [00:09<00:12, 22090.30it/s] 50%|█████     | 277243/552076 [00:10<00:12, 22186.70it/s] 51%|█████     | 279583/552076 [00:10<00:12, 22537.15it/s] 51%|█████     | 281846/552076 [00:10<00:12, 22382.21it/s] 51%|█████▏    | 284248/552076 [00:10<00:12, 22158.68it/s] 52%|█████▏    | 286727/552076 [00:10<00:11, 22887.09it/s] 52%|█████▏    | 289026/552076 [00:10<00:11, 22215.79it/s] 53%|█████▎    | 291263/552076 [00:10<00:11, 22261.77it/s] 53%|█████▎    | 293737/552076 [00:10<00:11, 22951.43it/s] 54%|█████▎    | 296053/552076 [00:10<00:11, 22182.02it/s] 54%|█████▍    | 298294/552076 [00:11<00:11, 22230.47it/s] 54%|█████▍    | 300716/552076 [00:11<00:11, 22354.96it/s] 55%|█████▍    | 303014/552076 [00:11<00:11, 22538.26it/s] 55%|█████▌    | 306006/552076 [00:11<00:10, 24339.36it/s] 56%|█████▋    | 310930/552076 [00:11<00:08, 28691.91it/s] 57%|█████▋    | 316755/552076 [00:11<00:06, 33843.52it/s] 58%|█████▊    | 322334/552076 [00:11<00:06, 38035.07it/s] 59%|█████▉    | 328281/552076 [00:11<00:05, 42646.23it/s] 61%|██████    | 336113/552076 [00:11<00:04, 49395.72it/s] 63%|██████▎   | 347391/552076 [00:11<00:03, 59412.90it/s] 65%|██████▍   | 358793/552076 [00:12<00:02, 69380.73it/s] 67%|██████▋   | 370292/552076 [00:12<00:02, 78750.92it/s] 69%|██████▉   | 381985/552076 [00:12<00:01, 87301.38it/s] 71%|███████   | 392126/552076 [00:12<00:01, 89162.92it/s] 73%|███████▎  | 402040/552076 [00:12<00:01, 75307.37it/s] 75%|███████▍  | 413842/552076 [00:12<00:01, 84478.64it/s] 77%|███████▋  | 425605/552076 [00:12<00:01, 92278.97it/s] 79%|███████▉  | 437502/552076 [00:12<00:01, 98936.81it/s] 81%|████████▏ | 449764/552076 [00:12<00:00, 105020.96it/s] 84%|████████▎ | 461977/552076 [00:13<00:00, 109626.04it/s] 86%|████████▌ | 473923/552076 [00:13<00:00, 112401.20it/s] 88%|████████▊ | 486097/552076 [00:13<00:00, 115046.55it/s] 90%|█████████ | 498183/552076 [00:13<00:00, 116729.18it/s] 92%|█████████▏| 510198/552076 [00:13<00:00, 117734.75it/s] 95%|█████████▍| 522179/552076 [00:13<00:00, 118348.68it/s] 97%|█████████▋| 534129/552076 [00:13<00:00, 118690.09it/s] 99%|█████████▉| 546169/552076 [00:13<00:00, 119197.21it/s]100%|██████████| 552076/552076 [00:13<00:00, 40101.89it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8456/552076 [00:00<00:06, 83381.61it/s]  3%|▎         | 17301/552076 [00:00<00:06, 84838.93it/s]  5%|▌         | 29102/552076 [00:00<00:05, 92651.04it/s]  7%|▋         | 35920/552076 [00:00<00:06, 83643.72it/s]  9%|▊         | 48014/552076 [00:00<00:05, 92169.43it/s] 10%|█         | 56320/552076 [00:00<00:06, 82403.87it/s] 12%|█▏        | 65685/552076 [00:00<00:05, 85481.85it/s] 13%|█▎        | 73952/552076 [00:00<00:05, 83544.46it/s] 15%|█▌        | 84643/552076 [00:00<00:05, 89405.81it/s] 17%|█▋        | 96117/552076 [00:01<00:04, 94336.38it/s] 20%|█▉        | 108056/552076 [00:01<00:04, 100673.59it/s] 21%|██▏       | 118284/552076 [00:01<00:04, 92795.21it/s]  24%|██▎       | 130489/552076 [00:01<00:04, 99983.13it/s] 26%|██▌       | 140810/552076 [00:01<00:04, 92779.00it/s] 27%|██▋       | 150418/552076 [00:01<00:05, 76071.67it/s] 29%|██▉       | 158751/552076 [00:01<00:05, 71145.30it/s] 30%|███       | 168359/552076 [00:01<00:04, 77151.58it/s] 33%|███▎      | 180560/552076 [00:02<00:04, 86716.06it/s] 35%|███▍      | 191368/552076 [00:02<00:03, 92180.74it/s] 36%|███▋      | 201222/552076 [00:02<00:04, 86946.92it/s] 38%|███▊      | 210423/552076 [00:02<00:04, 77664.57it/s] 40%|███▉      | 219661/552076 [00:02<00:04, 81561.34it/s] 42%|████▏     | 231873/552076 [00:02<00:03, 90586.70it/s] 44%|████▍     | 241547/552076 [00:02<00:03, 82968.06it/s] 46%|████▌     | 252661/552076 [00:02<00:03, 89795.16it/s] 48%|████▊     | 262986/552076 [00:02<00:03, 93447.79it/s] 49%|████▉     | 272755/552076 [00:03<00:02, 94402.30it/s] 52%|█████▏    | 284446/552076 [00:03<00:02, 100187.96it/s] 53%|█████▎    | 294771/552076 [00:03<00:02, 91297.86it/s]  55%|█████▌    | 304887/552076 [00:03<00:02, 94048.47it/s] 57%|█████▋    | 314570/552076 [00:03<00:02, 90625.99it/s] 59%|█████▊    | 323854/552076 [00:03<00:02, 78209.14it/s] 60%|██████    | 333763/552076 [00:03<00:02, 83485.67it/s] 62%|██████▏   | 342770/552076 [00:03<00:02, 84867.35it/s] 64%|██████▎   | 351558/552076 [00:03<00:02, 84877.05it/s] 66%|██████▌   | 362668/552076 [00:04<00:02, 91343.79it/s] 67%|██████▋   | 372089/552076 [00:04<00:01, 90470.03it/s] 69%|██████▉   | 382014/552076 [00:04<00:01, 92935.87it/s] 71%|███████   | 392382/552076 [00:04<00:01, 95916.17it/s] 73%|███████▎  | 402109/552076 [00:04<00:01, 89847.68it/s] 74%|███████▍  | 411267/552076 [00:04<00:01, 76966.27it/s] 76%|███████▌  | 419408/552076 [00:04<00:02, 63313.13it/s] 77%|███████▋  | 426450/552076 [00:04<00:02, 62672.04it/s] 79%|███████▊  | 434034/552076 [00:05<00:01, 66114.66it/s] 80%|████████  | 443232/552076 [00:05<00:01, 72204.90it/s] 82%|████████▏ | 452296/552076 [00:05<00:01, 76896.19it/s] 84%|████████▍ | 462823/552076 [00:05<00:01, 83660.29it/s] 86%|████████▌ | 474890/552076 [00:05<00:00, 92136.91it/s] 88%|████████▊ | 486341/552076 [00:05<00:00, 97872.18it/s] 90%|█████████ | 498443/552076 [00:05<00:00, 103829.60it/s] 92%|█████████▏| 510421/552076 [00:05<00:00, 108148.39it/s] 95%|█████████▍| 522630/552076 [00:05<00:00, 111983.48it/s] 97%|█████████▋| 534117/552076 [00:05<00:00, 112828.57it/s] 99%|█████████▉| 545603/552076 [00:06<00:00, 101980.52it/s]100%|██████████| 552076/552076 [00:06<00:00, 90011.30it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5557/552076 [00:00<00:09, 55567.80it/s]  2%|▏         | 11145/552076 [00:00<00:09, 54932.81it/s]  3%|▎         | 16560/552076 [00:00<00:09, 54695.50it/s]  4%|▎         | 20684/552076 [00:00<00:10, 49817.88it/s]  5%|▍         | 26093/552076 [00:00<00:10, 50307.48it/s]  6%|▌         | 31794/552076 [00:00<00:10, 51550.01it/s]  7%|▋         | 37785/552076 [00:00<00:09, 53801.37it/s]  8%|▊         | 42769/552076 [00:00<00:10, 49763.49it/s]  9%|▉         | 48616/552076 [00:00<00:09, 50700.87it/s] 10%|▉         | 53538/552076 [00:01<00:10, 48291.55it/s] 11%|█         | 58919/552076 [00:01<00:09, 49347.20it/s] 12%|█▏        | 63804/552076 [00:01<00:10, 46359.53it/s] 12%|█▏        | 68442/552076 [00:01<00:11, 42371.22it/s] 13%|█▎        | 72873/552076 [00:01<00:11, 40752.28it/s] 14%|█▍        | 77051/552076 [00:01<00:11, 40136.49it/s] 15%|█▍        | 81170/552076 [00:01<00:11, 39677.63it/s] 15%|█▌        | 85340/552076 [00:01<00:11, 39244.30it/s] 16%|█▌        | 89476/552076 [00:01<00:11, 38848.39it/s] 17%|█▋        | 93499/552076 [00:02<00:11, 38529.60it/s] 18%|█▊        | 97393/552076 [00:02<00:11, 38111.56it/s] 18%|█▊        | 101215/552076 [00:02<00:12, 37568.53it/s] 19%|█▉        | 105291/552076 [00:02<00:11, 38006.69it/s] 20%|█▉        | 109194/552076 [00:02<00:11, 38108.76it/s] 20%|██        | 113112/552076 [00:02<00:11, 37704.09it/s] 21%|██▏       | 117337/552076 [00:02<00:11, 38960.50it/s] 22%|██▏       | 121247/552076 [00:02<00:11, 38041.03it/s] 23%|██▎       | 125066/552076 [00:02<00:11, 37450.84it/s] 23%|██▎       | 128869/552076 [00:03<00:11, 36544.65it/s] 24%|██▍       | 132808/552076 [00:03<00:11, 37353.79it/s] 25%|██▍       | 136746/552076 [00:03<00:11, 37015.69it/s] 25%|██▌       | 140653/552076 [00:03<00:10, 37608.40it/s] 26%|██▌       | 144424/552076 [00:03<00:10, 37361.15it/s] 27%|██▋       | 148413/552076 [00:03<00:10, 37041.44it/s] 28%|██▊       | 152538/552076 [00:03<00:10, 36971.11it/s] 28%|██▊       | 156362/552076 [00:03<00:10, 37341.63it/s] 29%|██▉       | 160251/552076 [00:03<00:10, 36983.47it/s] 30%|██▉       | 164041/552076 [00:03<00:10, 36937.81it/s] 30%|███       | 167738/552076 [00:04<00:10, 36868.65it/s] 31%|███▏      | 173421/552076 [00:04<00:09, 41210.29it/s] 32%|███▏      | 178029/552076 [00:04<00:08, 41611.69it/s] 33%|███▎      | 182308/552076 [00:04<00:09, 40669.09it/s] 34%|███▍      | 186483/552076 [00:04<00:09, 39851.82it/s] 35%|███▍      | 190666/552076 [00:04<00:09, 39319.84it/s] 35%|███▌      | 194798/552076 [00:04<00:08, 39899.21it/s] 36%|███▌      | 198823/552076 [00:04<00:08, 39332.01it/s] 37%|███▋      | 202783/552076 [00:04<00:09, 38526.17it/s] 37%|███▋      | 206658/552076 [00:05<00:09, 36900.76it/s] 38%|███▊      | 210484/552076 [00:05<00:09, 37297.95it/s] 39%|███▉      | 214438/552076 [00:05<00:09, 37179.50it/s] 40%|███▉      | 218526/552076 [00:05<00:08, 37096.87it/s] 40%|████      | 222247/552076 [00:05<00:08, 36941.28it/s] 41%|████      | 226029/552076 [00:05<00:08, 36709.90it/s] 42%|████▏     | 229995/552076 [00:05<00:08, 36834.93it/s] 42%|████▏     | 234042/552076 [00:05<00:08, 36914.72it/s] 43%|████▎     | 238147/552076 [00:05<00:08, 37092.72it/s] 44%|████▍     | 241970/552076 [00:05<00:08, 37190.50it/s] 45%|████▍     | 245805/552076 [00:06<00:08, 37298.54it/s] 45%|████▌     | 249568/552076 [00:06<00:08, 37338.48it/s] 46%|████▌     | 253443/552076 [00:06<00:07, 37749.58it/s] 47%|████▋     | 259693/552076 [00:06<00:06, 42838.52it/s] 48%|████▊     | 264212/552076 [00:06<00:06, 42690.28it/s] 49%|████▊     | 268646/552076 [00:06<00:06, 41450.25it/s] 49%|████▉     | 272914/552076 [00:06<00:07, 39222.34it/s] 50%|█████     | 276948/552076 [00:06<00:06, 39461.02it/s] 51%|█████     | 280973/552076 [00:06<00:06, 39068.72it/s] 52%|█████▏    | 284936/552076 [00:07<00:07, 35763.25it/s] 52%|█████▏    | 288786/552076 [00:07<00:07, 36013.87it/s] 53%|█████▎    | 292850/552076 [00:07<00:07, 36524.43it/s] 54%|█████▍    | 297137/552076 [00:07<00:06, 36842.05it/s] 55%|█████▍    | 301095/552076 [00:07<00:06, 37621.68it/s] 55%|█████▌    | 305067/552076 [00:07<00:06, 37134.92it/s] 56%|█████▌    | 309242/552076 [00:07<00:06, 38408.29it/s] 57%|█████▋    | 313337/552076 [00:07<00:06, 37820.06it/s] 57%|█████▋    | 317258/552076 [00:07<00:06, 37399.64it/s] 58%|█████▊    | 321123/552076 [00:08<00:06, 37766.13it/s] 59%|█████▉    | 326843/552076 [00:08<00:05, 42051.57it/s] 60%|█████▉    | 331211/552076 [00:08<00:05, 38477.00it/s] 61%|██████    | 335232/552076 [00:08<00:05, 38725.15it/s] 62%|██████▏   | 339790/552076 [00:08<00:05, 40365.72it/s] 62%|██████▏   | 343930/552076 [00:08<00:05, 40096.39it/s] 63%|██████▎   | 348013/552076 [00:08<00:05, 38460.93it/s] 64%|██████▍   | 352432/552076 [00:08<00:04, 40016.60it/s] 65%|██████▍   | 356496/552076 [00:08<00:05, 39003.99it/s] 65%|██████▌   | 360446/552076 [00:08<00:04, 38788.94it/s] 66%|██████▌   | 364360/552076 [00:09<00:04, 37899.83it/s] 67%|██████▋   | 368974/552076 [00:09<00:04, 39887.36it/s] 68%|██████▊   | 373340/552076 [00:09<00:04, 38846.13it/s] 68%|██████▊   | 377544/552076 [00:09<00:04, 39751.60it/s] 69%|██████▉   | 381552/552076 [00:09<00:04, 39592.97it/s] 70%|███████   | 387076/552076 [00:09<00:03, 42485.27it/s] 71%|███████   | 391401/552076 [00:09<00:03, 41193.49it/s] 72%|███████▏  | 395582/552076 [00:09<00:03, 39383.78it/s] 72%|███████▏  | 399581/552076 [00:09<00:03, 38824.35it/s] 73%|███████▎  | 403508/552076 [00:10<00:03, 37932.97it/s] 74%|███████▍  | 408360/552076 [00:10<00:03, 40589.38it/s] 75%|███████▍  | 412496/552076 [00:10<00:03, 40260.23it/s] 75%|███████▌  | 416577/552076 [00:10<00:03, 38572.00it/s] 76%|███████▋  | 422278/552076 [00:10<00:03, 42716.15it/s] 77%|███████▋  | 426726/552076 [00:10<00:02, 43170.58it/s] 78%|███████▊  | 432500/552076 [00:10<00:02, 46209.53it/s] 79%|███████▉  | 437920/552076 [00:10<00:02, 47815.68it/s] 80%|████████  | 442819/552076 [00:10<00:02, 45399.75it/s] 81%|████████▏ | 448634/552076 [00:11<00:02, 48257.13it/s] 82%|████████▏ | 453584/552076 [00:11<00:02, 45351.44it/s] 83%|████████▎ | 458242/552076 [00:11<00:02, 45204.29it/s] 84%|████████▍ | 462849/552076 [00:11<00:01, 44772.92it/s] 85%|████████▍ | 467388/552076 [00:11<00:01, 44055.45it/s] 86%|████████▌ | 473002/552076 [00:11<00:01, 47096.56it/s] 87%|████████▋ | 477802/552076 [00:11<00:01, 45292.12it/s] 87%|████████▋ | 482410/552076 [00:11<00:01, 41587.45it/s] 88%|████████▊ | 487933/552076 [00:11<00:01, 44915.47it/s] 89%|████████▉ | 492581/552076 [00:12<00:01, 44583.66it/s] 90%|█████████ | 497150/552076 [00:12<00:01, 43092.34it/s] 91%|█████████ | 501810/552076 [00:12<00:01, 44087.48it/s] 92%|█████████▏| 507405/552076 [00:12<00:00, 47082.08it/s] 93%|█████████▎| 512573/552076 [00:12<00:00, 47899.85it/s] 94%|█████████▍| 517884/552076 [00:12<00:00, 47726.53it/s] 95%|█████████▍| 522710/552076 [00:12<00:00, 46876.51it/s] 96%|█████████▌| 527840/552076 [00:12<00:00, 47963.27it/s] 96%|█████████▋| 532671/552076 [00:12<00:00, 46960.88it/s] 98%|█████████▊| 538416/552076 [00:12<00:00, 49680.62it/s] 98%|█████████▊| 543447/552076 [00:13<00:00, 42030.23it/s]100%|█████████▉| 549316/552076 [00:13<00:00, 45942.14it/s]100%|██████████| 552076/552076 [00:13<00:00, 41539.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8091/552076 [00:00<00:06, 80908.53it/s]  3%|▎         | 17369/552076 [00:00<00:06, 82705.93it/s]  4%|▍         | 22869/552076 [00:00<00:07, 70739.55it/s]  6%|▌         | 33399/552076 [00:00<00:06, 78465.17it/s]  7%|▋         | 40182/552076 [00:00<00:06, 74938.24it/s]  8%|▊         | 46695/552076 [00:00<00:07, 71698.73it/s] 10%|▉         | 54155/552076 [00:00<00:07, 70508.38it/s] 11%|█         | 60746/552076 [00:00<00:07, 64936.53it/s] 12%|█▏        | 67204/552076 [00:00<00:07, 64828.94it/s] 14%|█▍        | 76228/552076 [00:01<00:06, 70810.15it/s] 15%|█▌        | 83358/552076 [00:01<00:06, 70489.09it/s] 17%|█▋        | 92683/552076 [00:01<00:06, 76057.59it/s] 19%|█▊        | 103061/552076 [00:01<00:05, 82682.96it/s] 20%|██        | 111604/552076 [00:01<00:06, 67622.54it/s] 22%|██▏       | 119902/552076 [00:01<00:06, 71597.48it/s] 23%|██▎       | 127574/552076 [00:01<00:07, 59310.86it/s] 25%|██▍       | 136318/552076 [00:01<00:06, 65645.17it/s] 26%|██▌       | 143590/552076 [00:02<00:07, 56914.39it/s] 27%|██▋       | 149984/552076 [00:02<00:06, 57658.91it/s] 29%|██▉       | 159919/552076 [00:02<00:05, 65962.50it/s] 30%|███       | 167281/552076 [00:02<00:05, 66483.34it/s] 32%|███▏      | 174467/552076 [00:02<00:05, 63842.83it/s] 33%|███▎      | 181250/552076 [00:02<00:06, 60550.81it/s] 34%|███▍      | 187620/552076 [00:02<00:05, 61105.09it/s] 36%|███▌      | 196746/552076 [00:02<00:05, 67828.84it/s] 37%|███▋      | 203916/552076 [00:02<00:05, 68375.30it/s] 38%|███▊      | 211026/552076 [00:03<00:05, 65829.81it/s] 40%|███▉      | 219723/552076 [00:03<00:04, 68677.05it/s] 41%|████      | 226771/552076 [00:03<00:05, 62679.31it/s] 42%|████▏     | 233267/552076 [00:03<00:05, 61630.80it/s] 43%|████▎     | 239594/552076 [00:03<00:05, 59594.25it/s] 45%|████▍     | 245683/552076 [00:03<00:05, 53125.54it/s] 46%|████▌     | 251315/552076 [00:03<00:05, 54044.48it/s] 47%|████▋     | 256878/552076 [00:03<00:05, 51159.97it/s] 47%|████▋     | 262137/552076 [00:04<00:05, 49325.95it/s] 48%|████▊     | 267184/552076 [00:04<00:06, 45119.51it/s] 49%|████▉     | 271846/552076 [00:04<00:06, 41349.71it/s] 50%|█████     | 276367/552076 [00:04<00:06, 41052.32it/s] 51%|█████     | 282372/552076 [00:04<00:05, 45356.99it/s] 52%|█████▏    | 287762/552076 [00:04<00:05, 47589.45it/s] 53%|█████▎    | 292705/552076 [00:04<00:05, 47455.64it/s] 54%|█████▍    | 297580/552076 [00:04<00:05, 44163.23it/s] 55%|█████▍    | 302133/552076 [00:04<00:05, 43560.49it/s] 56%|█████▌    | 306587/552076 [00:05<00:05, 42919.63it/s] 56%|█████▋    | 311540/552076 [00:05<00:05, 44709.38it/s] 57%|█████▋    | 316080/552076 [00:05<00:05, 44289.83it/s] 58%|█████▊    | 321398/552076 [00:05<00:05, 43450.44it/s] 59%|█████▉    | 326895/552076 [00:05<00:04, 45498.03it/s] 60%|██████    | 331497/552076 [00:05<00:04, 45534.88it/s] 61%|██████    | 336801/552076 [00:05<00:04, 47552.34it/s] 62%|██████▏   | 341605/552076 [00:05<00:04, 47153.82it/s] 63%|██████▎   | 347592/552076 [00:05<00:04, 50362.51it/s] 64%|██████▍   | 353161/552076 [00:05<00:03, 51318.37it/s] 65%|██████▍   | 358357/552076 [00:06<00:04, 44632.09it/s] 66%|██████▌   | 363021/552076 [00:06<00:04, 44384.46it/s] 67%|██████▋   | 367722/552076 [00:06<00:04, 44110.25it/s] 68%|██████▊   | 373191/552076 [00:06<00:03, 46793.84it/s] 68%|██████▊   | 377985/552076 [00:06<00:03, 45040.75it/s] 69%|██████▉   | 383412/552076 [00:06<00:03, 47461.59it/s] 70%|███████   | 389020/552076 [00:06<00:03, 49221.54it/s] 72%|███████▏  | 394745/552076 [00:06<00:03, 50922.47it/s] 72%|███████▏  | 399913/552076 [00:07<00:03, 47607.52it/s] 73%|███████▎  | 405501/552076 [00:07<00:02, 49191.82it/s] 74%|███████▍  | 411112/552076 [00:07<00:02, 51010.53it/s] 75%|███████▌  | 416287/552076 [00:07<00:02, 45966.77it/s] 76%|███████▋  | 421140/552076 [00:07<00:02, 46706.77it/s] 77%|███████▋  | 425916/552076 [00:07<00:02, 46414.49it/s] 78%|███████▊  | 430632/552076 [00:07<00:02, 45577.23it/s] 79%|███████▉  | 435245/552076 [00:07<00:02, 43349.27it/s] 80%|███████▉  | 440333/552076 [00:07<00:02, 44516.06it/s] 81%|████████  | 444960/552076 [00:07<00:02, 43864.28it/s] 81%|████████▏ | 449385/552076 [00:08<00:02, 41080.79it/s] 82%|████████▏ | 453610/552076 [00:08<00:02, 41390.72it/s] 83%|████████▎ | 457794/552076 [00:08<00:02, 39661.64it/s] 84%|████████▍ | 463028/552076 [00:08<00:02, 42682.73it/s] 85%|████████▍ | 468364/552076 [00:08<00:01, 45059.49it/s] 86%|████████▌ | 473505/552076 [00:08<00:01, 45251.47it/s] 87%|████████▋ | 478104/552076 [00:08<00:01, 42410.57it/s] 87%|████████▋ | 482433/552076 [00:08<00:01, 40175.52it/s] 88%|████████▊ | 486537/552076 [00:09<00:01, 36717.09it/s] 89%|████████▉ | 490327/552076 [00:09<00:01, 31548.68it/s] 89%|████████▉ | 493693/552076 [00:09<00:01, 31894.05it/s] 90%|█████████ | 497031/552076 [00:09<00:01, 31517.04it/s] 91%|█████████ | 500919/552076 [00:09<00:01, 32320.06it/s] 92%|█████████▏| 505359/552076 [00:09<00:01, 35192.06it/s] 92%|█████████▏| 509009/552076 [00:09<00:01, 33494.87it/s] 93%|█████████▎| 513388/552076 [00:09<00:01, 36036.54it/s] 94%|█████████▎| 517123/552076 [00:09<00:01, 34381.84it/s] 94%|█████████▍| 521604/552076 [00:10<00:00, 36698.41it/s] 95%|█████████▌| 525572/552076 [00:10<00:00, 36837.39it/s] 96%|█████████▌| 529548/552076 [00:10<00:00, 37667.77it/s] 97%|█████████▋| 533378/552076 [00:10<00:00, 35855.80it/s] 97%|█████████▋| 537730/552076 [00:10<00:00, 37183.74it/s] 98%|█████████▊| 541505/552076 [00:10<00:00, 34171.17it/s] 99%|█████████▊| 545010/552076 [00:10<00:00, 32913.90it/s] 99%|█████████▉| 548373/552076 [00:10<00:00, 32994.36it/s]100%|██████████| 552076/552076 [00:10<00:00, 50471.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4498/552076 [00:00<00:12, 44977.58it/s]  2%|▏         | 8515/552076 [00:00<00:12, 43418.51it/s]  2%|▏         | 12560/552076 [00:00<00:12, 42481.64it/s]  3%|▎         | 15922/552076 [00:00<00:14, 38295.88it/s]  4%|▎         | 19634/552076 [00:00<00:14, 37696.15it/s]  4%|▍         | 22808/552076 [00:00<00:14, 35685.70it/s]  5%|▍         | 26236/552076 [00:00<00:14, 35170.27it/s]  5%|▌         | 29638/552076 [00:00<00:15, 32919.00it/s]  6%|▌         | 32734/552076 [00:00<00:16, 31527.70it/s]  7%|▋         | 36708/552076 [00:01<00:15, 33610.73it/s]  7%|▋         | 40989/552076 [00:01<00:14, 35926.14it/s]  8%|▊         | 44810/552076 [00:01<00:14, 34546.92it/s]  9%|▊         | 48283/552076 [00:01<00:15, 33426.04it/s]  9%|▉         | 52093/552076 [00:01<00:14, 33427.92it/s] 10%|█         | 56447/552076 [00:01<00:14, 35110.35it/s] 11%|█         | 59991/552076 [00:01<00:15, 32259.29it/s] 12%|█▏        | 64562/552076 [00:01<00:13, 34922.38it/s] 13%|█▎        | 69233/552076 [00:01<00:12, 37782.29it/s] 13%|█▎        | 73275/552076 [00:02<00:12, 38071.69it/s] 14%|█▍        | 77185/552076 [00:02<00:12, 38292.21it/s] 15%|█▍        | 81087/552076 [00:02<00:12, 36994.67it/s] 15%|█▌        | 85142/552076 [00:02<00:12, 37993.99it/s] 16%|█▌        | 89395/552076 [00:02<00:11, 38990.32it/s] 17%|█▋        | 93335/552076 [00:02<00:13, 35157.95it/s] 18%|█▊        | 97172/552076 [00:02<00:12, 36063.09it/s] 18%|█▊        | 100962/552076 [00:02<00:12, 35136.97it/s] 19%|█▉        | 104883/552076 [00:02<00:12, 35723.11it/s] 20%|█▉        | 108499/552076 [00:03<00:12, 34635.25it/s] 20%|██        | 112831/552076 [00:03<00:11, 36850.94it/s] 21%|██        | 116582/552076 [00:03<00:12, 35433.33it/s] 22%|██▏       | 121043/552076 [00:03<00:11, 37763.02it/s] 23%|██▎       | 125629/552076 [00:03<00:11, 38715.94it/s] 24%|██▎       | 130034/552076 [00:03<00:10, 39644.21it/s] 24%|██▍       | 134293/552076 [00:03<00:10, 40127.47it/s] 25%|██▌       | 138343/552076 [00:03<00:11, 36233.14it/s] 26%|██▌       | 142144/552076 [00:03<00:11, 35557.87it/s] 26%|██▋       | 145961/552076 [00:04<00:11, 35826.67it/s] 27%|██▋       | 149594/552076 [00:04<00:11, 35677.62it/s] 28%|██▊       | 153519/552076 [00:04<00:10, 36678.19it/s] 28%|██▊       | 157219/552076 [00:04<00:11, 35500.64it/s] 29%|██▉       | 161476/552076 [00:04<00:10, 37361.25it/s] 30%|██▉       | 165260/552076 [00:04<00:10, 36471.60it/s] 31%|███       | 168945/552076 [00:04<00:12, 31352.31it/s] 31%|███▏      | 173169/552076 [00:04<00:11, 33882.44it/s] 32%|███▏      | 176723/552076 [00:04<00:11, 32994.88it/s] 33%|███▎      | 180493/552076 [00:05<00:10, 34189.84it/s] 34%|███▎      | 185972/552076 [00:05<00:09, 38489.86it/s] 34%|███▍      | 190093/552076 [00:05<00:09, 38810.95it/s] 35%|███▌      | 194147/552076 [00:05<00:09, 38836.36it/s] 36%|███▌      | 198152/552076 [00:05<00:09, 38257.49it/s] 37%|███▋      | 202196/552076 [00:05<00:08, 38886.34it/s] 37%|███▋      | 206148/552076 [00:05<00:09, 36176.54it/s] 38%|███▊      | 209848/552076 [00:05<00:09, 36112.28it/s] 39%|███▊      | 213705/552076 [00:05<00:09, 36514.33it/s] 39%|███▉      | 217398/552076 [00:05<00:09, 35897.49it/s] 40%|████      | 221019/552076 [00:06<00:09, 34370.76it/s] 41%|████      | 224492/552076 [00:06<00:09, 33855.17it/s] 41%|████▏     | 227905/552076 [00:06<00:09, 32510.63it/s] 42%|████▏     | 232306/552076 [00:06<00:09, 34828.88it/s] 43%|████▎     | 236517/552076 [00:06<00:08, 36154.40it/s] 44%|████▎     | 240922/552076 [00:06<00:08, 38208.39it/s] 44%|████▍     | 244817/552076 [00:06<00:08, 36243.27it/s] 45%|████▌     | 249136/552076 [00:06<00:08, 37485.51it/s] 46%|████▌     | 253373/552076 [00:06<00:07, 38345.98it/s] 47%|████▋     | 257256/552076 [00:07<00:07, 36976.80it/s] 47%|████▋     | 260998/552076 [00:07<00:07, 36553.12it/s] 48%|████▊     | 264827/552076 [00:07<00:07, 36836.16it/s] 49%|████▉     | 269192/552076 [00:07<00:07, 38645.57it/s] 49%|████▉     | 273097/552076 [00:07<00:07, 36115.06it/s] 50%|█████     | 277522/552076 [00:07<00:07, 38222.62it/s] 51%|█████     | 281694/552076 [00:07<00:07, 38082.43it/s] 52%|█████▏    | 286905/552076 [00:07<00:06, 41363.94it/s] 53%|█████▎    | 291162/552076 [00:07<00:06, 41541.26it/s] 54%|█████▎    | 295762/552076 [00:08<00:06, 42564.72it/s] 55%|█████▍    | 302485/552076 [00:08<00:05, 47828.11it/s] 57%|█████▋    | 312693/552076 [00:08<00:04, 56508.54it/s] 58%|█████▊    | 320235/552076 [00:08<00:03, 60806.24it/s] 59%|█████▉    | 326982/552076 [00:08<00:03, 61976.64it/s] 61%|██████    | 335774/552076 [00:08<00:03, 67850.20it/s] 63%|██████▎   | 346806/552076 [00:08<00:02, 76708.15it/s] 65%|██████▍   | 357334/552076 [00:08<00:02, 83506.47it/s] 67%|██████▋   | 369370/552076 [00:08<00:01, 91952.89it/s] 69%|██████▊   | 379311/552076 [00:08<00:01, 93386.23it/s] 70%|███████   | 389177/552076 [00:09<00:01, 93009.91it/s] 73%|███████▎  | 400488/552076 [00:09<00:01, 98246.34it/s] 74%|███████▍  | 410651/552076 [00:09<00:01, 90057.17it/s] 76%|███████▋  | 422298/552076 [00:09<00:01, 96630.15it/s] 79%|███████▊  | 433487/552076 [00:09<00:01, 100751.53it/s] 81%|████████  | 445081/552076 [00:09<00:01, 104872.82it/s] 83%|████████▎ | 457438/552076 [00:09<00:00, 109857.63it/s] 85%|████████▌ | 469341/552076 [00:09<00:00, 112456.74it/s] 87%|████████▋ | 480777/552076 [00:09<00:00, 89205.84it/s]  89%|████████▉ | 492715/552076 [00:10<00:00, 96524.58it/s] 91%|█████████▏| 504597/552076 [00:10<00:00, 102280.34it/s] 94%|█████████▎| 516768/552076 [00:10<00:00, 107423.98it/s] 96%|█████████▌| 528340/552076 [00:10<00:00, 109785.03it/s] 98%|█████████▊| 540309/552076 [00:10<00:00, 112577.38it/s]100%|█████████▉| 551850/552076 [00:10<00:00, 112291.41it/s]100%|██████████| 552076/552076 [00:10<00:00, 52316.50it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10999/552076 [00:00<00:04, 109987.48it/s]  4%|▍         | 22848/552076 [00:00<00:04, 112406.49it/s]  6%|▋         | 34667/552076 [00:00<00:04, 114078.42it/s]  8%|▊         | 46580/552076 [00:00<00:04, 115546.28it/s] 10%|█         | 57675/552076 [00:00<00:04, 114126.25it/s] 13%|█▎        | 69401/552076 [00:00<00:04, 115048.60it/s] 15%|█▍        | 81300/552076 [00:00<00:04, 116202.71it/s] 17%|█▋        | 93355/552076 [00:00<00:03, 117473.32it/s] 19%|█▉        | 105118/552076 [00:00<00:04, 111545.32it/s] 21%|██        | 115899/552076 [00:01<00:04, 107886.26it/s] 23%|██▎       | 127096/552076 [00:01<00:03, 109078.65it/s] 25%|██▌       | 138217/552076 [00:01<00:03, 109708.37it/s] 27%|██▋       | 149301/552076 [00:01<00:03, 110042.33it/s] 29%|██▉       | 160710/552076 [00:01<00:03, 111224.94it/s] 31%|███       | 171959/552076 [00:01<00:03, 111600.62it/s] 33%|███▎      | 183435/552076 [00:01<00:03, 112528.94it/s] 35%|███▌      | 195247/552076 [00:01<00:03, 114147.00it/s] 38%|███▊      | 207138/552076 [00:01<00:02, 115532.97it/s] 40%|███▉      | 219075/552076 [00:01<00:02, 116656.41it/s] 42%|████▏     | 230741/552076 [00:02<00:02, 111345.38it/s] 44%|████▍     | 242623/552076 [00:02<00:02, 113485.52it/s] 46%|████▌     | 254452/552076 [00:02<00:02, 114884.22it/s] 48%|████▊     | 266649/552076 [00:02<00:02, 116920.08it/s] 50%|█████     | 278376/552076 [00:02<00:02, 115471.60it/s] 53%|█████▎    | 289952/552076 [00:02<00:02, 115515.86it/s] 55%|█████▍    | 301524/552076 [00:02<00:02, 114098.73it/s] 57%|█████▋    | 312952/552076 [00:02<00:02, 112919.14it/s] 59%|█████▉    | 324651/552076 [00:02<00:01, 114107.82it/s] 61%|██████    | 336440/552076 [00:02<00:01, 115214.84it/s] 63%|██████▎   | 348098/552076 [00:03<00:01, 115619.58it/s] 65%|██████▌   | 359945/552076 [00:03<00:01, 116459.17it/s] 67%|██████▋   | 371787/552076 [00:03<00:01, 117038.36it/s] 69%|██████▉   | 383497/552076 [00:03<00:01, 116032.96it/s] 72%|███████▏  | 395107/552076 [00:03<00:01, 114842.40it/s] 74%|███████▎  | 406599/552076 [00:03<00:01, 113648.35it/s] 76%|███████▌  | 417972/552076 [00:03<00:01, 113596.93it/s] 78%|███████▊  | 429338/552076 [00:03<00:01, 112350.63it/s] 80%|███████▉  | 440581/552076 [00:03<00:00, 112287.84it/s] 82%|████████▏ | 452490/552076 [00:03<00:00, 114243.39it/s] 84%|████████▍ | 463927/552076 [00:04<00:00, 101727.25it/s] 86%|████████▌ | 474363/552076 [00:04<00:00, 102419.66it/s] 88%|████████▊ | 485747/552076 [00:04<00:00, 105596.05it/s] 90%|█████████ | 497250/552076 [00:04<00:00, 108258.89it/s] 92%|█████████▏| 508933/552076 [00:04<00:00, 110692.68it/s] 94%|█████████▍| 520736/552076 [00:04<00:00, 112794.76it/s] 96%|█████████▋| 532456/552076 [00:04<00:00, 114078.73it/s] 99%|█████████▊| 544147/552076 [00:04<00:00, 114911.62it/s]100%|██████████| 552076/552076 [00:04<00:00, 113162.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17653/552076 [00:00<00:03, 176523.86it/s]  7%|▋         | 40002/552076 [00:00<00:02, 188401.27it/s] 11%|█         | 59601/552076 [00:00<00:02, 190612.46it/s] 15%|█▍        | 80821/552076 [00:00<00:02, 196602.38it/s] 19%|█▊        | 102879/552076 [00:00<00:02, 203227.78it/s] 22%|██▏       | 120404/552076 [00:00<00:02, 193880.02it/s] 25%|██▍       | 137924/552076 [00:00<00:02, 178896.11it/s] 29%|██▉       | 160541/552076 [00:00<00:02, 190863.42it/s] 33%|███▎      | 182482/552076 [00:00<00:01, 198613.24it/s] 37%|███▋      | 204208/552076 [00:01<00:01, 203861.81it/s] 41%|████      | 224424/552076 [00:01<00:01, 200561.54it/s] 44%|████▍     | 244373/552076 [00:01<00:01, 180250.86it/s] 48%|████▊     | 264622/552076 [00:01<00:01, 186391.02it/s] 52%|█████▏    | 285587/552076 [00:01<00:01, 192806.20it/s] 55%|█████▌    | 306373/552076 [00:01<00:01, 197084.48it/s] 59%|█████▉    | 327284/552076 [00:01<00:01, 200543.59it/s] 63%|██████▎   | 349254/552076 [00:01<00:00, 205928.03it/s] 67%|██████▋   | 372165/552076 [00:01<00:00, 212374.54it/s] 71%|███████▏  | 394364/552076 [00:01<00:00, 215169.73it/s] 75%|███████▌  | 416061/552076 [00:02<00:00, 215704.42it/s] 79%|███████▉  | 438444/552076 [00:02<00:00, 218076.80it/s] 83%|████████▎ | 460315/552076 [00:02<00:00, 216852.27it/s] 87%|████████▋ | 482046/552076 [00:02<00:00, 215404.57it/s] 91%|█████████ | 503621/552076 [00:02<00:00, 213838.43it/s] 95%|█████████▌| 525032/552076 [00:02<00:00, 212908.71it/s] 99%|█████████▉| 548122/552076 [00:02<00:00, 218003.69it/s]100%|██████████| 552076/552076 [00:02<00:00, 205728.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20815/552076 [00:00<00:02, 208145.24it/s]  8%|▊         | 42694/552076 [00:00<00:02, 211227.77it/s] 12%|█▏        | 65238/552076 [00:00<00:02, 215298.25it/s] 16%|█▌        | 86993/552076 [00:00<00:02, 215968.62it/s] 20%|█▉        | 109702/552076 [00:00<00:02, 219187.95it/s] 24%|██▍       | 132613/552076 [00:00<00:01, 222072.28it/s] 28%|██▊       | 153912/552076 [00:00<00:01, 219265.91it/s] 32%|███▏      | 174977/552076 [00:00<00:01, 216605.54it/s] 36%|███▌      | 197813/552076 [00:00<00:01, 220000.31it/s] 40%|████      | 221212/552076 [00:01<00:01, 224017.04it/s] 44%|████▍     | 243376/552076 [00:01<00:01, 223296.57it/s] 48%|████▊     | 266806/552076 [00:01<00:01, 226485.08it/s] 53%|█████▎    | 290333/552076 [00:01<00:01, 229049.68it/s] 57%|█████▋    | 313507/552076 [00:01<00:01, 229847.98it/s] 61%|██████    | 336372/552076 [00:01<00:00, 227278.02it/s] 65%|██████▌   | 359022/552076 [00:01<00:00, 226976.91it/s] 69%|██████▉   | 381666/552076 [00:01<00:00, 224991.89it/s] 73%|███████▎  | 404194/552076 [00:01<00:00, 225075.74it/s] 77%|███████▋  | 426678/552076 [00:01<00:00, 224738.32it/s] 81%|████████▏ | 449563/552076 [00:02<00:00, 225955.97it/s] 86%|████████▌ | 472376/552076 [00:02<00:00, 226603.56it/s] 90%|████████▉ | 495030/552076 [00:02<00:00, 223453.57it/s] 94%|█████████▎| 517381/552076 [00:02<00:00, 219818.99it/s] 98%|█████████▊| 539559/552076 [00:02<00:00, 220402.29it/s]100%|██████████| 552076/552076 [00:02<00:00, 222773.37it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18728/552076 [00:00<00:02, 187275.27it/s]  7%|▋         | 38146/552076 [00:00<00:02, 189291.72it/s] 10%|█         | 57951/552076 [00:00<00:02, 191834.57it/s] 14%|█▍        | 78703/552076 [00:00<00:02, 196285.24it/s] 18%|█▊        | 101014/552076 [00:00<00:02, 203629.16it/s] 22%|██▏       | 121984/552076 [00:00<00:02, 205410.93it/s] 25%|██▌       | 140392/552076 [00:00<00:02, 170383.93it/s] 28%|██▊       | 156934/552076 [00:00<00:02, 152940.28it/s] 31%|███       | 172217/552076 [00:01<00:02, 141418.99it/s] 34%|███▍      | 186524/552076 [00:01<00:02, 132953.51it/s] 36%|███▌      | 200039/552076 [00:01<00:02, 126853.75it/s] 39%|███▊      | 212937/552076 [00:01<00:02, 122932.52it/s] 41%|████      | 225406/552076 [00:01<00:02, 120554.62it/s] 43%|████▎     | 237595/552076 [00:01<00:02, 119306.05it/s] 45%|████▌     | 249622/552076 [00:01<00:02, 116788.25it/s] 47%|████▋     | 261644/552076 [00:01<00:02, 117795.16it/s] 50%|████▉     | 273835/552076 [00:01<00:02, 118999.18it/s] 52%|█████▏    | 286694/552076 [00:01<00:02, 121721.32it/s] 54%|█████▍    | 298912/552076 [00:02<00:02, 121665.40it/s] 56%|█████▋    | 311111/552076 [00:02<00:01, 121146.65it/s] 59%|█████▊    | 323249/552076 [00:02<00:01, 120170.42it/s] 61%|██████    | 335315/552076 [00:02<00:01, 120314.85it/s] 63%|██████▎   | 347359/552076 [00:02<00:01, 119732.40it/s] 65%|██████▌   | 359342/552076 [00:02<00:02, 91555.92it/s]  67%|██████▋   | 371287/552076 [00:02<00:01, 98451.99it/s] 69%|██████▉   | 381983/552076 [00:02<00:01, 98740.47it/s] 71%|███████   | 392453/552076 [00:03<00:01, 98608.66it/s] 73%|███████▎  | 403928/552076 [00:03<00:01, 102951.02it/s] 75%|███████▌  | 415229/552076 [00:03<00:01, 105775.14it/s] 77%|███████▋  | 426954/552076 [00:03<00:01, 108973.07it/s] 79%|███████▉  | 438675/552076 [00:03<00:01, 111319.77it/s] 82%|████████▏ | 450988/552076 [00:03<00:00, 114616.18it/s] 84%|████████▍ | 463051/552076 [00:03<00:00, 116355.56it/s] 86%|████████▌ | 474787/552076 [00:03<00:00, 116304.02it/s] 88%|████████▊ | 486836/552076 [00:03<00:00, 117526.61it/s] 90%|█████████ | 498641/552076 [00:03<00:00, 117653.81it/s] 93%|█████████▎| 510828/552076 [00:04<00:00, 118887.08it/s] 95%|█████████▍| 522948/552076 [00:04<00:00, 119568.55it/s] 97%|█████████▋| 535103/552076 [00:04<00:00, 120154.50it/s] 99%|█████████▉| 547134/552076 [00:04<00:00, 118101.03it/s]100%|██████████| 552076/552076 [00:04<00:00, 126686.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11214/552076 [00:00<00:04, 112135.56it/s]  4%|▍         | 22770/552076 [00:00<00:04, 113140.16it/s]  6%|▌         | 34024/552076 [00:00<00:04, 112958.58it/s]  8%|▊         | 45327/552076 [00:00<00:04, 112977.20it/s] 10%|█         | 57396/552076 [00:00<00:04, 115183.81it/s] 12%|█▏        | 68859/552076 [00:00<00:04, 115016.40it/s] 15%|█▍        | 80711/552076 [00:00<00:04, 116045.48it/s] 17%|█▋        | 92780/552076 [00:00<00:03, 117400.65it/s] 19%|█▉        | 104537/552076 [00:00<00:03, 115936.94it/s] 21%|██        | 116666/552076 [00:01<00:03, 117491.80it/s] 23%|██▎       | 128746/552076 [00:01<00:03, 118463.95it/s] 26%|██▌       | 140939/552076 [00:01<00:03, 119481.42it/s] 28%|██▊       | 153231/552076 [00:01<00:03, 120490.88it/s] 30%|██▉       | 165473/552076 [00:01<00:03, 121062.38it/s] 32%|███▏      | 177510/552076 [00:01<00:03, 119799.63it/s] 34%|███▍      | 189908/552076 [00:01<00:02, 121022.52it/s] 37%|███▋      | 202005/552076 [00:01<00:02, 121006.19it/s] 39%|███▉      | 214279/552076 [00:01<00:02, 121520.77it/s] 41%|████      | 226418/552076 [00:01<00:02, 120864.18it/s] 43%|████▎     | 238496/552076 [00:02<00:02, 119030.60it/s] 45%|████▌     | 250751/552076 [00:02<00:02, 120062.94it/s] 48%|████▊     | 263185/552076 [00:02<00:02, 121313.94it/s] 50%|████▉     | 275322/552076 [00:02<00:02, 120862.05it/s] 52%|█████▏    | 287412/552076 [00:02<00:02, 102586.74it/s] 54%|█████▍    | 298150/552076 [00:02<00:02, 99149.49it/s]  56%|█████▌    | 310179/552076 [00:02<00:02, 104666.91it/s] 58%|█████▊    | 322408/552076 [00:02<00:02, 109394.97it/s] 61%|██████    | 334440/552076 [00:02<00:01, 112457.98it/s] 63%|██████▎   | 346094/552076 [00:02<00:01, 113650.85it/s] 65%|██████▍   | 357902/552076 [00:03<00:01, 114943.14it/s] 67%|██████▋   | 369512/552076 [00:03<00:01, 114435.76it/s] 69%|██████▉   | 381726/552076 [00:03<00:01, 116642.73it/s] 71%|███████▏  | 393923/552076 [00:03<00:01, 118190.69it/s] 74%|███████▎  | 406092/552076 [00:03<00:01, 119217.53it/s] 76%|███████▌  | 418448/552076 [00:03<00:01, 120485.48it/s] 78%|███████▊  | 430527/552076 [00:03<00:01, 120284.96it/s] 80%|████████  | 442658/552076 [00:03<00:00, 120588.29it/s] 83%|████████▎ | 456277/552076 [00:03<00:00, 124879.65it/s] 85%|████████▍ | 468815/552076 [00:04<00:00, 122373.50it/s] 87%|████████▋ | 481099/552076 [00:04<00:00, 122240.27it/s] 89%|████████▉ | 493440/552076 [00:04<00:00, 122587.75it/s] 92%|█████████▏| 505722/552076 [00:04<00:00, 121440.93it/s] 94%|█████████▍| 517885/552076 [00:04<00:00, 120143.16it/s] 96%|█████████▌| 529949/552076 [00:04<00:00, 120291.39it/s] 98%|█████████▊| 541990/552076 [00:04<00:00, 120131.81it/s]100%|██████████| 552076/552076 [00:04<00:00, 117505.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9095/552076 [00:00<00:05, 90943.15it/s]  3%|▎         | 18698/552076 [00:00<00:05, 92411.16it/s]  5%|▌         | 27959/552076 [00:00<00:05, 91901.50it/s]  7%|▋         | 36396/552076 [00:00<00:05, 89503.55it/s]  9%|▉         | 48473/552076 [00:00<00:05, 97039.60it/s] 11%|█         | 61078/552076 [00:00<00:04, 104235.22it/s] 13%|█▎        | 70720/552076 [00:00<00:04, 96462.78it/s]  15%|█▍        | 82713/552076 [00:00<00:04, 102477.34it/s] 17%|█▋        | 95093/552076 [00:00<00:04, 108060.85it/s] 20%|█▉        | 109019/552076 [00:01<00:03, 115844.74it/s] 22%|██▏       | 120720/552076 [00:01<00:03, 115914.71it/s] 24%|██▍       | 132393/552076 [00:01<00:03, 115219.39it/s] 26%|██▌       | 143973/552076 [00:01<00:03, 102096.91it/s] 28%|██▊       | 155435/552076 [00:01<00:03, 105556.10it/s] 30%|███       | 166429/552076 [00:01<00:03, 106833.85it/s] 32%|███▏      | 177988/552076 [00:01<00:03, 109316.79it/s] 35%|███▍      | 191562/552076 [00:01<00:03, 116094.87it/s] 37%|███▋      | 203384/552076 [00:01<00:03, 112505.39it/s] 39%|███▉      | 214808/552076 [00:02<00:03, 94918.68it/s]  41%|████      | 224891/552076 [00:02<00:03, 89914.30it/s] 43%|████▎     | 235533/552076 [00:02<00:03, 94301.18it/s] 45%|████▍     | 247721/552076 [00:02<00:03, 101168.06it/s] 47%|████▋     | 259459/552076 [00:02<00:02, 105539.44it/s] 49%|████▉     | 270495/552076 [00:02<00:02, 106940.46it/s] 51%|█████     | 281989/552076 [00:02<00:02, 109220.42it/s] 53%|█████▎    | 293924/552076 [00:02<00:02, 112071.88it/s] 55%|█████▌    | 305840/552076 [00:02<00:02, 114107.26it/s] 57%|█████▋    | 317361/552076 [00:02<00:02, 112980.65it/s] 60%|█████▉    | 329553/552076 [00:03<00:01, 115519.24it/s] 62%|██████▏   | 341175/552076 [00:03<00:01, 115292.09it/s] 64%|██████▍   | 352754/552076 [00:03<00:01, 103064.38it/s] 66%|██████▌   | 363338/552076 [00:03<00:01, 100413.32it/s] 68%|██████▊   | 375195/552076 [00:03<00:01, 105247.57it/s] 70%|███████   | 386926/552076 [00:03<00:01, 108597.35it/s] 72%|███████▏  | 398615/552076 [00:03<00:01, 110958.26it/s] 74%|███████▍  | 410673/552076 [00:03<00:01, 113676.95it/s] 77%|███████▋  | 422804/552076 [00:03<00:01, 115863.06it/s] 79%|███████▉  | 435068/552076 [00:04<00:00, 117814.75it/s] 81%|████████  | 447208/552076 [00:04<00:00, 118866.26it/s] 83%|████████▎ | 459146/552076 [00:04<00:00, 107566.51it/s] 85%|████████▌ | 471263/552076 [00:04<00:00, 111314.81it/s] 88%|████████▊ | 483410/552076 [00:04<00:00, 114178.37it/s] 90%|████████▉ | 495370/552076 [00:04<00:00, 115750.40it/s] 92%|█████████▏| 507555/552076 [00:04<00:00, 117513.11it/s] 94%|█████████▍| 519733/552076 [00:04<00:00, 118759.99it/s] 96%|█████████▋| 531845/552076 [00:04<00:00, 119457.98it/s] 99%|█████████▊| 544025/552076 [00:04<00:00, 120150.17it/s]100%|██████████| 552076/552076 [00:05<00:00, 109802.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9107/552076 [00:00<00:05, 91062.05it/s]  4%|▍         | 22095/552076 [00:00<00:05, 100030.47it/s]  6%|▌         | 31765/552076 [00:00<00:05, 97231.80it/s]   7%|▋         | 40968/552076 [00:00<00:05, 95608.58it/s]  9%|▉         | 49239/552076 [00:00<00:05, 91332.97it/s] 11%|█         | 59813/552076 [00:00<00:05, 95225.13it/s] 13%|█▎        | 71598/552076 [00:00<00:04, 101044.11it/s] 15%|█▍        | 81653/552076 [00:00<00:04, 100893.66it/s] 17%|█▋        | 91356/552076 [00:00<00:04, 97103.07it/s]  18%|█▊        | 102031/552076 [00:01<00:04, 98909.74it/s] 20%|██        | 111763/552076 [00:01<00:04, 97627.82it/s] 22%|██▏       | 121418/552076 [00:01<00:04, 94578.01it/s] 24%|██▎       | 130821/552076 [00:01<00:04, 93980.60it/s] 25%|██▌       | 140182/552076 [00:01<00:04, 93141.17it/s] 27%|██▋       | 149472/552076 [00:01<00:04, 92148.20it/s] 29%|██▊       | 158673/552076 [00:01<00:04, 88317.68it/s] 30%|███       | 167529/552076 [00:01<00:04, 87748.62it/s] 32%|███▏      | 178758/552076 [00:01<00:03, 93904.99it/s] 34%|███▍      | 188647/552076 [00:01<00:03, 95346.15it/s] 36%|███▌      | 198693/552076 [00:02<00:03, 96823.88it/s] 38%|███▊      | 209439/552076 [00:02<00:03, 99784.85it/s] 40%|████      | 221497/552076 [00:02<00:03, 105228.09it/s] 43%|████▎     | 234964/552076 [00:02<00:02, 112612.63it/s] 45%|████▍     | 246463/552076 [00:02<00:02, 107256.05it/s] 47%|████▋     | 257408/552076 [00:02<00:03, 91525.55it/s]  49%|████▉     | 269355/552076 [00:02<00:02, 98432.29it/s] 51%|█████     | 279735/552076 [00:02<00:03, 85755.25it/s] 52%|█████▏    | 288979/552076 [00:03<00:03, 84276.48it/s] 54%|█████▍    | 297880/552076 [00:03<00:03, 81779.52it/s] 56%|█████▌    | 308243/552076 [00:03<00:02, 87284.54it/s] 58%|█████▊    | 318692/552076 [00:03<00:02, 91819.76it/s] 59%|█████▉    | 328179/552076 [00:03<00:02, 91028.59it/s] 61%|██████    | 337497/552076 [00:03<00:02, 90602.11it/s] 63%|██████▎   | 348715/552076 [00:03<00:02, 96149.40it/s] 65%|██████▍   | 358658/552076 [00:03<00:01, 97109.09it/s] 67%|██████▋   | 368781/552076 [00:03<00:01, 98308.56it/s] 69%|██████▊   | 378715/552076 [00:03<00:01, 89575.52it/s] 71%|███████   | 389817/552076 [00:04<00:01, 91366.44it/s] 72%|███████▏  | 399118/552076 [00:04<00:01, 86548.57it/s] 75%|███████▍  | 412495/552076 [00:04<00:01, 96798.67it/s] 77%|███████▋  | 424319/552076 [00:04<00:01, 102366.03it/s] 79%|███████▉  | 434998/552076 [00:04<00:01, 99196.09it/s]  81%|████████  | 445249/552076 [00:04<00:01, 96603.41it/s] 82%|████████▏ | 455156/552076 [00:04<00:01, 92605.43it/s] 84%|████████▍ | 464625/552076 [00:04<00:00, 89961.46it/s] 86%|████████▌ | 476126/552076 [00:04<00:00, 96248.65it/s] 88%|████████▊ | 487324/552076 [00:05<00:00, 100483.37it/s] 90%|█████████ | 497663/552076 [00:05<00:00, 101335.59it/s] 92%|█████████▏| 509628/552076 [00:05<00:00, 106211.70it/s] 94%|█████████▍| 520417/552076 [00:05<00:00, 104309.92it/s] 96%|█████████▋| 531399/552076 [00:05<00:00, 104486.28it/s] 98%|█████████▊| 541936/552076 [00:05<00:00, 76129.24it/s] 100%|█████████▉| 550710/552076 [00:05<00:00, 73143.08it/s]100%|██████████| 552076/552076 [00:05<00:00, 94352.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6384/552076 [00:00<00:08, 63838.39it/s]  3%|▎         | 14258/552076 [00:00<00:07, 67680.59it/s]  4%|▎         | 19751/552076 [00:00<00:08, 63273.99it/s]  5%|▍         | 26251/552076 [00:00<00:08, 63781.44it/s]  6%|▌         | 32804/552076 [00:00<00:08, 64294.07it/s]  7%|▋         | 39418/552076 [00:00<00:07, 64836.28it/s]  8%|▊         | 45645/552076 [00:00<00:07, 64041.98it/s]  9%|▉         | 51862/552076 [00:00<00:07, 63468.16it/s] 10%|█         | 57862/552076 [00:00<00:08, 61450.67it/s] 12%|█▏        | 63779/552076 [00:01<00:09, 51719.32it/s] 13%|█▎        | 70139/552076 [00:01<00:08, 54789.30it/s] 14%|█▍        | 76808/552076 [00:01<00:08, 57888.08it/s] 15%|█▌        | 83323/552076 [00:01<00:07, 59890.18it/s] 16%|█▌        | 89664/552076 [00:01<00:07, 60903.33it/s] 17%|█▋        | 96044/552076 [00:01<00:07, 61742.85it/s] 19%|█▊        | 102278/552076 [00:01<00:07, 57619.50it/s] 20%|█▉        | 108138/552076 [00:01<00:08, 54900.59it/s] 21%|██        | 113724/552076 [00:01<00:08, 53741.69it/s] 22%|██▏       | 119561/552076 [00:02<00:07, 55048.13it/s] 23%|██▎       | 125829/552076 [00:02<00:07, 57134.98it/s] 24%|██▍       | 131604/552076 [00:02<00:07, 56106.17it/s] 25%|██▍       | 137262/552076 [00:02<00:07, 52488.18it/s] 26%|██▌       | 142591/552076 [00:02<00:08, 49954.98it/s] 27%|██▋       | 147669/552076 [00:02<00:08, 50033.96it/s] 28%|██▊       | 154025/552076 [00:02<00:07, 53445.32it/s] 29%|██▉       | 160450/552076 [00:02<00:06, 56283.84it/s] 30%|███       | 166797/552076 [00:02<00:06, 58262.80it/s] 31%|███▏      | 172721/552076 [00:02<00:06, 55947.57it/s] 33%|███▎      | 179642/552076 [00:03<00:06, 59358.38it/s] 34%|███▍      | 186376/552076 [00:03<00:05, 61545.61it/s] 35%|███▍      | 192992/552076 [00:03<00:05, 62858.48it/s] 36%|███▌      | 199357/552076 [00:03<00:05, 62839.25it/s] 37%|███▋      | 205753/552076 [00:03<00:05, 63171.30it/s] 38%|███▊      | 212110/552076 [00:03<00:05, 62939.64it/s] 40%|███▉      | 218432/552076 [00:03<00:05, 59332.76it/s] 41%|████      | 224428/552076 [00:03<00:05, 55642.76it/s] 42%|████▏     | 230083/552076 [00:03<00:06, 52320.41it/s] 43%|████▎     | 235419/552076 [00:04<00:06, 46378.27it/s] 44%|████▎     | 240254/552076 [00:04<00:06, 45981.07it/s] 44%|████▍     | 245151/552076 [00:04<00:06, 46828.58it/s] 45%|████▌     | 250917/552076 [00:04<00:06, 49624.42it/s] 47%|████▋     | 257005/552076 [00:04<00:05, 52536.92it/s] 48%|████▊     | 262911/552076 [00:04<00:05, 54335.09it/s] 49%|████▊     | 268928/552076 [00:04<00:05, 55961.67it/s] 50%|████▉     | 275156/552076 [00:04<00:04, 57716.74it/s] 51%|█████     | 281723/552076 [00:04<00:04, 59891.62it/s] 52%|█████▏    | 288417/552076 [00:05<00:04, 61842.76it/s] 53%|█████▎    | 294669/552076 [00:05<00:04, 61895.21it/s] 55%|█████▍    | 301530/552076 [00:05<00:03, 63765.36it/s] 56%|█████▌    | 308127/552076 [00:05<00:03, 64410.02it/s] 57%|█████▋    | 314603/552076 [00:05<00:03, 62946.95it/s] 58%|█████▊    | 321903/552076 [00:05<00:03, 65657.13it/s] 60%|█████▉    | 328888/552076 [00:05<00:03, 66859.72it/s] 61%|██████    | 335969/552076 [00:05<00:03, 67995.00it/s] 62%|██████▏   | 342803/552076 [00:05<00:03, 66654.16it/s] 63%|██████▎   | 349499/552076 [00:05<00:03, 65161.20it/s] 64%|██████▍   | 356044/552076 [00:06<00:03, 63373.55it/s] 66%|██████▌   | 362724/552076 [00:06<00:02, 64362.68it/s] 67%|██████▋   | 369378/552076 [00:06<00:02, 65000.15it/s] 68%|██████▊   | 375933/552076 [00:06<00:02, 65162.07it/s] 69%|██████▉   | 382463/552076 [00:06<00:02, 64999.89it/s] 70%|███████   | 389137/552076 [00:06<00:02, 65511.56it/s] 72%|███████▏  | 395696/552076 [00:06<00:02, 64907.43it/s] 73%|███████▎  | 402301/552076 [00:06<00:02, 65244.85it/s] 74%|███████▍  | 408831/552076 [00:06<00:02, 59832.14it/s] 75%|███████▌  | 414906/552076 [00:07<00:02, 50616.17it/s] 76%|███████▌  | 420276/552076 [00:07<00:02, 46448.97it/s] 77%|███████▋  | 425204/552076 [00:07<00:02, 44319.93it/s] 78%|███████▊  | 431897/552076 [00:07<00:02, 49316.60it/s] 79%|███████▉  | 438463/552076 [00:07<00:02, 53296.12it/s] 81%|████████  | 444898/552076 [00:07<00:01, 56190.13it/s] 82%|████████▏ | 451324/552076 [00:07<00:01, 58389.50it/s] 83%|████████▎ | 457374/552076 [00:07<00:01, 56270.23it/s] 84%|████████▍ | 463165/552076 [00:07<00:01, 54974.83it/s] 85%|████████▍ | 468784/552076 [00:08<00:01, 55010.27it/s] 86%|████████▌ | 475174/552076 [00:08<00:01, 57404.81it/s] 87%|████████▋ | 481267/552076 [00:08<00:01, 57909.24it/s] 88%|████████▊ | 487120/552076 [00:08<00:01, 48674.09it/s] 90%|█████████ | 498233/552076 [00:08<00:00, 57541.71it/s] 91%|█████████▏| 505034/552076 [00:08<00:00, 59596.94it/s] 93%|█████████▎| 511616/552076 [00:08<00:00, 59488.41it/s] 94%|█████████▍| 520118/552076 [00:08<00:00, 65378.31it/s] 97%|█████████▋| 532843/552076 [00:08<00:00, 76542.98it/s] 99%|█████████▉| 545777/552076 [00:09<00:00, 87224.18it/s]100%|██████████| 552076/552076 [00:09<00:00, 60784.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 6994/552076 [00:00<00:08, 66610.12it/s]  3%|▎         | 18618/552076 [00:00<00:06, 76394.41it/s]  5%|▌         | 30364/552076 [00:00<00:06, 85345.08it/s]  8%|▊         | 41988/552076 [00:00<00:05, 92738.61it/s] 10%|▉         | 53738/552076 [00:00<00:05, 98997.06it/s] 11%|█▏        | 63107/552076 [00:00<00:06, 79930.11it/s] 14%|█▎        | 74998/552076 [00:00<00:05, 88646.43it/s] 16%|█▌        | 87100/552076 [00:00<00:04, 96379.96it/s] 18%|█▊        | 99290/552076 [00:00<00:04, 102836.55it/s] 20%|██        | 111232/552076 [00:01<00:04, 107305.19it/s] 22%|██▏       | 122824/552076 [00:01<00:03, 109751.18it/s] 24%|██▍       | 134899/552076 [00:01<00:03, 112833.05it/s] 27%|██▋       | 147021/552076 [00:01<00:03, 115223.00it/s] 29%|██▉       | 159166/552076 [00:01<00:03, 117020.78it/s] 31%|███       | 170992/552076 [00:01<00:03, 112897.17it/s] 33%|███▎      | 182864/552076 [00:01<00:03, 114580.57it/s] 35%|███▌      | 195178/552076 [00:01<00:03, 117020.19it/s] 38%|███▊      | 207421/552076 [00:01<00:02, 118589.50it/s] 40%|███▉      | 219338/552076 [00:01<00:02, 118551.49it/s] 42%|████▏     | 231234/552076 [00:02<00:02, 118343.70it/s] 44%|████▍     | 243097/552076 [00:02<00:02, 112257.31it/s] 46%|████▌     | 254408/552076 [00:02<00:02, 110251.67it/s] 48%|████▊     | 266519/552076 [00:02<00:02, 113296.91it/s] 51%|█████     | 278869/552076 [00:02<00:02, 116174.56it/s] 53%|█████▎    | 291368/552076 [00:02<00:02, 118685.75it/s] 55%|█████▍    | 303536/552076 [00:02<00:02, 119568.22it/s] 57%|█████▋    | 315669/552076 [00:02<00:01, 120088.59it/s] 59%|█████▉    | 327709/552076 [00:02<00:01, 119796.39it/s] 62%|██████▏   | 339806/552076 [00:03<00:01, 120145.09it/s] 64%|██████▎   | 351887/552076 [00:03<00:01, 120342.28it/s] 66%|██████▌   | 364071/552076 [00:03<00:01, 120785.61it/s] 68%|██████▊   | 376288/552076 [00:03<00:01, 121195.42it/s] 70%|███████   | 388414/552076 [00:03<00:01, 121114.20it/s] 73%|███████▎  | 400844/552076 [00:03<00:01, 122049.69it/s] 75%|███████▍  | 413054/552076 [00:03<00:01, 121789.28it/s] 77%|███████▋  | 425237/552076 [00:03<00:01, 121214.36it/s] 79%|███████▉  | 437362/552076 [00:03<00:00, 119240.51it/s] 81%|████████▏ | 449339/552076 [00:03<00:00, 119396.43it/s] 84%|████████▎ | 461286/552076 [00:04<00:00, 117947.54it/s] 86%|████████▌ | 473696/552076 [00:04<00:00, 119726.39it/s] 88%|████████▊ | 486120/552076 [00:04<00:00, 121045.35it/s] 90%|█████████ | 498338/552076 [00:04<00:00, 121382.79it/s] 93%|█████████▎| 510708/552076 [00:04<00:00, 122065.89it/s] 95%|█████████▍| 523165/552076 [00:04<00:00, 122804.27it/s] 97%|█████████▋| 535475/552076 [00:04<00:00, 122891.73it/s] 99%|█████████▉| 547769/552076 [00:04<00:00, 122617.52it/s]100%|██████████| 552076/552076 [00:04<00:00, 115878.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4613/552076 [00:00<00:11, 46126.41it/s]  2%|▏         | 8592/552076 [00:00<00:12, 44022.64it/s]  3%|▎         | 16082/552076 [00:00<00:10, 50235.03it/s]  4%|▍         | 21884/552076 [00:00<00:10, 51152.03it/s]  5%|▍         | 26460/552076 [00:00<00:10, 49133.10it/s]  6%|▌         | 31447/552076 [00:00<00:10, 49350.84it/s]  7%|▋         | 39157/552076 [00:00<00:09, 55324.16it/s]  9%|▉         | 50036/552076 [00:00<00:07, 64890.93it/s] 11%|█         | 61705/552076 [00:00<00:06, 74858.97it/s] 13%|█▎        | 73404/552076 [00:01<00:05, 83925.69it/s] 17%|█▋        | 95894/552076 [00:01<00:04, 103362.81it/s] 21%|██▏       | 117492/552076 [00:01<00:03, 122277.43it/s] 25%|██▌       | 139277/552076 [00:01<00:02, 140808.79it/s] 29%|██▉       | 160799/552076 [00:01<00:02, 157103.80it/s] 33%|███▎      | 182955/552076 [00:01<00:02, 172125.56it/s] 37%|███▋      | 202726/552076 [00:01<00:02, 159328.83it/s] 41%|████      | 224447/552076 [00:01<00:01, 173171.88it/s] 45%|████▍     | 246767/552076 [00:01<00:01, 185655.03it/s] 49%|████▉     | 269240/552076 [00:01<00:01, 195870.57it/s] 53%|█████▎    | 290006/552076 [00:02<00:01, 193132.11it/s] 56%|█████▌    | 310153/552076 [00:02<00:01, 180043.23it/s] 60%|██████    | 333312/552076 [00:02<00:01, 192925.43it/s] 65%|██████▍   | 356392/552076 [00:02<00:00, 202912.90it/s] 69%|██████▊   | 378251/552076 [00:02<00:00, 207371.82it/s] 72%|███████▏  | 400192/552076 [00:02<00:00, 210840.14it/s] 76%|███████▋  | 421646/552076 [00:02<00:00, 211814.41it/s] 80%|████████  | 444207/552076 [00:02<00:00, 215770.18it/s] 85%|████████▍ | 467134/552076 [00:02<00:00, 219648.00it/s] 89%|████████▊ | 489256/552076 [00:03<00:00, 218394.53it/s] 93%|█████████▎| 511207/552076 [00:03<00:00, 217416.35it/s] 97%|█████████▋| 534241/552076 [00:03<00:00, 221138.17it/s]100%|██████████| 552076/552076 [00:03<00:00, 168185.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14194/552076 [00:00<00:03, 141938.10it/s]  6%|▌         | 31274/552076 [00:00<00:03, 149517.45it/s] 10%|▉         | 53773/552076 [00:00<00:02, 166247.22it/s] 14%|█▎        | 75717/552076 [00:00<00:02, 179283.11it/s] 18%|█▊        | 98472/552076 [00:00<00:02, 191466.06it/s] 22%|██▏       | 120274/552076 [00:00<00:02, 198726.19it/s] 25%|██▌       | 140601/552076 [00:00<00:02, 200067.21it/s] 29%|██▉       | 161293/552076 [00:00<00:01, 202074.83it/s] 33%|███▎      | 180984/552076 [00:00<00:02, 176460.18it/s] 36%|███▋      | 200558/552076 [00:01<00:01, 181832.15it/s] 40%|████      | 221099/552076 [00:01<00:01, 188313.12it/s] 43%|████▎     | 240128/552076 [00:01<00:01, 169902.94it/s] 47%|████▋     | 260781/552076 [00:01<00:01, 179447.25it/s] 51%|█████     | 279206/552076 [00:01<00:01, 141220.17it/s] 54%|█████▍    | 298325/552076 [00:01<00:01, 153234.64it/s] 58%|█████▊    | 319351/552076 [00:01<00:01, 166805.99it/s] 61%|██████▏   | 338162/552076 [00:01<00:01, 172670.48it/s] 65%|██████▍   | 356426/552076 [00:02<00:01, 161303.62it/s] 68%|██████▊   | 373406/552076 [00:02<00:01, 150596.91it/s] 72%|███████▏  | 394907/552076 [00:02<00:00, 165466.51it/s] 76%|███████▌  | 417529/552076 [00:02<00:00, 179964.79it/s] 80%|███████▉  | 439689/552076 [00:02<00:00, 190711.82it/s] 83%|████████▎ | 460873/552076 [00:02<00:00, 196593.90it/s] 87%|████████▋ | 483049/552076 [00:02<00:00, 203521.16it/s] 91%|█████████▏| 504522/552076 [00:02<00:00, 206758.05it/s] 95%|█████████▌| 526856/552076 [00:02<00:00, 211459.24it/s] 99%|█████████▉| 548770/552076 [00:02<00:00, 213705.95it/s]100%|██████████| 552076/552076 [00:02<00:00, 186955.79it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21518/552076 [00:00<00:02, 215172.51it/s]  8%|▊         | 43686/552076 [00:00<00:02, 217083.28it/s] 12%|█▏        | 64777/552076 [00:00<00:02, 215185.74it/s] 16%|█▌        | 85667/552076 [00:00<00:02, 213258.38it/s] 20%|█▉        | 107687/552076 [00:00<00:02, 215293.63it/s] 23%|██▎       | 128557/552076 [00:00<00:01, 213269.30it/s] 27%|██▋       | 147365/552076 [00:00<00:01, 203053.85it/s] 30%|███       | 167204/552076 [00:00<00:01, 201630.86it/s] 34%|███▍      | 189466/552076 [00:00<00:01, 207498.47it/s] 38%|███▊      | 211724/552076 [00:01<00:01, 211803.07it/s] 42%|████▏     | 232540/552076 [00:01<00:01, 210695.67it/s] 46%|████▌     | 253411/552076 [00:01<00:01, 210093.50it/s] 50%|████▉     | 275288/552076 [00:01<00:01, 212622.64it/s] 54%|█████▍    | 297370/552076 [00:01<00:01, 215015.79it/s] 58%|█████▊    | 319189/552076 [00:01<00:01, 215956.23it/s] 62%|██████▏   | 340708/552076 [00:01<00:00, 214189.57it/s] 66%|██████▌   | 363893/552076 [00:01<00:00, 219196.28it/s] 70%|███████   | 386736/552076 [00:01<00:00, 221886.50it/s] 74%|███████▍  | 409627/552076 [00:01<00:00, 223945.74it/s] 78%|███████▊  | 432029/552076 [00:02<00:00, 220975.70it/s] 82%|████████▏ | 454141/552076 [00:02<00:00, 204008.10it/s] 86%|████████▌ | 474810/552076 [00:02<00:00, 194469.72it/s] 90%|████████▉ | 494538/552076 [00:02<00:00, 187614.61it/s] 93%|█████████▎| 513885/552076 [00:02<00:00, 189331.47it/s] 97%|█████████▋| 534123/552076 [00:02<00:00, 192331.79it/s]100%|██████████| 552076/552076 [00:02<00:00, 207980.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17659/552076 [00:00<00:03, 175492.27it/s]  6%|▌         | 33819/552076 [00:00<00:03, 171077.43it/s]  9%|▉         | 51008/552076 [00:00<00:02, 171319.83it/s] 13%|█▎        | 69993/552076 [00:00<00:02, 176485.20it/s] 16%|█▋        | 90669/552076 [00:00<00:02, 184592.10it/s] 20%|██        | 112754/552076 [00:00<00:02, 194154.22it/s] 24%|██▍       | 133398/552076 [00:00<00:02, 197683.00it/s] 28%|██▊       | 155351/552076 [00:00<00:01, 203764.10it/s] 32%|███▏      | 177324/552076 [00:00<00:01, 208303.18it/s] 36%|███▌      | 197589/552076 [00:01<00:01, 204592.13it/s] 40%|███▉      | 218246/552076 [00:01<00:01, 205179.81it/s] 43%|████▎     | 238498/552076 [00:01<00:01, 204010.75it/s] 47%|████▋     | 258715/552076 [00:01<00:01, 202625.33it/s] 51%|█████     | 280777/552076 [00:01<00:01, 207705.60it/s] 55%|█████▌    | 303818/552076 [00:01<00:01, 214032.27it/s] 59%|█████▉    | 326204/552076 [00:01<00:01, 216887.33it/s] 63%|██████▎   | 348870/552076 [00:01<00:00, 219728.63it/s] 67%|██████▋   | 372340/552076 [00:01<00:00, 224015.18it/s] 72%|███████▏  | 394776/552076 [00:01<00:00, 222989.30it/s] 76%|███████▌  | 417100/552076 [00:02<00:00, 222326.92it/s] 80%|███████▉  | 440111/552076 [00:02<00:00, 224603.55it/s] 84%|████████▍ | 462640/552076 [00:02<00:00, 224806.22it/s] 88%|████████▊ | 485849/552076 [00:02<00:00, 226939.47it/s] 92%|█████████▏| 508557/552076 [00:02<00:00, 224359.37it/s] 96%|█████████▋| 531980/552076 [00:02<00:00, 227231.68it/s]100%|██████████| 552076/552076 [00:02<00:00, 212456.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11849/552076 [00:00<00:04, 118487.01it/s]  4%|▍         | 23604/552076 [00:00<00:04, 118203.61it/s]  7%|▋         | 40457/552076 [00:00<00:03, 129834.02it/s] 11%|█▏        | 63423/552076 [00:00<00:03, 149302.79it/s] 14%|█▍        | 76799/552076 [00:00<00:03, 143346.99it/s] 16%|█▋        | 90097/552076 [00:00<00:03, 118527.54it/s] 19%|█▊        | 102535/552076 [00:00<00:03, 120222.99it/s] 21%|██        | 114555/552076 [00:00<00:03, 111233.43it/s] 23%|██▎       | 125811/552076 [00:01<00:04, 93329.44it/s]  25%|██▍       | 135726/552076 [00:01<00:04, 91215.17it/s] 27%|██▋       | 147811/552076 [00:01<00:04, 98456.77it/s] 29%|██▊       | 158114/552076 [00:01<00:04, 96441.29it/s] 30%|███       | 168088/552076 [00:01<00:04, 92446.31it/s] 32%|███▏      | 177599/552076 [00:01<00:04, 91422.91it/s] 34%|███▍      | 189283/552076 [00:01<00:03, 95636.15it/s] 36%|███▌      | 199518/552076 [00:01<00:03, 97555.05it/s] 38%|███▊      | 211520/552076 [00:01<00:03, 103358.87it/s] 40%|████      | 222046/552076 [00:02<00:03, 100829.12it/s] 42%|████▏     | 233714/552076 [00:02<00:03, 105110.97it/s] 44%|████▍     | 244375/552076 [00:02<00:03, 102226.86it/s] 46%|████▌     | 255234/552076 [00:02<00:02, 104054.99it/s] 48%|████▊     | 266969/552076 [00:02<00:02, 107713.67it/s] 51%|█████     | 279174/552076 [00:02<00:02, 111647.17it/s] 53%|█████▎    | 291663/552076 [00:02<00:02, 115313.34it/s] 55%|█████▌    | 304170/552076 [00:02<00:02, 118076.63it/s] 57%|█████▋    | 316239/552076 [00:02<00:01, 118846.70it/s] 60%|█████▉    | 328688/552076 [00:02<00:01, 120484.68it/s] 62%|██████▏   | 340990/552076 [00:03<00:01, 121233.93it/s] 64%|██████▍   | 353150/552076 [00:03<00:01, 118017.63it/s] 66%|██████▌   | 364996/552076 [00:03<00:01, 111504.62it/s] 68%|██████▊   | 376712/552076 [00:03<00:01, 113141.22it/s] 70%|███████   | 388777/552076 [00:03<00:01, 115291.60it/s] 73%|███████▎  | 400954/552076 [00:03<00:01, 117159.10it/s] 75%|███████▍  | 413394/552076 [00:03<00:01, 119240.01it/s] 77%|███████▋  | 425667/552076 [00:03<00:01, 120264.17it/s] 79%|███████▉  | 438061/552076 [00:03<00:00, 121341.64it/s] 82%|████████▏ | 450222/552076 [00:03<00:00, 119843.42it/s] 84%|████████▎ | 462230/552076 [00:04<00:00, 111054.24it/s] 86%|████████▌ | 474285/552076 [00:04<00:00, 113740.12it/s] 88%|████████▊ | 486333/552076 [00:04<00:00, 115679.28it/s] 90%|█████████ | 498432/552076 [00:04<00:00, 117220.49it/s] 93%|█████████▎| 510815/552076 [00:04<00:00, 119125.38it/s] 95%|█████████▍| 523119/552076 [00:04<00:00, 120270.95it/s] 97%|█████████▋| 535459/552076 [00:04<00:00, 121189.85it/s] 99%|█████████▉| 547765/552076 [00:04<00:00, 121742.52it/s]100%|██████████| 552076/552076 [00:04<00:00, 114279.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11684/552076 [00:00<00:04, 116830.64it/s]  4%|▍         | 22847/552076 [00:00<00:04, 115219.37it/s]  6%|▋         | 34760/552076 [00:00<00:04, 116363.49it/s]  8%|▊         | 46677/552076 [00:00<00:04, 117191.09it/s] 11%|█         | 58156/552076 [00:00<00:04, 116458.62it/s] 13%|█▎        | 69969/552076 [00:00<00:04, 116954.75it/s] 15%|█▍        | 81939/552076 [00:00<00:03, 117763.72it/s] 17%|█▋        | 93549/552076 [00:00<00:04, 107860.29it/s] 19%|█▉        | 103827/552076 [00:00<00:04, 89707.66it/s] 20%|██        | 112954/552076 [00:01<00:05, 87721.79it/s] 22%|██▏       | 121846/552076 [00:01<00:05, 85243.66it/s] 24%|██▍       | 131337/552076 [00:01<00:04, 87929.16it/s] 25%|██▌       | 140221/552076 [00:01<00:04, 85291.01it/s] 28%|██▊       | 152363/552076 [00:01<00:04, 93649.13it/s] 29%|██▉       | 162167/552076 [00:01<00:04, 94923.90it/s] 31%|███       | 171877/552076 [00:01<00:04, 91258.06it/s] 33%|███▎      | 182777/552076 [00:01<00:03, 95941.27it/s] 35%|███▌      | 193586/552076 [00:01<00:03, 97849.29it/s] 37%|███▋      | 204690/552076 [00:02<00:03, 101463.12it/s] 39%|███▉      | 216769/552076 [00:02<00:03, 106578.39it/s] 41%|████▏     | 228853/552076 [00:02<00:02, 110489.96it/s] 44%|████▎     | 241145/552076 [00:02<00:02, 113946.40it/s] 46%|████▌     | 253305/552076 [00:02<00:02, 116136.23it/s] 48%|████▊     | 265022/552076 [00:02<00:02, 115468.40it/s] 50%|█████     | 276963/552076 [00:02<00:02, 116621.04it/s] 52%|█████▏    | 289260/552076 [00:02<00:02, 118453.64it/s] 55%|█████▍    | 301700/552076 [00:02<00:02, 120174.78it/s] 57%|█████▋    | 313880/552076 [00:02<00:01, 120657.46it/s] 59%|█████▉    | 326063/552076 [00:03<00:01, 121006.19it/s] 61%|██████▏   | 338183/552076 [00:03<00:01, 120426.75it/s] 63%|██████▎   | 350476/552076 [00:03<00:01, 121166.73it/s] 66%|██████▌   | 362604/552076 [00:03<00:01, 120985.31it/s] 68%|██████▊   | 374794/552076 [00:03<00:01, 121257.79it/s] 70%|███████   | 386926/552076 [00:03<00:01, 120013.62it/s] 72%|███████▏  | 398935/552076 [00:03<00:01, 114707.39it/s] 74%|███████▍  | 411105/552076 [00:03<00:01, 116717.03it/s] 77%|███████▋  | 423202/552076 [00:03<00:01, 117959.08it/s] 79%|███████▉  | 435539/552076 [00:03<00:00, 119530.81it/s] 81%|████████  | 447802/552076 [00:04<00:00, 120441.24it/s] 83%|████████▎ | 460081/552076 [00:04<00:00, 121133.59it/s] 86%|████████▌ | 472212/552076 [00:04<00:00, 109843.44it/s] 88%|████████▊ | 484138/552076 [00:04<00:00, 112507.98it/s] 90%|████████▉ | 496349/552076 [00:04<00:00, 115223.58it/s] 92%|█████████▏| 508124/552076 [00:04<00:00, 115969.67it/s] 94%|█████████▍| 520528/552076 [00:04<00:00, 118276.89it/s] 97%|█████████▋| 532904/552076 [00:04<00:00, 119868.16it/s] 99%|█████████▊| 545025/552076 [00:04<00:00, 120264.55it/s]100%|██████████| 552076/552076 [00:04<00:00, 111319.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11128/552076 [00:00<00:04, 111275.07it/s]  4%|▍         | 22452/552076 [00:00<00:04, 111857.06it/s]  6%|▌         | 33663/552076 [00:00<00:04, 111930.70it/s]  7%|▋         | 41239/552076 [00:00<00:05, 97025.99it/s]   9%|▉         | 48624/552076 [00:00<00:07, 70365.23it/s] 10%|█         | 55488/552076 [00:00<00:07, 69836.71it/s] 12%|█▏        | 66299/552076 [00:00<00:06, 78134.91it/s] 14%|█▍        | 77541/552076 [00:00<00:05, 86003.09it/s] 16%|█▌        | 88201/552076 [00:00<00:05, 91293.63it/s] 18%|█▊        | 99419/552076 [00:01<00:04, 96693.96it/s] 20%|█▉        | 110349/552076 [00:01<00:04, 99770.90it/s] 22%|██▏       | 120546/552076 [00:01<00:05, 86004.42it/s] 24%|██▎       | 131117/552076 [00:01<00:04, 91098.85it/s] 25%|██▌       | 140651/552076 [00:01<00:04, 89915.36it/s] 28%|██▊       | 152127/552076 [00:01<00:04, 96159.36it/s] 30%|██▉       | 163590/552076 [00:01<00:03, 101042.74it/s] 32%|███▏      | 175259/552076 [00:01<00:03, 103668.57it/s] 34%|███▎      | 185851/552076 [00:01<00:03, 93166.39it/s]  36%|███▌      | 197885/552076 [00:02<00:03, 99936.13it/s] 38%|███▊      | 208268/552076 [00:02<00:03, 96777.38it/s] 40%|███▉      | 218240/552076 [00:02<00:03, 86957.29it/s] 41%|████      | 227330/552076 [00:02<00:04, 66295.96it/s] 43%|████▎     | 234973/552076 [00:02<00:05, 60136.25it/s] 44%|████▍     | 241806/552076 [00:02<00:05, 58888.64it/s] 45%|████▍     | 248274/552076 [00:02<00:05, 53852.11it/s] 46%|████▌     | 254872/552076 [00:03<00:05, 56994.60it/s] 48%|████▊     | 265951/552076 [00:03<00:04, 66298.69it/s] 50%|████▉     | 273428/552076 [00:03<00:04, 66089.12it/s] 51%|█████     | 281845/552076 [00:03<00:03, 70640.55it/s] 53%|█████▎    | 291007/552076 [00:03<00:03, 75849.77it/s] 54%|█████▍    | 300801/552076 [00:03<00:03, 81353.50it/s] 57%|█████▋    | 312410/552076 [00:03<00:02, 89375.72it/s] 59%|█████▉    | 324533/552076 [00:03<00:02, 97023.36it/s] 61%|██████    | 336054/552076 [00:03<00:02, 101845.62it/s] 63%|██████▎   | 347323/552076 [00:03<00:01, 104872.32it/s] 65%|██████▌   | 359051/552076 [00:04<00:01, 108309.60it/s] 67%|██████▋   | 370689/552076 [00:04<00:01, 110607.94it/s] 69%|██████▉   | 382209/552076 [00:04<00:01, 111945.44it/s] 71%|███████▏  | 394024/552076 [00:04<00:01, 113736.46it/s] 74%|███████▎  | 406426/552076 [00:04<00:01, 116636.98it/s] 76%|███████▌  | 418497/552076 [00:04<00:01, 117828.12it/s] 78%|███████▊  | 430349/552076 [00:04<00:01, 117334.04it/s] 80%|████████  | 442141/552076 [00:04<00:00, 117508.41it/s] 82%|████████▏ | 454081/552076 [00:04<00:00, 118068.35it/s] 84%|████████▍ | 465913/552076 [00:05<00:00, 116759.43it/s] 87%|████████▋ | 477610/552076 [00:05<00:00, 116772.51it/s] 89%|████████▊ | 489414/552076 [00:05<00:00, 117148.26it/s] 91%|█████████ | 501257/552076 [00:05<00:00, 117527.39it/s] 93%|█████████▎| 513083/552076 [00:05<00:00, 117744.15it/s] 95%|█████████▌| 526036/552076 [00:05<00:00, 121047.45it/s] 97%|█████████▋| 538168/552076 [00:05<00:00, 116407.18it/s]100%|█████████▉| 549866/552076 [00:05<00:00, 112266.78it/s]100%|██████████| 552076/552076 [00:05<00:00, 96051.29it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14769/552076 [00:00<00:03, 147684.86it/s]  5%|▍         | 25857/552076 [00:00<00:03, 134308.28it/s]  7%|▋         | 37466/552076 [00:00<00:04, 128265.79it/s]  9%|▉         | 49209/552076 [00:00<00:04, 124808.59it/s] 11%|█         | 60819/552076 [00:00<00:04, 122060.79it/s] 13%|█▎        | 73537/552076 [00:00<00:03, 123552.70it/s] 16%|█▌        | 85914/552076 [00:00<00:03, 123617.40it/s] 18%|█▊        | 97650/552076 [00:00<00:03, 121669.82it/s] 20%|█▉        | 109887/552076 [00:00<00:03, 121878.89it/s] 22%|██▏       | 121722/552076 [00:01<00:03, 120796.77it/s] 24%|██▍       | 133415/552076 [00:01<00:03, 115226.22it/s] 26%|██▋       | 145553/552076 [00:01<00:03, 117004.41it/s] 29%|██▊       | 157505/552076 [00:01<00:03, 117744.53it/s] 31%|███       | 169179/552076 [00:01<00:03, 101136.01it/s] 33%|███▎      | 179634/552076 [00:01<00:04, 85352.76it/s]  34%|███▍      | 188830/552076 [00:01<00:04, 76722.04it/s] 36%|███▌      | 197129/552076 [00:01<00:04, 73358.44it/s] 37%|███▋      | 204935/552076 [00:02<00:04, 69671.12it/s] 39%|███▉      | 214767/552076 [00:02<00:04, 76344.37it/s] 41%|████      | 225585/552076 [00:02<00:03, 83736.02it/s] 42%|████▏     | 234489/552076 [00:02<00:03, 80083.23it/s] 44%|████▍     | 242903/552076 [00:02<00:03, 81124.79it/s] 46%|████▌     | 254907/552076 [00:02<00:03, 89863.97it/s] 48%|████▊     | 266602/552076 [00:02<00:02, 96573.15it/s] 51%|█████     | 278915/552076 [00:02<00:02, 103252.13it/s] 53%|█████▎    | 290635/552076 [00:02<00:02, 107072.51it/s] 55%|█████▍    | 302803/552076 [00:02<00:02, 111071.46it/s] 57%|█████▋    | 314989/552076 [00:03<00:02, 114101.01it/s] 59%|█████▉    | 326626/552076 [00:03<00:02, 95767.94it/s]  61%|██████    | 336861/552076 [00:03<00:02, 95344.41it/s] 63%|██████▎   | 346857/552076 [00:03<00:02, 90559.83it/s] 65%|██████▍   | 358605/552076 [00:03<00:01, 97242.79it/s] 67%|██████▋   | 368730/552076 [00:03<00:01, 98026.64it/s] 69%|██████▊   | 378815/552076 [00:03<00:02, 82865.89it/s] 70%|███████   | 389099/552076 [00:03<00:01, 87992.51it/s] 72%|███████▏  | 398405/552076 [00:04<00:02, 74485.60it/s] 74%|███████▎  | 406564/552076 [00:04<00:02, 55784.08it/s] 75%|███████▍  | 413331/552076 [00:04<00:02, 49962.08it/s] 76%|███████▌  | 419273/552076 [00:04<00:02, 44554.72it/s] 77%|███████▋  | 424500/552076 [00:04<00:03, 39037.07it/s] 78%|███████▊  | 430018/552076 [00:04<00:02, 42792.01it/s] 79%|███████▉  | 435828/552076 [00:05<00:02, 46464.31it/s] 80%|███████▉  | 441224/552076 [00:05<00:02, 48484.24it/s] 81%|████████  | 447051/552076 [00:05<00:02, 50926.37it/s] 82%|████████▏ | 453001/552076 [00:05<00:01, 53226.32it/s] 83%|████████▎ | 458895/552076 [00:05<00:01, 53636.24it/s] 84%|████████▍ | 464421/552076 [00:05<00:01, 46804.85it/s] 85%|████████▌ | 469372/552076 [00:05<00:01, 43514.49it/s] 86%|████████▌ | 473959/552076 [00:05<00:01, 43034.29it/s] 87%|████████▋ | 478429/552076 [00:05<00:01, 42395.91it/s] 88%|████████▊ | 483297/552076 [00:06<00:01, 43965.72it/s] 89%|████████▊ | 489095/552076 [00:06<00:01, 47402.36it/s] 89%|████████▉ | 493981/552076 [00:06<00:01, 42265.17it/s] 90%|█████████ | 498413/552076 [00:06<00:01, 40130.92it/s] 91%|█████████ | 502593/552076 [00:06<00:01, 38198.95it/s] 92%|█████████▏| 506549/552076 [00:06<00:01, 38124.80it/s] 92%|█████████▏| 510463/552076 [00:06<00:01, 38423.23it/s] 93%|█████████▎| 514373/552076 [00:06<00:01, 36485.81it/s] 94%|█████████▍| 518862/552076 [00:06<00:00, 36681.97it/s] 95%|█████████▍| 522885/552076 [00:07<00:00, 36953.00it/s] 95%|█████████▌| 527021/552076 [00:07<00:00, 37297.33it/s] 96%|█████████▌| 530776/552076 [00:07<00:00, 32777.77it/s] 97%|█████████▋| 534302/552076 [00:07<00:00, 33102.65it/s] 98%|█████████▊| 538456/552076 [00:07<00:00, 34357.78it/s] 98%|█████████▊| 542307/552076 [00:07<00:00, 35505.53it/s] 99%|█████████▉| 546175/552076 [00:07<00:00, 36014.03it/s]100%|█████████▉| 550052/552076 [00:07<00:00, 36026.39it/s]100%|██████████| 552076/552076 [00:07<00:00, 69708.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4399/552076 [00:00<00:13, 41812.06it/s]  2%|▏         | 10237/552076 [00:00<00:12, 44992.44it/s]  3%|▎         | 16145/552076 [00:00<00:11, 48458.66it/s]  4%|▍         | 21813/552076 [00:00<00:10, 50435.29it/s]  5%|▍         | 26693/552076 [00:00<00:10, 49114.67it/s]  6%|▌         | 31906/552076 [00:00<00:10, 49981.77it/s]  7%|▋         | 36475/552076 [00:00<00:10, 47842.90it/s]  8%|▊         | 41748/552076 [00:00<00:10, 49075.02it/s]  8%|▊         | 46467/552076 [00:00<00:11, 45918.09it/s]  9%|▉         | 50968/552076 [00:01<00:11, 44453.92it/s] 10%|█         | 55360/552076 [00:01<00:11, 42387.31it/s] 11%|█         | 60456/552076 [00:01<00:11, 43678.06it/s] 12%|█▏        | 64822/552076 [00:01<00:11, 42866.66it/s] 13%|█▎        | 69990/552076 [00:01<00:10, 45097.97it/s] 14%|█▎        | 74740/552076 [00:01<00:10, 45792.02it/s] 14%|█▍        | 79345/552076 [00:01<00:10, 43429.45it/s] 15%|█▌        | 84984/552076 [00:01<00:10, 45753.79it/s] 16%|█▌        | 89623/552076 [00:01<00:10, 44728.79it/s] 17%|█▋        | 94146/552076 [00:02<00:10, 42624.68it/s] 18%|█▊        | 98464/552076 [00:02<00:10, 42355.44it/s] 19%|█▊        | 103101/552076 [00:02<00:10, 41389.40it/s] 19%|█▉        | 107385/552076 [00:02<00:10, 41813.62it/s] 20%|██        | 111590/552076 [00:02<00:10, 40911.15it/s] 21%|██        | 115702/552076 [00:02<00:11, 37113.48it/s] 23%|██▎       | 125701/552076 [00:02<00:09, 45742.77it/s] 24%|██▍       | 134817/552076 [00:02<00:07, 53780.55it/s] 27%|██▋       | 146720/552076 [00:02<00:06, 64365.44it/s] 28%|██▊       | 154977/552076 [00:03<00:05, 68387.74it/s] 30%|███       | 165807/552076 [00:03<00:05, 76887.84it/s] 32%|███▏      | 177941/552076 [00:03<00:04, 86379.95it/s] 34%|███▍      | 188196/552076 [00:03<00:04, 90668.62it/s] 36%|███▋      | 200285/552076 [00:03<00:03, 98019.41it/s] 38%|███▊      | 210928/552076 [00:03<00:03, 94501.27it/s] 40%|████      | 222406/552076 [00:03<00:03, 99789.19it/s] 42%|████▏     | 233971/552076 [00:03<00:03, 104069.05it/s] 44%|████▍     | 244783/552076 [00:03<00:03, 102312.54it/s] 46%|████▌     | 255305/552076 [00:04<00:03, 83416.57it/s]  48%|████▊     | 264419/552076 [00:04<00:04, 59094.76it/s] 49%|████▉     | 271854/552076 [00:04<00:05, 54745.39it/s] 50%|█████     | 278460/552076 [00:04<00:05, 46765.36it/s] 51%|█████▏    | 284132/552076 [00:04<00:06, 42123.60it/s] 52%|█████▏    | 289398/552076 [00:04<00:05, 44813.41it/s] 53%|█████▎    | 294726/552076 [00:05<00:05, 44313.67it/s] 54%|█████▍    | 299576/552076 [00:05<00:05, 43696.49it/s] 55%|█████▌    | 304241/552076 [00:05<00:05, 43375.12it/s] 56%|█████▌    | 308786/552076 [00:05<00:05, 43048.83it/s] 57%|█████▋    | 313237/552076 [00:05<00:05, 42125.74it/s] 58%|█████▊    | 317556/552076 [00:05<00:05, 40870.61it/s] 59%|█████▊    | 323083/552076 [00:05<00:05, 44335.53it/s] 59%|█████▉    | 327828/552076 [00:05<00:05, 44739.19it/s] 60%|██████    | 333810/552076 [00:05<00:04, 47971.63it/s] 61%|██████▏   | 338744/552076 [00:06<00:04, 44980.59it/s] 62%|██████▏   | 343711/552076 [00:06<00:04, 46290.91it/s] 63%|██████▎   | 350027/552076 [00:06<00:04, 49747.90it/s] 64%|██████▍   | 355971/552076 [00:06<00:03, 52305.68it/s] 65%|██████▌   | 361338/552076 [00:06<00:03, 50343.00it/s] 66%|██████▋   | 366484/552076 [00:06<00:03, 48923.64it/s] 67%|██████▋   | 371464/552076 [00:06<00:03, 46373.78it/s] 68%|██████▊   | 377112/552076 [00:06<00:03, 48450.64it/s] 69%|██████▉   | 382300/552076 [00:06<00:03, 49429.92it/s] 70%|███████   | 387914/552076 [00:06<00:03, 50651.73it/s] 71%|███████   | 393068/552076 [00:07<00:03, 50914.06it/s] 72%|███████▏  | 398197/552076 [00:07<00:03, 48216.25it/s] 73%|███████▎  | 403507/552076 [00:07<00:02, 49583.19it/s] 74%|███████▍  | 409025/552076 [00:07<00:02, 50054.70it/s] 75%|███████▌  | 415297/552076 [00:07<00:02, 51508.35it/s] 76%|███████▌  | 420484/552076 [00:07<00:02, 51539.19it/s] 77%|███████▋  | 425705/552076 [00:07<00:02, 50940.78it/s] 78%|███████▊  | 430984/552076 [00:07<00:02, 51481.38it/s] 79%|███████▉  | 436147/552076 [00:07<00:02, 50529.74it/s] 80%|███████▉  | 441462/552076 [00:08<00:02, 50521.06it/s] 81%|████████  | 447719/552076 [00:08<00:01, 53281.70it/s] 82%|████████▏ | 453356/552076 [00:08<00:01, 54171.89it/s] 83%|████████▎ | 458810/552076 [00:08<00:01, 50880.82it/s] 84%|████████▍ | 463965/552076 [00:08<00:01, 47935.04it/s] 85%|████████▌ | 470026/552076 [00:08<00:01, 51143.13it/s] 86%|████████▌ | 475788/552076 [00:08<00:01, 52927.46it/s] 87%|████████▋ | 481179/552076 [00:08<00:01, 52480.09it/s] 88%|████████▊ | 486750/552076 [00:08<00:01, 53408.00it/s] 89%|████████▉ | 493025/552076 [00:08<00:01, 54878.78it/s] 90%|█████████ | 499342/552076 [00:09<00:00, 57128.08it/s] 91%|█████████▏| 505112/552076 [00:09<00:00, 51832.02it/s] 93%|█████████▎| 511000/552076 [00:09<00:00, 53762.27it/s] 94%|█████████▎| 516489/552076 [00:09<00:00, 46419.28it/s] 94%|█████████▍| 521387/552076 [00:09<00:00, 37183.90it/s] 96%|█████████▌| 527364/552076 [00:09<00:00, 39891.80it/s] 97%|█████████▋| 533646/552076 [00:09<00:00, 44796.09it/s] 98%|█████████▊| 540008/552076 [00:09<00:00, 49158.99it/s] 99%|█████████▉| 545958/552076 [00:10<00:00, 51311.35it/s]100%|██████████| 552076/552076 [00:10<00:00, 54162.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4394/552076 [00:00<00:13, 41767.66it/s]  1%|▏         | 7821/552076 [00:00<00:13, 39194.22it/s]  2%|▏         | 12749/552076 [00:00<00:13, 40789.00it/s]  3%|▎         | 17893/552076 [00:00<00:12, 43489.80it/s]  4%|▍         | 22683/552076 [00:00<00:12, 43197.66it/s]  5%|▍         | 27358/552076 [00:00<00:12, 43491.48it/s]  6%|▌         | 34078/552076 [00:00<00:10, 48173.73it/s]  7%|▋         | 38736/552076 [00:00<00:11, 45759.62it/s]  8%|▊         | 43226/552076 [00:00<00:11, 45297.16it/s]  9%|▉         | 49439/552076 [00:01<00:10, 49303.66it/s] 10%|█         | 55400/552076 [00:01<00:09, 51514.61it/s] 11%|█         | 61738/552076 [00:01<00:08, 54579.10it/s] 12%|█▏        | 67763/552076 [00:01<00:08, 55855.33it/s] 13%|█▎        | 74104/552076 [00:01<00:08, 57924.63it/s] 15%|█▍        | 80438/552076 [00:01<00:08, 58458.74it/s] 16%|█▌        | 86835/552076 [00:01<00:07, 60009.61it/s] 17%|█▋        | 92883/552076 [00:01<00:07, 59689.41it/s] 18%|█▊        | 99219/552076 [00:01<00:07, 60743.83it/s] 19%|█▉        | 105409/552076 [00:01<00:07, 60119.12it/s] 20%|██        | 111748/552076 [00:02<00:07, 61063.69it/s] 21%|██▏       | 117873/552076 [00:02<00:07, 60514.29it/s] 23%|██▎       | 124255/552076 [00:02<00:06, 61468.22it/s] 24%|██▎       | 130416/552076 [00:02<00:06, 60579.15it/s] 25%|██▍       | 137157/552076 [00:02<00:06, 62477.30it/s] 26%|██▌       | 143429/552076 [00:02<00:06, 60583.09it/s] 27%|██▋       | 149779/552076 [00:02<00:06, 61428.42it/s] 28%|██▊       | 156232/552076 [00:02<00:06, 62326.28it/s] 29%|██▉       | 162484/552076 [00:02<00:06, 61298.01it/s] 31%|███       | 168898/552076 [00:03<00:06, 60620.00it/s] 32%|███▏      | 175186/552076 [00:03<00:06, 60875.74it/s] 33%|███▎      | 181537/552076 [00:03<00:06, 61642.24it/s] 34%|███▍      | 187834/552076 [00:03<00:05, 62034.63it/s] 35%|███▌      | 194045/552076 [00:03<00:05, 60888.16it/s] 36%|███▋      | 200144/552076 [00:03<00:06, 58394.17it/s] 37%|███▋      | 206012/552076 [00:03<00:06, 51159.29it/s] 38%|███▊      | 211311/552076 [00:03<00:06, 49952.52it/s] 39%|███▉      | 217627/552076 [00:03<00:06, 53295.20it/s] 40%|████      | 223113/552076 [00:03<00:06, 53247.52it/s] 41%|████▏     | 228818/552076 [00:04<00:05, 54333.12it/s] 42%|████▏     | 234333/552076 [00:04<00:06, 48499.87it/s] 44%|████▎     | 240224/552076 [00:04<00:06, 50716.85it/s] 44%|████▍     | 245567/552076 [00:04<00:06, 50981.34it/s] 45%|████▌     | 251149/552076 [00:04<00:05, 52164.26it/s] 46%|████▋     | 256446/552076 [00:04<00:05, 51291.51it/s] 47%|████▋     | 261635/552076 [00:04<00:06, 47071.78it/s] 48%|████▊     | 266452/552076 [00:04<00:06, 46927.76it/s] 49%|████▉     | 272105/552076 [00:04<00:05, 48831.92it/s] 50%|█████     | 277062/552076 [00:05<00:05, 46984.72it/s] 51%|█████▏    | 283367/552076 [00:05<00:05, 50872.80it/s] 52%|█████▏    | 288621/552076 [00:05<00:05, 51361.62it/s] 53%|█████▎    | 293856/552076 [00:05<00:05, 51256.54it/s] 54%|█████▍    | 299051/552076 [00:05<00:05, 47107.23it/s] 55%|█████▌    | 304674/552076 [00:05<00:04, 49487.49it/s] 56%|█████▋    | 310943/552076 [00:05<00:04, 52666.65it/s] 57%|█████▋    | 316753/552076 [00:05<00:04, 54186.24it/s] 58%|█████▊    | 322487/552076 [00:05<00:04, 55094.51it/s] 60%|█████▉    | 328594/552076 [00:06<00:04, 55780.49it/s] 61%|██████    | 334816/552076 [00:06<00:03, 57218.23it/s] 62%|██████▏   | 341205/552076 [00:06<00:03, 59068.46it/s] 63%|██████▎   | 347161/552076 [00:06<00:03, 57463.53it/s] 64%|██████▍   | 353204/552076 [00:06<00:03, 58261.12it/s] 65%|██████▌   | 359525/552076 [00:06<00:03, 59662.39it/s] 66%|██████▋   | 365945/552076 [00:06<00:03, 60953.72it/s] 67%|██████▋   | 372128/552076 [00:06<00:03, 59685.36it/s] 69%|██████▊   | 378293/552076 [00:06<00:02, 60261.03it/s] 70%|██████▉   | 384722/552076 [00:06<00:02, 61415.49it/s] 71%|███████   | 391151/552076 [00:07<00:02, 62249.51it/s] 72%|███████▏  | 397393/552076 [00:07<00:02, 60696.23it/s] 73%|███████▎  | 403682/552076 [00:07<00:02, 61337.24it/s] 74%|███████▍  | 410144/552076 [00:07<00:02, 62285.96it/s] 75%|███████▌  | 416652/552076 [00:07<00:02, 63097.84it/s] 77%|███████▋  | 422975/552076 [00:07<00:02, 60541.37it/s] 78%|███████▊  | 429438/552076 [00:07<00:01, 61712.14it/s] 79%|███████▉  | 435708/552076 [00:07<00:01, 60417.25it/s] 80%|████████  | 441871/552076 [00:07<00:01, 60775.15it/s] 81%|████████  | 447974/552076 [00:07<00:01, 60850.01it/s] 82%|████████▏ | 454316/552076 [00:08<00:01, 61597.77it/s] 83%|████████▎ | 460487/552076 [00:08<00:01, 60887.87it/s] 85%|████████▍ | 467028/552076 [00:08<00:01, 62176.34it/s] 86%|████████▌ | 473260/552076 [00:08<00:01, 60729.94it/s] 87%|████████▋ | 479526/552076 [00:08<00:01, 61295.47it/s] 88%|████████▊ | 485669/552076 [00:08<00:01, 58343.07it/s] 89%|████████▉ | 491543/552076 [00:08<00:01, 51910.12it/s] 90%|█████████ | 496893/552076 [00:08<00:01, 45453.30it/s] 91%|█████████ | 501695/552076 [00:09<00:01, 44702.23it/s] 92%|█████████▏| 506348/552076 [00:09<00:01, 43206.43it/s] 93%|█████████▎| 511663/552076 [00:09<00:00, 45774.95it/s] 94%|█████████▍| 517883/552076 [00:09<00:00, 48729.63it/s] 95%|█████████▍| 522906/552076 [00:09<00:00, 48270.64it/s] 96%|█████████▌| 527839/552076 [00:09<00:00, 48137.97it/s] 97%|█████████▋| 533389/552076 [00:09<00:00, 49127.94it/s] 98%|█████████▊| 539099/552076 [00:09<00:00, 51275.12it/s] 99%|█████████▉| 545521/552076 [00:09<00:00, 54574.38it/s]100%|█████████▉| 551082/552076 [00:10<00:00, 51272.33it/s]100%|██████████| 552076/552076 [00:10<00:00, 55061.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2486/552076 [00:00<00:25, 21940.30it/s]  1%|          | 5219/552076 [00:00<00:27, 19638.34it/s]  1%|          | 6154/552076 [00:00<00:39, 13825.35it/s]  2%|▏         | 9185/552076 [00:00<00:32, 16520.55it/s]  2%|▏         | 12238/552076 [00:00<00:28, 19027.48it/s]  3%|▎         | 17141/552076 [00:00<00:23, 23214.99it/s]  4%|▎         | 20547/552076 [00:00<00:20, 25666.44it/s]  5%|▍         | 25848/552076 [00:00<00:17, 30365.08it/s]  5%|▌         | 29528/552076 [00:01<00:16, 31753.14it/s]  6%|▌         | 34169/552076 [00:01<00:14, 34724.81it/s]  7%|▋         | 39364/552076 [00:01<00:13, 38559.25it/s]  8%|▊         | 43640/552076 [00:01<00:12, 39606.32it/s]  9%|▊         | 47902/552076 [00:01<00:12, 39467.94it/s]  9%|▉         | 52228/552076 [00:01<00:12, 40532.52it/s] 10%|█         | 56436/552076 [00:01<00:13, 35740.10it/s] 11%|█         | 60222/552076 [00:01<00:13, 36165.05it/s] 12%|█▏        | 65428/552076 [00:01<00:12, 39673.87it/s] 13%|█▎        | 69869/552076 [00:01<00:11, 40984.98it/s] 13%|█▎        | 74124/552076 [00:02<00:12, 37607.37it/s] 14%|█▍        | 78049/552076 [00:02<00:17, 26900.14it/s] 15%|█▌        | 84404/552076 [00:02<00:14, 32527.79it/s] 16%|█▌        | 88630/552076 [00:02<00:13, 34706.89it/s] 17%|█▋        | 94507/552076 [00:02<00:11, 39566.09it/s] 18%|█▊        | 99177/552076 [00:02<00:12, 35536.82it/s] 19%|█▉        | 103701/552076 [00:02<00:11, 37980.46it/s] 20%|█▉        | 109809/552076 [00:03<00:10, 42839.79it/s] 21%|██        | 114758/552076 [00:03<00:10, 43537.67it/s] 22%|██▏       | 119480/552076 [00:03<00:10, 42295.59it/s] 23%|██▎       | 126100/552076 [00:03<00:08, 47433.34it/s] 24%|██▍       | 132713/552076 [00:03<00:08, 51828.21it/s] 25%|██▌       | 139311/552076 [00:03<00:07, 55390.87it/s] 26%|██▋       | 145707/552076 [00:03<00:07, 57709.46it/s] 28%|██▊       | 152373/552076 [00:03<00:06, 60129.19it/s] 29%|██▊       | 158599/552076 [00:03<00:06, 57035.43it/s] 30%|██▉       | 164547/552076 [00:03<00:06, 57745.49it/s] 31%|███       | 170451/552076 [00:04<00:07, 53820.70it/s] 32%|███▏      | 175978/552076 [00:04<00:08, 45633.71it/s] 33%|███▎      | 180857/552076 [00:04<00:08, 43685.84it/s] 34%|███▎      | 185507/552076 [00:04<00:08, 44491.97it/s] 35%|███▍      | 191713/552076 [00:04<00:07, 48619.41it/s] 36%|███▌      | 198339/552076 [00:04<00:06, 52837.88it/s] 37%|███▋      | 204049/552076 [00:04<00:06, 53981.68it/s] 38%|███▊      | 209643/552076 [00:04<00:06, 51410.63it/s] 39%|███▉      | 216200/552076 [00:05<00:06, 54971.21it/s] 40%|████      | 222864/552076 [00:05<00:05, 58017.05it/s] 42%|████▏     | 229472/552076 [00:05<00:05, 60219.22it/s] 43%|████▎     | 235637/552076 [00:05<00:05, 56905.93it/s] 44%|████▍     | 242222/552076 [00:05<00:05, 59323.18it/s] 45%|████▍     | 248278/552076 [00:05<00:05, 55808.19it/s] 46%|████▌     | 254152/552076 [00:05<00:05, 56655.73it/s] 47%|████▋     | 259911/552076 [00:05<00:05, 55621.89it/s] 48%|████▊     | 265543/552076 [00:05<00:06, 44753.30it/s] 49%|████▉     | 270408/552076 [00:06<00:06, 44524.60it/s] 50%|████▉     | 275134/552076 [00:06<00:06, 44026.85it/s] 51%|█████     | 279729/552076 [00:06<00:06, 43526.06it/s] 51%|█████▏    | 284218/552076 [00:06<00:07, 34493.52it/s] 52%|█████▏    | 288058/552076 [00:06<00:08, 31441.85it/s] 53%|█████▎    | 292070/552076 [00:06<00:07, 33623.57it/s] 54%|█████▎    | 295703/552076 [00:06<00:07, 33589.18it/s] 54%|█████▍    | 299251/552076 [00:06<00:07, 31875.51it/s] 55%|█████▌    | 304809/552076 [00:07<00:06, 36551.19it/s] 56%|█████▋    | 311332/552076 [00:07<00:05, 42104.37it/s] 57%|█████▋    | 316092/552076 [00:07<00:05, 40989.01it/s] 58%|█████▊    | 320582/552076 [00:07<00:06, 38492.91it/s] 59%|█████▉    | 324736/552076 [00:07<00:06, 35209.99it/s] 60%|█████▉    | 328525/552076 [00:07<00:06, 32622.60it/s] 60%|██████    | 332013/552076 [00:07<00:07, 29943.97it/s] 61%|██████    | 335355/552076 [00:07<00:07, 30907.25it/s] 61%|██████▏   | 338595/552076 [00:08<00:07, 30185.13it/s] 62%|██████▏   | 341722/552076 [00:08<00:07, 28389.48it/s] 62%|██████▏   | 344859/552076 [00:08<00:07, 28886.65it/s] 63%|██████▎   | 349873/552076 [00:08<00:06, 33094.76it/s] 64%|██████▍   | 353948/552076 [00:08<00:05, 35070.16it/s] 65%|██████▍   | 357674/552076 [00:08<00:05, 34644.43it/s] 65%|██████▌   | 361582/552076 [00:08<00:05, 35437.06it/s] 66%|██████▌   | 365725/552076 [00:08<00:05, 37043.70it/s] 67%|██████▋   | 369527/552076 [00:08<00:05, 35226.55it/s] 68%|██████▊   | 373137/552076 [00:09<00:05, 34042.02it/s] 68%|██████▊   | 376839/552076 [00:09<00:05, 34883.78it/s] 69%|██████▉   | 380854/552076 [00:09<00:04, 36305.87it/s] 70%|██████▉   | 386342/552076 [00:09<00:04, 40408.06it/s] 71%|███████   | 391232/552076 [00:09<00:03, 42627.53it/s] 72%|███████▏  | 397770/552076 [00:09<00:03, 47595.97it/s] 73%|███████▎  | 402829/552076 [00:09<00:03, 43126.19it/s] 74%|███████▍  | 407431/552076 [00:09<00:03, 40222.85it/s] 75%|███████▌  | 416483/552076 [00:09<00:02, 48268.57it/s] 77%|███████▋  | 426864/552076 [00:09<00:02, 57496.56it/s] 79%|███████▉  | 436857/552076 [00:10<00:01, 65889.69it/s] 81%|████████  | 447164/552076 [00:10<00:01, 73884.35it/s] 83%|████████▎ | 457537/552076 [00:10<00:01, 80863.10it/s] 85%|████████▍ | 466719/552076 [00:10<00:01, 77730.93it/s] 86%|████████▌ | 475285/552076 [00:10<00:01, 75847.45it/s] 89%|████████▉ | 493266/552076 [00:10<00:00, 91764.22it/s] 93%|█████████▎| 510701/552076 [00:10<00:00, 106963.23it/s] 95%|█████████▌| 526056/552076 [00:10<00:00, 117672.38it/s] 99%|█████████▊| 544111/552076 [00:10<00:00, 131400.32it/s]100%|██████████| 552076/552076 [00:10<00:00, 50253.67it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8209/552076 [00:00<00:06, 82079.71it/s]  2%|▏         | 13618/552076 [00:00<00:07, 71048.36it/s]  4%|▍         | 24521/552076 [00:00<00:06, 79339.21it/s]  6%|▋         | 35457/552076 [00:00<00:05, 86459.22it/s]  9%|▊         | 47006/552076 [00:00<00:05, 93510.31it/s] 11%|█         | 58847/552076 [00:00<00:04, 99804.54it/s] 13%|█▎        | 70185/552076 [00:00<00:04, 103520.98it/s] 15%|█▍        | 81754/552076 [00:00<00:04, 106893.02it/s] 17%|█▋        | 93622/552076 [00:00<00:04, 110173.86it/s] 19%|█▉        | 105094/552076 [00:01<00:04, 111497.97it/s] 21%|██        | 116770/552076 [00:01<00:03, 113025.89it/s] 23%|██▎       | 128881/552076 [00:01<00:03, 115335.44it/s] 26%|██▌       | 140833/552076 [00:01<00:03, 116557.39it/s] 28%|██▊       | 153003/552076 [00:01<00:03, 118053.09it/s] 30%|██▉       | 164996/552076 [00:01<00:03, 118607.98it/s] 32%|███▏      | 176857/552076 [00:01<00:03, 118388.38it/s] 34%|███▍      | 188929/552076 [00:01<00:03, 119077.04it/s] 36%|███▋      | 201004/552076 [00:01<00:02, 119573.82it/s] 39%|███▊      | 212963/552076 [00:01<00:02, 118916.02it/s] 41%|████      | 225315/552076 [00:02<00:02, 120260.13it/s] 43%|████▎     | 237566/552076 [00:02<00:02, 120926.32it/s] 45%|████▌     | 249663/552076 [00:02<00:02, 120318.27it/s] 47%|████▋     | 261910/552076 [00:02<00:02, 120954.13it/s] 50%|████▉     | 274264/552076 [00:02<00:02, 121718.15it/s] 52%|█████▏    | 286440/552076 [00:02<00:02, 121167.54it/s] 54%|█████▍    | 298579/552076 [00:02<00:02, 121232.67it/s] 56%|█████▋    | 310940/552076 [00:02<00:01, 121933.75it/s] 59%|█████▊    | 323136/552076 [00:02<00:01, 119467.57it/s] 61%|██████    | 335109/552076 [00:02<00:01, 119545.45it/s] 63%|██████▎   | 347391/552076 [00:03<00:01, 120508.60it/s] 65%|██████▌   | 359791/552076 [00:03<00:01, 121533.02it/s] 67%|██████▋   | 372191/552076 [00:03<00:01, 122261.23it/s] 70%|██████▉   | 384469/552076 [00:03<00:01, 122416.00it/s] 72%|███████▏  | 396716/552076 [00:03<00:01, 122221.35it/s] 74%|███████▍  | 408949/552076 [00:03<00:01, 122251.95it/s] 76%|███████▋  | 421286/552076 [00:03<00:01, 122585.09it/s] 79%|███████▊  | 433619/552076 [00:03<00:00, 122807.13it/s] 81%|████████  | 445902/552076 [00:03<00:00, 121937.70it/s] 83%|████████▎ | 458099/552076 [00:03<00:00, 121852.09it/s] 85%|████████▌ | 470286/552076 [00:04<00:00, 121131.53it/s] 87%|████████▋ | 482402/552076 [00:04<00:00, 121109.44it/s] 90%|████████▉ | 494789/552076 [00:04<00:00, 121921.72it/s] 92%|█████████▏| 507148/552076 [00:04<00:00, 122415.15it/s] 94%|█████████▍| 519586/552076 [00:04<00:00, 122996.70it/s] 96%|█████████▋| 532082/552076 [00:04<00:00, 123578.87it/s] 99%|█████████▊| 544560/552076 [00:04<00:00, 123935.66it/s]100%|██████████| 552076/552076 [00:04<00:00, 117996.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12009/552076 [00:00<00:04, 120086.11it/s]  4%|▍         | 23964/552076 [00:00<00:04, 119924.55it/s]  6%|▋         | 35530/552076 [00:00<00:04, 118610.04it/s]  9%|▊         | 47627/552076 [00:00<00:04, 119303.28it/s] 11%|█         | 59710/552076 [00:00<00:04, 119756.16it/s] 13%|█▎        | 71602/552076 [00:00<00:04, 119503.43it/s] 15%|█▌        | 83894/552076 [00:00<00:03, 120505.45it/s] 17%|█▋        | 95907/552076 [00:00<00:03, 120391.14it/s] 19%|█▉        | 107393/552076 [00:00<00:03, 118676.17it/s] 22%|██▏       | 119227/552076 [00:01<00:03, 118572.69it/s] 24%|██▍       | 131503/552076 [00:01<00:03, 119796.85it/s] 26%|██▌       | 143793/552076 [00:01<00:03, 120709.47it/s] 28%|██▊       | 156248/552076 [00:01<00:03, 121836.22it/s] 31%|███       | 168668/552076 [00:01<00:03, 122534.94it/s] 33%|███▎      | 180981/552076 [00:01<00:03, 122709.65it/s] 35%|███▌      | 193328/552076 [00:01<00:02, 122935.23it/s] 37%|███▋      | 205585/552076 [00:01<00:02, 122286.69it/s] 39%|███▉      | 217789/552076 [00:01<00:02, 122081.10it/s] 42%|████▏     | 230024/552076 [00:01<00:02, 122161.07it/s] 44%|████▍     | 242228/552076 [00:02<00:02, 121244.62it/s] 46%|████▌     | 254346/552076 [00:02<00:02, 121178.96it/s] 48%|████▊     | 266460/552076 [00:02<00:02, 119538.16it/s] 50%|█████     | 278416/552076 [00:02<00:02, 118707.59it/s] 53%|█████▎    | 290541/552076 [00:02<00:02, 119456.30it/s] 55%|█████▍    | 302975/552076 [00:02<00:02, 120880.26it/s] 57%|█████▋    | 315127/552076 [00:02<00:01, 121070.30it/s] 59%|█████▉    | 327434/552076 [00:02<00:01, 121663.22it/s] 62%|██████▏   | 339699/552076 [00:02<00:01, 121957.10it/s] 64%|██████▍   | 352077/552076 [00:02<00:01, 122497.56it/s] 66%|██████▌   | 364332/552076 [00:03<00:01, 122512.01it/s] 68%|██████▊   | 376664/552076 [00:03<00:01, 122751.14it/s] 70%|███████   | 389029/552076 [00:03<00:01, 123016.57it/s] 73%|███████▎  | 401513/552076 [00:03<00:01, 123557.93it/s] 75%|███████▍  | 413871/552076 [00:03<00:01, 121885.63it/s] 77%|███████▋  | 426366/552076 [00:03<00:01, 122786.92it/s] 79%|███████▉  | 438803/552076 [00:03<00:00, 123256.67it/s] 82%|████████▏ | 451246/552076 [00:03<00:00, 123603.74it/s] 84%|████████▍ | 463655/552076 [00:03<00:00, 123748.81it/s] 86%|████████▌ | 476075/552076 [00:03<00:00, 123880.94it/s] 88%|████████▊ | 488492/552076 [00:04<00:00, 123967.46it/s] 91%|█████████ | 500955/552076 [00:04<00:00, 124163.31it/s] 93%|█████████▎| 513373/552076 [00:04<00:00, 123831.19it/s] 95%|█████████▌| 525757/552076 [00:04<00:00, 123483.42it/s] 97%|█████████▋| 538107/552076 [00:04<00:00, 122346.63it/s]100%|█████████▉| 550425/552076 [00:04<00:00, 122593.48it/s]100%|██████████| 552076/552076 [00:04<00:00, 121750.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6411/552076 [00:00<00:08, 64106.39it/s]  2%|▏         | 13093/552076 [00:00<00:08, 64896.12it/s]  5%|▍         | 25488/552076 [00:00<00:06, 75717.99it/s]  6%|▋         | 35538/552076 [00:00<00:06, 81766.56it/s]  8%|▊         | 42798/552076 [00:00<00:07, 72242.26it/s] 10%|▉         | 54480/552076 [00:00<00:06, 81580.84it/s] 12%|█▏        | 66409/552076 [00:00<00:05, 90127.23it/s] 14%|█▎        | 75766/552076 [00:00<00:05, 88867.44it/s] 15%|█▌        | 84927/552076 [00:00<00:05, 89670.63it/s] 17%|█▋        | 94722/552076 [00:01<00:04, 92002.38it/s] 19%|█▉        | 104059/552076 [00:01<00:05, 83154.54it/s] 21%|██        | 114098/552076 [00:01<00:04, 87668.52it/s] 23%|██▎       | 125699/552076 [00:01<00:04, 93664.56it/s] 25%|██▍       | 137791/552076 [00:01<00:04, 100455.27it/s] 27%|██▋       | 149253/552076 [00:01<00:03, 104320.99it/s] 29%|██▉       | 161304/552076 [00:01<00:03, 108701.28it/s] 31%|███▏      | 173386/552076 [00:01<00:03, 112072.47it/s] 33%|███▎      | 184788/552076 [00:01<00:03, 104144.20it/s] 35%|███▌      | 195451/552076 [00:02<00:03, 94771.70it/s]  38%|███▊      | 207457/552076 [00:02<00:03, 101161.95it/s] 40%|███▉      | 219270/552076 [00:02<00:03, 105715.28it/s] 42%|████▏     | 230144/552076 [00:02<00:03, 94446.55it/s]  43%|████▎     | 240025/552076 [00:02<00:03, 86148.32it/s] 46%|████▌     | 252737/552076 [00:02<00:03, 95368.47it/s] 48%|████▊     | 266712/552076 [00:02<00:02, 105410.71it/s] 51%|█████     | 280909/552076 [00:02<00:02, 114234.90it/s] 53%|█████▎    | 293080/552076 [00:02<00:02, 110034.29it/s] 55%|█████▌    | 304640/552076 [00:03<00:02, 107915.67it/s] 57%|█████▋    | 315830/552076 [00:03<00:03, 77698.33it/s]  59%|█████▉    | 325073/552076 [00:03<00:03, 59251.61it/s] 60%|██████    | 332687/552076 [00:03<00:04, 50678.90it/s] 61%|██████▏   | 339154/552076 [00:03<00:04, 46220.70it/s] 62%|██████▏   | 344831/552076 [00:04<00:04, 45818.89it/s] 63%|██████▎   | 350153/552076 [00:04<00:04, 46865.52it/s] 64%|██████▍   | 356044/552076 [00:04<00:03, 49927.31it/s] 66%|██████▌   | 362036/552076 [00:04<00:03, 52151.28it/s] 67%|██████▋   | 368042/552076 [00:04<00:03, 54295.86it/s] 68%|██████▊   | 373719/552076 [00:04<00:03, 50272.60it/s] 69%|██████▊   | 379369/552076 [00:04<00:03, 50569.44it/s] 70%|██████▉   | 385106/552076 [00:04<00:03, 52433.10it/s] 71%|███████   | 391038/552076 [00:04<00:02, 54324.43it/s] 72%|███████▏  | 396581/552076 [00:04<00:02, 54070.42it/s] 73%|███████▎  | 402828/552076 [00:05<00:02, 56342.33it/s] 75%|███████▌  | 415439/552076 [00:05<00:02, 67554.01it/s] 78%|███████▊  | 428104/552076 [00:05<00:01, 78549.25it/s] 79%|███████▉  | 437381/552076 [00:05<00:01, 82335.39it/s] 81%|████████  | 446637/552076 [00:05<00:01, 71657.42it/s] 82%|████████▏ | 454767/552076 [00:05<00:01, 65881.14it/s] 84%|████████▎ | 462122/552076 [00:05<00:01, 61469.18it/s] 85%|████████▍ | 468865/552076 [00:05<00:01, 59611.23it/s] 86%|████████▌ | 475256/552076 [00:06<00:01, 58136.49it/s] 87%|████████▋ | 481379/552076 [00:06<00:01, 58465.27it/s] 88%|████████▊ | 487442/552076 [00:06<00:01, 56480.76it/s] 89%|████████▉ | 493257/552076 [00:06<00:01, 56639.23it/s] 90%|█████████ | 499038/552076 [00:06<00:00, 54964.42it/s] 91%|█████████▏| 504710/552076 [00:06<00:00, 55479.40it/s] 92%|█████████▏| 510358/552076 [00:06<00:00, 55775.46it/s] 93%|█████████▎| 515982/552076 [00:06<00:00, 55270.86it/s] 95%|█████████▍| 521809/552076 [00:06<00:00, 56137.35it/s] 96%|█████████▌| 527450/552076 [00:07<00:00, 53702.71it/s] 97%|█████████▋| 532862/552076 [00:07<00:00, 51007.07it/s] 97%|█████████▋| 538020/552076 [00:07<00:00, 47514.12it/s] 98%|█████████▊| 543247/552076 [00:07<00:00, 48620.44it/s] 99%|█████████▉| 548178/552076 [00:07<00:00, 45637.83it/s]100%|██████████| 552076/552076 [00:07<00:00, 72795.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3501/552076 [00:00<00:15, 35007.95it/s]  1%|          | 5856/552076 [00:00<00:18, 30283.55it/s]  2%|▏         | 9795/552076 [00:00<00:16, 32539.55it/s]  2%|▏         | 12935/552076 [00:00<00:16, 32082.12it/s]  3%|▎         | 16197/552076 [00:00<00:16, 31994.31it/s]  3%|▎         | 18872/552076 [00:00<00:18, 28373.10it/s]  4%|▍         | 22808/552076 [00:00<00:17, 30965.57it/s]  5%|▍         | 26414/552076 [00:00<00:16, 32335.39it/s]  6%|▌         | 30414/552076 [00:00<00:15, 34307.39it/s]  6%|▌         | 33823/552076 [00:01<00:16, 31353.26it/s]  7%|▋         | 36993/552076 [00:01<00:17, 29110.27it/s]  7%|▋         | 39960/552076 [00:01<00:18, 28063.09it/s]  8%|▊         | 42814/552076 [00:01<00:18, 27564.20it/s]  8%|▊         | 45606/552076 [00:01<00:19, 26043.68it/s]  9%|▉         | 49157/552076 [00:01<00:17, 28282.22it/s] 10%|▉         | 53044/552076 [00:01<00:16, 30161.40it/s] 10%|█         | 57017/552076 [00:01<00:15, 32458.54it/s] 11%|█         | 60414/552076 [00:01<00:14, 32896.08it/s] 12%|█▏        | 63786/552076 [00:02<00:16, 29257.37it/s] 12%|█▏        | 66845/552076 [00:02<00:17, 28165.94it/s] 13%|█▎        | 69987/552076 [00:02<00:17, 28116.36it/s] 13%|█▎        | 72870/552076 [00:02<00:17, 27016.37it/s] 14%|█▍        | 77350/552076 [00:02<00:15, 30178.63it/s] 15%|█▍        | 81410/552076 [00:02<00:14, 31958.38it/s] 15%|█▌        | 85084/552076 [00:02<00:14, 33255.97it/s] 16%|█▌        | 88522/552076 [00:02<00:14, 32773.89it/s] 17%|█▋        | 92559/552076 [00:02<00:13, 34734.22it/s] 17%|█▋        | 96121/552076 [00:03<00:13, 34610.49it/s] 18%|█▊        | 99644/552076 [00:03<00:13, 33249.26it/s] 19%|█▊        | 103111/552076 [00:03<00:13, 33662.34it/s] 19%|█▉        | 107470/552076 [00:03<00:12, 36043.12it/s] 20%|██        | 111881/552076 [00:03<00:11, 38135.26it/s] 21%|██        | 115780/552076 [00:03<00:12, 36219.75it/s] 22%|██▏       | 119482/552076 [00:03<00:12, 35807.04it/s] 22%|██▏       | 123120/552076 [00:03<00:13, 31669.68it/s] 23%|██▎       | 126415/552076 [00:03<00:13, 31533.58it/s] 23%|██▎       | 129658/552076 [00:04<00:13, 31028.60it/s] 24%|██▍       | 132826/552076 [00:04<00:14, 29217.69it/s] 25%|██▍       | 137237/552076 [00:04<00:12, 32510.37it/s] 26%|██▌       | 141603/552076 [00:04<00:11, 35206.82it/s] 26%|██▋       | 145887/552076 [00:04<00:11, 34590.34it/s] 27%|██▋       | 149515/552076 [00:04<00:11, 35079.56it/s] 28%|██▊       | 153741/552076 [00:04<00:10, 36861.39it/s] 29%|██▊       | 158270/552076 [00:04<00:10, 39040.72it/s] 29%|██▉       | 162271/552076 [00:04<00:10, 36906.38it/s] 30%|███       | 166054/552076 [00:05<00:12, 32161.50it/s] 31%|███       | 169444/552076 [00:05<00:13, 28578.35it/s] 31%|███▏      | 173321/552076 [00:05<00:12, 30856.77it/s] 32%|███▏      | 176811/552076 [00:05<00:12, 31133.74it/s] 33%|███▎      | 181234/552076 [00:05<00:11, 33431.37it/s] 33%|███▎      | 184718/552076 [00:05<00:11, 32155.90it/s] 34%|███▍      | 189040/552076 [00:05<00:10, 34830.28it/s] 35%|███▍      | 192702/552076 [00:05<00:10, 35346.66it/s] 36%|███▌      | 196690/552076 [00:05<00:09, 36594.30it/s] 36%|███▋      | 200431/552076 [00:06<00:10, 32477.64it/s] 37%|███▋      | 203822/552076 [00:06<00:10, 32320.96it/s] 38%|███▊      | 208075/552076 [00:06<00:09, 34828.24it/s] 38%|███▊      | 211886/552076 [00:06<00:09, 35429.23it/s] 39%|███▉      | 215881/552076 [00:06<00:09, 36673.11it/s] 40%|███▉      | 219623/552076 [00:06<00:09, 36566.98it/s] 41%|████      | 223604/552076 [00:06<00:08, 37482.75it/s] 41%|████      | 227574/552076 [00:06<00:08, 37575.35it/s] 42%|████▏     | 231715/552076 [00:06<00:08, 38648.08it/s] 43%|████▎     | 235609/552076 [00:07<00:08, 38321.64it/s] 43%|████▎     | 239640/552076 [00:07<00:08, 38896.55it/s] 44%|████▍     | 243547/552076 [00:07<00:08, 38379.02it/s] 45%|████▍     | 247591/552076 [00:07<00:07, 38973.53it/s] 46%|████▌     | 251500/552076 [00:07<00:07, 38550.68it/s] 46%|████▋     | 255634/552076 [00:07<00:07, 39346.98it/s] 47%|████▋     | 261639/552076 [00:07<00:06, 43885.28it/s] 49%|████▉     | 270096/552076 [00:07<00:05, 51286.45it/s] 50%|████▉     | 275954/552076 [00:07<00:05, 53276.01it/s] 52%|█████▏    | 286499/552076 [00:07<00:04, 62562.03it/s] 54%|█████▍    | 298504/552076 [00:08<00:03, 73056.91it/s] 56%|█████▌    | 307147/552076 [00:08<00:03, 73670.55it/s] 57%|█████▋    | 315452/552076 [00:08<00:03, 62781.96it/s] 58%|█████▊    | 322666/552076 [00:08<00:04, 48264.28it/s] 60%|█████▉    | 328656/552076 [00:08<00:04, 45009.70it/s] 61%|██████    | 334016/552076 [00:08<00:05, 42439.63it/s] 61%|██████▏   | 338892/552076 [00:09<00:05, 40273.74it/s] 62%|██████▏   | 343385/552076 [00:09<00:05, 39580.66it/s] 63%|██████▎   | 347672/552076 [00:09<00:05, 38295.33it/s] 64%|██████▎   | 351741/552076 [00:09<00:05, 35706.04it/s] 65%|██████▍   | 356118/552076 [00:09<00:05, 37001.30it/s] 65%|██████▌   | 359972/552076 [00:09<00:05, 34234.25it/s] 66%|██████▌   | 364123/552076 [00:09<00:05, 35317.85it/s] 67%|██████▋   | 367792/552076 [00:09<00:05, 33715.35it/s] 67%|██████▋   | 371509/552076 [00:09<00:05, 34681.07it/s] 68%|██████▊   | 375548/552076 [00:10<00:05, 34995.14it/s] 69%|██████▉   | 379956/552076 [00:10<00:04, 37300.97it/s] 70%|██████▉   | 383765/552076 [00:10<00:04, 34879.94it/s] 70%|███████   | 387480/552076 [00:10<00:04, 34770.50it/s] 71%|███████   | 391026/552076 [00:10<00:04, 34630.81it/s] 72%|███████▏  | 395053/552076 [00:10<00:04, 35854.34it/s] 72%|███████▏  | 399374/552076 [00:10<00:04, 37576.21it/s] 73%|███████▎  | 405344/552076 [00:10<00:03, 42276.21it/s] 74%|███████▍  | 410247/552076 [00:10<00:03, 44098.49it/s] 75%|███████▌  | 415444/552076 [00:11<00:03, 44907.59it/s] 76%|███████▌  | 420951/552076 [00:11<00:02, 46398.41it/s] 77%|███████▋  | 425695/552076 [00:11<00:02, 42152.22it/s] 78%|███████▊  | 430058/552076 [00:11<00:03, 39051.45it/s] 79%|███████▉  | 436118/552076 [00:11<00:02, 43713.94it/s] 80%|████████  | 442530/552076 [00:11<00:02, 48327.96it/s] 81%|████████▏ | 448988/552076 [00:11<00:01, 52273.74it/s] 82%|████████▏ | 455293/552076 [00:11<00:01, 53948.42it/s] 84%|████████▎ | 461558/552076 [00:11<00:01, 56293.82it/s] 86%|████████▌ | 473095/552076 [00:12<00:01, 66492.35it/s] 87%|████████▋ | 480632/552076 [00:12<00:01, 62903.40it/s] 88%|████████▊ | 487584/552076 [00:12<00:01, 62699.49it/s] 90%|████████▉ | 494318/552076 [00:12<00:00, 63014.58it/s] 91%|█████████ | 500945/552076 [00:12<00:00, 61630.74it/s] 92%|█████████▏| 507343/552076 [00:12<00:00, 61913.54it/s] 93%|█████████▎| 513699/552076 [00:12<00:00, 61583.89it/s] 94%|█████████▍| 519973/552076 [00:12<00:00, 52168.63it/s] 95%|█████████▌| 526264/552076 [00:12<00:00, 54771.39it/s] 96%|█████████▋| 532674/552076 [00:13<00:00, 57271.66it/s] 98%|█████████▊| 538616/552076 [00:13<00:00, 55264.95it/s] 99%|█████████▊| 544308/552076 [00:13<00:00, 49507.90it/s]100%|█████████▉| 549488/552076 [00:13<00:00, 47091.20it/s]100%|██████████| 552076/552076 [00:13<00:00, 40902.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5702/552076 [00:00<00:09, 56918.28it/s]  2%|▏         | 9740/552076 [00:00<00:10, 50689.98it/s]  3%|▎         | 13947/552076 [00:00<00:11, 46780.18it/s]  3%|▎         | 18907/552076 [00:00<00:11, 46730.81it/s]  5%|▍         | 25032/552076 [00:00<00:10, 50308.42it/s]  6%|▌         | 31432/552076 [00:00<00:09, 53757.88it/s]  7%|▋         | 37578/552076 [00:00<00:09, 55857.48it/s]  8%|▊         | 43936/552076 [00:00<00:08, 57090.90it/s]  9%|▉         | 50418/552076 [00:00<00:08, 59208.46it/s] 10%|█         | 56571/552076 [00:01<00:08, 59439.90it/s] 11%|█▏        | 63076/552076 [00:01<00:08, 61018.07it/s] 13%|█▎        | 69405/552076 [00:01<00:07, 60724.71it/s] 14%|█▎        | 75782/552076 [00:01<00:07, 61606.18it/s] 15%|█▍        | 81919/552076 [00:01<00:07, 60971.16it/s] 16%|█▌        | 88377/552076 [00:01<00:07, 62010.54it/s] 17%|█▋        | 94594/552076 [00:01<00:07, 61146.15it/s] 18%|█▊        | 101044/552076 [00:01<00:07, 62114.82it/s] 19%|█▉        | 107258/552076 [00:01<00:07, 61586.63it/s] 21%|██        | 113758/552076 [00:01<00:07, 62572.28it/s] 22%|██▏       | 120047/552076 [00:02<00:06, 61752.00it/s] 23%|██▎       | 126536/552076 [00:02<00:06, 62661.04it/s] 24%|██▍       | 132810/552076 [00:02<00:06, 62294.31it/s] 25%|██▌       | 139304/552076 [00:02<00:06, 63064.72it/s] 26%|██▋       | 145690/552076 [00:02<00:06, 61716.92it/s] 28%|██▊       | 151898/552076 [00:02<00:06, 61587.90it/s] 29%|██▊       | 158426/552076 [00:02<00:06, 62650.34it/s] 30%|██▉       | 164939/552076 [00:02<00:06, 63373.76it/s] 31%|███       | 171286/552076 [00:02<00:06, 61817.50it/s] 32%|███▏      | 177483/552076 [00:02<00:06, 61799.16it/s] 33%|███▎      | 183942/552076 [00:03<00:05, 62609.47it/s] 34%|███▍      | 190269/552076 [00:03<00:05, 62806.02it/s] 36%|███▌      | 196557/552076 [00:03<00:05, 61973.63it/s] 37%|███▋      | 202977/552076 [00:03<00:05, 61680.25it/s] 38%|███▊      | 209563/552076 [00:03<00:05, 62877.24it/s] 39%|███▉      | 215861/552076 [00:03<00:05, 60074.66it/s] 40%|████      | 222210/552076 [00:03<00:05, 61059.23it/s] 41%|████▏     | 228343/552076 [00:03<00:05, 60274.85it/s] 43%|████▎     | 234780/552076 [00:03<00:05, 61446.51it/s] 44%|████▎     | 240946/552076 [00:03<00:05, 60572.25it/s] 45%|████▍     | 247355/552076 [00:04<00:04, 61586.07it/s] 46%|████▌     | 253530/552076 [00:04<00:04, 61016.04it/s] 47%|████▋     | 259707/552076 [00:04<00:04, 61239.87it/s] 48%|████▊     | 265840/552076 [00:04<00:04, 60270.98it/s] 49%|████▉     | 272057/552076 [00:04<00:04, 60349.77it/s] 50%|█████     | 278505/552076 [00:04<00:04, 61531.83it/s] 52%|█████▏    | 284669/552076 [00:04<00:04, 61402.01it/s] 53%|█████▎    | 290817/552076 [00:04<00:04, 61331.13it/s] 54%|█████▍    | 297232/552076 [00:04<00:04, 62150.23it/s] 55%|█████▌    | 303701/552076 [00:05<00:04, 60895.71it/s] 56%|█████▌    | 310159/552076 [00:05<00:03, 60974.86it/s] 57%|█████▋    | 316854/552076 [00:05<00:03, 60932.98it/s] 59%|█████▊    | 323244/552076 [00:05<00:03, 61071.51it/s] 60%|█████▉    | 329634/552076 [00:05<00:03, 61892.35it/s] 61%|██████    | 336095/552076 [00:05<00:03, 62682.57it/s] 62%|██████▏   | 342370/552076 [00:05<00:03, 62050.39it/s] 63%|██████▎   | 348581/552076 [00:05<00:03, 61625.94it/s] 64%|██████▍   | 355207/552076 [00:05<00:03, 61168.82it/s] 65%|██████▌   | 361455/552076 [00:05<00:03, 61294.32it/s] 67%|██████▋   | 367731/552076 [00:06<00:03, 61232.25it/s] 68%|██████▊   | 374135/552076 [00:06<00:02, 61121.86it/s] 69%|██████▉   | 380397/552076 [00:06<00:02, 61063.24it/s] 70%|███████   | 386729/552076 [00:06<00:02, 61723.08it/s] 71%|███████   | 393058/552076 [00:06<00:02, 62183.48it/s] 72%|███████▏  | 399279/552076 [00:06<00:02, 60783.65it/s] 73%|███████▎  | 405376/552076 [00:06<00:02, 60838.84it/s] 75%|███████▍  | 411467/552076 [00:06<00:02, 60705.61it/s] 76%|███████▌  | 417542/552076 [00:06<00:02, 56525.29it/s] 77%|███████▋  | 423256/552076 [00:07<00:02, 55986.85it/s] 78%|███████▊  | 428899/552076 [00:07<00:02, 55198.66it/s] 79%|███████▊  | 434453/552076 [00:07<00:02, 47920.43it/s] 80%|███████▉  | 439440/552076 [00:07<00:02, 44669.96it/s] 80%|████████  | 444088/552076 [00:07<00:02, 40137.48it/s] 81%|████████  | 448315/552076 [00:07<00:02, 36453.15it/s] 82%|████████▏ | 452175/552076 [00:07<00:03, 33035.59it/s] 83%|████████▎ | 455690/552076 [00:07<00:02, 33150.95it/s] 83%|████████▎ | 459154/552076 [00:08<00:03, 30133.54it/s] 84%|████████▍ | 462709/552076 [00:08<00:02, 31576.78it/s] 84%|████████▍ | 465995/552076 [00:08<00:02, 30342.53it/s] 85%|████████▌ | 470910/552076 [00:08<00:02, 34277.04it/s] 86%|████████▌ | 474842/552076 [00:08<00:02, 35648.63it/s] 87%|████████▋ | 478590/552076 [00:08<00:02, 31755.58it/s] 87%|████████▋ | 482270/552076 [00:08<00:02, 31887.54it/s] 88%|████████▊ | 485934/552076 [00:08<00:01, 33177.73it/s] 89%|████████▊ | 489442/552076 [00:08<00:01, 33725.94it/s] 89%|████████▉ | 493923/552076 [00:09<00:01, 36428.83it/s] 90%|█████████ | 499027/552076 [00:09<00:01, 39850.61it/s] 91%|█████████▏| 504717/552076 [00:09<00:01, 43343.44it/s] 93%|█████████▎| 510928/552076 [00:09<00:00, 47663.88it/s] 94%|█████████▎| 516711/552076 [00:09<00:00, 50185.30it/s] 95%|█████████▍| 523076/552076 [00:09<00:00, 53585.68it/s] 96%|█████████▌| 528662/552076 [00:09<00:00, 53636.18it/s] 97%|█████████▋| 534866/552076 [00:09<00:00, 55907.32it/s] 98%|█████████▊| 541074/552076 [00:09<00:00, 56122.03it/s] 99%|█████████▉| 547180/552076 [00:09<00:00, 57516.99it/s]100%|██████████| 552076/552076 [00:10<00:00, 54946.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8336/552076 [00:00<00:06, 83355.11it/s]  3%|▎         | 17589/552076 [00:00<00:06, 85909.50it/s]  4%|▍         | 24577/552076 [00:00<00:06, 79199.52it/s]  6%|▌         | 34252/552076 [00:00<00:06, 83757.33it/s]  8%|▊         | 43712/552076 [00:00<00:05, 86738.92it/s]  9%|▉         | 51119/552076 [00:00<00:06, 81765.79it/s] 11%|█         | 60701/552076 [00:00<00:05, 85528.44it/s] 13%|█▎        | 72476/552076 [00:00<00:05, 93177.34it/s] 15%|█▍        | 82724/552076 [00:00<00:04, 95785.16it/s] 17%|█▋        | 92961/552076 [00:01<00:04, 97669.61it/s] 19%|█▊        | 102666/552076 [00:01<00:04, 93307.30it/s] 21%|██        | 114871/552076 [00:01<00:04, 100399.25it/s] 23%|██▎       | 126721/552076 [00:01<00:04, 105219.99it/s] 25%|██▍       | 137410/552076 [00:01<00:04, 103242.46it/s] 27%|██▋       | 149238/552076 [00:01<00:03, 107335.66it/s] 29%|██▉       | 160101/552076 [00:01<00:03, 107558.40it/s] 31%|███       | 172181/552076 [00:01<00:03, 111213.53it/s] 33%|███▎      | 183398/552076 [00:01<00:03, 105391.41it/s] 35%|███▌      | 194067/552076 [00:02<00:03, 91362.51it/s]  37%|███▋      | 203627/552076 [00:02<00:03, 89141.75it/s] 39%|███▊      | 212850/552076 [00:02<00:04, 84076.66it/s] 40%|████      | 223410/552076 [00:02<00:03, 89552.01it/s] 42%|████▏     | 232656/552076 [00:02<00:03, 87501.17it/s] 44%|████▍     | 242109/552076 [00:02<00:03, 88526.01it/s] 46%|████▌     | 251429/552076 [00:02<00:03, 89877.88it/s] 47%|████▋     | 260529/552076 [00:02<00:03, 86873.43it/s] 49%|████▉     | 270694/552076 [00:02<00:03, 90833.84it/s] 51%|█████     | 279895/552076 [00:02<00:03, 89907.87it/s] 52%|█████▏    | 289619/552076 [00:03<00:02, 91988.37it/s] 55%|█████▍    | 301646/552076 [00:03<00:02, 98970.00it/s] 57%|█████▋    | 313436/552076 [00:03<00:02, 103976.28it/s] 59%|█████▊    | 324041/552076 [00:03<00:02, 98662.08it/s]  61%|██████    | 334857/552076 [00:03<00:02, 101329.76it/s] 63%|██████▎   | 345729/552076 [00:03<00:01, 103437.90it/s] 65%|██████▍   | 357361/552076 [00:03<00:01, 106990.98it/s] 67%|██████▋   | 369064/552076 [00:03<00:01, 109816.65it/s] 69%|██████▉   | 380734/552076 [00:03<00:01, 111792.36it/s] 71%|███████   | 392729/552076 [00:03<00:01, 114118.97it/s] 73%|███████▎  | 404716/552076 [00:04<00:01, 115785.12it/s] 75%|███████▌  | 416434/552076 [00:04<00:01, 116197.97it/s] 78%|███████▊  | 428401/552076 [00:04<00:01, 117215.89it/s] 80%|███████▉  | 440151/552076 [00:04<00:00, 116833.84it/s] 82%|████████▏ | 451855/552076 [00:04<00:00, 106245.08it/s] 84%|████████▍ | 463967/552076 [00:04<00:00, 110307.92it/s] 86%|████████▌ | 475177/552076 [00:04<00:00, 102252.96it/s] 88%|████████▊ | 486421/552076 [00:04<00:00, 105107.48it/s] 90%|█████████ | 497631/552076 [00:04<00:00, 105063.58it/s] 92%|█████████▏| 508271/552076 [00:05<00:00, 102434.34it/s] 94%|█████████▍| 520250/552076 [00:05<00:00, 107087.23it/s] 96%|█████████▋| 532144/552076 [00:05<00:00, 110386.81it/s] 99%|█████████▊| 544242/552076 [00:05<00:00, 113362.33it/s]100%|██████████| 552076/552076 [00:05<00:00, 101408.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7181/552076 [00:00<00:07, 69792.00it/s]  2%|▏         | 11471/552076 [00:00<00:09, 58744.50it/s]  3%|▎         | 15389/552076 [00:00<00:10, 50389.66it/s]  4%|▎         | 19480/552076 [00:00<00:11, 46131.59it/s]  4%|▍         | 24146/552076 [00:00<00:11, 44102.39it/s]  5%|▌         | 28812/552076 [00:00<00:12, 42909.26it/s]  6%|▌         | 33006/552076 [00:00<00:12, 42613.55it/s]  7%|▋         | 38209/552076 [00:00<00:12, 42572.35it/s]  8%|▊         | 42611/552076 [00:00<00:11, 42995.87it/s]  9%|▊         | 47884/552076 [00:01<00:11, 45272.65it/s]  9%|▉         | 52327/552076 [00:01<00:11, 43764.47it/s] 10%|█         | 56784/552076 [00:01<00:11, 44002.05it/s] 11%|█         | 61135/552076 [00:01<00:11, 41831.91it/s] 12%|█▏        | 65673/552076 [00:01<00:11, 41094.11it/s] 13%|█▎        | 71722/552076 [00:01<00:10, 45017.46it/s] 14%|█▍        | 77454/552076 [00:01<00:10, 45737.73it/s] 15%|█▌        | 82836/552076 [00:01<00:09, 47895.09it/s] 16%|█▌        | 88317/552076 [00:01<00:09, 49778.26it/s] 17%|█▋        | 93372/552076 [00:02<00:09, 49747.74it/s] 18%|█▊        | 98401/552076 [00:02<00:09, 45580.51it/s] 19%|█▊        | 103065/552076 [00:02<00:10, 43386.40it/s] 19%|█▉        | 107500/552076 [00:02<00:10, 42463.12it/s] 20%|██        | 111818/552076 [00:02<00:10, 42115.86it/s] 21%|██        | 117147/552076 [00:02<00:09, 44065.80it/s] 22%|██▏       | 122041/552076 [00:02<00:09, 45422.17it/s] 23%|██▎       | 128098/552076 [00:02<00:08, 48437.15it/s] 24%|██▍       | 133034/552076 [00:02<00:09, 45415.07it/s] 25%|██▌       | 138537/552076 [00:03<00:08, 47926.27it/s] 26%|██▌       | 143439/552076 [00:03<00:08, 45925.11it/s] 27%|██▋       | 148126/552076 [00:03<00:09, 43766.46it/s] 28%|██▊       | 152673/552076 [00:03<00:09, 42739.12it/s] 28%|██▊       | 157100/552076 [00:03<00:09, 42097.70it/s] 30%|███       | 165638/552076 [00:03<00:07, 49647.70it/s] 31%|███       | 171181/552076 [00:03<00:07, 50500.39it/s] 32%|███▏      | 177150/552076 [00:03<00:07, 51579.59it/s] 33%|███▎      | 183330/552076 [00:03<00:06, 54272.01it/s] 34%|███▍      | 189477/552076 [00:04<00:06, 56246.76it/s] 36%|███▌      | 196013/552076 [00:04<00:06, 56863.64it/s] 37%|███▋      | 201832/552076 [00:04<00:06, 55463.35it/s] 38%|███▊      | 208015/552076 [00:04<00:06, 57230.66it/s] 39%|███▊      | 213823/552076 [00:04<00:05, 57144.75it/s] 40%|███▉      | 220460/552076 [00:04<00:05, 58520.50it/s] 41%|████      | 226827/552076 [00:04<00:05, 58652.22it/s] 42%|████▏     | 233110/552076 [00:04<00:05, 59845.68it/s] 43%|████▎     | 239371/552076 [00:04<00:05, 60647.97it/s] 44%|████▍     | 245460/552076 [00:04<00:05, 58566.15it/s] 46%|████▌     | 251784/552076 [00:05<00:05, 52161.79it/s] 47%|████▋     | 257453/552076 [00:05<00:05, 51179.33it/s] 48%|████▊     | 263088/552076 [00:05<00:05, 52626.93it/s] 49%|████▉     | 269154/552076 [00:05<00:05, 54803.20it/s] 50%|████▉     | 275213/552076 [00:05<00:05, 55061.35it/s] 51%|█████     | 281481/552076 [00:05<00:04, 55884.60it/s] 52%|█████▏    | 287311/552076 [00:05<00:04, 56327.90it/s] 53%|█████▎    | 293244/552076 [00:05<00:04, 57195.13it/s] 54%|█████▍    | 299322/552076 [00:05<00:04, 58225.29it/s] 55%|█████▌    | 305168/552076 [00:06<00:04, 57706.17it/s] 56%|█████▋    | 310956/552076 [00:06<00:04, 57517.90it/s] 57%|█████▋    | 316720/552076 [00:06<00:04, 57427.76it/s] 58%|█████▊    | 322739/552076 [00:06<00:03, 58228.61it/s] 60%|█████▉    | 328690/552076 [00:06<00:03, 57007.23it/s] 61%|██████    | 334700/552076 [00:06<00:03, 57850.02it/s] 62%|██████▏   | 340643/552076 [00:06<00:03, 58314.73it/s] 63%|██████▎   | 346484/552076 [00:06<00:04, 43411.29it/s] 64%|██████▎   | 351431/552076 [00:07<00:04, 42400.07it/s] 66%|██████▌   | 362244/552076 [00:07<00:03, 51856.35it/s] 68%|██████▊   | 373118/552076 [00:07<00:02, 61508.64it/s] 70%|██████▉   | 383857/552076 [00:07<00:02, 70548.53it/s] 71%|███████▏  | 394266/552076 [00:07<00:02, 78098.19it/s] 73%|███████▎  | 403496/552076 [00:07<00:01, 81876.05it/s] 75%|███████▍  | 413905/552076 [00:07<00:01, 87476.35it/s] 77%|███████▋  | 423475/552076 [00:07<00:01, 76720.45it/s] 79%|███████▉  | 434945/552076 [00:07<00:01, 85180.51it/s] 80%|████████  | 444327/552076 [00:08<00:01, 73522.69it/s] 82%|████████▏ | 455356/552076 [00:08<00:01, 81692.49it/s] 84%|████████▍ | 465529/552076 [00:08<00:00, 86821.94it/s] 86%|████████▋ | 476329/552076 [00:08<00:00, 92248.09it/s] 88%|████████▊ | 487794/552076 [00:08<00:00, 97991.82it/s] 91%|█████████ | 499787/552076 [00:08<00:00, 103680.80it/s] 92%|█████████▏| 510606/552076 [00:08<00:00, 104189.13it/s] 94%|█████████▍| 521342/552076 [00:08<00:00, 88166.70it/s]  97%|█████████▋| 533315/552076 [00:08<00:00, 95736.66it/s] 99%|█████████▉| 545473/552076 [00:09<00:00, 102256.90it/s]100%|██████████| 552076/552076 [00:09<00:00, 60940.93it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10772/552076 [00:00<00:05, 107718.56it/s]  4%|▍         | 22240/552076 [00:00<00:04, 109714.83it/s]  6%|▌         | 31970/552076 [00:00<00:04, 105669.62it/s]  8%|▊         | 42731/552076 [00:00<00:04, 106241.30it/s] 10%|▉         | 54465/552076 [00:00<00:04, 109343.10it/s] 12%|█▏        | 63880/552076 [00:00<00:04, 104292.21it/s] 13%|█▎        | 73121/552076 [00:00<00:06, 72994.97it/s]  15%|█▌        | 84379/552076 [00:00<00:05, 81601.85it/s] 17%|█▋        | 93186/552076 [00:01<00:05, 80781.07it/s] 19%|█▉        | 104545/552076 [00:01<00:05, 88443.25it/s] 21%|██        | 115972/552076 [00:01<00:04, 94875.52it/s] 23%|██▎       | 127830/552076 [00:01<00:04, 100926.40it/s] 25%|██▌       | 139419/552076 [00:01<00:03, 104991.58it/s] 27%|██▋       | 151196/552076 [00:01<00:03, 108523.46it/s] 29%|██▉       | 162334/552076 [00:01<00:04, 82633.31it/s]  31%|███       | 171723/552076 [00:01<00:05, 74504.48it/s] 33%|███▎      | 183077/552076 [00:01<00:04, 83072.29it/s] 35%|███▍      | 192357/552076 [00:02<00:04, 83963.17it/s] 37%|███▋      | 204025/552076 [00:02<00:03, 91674.50it/s] 39%|███▉      | 215840/552076 [00:02<00:03, 98279.64it/s] 41%|████      | 226284/552076 [00:02<00:03, 99483.17it/s] 43%|████▎     | 236667/552076 [00:02<00:03, 82024.74it/s] 45%|████▍     | 245681/552076 [00:02<00:04, 75980.64it/s] 46%|████▌     | 253936/552076 [00:02<00:03, 75695.83it/s] 48%|████▊     | 264163/552076 [00:02<00:03, 82095.10it/s] 50%|████▉     | 274077/552076 [00:03<00:03, 86558.86it/s] 52%|█████▏    | 284584/552076 [00:03<00:02, 91387.77it/s] 54%|█████▎    | 295715/552076 [00:03<00:02, 96571.33it/s] 56%|█████▌    | 306897/552076 [00:03<00:02, 100687.66it/s] 58%|█████▊    | 317493/552076 [00:03<00:02, 102212.13it/s] 59%|█████▉    | 328123/552076 [00:03<00:02, 103402.46it/s] 61%|██████▏   | 339341/552076 [00:03<00:02, 105887.41it/s] 64%|██████▍   | 352445/552076 [00:03<00:01, 112355.88it/s] 66%|██████▌   | 365249/552076 [00:03<00:01, 116639.87it/s] 68%|██████▊   | 377086/552076 [00:03<00:01, 115490.84it/s] 70%|███████   | 388759/552076 [00:04<00:01, 115849.90it/s] 73%|███████▎  | 400431/552076 [00:04<00:01, 115109.98it/s] 75%|███████▍  | 412004/552076 [00:04<00:01, 114100.39it/s] 77%|███████▋  | 424257/552076 [00:04<00:01, 116502.65it/s] 79%|███████▉  | 435952/552076 [00:04<00:01, 115082.19it/s] 81%|████████  | 447512/552076 [00:04<00:00, 115235.44it/s] 83%|████████▎ | 459060/552076 [00:04<00:00, 115182.78it/s] 85%|████████▌ | 471258/552076 [00:04<00:00, 117138.59it/s] 88%|████████▊ | 483292/552076 [00:04<00:00, 118077.70it/s] 90%|████████▉ | 495469/552076 [00:04<00:00, 119158.86it/s] 92%|█████████▏| 507562/552076 [00:05<00:00, 119682.82it/s] 94%|█████████▍| 519851/552076 [00:05<00:00, 120626.36it/s] 96%|█████████▋| 532196/552076 [00:05<00:00, 121458.89it/s] 99%|█████████▊| 544350/552076 [00:05<00:00, 121086.59it/s]100%|██████████| 552076/552076 [00:05<00:00, 102037.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12171/552076 [00:00<00:04, 121701.12it/s]  3%|▎         | 18958/552076 [00:00<00:05, 98305.76it/s]   5%|▌         | 29665/552076 [00:00<00:05, 100780.21it/s]  7%|▋         | 36158/552076 [00:00<00:05, 86458.26it/s]   9%|▊         | 47165/552076 [00:00<00:05, 92403.76it/s] 10%|▉         | 54980/552076 [00:00<00:06, 80350.19it/s] 11%|█▏        | 62299/552076 [00:00<00:06, 73159.33it/s] 13%|█▎        | 74005/552076 [00:00<00:05, 82433.74it/s] 15%|█▌        | 85413/552076 [00:00<00:05, 89915.12it/s] 18%|█▊        | 97101/552076 [00:01<00:04, 96600.15it/s] 20%|█▉        | 108789/552076 [00:01<00:04, 101902.96it/s] 22%|██▏       | 120284/552076 [00:01<00:04, 105493.84it/s] 24%|██▍       | 132253/552076 [00:01<00:03, 109383.72it/s] 26%|██▌       | 144060/552076 [00:01<00:03, 111850.82it/s] 28%|██▊       | 156090/552076 [00:01<00:03, 114256.44it/s] 30%|███       | 168132/552076 [00:01<00:03, 116037.30it/s] 33%|███▎      | 180265/552076 [00:01<00:03, 117574.22it/s] 35%|███▍      | 192456/552076 [00:01<00:03, 118841.59it/s] 37%|███▋      | 204513/552076 [00:01<00:02, 119353.74it/s] 39%|███▉      | 216759/552076 [00:02<00:02, 120268.05it/s] 41%|████▏     | 228815/552076 [00:02<00:02, 117977.07it/s] 44%|████▎     | 240813/552076 [00:02<00:02, 118570.34it/s] 46%|████▌     | 252787/552076 [00:02<00:02, 118916.84it/s] 48%|████▊     | 264904/552076 [00:02<00:02, 119582.62it/s] 50%|█████     | 277174/552076 [00:02<00:02, 120498.40it/s] 52%|█████▏    | 289563/552076 [00:02<00:02, 121495.06it/s] 55%|█████▍    | 301722/552076 [00:02<00:02, 120583.80it/s] 57%|█████▋    | 313789/552076 [00:02<00:01, 119382.74it/s] 59%|█████▉    | 325736/552076 [00:02<00:01, 119400.57it/s] 61%|██████    | 337682/552076 [00:03<00:01, 117277.05it/s] 63%|██████▎   | 349423/552076 [00:03<00:01, 109051.18it/s] 65%|██████▌   | 361409/552076 [00:03<00:01, 112082.57it/s] 68%|██████▊   | 373724/552076 [00:03<00:01, 115187.02it/s] 70%|██████▉   | 385960/552076 [00:03<00:01, 117248.58it/s] 72%|███████▏  | 398188/552076 [00:03<00:01, 118711.46it/s] 74%|███████▍  | 410352/552076 [00:03<00:01, 119573.71it/s] 77%|███████▋  | 422669/552076 [00:03<00:01, 120630.05it/s] 79%|███████▉  | 435015/552076 [00:03<00:00, 121463.05it/s] 81%|████████  | 447185/552076 [00:04<00:00, 118488.02it/s] 83%|████████▎ | 459516/552076 [00:04<00:00, 119892.33it/s] 85%|████████▌ | 471946/552076 [00:04<00:00, 121178.95it/s] 88%|████████▊ | 484298/552076 [00:04<00:00, 121870.38it/s] 90%|████████▉ | 496525/552076 [00:04<00:00, 121987.59it/s] 92%|█████████▏| 508736/552076 [00:04<00:00, 121525.74it/s] 94%|█████████▍| 520898/552076 [00:04<00:00, 120992.78it/s] 97%|█████████▋| 533004/552076 [00:04<00:00, 119917.41it/s] 99%|█████████▊| 545119/552076 [00:04<00:00, 120282.87it/s]100%|██████████| 552076/552076 [00:04<00:00, 113479.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6673/552076 [00:00<00:08, 66726.56it/s]  3%|▎         | 14223/552076 [00:00<00:07, 69135.06it/s]  5%|▍         | 26264/552076 [00:00<00:06, 79259.91it/s]  7%|▋         | 38262/552076 [00:00<00:05, 88243.65it/s]  9%|▉         | 50152/552076 [00:00<00:05, 93798.11it/s] 11%|█         | 59299/552076 [00:00<00:05, 93085.66it/s] 13%|█▎        | 71083/552076 [00:00<00:04, 99346.46it/s] 15%|█▌        | 82904/552076 [00:00<00:04, 104341.10it/s] 17%|█▋        | 93803/552076 [00:00<00:04, 105691.57it/s] 19%|█▉        | 105020/552076 [00:01<00:04, 107554.87it/s] 21%|██        | 115770/552076 [00:01<00:04, 107073.55it/s] 23%|██▎       | 127339/552076 [00:01<00:03, 109517.78it/s] 25%|██▌       | 138307/552076 [00:01<00:03, 109563.29it/s] 27%|██▋       | 150313/552076 [00:01<00:03, 112513.90it/s] 29%|██▉       | 162543/552076 [00:01<00:03, 115279.41it/s] 32%|███▏      | 174106/552076 [00:01<00:03, 114530.90it/s] 34%|███▎      | 186003/552076 [00:01<00:03, 115825.47it/s] 36%|███▌      | 198031/552076 [00:01<00:03, 117125.03it/s] 38%|███▊      | 209762/552076 [00:02<00:03, 92397.72it/s]  40%|████      | 222032/552076 [00:02<00:03, 99789.40it/s] 42%|████▏     | 233940/552076 [00:02<00:03, 104884.65it/s] 44%|████▍     | 245402/552076 [00:02<00:02, 107625.22it/s] 47%|████▋     | 257336/552076 [00:02<00:02, 110890.20it/s] 49%|████▉     | 269267/552076 [00:02<00:02, 113287.46it/s] 51%|█████     | 280839/552076 [00:02<00:02, 113362.04it/s] 53%|█████▎    | 292973/552076 [00:02<00:02, 115641.04it/s] 55%|█████▌    | 304668/552076 [00:02<00:02, 106589.99it/s] 57%|█████▋    | 315558/552076 [00:02<00:02, 101374.93it/s] 59%|█████▉    | 327133/552076 [00:03<00:02, 104971.38it/s] 61%|██████▏   | 338698/552076 [00:03<00:01, 107960.08it/s] 63%|██████▎   | 350443/552076 [00:03<00:01, 110640.42it/s] 66%|██████▌   | 362069/552076 [00:03<00:01, 112267.52it/s] 68%|██████▊   | 373387/552076 [00:03<00:01, 111735.14it/s] 70%|██████▉   | 385385/552076 [00:03<00:01, 114086.37it/s] 72%|███████▏  | 396851/552076 [00:03<00:01, 98546.47it/s]  74%|███████▎  | 407121/552076 [00:03<00:01, 87669.17it/s] 76%|███████▌  | 418265/552076 [00:03<00:01, 93661.67it/s] 78%|███████▊  | 430262/552076 [00:04<00:01, 100256.15it/s] 80%|████████  | 442213/552076 [00:04<00:01, 105347.58it/s] 82%|████████▏ | 453139/552076 [00:04<00:01, 85984.07it/s]  84%|████████▍ | 465163/552076 [00:04<00:00, 94019.29it/s] 86%|████████▌ | 475388/552076 [00:04<00:00, 86827.06it/s] 88%|████████▊ | 484756/552076 [00:04<00:00, 81015.12it/s] 89%|████████▉ | 493416/552076 [00:04<00:00, 73490.23it/s] 91%|█████████ | 501290/552076 [00:05<00:00, 64897.54it/s] 92%|█████████▏| 508332/552076 [00:05<00:00, 64726.02it/s] 94%|█████████▎| 517120/552076 [00:05<00:00, 70280.42it/s] 96%|█████████▌| 529288/552076 [00:05<00:00, 80478.57it/s] 97%|█████████▋| 538145/552076 [00:05<00:00, 80781.69it/s]100%|█████████▉| 550116/552076 [00:05<00:00, 89514.23it/s]100%|██████████| 552076/552076 [00:05<00:00, 99508.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7578/552076 [00:00<00:07, 75774.83it/s]  4%|▎         | 19426/552076 [00:00<00:06, 84961.75it/s]  5%|▌         | 28621/552076 [00:00<00:06, 86943.11it/s]  6%|▋         | 35754/552076 [00:00<00:06, 81585.62it/s]  8%|▊         | 43870/552076 [00:00<00:06, 81456.56it/s] 10%|▉         | 53312/552076 [00:00<00:05, 84579.29it/s] 11%|█         | 61034/552076 [00:00<00:06, 71364.08it/s] 12%|█▏        | 68008/552076 [00:00<00:06, 69767.23it/s] 14%|█▍        | 79516/552076 [00:00<00:05, 79111.62it/s] 16%|█▌        | 87778/552076 [00:01<00:06, 75509.01it/s] 17%|█▋        | 95609/552076 [00:01<00:06, 70763.59it/s] 19%|█▊        | 103151/552076 [00:01<00:06, 72097.69it/s] 20%|██        | 110719/552076 [00:01<00:06, 73134.41it/s] 22%|██▏       | 118721/552076 [00:01<00:05, 75071.73it/s] 23%|██▎       | 127909/552076 [00:01<00:05, 79430.57it/s] 25%|██▌       | 139115/552076 [00:01<00:04, 87031.55it/s] 27%|██▋       | 150630/552076 [00:01<00:04, 93911.11it/s] 29%|██▉       | 162238/552076 [00:01<00:03, 99616.65it/s] 32%|███▏      | 173925/552076 [00:02<00:03, 104231.74it/s] 34%|███▎      | 185480/552076 [00:02<00:03, 107386.10it/s] 36%|███▌      | 197072/552076 [00:02<00:03, 109809.60it/s] 38%|███▊      | 208406/552076 [00:02<00:03, 110844.59it/s] 40%|███▉      | 219986/552076 [00:02<00:02, 112283.48it/s] 42%|████▏     | 231817/552076 [00:02<00:02, 114023.17it/s] 44%|████▍     | 243895/552076 [00:02<00:02, 115967.05it/s] 46%|████▋     | 255615/552076 [00:02<00:02, 116332.09it/s] 48%|████▊     | 267290/552076 [00:02<00:02, 112981.84it/s] 51%|█████     | 278951/552076 [00:02<00:02, 114045.83it/s] 53%|█████▎    | 290640/552076 [00:03<00:02, 114883.67it/s] 55%|█████▍    | 302157/552076 [00:03<00:02, 110256.62it/s] 57%|█████▋    | 313242/552076 [00:03<00:02, 106082.94it/s] 59%|█████▉    | 324634/552076 [00:03<00:02, 108317.60it/s] 61%|██████    | 336271/552076 [00:03<00:01, 110612.58it/s] 63%|██████▎   | 347953/552076 [00:03<00:01, 112403.59it/s] 65%|██████▌   | 359648/552076 [00:03<00:01, 113728.65it/s] 67%|██████▋   | 371437/552076 [00:03<00:01, 114944.71it/s] 69%|██████▉   | 382961/552076 [00:03<00:01, 114246.68it/s] 71%|███████▏  | 394407/552076 [00:03<00:01, 112389.55it/s] 74%|███████▎  | 406259/552076 [00:04<00:01, 114160.53it/s] 76%|███████▌  | 417697/552076 [00:04<00:01, 110858.24it/s] 78%|███████▊  | 428819/552076 [00:04<00:01, 103779.78it/s] 80%|███████▉  | 439315/552076 [00:04<00:01, 94489.25it/s]  82%|████████▏ | 450283/552076 [00:04<00:01, 98584.38it/s] 84%|████████▎ | 461233/552076 [00:04<00:00, 101620.78it/s] 86%|████████▌ | 472102/552076 [00:04<00:00, 103640.69it/s] 87%|████████▋ | 482599/552076 [00:04<00:00, 83122.02it/s]  89%|████████▉ | 491652/552076 [00:05<00:00, 83578.57it/s] 91%|█████████ | 502679/552076 [00:05<00:00, 90122.22it/s] 93%|█████████▎| 514162/552076 [00:05<00:00, 96339.66it/s] 95%|█████████▍| 524273/552076 [00:05<00:00, 95724.21it/s] 97%|█████████▋| 536318/552076 [00:05<00:00, 102004.03it/s] 99%|█████████▉| 548185/552076 [00:05<00:00, 106489.55it/s]100%|██████████| 552076/552076 [00:05<00:00, 99478.69it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5795/552076 [00:00<00:09, 57943.29it/s]  2%|▏         | 11808/552076 [00:00<00:09, 58539.97it/s]  3%|▎         | 18238/552076 [00:00<00:08, 60156.08it/s]  4%|▍         | 24636/552076 [00:00<00:08, 61250.71it/s]  6%|▌         | 31231/552076 [00:00<00:08, 62588.15it/s]  7%|▋         | 37703/552076 [00:00<00:08, 63211.68it/s]  8%|▊         | 44340/552076 [00:00<00:07, 64125.18it/s]  9%|▉         | 51182/552076 [00:00<00:07, 65355.32it/s] 10%|█         | 57822/552076 [00:00<00:07, 65663.56it/s] 12%|█▏        | 64347/552076 [00:01<00:07, 65536.98it/s] 13%|█▎        | 70956/552076 [00:01<00:07, 65701.56it/s] 14%|█▍        | 77417/552076 [00:01<00:07, 65240.47it/s] 15%|█▌        | 84136/552076 [00:01<00:07, 65811.80it/s] 16%|█▋        | 90736/552076 [00:01<00:07, 65866.05it/s] 18%|█▊        | 97287/552076 [00:01<00:07, 64034.42it/s] 19%|█▉        | 103677/552076 [00:01<00:07, 62358.19it/s] 21%|██        | 116802/552076 [00:01<00:05, 74012.17it/s] 23%|██▎       | 128974/552076 [00:01<00:05, 83873.92it/s] 26%|██▌       | 141560/552076 [00:01<00:04, 93200.85it/s] 28%|██▊       | 153770/552076 [00:02<00:03, 100323.14it/s] 30%|███       | 166006/552076 [00:02<00:03, 106051.53it/s] 32%|███▏      | 177337/552076 [00:02<00:03, 94347.88it/s]  34%|███▍      | 189621/552076 [00:02<00:03, 101403.22it/s] 37%|███▋      | 201579/552076 [00:02<00:03, 106245.98it/s] 39%|███▊      | 212735/552076 [00:02<00:03, 107273.95it/s] 41%|████      | 223837/552076 [00:02<00:03, 108274.22it/s] 43%|████▎     | 235988/552076 [00:02<00:02, 111931.55it/s] 45%|████▍     | 247398/552076 [00:02<00:02, 111940.90it/s] 47%|████▋     | 258744/552076 [00:03<00:03, 92526.84it/s]  49%|████▊     | 268662/552076 [00:03<00:03, 92692.46it/s] 51%|█████     | 278887/552076 [00:03<00:02, 95365.26it/s] 52%|█████▏    | 289062/552076 [00:03<00:02, 97192.37it/s] 55%|█████▍    | 301308/552076 [00:03<00:02, 103604.21it/s] 57%|█████▋    | 311961/552076 [00:03<00:02, 94047.70it/s]  59%|█████▊    | 323250/552076 [00:03<00:02, 99004.36it/s] 61%|██████    | 334647/552076 [00:03<00:02, 103063.73it/s] 63%|██████▎   | 346472/552076 [00:03<00:01, 107192.69it/s] 65%|██████▍   | 358578/552076 [00:03<00:01, 111005.64it/s] 67%|██████▋   | 370693/552076 [00:04<00:01, 113864.47it/s] 69%|██████▉   | 382876/552076 [00:04<00:01, 116140.47it/s] 72%|███████▏  | 395682/552076 [00:04<00:01, 119475.97it/s] 74%|███████▍  | 407739/552076 [00:04<00:01, 116979.12it/s] 76%|███████▌  | 419525/552076 [00:04<00:01, 108752.57it/s] 78%|███████▊  | 430578/552076 [00:04<00:01, 102963.69it/s] 81%|████████  | 448238/552076 [00:04<00:00, 117684.30it/s] 85%|████████▌ | 469266/552076 [00:04<00:00, 135596.86it/s] 89%|████████▊ | 489394/552076 [00:04<00:00, 150312.01it/s] 92%|█████████▏| 507056/552076 [00:05<00:00, 157342.14it/s] 95%|█████████▌| 527016/552076 [00:05<00:00, 168012.74it/s] 99%|█████████▊| 545157/552076 [00:05<00:00, 171815.99it/s]100%|██████████| 552076/552076 [00:05<00:00, 104393.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18743/552076 [00:00<00:02, 187423.48it/s]  7%|▋         | 39643/552076 [00:00<00:02, 193412.99it/s] 11%|█         | 59325/552076 [00:00<00:02, 194421.05it/s] 14%|█▍        | 76430/552076 [00:00<00:02, 186764.89it/s] 16%|█▋        | 90696/552076 [00:00<00:03, 147940.55it/s] 19%|█▉        | 103671/552076 [00:00<00:03, 132920.88it/s] 22%|██▏       | 118952/552076 [00:00<00:03, 138320.60it/s] 25%|██▌       | 139801/552076 [00:00<00:02, 153853.85it/s] 29%|██▉       | 161123/552076 [00:00<00:02, 167874.46it/s] 33%|███▎      | 183272/552076 [00:01<00:02, 181018.44it/s] 37%|███▋      | 201986/552076 [00:01<00:02, 159029.37it/s] 40%|████      | 222531/552076 [00:01<00:01, 170591.63it/s] 44%|████▍     | 244021/552076 [00:01<00:01, 181837.58it/s] 48%|████▊     | 266350/552076 [00:01<00:01, 192561.18it/s] 52%|█████▏    | 288676/552076 [00:01<00:01, 200845.13it/s] 56%|█████▌    | 309840/552076 [00:01<00:01, 203965.94it/s] 60%|█████▉    | 330705/552076 [00:01<00:01, 205346.96it/s] 64%|██████▍   | 353085/552076 [00:01<00:00, 210554.88it/s] 68%|██████▊   | 374829/552076 [00:02<00:00, 212572.62it/s] 72%|███████▏  | 396267/552076 [00:02<00:00, 201468.96it/s] 75%|███████▌  | 416661/552076 [00:02<00:00, 186903.21it/s] 79%|███████▉  | 438138/552076 [00:02<00:00, 194473.11it/s] 83%|████████▎ | 460356/552076 [00:02<00:00, 202030.00it/s] 88%|████████▊ | 483151/552076 [00:02<00:00, 209162.78it/s] 91%|█████████▏| 504355/552076 [00:02<00:00, 197161.83it/s] 95%|█████████▍| 524414/552076 [00:02<00:00, 179760.59it/s] 98%|█████████▊| 542927/552076 [00:02<00:00, 180469.96it/s]100%|██████████| 552076/552076 [00:02<00:00, 185801.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14714/552076 [00:00<00:03, 147134.88it/s]  6%|▋         | 34777/552076 [00:00<00:03, 159926.00it/s]  9%|▉         | 51578/552076 [00:00<00:03, 162267.69it/s] 12%|█▏        | 64182/552076 [00:00<00:03, 149382.89it/s] 15%|█▍        | 80870/552076 [00:00<00:03, 154233.48it/s] 18%|█▊        | 101408/552076 [00:00<00:02, 166684.66it/s] 22%|██▏       | 121412/552076 [00:00<00:02, 175460.29it/s] 26%|██▌       | 141911/552076 [00:00<00:02, 183383.47it/s] 29%|██▉       | 159824/552076 [00:00<00:02, 170636.05it/s] 32%|███▏      | 177723/552076 [00:01<00:02, 173058.05it/s] 36%|███▌      | 198268/552076 [00:01<00:01, 181649.73it/s] 40%|███▉      | 218316/552076 [00:01<00:01, 186915.93it/s] 43%|████▎     | 238008/552076 [00:01<00:01, 189808.56it/s] 47%|████▋     | 258140/552076 [00:01<00:01, 193119.55it/s] 51%|█████     | 278940/552076 [00:01<00:01, 197354.47it/s] 54%|█████▍    | 298862/552076 [00:01<00:01, 197910.37it/s] 58%|█████▊    | 318700/552076 [00:01<00:01, 194090.07it/s] 61%|██████▏   | 338158/552076 [00:01<00:01, 189029.98it/s] 65%|██████▍   | 357125/552076 [00:01<00:01, 175481.25it/s] 68%|██████▊   | 374912/552076 [00:02<00:01, 162707.54it/s] 71%|███████   | 391536/552076 [00:02<00:00, 162944.63it/s] 75%|███████▍  | 411723/552076 [00:02<00:00, 172948.88it/s] 78%|███████▊  | 432086/552076 [00:02<00:00, 181134.22it/s] 82%|████████▏ | 452807/552076 [00:02<00:00, 188239.52it/s] 86%|████████▌ | 472829/552076 [00:02<00:00, 191680.03it/s] 89%|████████▉ | 492229/552076 [00:02<00:00, 191185.91it/s] 93%|█████████▎| 512188/552076 [00:02<00:00, 193629.65it/s] 96%|█████████▋| 531673/552076 [00:02<00:00, 174042.29it/s]100%|██████████| 552076/552076 [00:03<00:00, 182225.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20739/552076 [00:00<00:02, 207384.26it/s]  8%|▊         | 41462/552076 [00:00<00:02, 207336.68it/s] 10%|█         | 57331/552076 [00:00<00:02, 189870.27it/s] 13%|█▎        | 69492/552076 [00:00<00:03, 140818.84it/s] 15%|█▍        | 80641/552076 [00:00<00:04, 108246.00it/s] 16%|█▋        | 90554/552076 [00:00<00:04, 101261.83it/s] 18%|█▊        | 100859/552076 [00:00<00:04, 101788.38it/s] 20%|██        | 110656/552076 [00:00<00:04, 95040.36it/s]  23%|██▎       | 126114/552076 [00:01<00:03, 107456.91it/s] 26%|██▌       | 143928/552076 [00:01<00:03, 121975.28it/s] 29%|██▉       | 161480/552076 [00:01<00:02, 134259.68it/s] 32%|███▏      | 175958/552076 [00:01<00:03, 112888.91it/s] 34%|███▍      | 188562/552076 [00:01<00:03, 102534.49it/s] 36%|███▌      | 199919/552076 [00:01<00:03, 98584.28it/s]  39%|███▉      | 215380/552076 [00:01<00:03, 110607.42it/s] 42%|████▏     | 233576/552076 [00:01<00:02, 125353.60it/s] 46%|████▌     | 253736/552076 [00:01<00:02, 141395.28it/s] 49%|████▉     | 269535/552076 [00:02<00:01, 145146.47it/s] 52%|█████▏    | 285236/552076 [00:02<00:01, 136104.05it/s] 54%|█████▍    | 299792/552076 [00:02<00:02, 118021.69it/s] 57%|█████▋    | 312684/552076 [00:02<00:02, 116512.67it/s] 59%|█████▉    | 325103/552076 [00:02<00:01, 116576.09it/s] 61%|██████    | 337567/552076 [00:02<00:01, 118881.54it/s] 63%|██████▎   | 350049/552076 [00:02<00:01, 120600.84it/s] 66%|██████▌   | 362491/552076 [00:02<00:01, 121721.43it/s] 68%|██████▊   | 374860/552076 [00:03<00:01, 120199.12it/s] 71%|███████   | 390775/552076 [00:03<00:01, 129723.02it/s] 74%|███████▎  | 406643/552076 [00:03<00:01, 137234.15it/s] 77%|███████▋  | 424015/552076 [00:03<00:00, 146462.41it/s] 80%|████████  | 441835/552076 [00:03<00:00, 154728.16it/s] 83%|████████▎ | 458501/552076 [00:03<00:00, 158122.81it/s] 86%|████████▌ | 474620/552076 [00:03<00:00, 157929.37it/s] 89%|████████▉ | 491026/552076 [00:03<00:00, 159718.28it/s] 92%|█████████▏| 507153/552076 [00:03<00:00, 148824.11it/s] 95%|█████████▍| 523853/552076 [00:03<00:00, 153846.55it/s] 98%|█████████▊| 541870/552076 [00:04<00:00, 160898.85it/s]100%|██████████| 552076/552076 [00:04<00:00, 135039.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6873/552076 [00:00<00:07, 68725.97it/s]  2%|▏         | 12671/552076 [00:00<00:08, 65105.77it/s]  4%|▎         | 19756/552076 [00:00<00:07, 66726.98it/s]  5%|▌         | 27997/552076 [00:00<00:07, 70765.94it/s]  7%|▋         | 39674/552076 [00:00<00:06, 80250.49it/s]  9%|▉         | 50786/552076 [00:00<00:05, 87546.20it/s] 11%|█         | 59277/552076 [00:00<00:05, 83114.15it/s] 13%|█▎        | 70835/552076 [00:00<00:05, 90762.24it/s] 15%|█▌        | 83273/552076 [00:00<00:04, 98769.47it/s] 17%|█▋        | 95958/552076 [00:01<00:04, 105793.58it/s] 20%|█▉        | 108192/552076 [00:01<00:04, 110267.63it/s] 22%|██▏       | 120725/552076 [00:01<00:03, 114390.06it/s] 24%|██▍       | 133081/552076 [00:01<00:03, 116994.75it/s] 26%|██▋       | 145545/552076 [00:01<00:03, 119187.95it/s] 29%|██▊       | 157602/552076 [00:01<00:03, 118801.88it/s] 31%|███       | 170181/552076 [00:01<00:03, 120813.20it/s] 33%|███▎      | 183276/552076 [00:01<00:02, 123683.23it/s] 36%|███▌      | 196582/552076 [00:01<00:02, 126354.28it/s] 38%|███▊      | 209281/552076 [00:01<00:02, 126242.93it/s] 40%|████      | 222713/552076 [00:02<00:02, 128561.95it/s] 43%|████▎     | 235611/552076 [00:02<00:02, 125707.18it/s] 45%|████▍     | 248225/552076 [00:02<00:02, 122600.35it/s] 47%|████▋     | 260533/552076 [00:02<00:02, 115582.06it/s] 49%|████▉     | 272207/552076 [00:02<00:02, 112879.81it/s] 51%|█████▏    | 283623/552076 [00:02<00:02, 113260.40it/s] 53%|█████▎    | 295016/552076 [00:02<00:02, 109189.01it/s] 56%|█████▌    | 307387/552076 [00:02<00:02, 113173.67it/s] 58%|█████▊    | 319217/552076 [00:02<00:02, 114663.54it/s] 60%|█████▉    | 330753/552076 [00:02<00:01, 110880.53it/s] 62%|██████▏   | 341917/552076 [00:03<00:01, 106600.05it/s] 64%|██████▍   | 352666/552076 [00:03<00:01, 104131.51it/s] 66%|██████▋   | 366913/552076 [00:03<00:01, 113275.26it/s] 70%|███████   | 386969/552076 [00:03<00:01, 130284.77it/s] 74%|███████▍  | 408202/552076 [00:03<00:00, 147367.29it/s] 78%|███████▊  | 430271/552076 [00:03<00:00, 163679.98it/s] 82%|████████▏ | 452386/552076 [00:03<00:00, 177519.26it/s] 86%|████████▌ | 473696/552076 [00:03<00:00, 186877.71it/s] 89%|████████▉ | 493559/552076 [00:03<00:00, 187178.42it/s] 93%|█████████▎| 513100/552076 [00:04<00:00, 175893.43it/s] 97%|█████████▋| 535432/552076 [00:04<00:00, 187861.61it/s]100%|██████████| 552076/552076 [00:04<00:00, 130890.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20776/552076 [00:00<00:02, 207753.26it/s]  6%|▋         | 35445/552076 [00:00<00:02, 184684.47it/s] 10%|▉         | 53122/552076 [00:00<00:02, 182235.01it/s] 14%|█▍        | 76038/552076 [00:00<00:02, 194162.04it/s] 18%|█▊        | 98578/552076 [00:00<00:02, 202583.86it/s] 22%|██▏       | 120543/552076 [00:00<00:02, 207418.38it/s] 26%|██▌       | 141147/552076 [00:00<00:01, 207001.21it/s] 29%|██▉       | 162234/552076 [00:00<00:01, 208145.00it/s] 33%|███▎      | 183570/552076 [00:00<00:01, 209677.59it/s] 37%|███▋      | 205101/552076 [00:01<00:01, 211332.32it/s] 41%|████      | 225730/552076 [00:01<00:01, 206644.76it/s] 45%|████▍     | 247534/552076 [00:01<00:01, 209933.73it/s] 49%|████▉     | 269751/552076 [00:01<00:01, 213459.74it/s] 53%|█████▎    | 292677/552076 [00:01<00:01, 217964.74it/s] 57%|█████▋    | 314400/552076 [00:01<00:01, 213420.68it/s] 61%|██████    | 337090/552076 [00:01<00:00, 217290.94it/s] 65%|██████▌   | 359919/552076 [00:01<00:00, 220475.97it/s] 69%|██████▉   | 382522/552076 [00:01<00:00, 222112.90it/s] 73%|███████▎  | 404742/552076 [00:01<00:00, 218566.35it/s] 77%|███████▋  | 426835/552076 [00:02<00:00, 219266.60it/s] 81%|████████▏ | 449355/552076 [00:02<00:00, 221011.57it/s] 85%|████████▌ | 471518/552076 [00:02<00:00, 221193.48it/s] 89%|████████▉ | 493647/552076 [00:02<00:00, 192110.47it/s] 93%|█████████▎| 515955/552076 [00:02<00:00, 200458.11it/s] 98%|█████████▊| 539054/552076 [00:02<00:00, 208733.23it/s]100%|██████████| 552076/552076 [00:02<00:00, 210113.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18353/552076 [00:00<00:02, 183526.67it/s]  5%|▌         | 28207/552076 [00:00<00:03, 145799.61it/s]  9%|▉         | 48838/552076 [00:00<00:03, 159865.84it/s] 13%|█▎        | 71275/552076 [00:00<00:02, 174953.98it/s] 17%|█▋        | 92804/552076 [00:00<00:02, 185371.70it/s] 21%|██        | 114818/552076 [00:00<00:02, 194589.52it/s] 25%|██▍       | 136643/552076 [00:00<00:02, 201130.29it/s] 29%|██▉       | 159828/552076 [00:00<00:01, 209454.75it/s] 33%|███▎      | 182997/552076 [00:00<00:01, 215661.97it/s] 37%|███▋      | 205817/552076 [00:01<00:01, 219275.60it/s] 41%|████      | 227548/552076 [00:01<00:01, 218666.67it/s] 45%|████▌     | 249533/552076 [00:01<00:01, 219020.08it/s] 49%|████▉     | 271618/552076 [00:01<00:01, 219565.62it/s] 53%|█████▎    | 293942/552076 [00:01<00:01, 220654.61it/s] 57%|█████▋    | 316325/552076 [00:01<00:01, 221597.00it/s] 61%|██████▏   | 339142/552076 [00:01<00:00, 223525.88it/s] 66%|██████▌   | 362072/552076 [00:01<00:00, 225226.78it/s] 70%|██████▉   | 384586/552076 [00:01<00:00, 223923.96it/s] 74%|███████▎  | 406974/552076 [00:01<00:00, 221240.27it/s] 78%|███████▊  | 429102/552076 [00:02<00:00, 221045.00it/s] 82%|████████▏ | 451398/552076 [00:02<00:00, 221615.00it/s] 86%|████████▌ | 474196/552076 [00:02<00:00, 223484.11it/s] 90%|████████▉ | 496550/552076 [00:02<00:00, 223063.06it/s] 94%|█████████▍| 519361/552076 [00:02<00:00, 224553.28it/s] 98%|█████████▊| 541822/552076 [00:02<00:00, 224198.07it/s]100%|██████████| 552076/552076 [00:02<00:00, 216135.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19821/552076 [00:00<00:02, 198204.99it/s]  8%|▊         | 42438/552076 [00:00<00:02, 205839.64it/s] 12%|█▏        | 65407/552076 [00:00<00:02, 212457.44it/s] 16%|█▌        | 88664/552076 [00:00<00:02, 218115.40it/s] 20%|██        | 111029/552076 [00:00<00:02, 219745.17it/s] 24%|██▍       | 134406/552076 [00:00<00:01, 223770.75it/s] 29%|██▊       | 157873/552076 [00:00<00:01, 226931.37it/s] 33%|███▎      | 181402/552076 [00:00<00:01, 229374.40it/s] 37%|███▋      | 204034/552076 [00:00<00:01, 228448.04it/s] 41%|████      | 227506/552076 [00:01<00:01, 230291.46it/s] 45%|████▌     | 250499/552076 [00:01<00:01, 230182.15it/s] 49%|████▉     | 273146/552076 [00:01<00:01, 226504.41it/s] 54%|█████▎    | 295550/552076 [00:01<00:01, 222983.46it/s] 58%|█████▊    | 317688/552076 [00:01<00:01, 217994.16it/s] 61%|██████▏   | 339400/552076 [00:01<00:00, 216928.83it/s] 65%|██████▌   | 361540/552076 [00:01<00:00, 218250.70it/s] 69%|██████▉   | 383325/552076 [00:01<00:00, 214562.16it/s] 73%|███████▎  | 405699/552076 [00:01<00:00, 217232.36it/s] 77%|███████▋  | 427421/552076 [00:01<00:00, 214380.06it/s] 81%|████████▏ | 449875/552076 [00:02<00:00, 217329.33it/s] 85%|████████▌ | 471623/552076 [00:02<00:00, 216278.78it/s] 90%|████████▉ | 494937/552076 [00:02<00:00, 221073.50it/s] 94%|█████████▍| 517633/552076 [00:02<00:00, 222806.26it/s] 98%|█████████▊| 540038/552076 [00:02<00:00, 223174.97it/s]100%|██████████| 552076/552076 [00:02<00:00, 222720.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21005/552076 [00:00<00:02, 210046.19it/s]  8%|▊         | 43595/552076 [00:00<00:02, 214561.53it/s] 12%|█▏        | 66933/552076 [00:00<00:02, 219879.24it/s] 16%|█▌        | 89533/552076 [00:00<00:02, 221676.70it/s] 20%|██        | 112417/552076 [00:00<00:01, 223777.12it/s] 25%|██▍       | 135985/552076 [00:00<00:01, 227217.05it/s] 29%|██▉       | 159773/552076 [00:00<00:01, 230312.82it/s] 33%|███▎      | 182391/552076 [00:00<00:01, 229056.60it/s] 37%|███▋      | 205143/552076 [00:00<00:01, 228591.21it/s] 41%|████▏     | 227874/552076 [00:01<00:01, 228201.96it/s] 45%|████▌     | 250700/552076 [00:01<00:01, 228217.31it/s] 50%|████▉     | 273659/552076 [00:01<00:01, 228626.48it/s] 54%|█████▎    | 296386/552076 [00:01<00:01, 228216.59it/s] 58%|█████▊    | 319009/552076 [00:01<00:01, 226957.83it/s] 62%|██████▏   | 342279/552076 [00:01<00:00, 228649.45it/s] 66%|██████▋   | 365816/552076 [00:01<00:00, 230622.28it/s] 70%|███████   | 388817/552076 [00:01<00:00, 229329.88it/s] 75%|███████▍  | 411709/552076 [00:01<00:00, 227644.37it/s] 79%|███████▉  | 435321/552076 [00:01<00:00, 230121.09it/s] 83%|████████▎ | 458322/552076 [00:02<00:00, 193420.24it/s] 87%|████████▋ | 478652/552076 [00:02<00:00, 162837.16it/s] 90%|████████▉ | 496451/552076 [00:02<00:00, 148361.45it/s] 93%|█████████▎| 512597/552076 [00:02<00:00, 136969.71it/s] 96%|█████████▌| 527384/552076 [00:02<00:00, 132558.78it/s] 98%|█████████▊| 541434/552076 [00:02<00:00, 129203.04it/s]100%|██████████| 552076/552076 [00:02<00:00, 194115.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5051/552076 [00:00<00:11, 47382.93it/s]  3%|▎         | 16688/552076 [00:00<00:09, 57632.71it/s]  5%|▌         | 28501/552076 [00:00<00:07, 67709.54it/s]  7%|▋         | 37655/552076 [00:00<00:07, 73444.83it/s]  9%|▉         | 49303/552076 [00:00<00:06, 82598.88it/s] 11%|█         | 61021/552076 [00:00<00:05, 90621.26it/s] 13%|█▎        | 71441/552076 [00:00<00:05, 94308.13it/s] 15%|█▍        | 81260/552076 [00:00<00:05, 83305.54it/s] 17%|█▋        | 92949/552076 [00:00<00:05, 91161.96it/s] 19%|█▉        | 104416/552076 [00:01<00:04, 97135.38it/s] 21%|██        | 114641/552076 [00:01<00:04, 90053.18it/s] 22%|██▏       | 124108/552076 [00:01<00:04, 87251.66it/s] 24%|██▍       | 134321/552076 [00:01<00:04, 91238.92it/s] 26%|██▌       | 143752/552076 [00:01<00:04, 92138.03it/s] 28%|██▊       | 153169/552076 [00:01<00:04, 90702.05it/s] 29%|██▉       | 162387/552076 [00:01<00:04, 87775.74it/s] 31%|███       | 172145/552076 [00:01<00:04, 90501.88it/s] 33%|███▎      | 181303/552076 [00:01<00:04, 82929.82it/s] 34%|███▍      | 189796/552076 [00:02<00:04, 81762.54it/s] 36%|███▌      | 199088/552076 [00:02<00:04, 84816.44it/s] 38%|███▊      | 211113/552076 [00:02<00:03, 93039.53it/s] 40%|████      | 223102/552076 [00:02<00:03, 98667.21it/s] 42%|████▏     | 234497/552076 [00:02<00:03, 102803.06it/s] 45%|████▍     | 246749/552076 [00:02<00:02, 108017.83it/s] 47%|████▋     | 258771/552076 [00:02<00:02, 111409.74it/s] 49%|████▉     | 271263/552076 [00:02<00:02, 115145.34it/s] 51%|█████▏    | 283881/552076 [00:02<00:02, 118245.52it/s] 54%|█████▎    | 295968/552076 [00:02<00:02, 119020.26it/s] 56%|█████▌    | 308125/552076 [00:03<00:02, 119771.89it/s] 58%|█████▊    | 320403/552076 [00:03<00:01, 120657.58it/s] 60%|██████    | 332730/552076 [00:03<00:01, 121428.95it/s] 62%|██████▏   | 345027/552076 [00:03<00:01, 121885.42it/s] 65%|██████▍   | 357243/552076 [00:03<00:01, 121908.41it/s] 67%|██████▋   | 369453/552076 [00:03<00:01, 121473.24it/s] 69%|██████▉   | 381614/552076 [00:03<00:01, 121138.53it/s] 71%|███████▏  | 393738/552076 [00:03<00:01, 119262.89it/s] 73%|███████▎  | 405751/552076 [00:03<00:01, 119519.27it/s] 76%|███████▌  | 418035/552076 [00:03<00:01, 120494.83it/s] 78%|███████▊  | 430334/552076 [00:04<00:01, 121230.84it/s] 80%|████████  | 442465/552076 [00:04<00:00, 120606.20it/s] 82%|████████▏ | 454673/552076 [00:04<00:00, 121042.13it/s] 85%|████████▍ | 467140/552076 [00:04<00:00, 122106.37it/s] 87%|████████▋ | 479374/552076 [00:04<00:00, 122173.87it/s] 89%|████████▉ | 491596/552076 [00:04<00:00, 110780.19it/s] 91%|█████████ | 502881/552076 [00:04<00:00, 102818.89it/s] 93%|█████████▎| 514829/552076 [00:04<00:00, 107307.78it/s] 95%|█████████▌| 526900/552076 [00:04<00:00, 111004.42it/s] 97%|█████████▋| 538196/552076 [00:05<00:00, 110101.04it/s]100%|█████████▉| 550253/552076 [00:05<00:00, 113045.39it/s]100%|██████████| 552076/552076 [00:05<00:00, 106853.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7125/552076 [00:00<00:07, 71246.50it/s]  3%|▎         | 17380/552076 [00:00<00:06, 78427.19it/s]  5%|▌         | 29323/552076 [00:00<00:05, 87431.27it/s]  8%|▊         | 41423/552076 [00:00<00:05, 95367.58it/s] 10%|▉         | 53815/552076 [00:00<00:04, 102447.63it/s] 12%|█▏        | 66282/552076 [00:00<00:04, 108233.72it/s] 14%|█▍        | 77277/552076 [00:00<00:04, 108292.61it/s] 16%|█▌        | 87844/552076 [00:00<00:04, 100932.56it/s] 18%|█▊        | 100173/552076 [00:00<00:04, 106739.30it/s] 20%|██        | 112216/552076 [00:01<00:03, 110505.76it/s] 23%|██▎       | 124442/552076 [00:01<00:03, 113786.87it/s] 25%|██▍       | 136543/552076 [00:01<00:03, 115859.82it/s] 27%|██▋       | 148665/552076 [00:01<00:03, 117416.16it/s] 29%|██▉       | 160875/552076 [00:01<00:03, 118782.51it/s] 31%|███▏      | 173143/552076 [00:01<00:03, 119925.46it/s] 34%|███▎      | 185407/552076 [00:01<00:03, 120724.77it/s] 36%|███▌      | 197500/552076 [00:01<00:02, 120173.31it/s] 38%|███▊      | 209532/552076 [00:01<00:03, 102487.69it/s] 40%|████      | 221227/552076 [00:01<00:03, 106435.33it/s] 42%|████▏     | 232612/552076 [00:02<00:02, 108553.96it/s] 44%|████▍     | 243732/552076 [00:02<00:02, 102843.43it/s] 46%|████▋     | 255792/552076 [00:02<00:02, 107595.63it/s] 49%|████▊     | 268133/552076 [00:02<00:02, 111896.51it/s] 51%|█████     | 280317/552076 [00:02<00:02, 114703.20it/s] 53%|█████▎    | 292777/552076 [00:02<00:02, 117501.42it/s] 55%|█████▌    | 305139/552076 [00:02<00:02, 119271.81it/s] 57%|█████▋    | 317164/552076 [00:02<00:01, 119280.47it/s] 60%|█████▉    | 329161/552076 [00:02<00:01, 116931.66it/s] 62%|██████▏   | 340913/552076 [00:03<00:01, 116208.90it/s] 64%|██████▍   | 352878/552076 [00:03<00:01, 117219.97it/s] 66%|██████▌   | 364927/552076 [00:03<00:01, 118181.48it/s] 68%|██████▊   | 377214/552076 [00:03<00:01, 119547.90it/s] 70%|███████   | 389190/552076 [00:03<00:01, 119409.66it/s] 73%|███████▎  | 401388/552076 [00:03<00:01, 120167.57it/s] 75%|███████▌  | 414517/552076 [00:03<00:01, 123299.06it/s] 77%|███████▋  | 427070/552076 [00:03<00:01, 123957.56it/s] 80%|███████▉  | 439487/552076 [00:03<00:00, 122580.78it/s] 82%|████████▏ | 451763/552076 [00:03<00:00, 102163.04it/s] 84%|████████▍ | 463607/552076 [00:04<00:00, 106555.18it/s] 86%|████████▌ | 474721/552076 [00:04<00:00, 98478.31it/s]  88%|████████▊ | 485015/552076 [00:04<00:00, 99773.28it/s] 90%|████████▉ | 495306/552076 [00:04<00:00, 88061.53it/s] 92%|█████████▏| 505711/552076 [00:04<00:00, 91560.76it/s] 93%|█████████▎| 515233/552076 [00:04<00:00, 80776.48it/s] 95%|█████████▍| 523800/552076 [00:04<00:00, 78375.12it/s] 97%|█████████▋| 535927/552076 [00:04<00:00, 87677.63it/s] 99%|█████████▉| 547679/552076 [00:05<00:00, 94907.70it/s]100%|██████████| 552076/552076 [00:05<00:00, 108671.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5461/552076 [00:00<00:10, 54609.40it/s]  3%|▎         | 15445/552076 [00:00<00:08, 63197.78it/s]  5%|▌         | 28263/552076 [00:00<00:07, 74532.52it/s]  7%|▋         | 41234/552076 [00:00<00:05, 85435.20it/s] 10%|▉         | 53319/552076 [00:00<00:05, 93669.59it/s] 12%|█▏        | 64907/552076 [00:00<00:04, 99383.86it/s] 14%|█▎        | 75656/552076 [00:00<00:04, 101683.01it/s] 16%|█▌        | 87504/552076 [00:00<00:04, 106199.23it/s] 18%|█▊        | 99396/552076 [00:00<00:04, 109719.54it/s] 20%|██        | 111132/552076 [00:01<00:03, 111904.63it/s] 22%|██▏       | 123296/552076 [00:01<00:03, 114656.08it/s] 25%|██▍       | 135526/552076 [00:01<00:03, 116844.65it/s] 27%|██▋       | 148127/552076 [00:01<00:03, 119451.09it/s] 29%|██▉       | 160894/552076 [00:01<00:03, 121801.17it/s] 31%|███▏      | 173138/552076 [00:01<00:03, 114889.51it/s] 33%|███▎      | 184753/552076 [00:01<00:04, 82781.78it/s]  35%|███▌      | 194387/552076 [00:01<00:04, 76683.43it/s] 37%|███▋      | 203094/552076 [00:02<00:04, 73249.92it/s] 38%|███▊      | 211179/552076 [00:02<00:04, 71856.05it/s] 40%|███▉      | 218902/552076 [00:02<00:04, 70872.18it/s] 41%|████      | 226369/552076 [00:02<00:04, 70358.54it/s] 42%|████▏     | 233672/552076 [00:02<00:04, 69857.37it/s] 44%|████▎     | 240845/552076 [00:02<00:04, 69572.01it/s] 45%|████▍     | 247934/552076 [00:02<00:04, 69365.86it/s] 46%|████▌     | 254963/552076 [00:02<00:04, 69163.91it/s] 47%|████▋     | 261944/552076 [00:02<00:04, 63277.51it/s] 49%|████▊     | 268415/552076 [00:03<00:05, 53624.37it/s] 50%|████▉     | 275835/552076 [00:03<00:04, 58489.71it/s] 52%|█████▏    | 287006/552076 [00:03<00:03, 67652.24it/s] 54%|█████▍    | 297660/552076 [00:03<00:03, 75970.47it/s] 56%|█████▌    | 308272/552076 [00:03<00:02, 83047.18it/s] 58%|█████▊    | 318803/552076 [00:03<00:02, 88669.65it/s] 60%|█████▉    | 329339/552076 [00:03<00:02, 93092.49it/s] 62%|██████▏   | 339963/552076 [00:03<00:02, 96680.97it/s] 64%|██████▎   | 350705/552076 [00:03<00:02, 99668.36it/s] 65%|██████▌   | 361425/552076 [00:03<00:01, 101811.67it/s] 67%|██████▋   | 371835/552076 [00:04<00:02, 76146.30it/s]  69%|██████▉   | 383079/552076 [00:04<00:02, 84310.46it/s] 71%|███████   | 392560/552076 [00:04<00:01, 81008.22it/s] 73%|███████▎  | 401949/552076 [00:04<00:01, 84485.64it/s] 75%|███████▍  | 413761/552076 [00:04<00:01, 92375.12it/s] 77%|███████▋  | 426041/552076 [00:04<00:01, 99790.42it/s] 79%|███████▉  | 438072/552076 [00:04<00:01, 105170.03it/s] 82%|████████▏ | 450053/552076 [00:04<00:00, 109169.81it/s] 84%|████████▎ | 462105/552076 [00:05<00:00, 112343.82it/s] 86%|████████▌ | 473636/552076 [00:05<00:00, 80010.20it/s]  88%|████████▊ | 483144/552076 [00:05<00:00, 78608.69it/s] 89%|████████▉ | 492065/552076 [00:05<00:00, 76633.63it/s] 91%|█████████ | 500482/552076 [00:05<00:00, 74040.02it/s] 93%|█████████▎| 512574/552076 [00:05<00:00, 83784.37it/s] 95%|█████████▌| 524682/552076 [00:05<00:00, 92313.62it/s] 97%|█████████▋| 536116/552076 [00:05<00:00, 97974.04it/s] 99%|█████████▉| 547692/552076 [00:06<00:00, 102707.34it/s]100%|██████████| 552076/552076 [00:06<00:00, 90816.10it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8128/552076 [00:00<00:06, 78742.80it/s]  3%|▎         | 15399/552076 [00:00<00:07, 75104.48it/s]  4%|▍         | 22861/552076 [00:00<00:07, 74957.10it/s]  6%|▌         | 32978/552076 [00:00<00:06, 81274.43it/s]  8%|▊         | 44884/552076 [00:00<00:05, 89826.21it/s] 10%|█         | 56774/552076 [00:00<00:05, 96935.44it/s] 12%|█▏        | 68916/552076 [00:00<00:04, 103175.22it/s] 14%|█▍        | 79270/552076 [00:00<00:04, 103282.64it/s] 16%|█▌        | 89577/552076 [00:00<00:04, 103218.71it/s] 18%|█▊        | 99787/552076 [00:01<00:05, 87860.44it/s]  20%|██        | 111619/552076 [00:01<00:04, 95213.46it/s] 22%|██▏       | 123511/552076 [00:01<00:04, 101269.14it/s] 25%|██▍       | 135531/552076 [00:01<00:03, 106288.91it/s] 27%|██▋       | 146496/552076 [00:01<00:04, 97366.09it/s]  28%|██▊       | 156614/552076 [00:01<00:04, 94746.52it/s] 30%|███       | 166371/552076 [00:01<00:04, 84194.81it/s] 33%|███▎      | 180141/552076 [00:01<00:03, 95304.04it/s] 34%|███▍      | 190457/552076 [00:01<00:03, 95182.98it/s] 36%|███▋      | 200525/552076 [00:02<00:03, 94332.84it/s] 38%|███▊      | 212231/552076 [00:02<00:03, 100165.73it/s] 40%|████      | 223175/552076 [00:02<00:03, 102777.10it/s] 42%|████▏     | 234155/552076 [00:02<00:03, 104786.18it/s] 44%|████▍     | 244836/552076 [00:02<00:03, 87229.14it/s]  46%|████▌     | 254194/552076 [00:02<00:03, 76505.85it/s] 48%|████▊     | 265960/552076 [00:02<00:03, 85474.70it/s] 50%|█████     | 277965/552076 [00:02<00:02, 93558.22it/s] 53%|█████▎    | 290482/552076 [00:03<00:02, 101226.26it/s] 55%|█████▍    | 303429/552076 [00:03<00:02, 108312.59it/s] 57%|█████▋    | 315647/552076 [00:03<00:02, 112130.07it/s] 59%|█████▉    | 327479/552076 [00:03<00:01, 113914.93it/s] 61%|██████▏   | 339224/552076 [00:03<00:01, 111927.66it/s] 64%|██████▎   | 351444/552076 [00:03<00:01, 114821.59it/s] 66%|██████▌   | 363714/552076 [00:03<00:01, 117075.07it/s] 68%|██████▊   | 375571/552076 [00:03<00:01, 117497.78it/s] 70%|███████   | 387841/552076 [00:03<00:01, 119010.58it/s] 72%|███████▏  | 399820/552076 [00:03<00:01, 112351.77it/s] 74%|███████▍  | 411187/552076 [00:04<00:01, 112467.34it/s] 77%|███████▋  | 422526/552076 [00:04<00:01, 104359.91it/s] 78%|███████▊  | 433144/552076 [00:04<00:01, 99867.37it/s]  81%|████████  | 445158/552076 [00:04<00:01, 105190.53it/s] 83%|████████▎ | 456784/552076 [00:04<00:00, 108282.77it/s] 85%|████████▍ | 468956/552076 [00:04<00:00, 111990.97it/s] 87%|████████▋ | 480418/552076 [00:04<00:00, 112765.06it/s] 89%|████████▉ | 492630/552076 [00:04<00:00, 115415.98it/s] 91%|█████████▏| 504895/552076 [00:04<00:00, 117492.67it/s] 94%|█████████▎| 517201/552076 [00:04<00:00, 119106.72it/s] 96%|█████████▌| 529407/552076 [00:05<00:00, 119975.52it/s] 98%|█████████▊| 541512/552076 [00:05<00:00, 120293.32it/s]100%|██████████| 552076/552076 [00:05<00:00, 104768.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10885/552076 [00:00<00:04, 108849.33it/s]  3%|▎         | 19322/552076 [00:00<00:05, 100130.58it/s]  5%|▍         | 25211/552076 [00:00<00:06, 82745.29it/s]   6%|▌         | 34212/552076 [00:00<00:06, 84798.25it/s]  8%|▊         | 44942/552076 [00:00<00:05, 90491.16it/s] 10%|▉         | 55025/552076 [00:00<00:05, 93362.96it/s] 11%|█▏        | 63389/552076 [00:00<00:05, 84693.36it/s] 14%|█▎        | 75465/552076 [00:00<00:05, 93027.74it/s] 16%|█▌        | 87528/552076 [00:00<00:04, 99882.87it/s] 18%|█▊        | 99571/552076 [00:01<00:04, 105270.68it/s] 20%|██        | 111784/552076 [00:01<00:04, 109816.88it/s] 22%|██▏       | 123968/552076 [00:01<00:03, 113166.34it/s] 25%|██▍       | 136084/552076 [00:01<00:03, 115450.15it/s] 27%|██▋       | 148120/552076 [00:01<00:03, 116879.01it/s] 29%|██▉       | 160228/552076 [00:01<00:03, 118108.00it/s] 31%|███       | 172092/552076 [00:01<00:03, 97638.15it/s]  33%|███▎      | 184577/552076 [00:01<00:03, 104467.27it/s] 36%|███▌      | 196299/552076 [00:01<00:03, 107990.58it/s] 38%|███▊      | 207961/552076 [00:01<00:03, 110440.28it/s] 40%|███▉      | 219675/552076 [00:02<00:02, 110860.77it/s] 42%|████▏     | 231374/552076 [00:02<00:02, 112628.65it/s] 44%|████▍     | 243729/552076 [00:02<00:02, 115695.51it/s] 46%|████▋     | 256336/552076 [00:02<00:02, 118621.99it/s] 49%|████▊     | 268558/552076 [00:02<00:02, 119676.56it/s] 51%|█████     | 280607/552076 [00:02<00:02, 112555.75it/s] 53%|█████▎    | 292006/552076 [00:02<00:02, 99803.17it/s]  55%|█████▌    | 304126/552076 [00:02<00:02, 105383.64it/s] 57%|█████▋    | 316312/552076 [00:02<00:02, 109836.85it/s] 59%|█████▉    | 328441/552076 [00:03<00:01, 113038.49it/s] 62%|██████▏   | 340678/552076 [00:03<00:01, 115684.18it/s] 64%|██████▍   | 352973/552076 [00:03<00:01, 117770.71it/s] 66%|██████▌   | 365157/552076 [00:03<00:01, 118961.70it/s] 68%|██████▊   | 377147/552076 [00:03<00:01, 114924.43it/s] 70%|███████   | 388904/552076 [00:03<00:01, 115704.82it/s] 73%|███████▎  | 400543/552076 [00:03<00:01, 91763.88it/s]  74%|███████▍  | 410547/552076 [00:03<00:01, 88563.42it/s] 76%|███████▌  | 420007/552076 [00:04<00:01, 71560.33it/s] 78%|███████▊  | 431244/552076 [00:04<00:01, 80309.91it/s] 80%|████████  | 442728/552076 [00:04<00:01, 88272.41it/s] 82%|████████▏ | 453753/552076 [00:04<00:01, 93885.33it/s] 84%|████████▍ | 465735/552076 [00:04<00:00, 100403.14it/s] 87%|████████▋ | 477797/552076 [00:04<00:00, 105716.98it/s] 89%|████████▉ | 490008/552076 [00:04<00:00, 110153.29it/s] 91%|█████████ | 502149/552076 [00:04<00:00, 113302.32it/s] 93%|█████████▎| 514346/552076 [00:04<00:00, 115768.52it/s] 95%|█████████▌| 526558/552076 [00:04<00:00, 117602.23it/s] 98%|█████████▊| 538491/552076 [00:05<00:00, 115126.15it/s]100%|█████████▉| 550137/552076 [00:05<00:00, 111650.09it/s]100%|██████████| 552076/552076 [00:05<00:00, 105849.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4289/552076 [00:00<00:12, 42886.56it/s]  2%|▏         | 10789/552076 [00:00<00:11, 47760.55it/s]  3%|▎         | 17322/552076 [00:00<00:10, 51950.32it/s]  4%|▍         | 23112/552076 [00:00<00:09, 53582.79it/s]  5%|▌         | 27616/552076 [00:00<00:12, 43031.03it/s]  6%|▌         | 33742/552076 [00:00<00:10, 47247.84it/s]  7%|▋         | 39654/552076 [00:00<00:10, 50275.61it/s]  8%|▊         | 46043/552076 [00:00<00:09, 53709.07it/s]  9%|▉         | 52158/552076 [00:00<00:08, 55742.64it/s] 10%|█         | 57803/552076 [00:01<00:09, 53674.90it/s] 12%|█▏        | 64101/552076 [00:01<00:08, 56163.66it/s] 13%|█▎        | 70340/552076 [00:01<00:08, 57894.26it/s] 14%|█▍        | 76583/552076 [00:01<00:08, 59182.25it/s] 15%|█▍        | 82742/552076 [00:01<00:07, 59884.05it/s] 16%|█▌        | 89252/552076 [00:01<00:07, 61357.35it/s] 17%|█▋        | 95733/552076 [00:01<00:07, 62353.87it/s] 19%|█▊        | 102297/552076 [00:01<00:07, 63302.99it/s] 20%|█▉        | 108652/552076 [00:01<00:07, 61210.70it/s] 21%|██        | 114806/552076 [00:01<00:07, 59344.92it/s] 22%|██▏       | 121454/552076 [00:02<00:07, 61319.18it/s] 23%|██▎       | 128142/552076 [00:02<00:06, 62886.25it/s] 24%|██▍       | 134755/552076 [00:02<00:06, 63822.40it/s] 26%|██▌       | 141355/552076 [00:02<00:06, 64459.38it/s] 27%|██▋       | 147824/552076 [00:02<00:06, 61219.15it/s] 28%|██▊       | 153996/552076 [00:02<00:07, 51651.95it/s] 29%|██▉       | 159452/552076 [00:02<00:07, 51180.48it/s] 30%|███       | 165673/552076 [00:02<00:07, 54054.25it/s] 31%|███       | 172336/552076 [00:02<00:06, 57297.32it/s] 32%|███▏      | 178994/552076 [00:03<00:06, 59797.30it/s] 34%|███▎      | 185599/552076 [00:03<00:05, 61542.90it/s] 35%|███▍      | 191876/552076 [00:03<00:07, 47080.01it/s] 36%|███▌      | 197182/552076 [00:03<00:07, 47899.77it/s] 37%|███▋      | 203456/552076 [00:03<00:06, 51556.25it/s] 38%|███▊      | 208987/552076 [00:03<00:07, 44945.31it/s] 39%|███▉      | 214375/552076 [00:03<00:07, 46820.21it/s] 40%|███▉      | 220301/552076 [00:03<00:06, 49965.20it/s] 41%|████      | 226605/552076 [00:04<00:06, 53278.34it/s] 42%|████▏     | 232187/552076 [00:04<00:06, 46359.30it/s] 43%|████▎     | 237629/552076 [00:04<00:06, 48513.15it/s] 44%|████▍     | 244306/552076 [00:04<00:05, 52846.53it/s] 45%|████▌     | 250968/552076 [00:04<00:05, 56340.05it/s] 47%|████▋     | 257459/552076 [00:04<00:05, 58662.24it/s] 48%|████▊     | 263541/552076 [00:04<00:05, 55056.15it/s] 49%|████▉     | 269243/552076 [00:04<00:05, 52097.11it/s] 50%|████▉     | 275970/552076 [00:04<00:04, 55877.66it/s] 51%|█████     | 282659/552076 [00:05<00:04, 58778.57it/s] 52%|█████▏    | 288976/552076 [00:05<00:04, 59646.04it/s] 53%|█████▎    | 295068/552076 [00:05<00:05, 50765.35it/s] 54%|█████▍    | 300463/552076 [00:05<00:05, 47350.11it/s] 56%|█████▌    | 306946/552076 [00:05<00:04, 51516.78it/s] 57%|█████▋    | 312394/552076 [00:05<00:04, 51521.27it/s] 58%|█████▊    | 319023/552076 [00:05<00:04, 55209.50it/s] 59%|█████▉    | 325494/552076 [00:05<00:03, 57752.26it/s] 60%|██████    | 331454/552076 [00:05<00:03, 56291.01it/s] 61%|██████    | 337861/552076 [00:06<00:03, 58418.12it/s] 63%|██████▎   | 345206/552076 [00:06<00:03, 62238.77it/s] 64%|██████▍   | 352039/552076 [00:06<00:03, 63849.96it/s] 65%|██████▍   | 358540/552076 [00:06<00:03, 58606.46it/s] 67%|██████▋   | 370157/552076 [00:06<00:02, 68839.67it/s] 69%|██████▉   | 382253/552076 [00:06<00:02, 79059.36it/s] 71%|███████▏  | 394235/552076 [00:06<00:01, 88043.55it/s] 73%|███████▎  | 404145/552076 [00:06<00:01, 87733.20it/s] 75%|███████▍  | 413692/552076 [00:06<00:01, 79946.51it/s] 77%|███████▋  | 425407/552076 [00:07<00:01, 88364.25it/s] 79%|███████▉  | 437452/552076 [00:07<00:01, 96037.57it/s] 81%|████████▏ | 449498/552076 [00:07<00:01, 102256.37it/s] 84%|████████▎ | 461523/552076 [00:07<00:00, 107060.99it/s] 86%|████████▌ | 473516/552076 [00:07<00:00, 110620.55it/s] 88%|████████▊ | 485822/552076 [00:07<00:00, 114077.53it/s] 90%|█████████ | 498133/552076 [00:07<00:00, 116642.00it/s] 92%|█████████▏| 510241/552076 [00:07<00:00, 117937.66it/s] 95%|█████████▍| 522189/552076 [00:07<00:00, 104056.47it/s] 97%|█████████▋| 533002/552076 [00:08<00:00, 94805.03it/s]  99%|█████████▊| 545116/552076 [00:08<00:00, 101418.02it/s]100%|██████████| 552076/552076 [00:08<00:00, 67235.94it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9122/552076 [00:00<00:06, 82421.97it/s]  4%|▎         | 20603/552076 [00:00<00:05, 90041.18it/s]  6%|▌         | 32224/552076 [00:00<00:05, 96563.44it/s]  8%|▊         | 43658/552076 [00:00<00:05, 101286.24it/s]  9%|▉         | 52079/552076 [00:00<00:05, 95476.45it/s]  12%|█▏        | 64186/552076 [00:00<00:04, 101939.72it/s] 14%|█▍        | 75991/552076 [00:00<00:04, 106290.46it/s] 16%|█▌        | 88007/552076 [00:00<00:04, 110101.16it/s] 18%|█▊        | 100090/552076 [00:00<00:03, 113111.81it/s] 20%|██        | 112303/552076 [00:01<00:03, 115672.17it/s] 23%|██▎       | 124549/552076 [00:01<00:03, 117627.64it/s] 25%|██▍       | 136880/552076 [00:01<00:03, 119276.46it/s] 27%|██▋       | 148770/552076 [00:01<00:03, 106559.86it/s] 29%|██▉       | 159653/552076 [00:01<00:04, 95185.25it/s]  31%|███       | 171373/552076 [00:01<00:03, 100868.20it/s] 33%|███▎      | 181822/552076 [00:01<00:03, 96579.35it/s]  35%|███▌      | 193881/552076 [00:01<00:03, 102714.08it/s] 37%|███▋      | 206040/552076 [00:01<00:03, 107730.98it/s] 39%|███▉      | 217096/552076 [00:02<00:03, 103779.73it/s] 41%|████      | 227703/552076 [00:02<00:03, 98304.61it/s]  43%|████▎     | 237754/552076 [00:02<00:03, 81644.09it/s] 45%|████▍     | 246545/552076 [00:02<00:04, 68358.33it/s] 47%|████▋     | 256946/552076 [00:02<00:03, 76192.90it/s] 49%|████▉     | 270358/552076 [00:02<00:03, 87534.67it/s] 51%|█████     | 282758/552076 [00:02<00:02, 96002.90it/s] 53%|█████▎    | 294157/552076 [00:02<00:02, 100772.19it/s] 55%|█████▌    | 306261/552076 [00:02<00:02, 106101.64it/s] 58%|█████▊    | 318496/552076 [00:03<00:02, 110503.37it/s] 60%|█████▉    | 330049/552076 [00:03<00:02, 108431.96it/s] 62%|██████▏   | 341944/552076 [00:03<00:01, 111385.05it/s] 64%|██████▍   | 353355/552076 [00:03<00:01, 100154.94it/s] 66%|██████▌   | 363776/552076 [00:03<00:02, 91434.96it/s]  68%|██████▊   | 373350/552076 [00:03<00:02, 81248.12it/s] 69%|██████▉   | 381987/552076 [00:03<00:02, 82181.62it/s] 71%|███████▏  | 394598/552076 [00:03<00:01, 91770.90it/s] 74%|███████▎  | 406352/552076 [00:04<00:01, 98231.20it/s] 76%|███████▌  | 418298/552076 [00:04<00:01, 103762.06it/s] 78%|███████▊  | 430186/552076 [00:04<00:01, 107877.02it/s] 80%|███████▉  | 441347/552076 [00:04<00:01, 85245.85it/s]  82%|████████▏ | 450876/552076 [00:04<00:01, 75607.89it/s] 84%|████████▍ | 462677/552076 [00:04<00:01, 84742.33it/s] 86%|████████▌ | 474328/552076 [00:04<00:00, 92291.58it/s] 88%|████████▊ | 486304/552076 [00:04<00:00, 99110.50it/s] 90%|█████████ | 496982/552076 [00:05<00:00, 95263.04it/s] 92%|█████████▏| 507077/552076 [00:05<00:00, 77118.74it/s] 93%|█████████▎| 515746/552076 [00:05<00:00, 71336.51it/s] 95%|█████████▍| 523636/552076 [00:05<00:00, 70292.92it/s] 97%|█████████▋| 535441/552076 [00:05<00:00, 80002.03it/s] 99%|█████████▊| 544276/552076 [00:05<00:00, 81850.45it/s]100%|██████████| 552076/552076 [00:05<00:00, 95841.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7357/552076 [00:00<00:07, 73563.76it/s]  3%|▎         | 18750/552076 [00:00<00:06, 82311.05it/s]  6%|▌         | 30743/552076 [00:00<00:05, 90861.03it/s]  8%|▊         | 42720/552076 [00:00<00:05, 97953.85it/s] 10%|▉         | 54605/552076 [00:00<00:04, 103406.62it/s] 12%|█▏        | 66743/552076 [00:00<00:04, 108180.46it/s] 14%|█▍        | 78443/552076 [00:00<00:04, 110681.26it/s] 16%|█▋        | 90609/552076 [00:00<00:04, 113758.64it/s] 19%|█▊        | 102743/552076 [00:00<00:03, 115928.93it/s] 21%|██        | 114870/552076 [00:01<00:03, 117479.27it/s] 23%|██▎       | 126909/552076 [00:01<00:03, 118334.64it/s] 25%|██▌       | 138680/552076 [00:01<00:03, 118057.17it/s] 27%|██▋       | 150851/552076 [00:01<00:03, 119128.57it/s] 30%|██▉       | 163039/552076 [00:01<00:03, 119938.79it/s] 32%|███▏      | 175025/552076 [00:01<00:03, 119913.03it/s] 34%|███▍      | 187004/552076 [00:01<00:03, 119029.77it/s] 36%|███▌      | 198900/552076 [00:01<00:02, 118642.38it/s] 38%|███▊      | 211101/552076 [00:01<00:02, 119631.00it/s] 40%|████      | 223515/552076 [00:01<00:02, 120947.28it/s] 43%|████▎     | 235765/552076 [00:02<00:02, 121406.31it/s] 45%|████▍     | 247908/552076 [00:02<00:02, 120891.94it/s] 47%|████▋     | 260000/552076 [00:02<00:02, 120822.72it/s] 49%|████▉     | 272301/552076 [00:02<00:02, 121467.98it/s] 53%|█████▎    | 290261/552076 [00:02<00:01, 134530.32it/s] 57%|█████▋    | 312500/552076 [00:02<00:01, 152618.53it/s] 61%|██████    | 334312/552076 [00:02<00:01, 167729.21it/s] 64%|██████▍   | 352675/552076 [00:02<00:01, 172202.53it/s] 67%|██████▋   | 370799/552076 [00:02<00:01, 171051.45it/s] 70%|███████   | 388539/552076 [00:02<00:01, 138845.56it/s] 73%|███████▎  | 403851/552076 [00:03<00:01, 131218.36it/s] 77%|███████▋  | 424347/552076 [00:03<00:00, 147094.00it/s] 80%|████████  | 443731/552076 [00:03<00:00, 158564.45it/s] 84%|████████▍ | 464338/552076 [00:03<00:00, 170345.17it/s] 88%|████████▊ | 485601/552076 [00:03<00:00, 181150.64it/s] 91%|█████████▏| 504677/552076 [00:03<00:00, 165247.08it/s] 95%|█████████▍| 523929/552076 [00:03<00:00, 172581.42it/s] 99%|█████████▊| 543817/552076 [00:03<00:00, 179709.54it/s]100%|██████████| 552076/552076 [00:03<00:00, 141332.57it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14844/552076 [00:00<00:03, 148436.96it/s]  6%|▋         | 35357/552076 [00:00<00:03, 161856.38it/s] 10%|█         | 55471/552076 [00:00<00:02, 171929.63it/s] 14%|█▍        | 77657/552076 [00:00<00:02, 184377.83it/s] 18%|█▊        | 99919/552076 [00:00<00:02, 194395.65it/s] 22%|██▏       | 122429/552076 [00:00<00:02, 202688.00it/s] 26%|██▌       | 142596/552076 [00:00<00:02, 202379.11it/s] 30%|██▉       | 164450/552076 [00:00<00:01, 206969.51it/s] 34%|███▎      | 185643/552076 [00:00<00:01, 208431.70it/s] 37%|███▋      | 206067/552076 [00:01<00:02, 163985.91it/s] 41%|████      | 223649/552076 [00:01<00:02, 126762.77it/s] 45%|████▍     | 245777/552076 [00:01<00:02, 145393.65it/s] 48%|████▊     | 267329/552076 [00:01<00:01, 161119.86it/s] 52%|█████▏    | 288966/552076 [00:01<00:01, 174485.74it/s] 56%|█████▌    | 310026/552076 [00:01<00:01, 183946.94it/s] 60%|██████    | 332615/552076 [00:01<00:01, 194796.88it/s] 64%|██████▍   | 355152/552076 [00:01<00:00, 203059.90it/s] 68%|██████▊   | 377586/552076 [00:01<00:00, 209007.53it/s] 72%|███████▏  | 399388/552076 [00:02<00:00, 211630.79it/s] 76%|███████▋  | 421355/552076 [00:02<00:00, 213978.80it/s] 80%|████████  | 443105/552076 [00:02<00:00, 202008.94it/s] 84%|████████▍ | 463691/552076 [00:02<00:00, 200496.63it/s] 88%|████████▊ | 484043/552076 [00:02<00:00, 201393.23it/s] 92%|█████████▏| 505594/552076 [00:02<00:00, 205429.67it/s] 95%|█████████▌| 527096/552076 [00:02<00:00, 208214.20it/s] 99%|█████████▉| 548497/552076 [00:02<00:00, 209917.26it/s]100%|██████████| 552076/552076 [00:02<00:00, 194226.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19907/552076 [00:00<00:02, 199069.72it/s]  7%|▋         | 39598/552076 [00:00<00:02, 198415.76it/s] 11%|█         | 60047/552076 [00:00<00:02, 200198.59it/s] 15%|█▍        | 80600/552076 [00:00<00:02, 201765.97it/s] 18%|█▊        | 101656/552076 [00:00<00:02, 204323.15it/s] 22%|██▏       | 121660/552076 [00:00<00:02, 203017.65it/s] 26%|██▌       | 142585/552076 [00:00<00:01, 204845.50it/s] 30%|██▉       | 163279/552076 [00:00<00:01, 205469.30it/s] 33%|███▎      | 184012/552076 [00:00<00:01, 206022.59it/s] 37%|███▋      | 203818/552076 [00:01<00:01, 202607.93it/s] 41%|████      | 224525/552076 [00:01<00:01, 203925.57it/s] 44%|████▍     | 245263/552076 [00:01<00:01, 204949.67it/s] 48%|████▊     | 265494/552076 [00:01<00:01, 169918.38it/s] 52%|█████▏    | 286599/552076 [00:01<00:01, 180468.33it/s] 56%|█████▌    | 307986/552076 [00:01<00:01, 189338.70it/s] 60%|█████▉    | 328963/552076 [00:01<00:01, 195035.34it/s] 63%|██████▎   | 348957/552076 [00:01<00:01, 195117.43it/s] 67%|██████▋   | 370278/552076 [00:01<00:00, 200212.94it/s] 71%|███████   | 390573/552076 [00:02<00:00, 173353.49it/s] 74%|███████▍  | 408740/552076 [00:02<00:00, 146391.68it/s] 78%|███████▊  | 428423/552076 [00:02<00:00, 158581.37it/s] 81%|████████  | 445486/552076 [00:02<00:00, 110750.05it/s] 83%|████████▎ | 459380/552076 [00:02<00:00, 105365.60it/s] 85%|████████▌ | 471945/552076 [00:02<00:00, 99471.82it/s]  88%|████████▊ | 483380/552076 [00:02<00:00, 98984.75it/s] 90%|████████▉ | 495151/552076 [00:03<00:00, 103944.07it/s] 92%|█████████▏| 507390/552076 [00:03<00:00, 108865.24it/s] 94%|█████████▍| 518895/552076 [00:03<00:00, 107718.87it/s] 96%|█████████▌| 530102/552076 [00:03<00:00, 106983.05it/s] 98%|█████████▊| 543087/552076 [00:03<00:00, 112947.95it/s]100%|██████████| 552076/552076 [00:03<00:00, 155642.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2222/552076 [00:00<00:25, 21798.89it/s]  1%|▏         | 7137/552076 [00:00<00:20, 26088.39it/s]  2%|▏         | 12034/552076 [00:00<00:17, 30341.26it/s]  3%|▎         | 16767/552076 [00:00<00:15, 34002.57it/s]  5%|▍         | 27528/552076 [00:00<00:12, 42781.33it/s]  7%|▋         | 41208/552076 [00:00<00:09, 53892.98it/s]  9%|▉         | 50374/552076 [00:00<00:08, 60932.56it/s] 11%|█▏        | 62755/552076 [00:00<00:06, 71884.56it/s] 14%|█▍        | 76087/552076 [00:00<00:05, 81873.13it/s] 16%|█▌        | 86362/552076 [00:01<00:06, 75487.00it/s] 17%|█▋        | 95470/552076 [00:01<00:06, 70867.50it/s] 19%|█▉        | 103706/552076 [00:01<00:06, 69398.61it/s] 20%|██        | 111457/552076 [00:01<00:06, 64783.09it/s] 21%|██▏       | 118566/552076 [00:01<00:08, 52678.49it/s] 23%|██▎       | 125202/552076 [00:01<00:07, 56150.29it/s] 24%|██▍       | 131446/552076 [00:01<00:07, 52723.04it/s] 25%|██▍       | 137202/552076 [00:02<00:08, 48114.95it/s] 26%|██▌       | 143642/552076 [00:02<00:07, 52064.43it/s] 27%|██▋       | 150143/552076 [00:02<00:07, 55371.52it/s] 28%|██▊       | 156319/552076 [00:02<00:06, 57143.23it/s] 29%|██▉       | 162277/552076 [00:02<00:06, 55861.48it/s] 31%|███       | 169068/552076 [00:02<00:06, 59000.88it/s] 32%|███▏      | 175140/552076 [00:02<00:06, 56106.17it/s] 33%|███▎      | 181732/552076 [00:02<00:06, 58728.39it/s] 34%|███▍      | 187916/552076 [00:02<00:06, 59627.64it/s] 35%|███▌      | 193978/552076 [00:03<00:06, 55365.56it/s] 36%|███▌      | 199645/552076 [00:03<00:06, 50887.46it/s] 37%|███▋      | 205822/552076 [00:03<00:06, 53726.14it/s] 38%|███▊      | 212355/552076 [00:03<00:05, 56747.66it/s] 40%|███▉      | 218471/552076 [00:03<00:05, 58002.58it/s] 41%|████      | 225079/552076 [00:03<00:05, 60209.52it/s] 42%|████▏     | 231564/552076 [00:03<00:05, 61529.21it/s] 43%|████▎     | 237796/552076 [00:03<00:05, 59726.13it/s] 44%|████▍     | 245386/552076 [00:03<00:04, 63803.22it/s] 46%|████▌     | 251891/552076 [00:03<00:05, 58936.10it/s] 47%|████▋     | 257945/552076 [00:04<00:05, 51837.32it/s] 48%|████▊     | 264213/552076 [00:04<00:05, 54674.12it/s] 49%|████▉     | 270968/552076 [00:04<00:04, 57988.85it/s] 50%|█████     | 277710/552076 [00:04<00:04, 60528.48it/s] 51%|█████▏    | 284197/552076 [00:04<00:04, 61766.37it/s] 53%|█████▎    | 290506/552076 [00:04<00:04, 59330.30it/s] 54%|█████▍    | 296980/552076 [00:04<00:04, 60853.98it/s] 55%|█████▌    | 303716/552076 [00:04<00:03, 62669.69it/s] 56%|█████▌    | 310453/552076 [00:04<00:03, 64007.55it/s] 57%|█████▋    | 317243/552076 [00:05<00:03, 65125.79it/s] 59%|█████▊    | 323803/552076 [00:05<00:03, 63611.33it/s] 60%|█████▉    | 330205/552076 [00:05<00:03, 56097.71it/s] 61%|██████    | 336505/552076 [00:05<00:03, 58001.69it/s] 62%|██████▏   | 343294/552076 [00:05<00:03, 58168.48it/s] 63%|██████▎   | 349246/552076 [00:05<00:03, 58544.10it/s] 64%|██████▍   | 355904/552076 [00:05<00:03, 60743.28it/s] 66%|██████▌   | 362184/552076 [00:05<00:03, 61343.97it/s] 67%|██████▋   | 368581/552076 [00:05<00:02, 62108.23it/s] 68%|██████▊   | 374831/552076 [00:06<00:02, 61380.96it/s] 69%|██████▉   | 381225/552076 [00:06<00:02, 61056.47it/s] 70%|███████   | 387352/552076 [00:06<00:02, 57546.95it/s] 71%|███████▏  | 393963/552076 [00:06<00:02, 59871.26it/s] 72%|███████▏  | 400163/552076 [00:06<00:02, 60493.08it/s] 74%|███████▎  | 406972/552076 [00:06<00:02, 62587.35it/s] 75%|███████▍  | 413691/552076 [00:06<00:02, 63898.74it/s] 76%|███████▋  | 421381/552076 [00:06<00:01, 67311.52it/s] 78%|███████▊  | 428317/552076 [00:06<00:01, 67912.27it/s] 79%|███████▉  | 435165/552076 [00:07<00:01, 61098.50it/s] 80%|███████▉  | 441444/552076 [00:07<00:02, 50488.00it/s] 81%|████████▏ | 448774/552076 [00:07<00:01, 55685.84it/s] 83%|████████▎ | 455859/552076 [00:07<00:01, 59505.72it/s] 84%|████████▍ | 462546/552076 [00:07<00:01, 61538.81it/s] 85%|████████▍ | 469127/552076 [00:07<00:01, 62759.57it/s] 86%|████████▌ | 475984/552076 [00:07<00:01, 64394.07it/s] 87%|████████▋ | 482786/552076 [00:07<00:01, 65439.36it/s] 89%|████████▊ | 489614/552076 [00:07<00:00, 66264.64it/s] 90%|████████▉ | 496324/552076 [00:07<00:00, 63237.88it/s] 91%|█████████ | 503132/552076 [00:08<00:00, 64614.92it/s] 92%|█████████▏| 509965/552076 [00:08<00:00, 65684.94it/s] 94%|█████████▎| 516782/552076 [00:08<00:00, 66409.53it/s] 95%|█████████▍| 523599/552076 [00:08<00:00, 66927.74it/s] 96%|█████████▌| 530320/552076 [00:08<00:00, 48405.06it/s] 97%|█████████▋| 537127/552076 [00:08<00:00, 52997.94it/s] 99%|█████████▊| 543916/552076 [00:08<00:00, 56731.05it/s]100%|█████████▉| 550607/552076 [00:08<00:00, 59443.93it/s]100%|██████████| 552076/552076 [00:08<00:00, 61717.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6740/552076 [00:00<00:08, 67399.90it/s]  2%|▏         | 12717/552076 [00:00<00:08, 63576.32it/s]  3%|▎         | 17154/552076 [00:00<00:09, 56265.79it/s]  4%|▍         | 23253/552076 [00:00<00:09, 57602.84it/s]  5%|▌         | 30010/552076 [00:00<00:08, 60267.76it/s]  6%|▋         | 35033/552076 [00:00<00:09, 55725.05it/s]  8%|▊         | 41814/552076 [00:00<00:08, 58872.20it/s]  9%|▉         | 48659/552076 [00:00<00:08, 61451.24it/s] 10%|█         | 55490/552076 [00:00<00:07, 63358.09it/s] 11%|█         | 61798/552076 [00:01<00:08, 60983.13it/s] 12%|█▏        | 67805/552076 [00:01<00:10, 46625.04it/s] 13%|█▎        | 72913/552076 [00:01<00:14, 32900.14it/s] 14%|█▍        | 77074/552076 [00:01<00:19, 24716.37it/s] 15%|█▍        | 80456/552076 [00:01<00:17, 26806.01it/s] 16%|█▌        | 86426/552076 [00:01<00:14, 32114.36it/s] 17%|█▋        | 92139/552076 [00:02<00:12, 36428.54it/s] 18%|█▊        | 98589/552076 [00:02<00:10, 41310.67it/s] 19%|█▉        | 104697/552076 [00:02<00:09, 45752.85it/s] 21%|██        | 115547/552076 [00:02<00:07, 55356.76it/s] 23%|██▎       | 126554/552076 [00:02<00:06, 64815.74it/s] 24%|██▍       | 135172/552076 [00:02<00:05, 70022.28it/s] 26%|██▌       | 143867/552076 [00:02<00:05, 74364.71it/s] 28%|██▊       | 155246/552076 [00:02<00:04, 81658.53it/s] 30%|██▉       | 164297/552076 [00:02<00:04, 84034.20it/s] 32%|███▏      | 175725/552076 [00:02<00:04, 91280.52it/s] 34%|███▍      | 187473/552076 [00:03<00:03, 97824.26it/s] 36%|███▌      | 199434/552076 [00:03<00:03, 103476.37it/s] 38%|███▊      | 211639/552076 [00:03<00:03, 108423.90it/s] 40%|████      | 223260/552076 [00:03<00:02, 110645.93it/s] 42%|████▏     | 234619/552076 [00:03<00:02, 111115.19it/s] 45%|████▍     | 246312/552076 [00:03<00:02, 112795.61it/s] 47%|████▋     | 257742/552076 [00:03<00:02, 113178.38it/s] 49%|████▉     | 269347/552076 [00:03<00:02, 114021.98it/s] 51%|█████     | 281141/552076 [00:03<00:02, 115166.83it/s] 53%|█████▎    | 292714/552076 [00:04<00:02, 107959.75it/s] 55%|█████▌    | 304888/552076 [00:04<00:02, 111752.35it/s] 57%|█████▋    | 316667/552076 [00:04<00:02, 113494.39it/s] 59%|█████▉    | 328453/552076 [00:04<00:01, 114768.33it/s] 62%|██████▏   | 340008/552076 [00:04<00:01, 115001.09it/s] 64%|██████▎   | 351713/552076 [00:04<00:01, 115607.65it/s] 66%|██████▌   | 363744/552076 [00:04<00:01, 116978.04it/s] 68%|██████▊   | 375623/552076 [00:04<00:01, 117514.66it/s] 70%|███████   | 387443/552076 [00:04<00:01, 117718.79it/s] 72%|███████▏  | 399230/552076 [00:04<00:01, 117121.02it/s] 74%|███████▍  | 410974/552076 [00:05<00:01, 117213.81it/s] 77%|███████▋  | 422703/552076 [00:05<00:01, 116920.63it/s] 79%|███████▊  | 434645/552076 [00:05<00:00, 117657.35it/s] 81%|████████  | 446753/552076 [00:05<00:00, 118662.11it/s] 83%|████████▎ | 459026/552076 [00:05<00:00, 119852.23it/s] 85%|████████▌ | 471018/552076 [00:05<00:00, 119128.94it/s] 87%|████████▋ | 482937/552076 [00:05<00:00, 116802.31it/s] 90%|████████▉ | 495058/552076 [00:05<00:00, 118088.64it/s] 92%|█████████▏| 507051/552076 [00:05<00:00, 118634.36it/s] 94%|█████████▍| 518926/552076 [00:05<00:00, 118666.86it/s] 96%|█████████▌| 530800/552076 [00:06<00:00, 118684.33it/s] 98%|█████████▊| 542684/552076 [00:06<00:00, 118729.32it/s]100%|██████████| 552076/552076 [00:06<00:00, 89053.07it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11760/552076 [00:00<00:04, 117590.86it/s]  4%|▍         | 23546/552076 [00:00<00:04, 117670.41it/s]  6%|▋         | 35228/552076 [00:00<00:04, 117412.51it/s]  8%|▊         | 42937/552076 [00:00<00:08, 62197.22it/s]   9%|▉         | 49223/552076 [00:00<00:08, 60696.72it/s] 10%|█         | 55418/552076 [00:00<00:08, 59344.29it/s] 12%|█▏        | 64455/552076 [00:00<00:07, 65616.59it/s] 14%|█▍        | 76411/552076 [00:00<00:06, 75888.02it/s] 16%|█▌        | 86804/552076 [00:01<00:05, 82571.66it/s] 18%|█▊        | 97523/552076 [00:01<00:05, 88680.28it/s] 20%|█▉        | 108953/552076 [00:01<00:04, 95071.93it/s] 22%|██▏       | 120598/552076 [00:01<00:04, 100612.37it/s] 24%|██▍       | 131141/552076 [00:01<00:04, 86971.72it/s]  26%|██▌       | 141063/552076 [00:01<00:04, 90315.79it/s] 28%|██▊       | 153157/552076 [00:01<00:04, 97740.17it/s] 30%|███       | 165706/552076 [00:01<00:03, 104683.13it/s] 32%|███▏      | 178030/552076 [00:01<00:03, 109634.49it/s] 34%|███▍      | 190252/552076 [00:02<00:03, 113126.50it/s] 37%|███▋      | 202064/552076 [00:02<00:03, 114578.33it/s] 39%|███▊      | 213750/552076 [00:02<00:02, 114464.72it/s] 41%|████      | 225530/552076 [00:02<00:02, 115444.37it/s] 43%|████▎     | 237565/552076 [00:02<00:02, 116871.79it/s] 45%|████▌     | 249336/552076 [00:02<00:02, 114078.70it/s] 47%|████▋     | 260935/552076 [00:02<00:02, 114644.43it/s] 49%|████▉     | 272452/552076 [00:02<00:03, 90959.89it/s]  51%|█████▏    | 283372/552076 [00:02<00:02, 95756.52it/s] 53%|█████▎    | 295057/552076 [00:03<00:02, 101236.98it/s] 55%|█████▌    | 306055/552076 [00:03<00:02, 103710.32it/s] 58%|█████▊    | 317828/552076 [00:03<00:02, 107550.56it/s] 60%|█████▉    | 329397/552076 [00:03<00:02, 109867.03it/s] 62%|██████▏   | 341478/552076 [00:03<00:01, 112935.30it/s] 64%|██████▍   | 353742/552076 [00:03<00:01, 115679.37it/s] 66%|██████▌   | 365453/552076 [00:03<00:02, 91011.41it/s]  68%|██████▊   | 375474/552076 [00:03<00:01, 89337.57it/s] 70%|███████   | 387473/552076 [00:03<00:01, 96750.78it/s] 72%|███████▏  | 399392/552076 [00:04<00:01, 102540.74it/s] 75%|███████▍  | 411559/552076 [00:04<00:01, 107614.52it/s] 77%|███████▋  | 423648/552076 [00:04<00:01, 111280.25it/s] 79%|███████▉  | 435816/552076 [00:04<00:01, 114208.41it/s] 81%|████████  | 447495/552076 [00:04<00:00, 114241.91it/s] 83%|████████▎ | 459561/552076 [00:04<00:00, 116092.76it/s] 85%|████████▌ | 471782/552076 [00:04<00:00, 117861.71it/s] 88%|████████▊ | 483669/552076 [00:04<00:00, 94624.36it/s]  90%|████████▉ | 495776/552076 [00:04<00:00, 101257.99it/s] 92%|█████████▏| 507865/552076 [00:05<00:00, 106442.48it/s] 94%|█████████▍| 519566/552076 [00:05<00:00, 109406.54it/s] 96%|█████████▌| 530934/552076 [00:05<00:00, 110653.80it/s] 98%|█████████▊| 542611/552076 [00:05<00:00, 112417.86it/s]100%|██████████| 552076/552076 [00:05<00:00, 101886.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10039/552076 [00:00<00:05, 100381.72it/s]  4%|▍         | 21328/552076 [00:00<00:05, 103832.63it/s]  6%|▌         | 32788/552076 [00:00<00:04, 106843.69it/s]  8%|▊         | 44566/552076 [00:00<00:04, 109903.57it/s] 10%|█         | 55307/552076 [00:00<00:04, 109143.30it/s] 12%|█▏        | 64572/552076 [00:00<00:05, 97119.63it/s]  14%|█▍        | 77065/552076 [00:00<00:04, 104068.23it/s] 16%|█▌        | 88884/552076 [00:00<00:04, 106377.99it/s] 18%|█▊        | 99187/552076 [00:00<00:04, 101278.24it/s] 20%|██        | 111287/552076 [00:01<00:04, 106483.98it/s] 22%|██▏       | 123277/552076 [00:01<00:03, 110182.41it/s] 25%|██▍       | 135416/552076 [00:01<00:03, 113318.73it/s] 27%|██▋       | 147553/552076 [00:01<00:03, 115618.68it/s] 29%|██▉       | 159395/552076 [00:01<00:03, 116444.60it/s] 31%|███       | 171058/552076 [00:01<00:03, 116381.87it/s] 33%|███▎      | 183225/552076 [00:01<00:03, 117919.27it/s] 35%|███▌      | 195031/552076 [00:01<00:03, 98404.49it/s]  37%|███▋      | 205425/552076 [00:01<00:03, 97733.51it/s] 39%|███▉      | 215587/552076 [00:02<00:04, 80319.99it/s] 41%|████      | 224403/552076 [00:02<00:04, 77899.45it/s] 43%|████▎     | 236251/552076 [00:02<00:03, 86820.48it/s] 45%|████▍     | 248114/552076 [00:02<00:03, 94414.52it/s] 47%|████▋     | 259955/552076 [00:02<00:02, 100525.45it/s] 49%|████▉     | 270606/552076 [00:02<00:03, 89841.47it/s]  51%|█████     | 282395/552076 [00:02<00:02, 96746.71it/s] 53%|█████▎    | 294332/552076 [00:02<00:02, 102577.28it/s] 55%|█████▌    | 305100/552076 [00:02<00:02, 99067.12it/s]  57%|█████▋    | 316597/552076 [00:03<00:02, 103354.34it/s] 59%|█████▉    | 327249/552076 [00:03<00:02, 94959.88it/s]  61%|██████    | 337101/552076 [00:03<00:02, 93260.96it/s] 63%|██████▎   | 348257/552076 [00:03<00:02, 97272.74it/s] 65%|██████▍   | 358208/552076 [00:03<00:01, 97211.72it/s] 67%|██████▋   | 370318/552076 [00:03<00:01, 103324.72it/s] 69%|██████▉   | 382230/552076 [00:03<00:01, 107602.98it/s] 71%|███████▏  | 394411/552076 [00:03<00:01, 111503.43it/s] 74%|███████▎  | 406446/552076 [00:03<00:01, 114015.71it/s] 76%|███████▌  | 417983/552076 [00:04<00:01, 106822.71it/s] 78%|███████▊  | 429151/552076 [00:04<00:01, 108233.70it/s] 80%|███████▉  | 441029/552076 [00:04<00:00, 111193.29it/s] 82%|████████▏ | 453052/552076 [00:04<00:00, 113756.87it/s] 84%|████████▍ | 465212/552076 [00:04<00:00, 115999.69it/s] 86%|████████▋ | 477232/552076 [00:04<00:00, 117228.58it/s] 89%|████████▊ | 489013/552076 [00:04<00:00, 112079.87it/s] 91%|█████████ | 500309/552076 [00:04<00:00, 100722.34it/s] 92%|█████████▏| 510660/552076 [00:05<00:00, 73031.60it/s]  95%|█████████▍| 521817/552076 [00:05<00:00, 81474.25it/s] 97%|█████████▋| 533812/552076 [00:05<00:00, 90147.64it/s] 99%|█████████▉| 545498/552076 [00:05<00:00, 96783.09it/s]100%|██████████| 552076/552076 [00:05<00:00, 102218.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10015/552076 [00:00<00:05, 100145.80it/s]  3%|▎         | 16199/552076 [00:00<00:06, 82905.19it/s]   4%|▍         | 21000/552076 [00:00<00:07, 68063.23it/s]  5%|▍         | 26187/552076 [00:00<00:08, 59817.46it/s]  6%|▌         | 31895/552076 [00:00<00:08, 58967.28it/s]  7%|▋         | 36623/552076 [00:00<00:10, 51360.53it/s]  7%|▋         | 41117/552076 [00:00<00:10, 48348.39it/s]  8%|▊         | 45539/552076 [00:00<00:11, 45924.86it/s] 10%|█         | 56608/552076 [00:00<00:08, 55702.04it/s] 12%|█▏        | 68435/552076 [00:01<00:07, 66209.97it/s] 14%|█▍        | 78947/552076 [00:01<00:06, 74479.41it/s] 16%|█▋        | 91009/552076 [00:01<00:05, 84134.25it/s] 18%|█▊        | 100752/552076 [00:01<00:05, 81790.78it/s] 20%|█▉        | 109961/552076 [00:01<00:05, 84629.45it/s] 22%|██▏       | 120463/552076 [00:01<00:04, 89862.45it/s] 24%|██▍       | 132484/552076 [00:01<00:04, 97224.77it/s] 26%|██▌       | 144071/552076 [00:01<00:03, 102154.41it/s] 28%|██▊       | 155661/552076 [00:01<00:03, 105922.45it/s] 30%|███       | 166916/552076 [00:01<00:03, 107825.10it/s] 32%|███▏      | 178757/552076 [00:02<00:03, 110795.31it/s] 34%|███▍      | 190041/552076 [00:02<00:03, 93141.88it/s]  37%|███▋      | 201996/552076 [00:02<00:03, 99751.42it/s] 38%|███▊      | 212538/552076 [00:02<00:03, 100244.13it/s] 40%|████      | 222960/552076 [00:02<00:03, 84834.11it/s]  42%|████▏     | 232128/552076 [00:02<00:04, 76035.69it/s] 44%|████▍     | 243197/552076 [00:02<00:03, 83917.36it/s] 46%|████▌     | 252296/552076 [00:02<00:03, 77981.00it/s] 47%|████▋     | 260674/552076 [00:03<00:04, 68215.12it/s] 49%|████▊     | 268122/552076 [00:03<00:04, 65077.79it/s] 50%|████▉     | 275440/552076 [00:03<00:04, 67312.33it/s] 52%|█████▏    | 284602/552076 [00:03<00:03, 73132.40it/s] 53%|█████▎    | 293589/552076 [00:03<00:03, 77459.48it/s] 55%|█████▍    | 303184/552076 [00:03<00:03, 82211.89it/s] 57%|█████▋    | 312608/552076 [00:03<00:02, 85094.62it/s] 59%|█████▊    | 323719/552076 [00:03<00:02, 91522.80it/s] 60%|██████    | 333184/552076 [00:04<00:02, 76667.45it/s] 62%|██████▏   | 341478/552076 [00:04<00:02, 74410.57it/s] 64%|██████▎   | 351289/552076 [00:04<00:02, 80224.13it/s] 65%|██████▌   | 359759/552076 [00:04<00:02, 80225.56it/s] 67%|██████▋   | 369312/552076 [00:04<00:02, 84274.96it/s] 68%|██████▊   | 378013/552076 [00:04<00:02, 84386.65it/s] 70%|███████   | 386966/552076 [00:04<00:01, 85865.60it/s] 72%|███████▏  | 395764/552076 [00:04<00:01, 86488.10it/s] 73%|███████▎  | 404512/552076 [00:04<00:01, 84840.69it/s] 75%|███████▍  | 413802/552076 [00:04<00:01, 87107.41it/s] 77%|███████▋  | 423755/552076 [00:05<00:01, 90495.11it/s] 78%|███████▊  | 432926/552076 [00:05<00:01, 90854.67it/s] 80%|████████  | 442826/552076 [00:05<00:01, 92096.39it/s] 82%|████████▏ | 452081/552076 [00:05<00:01, 74420.93it/s] 83%|████████▎ | 460258/552076 [00:05<00:01, 76481.89it/s] 85%|████████▍ | 468325/552076 [00:05<00:01, 73412.79it/s] 86%|████████▌ | 475986/552076 [00:05<00:01, 73645.24it/s] 88%|████████▊ | 484002/552076 [00:05<00:00, 75484.30it/s] 89%|████████▉ | 491719/552076 [00:06<00:00, 72975.76it/s] 91%|█████████ | 501071/552076 [00:06<00:00, 78123.45it/s] 92%|█████████▏| 509080/552076 [00:06<00:00, 72839.98it/s] 94%|█████████▍| 520429/552076 [00:06<00:00, 81607.72it/s] 96%|█████████▌| 529079/552076 [00:06<00:00, 81242.64it/s] 98%|█████████▊| 539004/552076 [00:06<00:00, 82414.83it/s] 99%|█████████▉| 547490/552076 [00:06<00:00, 75316.85it/s]100%|██████████| 552076/552076 [00:06<00:00, 81864.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7774/552076 [00:00<00:07, 77736.00it/s]  3%|▎         | 18268/552076 [00:00<00:06, 84290.25it/s]  5%|▍         | 26733/552076 [00:00<00:06, 84397.16it/s]  7%|▋         | 38059/552076 [00:00<00:05, 91382.29it/s]  9%|▉         | 49400/552076 [00:00<00:05, 97034.71it/s] 11%|█         | 59312/552076 [00:00<00:05, 95647.96it/s] 12%|█▏        | 68154/552076 [00:00<00:06, 79641.86it/s] 14%|█▍        | 76062/552076 [00:00<00:06, 74067.64it/s] 16%|█▌        | 87545/552076 [00:00<00:05, 82895.28it/s] 18%|█▊        | 97313/552076 [00:01<00:05, 86836.72it/s] 20%|█▉        | 107749/552076 [00:01<00:04, 91040.05it/s] 21%|██        | 117121/552076 [00:01<00:04, 87789.98it/s] 23%|██▎       | 128533/552076 [00:01<00:04, 94317.23it/s] 25%|██▌       | 138251/552076 [00:01<00:04, 95031.43it/s] 27%|██▋       | 147956/552076 [00:01<00:04, 92444.34it/s] 29%|██▊       | 157371/552076 [00:01<00:04, 92947.18it/s] 31%|███       | 169276/552076 [00:01<00:03, 99490.94it/s] 33%|███▎      | 179431/552076 [00:01<00:03, 97781.75it/s] 34%|███▍      | 189495/552076 [00:02<00:03, 98621.78it/s] 36%|███▌      | 199465/552076 [00:02<00:03, 93364.35it/s] 38%|███▊      | 208935/552076 [00:02<00:04, 85157.44it/s] 40%|███▉      | 218074/552076 [00:02<00:03, 86935.46it/s] 41%|████      | 226940/552076 [00:02<00:05, 61150.74it/s] 42%|████▏     | 234231/552076 [00:02<00:06, 50680.38it/s] 44%|████▎     | 240421/552076 [00:02<00:06, 48539.11it/s] 45%|████▍     | 246080/552076 [00:03<00:06, 46258.26it/s] 46%|████▋     | 255666/552076 [00:03<00:05, 54757.97it/s] 48%|████▊     | 267335/552076 [00:03<00:04, 65127.02it/s] 50%|█████     | 278068/552076 [00:03<00:03, 73836.65it/s] 52%|█████▏    | 289717/552076 [00:03<00:03, 82947.81it/s] 55%|█████▍    | 301558/552076 [00:03<00:02, 91135.38it/s] 57%|█████▋    | 312749/552076 [00:03<00:02, 96508.01it/s] 59%|█████▊    | 323347/552076 [00:03<00:02, 88870.36it/s] 60%|██████    | 333016/552076 [00:03<00:02, 88709.56it/s] 62%|██████▏   | 342435/552076 [00:04<00:02, 80454.39it/s] 64%|██████▎   | 351011/552076 [00:04<00:02, 81900.10it/s] 65%|██████▌   | 361055/552076 [00:04<00:02, 86701.03it/s] 67%|██████▋   | 371968/552076 [00:04<00:01, 92396.13it/s] 69%|██████▉   | 382023/552076 [00:04<00:01, 94699.87it/s] 71%|███████▏  | 393786/552076 [00:04<00:01, 100581.65it/s] 73%|███████▎  | 404559/552076 [00:04<00:01, 102622.04it/s] 75%|███████▌  | 416456/552076 [00:04<00:01, 106703.60it/s] 77%|███████▋  | 427311/552076 [00:04<00:01, 104620.83it/s] 79%|███████▉  | 438247/552076 [00:05<00:01, 105998.69it/s] 82%|████████▏ | 450172/552076 [00:05<00:00, 109652.49it/s] 84%|████████▎ | 461241/552076 [00:05<00:00, 107782.66it/s] 86%|████████▌ | 472169/552076 [00:05<00:00, 108225.80it/s] 88%|████████▊ | 483102/552076 [00:05<00:00, 108552.89it/s] 90%|████████▉ | 494515/552076 [00:05<00:00, 110167.36it/s] 92%|█████████▏| 506186/552076 [00:05<00:00, 112051.08it/s] 94%|█████████▎| 517424/552076 [00:05<00:00, 112147.10it/s] 96%|█████████▌| 528661/552076 [00:05<00:00, 110453.50it/s] 98%|█████████▊| 539728/552076 [00:05<00:00, 108144.12it/s]100%|█████████▉| 550921/552076 [00:06<00:00, 109251.76it/s]100%|██████████| 552076/552076 [00:06<00:00, 91516.92it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6290/552076 [00:00<00:08, 62897.36it/s]  2%|▏         | 12177/552076 [00:00<00:09, 56461.02it/s]  3%|▎         | 18964/552076 [00:00<00:08, 59458.81it/s]  4%|▍         | 24291/552076 [00:00<00:09, 57277.45it/s]  5%|▌         | 28617/552076 [00:00<00:12, 41893.48it/s]  6%|▋         | 34517/552076 [00:00<00:11, 45884.26it/s]  8%|▊         | 41480/552076 [00:00<00:09, 51113.40it/s]  8%|▊         | 46670/552076 [00:00<00:10, 47336.93it/s] 10%|▉         | 53422/552076 [00:01<00:09, 51999.33it/s] 11%|█         | 58839/552076 [00:01<00:09, 50577.88it/s] 13%|█▎        | 69205/552076 [00:01<00:08, 59758.01it/s] 14%|█▍        | 79670/552076 [00:01<00:06, 68583.61it/s] 16%|█▌        | 87760/552076 [00:01<00:06, 71865.29it/s] 18%|█▊        | 97568/552076 [00:01<00:05, 78129.22it/s] 20%|█▉        | 108099/552076 [00:01<00:05, 84685.61it/s] 21%|██▏       | 118395/552076 [00:01<00:04, 89447.78it/s] 23%|██▎       | 127860/552076 [00:01<00:04, 89900.32it/s] 25%|██▍       | 137215/552076 [00:02<00:05, 69977.96it/s] 27%|██▋       | 147755/552076 [00:02<00:05, 77823.91it/s] 29%|██▊       | 158100/552076 [00:02<00:04, 79577.76it/s] 31%|███       | 168551/552076 [00:02<00:04, 84070.23it/s] 32%|███▏      | 177490/552076 [00:02<00:05, 74762.99it/s] 34%|███▎      | 185530/552076 [00:02<00:04, 73959.05it/s] 36%|███▌      | 197183/552076 [00:02<00:04, 83062.38it/s] 37%|███▋      | 206134/552076 [00:02<00:04, 79410.25it/s] 40%|███▉      | 218227/552076 [00:02<00:03, 88527.54it/s] 42%|████▏     | 230326/552076 [00:03<00:03, 96276.01it/s] 44%|████▎     | 241029/552076 [00:03<00:03, 99266.43it/s] 46%|████▌     | 251448/552076 [00:03<00:03, 99610.30it/s] 47%|████▋     | 261754/552076 [00:03<00:02, 99699.98it/s] 49%|████▉     | 271966/552076 [00:03<00:02, 97810.30it/s] 51%|█████     | 282488/552076 [00:03<00:02, 99919.26it/s] 53%|█████▎    | 294950/552076 [00:03<00:02, 106235.78it/s] 56%|█████▌    | 307851/552076 [00:03<00:02, 112175.75it/s] 58%|█████▊    | 319668/552076 [00:03<00:02, 113908.75it/s] 60%|██████    | 331503/552076 [00:03<00:01, 115204.72it/s] 62%|██████▏   | 343460/552076 [00:04<00:01, 116478.47it/s] 64%|██████▍   | 355511/552076 [00:04<00:01, 117658.86it/s] 67%|██████▋   | 367342/552076 [00:04<00:01, 107747.45it/s] 69%|██████▊   | 379362/552076 [00:04<00:01, 111202.98it/s] 71%|███████   | 391620/552076 [00:04<00:01, 114387.87it/s] 73%|███████▎  | 403861/552076 [00:04<00:01, 116680.33it/s] 75%|███████▌  | 416025/552076 [00:04<00:01, 118123.63it/s] 78%|███████▊  | 427921/552076 [00:04<00:01, 92415.27it/s]  80%|███████▉  | 439991/552076 [00:05<00:01, 99403.12it/s] 82%|████████▏ | 451976/552076 [00:05<00:00, 104763.19it/s] 84%|████████▍ | 463805/552076 [00:05<00:00, 108484.03it/s] 86%|████████▌ | 475910/552076 [00:05<00:00, 111970.52it/s] 88%|████████▊ | 487470/552076 [00:05<00:00, 90268.09it/s]  90%|█████████ | 497427/552076 [00:05<00:00, 84330.39it/s] 92%|█████████▏| 506590/552076 [00:05<00:00, 72619.88it/s] 93%|█████████▎| 514650/552076 [00:05<00:00, 66526.69it/s] 95%|█████████▍| 521961/552076 [00:06<00:00, 63585.57it/s] 96%|█████████▌| 528808/552076 [00:06<00:00, 55432.56it/s] 97%|█████████▋| 534881/552076 [00:06<00:00, 53037.18it/s] 98%|█████████▊| 540578/552076 [00:06<00:00, 49230.73it/s]100%|█████████▉| 551468/552076 [00:06<00:00, 58914.66it/s]100%|██████████| 552076/552076 [00:06<00:00, 83722.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8445/552076 [00:00<00:06, 84444.85it/s]  3%|▎         | 15283/552076 [00:00<00:06, 78278.58it/s]  4%|▍         | 23335/552076 [00:00<00:06, 78937.32it/s]  6%|▌         | 30530/552076 [00:00<00:06, 76702.10it/s]  7%|▋         | 38870/552076 [00:00<00:06, 78595.37it/s]  9%|▉         | 49082/552076 [00:00<00:05, 84429.76it/s] 11%|█         | 59372/552076 [00:00<00:05, 89234.56it/s] 12%|█▏        | 67785/552076 [00:00<00:06, 78073.34it/s] 14%|█▍        | 76930/552076 [00:00<00:05, 80626.90it/s] 15%|█▌        | 84941/552076 [00:01<00:05, 78946.48it/s] 17%|█▋        | 93668/552076 [00:01<00:05, 79155.03it/s] 19%|█▊        | 102313/552076 [00:01<00:05, 81208.35it/s] 20%|██        | 110433/552076 [00:01<00:05, 80493.06it/s] 22%|██▏       | 119964/552076 [00:01<00:05, 84429.97it/s] 24%|██▍       | 132956/552076 [00:01<00:04, 94339.13it/s] 27%|██▋       | 150063/552076 [00:01<00:03, 109006.32it/s] 30%|██▉       | 164210/552076 [00:01<00:03, 117064.69it/s] 32%|███▏      | 178608/552076 [00:01<00:03, 124018.93it/s] 35%|███▌      | 195661/552076 [00:01<00:02, 135070.82it/s] 38%|███▊      | 210203/552076 [00:02<00:02, 138016.82it/s] 41%|████      | 226106/552076 [00:02<00:02, 143712.65it/s] 44%|████▍     | 243533/552076 [00:02<00:02, 151690.33it/s] 47%|████▋     | 259158/552076 [00:02<00:02, 141889.04it/s] 50%|████▉     | 273795/552076 [00:02<00:02, 138446.75it/s] 53%|█████▎    | 291572/552076 [00:02<00:01, 148286.37it/s] 56%|█████▌    | 309701/552076 [00:02<00:01, 156851.32it/s] 59%|█████▉    | 327962/552076 [00:02<00:01, 163780.22it/s] 63%|██████▎   | 345470/552076 [00:02<00:01, 167012.43it/s] 66%|██████▌   | 362455/552076 [00:03<00:01, 156862.19it/s] 69%|██████▊   | 379093/552076 [00:03<00:01, 159599.93it/s] 73%|███████▎  | 401401/552076 [00:03<00:00, 174495.02it/s] 77%|███████▋  | 424017/552076 [00:03<00:00, 187332.99it/s] 80%|████████  | 443771/552076 [00:03<00:00, 190282.12it/s] 84%|████████▍ | 465529/552076 [00:03<00:00, 197722.14it/s] 88%|████████▊ | 487502/552076 [00:03<00:00, 203846.09it/s] 92%|█████████▏| 510113/552076 [00:03<00:00, 210048.99it/s] 96%|█████████▋| 531401/552076 [00:03<00:00, 205313.61it/s]100%|██████████| 552076/552076 [00:03<00:00, 140600.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19380/552076 [00:00<00:02, 193784.94it/s]  6%|▌         | 31441/552076 [00:00<00:03, 163944.07it/s]  9%|▉         | 52016/552076 [00:00<00:02, 174582.98it/s] 13%|█▎        | 70591/552076 [00:00<00:02, 177788.71it/s] 15%|█▌        | 84251/552076 [00:00<00:03, 134198.55it/s] 17%|█▋        | 96374/552076 [00:00<00:04, 106661.28it/s] 19%|█▉        | 107024/552076 [00:00<00:04, 106409.45it/s] 23%|██▎       | 126556/552076 [00:00<00:03, 123238.29it/s] 26%|██▋       | 145783/552076 [00:01<00:02, 138113.88it/s] 30%|███       | 167840/552076 [00:01<00:02, 155559.65it/s] 34%|███▍      | 188845/552076 [00:01<00:02, 168686.62it/s] 38%|███▊      | 208441/552076 [00:01<00:01, 176036.02it/s] 41%|████▏     | 228286/552076 [00:01<00:01, 182207.96it/s] 45%|████▍     | 247332/552076 [00:01<00:01, 183920.41it/s] 48%|████▊     | 267526/552076 [00:01<00:01, 188979.26it/s] 52%|█████▏    | 288110/552076 [00:01<00:01, 193739.81it/s] 56%|█████▌    | 309293/552076 [00:01<00:01, 198832.89it/s] 60%|█████▉    | 329447/552076 [00:01<00:01, 199295.71it/s] 64%|██████▎   | 351676/552076 [00:02<00:00, 205676.37it/s] 68%|██████▊   | 373188/552076 [00:02<00:00, 208420.28it/s] 71%|███████▏  | 394168/552076 [00:02<00:00, 183688.06it/s] 75%|███████▍  | 413939/552076 [00:02<00:00, 187679.79it/s] 79%|███████▊  | 433573/552076 [00:02<00:00, 190195.56it/s] 83%|████████▎ | 455975/552076 [00:02<00:00, 199218.17it/s] 87%|████████▋ | 478362/552076 [00:02<00:00, 206023.97it/s] 90%|█████████ | 499266/552076 [00:02<00:00, 190941.65it/s] 94%|█████████▍| 518791/552076 [00:02<00:00, 182778.31it/s] 98%|█████████▊| 540295/552076 [00:03<00:00, 191390.59it/s]100%|██████████| 552076/552076 [00:03<00:00, 179513.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17395/552076 [00:00<00:03, 173946.85it/s]  6%|▌         | 32902/552076 [00:00<00:03, 167816.21it/s]  9%|▉         | 50563/552076 [00:00<00:02, 170359.99it/s] 13%|█▎        | 72168/552076 [00:00<00:02, 181899.48it/s] 17%|█▋        | 93552/552076 [00:00<00:02, 190431.59it/s] 21%|██        | 114341/552076 [00:00<00:02, 195353.19it/s] 24%|██▍       | 134840/552076 [00:00<00:02, 198146.97it/s] 28%|██▊       | 153390/552076 [00:00<00:02, 149333.50it/s] 31%|███       | 172348/552076 [00:00<00:02, 159490.62it/s] 34%|███▍      | 190138/552076 [00:01<00:02, 164600.16it/s] 38%|███▊      | 209635/552076 [00:01<00:01, 172667.94it/s] 41%|████      | 227437/552076 [00:01<00:01, 173411.80it/s] 44%|████▍     | 245153/552076 [00:01<00:01, 172181.39it/s] 48%|████▊     | 262774/552076 [00:01<00:01, 173369.20it/s] 51%|█████     | 281281/552076 [00:01<00:01, 176718.84it/s] 54%|█████▍    | 299100/552076 [00:01<00:01, 176564.30it/s] 58%|█████▊    | 320492/552076 [00:01<00:01, 186323.94it/s] 61%|██████▏   | 339341/552076 [00:01<00:01, 180878.41it/s] 65%|██████▌   | 359835/552076 [00:02<00:01, 187479.81it/s] 69%|██████▉   | 381486/552076 [00:02<00:00, 195335.74it/s] 73%|███████▎  | 401260/552076 [00:02<00:00, 196048.82it/s] 77%|███████▋  | 422375/552076 [00:02<00:00, 200344.87it/s] 80%|████████  | 444077/552076 [00:02<00:00, 205071.08it/s] 84%|████████▍ | 465998/552076 [00:02<00:00, 209117.38it/s] 88%|████████▊ | 487013/552076 [00:02<00:00, 206234.45it/s] 92%|█████████▏| 509218/552076 [00:02<00:00, 210735.87it/s] 96%|█████████▌| 531348/552076 [00:02<00:00, 213797.14it/s]100%|██████████| 552076/552076 [00:02<00:00, 189548.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21203/552076 [00:00<00:02, 212025.15it/s]  8%|▊         | 43218/552076 [00:00<00:02, 214396.60it/s] 12%|█▏        | 65007/552076 [00:00<00:02, 215432.10it/s] 16%|█▌        | 86262/552076 [00:00<00:02, 214557.81it/s] 20%|█▉        | 108652/552076 [00:00<00:02, 217277.33it/s] 24%|██▎       | 130426/552076 [00:00<00:01, 217415.83it/s] 28%|██▊       | 152434/552076 [00:00<00:01, 218207.57it/s] 32%|███▏      | 174919/552076 [00:00<00:01, 220157.86it/s] 36%|███▌      | 196662/552076 [00:00<00:01, 219331.30it/s] 39%|███▉      | 217905/552076 [00:01<00:01, 217213.23it/s] 43%|████▎     | 239531/552076 [00:01<00:01, 216923.02it/s] 47%|████▋     | 261705/552076 [00:01<00:01, 218344.83it/s] 52%|█████▏    | 284480/552076 [00:01<00:01, 221083.70it/s] 55%|█████▌    | 306397/552076 [00:01<00:01, 216308.34it/s] 59%|█████▉    | 327917/552076 [00:01<00:01, 215415.09it/s] 63%|██████▎   | 349382/552076 [00:01<00:00, 215013.92it/s] 67%|██████▋   | 371181/552076 [00:01<00:00, 215897.47it/s] 71%|███████   | 392734/552076 [00:01<00:01, 157799.96it/s] 74%|███████▍  | 410730/552076 [00:02<00:00, 152235.12it/s] 78%|███████▊  | 432976/552076 [00:02<00:00, 168159.95it/s] 82%|████████▏ | 455252/552076 [00:02<00:00, 181505.71it/s] 86%|████████▋ | 476266/552076 [00:02<00:00, 189239.92it/s] 90%|████████▉ | 496286/552076 [00:02<00:00, 166539.17it/s] 93%|█████████▎| 514204/552076 [00:02<00:00, 163651.05it/s] 97%|█████████▋| 534867/552076 [00:02<00:00, 174542.42it/s]100%|██████████| 552076/552076 [00:02<00:00, 196909.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15367/552076 [00:00<00:03, 153659.16it/s]  5%|▍         | 26774/552076 [00:00<00:03, 139167.12it/s]  8%|▊         | 45466/552076 [00:00<00:03, 150717.25it/s] 12%|█▏        | 67562/552076 [00:00<00:02, 166606.35it/s] 16%|█▌        | 88907/552076 [00:00<00:02, 178346.45it/s] 20%|█▉        | 109204/552076 [00:00<00:02, 185081.95it/s] 23%|██▎       | 126544/552076 [00:00<00:02, 169970.79it/s] 27%|██▋       | 146341/552076 [00:00<00:02, 177499.88it/s] 30%|███       | 168027/552076 [00:00<00:02, 187720.20it/s] 34%|███▍      | 188001/552076 [00:01<00:01, 191171.37it/s] 38%|███▊      | 208335/552076 [00:01<00:01, 194665.36it/s] 41%|████▏     | 228845/552076 [00:01<00:01, 197679.60it/s] 45%|████▌     | 248832/552076 [00:01<00:01, 198331.01it/s] 49%|████▉     | 270322/552076 [00:01<00:01, 203025.63it/s] 53%|█████▎    | 290657/552076 [00:01<00:01, 201391.09it/s] 56%|█████▋    | 311064/552076 [00:01<00:01, 202185.97it/s] 60%|██████    | 331302/552076 [00:01<00:01, 201072.01it/s] 64%|██████▎   | 351652/552076 [00:01<00:00, 201791.78it/s] 67%|██████▋   | 371842/552076 [00:01<00:00, 198710.56it/s] 71%|███████   | 392795/552076 [00:02<00:00, 201833.94it/s] 75%|███████▍  | 413276/552076 [00:02<00:00, 202716.55it/s] 79%|███████▊  | 434082/552076 [00:02<00:00, 204289.31it/s] 82%|████████▏ | 454527/552076 [00:02<00:00, 199655.00it/s] 86%|████████▌ | 474580/552076 [00:02<00:00, 199913.76it/s] 90%|████████▉ | 494596/552076 [00:02<00:00, 198498.43it/s] 93%|█████████▎| 514551/552076 [00:02<00:00, 198810.95it/s] 97%|█████████▋| 534446/552076 [00:02<00:00, 170588.58it/s]100%|██████████| 552076/552076 [00:02<00:00, 188006.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9036/552076 [00:00<00:06, 83939.22it/s]  3%|▎         | 18205/552076 [00:00<00:06, 86123.01it/s]  5%|▌         | 27853/552076 [00:00<00:05, 88120.47it/s]  7%|▋         | 36154/552076 [00:00<00:05, 86520.74it/s]  8%|▊         | 44693/552076 [00:00<00:05, 85035.87it/s] 10%|█         | 55350/552076 [00:00<00:05, 90521.85it/s] 12%|█▏        | 64877/552076 [00:00<00:05, 91665.04it/s] 14%|█▎        | 75481/552076 [00:00<00:04, 95549.56it/s] 16%|█▌        | 87627/552076 [00:00<00:04, 102081.63it/s] 18%|█▊        | 99749/552076 [00:01<00:04, 107156.00it/s] 20%|██        | 111263/552076 [00:01<00:04, 109432.43it/s] 22%|██▏       | 122695/552076 [00:01<00:03, 110851.43it/s] 24%|██▍       | 133776/552076 [00:01<00:03, 104609.97it/s] 26%|██▋       | 145278/552076 [00:01<00:03, 107527.18it/s] 29%|██▊       | 157404/552076 [00:01<00:03, 111307.72it/s] 31%|███       | 168617/552076 [00:01<00:03, 107592.99it/s] 33%|███▎      | 179461/552076 [00:01<00:03, 104616.82it/s] 35%|███▍      | 192158/552076 [00:01<00:03, 110448.59it/s] 37%|███▋      | 204431/552076 [00:01<00:03, 113864.93it/s] 39%|███▉      | 216746/552076 [00:02<00:02, 116499.20it/s] 41%|████▏     | 228499/552076 [00:02<00:03, 103728.31it/s] 44%|████▎     | 240683/552076 [00:02<00:02, 108569.10it/s] 46%|████▌     | 253077/552076 [00:02<00:02, 112764.17it/s] 48%|████▊     | 264600/552076 [00:02<00:02, 105520.11it/s] 50%|████▉     | 275419/552076 [00:02<00:02, 96220.19it/s]  52%|█████▏    | 287744/552076 [00:02<00:02, 102995.28it/s] 54%|█████▍    | 300021/552076 [00:02<00:02, 108223.38it/s] 57%|█████▋    | 312028/552076 [00:02<00:02, 111523.41it/s] 59%|█████▊    | 323439/552076 [00:03<00:02, 106721.05it/s] 61%|██████    | 334336/552076 [00:03<00:02, 106767.43it/s] 63%|██████▎   | 345170/552076 [00:03<00:02, 90426.70it/s]  65%|██████▍   | 357227/552076 [00:03<00:01, 97756.67it/s] 67%|██████▋   | 369424/552076 [00:03<00:01, 103945.82it/s] 69%|██████▉   | 381626/552076 [00:03<00:01, 108779.05it/s] 71%|███████▏  | 393918/552076 [00:03<00:01, 112665.30it/s] 73%|███████▎  | 405502/552076 [00:03<00:01, 92047.94it/s]  75%|███████▌  | 415546/552076 [00:04<00:01, 92950.79it/s] 77%|███████▋  | 426435/552076 [00:04<00:01, 97218.68it/s] 79%|███████▉  | 438745/552076 [00:04<00:01, 103761.84it/s] 81%|████████▏ | 449568/552076 [00:04<00:01, 86491.33it/s]  84%|████████▎ | 461771/552076 [00:04<00:00, 94770.09it/s] 86%|████████▌ | 474030/552076 [00:04<00:00, 101692.59it/s] 88%|████████▊ | 486328/552076 [00:04<00:00, 107260.92it/s] 90%|█████████ | 498635/552076 [00:04<00:00, 111559.32it/s] 93%|█████████▎| 510960/552076 [00:04<00:00, 114824.80it/s] 95%|█████████▍| 523546/552076 [00:05<00:00, 117925.77it/s] 97%|█████████▋| 536153/552076 [00:05<00:00, 120255.83it/s] 99%|█████████▉| 548519/552076 [00:05<00:00, 121255.91it/s]100%|██████████| 552076/552076 [00:05<00:00, 105501.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10527/552076 [00:00<00:05, 105268.09it/s]  4%|▍         | 20955/552076 [00:00<00:05, 104968.53it/s]  6%|▌         | 33174/552076 [00:00<00:04, 109602.50it/s]  8%|▊         | 45773/552076 [00:00<00:04, 114051.14it/s] 10%|█         | 57932/552076 [00:00<00:04, 116211.62it/s] 13%|█▎        | 70177/552076 [00:00<00:04, 118014.25it/s] 15%|█▍        | 82534/552076 [00:00<00:03, 119625.60it/s] 17%|█▋        | 94393/552076 [00:00<00:03, 119312.29it/s] 19%|█▉        | 105749/552076 [00:00<00:04, 97105.50it/s] 21%|██        | 115729/552076 [00:01<00:05, 86938.40it/s] 23%|██▎       | 127888/552076 [00:01<00:04, 95065.37it/s] 25%|██▌       | 140143/552076 [00:01<00:04, 101922.71it/s] 28%|██▊       | 152535/552076 [00:01<00:03, 107655.40it/s] 30%|██▉       | 164934/552076 [00:01<00:03, 112084.00it/s] 32%|███▏      | 177209/552076 [00:01<00:03, 115081.60it/s] 34%|███▍      | 189549/552076 [00:01<00:03, 117456.25it/s] 37%|███▋      | 201994/552076 [00:01<00:02, 119469.06it/s] 39%|███▉      | 214087/552076 [00:01<00:02, 119257.08it/s] 41%|████      | 226451/552076 [00:02<00:02, 120535.90it/s] 43%|████▎     | 238805/552076 [00:02<00:02, 121419.92it/s] 46%|████▌     | 251225/552076 [00:02<00:02, 122238.76it/s] 48%|████▊     | 263488/552076 [00:02<00:02, 101396.33it/s] 50%|████▉     | 275756/552076 [00:02<00:02, 106961.46it/s] 52%|█████▏    | 286969/552076 [00:02<00:02, 101822.73it/s] 54%|█████▍    | 297565/552076 [00:02<00:02, 94388.70it/s]  56%|█████▌    | 309994/552076 [00:02<00:02, 101729.71it/s] 58%|█████▊    | 322373/552076 [00:02<00:02, 107474.48it/s] 61%|██████    | 334789/552076 [00:03<00:01, 111987.62it/s] 63%|██████▎   | 347211/552076 [00:03<00:01, 115396.01it/s] 65%|██████▌   | 359611/552076 [00:03<00:01, 117848.32it/s] 67%|██████▋   | 371997/552076 [00:03<00:01, 119588.52it/s] 70%|██████▉   | 384435/552076 [00:03<00:01, 120984.77it/s] 72%|███████▏  | 396795/552076 [00:03<00:01, 121755.79it/s] 74%|███████▍  | 409043/552076 [00:03<00:01, 94409.58it/s]  76%|███████▋  | 421186/552076 [00:03<00:01, 101161.27it/s] 78%|███████▊  | 433299/552076 [00:03<00:01, 106423.11it/s] 81%|████████  | 445532/552076 [00:04<00:00, 110741.20it/s] 83%|████████▎ | 457760/552076 [00:04<00:00, 113965.65it/s] 85%|████████▌ | 470058/552076 [00:04<00:00, 116526.77it/s] 87%|████████▋ | 482359/552076 [00:04<00:00, 118397.07it/s] 90%|████████▉ | 494700/552076 [00:04<00:00, 119857.53it/s] 92%|█████████▏| 506980/552076 [00:04<00:00, 120724.62it/s] 94%|█████████▍| 519156/552076 [00:04<00:00, 92241.89it/s]  96%|█████████▌| 531346/552076 [00:04<00:00, 99503.22it/s] 98%|█████████▊| 543437/552076 [00:04<00:00, 105084.40it/s]100%|██████████| 552076/552076 [00:05<00:00, 110235.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10099/552076 [00:00<00:06, 86344.14it/s]  4%|▍         | 22010/552076 [00:00<00:05, 94110.12it/s]  6%|▌         | 33945/552076 [00:00<00:05, 100483.63it/s]  8%|▊         | 46105/552076 [00:00<00:04, 106003.81it/s] 10%|█         | 56687/552076 [00:00<00:04, 105947.95it/s] 12%|█▏        | 68910/552076 [00:00<00:04, 110356.74it/s] 15%|█▍        | 81062/552076 [00:00<00:04, 113482.09it/s] 17%|█▋        | 92932/552076 [00:00<00:03, 114997.17it/s] 19%|█▉        | 104042/552076 [00:00<00:04, 95548.57it/s] 21%|██        | 116012/552076 [00:01<00:04, 101703.91it/s] 23%|██▎       | 128018/552076 [00:01<00:03, 106591.31it/s] 25%|██▌       | 139842/552076 [00:01<00:03, 109834.91it/s] 27%|██▋       | 151646/552076 [00:01<00:03, 112171.70it/s] 30%|██▉       | 163874/552076 [00:01<00:03, 115024.21it/s] 32%|███▏      | 176245/552076 [00:01<00:03, 117497.48it/s] 34%|███▍      | 188101/552076 [00:01<00:03, 117611.13it/s] 36%|███▋      | 200331/552076 [00:01<00:02, 118977.57it/s] 38%|███▊      | 212285/552076 [00:01<00:02, 118336.16it/s] 41%|████      | 224596/552076 [00:01<00:02, 119727.35it/s] 43%|████▎     | 236827/552076 [00:02<00:02, 120489.04it/s] 45%|████▌     | 249023/552076 [00:02<00:02, 120924.05it/s] 47%|████▋     | 261174/552076 [00:02<00:02, 121098.76it/s] 50%|████▉     | 273569/552076 [00:02<00:02, 121938.84it/s] 52%|█████▏    | 285944/552076 [00:02<00:02, 122475.68it/s] 54%|█████▍    | 298199/552076 [00:02<00:02, 122209.14it/s] 56%|█████▌    | 310426/552076 [00:02<00:01, 121865.47it/s] 58%|█████▊    | 322617/552076 [00:02<00:02, 97563.74it/s]  61%|██████    | 334056/552076 [00:02<00:02, 102067.69it/s] 63%|██████▎   | 346512/552076 [00:03<00:01, 107912.36it/s] 65%|██████▍   | 357997/552076 [00:03<00:01, 109903.45it/s] 67%|██████▋   | 370340/552076 [00:03<00:01, 113638.97it/s] 69%|██████▉   | 382611/552076 [00:03<00:01, 116215.28it/s] 72%|███████▏  | 394879/552076 [00:03<00:01, 118080.49it/s] 74%|███████▎  | 407092/552076 [00:03<00:01, 119265.98it/s] 76%|███████▌  | 419133/552076 [00:03<00:01, 92815.61it/s]  78%|███████▊  | 431400/552076 [00:03<00:01, 100124.28it/s] 80%|████████  | 443700/552076 [00:03<00:01, 106040.01it/s] 83%|████████▎ | 455695/552076 [00:04<00:00, 109583.68it/s] 85%|████████▍ | 468217/552076 [00:04<00:00, 113846.55it/s] 87%|████████▋ | 480889/552076 [00:04<00:00, 117424.41it/s] 89%|████████▉ | 493328/552076 [00:04<00:00, 119428.92it/s] 92%|█████████▏| 505531/552076 [00:04<00:00, 120196.21it/s] 94%|█████████▍| 517914/552076 [00:04<00:00, 121262.26it/s] 96%|█████████▌| 530167/552076 [00:04<00:00, 121638.99it/s] 98%|█████████▊| 542478/552076 [00:04<00:00, 122075.32it/s]100%|██████████| 552076/552076 [00:04<00:00, 113957.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6824/552076 [00:00<00:07, 68234.53it/s]  3%|▎         | 16964/552076 [00:00<00:07, 75657.86it/s]  5%|▌         | 27747/552076 [00:00<00:06, 83095.41it/s]  6%|▋         | 35836/552076 [00:00<00:06, 82019.83it/s]  8%|▊         | 45336/552076 [00:00<00:05, 85524.17it/s] 10%|▉         | 52978/552076 [00:00<00:06, 81289.66it/s] 12%|█▏        | 64463/552076 [00:00<00:05, 89099.41it/s] 14%|█▍        | 78441/552076 [00:00<00:04, 99973.29it/s] 18%|█▊        | 98438/552076 [00:00<00:03, 117617.39it/s] 22%|██▏       | 121506/552076 [00:01<00:03, 137892.42it/s] 26%|██▌       | 142636/552076 [00:01<00:02, 153936.02it/s] 30%|██▉       | 165326/552076 [00:01<00:02, 170370.30it/s] 33%|███▎      | 184491/552076 [00:01<00:02, 171550.35it/s] 37%|███▋      | 203138/552076 [00:01<00:02, 157339.43it/s] 40%|███▉      | 220147/552076 [00:01<00:02, 127918.43it/s] 43%|████▎     | 234901/552076 [00:01<00:02, 133232.36it/s] 45%|████▌     | 249579/552076 [00:01<00:02, 137025.80it/s] 49%|████▊     | 268452/552076 [00:01<00:01, 149295.77it/s] 52%|█████▏    | 284365/552076 [00:02<00:01, 150479.11it/s] 54%|█████▍    | 300382/552076 [00:02<00:01, 153259.23it/s] 57%|█████▋    | 316204/552076 [00:02<00:02, 113458.64it/s] 61%|██████    | 337399/552076 [00:02<00:01, 131837.78it/s] 65%|██████▍   | 357672/552076 [00:02<00:01, 147289.25it/s] 69%|██████▊   | 379388/552076 [00:02<00:01, 163024.30it/s] 72%|███████▏  | 400091/552076 [00:02<00:00, 174127.67it/s] 76%|███████▋  | 422114/552076 [00:02<00:00, 185794.90it/s] 80%|████████  | 443564/552076 [00:02<00:00, 193565.54it/s] 85%|████████▍ | 466678/552076 [00:03<00:00, 203488.30it/s] 89%|████████▊ | 489600/552076 [00:03<00:00, 210577.91it/s] 93%|█████████▎| 511997/552076 [00:03<00:00, 214421.72it/s] 97%|█████████▋| 533932/552076 [00:03<00:00, 215875.49it/s]100%|██████████| 552076/552076 [00:03<00:00, 159746.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20316/552076 [00:00<00:02, 203152.93it/s]  8%|▊         | 41839/552076 [00:00<00:02, 206628.80it/s] 11%|█         | 61544/552076 [00:00<00:02, 203657.49it/s] 15%|█▌        | 83659/552076 [00:00<00:02, 208605.99it/s] 19%|█▉        | 105928/552076 [00:00<00:02, 212639.27it/s] 23%|██▎       | 128648/552076 [00:00<00:01, 216805.37it/s] 27%|██▋       | 148670/552076 [00:00<00:01, 211547.19it/s] 31%|███       | 171722/552076 [00:00<00:01, 216902.57it/s] 35%|███▌      | 194886/552076 [00:00<00:01, 221121.47it/s] 40%|███▉      | 218307/552076 [00:01<00:01, 224891.71it/s] 44%|████▎     | 240292/552076 [00:01<00:01, 219995.97it/s] 48%|████▊     | 263074/552076 [00:01<00:01, 222284.98it/s] 52%|█████▏    | 286513/552076 [00:01<00:01, 225781.96it/s] 56%|█████▌    | 309702/552076 [00:01<00:01, 227580.22it/s] 60%|██████    | 332363/552076 [00:01<00:00, 222292.26it/s] 64%|██████▍   | 354552/552076 [00:01<00:00, 221304.86it/s] 68%|██████▊   | 377406/552076 [00:01<00:00, 223426.59it/s] 72%|███████▏  | 400023/552076 [00:01<00:00, 224239.48it/s] 77%|███████▋  | 422438/552076 [00:01<00:00, 221833.44it/s] 81%|████████  | 444621/552076 [00:02<00:00, 214176.66it/s] 84%|████████▍ | 466096/552076 [00:02<00:00, 184079.27it/s] 88%|████████▊ | 485287/552076 [00:02<00:00, 168195.73it/s] 91%|█████████ | 502921/552076 [00:02<00:00, 167504.23it/s] 94%|█████████▍| 520242/552076 [00:02<00:00, 158887.68it/s] 97%|█████████▋| 536623/552076 [00:02<00:00, 130067.35it/s]100%|█████████▉| 550831/552076 [00:02<00:00, 124484.61it/s]100%|██████████| 552076/552076 [00:02<00:00, 192919.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17648/552076 [00:00<00:03, 176473.86it/s]  7%|▋         | 39160/552076 [00:00<00:02, 186525.67it/s] 11%|█         | 61638/552076 [00:00<00:02, 196559.57it/s] 15%|█▌        | 83876/552076 [00:00<00:02, 203652.79it/s] 19%|█▉        | 104362/552076 [00:00<00:02, 204011.48it/s] 23%|██▎       | 126726/552076 [00:00<00:02, 209527.26it/s] 27%|██▋       | 150155/552076 [00:00<00:01, 216387.09it/s] 31%|███▏      | 173698/552076 [00:00<00:01, 221766.73it/s] 35%|███▌      | 195596/552076 [00:00<00:01, 220920.80it/s] 39%|███▉      | 217673/552076 [00:01<00:01, 220875.29it/s] 43%|████▎     | 239336/552076 [00:01<00:01, 208087.67it/s] 47%|████▋     | 260000/552076 [00:01<00:01, 196096.18it/s] 51%|█████     | 279651/552076 [00:01<00:01, 187530.53it/s] 55%|█████▍    | 302184/552076 [00:01<00:01, 197466.53it/s] 59%|█████▉    | 324749/552076 [00:01<00:01, 205152.03it/s] 63%|██████▎   | 346714/552076 [00:01<00:00, 209294.46it/s] 67%|██████▋   | 367824/552076 [00:01<00:01, 181406.02it/s] 70%|███████   | 386752/552076 [00:01<00:00, 178779.92it/s] 74%|███████▍  | 409193/552076 [00:02<00:00, 190393.32it/s] 78%|███████▊  | 431423/552076 [00:02<00:00, 198959.75it/s] 82%|████████▏ | 453066/552076 [00:02<00:00, 203895.61it/s] 86%|████████▌ | 474479/552076 [00:02<00:00, 206859.91it/s] 90%|████████▉ | 496377/552076 [00:02<00:00, 210350.14it/s] 94%|█████████▍| 517627/552076 [00:02<00:00, 210412.43it/s] 98%|█████████▊| 540250/552076 [00:02<00:00, 214919.52it/s]100%|██████████| 552076/552076 [00:02<00:00, 206908.79it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21978/552076 [00:00<00:02, 219776.02it/s]  8%|▊         | 43663/552076 [00:00<00:02, 218887.49it/s] 12%|█▏        | 65014/552076 [00:00<00:02, 217245.44it/s] 15%|█▌        | 84103/552076 [00:00<00:02, 208604.80it/s] 19%|█▉        | 104266/552076 [00:00<00:02, 206460.91it/s] 23%|██▎       | 125259/552076 [00:00<00:02, 207489.45it/s] 27%|██▋       | 147632/552076 [00:00<00:01, 212107.30it/s] 30%|███       | 167759/552076 [00:00<00:01, 208734.80it/s] 34%|███▍      | 189664/552076 [00:00<00:01, 211724.49it/s] 38%|███▊      | 212490/552076 [00:01<00:01, 216426.59it/s] 43%|████▎     | 235119/552076 [00:01<00:01, 219292.37it/s] 46%|████▋     | 256664/552076 [00:01<00:01, 218048.99it/s] 51%|█████     | 280016/552076 [00:01<00:01, 222470.14it/s] 55%|█████▍    | 303641/552076 [00:01<00:01, 226429.57it/s] 59%|█████▉    | 327357/552076 [00:01<00:00, 229543.97it/s] 63%|██████▎   | 350253/552076 [00:01<00:00, 227098.71it/s] 68%|██████▊   | 373485/552076 [00:01<00:00, 228639.06it/s] 72%|███████▏  | 397045/552076 [00:01<00:00, 230683.35it/s] 76%|███████▌  | 420103/552076 [00:01<00:00, 228917.90it/s] 80%|████████  | 442991/552076 [00:02<00:00, 217891.97it/s] 84%|████████▍ | 464889/552076 [00:02<00:00, 215310.36it/s] 88%|████████▊ | 487675/552076 [00:02<00:00, 218926.37it/s] 92%|█████████▏| 509641/552076 [00:02<00:00, 218885.17it/s] 96%|█████████▋| 531581/552076 [00:02<00:00, 210020.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 217705.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20708/552076 [00:00<00:02, 207072.30it/s]  8%|▊         | 42469/552076 [00:00<00:02, 210123.19it/s] 12%|█▏        | 64145/552076 [00:00<00:02, 212068.40it/s] 16%|█▌        | 87177/552076 [00:00<00:02, 217231.05it/s] 20%|██        | 110767/552076 [00:00<00:01, 222512.19it/s] 24%|██▍       | 133884/552076 [00:00<00:01, 225039.16it/s] 28%|██▊       | 155822/552076 [00:00<00:01, 223308.45it/s] 32%|███▏      | 178410/552076 [00:00<00:01, 224071.11it/s] 36%|███▋      | 201111/552076 [00:00<00:01, 224941.15it/s] 41%|████      | 223830/552076 [00:01<00:01, 225606.54it/s] 45%|████▍     | 245820/552076 [00:01<00:01, 223860.03it/s] 49%|████▊     | 268167/552076 [00:01<00:01, 223739.42it/s] 53%|█████▎    | 290686/552076 [00:01<00:01, 224169.66it/s] 57%|█████▋    | 312909/552076 [00:01<00:01, 217374.79it/s] 61%|██████    | 335057/552076 [00:01<00:00, 218588.49it/s] 65%|██████▍   | 357078/552076 [00:01<00:00, 219070.16it/s] 69%|██████▊   | 378942/552076 [00:01<00:00, 215106.40it/s] 73%|███████▎  | 400439/552076 [00:01<00:00, 206501.68it/s] 76%|███████▋  | 421153/552076 [00:01<00:00, 181525.04it/s] 80%|████████  | 442641/552076 [00:02<00:00, 190388.89it/s] 84%|████████▍ | 462614/552076 [00:02<00:00, 193096.76it/s] 88%|████████▊ | 484164/552076 [00:02<00:00, 199311.10it/s] 91%|█████████▏| 504569/552076 [00:02<00:00, 200707.57it/s] 95%|█████████▌| 525737/552076 [00:02<00:00, 203877.47it/s] 99%|█████████▉| 546294/552076 [00:02<00:00, 174205.85it/s]100%|██████████| 552076/552076 [00:02<00:00, 207539.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20829/552076 [00:00<00:02, 208284.24it/s]  8%|▊         | 43172/552076 [00:00<00:02, 212607.37it/s] 12%|█▏        | 64983/552076 [00:00<00:02, 214226.43it/s] 16%|█▌        | 87246/552076 [00:00<00:02, 216678.23it/s] 20%|█▉        | 107887/552076 [00:00<00:02, 213489.60it/s] 23%|██▎       | 125760/552076 [00:00<00:02, 195525.68it/s] 26%|██▌       | 143174/552076 [00:00<00:02, 166351.76it/s] 29%|██▉       | 159066/552076 [00:00<00:02, 150567.81it/s] 31%|███▏      | 173889/552076 [00:00<00:02, 141112.11it/s] 34%|███▍      | 187957/552076 [00:01<00:02, 135048.21it/s] 36%|███▋      | 201487/552076 [00:01<00:02, 133920.06it/s] 39%|███▉      | 214899/552076 [00:01<00:02, 122133.79it/s] 41%|████      | 227327/552076 [00:01<00:02, 117934.40it/s] 43%|████▎     | 239302/552076 [00:01<00:02, 115021.13it/s] 45%|████▌     | 250947/552076 [00:01<00:02, 114404.59it/s] 48%|████▊     | 262489/552076 [00:01<00:02, 112538.96it/s] 50%|████▉     | 273821/552076 [00:01<00:02, 110075.09it/s] 52%|█████▏    | 284895/552076 [00:02<00:02, 107298.98it/s] 54%|█████▍    | 298071/552076 [00:02<00:02, 113627.01it/s] 56%|█████▋    | 310787/552076 [00:02<00:02, 117372.96it/s] 58%|█████▊    | 322657/552076 [00:02<00:01, 115057.07it/s] 61%|██████    | 334266/552076 [00:02<00:01, 114684.71it/s] 63%|██████▎   | 345884/552076 [00:02<00:01, 115129.11it/s] 65%|██████▍   | 357769/552076 [00:02<00:01, 116219.90it/s] 67%|██████▋   | 369430/552076 [00:02<00:01, 116201.28it/s] 69%|██████▉   | 381077/552076 [00:02<00:01, 114706.31it/s] 71%|███████   | 392571/552076 [00:02<00:01, 114020.45it/s] 73%|███████▎  | 403991/552076 [00:03<00:01, 111249.26it/s] 75%|███████▌  | 415143/552076 [00:03<00:01, 102116.52it/s] 77%|███████▋  | 425521/552076 [00:03<00:01, 99898.24it/s]  79%|███████▉  | 435638/552076 [00:03<00:01, 83038.48it/s] 81%|████████  | 444507/552076 [00:03<00:01, 75210.35it/s] 83%|████████▎ | 456412/552076 [00:03<00:01, 84549.75it/s] 85%|████████▍ | 468763/552076 [00:03<00:00, 93386.54it/s] 87%|████████▋ | 480960/552076 [00:03<00:00, 100448.19it/s] 89%|████████▉ | 492857/552076 [00:03<00:00, 105368.81it/s] 92%|█████████▏| 505594/552076 [00:04<00:00, 111126.81it/s] 94%|█████████▎| 517564/552076 [00:04<00:00, 113566.79it/s] 96%|█████████▌| 529272/552076 [00:04<00:00, 101903.40it/s] 98%|█████████▊| 541708/552076 [00:04<00:00, 107739.71it/s]100%|██████████| 552076/552076 [00:04<00:00, 122500.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5131/552076 [00:00<00:10, 51304.91it/s]  2%|▏         | 11414/552076 [00:00<00:09, 54290.76it/s]  3%|▎         | 17563/552076 [00:00<00:09, 54699.80it/s]  4%|▍         | 23205/552076 [00:00<00:09, 55203.60it/s]  6%|▌         | 32901/552076 [00:00<00:08, 63393.10it/s]  7%|▋         | 38829/552076 [00:00<00:09, 56583.10it/s]  9%|▊         | 47633/552076 [00:00<00:07, 63375.93it/s] 11%|█         | 58948/552076 [00:00<00:06, 73010.79it/s] 13%|█▎        | 69677/552076 [00:00<00:05, 80749.26it/s] 15%|█▍        | 81564/552076 [00:01<00:05, 89343.95it/s] 17%|█▋        | 93765/552076 [00:01<00:04, 97144.46it/s] 19%|█▉        | 106007/552076 [00:01<00:04, 103557.39it/s] 21%|██▏       | 118168/552076 [00:01<00:04, 108383.65it/s] 24%|██▎       | 129962/552076 [00:01<00:03, 111081.75it/s] 26%|██▌       | 141440/552076 [00:01<00:03, 106315.07it/s] 28%|██▊       | 152374/552076 [00:01<00:03, 102095.25it/s] 29%|██▉       | 162831/552076 [00:01<00:04, 94510.61it/s]  31%|███▏      | 172568/552076 [00:01<00:04, 85283.44it/s] 33%|███▎      | 182452/552076 [00:02<00:04, 88941.66it/s] 35%|███▌      | 194114/552076 [00:02<00:03, 95759.69it/s] 37%|███▋      | 205775/552076 [00:02<00:03, 101185.46it/s] 39%|███▉      | 217750/552076 [00:02<00:03, 106118.70it/s] 42%|████▏     | 229569/552076 [00:02<00:02, 109471.43it/s] 44%|████▎     | 241456/552076 [00:02<00:02, 112130.88it/s] 46%|████▌     | 252850/552076 [00:02<00:02, 106542.50it/s] 48%|████▊     | 263689/552076 [00:02<00:03, 79659.45it/s]  50%|████▉     | 275818/552076 [00:02<00:03, 88802.59it/s] 52%|█████▏    | 287818/552076 [00:03<00:02, 96314.08it/s] 54%|█████▍    | 300159/552076 [00:03<00:02, 103104.65it/s] 57%|█████▋    | 312108/552076 [00:03<00:02, 107527.71it/s] 59%|█████▊    | 324311/552076 [00:03<00:02, 111501.29it/s] 61%|██████    | 336597/552076 [00:03<00:01, 114680.97it/s] 63%|██████▎   | 348887/552076 [00:03<00:01, 117027.48it/s] 65%|██████▌   | 360848/552076 [00:03<00:01, 109615.88it/s] 68%|██████▊   | 374337/552076 [00:03<00:01, 116142.16it/s] 70%|███████   | 387928/552076 [00:03<00:01, 121441.12it/s] 73%|███████▎  | 400468/552076 [00:04<00:01, 122601.81it/s] 75%|███████▍  | 412922/552076 [00:04<00:01, 122697.46it/s] 77%|███████▋  | 425327/552076 [00:04<00:01, 122925.04it/s] 79%|███████▉  | 437715/552076 [00:04<00:00, 122441.24it/s] 82%|████████▏ | 450065/552076 [00:04<00:00, 122754.55it/s] 84%|████████▍ | 462388/552076 [00:04<00:00, 110874.84it/s] 86%|████████▌ | 473728/552076 [00:04<00:00, 90711.88it/s]  88%|████████▊ | 483577/552076 [00:04<00:00, 78664.85it/s] 90%|████████▉ | 494826/552076 [00:04<00:00, 86464.57it/s] 92%|█████████▏| 507180/552076 [00:05<00:00, 95019.18it/s] 94%|█████████▍| 518789/552076 [00:05<00:00, 100489.26it/s] 96%|█████████▌| 530693/552076 [00:05<00:00, 105416.32it/s] 98%|█████████▊| 542868/552076 [00:05<00:00, 109836.63it/s]100%|██████████| 552076/552076 [00:05<00:00, 100995.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9487/552076 [00:00<00:08, 63752.07it/s]  3%|▎         | 14852/552076 [00:00<00:09, 59390.93it/s]  4%|▍         | 21501/552076 [00:00<00:08, 61354.81it/s]  6%|▌         | 33200/552076 [00:00<00:07, 71564.08it/s]  8%|▊         | 42504/552076 [00:00<00:06, 76887.38it/s] 10%|▉         | 54710/552076 [00:00<00:05, 86489.65it/s] 13%|█▎        | 74523/552076 [00:00<00:04, 104083.92it/s] 17%|█▋        | 94372/552076 [00:00<00:03, 121406.18it/s] 21%|██        | 115507/552076 [00:00<00:03, 139173.64it/s] 24%|██▍       | 131916/552076 [00:01<00:03, 139002.24it/s] 27%|██▋       | 150064/552076 [00:01<00:02, 149499.21it/s] 31%|███       | 169660/552076 [00:01<00:02, 160946.70it/s] 34%|███▍      | 187016/552076 [00:01<00:02, 151386.94it/s] 37%|███▋      | 206744/552076 [00:01<00:02, 162744.34it/s] 41%|████      | 226812/552076 [00:01<00:01, 172527.74it/s] 45%|████▌     | 248566/552076 [00:01<00:01, 183945.25it/s] 49%|████▉     | 271029/552076 [00:01<00:01, 194512.56it/s] 53%|█████▎    | 291191/552076 [00:01<00:01, 161925.62it/s] 57%|█████▋    | 312849/552076 [00:02<00:01, 175186.27it/s] 60%|██████    | 333476/552076 [00:02<00:01, 183479.79it/s] 64%|██████▍   | 354292/552076 [00:02<00:01, 190246.12it/s] 68%|██████▊   | 374091/552076 [00:02<00:00, 189581.11it/s] 72%|███████▏  | 396735/552076 [00:02<00:00, 199312.32it/s] 76%|███████▌  | 418826/552076 [00:02<00:00, 205334.44it/s] 80%|███████▉  | 441405/552076 [00:02<00:00, 211068.73it/s] 84%|████████▍ | 462875/552076 [00:02<00:00, 212143.86it/s] 88%|████████▊ | 484317/552076 [00:02<00:00, 208593.68it/s] 92%|█████████▏| 506014/552076 [00:02<00:00, 211037.78it/s] 96%|█████████▌| 527246/552076 [00:03<00:00, 206753.90it/s] 99%|█████████▉| 548778/552076 [00:03<00:00, 209249.62it/s]100%|██████████| 552076/552076 [00:03<00:00, 171944.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12612/552076 [00:00<00:04, 126110.80it/s]  5%|▍         | 25490/552076 [00:00<00:04, 126898.65it/s]  7%|▋         | 36693/552076 [00:00<00:04, 122038.70it/s]  9%|▉         | 49669/552076 [00:00<00:04, 124256.63it/s] 11%|█▏        | 62720/552076 [00:00<00:03, 126068.40it/s] 14%|█▎        | 75774/552076 [00:00<00:03, 127374.48it/s] 16%|█▌        | 87233/552076 [00:00<00:03, 123244.99it/s] 18%|█▊        | 100005/552076 [00:00<00:03, 124552.42it/s] 20%|██        | 113095/552076 [00:00<00:03, 126389.57it/s] 23%|██▎       | 126205/552076 [00:01<00:03, 127766.27it/s] 25%|██▌       | 138652/552076 [00:01<00:03, 124322.51it/s] 27%|██▋       | 151515/552076 [00:01<00:03, 125582.09it/s] 30%|██▉       | 164645/552076 [00:01<00:03, 127241.78it/s] 32%|███▏      | 177819/552076 [00:01<00:02, 128556.54it/s] 35%|███▍      | 190611/552076 [00:01<00:02, 122985.22it/s] 37%|███▋      | 203158/552076 [00:01<00:02, 123718.46it/s] 39%|███▉      | 215873/552076 [00:01<00:02, 124726.60it/s] 41%|████▏     | 228880/552076 [00:01<00:02, 126281.58it/s] 44%|████▎     | 241517/552076 [00:01<00:02, 123396.27it/s] 46%|████▌     | 254435/552076 [00:02<00:02, 125075.70it/s] 49%|████▊     | 267848/552076 [00:02<00:02, 127660.93it/s] 51%|█████     | 280642/552076 [00:02<00:02, 116559.89it/s] 53%|█████▎    | 292505/552076 [00:02<00:02, 110752.28it/s] 55%|█████▌    | 305320/552076 [00:02<00:02, 115452.26it/s] 58%|█████▊    | 318355/552076 [00:02<00:01, 119550.49it/s] 60%|██████    | 331575/552076 [00:02<00:01, 123081.07it/s] 62%|██████▏   | 344031/552076 [00:02<00:02, 103600.18it/s] 64%|██████▍   | 355020/552076 [00:02<00:01, 101373.90it/s] 67%|██████▋   | 368121/552076 [00:03<00:01, 108752.59it/s] 69%|██████▉   | 381238/552076 [00:03<00:01, 114629.52it/s] 71%|███████▏  | 393899/552076 [00:03<00:01, 117977.34it/s] 74%|███████▎  | 406010/552076 [00:03<00:01, 117168.36it/s] 76%|███████▌  | 418874/552076 [00:03<00:01, 120388.50it/s] 78%|███████▊  | 431090/552076 [00:03<00:01, 120913.54it/s] 80%|████████  | 443595/552076 [00:03<00:00, 122123.44it/s] 83%|████████▎ | 456357/552076 [00:03<00:00, 123721.99it/s] 85%|████████▌ | 469683/552076 [00:03<00:00, 126435.03it/s] 87%|████████▋ | 483005/552076 [00:03<00:00, 128394.12it/s] 90%|████████▉ | 496073/552076 [00:04<00:00, 129071.02it/s] 92%|█████████▏| 509017/552076 [00:04<00:00, 128801.17it/s] 95%|█████████▍| 522459/552076 [00:04<00:00, 130435.64it/s] 97%|█████████▋| 535865/552076 [00:04<00:00, 131500.58it/s] 99%|█████████▉| 549034/552076 [00:04<00:00, 131110.14it/s]100%|██████████| 552076/552076 [00:04<00:00, 122795.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12767/552076 [00:00<00:04, 127660.38it/s]  5%|▍         | 25635/552076 [00:00<00:04, 127963.42it/s]  7%|▋         | 38660/552076 [00:00<00:03, 128638.96it/s]  9%|▉         | 51600/552076 [00:00<00:03, 128865.54it/s] 11%|█▏        | 63197/552076 [00:00<00:03, 124703.59it/s] 14%|█▍        | 76225/552076 [00:00<00:03, 126324.81it/s] 16%|█▌        | 89249/552076 [00:00<00:03, 127474.01it/s] 19%|█▊        | 102317/552076 [00:00<00:03, 128416.59it/s] 21%|██        | 114677/552076 [00:00<00:03, 126929.98it/s] 23%|██▎       | 126871/552076 [00:01<00:03, 123874.52it/s] 25%|██▌       | 138925/552076 [00:01<00:03, 122035.28it/s] 28%|██▊       | 151937/552076 [00:01<00:03, 124350.86it/s] 30%|██▉       | 164224/552076 [00:01<00:03, 123696.27it/s] 32%|███▏      | 177372/552076 [00:01<00:02, 125930.58it/s] 34%|███▍      | 189903/552076 [00:01<00:02, 124680.24it/s] 37%|███▋      | 202854/552076 [00:01<00:02, 126089.55it/s] 39%|███▉      | 215439/552076 [00:01<00:02, 124012.98it/s] 41%|████▏     | 228675/552076 [00:01<00:02, 126403.50it/s] 44%|████▍     | 242012/552076 [00:01<00:02, 128415.05it/s] 46%|████▋     | 255357/552076 [00:02<00:02, 129880.88it/s] 49%|████▊     | 268357/552076 [00:02<00:02, 128799.78it/s] 51%|█████     | 281478/552076 [00:02<00:02, 129512.53it/s] 53%|█████▎    | 294774/552076 [00:02<00:01, 130526.24it/s] 56%|█████▌    | 308175/552076 [00:02<00:01, 131549.84it/s] 58%|█████▊    | 321338/552076 [00:02<00:01, 131529.90it/s] 61%|██████    | 334497/552076 [00:02<00:01, 127936.95it/s] 63%|██████▎   | 347316/552076 [00:02<00:01, 127420.85it/s] 65%|██████▌   | 360077/552076 [00:02<00:01, 126869.76it/s] 68%|██████▊   | 372778/552076 [00:02<00:01, 126513.72it/s] 70%|██████▉   | 385439/552076 [00:03<00:01, 121805.61it/s] 72%|███████▏  | 397907/552076 [00:03<00:01, 122651.53it/s] 74%|███████▍  | 410828/552076 [00:03<00:01, 124546.06it/s] 77%|███████▋  | 423559/552076 [00:03<00:01, 125362.24it/s] 79%|███████▉  | 436118/552076 [00:03<00:00, 123279.37it/s] 81%|████████  | 448470/552076 [00:03<00:00, 116994.72it/s] 84%|████████▎ | 461511/552076 [00:03<00:00, 120720.22it/s] 86%|████████▌ | 473672/552076 [00:03<00:00, 120886.47it/s] 88%|████████▊ | 485823/552076 [00:03<00:00, 111025.19it/s] 91%|█████████ | 500434/552076 [00:03<00:00, 119642.36it/s] 93%|█████████▎| 515165/552076 [00:04<00:00, 126784.38it/s] 96%|█████████▌| 529911/552076 [00:04<00:00, 132349.63it/s] 99%|█████████▊| 544786/552076 [00:04<00:00, 136876.43it/s]100%|██████████| 552076/552076 [00:04<00:00, 127461.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22087/552076 [00:00<00:02, 220867.05it/s]  8%|▊         | 45293/552076 [00:00<00:02, 224108.41it/s] 12%|█▏        | 67822/552076 [00:00<00:02, 224458.61it/s] 16%|█▌        | 89694/552076 [00:00<00:02, 222705.23it/s] 20%|██        | 112677/552076 [00:00<00:01, 224794.49it/s] 24%|██▍       | 135150/552076 [00:00<00:01, 224774.88it/s] 28%|██▊       | 155553/552076 [00:00<00:01, 218120.82it/s] 32%|███▏      | 176120/552076 [00:00<00:01, 214227.46it/s] 36%|███▌      | 197156/552076 [00:00<00:01, 213051.97it/s] 40%|███▉      | 218289/552076 [00:01<00:01, 212531.58it/s] 43%|████▎     | 239239/552076 [00:01<00:01, 211611.62it/s] 47%|████▋     | 259983/552076 [00:01<00:01, 184571.26it/s] 51%|█████     | 281385/552076 [00:01<00:01, 192517.49it/s] 55%|█████▍    | 302867/552076 [00:01<00:01, 198704.32it/s] 59%|█████▉    | 324934/552076 [00:01<00:01, 204819.69it/s] 63%|██████▎   | 346178/552076 [00:01<00:00, 207044.64it/s] 66%|██████▋   | 367056/552076 [00:01<00:01, 177258.07it/s] 70%|██████▉   | 385652/552076 [00:01<00:00, 169289.42it/s] 74%|███████▍  | 408094/552076 [00:02<00:00, 182757.74it/s] 78%|███████▊  | 430266/552076 [00:02<00:00, 192928.27it/s] 82%|████████▏ | 452404/552076 [00:02<00:00, 200653.45it/s] 86%|████████▌ | 473041/552076 [00:02<00:00, 198165.50it/s] 90%|████████▉ | 495526/552076 [00:02<00:00, 205480.11it/s] 94%|█████████▎| 516944/552076 [00:02<00:00, 208014.72it/s] 98%|█████████▊| 538346/552076 [00:02<00:00, 209779.50it/s]100%|██████████| 552076/552076 [00:02<00:00, 204854.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11648/552076 [00:00<00:04, 116468.73it/s]  3%|▎         | 18323/552076 [00:00<00:05, 95194.38it/s]   5%|▌         | 28493/552076 [00:00<00:05, 97055.54it/s]  9%|▉         | 48517/552076 [00:00<00:04, 114803.00it/s] 13%|█▎        | 69749/552076 [00:00<00:03, 133148.72it/s] 16%|█▌        | 88886/552076 [00:00<00:03, 146519.67it/s] 20%|█▉        | 109568/552076 [00:00<00:02, 160562.27it/s] 24%|██▎       | 130847/552076 [00:00<00:02, 173323.17it/s] 28%|██▊       | 151904/552076 [00:00<00:02, 183034.80it/s] 31%|███▏      | 173133/552076 [00:01<00:01, 190927.28it/s] 35%|███▍      | 192843/552076 [00:01<00:01, 189034.54it/s] 39%|███▊      | 213606/552076 [00:01<00:01, 194253.05it/s] 42%|████▏     | 233922/552076 [00:01<00:01, 196841.96it/s] 46%|████▌     | 255003/552076 [00:01<00:01, 200831.66it/s] 50%|████▉     | 275279/552076 [00:01<00:01, 195799.60it/s] 54%|█████▎    | 295845/552076 [00:01<00:01, 198654.99it/s] 57%|█████▋    | 317108/552076 [00:01<00:01, 202648.98it/s] 61%|██████    | 337538/552076 [00:01<00:01, 203138.50it/s] 65%|██████▍   | 357927/552076 [00:01<00:00, 201154.74it/s] 68%|██████▊   | 378100/552076 [00:02<00:00, 199945.86it/s] 72%|███████▏  | 398925/552076 [00:02<00:00, 202366.22it/s] 76%|███████▌  | 420232/552076 [00:02<00:00, 205460.21it/s] 80%|███████▉  | 440815/552076 [00:02<00:00, 204574.11it/s] 84%|████████▎ | 461299/552076 [00:02<00:00, 200282.03it/s] 87%|████████▋ | 482683/552076 [00:02<00:00, 204164.63it/s] 91%|█████████▏| 504458/552076 [00:02<00:00, 208055.78it/s] 95%|█████████▌| 526438/552076 [00:02<00:00, 211442.71it/s] 99%|█████████▉| 548105/552076 [00:02<00:00, 212981.88it/s]100%|██████████| 552076/552076 [00:02<00:00, 193778.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19201/552076 [00:00<00:02, 192006.52it/s]  7%|▋         | 39835/552076 [00:00<00:02, 196091.08it/s] 11%|█         | 61098/552076 [00:00<00:02, 200773.89it/s] 14%|█▎        | 74633/552076 [00:00<00:02, 172261.37it/s] 16%|█▌        | 87989/552076 [00:00<00:03, 123056.92it/s] 18%|█▊        | 99554/552076 [00:00<00:04, 93835.31it/s]  20%|█▉        | 109461/552076 [00:00<00:05, 82668.05it/s] 22%|██▏       | 120217/552076 [00:01<00:04, 88834.42it/s] 24%|██▍       | 131119/552076 [00:01<00:04, 94057.00it/s] 26%|██▌       | 142804/552076 [00:01<00:04, 99901.69it/s] 28%|██▊       | 153224/552076 [00:01<00:04, 90532.68it/s] 30%|██▉       | 165375/552076 [00:01<00:03, 98029.11it/s] 32%|███▏      | 177632/552076 [00:01<00:03, 104292.48it/s] 34%|███▍      | 189854/552076 [00:01<00:03, 109091.30it/s] 37%|███▋      | 202165/552076 [00:01<00:03, 112948.52it/s] 39%|███▉      | 214652/552076 [00:01<00:02, 116278.70it/s] 41%|████      | 227079/552076 [00:01<00:02, 118565.92it/s] 43%|████▎     | 239412/552076 [00:02<00:02, 119954.24it/s] 46%|████▌     | 251536/552076 [00:02<00:03, 77627.90it/s]  47%|████▋     | 261300/552076 [00:02<00:03, 81201.04it/s] 49%|████▉     | 273076/552076 [00:02<00:03, 89539.72it/s] 52%|█████▏    | 285348/552076 [00:02<00:02, 97442.27it/s] 54%|█████▍    | 297690/552076 [00:02<00:02, 104008.91it/s] 56%|█████▌    | 308981/552076 [00:02<00:02, 102285.23it/s] 58%|█████▊    | 319839/552076 [00:02<00:02, 104039.91it/s] 60%|██████    | 332046/552076 [00:03<00:02, 108861.70it/s] 62%|██████▏   | 343305/552076 [00:03<00:02, 83614.21it/s]  64%|██████▍   | 352814/552076 [00:03<00:02, 78036.60it/s] 65%|██████▌   | 361496/552076 [00:03<00:02, 65775.99it/s] 67%|██████▋   | 369018/552076 [00:03<00:02, 66077.38it/s] 68%|██████▊   | 376287/552076 [00:03<00:02, 66744.84it/s] 69%|██████▉   | 383426/552076 [00:03<00:02, 66862.57it/s] 71%|███████   | 390438/552076 [00:04<00:02, 66925.48it/s] 72%|███████▏  | 397359/552076 [00:04<00:02, 66971.33it/s] 73%|███████▎  | 404216/552076 [00:04<00:02, 66853.76it/s] 74%|███████▍  | 411013/552076 [00:04<00:02, 60020.85it/s] 76%|███████▋  | 422264/552076 [00:04<00:01, 69787.54it/s] 79%|███████▊  | 434552/552076 [00:04<00:01, 80179.61it/s] 81%|████████  | 446201/552076 [00:04<00:01, 88450.66it/s] 83%|████████▎ | 456061/552076 [00:04<00:01, 75262.76it/s] 85%|████████▍ | 467945/552076 [00:04<00:00, 84565.14it/s] 87%|████████▋ | 479546/552076 [00:05<00:00, 91807.05it/s] 89%|████████▉ | 491113/552076 [00:05<00:00, 97863.57it/s] 91%|█████████ | 502899/552076 [00:05<00:00, 103111.35it/s] 93%|█████████▎| 515045/552076 [00:05<00:00, 108004.04it/s] 95%|█████████▌| 526921/552076 [00:05<00:00, 111009.07it/s] 98%|█████████▊| 538391/552076 [00:05<00:00, 97302.17it/s]  99%|█████████▉| 548686/552076 [00:05<00:00, 87227.60it/s]100%|██████████| 552076/552076 [00:05<00:00, 94960.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10242/552076 [00:00<00:05, 102414.73it/s]  4%|▎         | 20092/552076 [00:00<00:05, 101206.49it/s]  5%|▍         | 26779/552076 [00:00<00:06, 84116.53it/s]   7%|▋         | 37735/552076 [00:00<00:05, 90414.75it/s]  8%|▊         | 46874/552076 [00:00<00:05, 90704.38it/s] 10%|█         | 57307/552076 [00:00<00:05, 94401.20it/s] 12%|█▏        | 68732/552076 [00:00<00:04, 99590.03it/s] 15%|█▍        | 80858/552076 [00:00<00:04, 105230.04it/s] 17%|█▋        | 93069/552076 [00:00<00:04, 109781.78it/s] 19%|█▉        | 105149/552076 [00:01<00:03, 112869.92it/s] 21%|██        | 117263/552076 [00:01<00:03, 115227.81it/s] 23%|██▎       | 129376/552076 [00:01<00:03, 116935.35it/s] 26%|██▌       | 141650/552076 [00:01<00:03, 118616.99it/s] 28%|██▊       | 153931/552076 [00:01<00:03, 119841.54it/s] 30%|███       | 166116/552076 [00:01<00:03, 120434.66it/s] 32%|███▏      | 178295/552076 [00:01<00:03, 120837.60it/s] 35%|███▍      | 190696/552076 [00:01<00:02, 121770.04it/s] 37%|███▋      | 202923/552076 [00:01<00:02, 121917.81it/s] 39%|███▉      | 215115/552076 [00:01<00:02, 121810.21it/s] 41%|████      | 227296/552076 [00:02<00:02, 114652.07it/s] 43%|████▎     | 238848/552076 [00:02<00:02, 112322.24it/s] 45%|████▌     | 250151/552076 [00:02<00:03, 89204.98it/s]  47%|████▋     | 259872/552076 [00:02<00:04, 68694.13it/s] 49%|████▊     | 268018/552076 [00:02<00:04, 58456.87it/s] 50%|█████     | 276587/552076 [00:02<00:04, 64616.86it/s] 52%|█████▏    | 287459/552076 [00:02<00:03, 73569.14it/s] 54%|█████▍    | 298921/552076 [00:03<00:03, 82424.55it/s] 56%|█████▌    | 310271/552076 [00:03<00:02, 89799.32it/s] 58%|█████▊    | 321741/552076 [00:03<00:02, 96054.21it/s] 60%|██████    | 333369/552076 [00:03<00:02, 101341.87it/s] 63%|██████▎   | 345547/552076 [00:03<00:01, 106714.02it/s] 65%|██████▍   | 357726/552076 [00:03<00:01, 110828.02it/s] 67%|██████▋   | 369805/552076 [00:03<00:01, 113639.12it/s] 69%|██████▉   | 381909/552076 [00:03<00:01, 115762.53it/s] 71%|███████▏  | 394112/552076 [00:03<00:01, 117573.01it/s] 74%|███████▎  | 406433/552076 [00:03<00:01, 119208.74it/s] 76%|███████▌  | 418698/552076 [00:04<00:01, 120220.28it/s] 78%|███████▊  | 431005/552076 [00:04<00:01, 121060.51it/s] 80%|████████  | 443543/552076 [00:04<00:00, 122324.64it/s] 83%|████████▎ | 456078/552076 [00:04<00:00, 123214.76it/s] 85%|████████▍ | 468434/552076 [00:04<00:00, 122755.32it/s] 87%|████████▋ | 480819/552076 [00:04<00:00, 123081.55it/s] 89%|████████▉ | 493145/552076 [00:04<00:00, 123104.28it/s] 92%|█████████▏| 505468/552076 [00:04<00:00, 122691.35it/s] 94%|█████████▍| 517746/552076 [00:04<00:00, 122632.22it/s] 96%|█████████▌| 530099/552076 [00:04<00:00, 122899.34it/s] 98%|█████████▊| 542394/552076 [00:05<00:00, 122630.64it/s]100%|██████████| 552076/552076 [00:05<00:00, 107925.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9231/552076 [00:00<00:06, 89376.47it/s]  3%|▎         | 17762/552076 [00:00<00:06, 88115.12it/s]  4%|▍         | 22199/552076 [00:00<00:08, 60472.79it/s]  6%|▌         | 34167/552076 [00:00<00:07, 71011.02it/s]  7%|▋         | 40665/552076 [00:00<00:07, 67209.91it/s]  9%|▉         | 51281/552076 [00:00<00:06, 75522.48it/s] 11%|█▏        | 63453/552076 [00:00<00:05, 85225.17it/s] 14%|█▎        | 75699/552076 [00:00<00:05, 93779.02it/s] 16%|█▌        | 85664/552076 [00:00<00:04, 95032.06it/s] 17%|█▋        | 96519/552076 [00:01<00:04, 95207.20it/s] 19%|█▉        | 106331/552076 [00:01<00:05, 84017.53it/s] 21%|██        | 115177/552076 [00:01<00:06, 65000.95it/s] 22%|██▏       | 122646/552076 [00:01<00:06, 63480.76it/s] 23%|██▎       | 129680/552076 [00:01<00:07, 57231.69it/s] 26%|██▌       | 141569/552076 [00:01<00:06, 67776.38it/s] 28%|██▊       | 152756/552076 [00:01<00:05, 74423.15it/s] 29%|██▉       | 161245/552076 [00:02<00:05, 65395.56it/s] 31%|███▏      | 172685/552076 [00:02<00:05, 75037.63it/s] 33%|███▎      | 184540/552076 [00:02<00:04, 83697.98it/s] 35%|███▌      | 195938/552076 [00:02<00:03, 90945.27it/s] 38%|███▊      | 208078/552076 [00:02<00:03, 98346.18it/s] 40%|███▉      | 218769/552076 [00:02<00:03, 97834.09it/s] 42%|████▏     | 229957/552076 [00:02<00:03, 101662.56it/s] 44%|████▍     | 242031/552076 [00:02<00:02, 106719.29it/s] 46%|████▌     | 254248/552076 [00:02<00:02, 110926.27it/s] 48%|████▊     | 266509/552076 [00:02<00:02, 114187.99it/s] 50%|█████     | 278748/552076 [00:03<00:02, 116529.96it/s] 53%|█████▎    | 290910/552076 [00:03<00:02, 118010.31it/s] 55%|█████▌    | 306215/552076 [00:03<00:01, 126712.99it/s] 59%|█████▉    | 326220/552076 [00:03<00:01, 142370.23it/s] 63%|██████▎   | 348121/552076 [00:03<00:01, 159069.16it/s] 66%|██████▌   | 365236/552076 [00:03<00:01, 160331.31it/s] 69%|██████▉   | 383024/552076 [00:03<00:01, 165220.43it/s] 73%|███████▎  | 404311/552076 [00:03<00:00, 177111.38it/s] 77%|███████▋  | 422704/552076 [00:03<00:00, 158414.78it/s] 80%|████████  | 444101/552076 [00:04<00:00, 171794.81it/s] 84%|████████▍ | 466318/552076 [00:04<00:00, 184331.61it/s] 88%|████████▊ | 487754/552076 [00:04<00:00, 192417.07it/s] 92%|█████████▏| 507720/552076 [00:04<00:00, 194499.66it/s] 96%|█████████▌| 527682/552076 [00:04<00:00, 193148.50it/s] 99%|█████████▉| 547358/552076 [00:04<00:00, 181882.99it/s]100%|██████████| 552076/552076 [00:04<00:00, 120500.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21480/552076 [00:00<00:02, 214796.11it/s]  7%|▋         | 40936/552076 [00:00<00:02, 208295.12it/s] 10%|█         | 56843/552076 [00:00<00:02, 190599.00it/s] 13%|█▎        | 73536/552076 [00:00<00:02, 182821.63it/s] 17%|█▋        | 91151/552076 [00:00<00:02, 180767.06it/s] 21%|██        | 113621/552076 [00:00<00:02, 192030.64it/s] 25%|██▍       | 136266/552076 [00:00<00:02, 201203.97it/s] 29%|██▉       | 159111/552076 [00:00<00:01, 208667.39it/s] 33%|███▎      | 179968/552076 [00:00<00:01, 208635.69it/s] 36%|███▋      | 201408/552076 [00:01<00:01, 210328.69it/s] 40%|████      | 222299/552076 [00:01<00:01, 209898.71it/s] 44%|████▍     | 242976/552076 [00:01<00:01, 204293.71it/s] 48%|████▊     | 263378/552076 [00:01<00:01, 204211.14it/s] 52%|█████▏    | 285925/552076 [00:01<00:01, 210152.87it/s] 56%|█████▌    | 308354/552076 [00:01<00:01, 214201.29it/s] 60%|█████▉    | 329937/552076 [00:01<00:01, 214686.30it/s] 64%|██████▍   | 352120/552076 [00:01<00:00, 216779.33it/s] 68%|██████▊   | 373796/552076 [00:01<00:00, 211642.30it/s] 72%|███████▏  | 396055/552076 [00:01<00:00, 214811.46it/s] 76%|███████▌  | 418952/552076 [00:02<00:00, 218870.40it/s] 80%|███████▉  | 440879/552076 [00:02<00:00, 217601.16it/s] 84%|████████▍ | 462669/552076 [00:02<00:00, 216040.51it/s] 88%|████████▊ | 484297/552076 [00:02<00:00, 214043.35it/s] 92%|█████████▏| 506942/552076 [00:02<00:00, 217619.08it/s] 96%|█████████▌| 528733/552076 [00:02<00:00, 210466.98it/s]100%|█████████▉| 551198/552076 [00:02<00:00, 214529.98it/s]100%|██████████| 552076/552076 [00:02<00:00, 209177.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20839/552076 [00:00<00:02, 208383.24it/s]  8%|▊         | 43691/552076 [00:00<00:02, 214039.43it/s] 11%|█▏        | 62975/552076 [00:00<00:02, 207201.11it/s] 14%|█▍        | 76622/552076 [00:00<00:02, 178704.29it/s] 17%|█▋        | 92184/552076 [00:00<00:02, 171086.43it/s] 20%|█▉        | 109449/552076 [00:00<00:02, 171551.47it/s] 23%|██▎       | 126817/552076 [00:00<00:02, 172182.50it/s] 27%|██▋       | 149515/552076 [00:00<00:02, 185625.98it/s] 30%|███       | 167379/552076 [00:00<00:02, 171933.29it/s] 34%|███▍      | 187572/552076 [00:01<00:02, 179951.79it/s] 38%|███▊      | 210136/552076 [00:01<00:01, 191587.26it/s] 42%|████▏     | 229429/552076 [00:01<00:01, 172779.57it/s] 45%|████▍     | 247633/552076 [00:01<00:01, 175457.05it/s] 49%|████▉     | 269789/552076 [00:01<00:01, 187138.47it/s] 53%|█████▎    | 292566/552076 [00:01<00:01, 197719.06it/s] 57%|█████▋    | 314722/552076 [00:01<00:01, 204314.28it/s] 61%|██████    | 335538/552076 [00:01<00:01, 198445.71it/s] 65%|██████▍   | 358376/552076 [00:01<00:00, 206566.37it/s] 69%|██████▉   | 380523/552076 [00:01<00:00, 210820.41it/s] 73%|███████▎  | 403030/552076 [00:02<00:00, 214901.64it/s] 77%|███████▋  | 424702/552076 [00:02<00:00, 204114.23it/s] 81%|████████  | 446401/552076 [00:02<00:00, 207810.68it/s] 85%|████████▍ | 468247/552076 [00:02<00:00, 210894.32it/s] 89%|████████▊ | 489499/552076 [00:02<00:00, 211378.11it/s] 93%|█████████▎| 511007/552076 [00:02<00:00, 212474.84it/s] 96%|█████████▋| 532325/552076 [00:02<00:00, 207535.15it/s]100%|██████████| 552076/552076 [00:02<00:00, 198184.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21134/552076 [00:00<00:02, 211301.91it/s]  8%|▊         | 42881/552076 [00:00<00:02, 213113.55it/s] 11%|█         | 61156/552076 [00:00<00:02, 202992.85it/s] 15%|█▌        | 83415/552076 [00:00<00:02, 208498.50it/s] 19%|█▉        | 103633/552076 [00:00<00:02, 206561.32it/s] 22%|██▏       | 120819/552076 [00:00<00:02, 178834.22it/s] 25%|██▍       | 137596/552076 [00:00<00:02, 175361.86it/s] 28%|██▊       | 153910/552076 [00:00<00:02, 166988.94it/s] 32%|███▏      | 173908/552076 [00:00<00:02, 175682.97it/s] 35%|███▌      | 195046/552076 [00:01<00:01, 185057.44it/s] 39%|███▊      | 213392/552076 [00:01<00:01, 177756.74it/s] 42%|████▏     | 231117/552076 [00:01<00:01, 171145.80it/s] 45%|████▍     | 248249/552076 [00:01<00:01, 154857.88it/s] 49%|████▉     | 270883/552076 [00:01<00:01, 171064.17it/s] 53%|█████▎    | 292708/552076 [00:01<00:01, 182928.81it/s] 57%|█████▋    | 312647/552076 [00:01<00:01, 187574.46it/s] 60%|██████    | 331957/552076 [00:01<00:01, 180322.03it/s] 63%|██████▎   | 350436/552076 [00:01<00:01, 177565.00it/s] 67%|██████▋   | 368515/552076 [00:02<00:01, 177976.12it/s] 70%|███████   | 388182/552076 [00:02<00:00, 183199.87it/s] 74%|███████▍  | 408256/552076 [00:02<00:00, 188129.18it/s] 77%|███████▋  | 427744/552076 [00:02<00:00, 190103.13it/s] 82%|████████▏ | 449996/552076 [00:02<00:00, 198790.30it/s] 85%|████████▌ | 470260/552076 [00:02<00:00, 199928.69it/s] 89%|████████▉ | 491766/552076 [00:02<00:00, 204238.22it/s] 93%|█████████▎| 512308/552076 [00:02<00:00, 203051.89it/s] 97%|█████████▋| 533201/552076 [00:02<00:00, 204778.64it/s]100%|██████████| 552076/552076 [00:02<00:00, 189827.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21759/552076 [00:00<00:02, 217585.02it/s]  7%|▋         | 40410/552076 [00:00<00:02, 207223.44it/s] 11%|█▏        | 63439/552076 [00:00<00:02, 213643.10it/s] 16%|█▌        | 86401/552076 [00:00<00:02, 218195.73it/s] 20%|█▉        | 109310/552076 [00:00<00:02, 221351.87it/s] 24%|██▎       | 129768/552076 [00:00<00:01, 216037.90it/s] 28%|██▊       | 152508/552076 [00:00<00:01, 219324.35it/s] 32%|███▏      | 174622/552076 [00:00<00:01, 219864.56it/s] 36%|███▌      | 197237/552076 [00:00<00:01, 221712.33it/s] 40%|███▉      | 218571/552076 [00:01<00:01, 216075.69it/s] 44%|████▍     | 241562/552076 [00:01<00:01, 220045.61it/s] 48%|████▊     | 263963/552076 [00:01<00:01, 221217.21it/s] 52%|█████▏    | 286296/552076 [00:01<00:01, 221844.69it/s] 56%|█████▌    | 308301/552076 [00:01<00:01, 210003.56it/s] 60%|█████▉    | 329307/552076 [00:01<00:01, 190955.01it/s] 63%|██████▎   | 348739/552076 [00:01<00:01, 141217.15it/s] 66%|██████▌   | 364977/552076 [00:01<00:01, 129681.29it/s] 69%|██████▉   | 382822/552076 [00:02<00:01, 141261.17it/s] 73%|███████▎  | 403480/552076 [00:02<00:00, 156064.97it/s] 77%|███████▋  | 425082/552076 [00:02<00:00, 170238.93it/s] 81%|████████  | 447641/552076 [00:02<00:00, 183764.92it/s] 85%|████████▍ | 467971/552076 [00:02<00:00, 189217.20it/s] 89%|████████▉ | 490505/552076 [00:02<00:00, 198775.50it/s] 93%|█████████▎| 512025/552076 [00:02<00:00, 203432.80it/s] 97%|█████████▋| 534540/552076 [00:02<00:00, 209493.20it/s]100%|██████████| 552076/552076 [00:02<00:00, 196061.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21117/552076 [00:00<00:02, 211165.17it/s]  8%|▊         | 42413/552076 [00:00<00:02, 211699.14it/s] 12%|█▏        | 64610/552076 [00:00<00:02, 214679.10it/s] 16%|█▌        | 86148/552076 [00:00<00:02, 214887.88it/s] 19%|█▊        | 102574/552076 [00:00<00:02, 179073.28it/s] 22%|██▏       | 122955/552076 [00:00<00:02, 185839.06it/s] 26%|██▋       | 145656/552076 [00:00<00:02, 196531.89it/s] 30%|███       | 168107/552076 [00:00<00:01, 204164.49it/s] 34%|███▍      | 188365/552076 [00:00<00:01, 203685.87it/s] 38%|███▊      | 208281/552076 [00:01<00:01, 181031.65it/s] 42%|████▏     | 229465/552076 [00:01<00:01, 189290.25it/s] 45%|████▌     | 251100/552076 [00:01<00:01, 196668.63it/s] 49%|████▉     | 272519/552076 [00:01<00:01, 201616.12it/s] 53%|█████▎    | 292863/552076 [00:01<00:01, 200145.29it/s] 57%|█████▋    | 315131/552076 [00:01<00:01, 206409.27it/s] 61%|██████    | 337598/552076 [00:01<00:01, 211567.93it/s] 65%|██████▌   | 360080/552076 [00:01<00:00, 215375.44it/s] 69%|██████▉   | 381726/552076 [00:01<00:00, 209272.96it/s] 73%|███████▎  | 404783/552076 [00:01<00:00, 215235.39it/s] 77%|███████▋  | 426429/552076 [00:02<00:00, 214606.37it/s] 81%|████████  | 448005/552076 [00:02<00:00, 214949.84it/s] 85%|████████▌ | 469561/552076 [00:02<00:00, 172619.74it/s] 88%|████████▊ | 488198/552076 [00:02<00:00, 163802.30it/s] 92%|█████████▏| 509528/552076 [00:02<00:00, 176057.59it/s] 96%|█████████▋| 531406/552076 [00:02<00:00, 187011.67it/s]100%|█████████▉| 551354/552076 [00:02<00:00, 190582.44it/s]100%|██████████| 552076/552076 [00:02<00:00, 197564.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21064/552076 [00:00<00:02, 210636.18it/s]  7%|▋         | 41341/552076 [00:00<00:02, 208209.83it/s] 11%|█▏        | 62383/552076 [00:00<00:02, 208866.12it/s] 15%|█▍        | 82807/552076 [00:00<00:02, 207453.93it/s] 19%|█▉        | 104856/552076 [00:00<00:02, 211199.74it/s] 23%|██▎       | 126905/552076 [00:00<00:01, 213902.73it/s] 27%|██▋       | 149003/552076 [00:00<00:01, 215976.86it/s] 31%|███       | 168887/552076 [00:00<00:01, 210073.59it/s] 34%|███▍      | 188730/552076 [00:00<00:01, 182015.60it/s] 37%|███▋      | 206784/552076 [00:01<00:02, 156218.45it/s] 41%|████      | 227404/552076 [00:01<00:01, 168469.05it/s] 44%|████▍     | 244902/552076 [00:01<00:02, 151266.61it/s] 48%|████▊     | 265832/552076 [00:01<00:01, 164989.36it/s] 51%|█████▏    | 283250/552076 [00:01<00:01, 157818.43it/s] 54%|█████▍    | 299742/552076 [00:01<00:01, 133140.09it/s] 58%|█████▊    | 319277/552076 [00:01<00:01, 147202.71it/s] 61%|██████    | 336535/552076 [00:01<00:01, 153993.18it/s] 64%|██████▍   | 352905/552076 [00:02<00:01, 154756.20it/s] 68%|██████▊   | 374597/552076 [00:02<00:01, 169310.93it/s] 72%|███████▏  | 396546/552076 [00:02<00:00, 181777.90it/s] 76%|███████▌  | 419444/552076 [00:02<00:00, 193758.77it/s] 80%|███████▉  | 440472/552076 [00:02<00:00, 198434.95it/s] 84%|████████▍ | 463124/552076 [00:02<00:00, 206100.35it/s] 88%|████████▊ | 485528/552076 [00:02<00:00, 211171.94it/s] 92%|█████████▏| 507029/552076 [00:02<00:00, 210926.65it/s] 96%|█████████▌| 528391/552076 [00:02<00:00, 205889.48it/s]100%|█████████▉| 550575/552076 [00:02<00:00, 210426.69it/s]100%|██████████| 552076/552076 [00:02<00:00, 186800.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20902/552076 [00:00<00:02, 209018.70it/s]  8%|▊         | 42330/552076 [00:00<00:02, 210569.23it/s] 11%|█         | 61055/552076 [00:00<00:02, 202982.17it/s] 15%|█▍        | 82748/552076 [00:00<00:02, 206973.84it/s] 19%|█▉        | 103967/552076 [00:00<00:02, 208510.30it/s] 23%|██▎       | 124603/552076 [00:00<00:02, 207856.98it/s] 26%|██▌       | 143558/552076 [00:00<00:02, 202003.02it/s] 30%|███       | 165951/552076 [00:00<00:01, 208115.26it/s] 34%|███▍      | 188647/552076 [00:00<00:01, 213430.47it/s] 38%|███▊      | 211040/552076 [00:01<00:01, 216474.48it/s] 42%|████▏     | 232175/552076 [00:01<00:01, 208429.51it/s] 46%|████▌     | 254589/552076 [00:01<00:01, 212903.89it/s] 50%|█████     | 277378/552076 [00:01<00:01, 217186.45it/s] 54%|█████▍    | 299844/552076 [00:01<00:01, 219373.85it/s] 58%|█████▊    | 321712/552076 [00:01<00:01, 214919.46it/s] 62%|██████▏   | 344647/552076 [00:01<00:00, 219052.24it/s] 67%|██████▋   | 367771/552076 [00:01<00:00, 222568.81it/s] 71%|███████   | 390042/552076 [00:01<00:00, 222385.60it/s] 75%|███████▍  | 412290/552076 [00:01<00:00, 209891.05it/s] 79%|███████▊  | 433431/552076 [00:02<00:00, 192592.27it/s] 82%|████████▏ | 453076/552076 [00:02<00:00, 187551.36it/s] 86%|████████▌ | 472130/552076 [00:02<00:00, 135490.42it/s] 88%|████████▊ | 487935/552076 [00:02<00:00, 113917.95it/s] 91%|█████████ | 503369/552076 [00:02<00:00, 123630.34it/s] 95%|█████████▍| 522418/552076 [00:02<00:00, 138179.45it/s] 98%|█████████▊| 541795/552076 [00:02<00:00, 151190.58it/s]100%|██████████| 552076/552076 [00:02<00:00, 187420.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21228/552076 [00:00<00:02, 212279.19it/s]  8%|▊         | 42892/552076 [00:00<00:02, 213567.89it/s] 11%|█▏        | 62897/552076 [00:00<00:02, 209324.42it/s] 15%|█▌        | 84514/552076 [00:00<00:02, 211330.57it/s] 19%|█▉        | 107073/552076 [00:00<00:02, 215413.16it/s] 23%|██▎       | 125079/552076 [00:00<00:02, 200332.18it/s] 26%|██▌       | 142850/552076 [00:00<00:02, 183962.46it/s] 30%|██▉       | 164709/552076 [00:00<00:02, 193140.25it/s] 34%|███▍      | 187453/552076 [00:00<00:01, 202290.17it/s] 38%|███▊      | 209105/552076 [00:01<00:01, 206357.85it/s] 42%|████▏     | 229562/552076 [00:01<00:01, 205816.95it/s] 45%|████▌     | 249938/552076 [00:01<00:01, 180861.96it/s] 49%|████▉     | 272189/552076 [00:01<00:01, 191621.64it/s] 53%|█████▎    | 294509/552076 [00:01<00:01, 200114.11it/s] 57%|█████▋    | 317306/552076 [00:01<00:01, 207728.54it/s] 61%|██████▏   | 339206/552076 [00:01<00:01, 210984.41it/s] 65%|██████▌   | 360975/552076 [00:01<00:00, 212950.88it/s] 69%|██████▉   | 383377/552076 [00:01<00:00, 216154.04it/s] 74%|███████▎  | 405831/552076 [00:01<00:00, 218603.07it/s] 77%|███████▋  | 427801/552076 [00:02<00:00, 218073.85it/s] 82%|████████▏ | 450711/552076 [00:02<00:00, 221265.78it/s] 86%|████████▌ | 473568/552076 [00:02<00:00, 223405.74it/s] 90%|████████▉ | 496314/552076 [00:02<00:00, 224605.08it/s] 94%|█████████▍| 518812/552076 [00:02<00:00, 222469.49it/s] 98%|█████████▊| 541805/552076 [00:02<00:00, 224655.27it/s]100%|██████████| 552076/552076 [00:02<00:00, 211223.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14277/552076 [00:00<00:03, 142763.33it/s]  5%|▌         | 28767/552076 [00:00<00:03, 143397.52it/s]  8%|▊         | 46226/552076 [00:00<00:03, 151517.02it/s] 12%|█▏        | 64212/552076 [00:00<00:03, 159034.97it/s] 16%|█▌        | 85583/552076 [00:00<00:02, 172255.07it/s] 19%|█▉        | 106345/552076 [00:00<00:02, 181530.32it/s] 23%|██▎       | 127770/552076 [00:00<00:02, 190244.85it/s] 27%|██▋       | 147638/552076 [00:00<00:02, 192696.87it/s] 31%|███       | 169222/552076 [00:00<00:01, 199101.03it/s] 35%|███▍      | 190676/552076 [00:01<00:01, 203491.97it/s] 39%|███▊      | 212575/552076 [00:01<00:01, 207905.12it/s] 43%|████▎     | 234754/552076 [00:01<00:01, 211884.17it/s] 47%|████▋     | 257275/552076 [00:01<00:01, 215711.92it/s] 51%|█████     | 278822/552076 [00:01<00:01, 210975.55it/s] 54%|█████▍    | 300233/552076 [00:01<00:01, 211905.07it/s] 58%|█████▊    | 321429/552076 [00:01<00:01, 211411.35it/s] 62%|██████▏   | 342574/552076 [00:01<00:00, 210293.39it/s] 66%|██████▌   | 363955/552076 [00:01<00:00, 211334.88it/s] 70%|██████▉   | 385093/552076 [00:01<00:00, 205783.40it/s] 74%|███████▎  | 405918/552076 [00:02<00:00, 206515.53it/s] 77%|███████▋  | 427314/552076 [00:02<00:00, 208691.63it/s] 81%|████████▏ | 449501/552076 [00:02<00:00, 212477.55it/s] 85%|████████▌ | 470782/552076 [00:02<00:00, 207465.28it/s] 89%|████████▉ | 492857/552076 [00:02<00:00, 211277.17it/s] 93%|█████████▎| 514933/552076 [00:02<00:00, 214034.53it/s] 97%|█████████▋| 537752/552076 [00:02<00:00, 218092.44it/s]100%|██████████| 552076/552076 [00:02<00:00, 205230.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13675/552076 [00:00<00:03, 136739.70it/s]  4%|▍         | 23732/552076 [00:00<00:04, 123422.36it/s]  8%|▊         | 44176/552076 [00:00<00:03, 140075.23it/s] 12%|█▏        | 66816/552076 [00:00<00:03, 158166.63it/s] 16%|█▌        | 88125/552076 [00:00<00:02, 171421.12it/s] 20%|██        | 110967/552076 [00:00<00:02, 185290.54it/s] 24%|██▍       | 132759/552076 [00:00<00:02, 194005.06it/s] 28%|██▊       | 155428/552076 [00:00<00:01, 202773.86it/s] 32%|███▏      | 177500/552076 [00:00<00:01, 207841.58it/s] 36%|███▋      | 200200/552076 [00:01<00:01, 213239.35it/s] 40%|████      | 221705/552076 [00:01<00:01, 213777.88it/s] 44%|████▍     | 243889/552076 [00:01<00:01, 216132.26it/s] 48%|████▊     | 265538/552076 [00:01<00:01, 178293.72it/s] 52%|█████▏    | 284490/552076 [00:01<00:01, 163596.54it/s] 55%|█████▌    | 303823/552076 [00:01<00:01, 171509.32it/s] 59%|█████▉    | 324424/552076 [00:01<00:01, 180581.92it/s] 62%|██████▏   | 344772/552076 [00:01<00:01, 186891.12it/s] 67%|██████▋   | 367399/552076 [00:01<00:00, 197184.76it/s] 70%|███████   | 387652/552076 [00:02<00:00, 193477.73it/s] 74%|███████▍  | 407389/552076 [00:02<00:00, 182011.46it/s] 78%|███████▊  | 428933/552076 [00:02<00:00, 190895.59it/s] 82%|████████▏ | 450579/552076 [00:02<00:00, 197906.99it/s] 86%|████████▌ | 472632/552076 [00:02<00:00, 204190.16it/s] 90%|████████▉ | 494874/552076 [00:02<00:00, 209335.24it/s] 94%|█████████▎| 516484/552076 [00:02<00:00, 211318.65it/s] 97%|█████████▋| 537787/552076 [00:02<00:00, 184464.11it/s]100%|██████████| 552076/552076 [00:02<00:00, 193199.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20791/552076 [00:00<00:02, 207903.75it/s]  8%|▊         | 42808/552076 [00:00<00:02, 211436.43it/s] 12%|█▏        | 63507/552076 [00:00<00:02, 210081.11it/s] 15%|█▌        | 85448/552076 [00:00<00:02, 212793.39it/s] 19%|█▉        | 106734/552076 [00:00<00:02, 212812.52it/s] 23%|██▎       | 128851/552076 [00:00<00:01, 215251.39it/s] 27%|██▋       | 150512/552076 [00:00<00:01, 215656.78it/s] 31%|███       | 171445/552076 [00:00<00:01, 213716.52it/s] 35%|███▌      | 193903/552076 [00:00<00:01, 216860.20it/s] 39%|███▉      | 215253/552076 [00:01<00:01, 215839.12it/s] 43%|████▎     | 237016/552076 [00:01<00:01, 216371.34it/s] 47%|████▋     | 258386/552076 [00:01<00:01, 215561.30it/s] 51%|█████     | 280587/552076 [00:01<00:01, 217454.16it/s] 55%|█████▍    | 302973/552076 [00:01<00:01, 219336.22it/s] 59%|█████▉    | 325561/552076 [00:01<00:01, 221257.71it/s] 63%|██████▎   | 347600/552076 [00:01<00:00, 218752.21it/s] 67%|██████▋   | 369421/552076 [00:01<00:00, 214230.65it/s] 71%|███████   | 391771/552076 [00:01<00:00, 216928.71it/s] 75%|███████▍  | 413692/552076 [00:01<00:00, 217605.69it/s] 79%|███████▉  | 435912/552076 [00:02<00:00, 218961.96it/s] 83%|████████▎ | 457809/552076 [00:02<00:00, 218624.80it/s] 87%|████████▋ | 480231/552076 [00:02<00:00, 220272.95it/s] 91%|█████████ | 502262/552076 [00:02<00:00, 219960.86it/s] 95%|█████████▍| 524261/552076 [00:02<00:00, 194684.61it/s] 99%|█████████▊| 544266/552076 [00:02<00:00, 190788.66it/s]100%|██████████| 552076/552076 [00:02<00:00, 212133.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16684/552076 [00:00<00:03, 163422.33it/s]  5%|▌         | 27859/552076 [00:00<00:03, 143513.22it/s]  9%|▉         | 48824/552076 [00:00<00:03, 158514.32it/s] 11%|█         | 61751/552076 [00:00<00:03, 148437.73it/s] 15%|█▍        | 80284/552076 [00:00<00:02, 157865.09it/s] 19%|█▊        | 102238/552076 [00:00<00:02, 172393.75it/s] 22%|██▏       | 120444/552076 [00:00<00:02, 175183.07it/s] 25%|██▍       | 137221/552076 [00:00<00:02, 167550.56it/s] 29%|██▊       | 158711/552076 [00:00<00:02, 179409.10it/s] 33%|███▎      | 181543/552076 [00:01<00:01, 191730.62it/s] 37%|███▋      | 203920/552076 [00:01<00:01, 200335.51it/s] 41%|████      | 225561/552076 [00:01<00:01, 204898.97it/s] 45%|████▍     | 246235/552076 [00:01<00:01, 205323.25it/s] 49%|████▊     | 267875/552076 [00:01<00:01, 208524.26it/s] 52%|█████▏    | 288830/552076 [00:01<00:01, 207973.25it/s] 56%|█████▌    | 310411/552076 [00:01<00:01, 210261.86it/s] 60%|██████    | 331665/552076 [00:01<00:01, 210940.07it/s] 64%|██████▍   | 352800/552076 [00:01<00:00, 210982.17it/s] 68%|██████▊   | 374240/552076 [00:01<00:00, 211993.38it/s] 72%|███████▏  | 395641/552076 [00:02<00:00, 212593.07it/s] 76%|███████▌  | 416916/552076 [00:02<00:00, 209602.73it/s] 79%|███████▉  | 437897/552076 [00:02<00:00, 182440.62it/s] 83%|████████▎ | 459149/552076 [00:02<00:00, 190529.45it/s] 87%|████████▋ | 481250/552076 [00:02<00:00, 198752.28it/s] 91%|█████████ | 502822/552076 [00:02<00:00, 203555.06it/s] 95%|█████████▌| 524812/552076 [00:02<00:00, 208194.83it/s] 99%|█████████▉| 545910/552076 [00:02<00:00, 186780.81it/s]100%|██████████| 552076/552076 [00:02<00:00, 194011.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21297/552076 [00:00<00:02, 212968.68it/s]  8%|▊         | 43060/552076 [00:00<00:02, 214343.32it/s] 12%|█▏        | 66171/552076 [00:00<00:02, 219111.21it/s] 16%|█▌        | 87871/552076 [00:00<00:02, 218470.47it/s] 20%|██        | 110510/552076 [00:00<00:01, 220786.05it/s] 23%|██▎       | 129272/552076 [00:00<00:02, 209665.94it/s] 27%|██▋       | 148237/552076 [00:00<00:01, 203228.40it/s] 31%|███       | 170158/552076 [00:00<00:01, 207770.39it/s] 35%|███▍      | 191428/552076 [00:00<00:01, 209224.44it/s] 38%|███▊      | 211577/552076 [00:01<00:01, 188294.09it/s] 42%|████▏     | 230262/552076 [00:01<00:02, 133964.92it/s] 45%|████▍     | 245743/552076 [00:01<00:02, 112331.64it/s] 48%|████▊     | 262666/552076 [00:01<00:02, 124932.28it/s] 51%|█████     | 280982/552076 [00:01<00:01, 138102.98it/s] 55%|█████▍    | 302923/552076 [00:01<00:01, 155375.39it/s] 59%|█████▉    | 324585/552076 [00:01<00:01, 169774.67it/s] 63%|██████▎   | 347069/552076 [00:01<00:01, 183237.36it/s] 67%|██████▋   | 369497/552076 [00:02<00:00, 193879.53it/s] 71%|███████   | 390773/552076 [00:02<00:00, 199179.99it/s] 75%|███████▍  | 413079/552076 [00:02<00:00, 205788.82it/s] 79%|███████▊  | 434610/552076 [00:02<00:00, 208555.48it/s] 83%|████████▎ | 457055/552076 [00:02<00:00, 213080.95it/s] 87%|████████▋ | 478795/552076 [00:02<00:00, 214355.72it/s] 91%|█████████ | 500952/552076 [00:02<00:00, 216469.50it/s] 95%|█████████▍| 523558/552076 [00:02<00:00, 219260.01it/s] 99%|█████████▉| 545775/552076 [00:02<00:00, 220123.94it/s]100%|██████████| 552076/552076 [00:02<00:00, 191526.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19035/552076 [00:00<00:02, 190343.37it/s]  7%|▋         | 40312/552076 [00:00<00:02, 196558.28it/s] 11%|█         | 60699/552076 [00:00<00:02, 198694.66it/s] 15%|█▍        | 81193/552076 [00:00<00:02, 200518.02it/s] 19%|█▊        | 102421/552076 [00:00<00:02, 203905.26it/s] 22%|██▏       | 122991/552076 [00:00<00:02, 204437.10it/s] 26%|██▋       | 144968/552076 [00:00<00:01, 208807.43it/s] 30%|███       | 166814/552076 [00:00<00:01, 211612.20it/s] 34%|███▍      | 189290/552076 [00:00<00:01, 215392.06it/s] 38%|███▊      | 211736/552076 [00:01<00:01, 218032.66it/s] 42%|████▏     | 233327/552076 [00:01<00:01, 217389.05it/s] 46%|████▋     | 255662/552076 [00:01<00:01, 219140.95it/s] 50%|█████     | 278321/552076 [00:01<00:01, 221321.93it/s] 54%|█████▍    | 300290/552076 [00:01<00:01, 218032.22it/s] 58%|█████▊    | 321990/552076 [00:01<00:01, 217622.57it/s] 62%|██████▏   | 344926/552076 [00:01<00:00, 221014.84it/s] 66%|██████▋   | 366990/552076 [00:01<00:00, 220790.22it/s] 70%|███████   | 389043/552076 [00:01<00:00, 186567.43it/s] 74%|███████▍  | 410619/552076 [00:01<00:00, 194458.07it/s] 78%|███████▊  | 432337/552076 [00:02<00:00, 200756.78it/s] 82%|████████▏ | 454926/552076 [00:02<00:00, 207688.60it/s] 86%|████████▌ | 476140/552076 [00:02<00:00, 200766.02it/s] 90%|████████▉ | 496578/552076 [00:02<00:00, 199128.04it/s] 94%|█████████▎| 517100/552076 [00:02<00:00, 200915.40it/s] 98%|█████████▊| 539237/552076 [00:02<00:00, 206642.65it/s]100%|██████████| 552076/552076 [00:02<00:00, 209044.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21446/552076 [00:00<00:02, 214457.65it/s]  8%|▊         | 43860/552076 [00:00<00:02, 217271.77it/s] 12%|█▏        | 66611/552076 [00:00<00:02, 220243.39it/s] 16%|█▌        | 89674/552076 [00:00<00:02, 223258.62it/s] 20%|██        | 112428/552076 [00:00<00:01, 224523.55it/s] 24%|██▍       | 134368/552076 [00:00<00:01, 222958.84it/s] 28%|██▊       | 157054/552076 [00:00<00:01, 224113.67it/s] 33%|███▎      | 179680/552076 [00:00<00:01, 224750.95it/s] 37%|███▋      | 202187/552076 [00:00<00:01, 224844.06it/s] 41%|████      | 224108/552076 [00:01<00:01, 223123.08it/s] 45%|████▍     | 247746/552076 [00:01<00:01, 226938.92it/s] 49%|████▉     | 271117/552076 [00:01<00:01, 228928.27it/s] 53%|█████▎    | 294342/552076 [00:01<00:01, 229914.18it/s] 58%|█████▊    | 317713/552076 [00:01<00:01, 231039.49it/s] 62%|██████▏   | 340683/552076 [00:01<00:00, 223960.81it/s] 66%|██████▌   | 363033/552076 [00:01<00:00, 219649.04it/s] 70%|██████▉   | 384984/552076 [00:01<00:00, 216458.42it/s] 74%|███████▎  | 406994/552076 [00:01<00:00, 217536.55it/s] 78%|███████▊  | 428750/552076 [00:01<00:00, 179918.98it/s] 81%|████████  | 447825/552076 [00:02<00:00, 158023.99it/s] 84%|████████▍ | 464870/552076 [00:02<00:00, 145304.47it/s] 87%|████████▋ | 480471/552076 [00:02<00:00, 135875.99it/s] 90%|████████▉ | 494932/552076 [00:02<00:00, 131200.99it/s] 92%|█████████▏| 508699/552076 [00:02<00:00, 127549.94it/s] 95%|█████████▍| 521929/552076 [00:02<00:00, 125203.41it/s] 97%|█████████▋| 534792/552076 [00:02<00:00, 125142.03it/s] 99%|█████████▉| 547546/552076 [00:02<00:00, 125767.25it/s]100%|██████████| 552076/552076 [00:03<00:00, 183903.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5093/552076 [00:00<00:11, 49075.74it/s]  1%|▏         | 8197/552076 [00:00<00:13, 41790.90it/s]  2%|▏         | 13728/552076 [00:00<00:11, 45097.23it/s]  3%|▎         | 19294/552076 [00:00<00:11, 47534.59it/s]  4%|▍         | 23049/552076 [00:00<00:12, 43172.38it/s]  5%|▌         | 28374/552076 [00:00<00:11, 45769.63it/s]  6%|▋         | 34996/552076 [00:00<00:10, 50442.23it/s]  7%|▋         | 40659/552076 [00:00<00:10, 50511.97it/s]  8%|▊         | 45620/552076 [00:00<00:10, 46728.30it/s] 10%|▉         | 53233/552076 [00:01<00:09, 52851.67it/s] 11%|█         | 59935/552076 [00:01<00:08, 56429.43it/s] 12%|█▏        | 66584/552076 [00:01<00:08, 59112.29it/s] 13%|█▎        | 73241/552076 [00:01<00:07, 61167.19it/s] 14%|█▍        | 79524/552076 [00:01<00:08, 54573.47it/s] 15%|█▌        | 85230/552076 [00:01<00:09, 51211.32it/s] 16%|█▋        | 90568/552076 [00:01<00:09, 48755.63it/s] 17%|█▋        | 95620/552076 [00:01<00:09, 48527.07it/s] 19%|█▊        | 102275/552076 [00:01<00:08, 52818.11it/s] 20%|█▉        | 107755/552076 [00:02<00:10, 41782.09it/s] 20%|██        | 112434/552076 [00:02<00:11, 39831.96it/s] 21%|██▏       | 117334/552076 [00:02<00:10, 42199.98it/s] 22%|██▏       | 123883/552076 [00:02<00:09, 47239.83it/s] 24%|██▎       | 130447/552076 [00:02<00:08, 51576.35it/s] 25%|██▍       | 136005/552076 [00:02<00:08, 48462.47it/s] 26%|██▌       | 141170/552076 [00:02<00:09, 44804.54it/s] 27%|██▋       | 151091/552076 [00:02<00:07, 53626.77it/s] 30%|██▉       | 163283/552076 [00:03<00:06, 64458.50it/s] 32%|███▏      | 175342/552076 [00:03<00:05, 74919.82it/s] 34%|███▍      | 187457/552076 [00:03<00:04, 84605.15it/s] 36%|███▌      | 199615/552076 [00:03<00:03, 93098.64it/s] 38%|███▊      | 211771/552076 [00:03<00:03, 100131.66it/s] 41%|████      | 223911/552076 [00:03<00:03, 105686.25it/s] 43%|████▎     | 235365/552076 [00:03<00:03, 84897.82it/s]  45%|████▍     | 247452/552076 [00:03<00:03, 93220.02it/s] 47%|████▋     | 259741/552076 [00:03<00:02, 100499.15it/s] 49%|████▉     | 271986/552076 [00:04<00:02, 106209.14it/s] 51%|█████▏    | 284115/552076 [00:04<00:02, 110321.52it/s] 54%|█████▎    | 296224/552076 [00:04<00:02, 113344.72it/s] 56%|█████▌    | 308481/552076 [00:04<00:02, 115962.45it/s] 58%|█████▊    | 320387/552076 [00:04<00:02, 97751.65it/s]  60%|█████▉    | 330868/552076 [00:04<00:02, 98966.48it/s] 62%|██████▏   | 343124/552076 [00:04<00:01, 105030.38it/s] 64%|██████▍   | 355278/552076 [00:04<00:01, 109490.99it/s] 66%|██████▋   | 366591/552076 [00:04<00:01, 109657.35it/s] 69%|██████▊   | 378768/552076 [00:05<00:01, 113030.29it/s] 71%|███████   | 391050/552076 [00:05<00:01, 115797.33it/s] 73%|███████▎  | 402790/552076 [00:05<00:01, 104167.33it/s] 75%|███████▍  | 413540/552076 [00:05<00:01, 103881.02it/s] 77%|███████▋  | 424162/552076 [00:05<00:01, 94204.82it/s]  79%|███████▊  | 433919/552076 [00:05<00:01, 87713.68it/s] 80%|████████  | 443016/552076 [00:05<00:01, 88269.56it/s] 82%|████████▏ | 453807/552076 [00:05<00:01, 91239.56it/s] 84%|████████▍ | 463117/552076 [00:05<00:01, 81366.99it/s] 86%|████████▌ | 473939/552076 [00:06<00:00, 86880.46it/s] 87%|████████▋ | 482961/552076 [00:06<00:00, 77620.13it/s] 89%|████████▉ | 491141/552076 [00:06<00:00, 71649.32it/s] 90%|█████████ | 499582/552076 [00:06<00:00, 75053.09it/s] 93%|█████████▎| 512581/552076 [00:06<00:00, 85949.89it/s] 95%|█████████▌| 525680/552076 [00:06<00:00, 95835.36it/s] 97%|█████████▋| 537339/552076 [00:06<00:00, 101240.81it/s] 99%|█████████▉| 548179/552076 [00:06<00:00, 95372.64it/s] 100%|██████████| 552076/552076 [00:06<00:00, 79644.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10657/552076 [00:00<00:05, 106560.96it/s]  4%|▍         | 21922/552076 [00:00<00:04, 108317.00it/s]  6%|▌         | 33701/552076 [00:00<00:04, 109894.33it/s]  8%|▊         | 43180/552076 [00:00<00:04, 104878.62it/s]  9%|▉         | 51165/552076 [00:00<00:05, 94806.51it/s]  11%|█▏        | 62932/552076 [00:00<00:04, 100673.82it/s] 14%|█▎        | 75160/552076 [00:00<00:04, 106308.71it/s] 15%|█▌        | 85177/552076 [00:00<00:04, 103862.80it/s] 17%|█▋        | 95169/552076 [00:00<00:04, 102646.95it/s] 20%|█▉        | 108199/552076 [00:01<00:04, 109626.40it/s] 22%|██▏       | 121231/552076 [00:01<00:03, 115109.00it/s] 24%|██▍       | 133673/552076 [00:01<00:03, 117750.01it/s] 26%|██▋       | 145480/552076 [00:01<00:03, 103814.11it/s] 28%|██▊       | 156185/552076 [00:01<00:04, 80039.11it/s]  30%|██▉       | 165244/552076 [00:01<00:04, 82382.64it/s] 32%|███▏      | 176195/552076 [00:01<00:04, 88995.79it/s] 34%|███▍      | 188362/552076 [00:01<00:03, 96792.79it/s] 36%|███▋      | 200574/552076 [00:01<00:03, 103212.65it/s] 38%|███▊      | 211487/552076 [00:02<00:03, 91369.94it/s]  40%|████      | 221289/552076 [00:02<00:03, 90741.12it/s] 42%|████▏     | 233789/552076 [00:02<00:03, 98869.56it/s] 45%|████▍     | 245959/552076 [00:02<00:02, 104764.25it/s] 47%|████▋     | 257633/552076 [00:02<00:02, 108090.39it/s] 49%|████▉     | 270001/552076 [00:02<00:02, 112336.38it/s] 51%|█████     | 282400/552076 [00:02<00:02, 115595.19it/s] 53%|█████▎    | 294189/552076 [00:02<00:02, 103980.97it/s] 55%|█████▌    | 304969/552076 [00:03<00:03, 80214.07it/s]  57%|█████▋    | 315654/552076 [00:03<00:02, 86696.13it/s] 59%|█████▉    | 325240/552076 [00:03<00:02, 85951.29it/s] 61%|██████    | 334478/552076 [00:03<00:02, 83818.86it/s] 62%|██████▏   | 343592/552076 [00:03<00:02, 84605.38it/s] 64%|██████▍   | 352378/552076 [00:03<00:03, 65425.63it/s] 65%|██████▌   | 359812/552076 [00:03<00:02, 67192.13it/s] 67%|██████▋   | 371198/552076 [00:03<00:02, 75665.59it/s] 69%|██████▉   | 379563/552076 [00:04<00:02, 76965.28it/s] 70%|███████   | 388736/552076 [00:04<00:02, 78733.06it/s] 73%|███████▎  | 400675/552076 [00:04<00:01, 87690.16it/s] 75%|███████▍  | 412981/552076 [00:04<00:01, 95963.81it/s] 77%|███████▋  | 425285/552076 [00:04<00:01, 102746.50it/s] 79%|███████▉  | 437630/552076 [00:04<00:01, 108188.98it/s] 82%|████████▏ | 449956/552076 [00:04<00:00, 112308.17it/s] 84%|████████▎ | 461573/552076 [00:04<00:00, 110681.89it/s] 86%|████████▌ | 474200/552076 [00:04<00:00, 114937.50it/s] 88%|████████▊ | 485929/552076 [00:05<00:00, 92479.21it/s]  90%|█████████ | 497469/552076 [00:05<00:00, 98335.75it/s] 92%|█████████▏| 508012/552076 [00:05<00:00, 83246.20it/s] 94%|█████████▍| 520257/552076 [00:05<00:00, 92090.77it/s] 96%|█████████▋| 532449/552076 [00:05<00:00, 99384.40it/s] 99%|█████████▊| 544674/552076 [00:05<00:00, 105291.56it/s]100%|██████████| 552076/552076 [00:05<00:00, 97552.20it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9266/552076 [00:00<00:05, 92654.79it/s]  4%|▍         | 21254/552076 [00:00<00:05, 99427.90it/s]  6%|▌         | 33810/552076 [00:00<00:04, 106049.04it/s]  8%|▊         | 45297/552076 [00:00<00:04, 105312.45it/s] 10%|▉         | 53759/552076 [00:00<00:07, 68459.52it/s]  11%|█         | 60813/552076 [00:00<00:07, 66517.36it/s] 12%|█▏        | 67623/552076 [00:00<00:07, 62655.22it/s] 13%|█▎        | 74045/552076 [00:00<00:08, 59408.34it/s] 15%|█▍        | 81313/552076 [00:01<00:07, 62850.46it/s] 16%|█▌        | 87753/552076 [00:01<00:07, 58966.22it/s] 17%|█▋        | 93807/552076 [00:01<00:07, 58239.18it/s] 19%|█▉        | 107267/552076 [00:01<00:06, 70183.58it/s] 22%|██▏       | 120547/552076 [00:01<00:05, 81746.10it/s] 24%|██▍       | 133656/552076 [00:01<00:04, 92151.46it/s] 26%|██▌       | 144913/552076 [00:01<00:04, 97454.04it/s] 29%|██▊       | 157792/552076 [00:01<00:03, 105126.50it/s] 31%|███       | 170626/552076 [00:01<00:03, 111157.91it/s] 33%|███▎      | 182518/552076 [00:02<00:03, 105965.78it/s] 35%|███▌      | 193709/552076 [00:02<00:04, 75112.24it/s]  37%|███▋      | 204573/552076 [00:02<00:04, 82774.82it/s] 39%|███▉      | 216814/552076 [00:02<00:03, 91679.82it/s] 41%|████      | 227264/552076 [00:02<00:03, 93268.29it/s] 43%|████▎     | 239591/552076 [00:02<00:03, 100613.13it/s] 46%|████▌     | 251955/552076 [00:02<00:02, 106565.29it/s] 48%|████▊     | 264315/552076 [00:02<00:02, 111159.29it/s] 50%|█████     | 276677/552076 [00:03<00:02, 114625.32it/s] 52%|█████▏    | 288524/552076 [00:03<00:02, 100497.95it/s] 54%|█████▍    | 299158/552076 [00:03<00:02, 94228.43it/s]  56%|█████▌    | 309070/552076 [00:03<00:02, 88504.29it/s] 58%|█████▊    | 318334/552076 [00:03<00:02, 86125.90it/s] 60%|█████▉    | 329250/552076 [00:03<00:02, 91945.75it/s] 62%|██████▏   | 341275/552076 [00:03<00:02, 98930.58it/s] 64%|██████▍   | 353552/552076 [00:03<00:01, 105049.09it/s] 66%|██████▋   | 365857/552076 [00:03<00:01, 109869.18it/s] 68%|██████▊   | 378170/552076 [00:04<00:01, 113535.13it/s] 71%|███████   | 390563/552076 [00:04<00:01, 116465.33it/s] 73%|███████▎  | 402891/552076 [00:04<00:01, 118427.05it/s] 75%|███████▌  | 415300/552076 [00:04<00:01, 120070.86it/s] 77%|███████▋  | 427599/552076 [00:04<00:01, 120929.09it/s] 80%|███████▉  | 439893/552076 [00:04<00:00, 121523.99it/s] 82%|████████▏ | 452100/552076 [00:04<00:00, 120998.42it/s] 84%|████████▍ | 464239/552076 [00:04<00:00, 110480.57it/s] 86%|████████▌ | 475492/552076 [00:04<00:00, 104766.59it/s] 88%|████████▊ | 486174/552076 [00:05<00:00, 67119.39it/s]  90%|████████▉ | 495465/552076 [00:05<00:00, 72673.76it/s] 91%|█████████▏| 504168/552076 [00:05<00:00, 54596.79it/s] 93%|█████████▎| 511297/552076 [00:05<00:00, 50921.35it/s] 94%|█████████▍| 517638/552076 [00:05<00:00, 54117.94it/s] 95%|█████████▌| 526006/552076 [00:05<00:00, 60533.03it/s] 97%|█████████▋| 532940/552076 [00:06<00:00, 60291.99it/s] 98%|█████████▊| 539586/552076 [00:06<00:00, 60772.02it/s] 99%|█████████▉| 548626/552076 [00:06<00:00, 67273.04it/s]100%|██████████| 552076/552076 [00:06<00:00, 87762.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4464/552076 [00:00<00:13, 40811.05it/s]  1%|          | 6669/552076 [00:00<00:16, 32511.76it/s]  2%|▏         | 9705/552076 [00:00<00:17, 31834.76it/s]  2%|▏         | 12638/552076 [00:00<00:18, 29893.10it/s]  4%|▎         | 19768/552076 [00:00<00:14, 36199.76it/s]  4%|▍         | 23424/552076 [00:00<00:15, 35235.52it/s]  5%|▌         | 29835/552076 [00:00<00:12, 40229.38it/s]  6%|▌         | 34127/552076 [00:00<00:13, 37939.10it/s]  7%|▋         | 38501/552076 [00:00<00:12, 39510.16it/s]  8%|▊         | 44762/552076 [00:01<00:11, 44427.18it/s]  9%|▉         | 49898/552076 [00:01<00:11, 45138.64it/s] 10%|▉         | 54638/552076 [00:01<00:11, 45011.50it/s] 11%|█         | 59298/552076 [00:01<00:11, 44640.90it/s] 12%|█▏        | 63874/552076 [00:01<00:11, 44003.64it/s] 12%|█▏        | 68355/552076 [00:01<00:11, 40628.38it/s] 13%|█▎        | 72526/552076 [00:01<00:12, 38791.91it/s] 14%|█▍        | 76498/552076 [00:01<00:13, 35907.78it/s] 15%|█▍        | 80197/552076 [00:01<00:13, 34980.50it/s] 16%|█▌        | 86755/552076 [00:02<00:11, 40673.49it/s] 17%|█▋        | 91228/552076 [00:02<00:13, 35410.76it/s] 18%|█▊        | 98394/552076 [00:02<00:10, 41745.44it/s] 19%|█▊        | 103307/552076 [00:02<00:11, 38758.64it/s] 21%|██        | 115515/552076 [00:02<00:08, 48737.70it/s] 23%|██▎       | 124746/552076 [00:02<00:07, 56777.46it/s] 24%|██▍       | 132252/552076 [00:02<00:07, 58277.92it/s] 25%|██▌       | 139370/552076 [00:03<00:10, 40124.00it/s] 27%|██▋       | 146920/552076 [00:03<00:08, 46685.77it/s] 28%|██▊       | 156587/552076 [00:03<00:07, 55257.10it/s] 31%|███       | 168517/552076 [00:03<00:05, 65863.38it/s] 33%|███▎      | 180539/552076 [00:03<00:04, 75887.27it/s] 34%|███▍      | 190136/552076 [00:03<00:04, 73812.78it/s] 37%|███▋      | 202416/552076 [00:03<00:04, 83846.28it/s] 39%|███▉      | 214099/552076 [00:03<00:03, 90361.88it/s] 41%|████      | 224301/552076 [00:04<00:03, 86985.66it/s] 43%|████▎     | 238049/552076 [00:04<00:03, 97756.64it/s] 45%|████▌     | 250446/552076 [00:04<00:02, 103298.60it/s] 48%|████▊     | 262940/552076 [00:04<00:02, 108958.99it/s] 50%|█████     | 276993/552076 [00:04<00:02, 116833.02it/s] 53%|█████▎    | 291241/552076 [00:04<00:02, 123501.33it/s] 55%|█████▌    | 304122/552076 [00:04<00:02, 99501.44it/s]  57%|█████▋    | 315193/552076 [00:04<00:02, 79633.65it/s] 59%|█████▉    | 324572/552076 [00:05<00:03, 69845.50it/s] 61%|██████    | 337790/552076 [00:05<00:02, 81355.27it/s] 65%|██████▍   | 356240/552076 [00:05<00:02, 97748.60it/s] 68%|██████▊   | 374730/552076 [00:05<00:01, 113846.42it/s] 71%|███████   | 392304/552076 [00:05<00:01, 127294.92it/s] 74%|███████▍  | 410718/552076 [00:05<00:01, 140286.11it/s] 78%|███████▊  | 428429/552076 [00:05<00:00, 149617.55it/s] 81%|████████  | 445055/552076 [00:05<00:00, 136851.79it/s] 84%|████████▍ | 463983/552076 [00:05<00:00, 149252.44it/s] 87%|████████▋ | 482793/552076 [00:06<00:00, 159109.66it/s] 91%|█████████ | 501910/552076 [00:06<00:00, 167537.83it/s] 94%|█████████▍| 520326/552076 [00:06<00:00, 172198.97it/s] 98%|█████████▊| 539103/552076 [00:06<00:00, 176591.29it/s]100%|██████████| 552076/552076 [00:06<00:00, 86077.95it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12902/552076 [00:00<00:04, 129016.12it/s]  5%|▍         | 25997/552076 [00:00<00:04, 129589.11it/s]  7%|▋         | 38703/552076 [00:00<00:03, 128818.69it/s]  9%|▉         | 50150/552076 [00:00<00:04, 124149.14it/s] 11%|█▏        | 63356/552076 [00:00<00:03, 126420.58it/s] 14%|█▍        | 76870/552076 [00:00<00:03, 128915.79it/s] 16%|█▋        | 90096/552076 [00:00<00:03, 129899.37it/s] 19%|█▊        | 103467/552076 [00:00<00:03, 131017.11it/s] 21%|██        | 116857/552076 [00:00<00:03, 131868.71it/s] 24%|██▍       | 132451/552076 [00:01<00:03, 138270.72it/s] 27%|██▋       | 149939/552076 [00:01<00:02, 147535.59it/s] 30%|███       | 167834/552076 [00:01<00:02, 155736.50it/s] 34%|███▎      | 186281/552076 [00:01<00:02, 163368.58it/s] 37%|███▋      | 204058/552076 [00:01<00:02, 167436.59it/s] 40%|████      | 222399/552076 [00:01<00:01, 171927.07it/s] 43%|████▎     | 239726/552076 [00:01<00:01, 171024.69it/s] 47%|████▋     | 257947/552076 [00:01<00:01, 174231.65it/s] 50%|█████     | 276184/552076 [00:01<00:01, 176593.94it/s] 53%|█████▎    | 293908/552076 [00:01<00:01, 175251.45it/s] 57%|█████▋    | 312229/552076 [00:02<00:01, 177561.81it/s] 60%|█████▉    | 330392/552076 [00:02<00:01, 178759.03it/s] 63%|██████▎   | 348751/552076 [00:02<00:01, 180179.82it/s] 67%|██████▋   | 367451/552076 [00:02<00:01, 182172.98it/s] 70%|██████▉   | 385907/552076 [00:02<00:00, 182879.78it/s] 73%|███████▎  | 404212/552076 [00:02<00:00, 177280.86it/s] 77%|███████▋  | 423001/552076 [00:02<00:00, 180332.84it/s] 80%|███████▉  | 441508/552076 [00:02<00:00, 181725.57it/s] 84%|████████▎ | 461959/552076 [00:02<00:00, 188007.60it/s] 87%|████████▋ | 481879/552076 [00:02<00:00, 191227.76it/s] 91%|█████████ | 502181/552076 [00:03<00:00, 194617.10it/s] 95%|█████████▍| 522276/552076 [00:03<00:00, 196474.57it/s] 98%|█████████▊| 541972/552076 [00:03<00:00, 191601.63it/s]100%|██████████| 552076/552076 [00:03<00:00, 168311.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10117/552076 [00:00<00:05, 101166.24it/s]  4%|▎         | 20265/552076 [00:00<00:05, 101258.46it/s]  6%|▌         | 30881/552076 [00:00<00:05, 102679.26it/s]  7%|▋         | 38523/552076 [00:00<00:05, 93083.33it/s]   9%|▉         | 48965/552076 [00:00<00:05, 96215.28it/s] 11%|█         | 60069/552076 [00:00<00:04, 100228.00it/s] 13%|█▎        | 71282/552076 [00:00<00:04, 103522.82it/s] 15%|█▍        | 82495/552076 [00:00<00:04, 105959.98it/s] 17%|█▋        | 92802/552076 [00:00<00:04, 105074.61it/s] 19%|█▉        | 103595/552076 [00:01<00:04, 105914.75it/s] 21%|██        | 113956/552076 [00:01<00:04, 104504.85it/s] 23%|██▎       | 124249/552076 [00:01<00:04, 103941.36it/s] 24%|██▍       | 134817/552076 [00:01<00:03, 104455.98it/s] 26%|██▋       | 145187/552076 [00:01<00:03, 102998.98it/s] 28%|██▊       | 155439/552076 [00:01<00:03, 102735.78it/s] 30%|███       | 166780/552076 [00:01<00:03, 105720.54it/s] 32%|███▏      | 178341/552076 [00:01<00:03, 108504.86it/s] 34%|███▍      | 189527/552076 [00:01<00:03, 109487.89it/s] 36%|███▋      | 201023/552076 [00:01<00:03, 111072.22it/s] 38%|███▊      | 212360/552076 [00:02<00:03, 111750.01it/s] 40%|████      | 223547/552076 [00:02<00:03, 103937.67it/s] 42%|████▏     | 234059/552076 [00:02<00:04, 78884.41it/s]  44%|████▍     | 242932/552076 [00:02<00:04, 68812.38it/s] 45%|████▌     | 250734/552076 [00:02<00:04, 65486.27it/s] 47%|████▋     | 257961/552076 [00:02<00:04, 59500.07it/s] 48%|████▊     | 264491/552076 [00:02<00:04, 58857.99it/s] 49%|████▉     | 270785/552076 [00:03<00:04, 58552.84it/s] 50%|█████     | 276926/552076 [00:03<00:04, 58977.82it/s] 51%|█████▏    | 283025/552076 [00:03<00:04, 55025.43it/s] 52%|█████▏    | 289459/552076 [00:03<00:04, 57521.57it/s] 54%|█████▎    | 295377/552076 [00:03<00:06, 39453.08it/s] 55%|█████▍    | 301332/552076 [00:03<00:05, 43896.12it/s] 56%|█████▌    | 308057/552076 [00:03<00:04, 49000.95it/s] 57%|█████▋    | 314825/552076 [00:03<00:04, 53423.29it/s] 58%|█████▊    | 321554/552076 [00:04<00:04, 56943.62it/s] 59%|█████▉    | 328328/552076 [00:04<00:03, 59801.20it/s] 61%|██████    | 334861/552076 [00:04<00:03, 61357.06it/s] 62%|██████▏   | 341632/552076 [00:04<00:03, 63132.64it/s] 63%|██████▎   | 348414/552076 [00:04<00:03, 64468.78it/s] 64%|██████▍   | 355170/552076 [00:04<00:03, 65363.88it/s] 66%|██████▌   | 361949/552076 [00:04<00:02, 66072.84it/s] 67%|██████▋   | 368676/552076 [00:04<00:02, 66426.71it/s] 68%|██████▊   | 375458/552076 [00:04<00:02, 66838.20it/s] 69%|██████▉   | 382236/552076 [00:04<00:02, 67117.05it/s] 70%|███████   | 388989/552076 [00:05<00:02, 67239.94it/s] 72%|███████▏  | 395760/552076 [00:05<00:02, 67379.52it/s] 73%|███████▎  | 402777/552076 [00:05<00:02, 68192.58it/s] 74%|███████▍  | 409609/552076 [00:05<00:02, 68018.26it/s] 75%|███████▌  | 416420/552076 [00:05<00:01, 67847.72it/s] 77%|███████▋  | 423211/552076 [00:05<00:01, 66909.35it/s] 78%|███████▊  | 429935/552076 [00:05<00:01, 67005.60it/s] 79%|███████▉  | 436662/552076 [00:05<00:01, 67083.91it/s] 80%|████████  | 443441/552076 [00:05<00:01, 67292.34it/s] 82%|████████▏ | 450173/552076 [00:05<00:01, 67299.45it/s] 83%|████████▎ | 457111/552076 [00:06<00:01, 67907.80it/s] 84%|████████▍ | 463905/552076 [00:06<00:01, 67892.67it/s] 85%|████████▌ | 470697/552076 [00:06<00:01, 67804.45it/s] 86%|████████▋ | 477479/552076 [00:06<00:01, 67733.23it/s] 88%|████████▊ | 484254/552076 [00:06<00:01, 67562.70it/s] 89%|████████▉ | 491024/552076 [00:06<00:00, 67602.64it/s] 90%|█████████ | 497785/552076 [00:06<00:00, 67543.66it/s] 91%|█████████▏| 504540/552076 [00:06<00:00, 67322.60it/s] 93%|█████████▎| 511273/552076 [00:06<00:00, 67236.70it/s] 94%|█████████▍| 518004/552076 [00:06<00:00, 67256.19it/s] 95%|█████████▌| 524730/552076 [00:07<00:00, 67097.45it/s] 96%|█████████▋| 531440/552076 [00:07<00:00, 52067.31it/s] 97%|█████████▋| 538125/552076 [00:07<00:00, 55766.28it/s] 99%|█████████▊| 544710/552076 [00:07<00:00, 58450.94it/s]100%|█████████▉| 551372/552076 [00:07<00:00, 60682.25it/s]100%|██████████| 552076/552076 [00:07<00:00, 73421.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6572/552076 [00:00<00:08, 65713.48it/s]  2%|▏         | 13089/552076 [00:00<00:08, 65547.81it/s]  4%|▎         | 19755/552076 [00:00<00:08, 65875.80it/s]  5%|▍         | 26343/552076 [00:00<00:07, 65876.32it/s]  6%|▌         | 32977/552076 [00:00<00:07, 66012.98it/s]  7%|▋         | 38475/552076 [00:00<00:08, 58816.65it/s]  8%|▊         | 43730/552076 [00:00<00:10, 46860.29it/s]  9%|▉         | 52317/552076 [00:00<00:09, 54253.77it/s] 11%|█         | 61035/552076 [00:00<00:08, 61185.77it/s] 13%|█▎        | 72332/552076 [00:01<00:06, 70940.65it/s] 15%|█▌        | 84331/552076 [00:01<00:05, 80856.25it/s] 18%|█▊        | 98175/552076 [00:01<00:04, 92384.03it/s] 20%|█▉        | 108803/552076 [00:01<00:04, 92987.09it/s] 22%|██▏       | 119075/552076 [00:01<00:05, 79766.95it/s] 23%|██▎       | 129546/552076 [00:01<00:04, 85905.69it/s] 26%|██▌       | 141573/552076 [00:01<00:04, 93958.96it/s] 28%|██▊       | 153831/552076 [00:01<00:03, 101034.38it/s] 30%|██▉       | 164656/552076 [00:01<00:03, 96879.79it/s]  32%|███▏      | 176219/552076 [00:02<00:03, 95029.33it/s] 34%|███▎      | 186109/552076 [00:02<00:04, 87758.87it/s] 36%|███▌      | 198270/552076 [00:02<00:03, 95755.05it/s] 38%|███▊      | 210522/552076 [00:02<00:03, 102469.44it/s] 40%|████      | 222726/552076 [00:02<00:03, 107646.91it/s] 43%|████▎     | 235025/552076 [00:02<00:02, 111831.26it/s] 45%|████▍     | 247358/552076 [00:02<00:02, 115045.61it/s] 47%|████▋     | 259723/552076 [00:02<00:02, 117498.14it/s] 49%|████▉     | 272069/552076 [00:02<00:02, 119224.97it/s] 52%|█████▏    | 284410/552076 [00:03<00:02, 120448.56it/s] 54%|█████▎    | 296714/552076 [00:03<00:02, 121213.12it/s] 56%|█████▌    | 309014/552076 [00:03<00:01, 121741.16it/s] 58%|█████▊    | 321413/552076 [00:03<00:01, 122404.21it/s] 60%|██████    | 333689/552076 [00:03<00:02, 105451.56it/s] 62%|██████▏   | 344674/552076 [00:03<00:01, 105914.37it/s] 65%|██████▍   | 358485/552076 [00:03<00:01, 113877.72it/s] 67%|██████▋   | 370576/552076 [00:03<00:01, 115897.64it/s] 69%|██████▉   | 382777/552076 [00:03<00:01, 117663.25it/s] 72%|███████▏  | 394886/552076 [00:04<00:01, 118668.36it/s] 74%|███████▎  | 407097/552076 [00:04<00:01, 119677.40it/s] 76%|███████▌  | 419516/552076 [00:04<00:01, 120995.98it/s] 78%|███████▊  | 431691/552076 [00:04<00:01, 115530.37it/s] 80%|████████  | 443349/552076 [00:04<00:01, 99337.94it/s]  82%|████████▏ | 454276/552076 [00:04<00:00, 102121.32it/s] 84%|████████▍ | 465260/552076 [00:04<00:00, 104318.54it/s] 86%|████████▋ | 476239/552076 [00:04<00:00, 105900.41it/s] 88%|████████▊ | 487182/552076 [00:04<00:00, 106934.13it/s] 90%|█████████ | 498091/552076 [00:04<00:00, 107569.95it/s] 92%|█████████▏| 509044/552076 [00:05<00:00, 108149.22it/s] 94%|█████████▍| 519930/552076 [00:05<00:00, 108359.81it/s] 97%|█████████▋| 532780/552076 [00:05<00:00, 113704.14it/s] 99%|█████████▊| 544253/552076 [00:05<00:00, 112711.78it/s]100%|██████████| 552076/552076 [00:05<00:00, 101199.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9294/552076 [00:00<00:05, 92939.87it/s]  3%|▎         | 15342/552076 [00:00<00:06, 78870.85it/s]  5%|▍         | 27133/552076 [00:00<00:05, 87567.27it/s]  7%|▋         | 38862/552076 [00:00<00:05, 94771.18it/s]  9%|▉         | 48748/552076 [00:00<00:05, 95960.03it/s] 11%|█         | 60707/552076 [00:00<00:04, 102005.45it/s] 13%|█▎        | 70197/552076 [00:00<00:05, 95431.13it/s]  14%|█▍        | 79329/552076 [00:00<00:05, 91003.34it/s] 16%|█▋        | 91029/552076 [00:00<00:04, 97502.41it/s] 18%|█▊        | 100738/552076 [00:01<00:04, 97239.53it/s] 20%|██        | 110433/552076 [00:01<00:04, 96948.16it/s] 22%|██▏       | 120108/552076 [00:01<00:04, 91240.57it/s] 24%|██▍       | 132267/552076 [00:01<00:04, 98625.21it/s] 26%|██▌       | 142340/552076 [00:01<00:04, 89664.84it/s] 27%|██▋       | 151611/552076 [00:01<00:05, 76230.08it/s] 29%|██▉       | 159795/552076 [00:01<00:06, 65098.70it/s] 30%|███       | 166981/552076 [00:01<00:06, 59405.52it/s] 31%|███▏      | 173491/552076 [00:02<00:06, 55227.82it/s] 33%|███▎      | 179472/552076 [00:02<00:06, 54906.92it/s] 34%|███▎      | 185505/552076 [00:02<00:06, 56428.54it/s] 35%|███▍      | 191383/552076 [00:02<00:06, 53968.89it/s] 37%|███▋      | 202413/552076 [00:02<00:05, 63733.56it/s] 39%|███▉      | 214698/552076 [00:02<00:04, 74486.36it/s] 41%|████      | 226229/552076 [00:02<00:03, 83336.47it/s] 43%|████▎     | 238798/552076 [00:02<00:03, 92708.28it/s] 45%|████▌     | 249908/552076 [00:02<00:03, 97551.33it/s] 48%|████▊     | 262257/552076 [00:03<00:02, 104110.54it/s] 50%|████▉     | 274608/552076 [00:03<00:02, 109257.02it/s] 52%|█████▏    | 286918/552076 [00:03<00:02, 113071.40it/s] 54%|█████▍    | 299415/552076 [00:03<00:02, 116395.41it/s] 57%|█████▋    | 311934/552076 [00:03<00:02, 118901.04it/s] 59%|█████▉    | 324396/552076 [00:03<00:01, 120559.46it/s] 61%|██████    | 336634/552076 [00:03<00:02, 92040.34it/s]  63%|██████▎   | 346980/552076 [00:03<00:03, 67536.75it/s] 64%|██████▍   | 355472/552076 [00:04<00:03, 60027.51it/s] 66%|██████▌   | 362847/552076 [00:04<00:03, 59787.19it/s] 67%|██████▋   | 369786/552076 [00:04<00:02, 61393.47it/s] 68%|██████▊   | 376649/552076 [00:04<00:02, 63397.93it/s] 69%|██████▉   | 383519/552076 [00:04<00:02, 64899.50it/s] 71%|███████   | 390398/552076 [00:04<00:02, 66018.90it/s] 72%|███████▏  | 397275/552076 [00:04<00:02, 66819.18it/s] 73%|███████▎  | 404161/552076 [00:04<00:02, 67416.98it/s] 74%|███████▍  | 411033/552076 [00:04<00:02, 67802.35it/s] 76%|███████▌  | 417928/552076 [00:05<00:01, 68141.48it/s] 77%|███████▋  | 424806/552076 [00:05<00:01, 67619.94it/s] 79%|███████▉  | 435548/552076 [00:05<00:01, 76074.54it/s] 81%|████████  | 445703/552076 [00:05<00:01, 82265.73it/s] 83%|████████▎ | 455640/552076 [00:05<00:01, 86745.00it/s] 84%|████████▍ | 465706/552076 [00:05<00:00, 90497.86it/s] 86%|████████▌ | 475859/552076 [00:05<00:00, 93544.66it/s] 88%|████████▊ | 486154/552076 [00:05<00:00, 96179.54it/s] 90%|████████▉ | 496444/552076 [00:05<00:00, 98101.55it/s] 92%|█████████▏| 506573/552076 [00:06<00:00, 99036.49it/s] 94%|█████████▎| 516573/552076 [00:06<00:00, 81900.39it/s] 95%|█████████▌| 525324/552076 [00:06<00:00, 70162.07it/s] 97%|█████████▋| 533027/552076 [00:06<00:00, 62727.82it/s] 98%|█████████▊| 539928/552076 [00:06<00:00, 58731.82it/s] 99%|█████████▉| 546293/552076 [00:06<00:00, 55359.50it/s]100%|██████████| 552076/552076 [00:06<00:00, 80132.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2609/552076 [00:00<00:23, 23253.16it/s]  1%|          | 6642/552076 [00:00<00:20, 26347.50it/s]  2%|▏         | 10783/552076 [00:00<00:18, 29574.31it/s]  3%|▎         | 14931/552076 [00:00<00:16, 32360.40it/s]  3%|▎         | 17846/552076 [00:00<00:17, 31023.15it/s]  4%|▍         | 22188/552076 [00:00<00:15, 33929.08it/s]  5%|▍         | 25514/552076 [00:00<00:16, 31634.27it/s]  5%|▌         | 28662/552076 [00:00<00:16, 30869.94it/s]  6%|▌         | 32062/552076 [00:00<00:16, 31392.37it/s]  6%|▋         | 35620/552076 [00:01<00:16, 32137.77it/s]  8%|▊         | 44445/552076 [00:01<00:12, 39712.74it/s]  9%|▉         | 51273/552076 [00:01<00:11, 45412.50it/s] 10%|█         | 57415/552076 [00:01<00:10, 48412.43it/s] 12%|█▏        | 63653/552076 [00:01<00:09, 51897.84it/s] 13%|█▎        | 69451/552076 [00:01<00:09, 53571.73it/s] 14%|█▎        | 75713/552076 [00:01<00:08, 55998.76it/s] 15%|█▍        | 81933/552076 [00:01<00:08, 56508.04it/s] 16%|█▌        | 88201/552076 [00:01<00:07, 58227.43it/s] 17%|█▋        | 94193/552076 [00:01<00:07, 58413.32it/s] 18%|█▊        | 100473/552076 [00:02<00:07, 59662.52it/s] 19%|█▉        | 106529/552076 [00:02<00:09, 47515.94it/s] 20%|██        | 111735/552076 [00:02<00:09, 48328.85it/s] 21%|██        | 116889/552076 [00:02<00:09, 44777.96it/s] 22%|██▏       | 121644/552076 [00:02<00:10, 41045.63it/s] 23%|██▎       | 126004/552076 [00:02<00:10, 39528.91it/s] 24%|██▎       | 130148/552076 [00:02<00:11, 37591.55it/s] 24%|██▍       | 134061/552076 [00:02<00:11, 37198.50it/s] 25%|██▌       | 138088/552076 [00:03<00:10, 37680.41it/s] 26%|██▌       | 143503/552076 [00:03<00:09, 41463.72it/s] 27%|██▋       | 147820/552076 [00:03<00:09, 40847.58it/s] 28%|██▊       | 152758/552076 [00:03<00:09, 42679.67it/s] 28%|██▊       | 157132/552076 [00:03<00:09, 40510.18it/s] 29%|██▉       | 161386/552076 [00:03<00:09, 41097.85it/s] 30%|███       | 166739/552076 [00:03<00:08, 43414.08it/s] 31%|███       | 171279/552076 [00:03<00:08, 42804.09it/s] 32%|███▏      | 176712/552076 [00:03<00:08, 44838.08it/s] 33%|███▎      | 181834/552076 [00:04<00:08, 45307.47it/s] 34%|███▍      | 187783/552076 [00:04<00:07, 48001.80it/s] 35%|███▍      | 192661/552076 [00:04<00:07, 48222.36it/s] 36%|███▌      | 198079/552076 [00:04<00:07, 49867.33it/s] 37%|███▋      | 203485/552076 [00:04<00:06, 51054.99it/s] 38%|███▊      | 208635/552076 [00:04<00:06, 50106.23it/s] 39%|███▊      | 213805/552076 [00:04<00:06, 50573.11it/s] 40%|███▉      | 219217/552076 [00:04<00:06, 51585.96it/s] 41%|████      | 224582/552076 [00:04<00:06, 52187.01it/s] 42%|████▏     | 229876/552076 [00:04<00:06, 51679.97it/s] 43%|████▎     | 235353/552076 [00:05<00:06, 52568.38it/s] 44%|████▎     | 240623/552076 [00:05<00:05, 52330.98it/s] 45%|████▍     | 246226/552076 [00:05<00:05, 53387.00it/s] 46%|████▌     | 251792/552076 [00:05<00:05, 53088.09it/s] 47%|████▋     | 257379/552076 [00:05<00:05, 53893.00it/s] 48%|████▊     | 262778/552076 [00:05<00:05, 53437.77it/s] 49%|████▊     | 268204/552076 [00:05<00:05, 53680.04it/s] 50%|████▉     | 273578/552076 [00:05<00:05, 52701.03it/s] 51%|█████     | 279003/552076 [00:05<00:05, 52603.19it/s] 52%|█████▏    | 284511/552076 [00:06<00:05, 53321.06it/s] 53%|█████▎    | 289850/552076 [00:06<00:05, 52039.78it/s] 53%|█████▎    | 295086/552076 [00:06<00:04, 51711.74it/s] 54%|█████▍    | 300511/552076 [00:06<00:04, 52447.58it/s] 55%|█████▌    | 306148/552076 [00:06<00:04, 53564.14it/s] 57%|█████▋    | 316115/552076 [00:06<00:03, 62195.29it/s] 59%|█████▉    | 326526/552076 [00:06<00:03, 70738.60it/s] 61%|██████    | 334373/552076 [00:06<00:03, 64595.88it/s] 62%|██████▏   | 341477/552076 [00:06<00:03, 61327.29it/s] 63%|██████▎   | 348096/552076 [00:07<00:03, 59045.52it/s] 64%|██████▍   | 354359/552076 [00:07<00:03, 56965.49it/s] 65%|██████▌   | 360323/552076 [00:07<00:03, 55176.81it/s] 66%|██████▋   | 366040/552076 [00:07<00:03, 55459.03it/s] 67%|██████▋   | 371726/552076 [00:07<00:03, 54330.10it/s] 68%|██████▊   | 377262/552076 [00:07<00:03, 53994.34it/s] 69%|██████▉   | 382834/552076 [00:07<00:03, 54500.35it/s] 70%|███████   | 388336/552076 [00:07<00:03, 53463.36it/s] 71%|███████▏  | 393724/552076 [00:07<00:02, 53113.99it/s] 72%|███████▏  | 399065/552076 [00:07<00:02, 51334.91it/s] 73%|███████▎  | 404343/552076 [00:08<00:02, 51480.73it/s] 74%|███████▍  | 410068/552076 [00:08<00:02, 53085.34it/s] 75%|███████▌  | 415811/552076 [00:08<00:02, 53111.99it/s] 76%|███████▋  | 421668/552076 [00:08<00:02, 54034.84it/s] 77%|███████▋  | 427479/552076 [00:08<00:02, 54606.93it/s] 78%|███████▊  | 432954/552076 [00:08<00:02, 53888.96it/s] 79%|███████▉  | 438554/552076 [00:08<00:02, 53262.59it/s] 80%|████████  | 443970/552076 [00:08<00:02, 53049.57it/s] 81%|████████▏ | 449486/552076 [00:08<00:01, 53664.07it/s] 82%|████████▏ | 455176/552076 [00:09<00:01, 54595.02it/s] 83%|████████▎ | 460645/552076 [00:09<00:01, 53464.23it/s] 84%|████████▍ | 466003/552076 [00:09<00:01, 53354.35it/s] 85%|████████▌ | 471347/552076 [00:09<00:01, 53037.63it/s] 86%|████████▋ | 476782/552076 [00:09<00:01, 52405.55it/s] 87%|████████▋ | 482325/552076 [00:09<00:01, 52803.03it/s] 88%|████████▊ | 487975/552076 [00:09<00:01, 53858.93it/s] 89%|████████▉ | 493370/552076 [00:09<00:01, 50243.58it/s] 90%|█████████ | 498450/552076 [00:09<00:01, 45288.87it/s] 91%|█████████ | 503565/552076 [00:10<00:01, 46239.75it/s] 92%|█████████▏| 508286/552076 [00:10<00:00, 45233.64it/s] 93%|█████████▎| 512953/552076 [00:10<00:00, 45654.08it/s] 94%|█████████▍| 519053/552076 [00:10<00:00, 48140.58it/s] 95%|█████████▍| 524217/552076 [00:10<00:00, 49139.32it/s] 96%|█████████▌| 529187/552076 [00:10<00:00, 47048.38it/s] 97%|█████████▋| 533950/552076 [00:10<00:00, 46850.71it/s] 98%|█████████▊| 538915/552076 [00:10<00:00, 46689.47it/s] 99%|█████████▊| 544541/552076 [00:10<00:00, 49200.08it/s]100%|█████████▉| 549518/552076 [00:10<00:00, 46782.90it/s]100%|██████████| 552076/552076 [00:11<00:00, 50100.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6349/552076 [00:00<00:08, 63487.34it/s]  2%|▏         | 11593/552076 [00:00<00:09, 58032.53it/s]  3%|▎         | 16874/552076 [00:00<00:09, 55939.17it/s]  4%|▍         | 22409/552076 [00:00<00:09, 55759.55it/s]  5%|▌         | 28013/552076 [00:00<00:09, 55842.57it/s]  6%|▌         | 33336/552076 [00:00<00:09, 54078.92it/s]  7%|▋         | 38852/552076 [00:00<00:09, 54039.44it/s]  8%|▊         | 44535/552076 [00:00<00:09, 54846.09it/s]  9%|▉         | 50393/552076 [00:00<00:08, 55914.03it/s] 10%|█         | 56001/552076 [00:01<00:09, 55013.16it/s] 11%|█         | 61739/552076 [00:01<00:08, 55343.55it/s] 12%|█▏        | 67376/552076 [00:01<00:08, 55645.95it/s] 13%|█▎        | 72952/552076 [00:01<00:08, 55679.97it/s] 14%|█▍        | 78466/552076 [00:01<00:08, 54291.14it/s] 15%|█▌        | 83865/552076 [00:01<00:08, 53885.32it/s] 16%|█▌        | 89233/552076 [00:01<00:08, 53764.12it/s] 17%|█▋        | 95017/552076 [00:01<00:08, 54083.55it/s] 18%|█▊        | 100658/552076 [00:01<00:08, 54760.87it/s] 19%|█▉        | 106130/552076 [00:01<00:08, 54134.28it/s] 20%|██        | 111795/552076 [00:02<00:08, 54864.66it/s] 21%|██▏       | 117453/552076 [00:02<00:07, 54690.44it/s] 22%|██▏       | 123030/552076 [00:02<00:07, 55009.60it/s] 23%|██▎       | 128533/552076 [00:02<00:08, 52042.30it/s] 24%|██▍       | 133772/552076 [00:02<00:09, 44403.83it/s] 25%|██▌       | 138432/552076 [00:02<00:09, 44499.48it/s] 26%|██▌       | 143036/552076 [00:02<00:09, 41570.89it/s] 27%|██▋       | 147340/552076 [00:02<00:10, 36851.44it/s] 27%|██▋       | 151771/552076 [00:03<00:10, 38810.96it/s] 28%|██▊       | 155821/552076 [00:03<00:10, 38008.22it/s] 29%|██▉       | 159744/552076 [00:03<00:11, 34678.95it/s] 30%|██▉       | 163354/552076 [00:03<00:11, 35012.78it/s] 30%|███       | 167027/552076 [00:03<00:10, 35082.69it/s] 31%|███       | 170606/552076 [00:03<00:11, 32204.36it/s] 32%|███▏      | 174061/552076 [00:03<00:11, 32059.13it/s] 32%|███▏      | 177334/552076 [00:03<00:12, 29712.35it/s] 33%|███▎      | 180450/552076 [00:03<00:12, 30131.45it/s] 33%|███▎      | 183522/552076 [00:04<00:12, 30276.12it/s] 34%|███▍      | 186591/552076 [00:04<00:13, 27156.92it/s] 34%|███▍      | 189396/552076 [00:04<00:14, 25562.18it/s] 35%|███▍      | 192136/552076 [00:04<00:13, 26086.19it/s] 36%|███▌      | 197777/552076 [00:04<00:11, 30731.62it/s] 36%|███▋      | 201223/552076 [00:04<00:11, 30697.47it/s] 38%|███▊      | 207208/552076 [00:04<00:09, 35931.21it/s] 38%|███▊      | 211330/552076 [00:04<00:09, 35409.38it/s] 39%|███▉      | 215243/552076 [00:05<00:11, 29360.08it/s] 40%|███▉      | 218612/552076 [00:05<00:11, 29663.10it/s] 40%|████      | 221882/552076 [00:05<00:10, 30432.46it/s] 41%|████      | 225221/552076 [00:05<00:10, 31053.83it/s] 42%|████▏     | 231150/552076 [00:05<00:08, 36229.07it/s] 43%|████▎     | 237684/552076 [00:05<00:07, 41275.74it/s] 44%|████▍     | 242362/552076 [00:05<00:08, 37839.03it/s] 45%|████▍     | 247921/552076 [00:05<00:07, 41847.10it/s] 46%|████▌     | 252546/552076 [00:05<00:07, 40366.04it/s] 47%|████▋     | 259089/552076 [00:06<00:06, 45606.12it/s] 48%|████▊     | 264101/552076 [00:06<00:06, 45183.12it/s] 49%|████▉     | 269500/552076 [00:06<00:05, 47507.60it/s] 50%|████▉     | 274505/552076 [00:06<00:05, 46698.54it/s] 51%|█████     | 279356/552076 [00:06<00:06, 41599.72it/s] 51%|█████▏    | 283746/552076 [00:06<00:06, 41658.76it/s] 52%|█████▏    | 289617/552076 [00:06<00:05, 45633.83it/s] 53%|█████▎    | 294407/552076 [00:06<00:05, 43227.66it/s] 54%|█████▍    | 300801/552076 [00:06<00:05, 47879.34it/s] 55%|█████▌    | 306361/552076 [00:07<00:04, 49959.28it/s] 57%|█████▋    | 312471/552076 [00:07<00:04, 52848.86it/s] 58%|█████▊    | 317958/552076 [00:07<00:05, 45290.77it/s] 58%|█████▊    | 322818/552076 [00:07<00:05, 39009.06it/s] 59%|█████▉    | 327104/552076 [00:07<00:07, 29337.59it/s] 60%|██████    | 333114/552076 [00:07<00:06, 34659.76it/s] 61%|██████▏   | 338330/552076 [00:07<00:05, 38538.68it/s] 62%|██████▏   | 342901/552076 [00:07<00:05, 38456.25it/s] 63%|██████▎   | 347323/552076 [00:08<00:05, 40021.12it/s] 64%|██████▍   | 353680/552076 [00:08<00:04, 45024.03it/s] 65%|██████▌   | 358890/552076 [00:08<00:04, 46545.71it/s] 66%|██████▌   | 363882/552076 [00:08<00:04, 46079.57it/s] 67%|██████▋   | 369036/552076 [00:08<00:03, 47582.49it/s] 68%|██████▊   | 374036/552076 [00:08<00:03, 48281.55it/s] 69%|██████▉   | 380477/552076 [00:08<00:03, 52200.96it/s] 70%|██████▉   | 385906/552076 [00:08<00:03, 52808.59it/s] 71%|███████   | 391316/552076 [00:08<00:03, 52041.11it/s] 72%|███████▏  | 396613/552076 [00:09<00:03, 44373.39it/s] 73%|███████▎  | 402943/552076 [00:09<00:03, 48744.78it/s] 74%|███████▍  | 408730/552076 [00:09<00:02, 51163.73it/s] 75%|███████▌  | 414098/552076 [00:09<00:02, 47377.45it/s] 76%|███████▌  | 419209/552076 [00:09<00:02, 48437.59it/s] 77%|███████▋  | 424221/552076 [00:09<00:02, 45786.41it/s] 78%|███████▊  | 428948/552076 [00:09<00:03, 40552.84it/s] 78%|███████▊  | 433217/552076 [00:09<00:03, 38551.65it/s] 80%|███████▉  | 438936/552076 [00:10<00:02, 42557.19it/s] 80%|████████  | 443439/552076 [00:10<00:02, 39283.34it/s] 81%|████████  | 447591/552076 [00:10<00:03, 34037.23it/s] 82%|████████▏ | 451276/552076 [00:10<00:03, 27876.46it/s] 82%|████████▏ | 454585/552076 [00:10<00:03, 28807.61it/s] 83%|████████▎ | 457740/552076 [00:10<00:03, 27097.28it/s] 83%|████████▎ | 460662/552076 [00:10<00:03, 24763.38it/s] 84%|████████▍ | 463432/552076 [00:10<00:03, 25471.99it/s] 84%|████████▍ | 466116/552076 [00:11<00:03, 23710.19it/s] 85%|████████▍ | 468607/552076 [00:11<00:03, 22682.28it/s] 85%|████████▌ | 470969/552076 [00:11<00:03, 21955.94it/s] 86%|████████▌ | 473236/552076 [00:11<00:03, 21459.52it/s] 86%|████████▌ | 475502/552076 [00:11<00:03, 21552.71it/s] 87%|████████▋ | 477925/552076 [00:11<00:03, 22290.90it/s] 87%|████████▋ | 480186/552076 [00:11<00:03, 22021.41it/s] 87%|████████▋ | 482527/552076 [00:11<00:03, 22419.91it/s] 88%|████████▊ | 484787/552076 [00:11<00:03, 21900.96it/s] 88%|████████▊ | 487059/552076 [00:12<00:02, 22114.22it/s] 89%|████████▉ | 491439/552076 [00:12<00:02, 25971.72it/s] 90%|█████████ | 497932/552076 [00:12<00:01, 31672.55it/s] 91%|█████████ | 502305/552076 [00:12<00:01, 34401.21it/s] 92%|█████████▏| 506367/552076 [00:12<00:01, 34410.23it/s] 93%|█████████▎| 512861/552076 [00:12<00:00, 40059.18it/s] 94%|█████████▍| 518481/552076 [00:12<00:00, 43835.08it/s] 95%|█████████▍| 523430/552076 [00:12<00:00, 42537.86it/s] 96%|█████████▌| 528885/552076 [00:12<00:00, 45546.72it/s] 97%|█████████▋| 533782/552076 [00:13<00:00, 41745.52it/s] 98%|█████████▊| 539573/552076 [00:13<00:00, 45479.50it/s] 99%|█████████▊| 544431/552076 [00:13<00:00, 44817.29it/s]100%|█████████▉| 550582/552076 [00:13<00:00, 48787.78it/s]100%|██████████| 552076/552076 [00:13<00:00, 41231.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 1635/552076 [00:00<00:33, 16347.60it/s]  1%|          | 3194/552076 [00:00<00:35, 15481.13it/s]  1%|          | 5318/552076 [00:00<00:32, 16851.60it/s]  1%|▏         | 6915/552076 [00:00<00:34, 15718.68it/s]  2%|▏         | 8364/552076 [00:00<00:35, 15155.48it/s]  2%|▏         | 10469/552076 [00:00<00:32, 16540.73it/s]  2%|▏         | 12413/552076 [00:00<00:32, 16771.75it/s]  3%|▎         | 14029/552076 [00:00<00:33, 16073.67it/s]  3%|▎         | 15957/552076 [00:00<00:31, 16916.92it/s]  3%|▎         | 18300/552076 [00:01<00:29, 17831.85it/s]  4%|▍         | 20866/552076 [00:01<00:27, 19581.65it/s]  4%|▍         | 23576/552076 [00:01<00:24, 21359.30it/s]  5%|▍         | 26271/552076 [00:01<00:23, 22776.07it/s]  5%|▌         | 28632/552076 [00:01<00:23, 22637.98it/s]  6%|▌         | 30981/552076 [00:01<00:23, 22275.24it/s]  6%|▋         | 34760/552076 [00:01<00:20, 25404.04it/s]  7%|▋         | 40934/552076 [00:01<00:16, 30850.93it/s]  8%|▊         | 45764/552076 [00:01<00:14, 34600.91it/s]  9%|▉         | 52292/552076 [00:01<00:12, 40279.69it/s] 10%|█         | 57410/552076 [00:02<00:11, 43027.75it/s] 11%|█▏        | 62315/552076 [00:02<00:12, 39652.95it/s] 12%|█▏        | 67126/552076 [00:02<00:11, 41860.11it/s] 13%|█▎        | 73588/552076 [00:02<00:10, 46805.39it/s] 14%|█▍        | 78712/552076 [00:02<00:09, 47989.63it/s] 15%|█▌        | 84463/552076 [00:02<00:09, 50496.89it/s] 16%|█▋        | 91046/552076 [00:02<00:08, 54289.57it/s] 18%|█▊        | 97390/552076 [00:02<00:08, 56742.91it/s] 19%|█▊        | 103276/552076 [00:02<00:08, 54237.82it/s] 20%|█▉        | 109692/552076 [00:03<00:07, 56875.10it/s] 21%|██        | 116110/552076 [00:03<00:07, 58885.19it/s] 22%|██▏       | 122596/552076 [00:03<00:07, 60558.34it/s] 23%|██▎       | 128752/552076 [00:03<00:07, 57333.22it/s] 24%|██▍       | 135231/552076 [00:03<00:07, 59383.21it/s] 26%|██▌       | 141262/552076 [00:03<00:07, 55045.70it/s] 27%|██▋       | 146895/552076 [00:03<00:07, 53817.38it/s] 28%|██▊       | 152695/552076 [00:03<00:07, 54965.90it/s] 29%|██▊       | 158610/552076 [00:03<00:07, 56155.51it/s] 30%|██▉       | 164283/552076 [00:04<00:08, 47375.20it/s] 31%|███       | 170117/552076 [00:04<00:07, 50203.83it/s] 32%|███▏      | 175376/552076 [00:04<00:07, 48029.85it/s] 33%|███▎      | 180366/552076 [00:04<00:08, 41612.10it/s] 33%|███▎      | 184811/552076 [00:04<00:09, 38471.29it/s] 34%|███▍      | 188904/552076 [00:04<00:09, 36915.08it/s] 35%|███▍      | 192781/552076 [00:04<00:09, 36483.40it/s] 36%|███▌      | 196561/552076 [00:04<00:10, 34332.20it/s] 36%|███▌      | 200112/552076 [00:05<00:10, 34296.49it/s] 37%|███▋      | 203624/552076 [00:05<00:10, 33955.00it/s] 38%|███▊      | 207078/552076 [00:05<00:10, 33504.90it/s] 38%|███▊      | 210471/552076 [00:05<00:10, 33429.14it/s] 39%|███▊      | 213854/552076 [00:05<00:10, 33333.48it/s] 39%|███▉      | 217209/552076 [00:05<00:10, 32967.65it/s] 40%|███▉      | 220667/552076 [00:05<00:09, 33434.70it/s] 41%|████      | 224023/552076 [00:05<00:09, 33440.60it/s] 41%|████      | 227376/552076 [00:05<00:09, 32699.77it/s] 42%|████▏     | 230656/552076 [00:05<00:09, 32251.89it/s] 42%|████▏     | 233890/552076 [00:06<00:10, 30905.89it/s] 43%|████▎     | 237409/552076 [00:06<00:09, 31526.88it/s] 44%|████▎     | 241077/552076 [00:06<00:09, 31236.13it/s] 44%|████▍     | 245062/552076 [00:06<00:09, 32742.55it/s] 45%|████▌     | 248484/552076 [00:06<00:09, 32416.83it/s] 46%|████▌     | 251992/552076 [00:06<00:09, 32436.78it/s] 46%|████▋     | 256173/552076 [00:06<00:08, 34774.43it/s] 48%|████▊     | 262641/552076 [00:06<00:07, 40374.51it/s] 48%|████▊     | 267056/552076 [00:06<00:07, 38630.72it/s] 49%|████▉     | 271199/552076 [00:07<00:07, 37382.00it/s] 50%|████▉     | 275142/552076 [00:07<00:07, 35903.88it/s] 51%|█████     | 278889/552076 [00:07<00:07, 35460.73it/s] 51%|█████     | 282546/552076 [00:07<00:07, 35058.31it/s] 52%|█████▏    | 286200/552076 [00:07<00:07, 35488.77it/s] 52%|█████▏    | 289805/552076 [00:07<00:07, 34640.67it/s] 53%|█████▎    | 293313/552076 [00:07<00:07, 34344.32it/s] 54%|█████▍    | 296779/552076 [00:07<00:07, 33880.13it/s] 54%|█████▍    | 300191/552076 [00:07<00:07, 33413.95it/s] 55%|█████▍    | 303551/552076 [00:08<00:07, 33176.10it/s] 56%|█████▌    | 307069/552076 [00:08<00:07, 32898.87it/s] 56%|█████▌    | 310510/552076 [00:08<00:07, 33337.12it/s] 57%|█████▋    | 313852/552076 [00:08<00:07, 33174.61it/s] 57%|█████▋    | 317176/552076 [00:08<00:07, 33147.19it/s] 58%|█████▊    | 320623/552076 [00:08<00:06, 33532.79it/s] 59%|█████▊    | 324077/552076 [00:08<00:06, 33203.60it/s] 59%|█████▉    | 327699/552076 [00:08<00:06, 34053.65it/s] 60%|█████▉    | 331113/552076 [00:08<00:06, 32283.05it/s] 61%|██████    | 334366/552076 [00:09<00:07, 30114.65it/s] 61%|██████▏   | 338673/552076 [00:09<00:06, 33100.66it/s] 63%|██████▎   | 345345/552076 [00:09<00:05, 38994.46it/s] 64%|██████▎   | 351432/552076 [00:09<00:04, 43706.56it/s] 65%|██████▍   | 356341/552076 [00:09<00:04, 40452.90it/s] 66%|██████▌   | 361758/552076 [00:09<00:04, 43100.65it/s] 66%|██████▋   | 366728/552076 [00:09<00:04, 44888.66it/s] 67%|██████▋   | 371478/552076 [00:09<00:04, 44217.50it/s] 69%|██████▉   | 381672/552076 [00:09<00:03, 52296.59it/s] 70%|███████   | 387815/552076 [00:09<00:03, 54737.83it/s] 71%|███████▏  | 393830/552076 [00:10<00:03, 52509.51it/s] 73%|███████▎  | 401365/552076 [00:10<00:02, 57762.10it/s] 75%|███████▍  | 411914/552076 [00:10<00:02, 66832.89it/s] 76%|███████▋  | 422143/552076 [00:10<00:01, 74588.14it/s] 78%|███████▊  | 432878/552076 [00:10<00:01, 82104.25it/s] 80%|████████  | 443605/552076 [00:10<00:01, 88319.42it/s] 82%|████████▏ | 454794/552076 [00:10<00:01, 94276.93it/s] 84%|████████▍ | 464838/552076 [00:10<00:01, 86597.09it/s] 86%|████████▌ | 475222/552076 [00:10<00:00, 91135.87it/s] 88%|████████▊ | 485793/552076 [00:11<00:00, 95067.54it/s] 90%|████████▉ | 495660/552076 [00:11<00:00, 65700.79it/s] 92%|█████████▏| 507280/552076 [00:11<00:00, 75549.85it/s] 94%|█████████▎| 516403/552076 [00:11<00:00, 73429.99it/s] 95%|█████████▌| 524857/552076 [00:11<00:00, 73261.25it/s] 97%|█████████▋| 537150/552076 [00:11<00:00, 83365.47it/s] 99%|█████████▉| 546510/552076 [00:11<00:00, 76300.43it/s]100%|██████████| 552076/552076 [00:11<00:00, 46043.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6356/552076 [00:00<00:08, 61397.54it/s]  3%|▎         | 14528/552076 [00:00<00:08, 66270.10it/s]  5%|▍         | 25994/552076 [00:00<00:06, 75876.72it/s]  6%|▌         | 33452/552076 [00:00<00:06, 75481.98it/s]  7%|▋         | 39925/552076 [00:00<00:07, 71500.05it/s]  9%|▉         | 48890/552076 [00:00<00:06, 74934.54it/s] 10%|█         | 56561/552076 [00:00<00:07, 70731.60it/s] 11%|█▏        | 63366/552076 [00:00<00:07, 69272.54it/s] 14%|█▎        | 75232/552076 [00:00<00:06, 79155.29it/s] 15%|█▌        | 83514/552076 [00:01<00:05, 79781.57it/s] 17%|█▋        | 95083/552076 [00:01<00:05, 87971.97it/s] 19%|█▉        | 104319/552076 [00:01<00:05, 88596.53it/s] 21%|██        | 115582/552076 [00:01<00:04, 94249.20it/s] 23%|██▎       | 125322/552076 [00:01<00:04, 89466.59it/s] 25%|██▍       | 137233/552076 [00:01<00:04, 96684.29it/s] 27%|██▋       | 149475/552076 [00:01<00:03, 103191.58it/s] 29%|██▉       | 161740/552076 [00:01<00:03, 108346.26it/s] 32%|███▏      | 173982/552076 [00:01<00:03, 112214.44it/s] 34%|███▎      | 186004/552076 [00:01<00:03, 114501.68it/s] 36%|███▌      | 198128/552076 [00:02<00:03, 116442.43it/s] 38%|███▊      | 210319/552076 [00:02<00:02, 118027.84it/s] 40%|████      | 222537/552076 [00:02<00:02, 119243.50it/s] 43%|████▎     | 234826/552076 [00:02<00:02, 120313.54it/s] 45%|████▍     | 246915/552076 [00:02<00:02, 112732.21it/s] 47%|████▋     | 258326/552076 [00:02<00:02, 111916.76it/s] 49%|████▉     | 270740/552076 [00:02<00:02, 115320.95it/s] 51%|█████     | 282367/552076 [00:02<00:02, 105708.89it/s] 53%|█████▎    | 293161/552076 [00:02<00:02, 103949.71it/s] 55%|█████▌    | 303719/552076 [00:03<00:02, 104015.89it/s] 57%|█████▋    | 316115/552076 [00:03<00:02, 109288.71it/s] 59%|█████▉    | 327787/552076 [00:03<00:02, 111414.86it/s] 61%|██████▏   | 339044/552076 [00:03<00:02, 102902.95it/s] 64%|██████▎   | 351401/552076 [00:03<00:01, 108337.30it/s] 67%|██████▋   | 370063/552076 [00:03<00:01, 123933.24it/s] 71%|███████   | 392037/552076 [00:03<00:01, 142582.17it/s] 75%|███████▍  | 412366/552076 [00:03<00:00, 156611.20it/s] 79%|███████▊  | 434296/552076 [00:03<00:00, 171301.56it/s] 83%|████████▎ | 457111/552076 [00:03<00:00, 185139.33it/s] 87%|████████▋ | 478536/552076 [00:04<00:00, 193004.80it/s] 90%|█████████ | 498895/552076 [00:04<00:00, 173385.10it/s] 94%|█████████▍| 519892/552076 [00:04<00:00, 182946.20it/s] 98%|█████████▊| 540927/552076 [00:04<00:00, 190386.68it/s]100%|██████████| 552076/552076 [00:04<00:00, 123756.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21498/552076 [00:00<00:02, 214971.49it/s]  7%|▋         | 39539/552076 [00:00<00:02, 203284.50it/s] 10%|▉         | 53807/552076 [00:00<00:02, 180306.87it/s] 14%|█▍        | 76467/552076 [00:00<00:02, 192077.96it/s] 18%|█▊        | 98765/552076 [00:00<00:02, 200407.94it/s] 22%|██▏       | 121533/552076 [00:00<00:02, 207875.32it/s] 26%|██▌       | 143379/552076 [00:00<00:01, 210938.87it/s] 30%|███       | 166103/552076 [00:00<00:01, 215576.26it/s] 34%|███▍      | 188219/552076 [00:00<00:01, 217219.93it/s] 38%|███▊      | 210943/552076 [00:01<00:01, 220130.76it/s] 42%|████▏     | 233559/552076 [00:01<00:01, 221903.39it/s] 46%|████▋     | 255921/552076 [00:01<00:01, 222413.61it/s] 50%|█████     | 277933/552076 [00:01<00:01, 217841.37it/s] 54%|█████▍    | 300414/552076 [00:01<00:01, 219884.23it/s] 58%|█████▊    | 322810/552076 [00:01<00:01, 221090.43it/s] 63%|██████▎   | 345102/552076 [00:01<00:00, 221632.10it/s] 67%|██████▋   | 367314/552076 [00:01<00:00, 221775.78it/s] 71%|███████   | 390210/552076 [00:01<00:00, 223883.00it/s] 75%|███████▍  | 413192/552076 [00:01<00:00, 225628.85it/s] 79%|███████▉  | 435747/552076 [00:02<00:00, 223974.03it/s] 83%|████████▎ | 458142/552076 [00:02<00:00, 220239.19it/s] 87%|████████▋ | 480178/552076 [00:02<00:00, 220206.37it/s] 91%|█████████ | 502207/552076 [00:02<00:00, 199741.12it/s] 95%|█████████▍| 522552/552076 [00:02<00:00, 198839.62it/s] 99%|█████████▊| 544980/552076 [00:02<00:00, 205843.08it/s]100%|██████████| 552076/552076 [00:02<00:00, 213761.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21529/552076 [00:00<00:02, 215283.02it/s]  8%|▊         | 43008/552076 [00:00<00:02, 215134.48it/s] 12%|█▏        | 64700/552076 [00:00<00:02, 215666.79it/s] 16%|█▌        | 87194/552076 [00:00<00:02, 218366.01it/s] 20%|█▉        | 109725/552076 [00:00<00:02, 220402.68it/s] 24%|██▍       | 131209/552076 [00:00<00:01, 218702.33it/s] 28%|██▊       | 152380/552076 [00:00<00:01, 216555.25it/s] 32%|███▏      | 174873/552076 [00:00<00:01, 219000.45it/s] 36%|███▌      | 196927/552076 [00:00<00:01, 219459.02it/s] 40%|███▉      | 219707/552076 [00:01<00:01, 221893.59it/s] 44%|████▍     | 241722/552076 [00:01<00:01, 221366.41it/s] 48%|████▊     | 264260/552076 [00:01<00:01, 222553.42it/s] 52%|█████▏    | 287586/552076 [00:01<00:01, 225660.03it/s] 56%|█████▋    | 311039/552076 [00:01<00:01, 228248.40it/s] 60%|██████    | 333737/552076 [00:01<00:00, 226667.09it/s] 65%|██████▍   | 356735/552076 [00:01<00:00, 227649.84it/s] 69%|██████▉   | 379718/552076 [00:01<00:00, 228297.49it/s] 73%|███████▎  | 403290/552076 [00:01<00:00, 230474.27it/s] 77%|███████▋  | 426314/552076 [00:01<00:00, 229168.04it/s] 81%|████████▏ | 449788/552076 [00:02<00:00, 230809.61it/s] 86%|████████▌ | 472950/552076 [00:02<00:00, 231050.55it/s] 90%|████████▉ | 496050/552076 [00:02<00:00, 230390.20it/s] 94%|█████████▍| 519086/552076 [00:02<00:00, 227906.95it/s] 98%|█████████▊| 541881/552076 [00:02<00:00, 226752.83it/s]100%|██████████| 552076/552076 [00:02<00:00, 224988.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21006/552076 [00:00<00:02, 210055.69it/s]  7%|▋         | 40459/552076 [00:00<00:02, 205141.90it/s] 11%|█         | 60921/552076 [00:00<00:02, 204982.91it/s] 15%|█▍        | 81242/552076 [00:00<00:02, 204446.97it/s] 18%|█▊        | 101287/552076 [00:00<00:02, 203231.16it/s] 22%|██▏       | 121095/552076 [00:00<00:02, 201656.34it/s] 25%|██▌       | 138866/552076 [00:00<00:02, 193818.64it/s] 29%|██▊       | 158533/552076 [00:00<00:02, 194663.73it/s] 32%|███▏      | 177726/552076 [00:00<00:01, 193835.38it/s] 36%|███▌      | 197095/552076 [00:01<00:01, 193790.00it/s] 39%|███▉      | 216247/552076 [00:01<00:01, 193101.34it/s] 43%|████▎     | 235161/552076 [00:01<00:01, 190510.15it/s] 46%|████▌     | 253943/552076 [00:01<00:01, 189515.21it/s] 49%|████▉     | 273165/552076 [00:01<00:01, 190316.11it/s] 53%|█████▎    | 292067/552076 [00:01<00:01, 188839.74it/s] 56%|█████▋    | 310863/552076 [00:01<00:01, 165142.74it/s] 59%|█████▉    | 327852/552076 [00:01<00:01, 149839.65it/s] 62%|██████▏   | 343441/552076 [00:01<00:01, 140223.77it/s] 65%|██████▍   | 358012/552076 [00:02<00:01, 134468.02it/s] 67%|██████▋   | 371893/552076 [00:02<00:01, 128468.66it/s] 70%|██████▉   | 385101/552076 [00:02<00:01, 124696.03it/s] 72%|███████▏  | 397848/552076 [00:02<00:01, 123656.30it/s] 74%|███████▍  | 410410/552076 [00:02<00:01, 122925.49it/s] 77%|███████▋  | 422841/552076 [00:02<00:01, 119918.84it/s] 79%|███████▉  | 435029/552076 [00:02<00:00, 120498.01it/s] 81%|████████  | 447298/552076 [00:02<00:00, 121144.63it/s] 83%|████████▎ | 459508/552076 [00:02<00:00, 121427.46it/s] 85%|████████▌ | 471868/552076 [00:02<00:00, 122069.64it/s] 88%|████████▊ | 484104/552076 [00:03<00:00, 115195.92it/s] 90%|█████████ | 497125/552076 [00:03<00:00, 119321.01it/s] 92%|█████████▏| 510030/552076 [00:03<00:00, 122081.82it/s] 95%|█████████▍| 522544/552076 [00:03<00:00, 122981.08it/s] 97%|█████████▋| 534908/552076 [00:03<00:00, 122710.94it/s] 99%|█████████▉| 547252/552076 [00:03<00:00, 122927.91it/s]100%|██████████| 552076/552076 [00:03<00:00, 151119.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5107/552076 [00:00<00:11, 46143.78it/s]  3%|▎         | 16408/552076 [00:00<00:09, 56102.18it/s]  5%|▍         | 25591/552076 [00:00<00:08, 63515.11it/s]  7%|▋         | 35962/552076 [00:00<00:07, 71871.40it/s]  8%|▊         | 43138/552076 [00:00<00:07, 68765.35it/s]  9%|▉         | 50035/552076 [00:00<00:07, 67198.59it/s] 10%|█         | 56778/552076 [00:00<00:07, 64340.33it/s] 12%|█▏        | 67606/552076 [00:00<00:06, 73073.40it/s] 14%|█▎        | 75348/552076 [00:00<00:06, 69755.14it/s] 15%|█▍        | 82659/552076 [00:01<00:06, 69264.63it/s] 17%|█▋        | 92921/552076 [00:01<00:05, 76748.12it/s] 18%|█▊        | 101013/552076 [00:01<00:06, 73080.12it/s] 20%|██        | 113030/552076 [00:01<00:05, 82814.95it/s] 23%|██▎       | 125136/552076 [00:01<00:04, 91485.21it/s] 25%|██▍       | 137205/552076 [00:01<00:04, 98644.81it/s] 27%|██▋       | 149334/552076 [00:01<00:03, 104496.04it/s] 29%|██▉       | 161205/552076 [00:01<00:03, 108388.97it/s] 31%|███▏      | 173203/552076 [00:01<00:03, 111623.62it/s] 33%|███▎      | 184697/552076 [00:02<00:04, 73902.05it/s]  35%|███▌      | 194879/552076 [00:02<00:04, 80525.50it/s] 37%|███▋      | 207017/552076 [00:02<00:03, 89569.41it/s] 40%|███▉      | 219322/552076 [00:02<00:03, 97530.15it/s] 42%|████▏     | 231648/552076 [00:02<00:03, 104045.43it/s] 44%|████▍     | 243981/552076 [00:02<00:02, 109165.87it/s] 46%|████▋     | 255621/552076 [00:02<00:02, 110665.86it/s] 49%|████▊     | 267790/552076 [00:02<00:02, 113755.57it/s] 51%|█████     | 279546/552076 [00:02<00:02, 113774.76it/s] 53%|█████▎    | 291190/552076 [00:03<00:02, 95396.69it/s]  55%|█████▍    | 303438/552076 [00:03<00:02, 102173.13it/s] 57%|█████▋    | 314273/552076 [00:03<00:02, 87244.73it/s]  59%|█████▉    | 326525/552076 [00:03<00:02, 95491.44it/s] 61%|██████▏   | 338829/552076 [00:03<00:02, 102367.10it/s] 64%|██████▎   | 350945/552076 [00:03<00:01, 107360.67it/s] 66%|██████▌   | 363357/552076 [00:03<00:01, 111892.07it/s] 68%|██████▊   | 375733/552076 [00:03<00:01, 115204.87it/s] 70%|███████   | 388029/552076 [00:04<00:01, 117425.38it/s] 73%|███████▎  | 400373/552076 [00:04<00:01, 119164.22it/s] 75%|███████▍  | 412639/552076 [00:04<00:01, 120189.86it/s] 77%|███████▋  | 424974/552076 [00:04<00:01, 121118.68it/s] 79%|███████▉  | 437215/552076 [00:04<00:00, 121501.08it/s] 81%|████████▏ | 449553/552076 [00:04<00:00, 122057.72it/s] 84%|████████▎ | 461822/552076 [00:04<00:00, 122246.67it/s] 86%|████████▌ | 474170/552076 [00:04<00:00, 122613.32it/s] 88%|████████▊ | 486521/552076 [00:04<00:00, 122878.98it/s] 90%|█████████ | 498825/552076 [00:04<00:00, 122234.86it/s] 93%|█████████▎| 511129/552076 [00:05<00:00, 122474.54it/s] 95%|█████████▍| 523552/552076 [00:05<00:00, 122993.63it/s] 97%|█████████▋| 535858/552076 [00:05<00:00, 122961.70it/s] 99%|█████████▉| 548159/552076 [00:05<00:00, 120726.97it/s]100%|██████████| 552076/552076 [00:05<00:00, 102968.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10419/552076 [00:00<00:05, 104184.39it/s]  4%|▍         | 22240/552076 [00:00<00:04, 108029.17it/s]  6%|▌         | 33823/552076 [00:00<00:04, 110254.82it/s]  7%|▋         | 41312/552076 [00:00<00:05, 95992.84it/s]  10%|▉         | 52669/552076 [00:00<00:04, 100665.95it/s] 12%|█▏        | 64208/552076 [00:00<00:04, 104671.44it/s] 14%|█▎        | 75223/552076 [00:00<00:04, 106254.53it/s] 15%|█▌        | 85177/552076 [00:00<00:04, 103976.18it/s] 17%|█▋        | 95809/552076 [00:00<00:04, 104666.96it/s] 19%|█▉        | 105956/552076 [00:01<00:04, 97642.52it/s] 21%|██▏       | 117976/552076 [00:01<00:04, 103466.05it/s] 24%|██▎       | 129814/552076 [00:01<00:03, 107528.37it/s] 25%|██▌       | 140675/552076 [00:01<00:03, 107848.86it/s] 27%|██▋       | 151491/552076 [00:01<00:03, 104061.91it/s] 30%|██▉       | 163165/552076 [00:01<00:03, 107564.01it/s] 32%|███▏      | 174983/552076 [00:01<00:03, 110542.14it/s] 34%|███▎      | 186104/552076 [00:01<00:03, 102689.96it/s] 36%|███▌      | 198180/552076 [00:01<00:03, 107515.33it/s] 38%|███▊      | 210454/552076 [00:01<00:03, 111669.11it/s] 40%|████      | 222469/552076 [00:02<00:02, 114083.66it/s] 43%|████▎     | 234665/552076 [00:02<00:02, 116336.79it/s] 45%|████▍     | 247035/552076 [00:02<00:02, 118450.85it/s] 47%|████▋     | 259498/552076 [00:02<00:02, 120237.50it/s] 49%|████▉     | 271748/552076 [00:02<00:02, 120906.60it/s] 51%|█████▏    | 284093/552076 [00:02<00:02, 121656.36it/s] 54%|█████▎    | 296391/552076 [00:02<00:02, 122047.71it/s] 56%|█████▌    | 308676/552076 [00:02<00:01, 122284.54it/s] 58%|█████▊    | 320921/552076 [00:02<00:01, 119374.84it/s] 60%|██████    | 333221/552076 [00:02<00:01, 120437.09it/s] 63%|██████▎   | 345568/552076 [00:03<00:01, 121330.13it/s] 65%|██████▍   | 357718/552076 [00:03<00:01, 119919.56it/s] 67%|██████▋   | 369725/552076 [00:03<00:01, 119592.66it/s] 69%|██████▉   | 382004/552076 [00:03<00:01, 120533.77it/s] 71%|███████▏  | 394245/552076 [00:03<00:01, 121089.66it/s] 74%|███████▎  | 406373/552076 [00:03<00:01, 121145.61it/s] 76%|███████▌  | 418493/552076 [00:03<00:01, 113375.17it/s] 78%|███████▊  | 430566/552076 [00:03<00:01, 115484.86it/s] 80%|████████  | 442198/552076 [00:03<00:00, 113261.91it/s] 82%|████████▏ | 453592/552076 [00:04<00:00, 100194.07it/s] 84%|████████▍ | 464819/552076 [00:04<00:00, 103532.82it/s] 86%|████████▌ | 475428/552076 [00:04<00:00, 86999.79it/s]  88%|████████▊ | 484756/552076 [00:04<00:01, 62819.04it/s] 89%|████████▉ | 492429/552076 [00:04<00:01, 55666.60it/s] 90%|█████████ | 499120/552076 [00:04<00:00, 58007.45it/s] 92%|█████████▏| 505733/552076 [00:04<00:00, 59573.52it/s] 93%|█████████▎| 512469/552076 [00:05<00:00, 60806.05it/s] 94%|█████████▍| 518962/552076 [00:05<00:00, 58793.99it/s] 96%|█████████▌| 530719/552076 [00:05<00:00, 69167.42it/s] 98%|█████████▊| 539283/552076 [00:05<00:00, 73402.60it/s]100%|█████████▉| 551278/552076 [00:05<00:00, 83072.59it/s]100%|██████████| 552076/552076 [00:05<00:00, 100830.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11772/552076 [00:00<00:04, 117714.78it/s]  4%|▍         | 23618/552076 [00:00<00:04, 117934.96it/s]  6%|▋         | 35633/552076 [00:00<00:04, 118590.38it/s]  9%|▊         | 47729/552076 [00:00<00:04, 119288.72it/s] 11%|█         | 60013/552076 [00:00<00:04, 120330.28it/s] 13%|█▎        | 72214/552076 [00:00<00:03, 120829.27it/s] 15%|█▌        | 82915/552076 [00:00<00:05, 93713.04it/s]  17%|█▋        | 92251/552076 [00:00<00:05, 87524.30it/s] 19%|█▊        | 102386/552076 [00:00<00:04, 91258.54it/s] 21%|██        | 116346/552076 [00:01<00:04, 101837.17it/s] 23%|██▎       | 128319/552076 [00:01<00:03, 106616.07it/s] 25%|██▌       | 139354/552076 [00:01<00:04, 94571.63it/s]  27%|██▋       | 150838/552076 [00:01<00:04, 99857.46it/s] 29%|██▉       | 161628/552076 [00:01<00:03, 102140.58it/s] 31%|███       | 172162/552076 [00:01<00:03, 101425.31it/s] 33%|███▎      | 182530/552076 [00:01<00:04, 89303.97it/s]  35%|███▍      | 193079/552076 [00:01<00:03, 92011.47it/s] 37%|███▋      | 202596/552076 [00:02<00:03, 92463.17it/s] 39%|███▉      | 214869/552076 [00:02<00:03, 99850.41it/s] 41%|████      | 225179/552076 [00:02<00:03, 93009.11it/s] 43%|████▎     | 235056/552076 [00:02<00:03, 90350.77it/s] 44%|████▍     | 244333/552076 [00:02<00:03, 83198.23it/s] 46%|████▋     | 256446/552076 [00:02<00:03, 91824.40it/s] 49%|████▊     | 268182/552076 [00:02<00:02, 98234.78it/s] 51%|█████     | 279911/552076 [00:02<00:02, 103267.82it/s] 53%|█████▎    | 290625/552076 [00:02<00:03, 78358.45it/s]  54%|█████▍    | 299629/552076 [00:03<00:03, 67122.35it/s] 56%|█████▌    | 307441/552076 [00:03<00:04, 56708.68it/s] 57%|█████▋    | 314159/552076 [00:03<00:04, 49731.72it/s] 58%|█████▊    | 320021/552076 [00:03<00:05, 46379.33it/s] 59%|█████▉    | 325327/552076 [00:03<00:05, 44650.73it/s] 60%|█████▉    | 330273/552076 [00:03<00:04, 45426.68it/s] 61%|██████    | 335156/552076 [00:04<00:04, 43720.50it/s] 62%|██████▏   | 339963/552076 [00:04<00:04, 43731.14it/s] 62%|██████▏   | 344691/552076 [00:04<00:04, 44738.46it/s] 63%|██████▎   | 350145/552076 [00:04<00:04, 46505.05it/s] 64%|██████▍   | 355326/552076 [00:04<00:04, 47463.19it/s] 65%|██████▌   | 360153/552076 [00:04<00:04, 45154.24it/s] 66%|██████▋   | 365766/552076 [00:04<00:03, 47967.28it/s] 68%|██████▊   | 377296/552076 [00:04<00:03, 58155.66it/s] 70%|██████▉   | 385565/552076 [00:04<00:02, 63105.71it/s] 72%|███████▏  | 395502/552076 [00:04<00:02, 70863.53it/s] 74%|███████▎  | 407135/552076 [00:05<00:01, 80275.58it/s] 76%|███████▌  | 419357/552076 [00:05<00:01, 89488.87it/s] 78%|███████▊  | 429504/552076 [00:05<00:01, 92773.97it/s] 80%|███████▉  | 439887/552076 [00:05<00:01, 95833.77it/s] 82%|████████▏ | 450050/552076 [00:05<00:01, 89320.86it/s] 83%|████████▎ | 459477/552076 [00:05<00:01, 90735.57it/s] 85%|████████▌ | 470712/552076 [00:05<00:00, 96292.37it/s] 87%|████████▋ | 480680/552076 [00:05<00:00, 95900.64it/s] 89%|████████▉ | 490508/552076 [00:05<00:00, 88510.09it/s] 91%|█████████ | 499822/552076 [00:06<00:00, 89849.65it/s] 93%|█████████▎| 511761/552076 [00:06<00:00, 97052.34it/s] 95%|█████████▍| 521773/552076 [00:06<00:00, 92375.75it/s] 96%|█████████▌| 531272/552076 [00:06<00:00, 92459.96it/s] 98%|█████████▊| 543488/552076 [00:06<00:00, 99734.03it/s]100%|██████████| 552076/552076 [00:06<00:00, 84347.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8127/552076 [00:00<00:06, 79579.37it/s]  3%|▎         | 15109/552076 [00:00<00:07, 76376.34it/s]  4%|▍         | 21534/552076 [00:00<00:07, 72282.84it/s]  5%|▌         | 28754/552076 [00:00<00:07, 72054.30it/s]  7%|▋         | 36112/552076 [00:00<00:07, 72504.12it/s]  9%|▊         | 46927/552076 [00:00<00:06, 80360.17it/s] 10%|▉         | 54805/552076 [00:00<00:06, 79879.01it/s] 12%|█▏        | 67217/552076 [00:00<00:05, 89441.96it/s] 14%|█▍        | 79102/552076 [00:00<00:04, 96613.65it/s] 17%|█▋        | 91375/552076 [00:01<00:04, 103199.95it/s] 19%|█▉        | 103753/552076 [00:01<00:04, 108617.03it/s] 21%|██        | 116016/552076 [00:01<00:03, 112471.42it/s] 23%|██▎       | 128356/552076 [00:01<00:03, 115540.92it/s] 25%|██▌       | 140553/552076 [00:01<00:03, 117396.80it/s] 28%|██▊       | 152885/552076 [00:01<00:03, 119113.01it/s] 30%|██▉       | 164893/552076 [00:01<00:03, 116585.31it/s] 32%|███▏      | 177240/552076 [00:01<00:03, 118566.72it/s] 34%|███▍      | 189508/552076 [00:01<00:03, 119226.49it/s] 36%|███▋      | 201477/552076 [00:01<00:02, 118865.46it/s] 39%|███▊      | 213576/552076 [00:02<00:02, 119491.85it/s] 41%|████      | 225745/552076 [00:02<00:02, 120140.23it/s] 43%|████▎     | 237777/552076 [00:02<00:02, 120162.89it/s] 45%|████▌     | 250092/552076 [00:02<00:02, 121043.22it/s] 48%|████▊     | 262428/552076 [00:02<00:02, 121727.38it/s] 50%|████▉     | 274731/552076 [00:02<00:02, 122113.30it/s] 52%|█████▏    | 287225/552076 [00:02<00:02, 122945.49it/s] 54%|█████▍    | 299525/552076 [00:02<00:02, 121762.73it/s] 56%|█████▋    | 311708/552076 [00:02<00:02, 118866.02it/s] 59%|█████▊    | 323615/552076 [00:02<00:02, 101511.21it/s] 61%|██████    | 334221/552076 [00:03<00:02, 84845.08it/s]  63%|██████▎   | 345202/552076 [00:03<00:02, 91054.41it/s] 65%|██████▍   | 356212/552076 [00:03<00:02, 96036.82it/s] 66%|██████▋   | 366361/552076 [00:03<00:02, 77784.19it/s] 68%|██████▊   | 375082/552076 [00:03<00:02, 80151.77it/s] 70%|██████▉   | 384049/552076 [00:03<00:02, 82787.46it/s] 72%|███████▏  | 395283/552076 [00:03<00:01, 89879.24it/s] 74%|███████▎  | 407123/552076 [00:03<00:01, 96880.02it/s] 76%|███████▌  | 417334/552076 [00:04<00:01, 92098.64it/s] 77%|███████▋  | 426960/552076 [00:04<00:01, 78541.03it/s] 79%|███████▉  | 435452/552076 [00:04<00:01, 79113.58it/s] 80%|████████  | 443811/552076 [00:04<00:01, 71039.70it/s] 82%|████████▏ | 451384/552076 [00:04<00:01, 71404.85it/s] 84%|████████▍ | 463381/552076 [00:04<00:01, 81275.11it/s] 86%|████████▌ | 472209/552076 [00:04<00:01, 73934.84it/s] 87%|████████▋ | 480221/552076 [00:04<00:00, 73331.64it/s] 88%|████████▊ | 487988/552076 [00:05<00:00, 72567.42it/s] 91%|█████████ | 500752/552076 [00:05<00:00, 83356.02it/s] 92%|█████████▏| 509875/552076 [00:05<00:00, 84252.39it/s] 95%|█████████▍| 522093/552076 [00:05<00:00, 92903.37it/s] 97%|█████████▋| 534371/552076 [00:05<00:00, 100217.58it/s] 99%|█████████▊| 545020/552076 [00:05<00:00, 99779.98it/s] 100%|██████████| 552076/552076 [00:05<00:00, 96996.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3083/552076 [00:00<00:17, 30828.41it/s]  2%|▏         | 9663/552076 [00:00<00:14, 36675.63it/s]  3%|▎         | 17755/552076 [00:00<00:12, 43871.51it/s]  5%|▌         | 28567/552076 [00:00<00:09, 53389.19it/s]  7%|▋         | 40510/552076 [00:00<00:07, 64007.34it/s]  9%|▉         | 48711/552076 [00:00<00:07, 68518.39it/s] 11%|█         | 60726/552076 [00:00<00:06, 78657.92it/s] 13%|█▎        | 72689/552076 [00:00<00:05, 87664.78it/s] 15%|█▌        | 84826/552076 [00:00<00:04, 95631.06it/s] 18%|█▊        | 97120/552076 [00:01<00:04, 102456.90it/s] 20%|█▉        | 108277/552076 [00:01<00:04, 97789.15it/s] 22%|██▏       | 120069/552076 [00:01<00:04, 103067.33it/s] 24%|██▎       | 131013/552076 [00:01<00:04, 104899.20it/s] 26%|██▌       | 141899/552076 [00:01<00:04, 97010.80it/s]  28%|██▊       | 154279/552076 [00:01<00:03, 103744.78it/s] 30%|███       | 166540/552076 [00:01<00:03, 108763.11it/s] 32%|███▏      | 178812/552076 [00:01<00:03, 112604.50it/s] 34%|███▍      | 190351/552076 [00:01<00:03, 105137.30it/s] 37%|███▋      | 202404/552076 [00:01<00:03, 109324.53it/s] 39%|███▉      | 214419/552076 [00:02<00:03, 112361.53it/s] 41%|████      | 226467/552076 [00:02<00:02, 114679.07it/s] 43%|████▎     | 238701/552076 [00:02<00:02, 116873.59it/s] 45%|████▌     | 251028/552076 [00:02<00:02, 118719.78it/s] 48%|████▊     | 263326/552076 [00:02<00:02, 119966.15it/s] 50%|████▉     | 275634/552076 [00:02<00:02, 120882.48it/s] 52%|█████▏    | 288068/552076 [00:02<00:02, 121896.50it/s] 54%|█████▍    | 300358/552076 [00:02<00:02, 122194.47it/s] 57%|█████▋    | 313021/552076 [00:02<00:01, 123489.35it/s] 59%|█████▉    | 325391/552076 [00:02<00:01, 122361.47it/s] 61%|██████    | 337648/552076 [00:03<00:01, 122422.68it/s] 63%|██████▎   | 349984/552076 [00:03<00:01, 122701.89it/s] 66%|██████▌   | 362272/552076 [00:03<00:01, 122753.63it/s] 68%|██████▊   | 374554/552076 [00:03<00:01, 122548.56it/s] 70%|███████   | 386814/552076 [00:03<00:01, 122325.50it/s] 72%|███████▏  | 399183/552076 [00:03<00:01, 122728.84it/s] 75%|███████▍  | 411459/552076 [00:03<00:01, 122716.98it/s] 77%|███████▋  | 423843/552076 [00:03<00:01, 123049.59it/s] 79%|███████▉  | 436150/552076 [00:03<00:00, 119196.82it/s] 81%|████████  | 448397/552076 [00:04<00:00, 120159.19it/s] 83%|████████▎ | 460727/552076 [00:04<00:00, 121083.86it/s] 86%|████████▌ | 473104/552076 [00:04<00:00, 121875.61it/s] 88%|████████▊ | 485555/552076 [00:04<00:00, 122652.45it/s] 90%|█████████ | 497831/552076 [00:04<00:00, 122563.65it/s] 92%|█████████▏| 510242/552076 [00:04<00:00, 123018.47it/s] 95%|█████████▍| 522599/552076 [00:04<00:00, 123180.99it/s] 97%|█████████▋| 535020/552076 [00:04<00:00, 123487.32it/s] 99%|█████████▉| 547446/552076 [00:04<00:00, 123717.79it/s]100%|██████████| 552076/552076 [00:04<00:00, 114099.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9432/552076 [00:00<00:05, 94319.87it/s]  4%|▍         | 21568/552076 [00:00<00:05, 101074.59it/s]  6%|▋         | 34794/552076 [00:00<00:04, 108767.70it/s]  9%|▊         | 48242/552076 [00:00<00:04, 115384.51it/s] 11%|█         | 61532/552076 [00:00<00:04, 120133.84it/s] 14%|█▎        | 74914/552076 [00:00<00:03, 123934.09it/s] 16%|█▌        | 88023/552076 [00:00<00:03, 125996.20it/s] 18%|█▊        | 101390/552076 [00:00<00:03, 128203.89it/s] 21%|██        | 114809/552076 [00:00<00:03, 129941.21it/s] 23%|██▎       | 128768/552076 [00:01<00:03, 132691.51it/s] 26%|██▌       | 141847/552076 [00:01<00:03, 127480.31it/s] 28%|██▊       | 154960/552076 [00:01<00:03, 128551.31it/s] 30%|███       | 167755/552076 [00:01<00:03, 125882.65it/s] 33%|███▎      | 180627/552076 [00:01<00:02, 126720.22it/s] 35%|███▌      | 193280/552076 [00:01<00:02, 125856.07it/s] 37%|███▋      | 205854/552076 [00:01<00:02, 125298.44it/s] 40%|███▉      | 218376/552076 [00:01<00:02, 125077.31it/s] 42%|████▏     | 230879/552076 [00:01<00:02, 124876.87it/s] 44%|████▍     | 243483/552076 [00:01<00:02, 125221.90it/s] 46%|████▋     | 256538/552076 [00:02<00:02, 126772.72it/s] 49%|████▉     | 269890/552076 [00:02<00:02, 128722.02it/s] 51%|█████▏    | 283332/552076 [00:02<00:02, 130378.35it/s] 54%|█████▍    | 296819/552076 [00:02<00:01, 131693.51it/s] 56%|█████▌    | 310309/552076 [00:02<00:01, 132636.76it/s] 59%|█████▊    | 323902/552076 [00:02<00:01, 133605.17it/s] 61%|██████    | 337345/552076 [00:02<00:01, 133849.30it/s] 64%|██████▎   | 350941/552076 [00:02<00:01, 134472.97it/s] 66%|██████▌   | 364394/552076 [00:02<00:01, 134404.39it/s] 68%|██████▊   | 377838/552076 [00:03<00:01, 91103.19it/s]  70%|███████   | 388809/552076 [00:03<00:01, 91576.69it/s] 72%|███████▏  | 399270/552076 [00:03<00:01, 87543.18it/s] 74%|███████▍  | 408975/552076 [00:03<00:01, 76748.17it/s] 76%|███████▌  | 418282/552076 [00:03<00:01, 81009.30it/s] 78%|███████▊  | 429909/552076 [00:03<00:01, 89117.12it/s] 80%|███████▉  | 439557/552076 [00:03<00:01, 89180.16it/s] 82%|████████▏ | 450249/552076 [00:03<00:01, 93851.12it/s] 84%|████████▍ | 462504/552076 [00:04<00:00, 100942.69it/s] 86%|████████▌ | 475427/552076 [00:04<00:00, 108036.78it/s] 88%|████████▊ | 487760/552076 [00:04<00:00, 112208.81it/s] 90%|█████████ | 499340/552076 [00:04<00:00, 109007.89it/s] 92%|█████████▏| 510513/552076 [00:04<00:00, 101204.57it/s] 94%|█████████▍| 520936/552076 [00:04<00:00, 97416.48it/s]  96%|█████████▋| 531930/552076 [00:04<00:00, 100862.39it/s] 98%|█████████▊| 542933/552076 [00:04<00:00, 103447.42it/s]100%|██████████| 552076/552076 [00:04<00:00, 113978.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11896/552076 [00:00<00:04, 118950.47it/s]  4%|▍         | 23825/552076 [00:00<00:04, 119051.23it/s]  6%|▋         | 35883/552076 [00:00<00:04, 119505.13it/s]  9%|▊         | 47988/552076 [00:00<00:04, 119961.66it/s] 11%|█         | 60118/552076 [00:00<00:04, 120359.66it/s] 13%|█▎        | 72228/552076 [00:00<00:03, 120580.41it/s] 15%|█▌        | 84405/552076 [00:00<00:03, 120931.78it/s] 17%|█▋        | 96604/552076 [00:00<00:03, 121246.23it/s] 20%|█▉        | 109033/552076 [00:00<00:03, 122143.20it/s] 22%|██▏       | 120770/552076 [00:01<00:03, 120353.71it/s] 24%|██▍       | 133029/552076 [00:01<00:03, 121013.03it/s] 26%|██▋       | 145291/552076 [00:01<00:03, 121488.39it/s] 29%|██▊       | 157600/552076 [00:01<00:03, 121962.70it/s] 31%|███       | 169736/552076 [00:01<00:03, 121780.42it/s] 33%|███▎      | 181975/552076 [00:01<00:03, 121961.04it/s] 35%|███▌      | 194117/552076 [00:01<00:03, 112955.27it/s] 37%|███▋      | 206390/552076 [00:01<00:02, 115719.68it/s] 40%|███▉      | 218751/552076 [00:01<00:02, 117977.93it/s] 42%|████▏     | 230958/552076 [00:01<00:02, 119174.57it/s] 44%|████▍     | 243211/552076 [00:02<00:02, 120158.91it/s] 46%|████▋     | 255574/552076 [00:02<00:02, 121176.74it/s] 48%|████▊     | 267721/552076 [00:02<00:02, 120887.91it/s] 51%|█████     | 279916/552076 [00:02<00:02, 121203.50it/s] 53%|█████▎    | 292153/552076 [00:02<00:02, 121550.71it/s] 55%|█████▌    | 304509/552076 [00:02<00:02, 122144.48it/s] 57%|█████▋    | 316732/552076 [00:02<00:02, 114229.39it/s] 60%|█████▉    | 329004/552076 [00:02<00:01, 116649.75it/s] 62%|██████▏   | 340759/552076 [00:02<00:02, 99708.20it/s]  64%|██████▍   | 352354/552076 [00:03<00:01, 103911.91it/s] 66%|██████▌   | 363135/552076 [00:03<00:01, 101266.82it/s] 68%|██████▊   | 374555/552076 [00:03<00:01, 104828.13it/s] 70%|███████   | 386640/552076 [00:03<00:01, 109169.40it/s] 72%|███████▏  | 398753/552076 [00:03<00:01, 112500.53it/s] 74%|███████▍  | 410176/552076 [00:03<00:01, 112988.05it/s] 76%|███████▋  | 421764/552076 [00:03<00:01, 113839.92it/s] 79%|███████▊  | 433939/552076 [00:03<00:01, 116101.72it/s] 81%|████████  | 445756/552076 [00:03<00:00, 116139.61it/s] 83%|████████▎ | 457955/552076 [00:03<00:00, 117833.60it/s] 85%|████████▌ | 470981/552076 [00:04<00:00, 121303.66it/s] 88%|████████▊ | 483187/552076 [00:04<00:00, 121527.19it/s] 90%|████████▉ | 495378/552076 [00:04<00:00, 120169.35it/s] 92%|█████████▏| 507837/552076 [00:04<00:00, 121462.12it/s] 94%|█████████▍| 520148/552076 [00:04<00:00, 121948.93it/s] 96%|█████████▋| 532361/552076 [00:04<00:00, 121923.60it/s] 99%|█████████▊| 544755/552076 [00:04<00:00, 122520.86it/s]100%|██████████| 552076/552076 [00:04<00:00, 117623.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11551/552076 [00:00<00:04, 115501.02it/s]  4%|▍         | 23384/552076 [00:00<00:04, 116333.64it/s]  6%|▋         | 35327/552076 [00:00<00:04, 117244.69it/s] 10%|▉         | 53441/552076 [00:00<00:03, 131119.22it/s] 13%|█▎        | 72833/552076 [00:00<00:03, 145228.45it/s] 17%|█▋        | 92256/552076 [00:00<00:02, 157118.81it/s] 20%|██        | 111751/552076 [00:00<00:02, 166830.61it/s] 24%|██▎       | 130920/552076 [00:00<00:02, 173583.26it/s] 27%|██▋       | 149272/552076 [00:00<00:02, 176447.54it/s] 30%|███       | 166891/552076 [00:01<00:02, 152205.90it/s] 33%|███▎      | 182682/552076 [00:01<00:02, 137161.08it/s] 36%|███▌      | 199937/552076 [00:01<00:02, 146153.32it/s] 40%|███▉      | 218389/552076 [00:01<00:02, 155876.46it/s] 43%|████▎     | 236850/552076 [00:01<00:01, 163510.46it/s] 46%|████▌     | 253738/552076 [00:01<00:01, 161053.87it/s] 49%|████▉     | 270228/552076 [00:01<00:01, 155846.27it/s] 52%|█████▏    | 288966/552076 [00:01<00:01, 164124.12it/s] 55%|█████▌    | 306166/552076 [00:01<00:01, 166404.62it/s] 59%|█████▊    | 323046/552076 [00:02<00:01, 139601.41it/s] 62%|██████▏   | 342792/552076 [00:02<00:01, 153055.18it/s] 65%|██████▌   | 361561/552076 [00:02<00:01, 162024.75it/s] 69%|██████▉   | 381432/552076 [00:02<00:00, 171524.49it/s] 72%|███████▏  | 399335/552076 [00:02<00:00, 162376.37it/s] 75%|███████▌  | 416199/552076 [00:02<00:01, 134095.27it/s] 78%|███████▊  | 430865/552076 [00:02<00:00, 125325.92it/s] 80%|████████  | 444393/552076 [00:02<00:00, 110145.99it/s] 83%|████████▎ | 456773/552076 [00:03<00:00, 113914.11it/s] 85%|████████▍ | 468919/552076 [00:03<00:00, 115247.35it/s] 87%|████████▋ | 480976/552076 [00:03<00:00, 115714.55it/s] 89%|████████▉ | 493287/552076 [00:03<00:00, 117838.05it/s] 92%|█████████▏| 505537/552076 [00:03<00:00, 119197.49it/s] 94%|█████████▍| 517775/552076 [00:03<00:00, 120134.25it/s] 96%|█████████▌| 530078/552076 [00:03<00:00, 120987.49it/s] 98%|█████████▊| 542274/552076 [00:03<00:00, 119741.16it/s]100%|██████████| 552076/552076 [00:03<00:00, 142755.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11496/552076 [00:00<00:04, 114953.81it/s]  4%|▍         | 23421/552076 [00:00<00:04, 116208.30it/s]  6%|▌         | 32159/552076 [00:00<00:05, 102347.88it/s]  8%|▊         | 44160/552076 [00:00<00:04, 107074.30it/s] 10%|█         | 56310/552076 [00:00<00:04, 111028.28it/s] 12%|█▏        | 68010/552076 [00:00<00:04, 112752.18it/s] 15%|█▍        | 80176/552076 [00:00<00:04, 115283.73it/s] 17%|█▋        | 92373/552076 [00:00<00:03, 117209.29it/s] 19%|█▉        | 104436/552076 [00:00<00:03, 118212.26it/s] 21%|██        | 116710/552076 [00:01<00:03, 119533.48it/s] 23%|██▎       | 129005/552076 [00:01<00:03, 120537.86it/s] 26%|██▌       | 140871/552076 [00:01<00:03, 119482.74it/s] 28%|██▊       | 152690/552076 [00:01<00:03, 108267.80it/s] 30%|██▉       | 163628/552076 [00:01<00:03, 103835.16it/s] 32%|███▏      | 174128/552076 [00:01<00:04, 79935.63it/s]  33%|███▎      | 183038/552076 [00:01<00:05, 73663.67it/s] 35%|███▍      | 192443/552076 [00:01<00:04, 78786.92it/s] 36%|███▋      | 200938/552076 [00:02<00:04, 77649.34it/s] 38%|███▊      | 209139/552076 [00:02<00:04, 72719.25it/s] 40%|████      | 221361/552076 [00:02<00:03, 82776.60it/s] 42%|████▏     | 231588/552076 [00:02<00:03, 87796.18it/s] 44%|████▎     | 240967/552076 [00:02<00:03, 86411.38it/s] 45%|████▌     | 250033/552076 [00:02<00:03, 79268.29it/s] 47%|████▋     | 258373/552076 [00:02<00:04, 70096.73it/s] 49%|████▉     | 270473/552076 [00:02<00:03, 80220.79it/s] 51%|█████     | 282649/552076 [00:02<00:03, 89367.04it/s] 53%|█████▎    | 292515/552076 [00:03<00:03, 77281.01it/s] 55%|█████▌    | 304586/552076 [00:03<00:02, 86631.01it/s] 57%|█████▋    | 316315/552076 [00:03<00:02, 94001.22it/s] 59%|█████▉    | 328449/552076 [00:03<00:02, 100813.19it/s] 61%|██████▏   | 339300/552076 [00:03<00:02, 85083.04it/s]  63%|██████▎   | 348767/552076 [00:03<00:02, 74023.58it/s] 65%|██████▌   | 360223/552076 [00:03<00:02, 82813.23it/s] 67%|██████▋   | 369491/552076 [00:04<00:02, 72452.37it/s] 69%|██████▉   | 381697/552076 [00:04<00:02, 82512.73it/s] 71%|███████▏  | 393431/552076 [00:04<00:01, 90577.04it/s] 73%|███████▎  | 405654/552076 [00:04<00:01, 98205.02it/s] 76%|███████▌  | 418008/552076 [00:04<00:01, 104642.63it/s] 78%|███████▊  | 430280/552076 [00:04<00:01, 109479.61it/s] 80%|████████  | 442530/552076 [00:04<00:00, 113085.04it/s] 82%|████████▏ | 454837/552076 [00:04<00:00, 115905.26it/s] 85%|████████▍ | 467048/552076 [00:04<00:00, 117698.75it/s] 87%|████████▋ | 479312/552076 [00:04<00:00, 119137.51it/s] 89%|████████▉ | 491394/552076 [00:05<00:00, 118421.54it/s] 91%|█████████ | 503717/552076 [00:05<00:00, 119823.07it/s] 93%|█████████▎| 516049/552076 [00:05<00:00, 120849.23it/s] 96%|█████████▌| 528443/552076 [00:05<00:00, 121759.16it/s] 98%|█████████▊| 540672/552076 [00:05<00:00, 121916.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 100056.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7159/552076 [00:00<00:07, 71584.09it/s]  3%|▎         | 19200/552076 [00:00<00:06, 81497.20it/s]  6%|▌         | 30899/552076 [00:00<00:05, 89656.94it/s]  8%|▊         | 43116/552076 [00:00<00:05, 97436.10it/s] 10%|█         | 55412/552076 [00:00<00:04, 103906.47it/s] 12%|█▏        | 67797/552076 [00:00<00:04, 109178.84it/s] 15%|█▍        | 80123/552076 [00:00<00:04, 113052.30it/s] 17%|█▋        | 92531/552076 [00:00<00:03, 116147.09it/s] 19%|█▉        | 104900/552076 [00:00<00:03, 118309.82it/s] 21%|██        | 117262/552076 [00:01<00:03, 119853.55it/s] 23%|██▎       | 129188/552076 [00:01<00:03, 118520.45it/s] 26%|██▌       | 141471/552076 [00:01<00:03, 119780.59it/s] 28%|██▊       | 153616/552076 [00:01<00:03, 120275.33it/s] 30%|███       | 166079/552076 [00:01<00:03, 121546.59it/s] 32%|███▏      | 178489/552076 [00:01<00:03, 122298.18it/s] 35%|███▍      | 190896/552076 [00:01<00:02, 122822.34it/s] 37%|███▋      | 203176/552076 [00:01<00:02, 122514.80it/s] 39%|███▉      | 215525/552076 [00:01<00:02, 122803.50it/s] 41%|████▏     | 227805/552076 [00:01<00:02, 120452.58it/s] 43%|████▎     | 239860/552076 [00:02<00:02, 115543.71it/s] 46%|████▌     | 251464/552076 [00:02<00:02, 109266.42it/s] 48%|████▊     | 263757/552076 [00:02<00:02, 113034.63it/s] 50%|████▉     | 275951/552076 [00:02<00:02, 115564.68it/s] 52%|█████▏    | 288075/552076 [00:02<00:02, 117208.70it/s] 54%|█████▍    | 300450/552076 [00:02<00:02, 119097.17it/s] 57%|█████▋    | 312816/552076 [00:02<00:01, 120428.04it/s] 59%|█████▉    | 325145/552076 [00:02<00:01, 121270.91it/s] 61%|██████    | 337303/552076 [00:02<00:01, 119970.72it/s] 63%|██████▎   | 349655/552076 [00:02<00:01, 121013.68it/s] 66%|██████▌   | 362016/552076 [00:03<00:01, 121780.31it/s] 68%|██████▊   | 374345/552076 [00:03<00:01, 122226.41it/s] 70%|███████   | 386706/552076 [00:03<00:01, 122636.17it/s] 72%|███████▏  | 399128/552076 [00:03<00:01, 123106.14it/s] 75%|███████▍  | 411445/552076 [00:03<00:01, 119853.16it/s] 77%|███████▋  | 423853/552076 [00:03<00:01, 121089.68it/s] 79%|███████▉  | 435982/552076 [00:03<00:00, 120129.21it/s] 81%|████████  | 448344/552076 [00:03<00:00, 121153.31it/s] 83%|████████▎ | 460789/552076 [00:03<00:00, 122121.81it/s] 86%|████████▌ | 473159/552076 [00:03<00:00, 122588.71it/s] 88%|████████▊ | 485426/552076 [00:04<00:00, 122350.53it/s] 90%|█████████ | 497757/552076 [00:04<00:00, 122634.13it/s] 92%|█████████▏| 510025/552076 [00:04<00:00, 115391.96it/s] 94%|█████████▍| 521655/552076 [00:04<00:00, 101804.35it/s] 97%|█████████▋| 533011/552076 [00:04<00:00, 105065.66it/s] 98%|█████████▊| 543794/552076 [00:04<00:00, 85387.82it/s] 100%|██████████| 552076/552076 [00:04<00:00, 113805.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9808/552076 [00:00<00:05, 98077.29it/s]  4%|▍         | 21265/552076 [00:00<00:05, 102502.08it/s]  6%|▌         | 30692/552076 [00:00<00:05, 97913.31it/s]   7%|▋         | 37200/552076 [00:00<00:06, 80388.93it/s]  8%|▊         | 44044/552076 [00:00<00:06, 75234.57it/s]  9%|▉         | 51595/552076 [00:00<00:06, 75315.45it/s] 11%|█         | 60962/552076 [00:00<00:06, 80017.53it/s] 13%|█▎        | 70313/552076 [00:00<00:05, 83637.37it/s] 15%|█▍        | 82154/552076 [00:00<00:05, 91715.73it/s] 17%|█▋        | 94031/552076 [00:01<00:04, 98442.20it/s] 19%|█▉        | 105448/552076 [00:01<00:04, 102685.90it/s] 21%|██▏       | 117599/552076 [00:01<00:04, 107689.06it/s] 24%|██▎       | 129855/552076 [00:01<00:03, 111756.41it/s] 26%|██▌       | 142378/552076 [00:01<00:03, 115482.19it/s] 28%|██▊       | 154761/552076 [00:01<00:03, 117865.47it/s] 30%|███       | 166989/552076 [00:01<00:03, 119153.28it/s] 32%|███▏      | 179338/552076 [00:01<00:03, 120419.99it/s] 35%|███▍      | 191598/552076 [00:01<00:02, 121064.22it/s] 37%|███▋      | 204025/552076 [00:01<00:02, 122008.32it/s] 39%|███▉      | 216258/552076 [00:02<00:02, 114331.32it/s] 41%|████▏     | 228570/552076 [00:02<00:02, 116832.45it/s] 44%|████▎     | 240354/552076 [00:02<00:02, 117132.85it/s] 46%|████▌     | 252693/552076 [00:02<00:02, 118939.41it/s] 48%|████▊     | 265037/552076 [00:02<00:02, 120252.52it/s] 50%|█████     | 277305/552076 [00:02<00:02, 120969.80it/s] 52%|█████▏    | 289561/552076 [00:02<00:02, 121441.60it/s] 55%|█████▍    | 301813/552076 [00:02<00:02, 121763.07it/s] 57%|█████▋    | 314045/552076 [00:02<00:01, 121927.74it/s] 59%|█████▉    | 326424/552076 [00:02<00:01, 122477.94it/s] 61%|██████▏   | 338731/552076 [00:03<00:01, 122653.25it/s] 64%|██████▎   | 351080/552076 [00:03<00:01, 122900.84it/s] 66%|██████▌   | 363375/552076 [00:03<00:01, 122885.48it/s] 68%|██████▊   | 375667/552076 [00:03<00:01, 122847.46it/s] 70%|███████   | 387954/552076 [00:03<00:01, 122758.56it/s] 73%|███████▎  | 400267/552076 [00:03<00:01, 122868.13it/s] 75%|███████▍  | 412555/552076 [00:03<00:01, 122497.28it/s] 77%|███████▋  | 424806/552076 [00:03<00:01, 121201.22it/s] 79%|███████▉  | 436930/552076 [00:03<00:00, 120536.00it/s] 81%|████████▏ | 448988/552076 [00:03<00:00, 120488.75it/s] 84%|████████▎ | 461285/552076 [00:04<00:00, 121221.55it/s] 86%|████████▌ | 473410/552076 [00:04<00:00, 121202.30it/s] 88%|████████▊ | 485561/552076 [00:04<00:00, 121294.39it/s] 90%|█████████ | 497692/552076 [00:04<00:00, 120559.83it/s] 92%|█████████▏| 509820/552076 [00:04<00:00, 120772.69it/s] 95%|█████████▍| 521899/552076 [00:04<00:00, 120569.50it/s] 97%|█████████▋| 534008/552076 [00:04<00:00, 120724.10it/s] 99%|█████████▉| 546218/552076 [00:04<00:00, 121132.09it/s]100%|██████████| 552076/552076 [00:04<00:00, 114852.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7338/552076 [00:00<00:08, 67109.01it/s]  3%|▎         | 17572/552076 [00:00<00:07, 74837.47it/s]  5%|▍         | 24913/552076 [00:00<00:07, 74402.16it/s]  7%|▋         | 36937/552076 [00:00<00:06, 84008.55it/s]  9%|▉         | 48805/552076 [00:00<00:05, 92077.61it/s] 11%|█         | 61097/552076 [00:00<00:04, 99572.39it/s] 13%|█▎        | 73273/552076 [00:00<00:04, 105329.57it/s] 16%|█▌        | 85680/552076 [00:00<00:04, 110328.79it/s] 18%|█▊        | 98024/552076 [00:00<00:03, 113958.15it/s] 20%|██        | 110430/552076 [00:01<00:03, 116810.10it/s] 22%|██▏       | 122169/552076 [00:01<00:03, 113071.42it/s] 24%|██▍       | 133543/552076 [00:01<00:03, 108550.28it/s] 26%|██▌       | 144483/552076 [00:01<00:03, 107592.11it/s] 28%|██▊       | 156849/552076 [00:01<00:03, 111955.05it/s] 31%|███       | 169295/552076 [00:01<00:03, 115434.14it/s] 33%|███▎      | 181677/552076 [00:01<00:03, 117825.78it/s] 35%|███▌      | 193995/552076 [00:01<00:02, 119379.99it/s] 37%|███▋      | 205991/552076 [00:01<00:02, 118530.33it/s] 40%|███▉      | 218211/552076 [00:01<00:02, 119607.74it/s] 42%|████▏     | 230204/552076 [00:02<00:02, 112634.09it/s] 44%|████▍     | 241573/552076 [00:02<00:02, 109369.26it/s] 46%|████▌     | 253842/552076 [00:02<00:02, 113051.42it/s] 48%|████▊     | 266251/552076 [00:02<00:02, 116150.08it/s] 50%|█████     | 277956/552076 [00:02<00:02, 99049.20it/s]  53%|█████▎    | 290154/552076 [00:02<00:02, 104968.92it/s] 55%|█████▍    | 301330/552076 [00:02<00:02, 106915.95it/s] 57%|█████▋    | 313442/552076 [00:02<00:02, 110812.24it/s] 59%|█████▉    | 325710/552076 [00:02<00:01, 114121.72it/s] 61%|██████    | 338018/552076 [00:03<00:01, 116667.91it/s] 64%|██████▎   | 350837/552076 [00:03<00:01, 119900.34it/s] 66%|██████▌   | 363435/552076 [00:03<00:01, 121661.25it/s] 68%|██████▊   | 375867/552076 [00:03<00:01, 122444.73it/s] 70%|███████   | 388241/552076 [00:03<00:01, 122829.27it/s] 73%|███████▎  | 400574/552076 [00:03<00:01, 120448.13it/s] 75%|███████▍  | 412671/552076 [00:03<00:01, 120602.45it/s] 77%|███████▋  | 424889/552076 [00:03<00:01, 121070.34it/s] 79%|███████▉  | 437019/552076 [00:03<00:00, 119353.93it/s] 81%|████████▏ | 449293/552076 [00:03<00:00, 120349.25it/s] 84%|████████▎ | 461715/552076 [00:04<00:00, 121482.90it/s] 86%|████████▌ | 474314/552076 [00:04<00:00, 122800.67it/s] 88%|████████▊ | 486906/552076 [00:04<00:00, 123719.46it/s] 90%|█████████ | 499290/552076 [00:04<00:00, 123381.80it/s] 93%|█████████▎| 511690/552076 [00:04<00:00, 123565.76it/s] 95%|█████████▍| 524053/552076 [00:04<00:00, 123453.45it/s] 97%|█████████▋| 536437/552076 [00:04<00:00, 123566.29it/s] 99%|█████████▉| 548906/552076 [00:04<00:00, 123899.72it/s]100%|██████████| 552076/552076 [00:04<00:00, 115690.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12534/552076 [00:00<00:04, 125338.33it/s]  4%|▍         | 24595/552076 [00:00<00:04, 123878.39it/s]  7%|▋         | 36331/552076 [00:00<00:04, 121846.59it/s]  9%|▉         | 49175/552076 [00:00<00:04, 123751.69it/s] 11%|█         | 61936/552076 [00:00<00:03, 124881.78it/s] 13%|█▎        | 74498/552076 [00:00<00:03, 125101.75it/s] 16%|█▌        | 87245/552076 [00:00<00:03, 125801.64it/s] 18%|█▊        | 100100/552076 [00:00<00:03, 126612.78it/s] 20%|██        | 112101/552076 [00:00<00:03, 124555.36it/s] 22%|██▏       | 124063/552076 [00:01<00:03, 118803.40it/s] 25%|██▍       | 136173/552076 [00:01<00:03, 113257.57it/s] 27%|██▋       | 147351/552076 [00:01<00:03, 102406.34it/s] 29%|██▉       | 159145/552076 [00:01<00:03, 106618.12it/s] 31%|███       | 171938/552076 [00:01<00:03, 112226.49it/s] 33%|███▎      | 184135/552076 [00:01<00:03, 114979.70it/s] 36%|███▌      | 196043/552076 [00:01<00:03, 116178.16it/s] 38%|███▊      | 207752/552076 [00:01<00:03, 96289.25it/s]  40%|███▉      | 218688/552076 [00:01<00:03, 99868.74it/s] 42%|████▏     | 230216/552076 [00:02<00:03, 104039.13it/s] 44%|████▍     | 242242/552076 [00:02<00:02, 108424.49it/s] 46%|████▌     | 254157/552076 [00:02<00:02, 111432.45it/s] 48%|████▊     | 266451/552076 [00:02<00:02, 114649.26it/s] 50%|█████     | 278149/552076 [00:02<00:02, 115338.46it/s] 53%|█████▎    | 290515/552076 [00:02<00:02, 117713.25it/s] 55%|█████▍    | 302740/552076 [00:02<00:02, 119036.48it/s] 57%|█████▋    | 314973/552076 [00:02<00:01, 120003.86it/s] 59%|█████▉    | 327250/552076 [00:02<00:01, 120819.71it/s] 61%|██████▏   | 339483/552076 [00:02<00:01, 121268.04it/s] 64%|██████▎   | 351849/552076 [00:03<00:01, 121975.63it/s] 66%|██████▌   | 364120/552076 [00:03<00:01, 122192.35it/s] 68%|██████▊   | 376355/552076 [00:03<00:01, 122171.80it/s] 70%|███████   | 388583/552076 [00:03<00:01, 121317.31it/s] 73%|███████▎  | 400724/552076 [00:03<00:01, 121331.52it/s] 75%|███████▍  | 412864/552076 [00:03<00:01, 120193.43it/s] 77%|███████▋  | 424891/552076 [00:03<00:01, 119178.71it/s] 79%|███████▉  | 437028/552076 [00:03<00:00, 119826.51it/s] 81%|████████▏ | 449248/552076 [00:03<00:00, 120526.64it/s] 84%|████████▎ | 461640/552076 [00:03<00:00, 121522.19it/s] 86%|████████▌ | 473921/552076 [00:04<00:00, 121902.78it/s] 88%|████████▊ | 486273/552076 [00:04<00:00, 122381.61it/s] 90%|█████████ | 498649/552076 [00:04<00:00, 122791.40it/s] 93%|█████████▎| 510950/552076 [00:04<00:00, 122855.09it/s] 95%|█████████▍| 523303/552076 [00:04<00:00, 123054.28it/s] 97%|█████████▋| 535610/552076 [00:04<00:00, 122967.48it/s] 99%|█████████▉| 547908/552076 [00:04<00:00, 122455.33it/s]100%|██████████| 552076/552076 [00:04<00:00, 118005.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11884/552076 [00:00<00:04, 118833.31it/s]  3%|▎         | 18402/552076 [00:00<00:05, 95299.26it/s]   6%|▌         | 30408/552076 [00:00<00:05, 101583.48it/s]  7%|▋         | 39761/552076 [00:00<00:05, 99024.16it/s]   9%|▊         | 48175/552076 [00:00<00:05, 94032.15it/s] 11%|█         | 59203/552076 [00:00<00:05, 97008.10it/s] 12%|█▏        | 67791/552076 [00:00<00:05, 93271.37it/s] 14%|█▍        | 77154/552076 [00:00<00:05, 93377.10it/s] 16%|█▌        | 86439/552076 [00:00<00:04, 93218.17it/s] 18%|█▊        | 98306/552076 [00:01<00:04, 99627.96it/s] 20%|█▉        | 109994/552076 [00:01<00:04, 104243.40it/s] 22%|██▏       | 122267/552076 [00:01<00:03, 109175.99it/s] 24%|██▍       | 134141/552076 [00:01<00:03, 111878.84it/s] 27%|██▋       | 146372/552076 [00:01<00:03, 114815.49it/s] 29%|██▊       | 158696/552076 [00:01<00:03, 117217.66it/s] 31%|███       | 170947/552076 [00:01<00:03, 118755.93it/s] 33%|███▎      | 183221/552076 [00:01<00:03, 119921.33it/s] 35%|███▌      | 195424/552076 [00:01<00:02, 120546.19it/s] 38%|███▊      | 207727/552076 [00:01<00:02, 121277.35it/s] 40%|███▉      | 219871/552076 [00:02<00:02, 119563.46it/s] 42%|████▏     | 231844/552076 [00:02<00:03, 93215.78it/s]  44%|████▍     | 244063/552076 [00:02<00:03, 100353.77it/s] 46%|████▋     | 256277/552076 [00:02<00:02, 106025.29it/s] 49%|████▊     | 268562/552076 [00:02<00:02, 110566.19it/s] 51%|█████     | 281006/552076 [00:02<00:02, 114390.19it/s] 53%|█████▎    | 293401/552076 [00:02<00:02, 117096.89it/s] 55%|█████▌    | 305659/552076 [00:02<00:02, 118689.16it/s] 58%|█████▊    | 317927/552076 [00:02<00:01, 119855.31it/s] 60%|█████▉    | 330330/552076 [00:03<00:01, 121076.84it/s] 62%|██████▏   | 342543/552076 [00:03<00:01, 120813.05it/s] 64%|██████▍   | 354698/552076 [00:03<00:01, 120896.15it/s] 66%|██████▋   | 367122/552076 [00:03<00:01, 121879.86it/s] 69%|██████▊   | 379409/552076 [00:03<00:01, 122172.91it/s] 71%|███████   | 391841/552076 [00:03<00:01, 122808.81it/s] 73%|███████▎  | 404148/552076 [00:03<00:01, 122884.54it/s] 75%|███████▌  | 416451/552076 [00:03<00:01, 120921.21it/s] 78%|███████▊  | 428653/552076 [00:03<00:01, 121245.95it/s] 80%|███████▉  | 440790/552076 [00:03<00:00, 121280.23it/s] 82%|████████▏ | 452962/552076 [00:04<00:00, 121408.83it/s] 84%|████████▍ | 465109/552076 [00:04<00:00, 116350.79it/s] 86%|████████▋ | 476793/552076 [00:04<00:00, 115242.91it/s] 88%|████████▊ | 488354/552076 [00:04<00:00, 106031.46it/s] 91%|█████████ | 500084/552076 [00:04<00:00, 109177.10it/s] 93%|█████████▎| 511546/552076 [00:04<00:00, 109166.51it/s] 95%|█████████▍| 522563/552076 [00:04<00:00, 97300.24it/s]  97%|█████████▋| 534818/552076 [00:04<00:00, 103709.15it/s] 99%|█████████▉| 545523/552076 [00:04<00:00, 100478.60it/s]100%|██████████| 552076/552076 [00:04<00:00, 110981.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7607/552076 [00:00<00:07, 76066.99it/s]  3%|▎         | 19189/552076 [00:00<00:06, 84798.04it/s]  5%|▌         | 27892/552076 [00:00<00:06, 85455.30it/s]  6%|▌         | 34075/552076 [00:00<00:06, 75962.08it/s]  8%|▊         | 41881/552076 [00:00<00:06, 76578.47it/s] 10%|▉         | 53931/552076 [00:00<00:05, 85978.69it/s] 11%|█▏        | 63270/552076 [00:00<00:05, 88075.35it/s] 13%|█▎        | 71850/552076 [00:00<00:06, 77363.98it/s] 14%|█▍        | 79664/552076 [00:00<00:06, 72356.96it/s] 16%|█▌        | 87020/552076 [00:01<00:06, 68480.04it/s] 17%|█▋        | 93995/552076 [00:01<00:06, 67103.12it/s] 18%|█▊        | 101972/552076 [00:01<00:06, 70458.30it/s] 20%|█▉        | 109788/552076 [00:01<00:06, 72603.98it/s] 21%|██        | 117143/552076 [00:01<00:06, 72368.55it/s] 23%|██▎       | 124446/552076 [00:01<00:05, 72030.12it/s] 24%|██▍       | 133465/552076 [00:01<00:05, 76659.66it/s] 26%|██▌       | 143471/552076 [00:01<00:04, 82442.58it/s] 28%|██▊       | 151919/552076 [00:01<00:04, 82674.27it/s] 29%|██▉       | 160330/552076 [00:02<00:04, 82808.42it/s] 31%|███       | 168711/552076 [00:02<00:04, 77030.55it/s] 32%|███▏      | 178133/552076 [00:02<00:04, 81489.24it/s] 35%|███▍      | 191009/552076 [00:02<00:03, 91574.26it/s] 37%|███▋      | 203261/552076 [00:02<00:03, 99080.09it/s] 39%|███▉      | 215416/552076 [00:02<00:03, 104897.50it/s] 41%|████      | 227215/552076 [00:02<00:02, 108508.76it/s] 43%|████▎     | 238432/552076 [00:02<00:02, 106569.75it/s] 45%|████▌     | 249545/552076 [00:02<00:02, 107895.90it/s] 47%|████▋     | 261031/552076 [00:02<00:02, 109894.24it/s] 49%|████▉     | 272162/552076 [00:03<00:02, 99199.73it/s]  51%|█████     | 282507/552076 [00:03<00:02, 98169.10it/s] 53%|█████▎    | 292601/552076 [00:03<00:02, 98984.02it/s] 55%|█████▍    | 302649/552076 [00:03<00:02, 87331.74it/s] 57%|█████▋    | 312420/552076 [00:03<00:02, 90204.17it/s] 59%|█████▉    | 324647/552076 [00:03<00:02, 97905.59it/s] 61%|██████    | 334820/552076 [00:03<00:02, 98274.97it/s] 63%|██████▎   | 347783/552076 [00:03<00:01, 105964.03it/s] 65%|██████▌   | 360273/552076 [00:03<00:01, 111012.11it/s] 68%|██████▊   | 372842/552076 [00:04<00:01, 115040.08it/s] 70%|██████▉   | 385211/552076 [00:04<00:01, 117503.18it/s] 72%|███████▏  | 397610/552076 [00:04<00:01, 119374.55it/s] 74%|███████▍  | 409709/552076 [00:04<00:01, 119852.04it/s] 76%|███████▋  | 421945/552076 [00:04<00:01, 120593.51it/s] 79%|███████▊  | 434306/552076 [00:04<00:00, 121480.27it/s] 81%|████████  | 446565/552076 [00:04<00:00, 121810.68it/s] 83%|████████▎ | 458883/552076 [00:04<00:00, 122217.35it/s] 85%|████████▌ | 471400/552076 [00:04<00:00, 123087.93it/s] 88%|████████▊ | 483729/552076 [00:04<00:00, 107478.82it/s] 90%|████████▉ | 495958/552076 [00:05<00:00, 111530.56it/s] 92%|█████████▏| 507410/552076 [00:05<00:00, 110662.94it/s] 94%|█████████▍| 519495/552076 [00:05<00:00, 113532.86it/s] 96%|█████████▋| 531701/552076 [00:05<00:00, 115961.60it/s] 98%|█████████▊| 543426/552076 [00:05<00:00, 116251.19it/s]100%|██████████| 552076/552076 [00:05<00:00, 99134.64it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10986/552076 [00:00<00:05, 107698.84it/s]  4%|▍         | 22672/552076 [00:00<00:04, 110290.83it/s]  6%|▌         | 34426/552076 [00:00<00:04, 112367.57it/s]  8%|▊         | 46593/552076 [00:00<00:04, 115004.14it/s] 11%|█         | 58855/552076 [00:00<00:04, 117186.91it/s] 13%|█▎        | 71199/552076 [00:00<00:04, 118993.60it/s] 15%|█▌        | 83620/552076 [00:00<00:03, 120510.79it/s] 17%|█▋        | 95856/552076 [00:00<00:03, 121058.84it/s] 20%|█▉        | 108209/552076 [00:00<00:03, 121789.17it/s] 22%|██▏       | 120670/552076 [00:01<00:03, 122621.27it/s] 24%|██▍       | 132885/552076 [00:01<00:03, 122478.05it/s] 26%|██▋       | 145122/552076 [00:01<00:03, 122445.38it/s] 29%|██▊       | 157354/552076 [00:01<00:03, 122407.60it/s] 31%|███       | 169695/552076 [00:01<00:03, 122704.55it/s] 33%|███▎      | 181948/552076 [00:01<00:03, 122651.38it/s] 35%|███▌      | 194195/552076 [00:01<00:02, 122595.98it/s] 37%|███▋      | 206540/552076 [00:01<00:02, 122849.58it/s] 40%|███▉      | 218856/552076 [00:01<00:02, 122942.40it/s] 42%|████▏     | 231134/552076 [00:01<00:02, 109187.68it/s] 44%|████▍     | 243638/552076 [00:02<00:02, 113502.83it/s] 46%|████▋     | 255848/552076 [00:02<00:02, 115949.71it/s] 49%|████▊     | 268116/552076 [00:02<00:02, 117888.78it/s] 51%|█████     | 280362/552076 [00:02<00:02, 119221.61it/s] 53%|█████▎    | 292742/552076 [00:02<00:02, 120556.52it/s] 55%|█████▌    | 305158/552076 [00:02<00:02, 121612.55it/s] 58%|█████▊    | 317461/552076 [00:02<00:01, 122033.42it/s] 60%|█████▉    | 329756/552076 [00:02<00:01, 122304.03it/s] 62%|██████▏   | 342013/552076 [00:02<00:01, 120875.03it/s] 64%|██████▍   | 354402/552076 [00:02<00:01, 121762.32it/s] 66%|██████▋   | 366790/552076 [00:03<00:01, 122388.38it/s] 69%|██████▊   | 379157/552076 [00:03<00:01, 122767.05it/s] 71%|███████   | 391645/552076 [00:03<00:01, 123393.16it/s] 73%|███████▎  | 404080/552076 [00:03<00:01, 123676.41it/s] 75%|███████▌  | 416453/552076 [00:03<00:01, 123524.17it/s] 78%|███████▊  | 428835/552076 [00:03<00:00, 123610.87it/s] 80%|███████▉  | 441213/552076 [00:03<00:00, 123660.62it/s] 82%|████████▏ | 453581/552076 [00:03<00:00, 123653.38it/s] 84%|████████▍ | 465965/552076 [00:03<00:00, 123707.22it/s] 87%|████████▋ | 478337/552076 [00:03<00:00, 123619.05it/s] 89%|████████▉ | 490740/552076 [00:04<00:00, 123740.23it/s] 91%|█████████ | 503115/552076 [00:04<00:00, 123630.64it/s] 93%|█████████▎| 515479/552076 [00:04<00:00, 123284.48it/s] 96%|█████████▌| 527808/552076 [00:04<00:00, 123006.49it/s] 98%|█████████▊| 540110/552076 [00:04<00:00, 121715.00it/s]100%|██████████| 552076/552076 [00:04<00:00, 121217.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6486/552076 [00:00<00:08, 64336.54it/s]  2%|▏         | 12887/552076 [00:00<00:08, 64237.74it/s]  4%|▍         | 23858/552076 [00:00<00:07, 73358.83it/s]  6%|▋         | 34798/552076 [00:00<00:06, 81404.16it/s]  8%|▊         | 45737/552076 [00:00<00:05, 88170.88it/s] 10%|█         | 57551/552076 [00:00<00:05, 95433.13it/s] 13%|█▎        | 69864/552076 [00:00<00:04, 102337.63it/s] 15%|█▌        | 83107/552076 [00:00<00:04, 109823.76it/s] 17%|█▋        | 96138/552076 [00:00<00:03, 115258.67it/s] 20%|█▉        | 108565/552076 [00:01<00:03, 117821.75it/s] 22%|██▏       | 120883/552076 [00:01<00:03, 119379.00it/s] 24%|██▍       | 133271/552076 [00:01<00:03, 120692.59it/s] 26%|██▋       | 145418/552076 [00:01<00:03, 119458.54it/s] 29%|██▊       | 157646/552076 [00:01<00:03, 120290.31it/s] 31%|███       | 170010/552076 [00:01<00:03, 121273.32it/s] 33%|███▎      | 182169/552076 [00:01<00:03, 120329.37it/s] 35%|███▌      | 195347/552076 [00:01<00:02, 123548.90it/s] 38%|███▊      | 208658/552076 [00:01<00:02, 126267.30it/s] 40%|████      | 221326/552076 [00:01<00:02, 125816.68it/s] 42%|████▏     | 233937/552076 [00:02<00:02, 125602.76it/s] 45%|████▍     | 246518/552076 [00:02<00:02, 124841.04it/s] 47%|████▋     | 259018/552076 [00:02<00:02, 124387.56it/s] 49%|████▉     | 271468/552076 [00:02<00:02, 123939.72it/s] 51%|█████▏    | 283871/552076 [00:02<00:02, 123616.34it/s] 54%|█████▎    | 296239/552076 [00:02<00:02, 123087.71it/s] 56%|█████▌    | 308862/552076 [00:02<00:01, 124013.36it/s] 58%|█████▊    | 321874/552076 [00:02<00:01, 125781.82it/s] 61%|██████    | 334462/552076 [00:02<00:01, 123926.52it/s] 63%|██████▎   | 346868/552076 [00:02<00:01, 123348.05it/s] 65%|██████▌   | 359213/552076 [00:03<00:01, 123055.82it/s] 67%|██████▋   | 371526/552076 [00:03<00:01, 122230.68it/s] 70%|██████▉   | 383867/552076 [00:03<00:01, 122580.49it/s] 72%|███████▏  | 396130/552076 [00:03<00:01, 122266.73it/s] 74%|███████▍  | 408361/552076 [00:03<00:01, 97753.16it/s]  76%|███████▌  | 418920/552076 [00:03<00:01, 74464.18it/s] 77%|███████▋  | 427748/552076 [00:03<00:01, 71090.65it/s] 79%|███████▉  | 436034/552076 [00:03<00:01, 72642.90it/s] 80%|████████  | 444006/552076 [00:04<00:01, 67190.02it/s] 83%|████████▎ | 456168/552076 [00:04<00:01, 77609.38it/s] 85%|████████▍ | 468288/552076 [00:04<00:00, 86994.86it/s] 87%|████████▋ | 480513/552076 [00:04<00:00, 95233.33it/s] 89%|████████▉ | 492601/552076 [00:04<00:00, 101706.07it/s] 91%|█████████▏| 504871/552076 [00:04<00:00, 107207.66it/s] 94%|█████████▎| 516237/552076 [00:04<00:00, 92355.21it/s]  96%|█████████▌| 528262/552076 [00:04<00:00, 99262.63it/s] 98%|█████████▊| 540457/552076 [00:04<00:00, 105129.02it/s]100%|██████████| 552076/552076 [00:05<00:00, 108778.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9406/552076 [00:00<00:05, 94054.48it/s]  4%|▍         | 21146/552076 [00:00<00:05, 100020.99it/s]  6%|▌         | 32920/552076 [00:00<00:04, 104748.73it/s]  8%|▊         | 44885/552076 [00:00<00:04, 108813.30it/s] 10%|█         | 55401/552076 [00:00<00:04, 106219.71it/s] 12%|█▏        | 65437/552076 [00:00<00:04, 104390.60it/s] 14%|█▍        | 77389/552076 [00:00<00:04, 108509.14it/s] 16%|█▌        | 89605/552076 [00:00<00:04, 112271.42it/s] 18%|█▊        | 101852/552076 [00:00<00:03, 115147.33it/s] 21%|██        | 114143/552076 [00:01<00:03, 117371.06it/s] 23%|██▎       | 126392/552076 [00:01<00:03, 118859.88it/s] 25%|██▌       | 138571/552076 [00:01<00:03, 119722.27it/s] 27%|██▋       | 150758/552076 [00:01<00:03, 120357.44it/s] 29%|██▉       | 162732/552076 [00:01<00:03, 109753.26it/s] 31%|███▏      | 173845/552076 [00:01<00:04, 89354.93it/s]  34%|███▎      | 185968/552076 [00:01<00:03, 97006.32it/s] 36%|███▌      | 196359/552076 [00:01<00:04, 82549.81it/s] 38%|███▊      | 208466/552076 [00:01<00:03, 91260.39it/s] 40%|███▉      | 220517/552076 [00:02<00:03, 98425.41it/s] 42%|████▏     | 232664/552076 [00:02<00:03, 104364.47it/s] 44%|████▍     | 245020/552076 [00:02<00:02, 109466.03it/s] 47%|████▋     | 257099/552076 [00:02<00:02, 112632.58it/s] 49%|████▉     | 269867/552076 [00:02<00:02, 116757.95it/s] 51%|█████     | 282763/552076 [00:02<00:02, 120168.50it/s] 53%|█████▎    | 295020/552076 [00:02<00:02, 94809.10it/s]  56%|█████▌    | 306598/552076 [00:02<00:02, 100256.59it/s] 58%|█████▊    | 318952/552076 [00:02<00:02, 106263.52it/s] 60%|██████    | 331294/552076 [00:03<00:01, 110887.08it/s] 62%|██████▏   | 343575/552076 [00:03<00:01, 114211.79it/s] 64%|██████▍   | 355845/552076 [00:03<00:01, 116632.04it/s] 67%|██████▋   | 368172/552076 [00:03<00:01, 118544.48it/s] 69%|██████▉   | 380426/552076 [00:03<00:01, 119714.87it/s] 71%|███████   | 392737/552076 [00:03<00:01, 120711.24it/s] 73%|███████▎  | 405012/552076 [00:03<00:01, 121315.33it/s] 76%|███████▌  | 417335/552076 [00:03<00:01, 121881.33it/s] 78%|███████▊  | 429623/552076 [00:03<00:01, 122178.22it/s] 80%|████████  | 442028/552076 [00:03<00:00, 122733.39it/s] 82%|████████▏ | 454394/552076 [00:04<00:00, 123007.15it/s] 85%|████████▍ | 466764/552076 [00:04<00:00, 123212.38it/s] 87%|████████▋ | 479099/552076 [00:04<00:00, 122919.40it/s] 89%|████████▉ | 491401/552076 [00:04<00:00, 122433.75it/s] 91%|█████████ | 503666/552076 [00:04<00:00, 122497.18it/s] 93%|█████████▎| 515938/552076 [00:04<00:00, 122562.14it/s] 96%|█████████▌| 528198/552076 [00:04<00:00, 122135.17it/s] 98%|█████████▊| 540415/552076 [00:04<00:00, 122092.66it/s]100%|██████████| 552076/552076 [00:04<00:00, 113227.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8200/552076 [00:00<00:06, 81995.39it/s]  3%|▎         | 15617/552076 [00:00<00:06, 79477.66it/s]  4%|▍         | 22343/552076 [00:00<00:07, 75369.93it/s]  5%|▍         | 27124/552076 [00:00<00:08, 61732.51it/s]  7%|▋         | 38370/552076 [00:00<00:07, 71392.83it/s]  9%|▉         | 51054/552076 [00:00<00:06, 82167.91it/s] 11%|█▏        | 63219/552076 [00:00<00:05, 91030.20it/s] 14%|█▎        | 75270/552076 [00:00<00:04, 98238.55it/s] 16%|█▌        | 87379/552076 [00:00<00:04, 104131.82it/s] 18%|█▊        | 99535/552076 [00:01<00:04, 108809.97it/s] 20%|██        | 111711/552076 [00:01<00:03, 112395.72it/s] 22%|██▏       | 123420/552076 [00:01<00:03, 113763.63it/s] 24%|██▍       | 134998/552076 [00:01<00:04, 101177.06it/s] 26%|██▋       | 145515/552076 [00:01<00:04, 92465.82it/s]  29%|██▊       | 157641/552076 [00:01<00:03, 99557.64it/s] 31%|███       | 169750/552076 [00:01<00:03, 105166.10it/s] 33%|███▎      | 182024/552076 [00:01<00:03, 109884.69it/s] 35%|███▌      | 194070/552076 [00:01<00:03, 112855.11it/s] 37%|███▋      | 206274/552076 [00:01<00:02, 115459.82it/s] 40%|███▉      | 218274/552076 [00:02<00:02, 116698.18it/s] 42%|████▏     | 230510/552076 [00:02<00:02, 118340.64it/s] 44%|████▍     | 242447/552076 [00:02<00:03, 93631.07it/s]  46%|████▌     | 254248/552076 [00:02<00:02, 99817.21it/s] 48%|████▊     | 264960/552076 [00:02<00:03, 80698.49it/s] 50%|████▉     | 274770/552076 [00:02<00:03, 85233.25it/s] 52%|█████▏    | 284601/552076 [00:02<00:03, 88774.35it/s] 53%|█████▎    | 294104/552076 [00:02<00:03, 84244.39it/s] 55%|█████▌    | 306290/552076 [00:03<00:02, 92841.31it/s] 58%|█████▊    | 318162/552076 [00:03<00:02, 99337.07it/s] 60%|█████▉    | 329228/552076 [00:03<00:02, 102481.95it/s] 62%|██████▏   | 341482/552076 [00:03<00:02, 103403.04it/s] 64%|██████▍   | 352113/552076 [00:03<00:01, 103920.31it/s] 66%|██████▌   | 362709/552076 [00:03<00:01, 99676.93it/s]  68%|██████▊   | 374839/552076 [00:03<00:01, 105307.31it/s] 70%|██████▉   | 385581/552076 [00:03<00:01, 99285.12it/s]  72%|███████▏  | 396727/552076 [00:03<00:01, 102646.51it/s] 74%|███████▍  | 407174/552076 [00:04<00:01, 77512.82it/s]  75%|███████▌  | 415967/552076 [00:04<00:02, 65603.87it/s] 77%|███████▋  | 423571/552076 [00:04<00:01, 67393.50it/s] 79%|███████▉  | 435607/552076 [00:04<00:01, 77643.64it/s] 81%|████████  | 447132/552076 [00:04<00:01, 86068.46it/s] 83%|████████▎ | 459458/552076 [00:04<00:00, 94633.24it/s] 85%|████████▌ | 471035/552076 [00:04<00:00, 100115.13it/s] 87%|████████▋ | 482658/552076 [00:04<00:00, 104458.65it/s] 90%|████████▉ | 494898/552076 [00:05<00:00, 109261.95it/s] 92%|█████████▏| 507149/552076 [00:05<00:00, 112925.08it/s] 94%|█████████▍| 519348/552076 [00:05<00:00, 115497.95it/s] 96%|█████████▋| 531539/552076 [00:05<00:00, 117347.54it/s] 99%|█████████▊| 543845/552076 [00:05<00:00, 119004.34it/s]100%|██████████| 552076/552076 [00:05<00:00, 99973.20it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11903/552076 [00:00<00:04, 119026.42it/s]  4%|▍         | 23891/552076 [00:00<00:04, 119280.15it/s]  6%|▋         | 35479/552076 [00:00<00:04, 118237.56it/s]  8%|▊         | 43223/552076 [00:00<00:05, 92595.26it/s]   9%|▉         | 52238/552076 [00:00<00:05, 91847.70it/s] 12%|█▏        | 64277/552076 [00:00<00:04, 98878.99it/s] 14%|█▍        | 76336/552076 [00:00<00:04, 104522.71it/s] 16%|█▌        | 88439/552076 [00:00<00:04, 108979.64it/s] 18%|█▊        | 100510/552076 [00:00<00:04, 112251.38it/s] 20%|██        | 111555/552076 [00:01<00:04, 97182.24it/s]  22%|██▏       | 121507/552076 [00:01<00:04, 88365.46it/s] 24%|██▎       | 130661/552076 [00:01<00:04, 86425.94it/s] 26%|██▌       | 141500/552076 [00:01<00:04, 92019.80it/s] 28%|██▊       | 153805/552076 [00:01<00:04, 99550.03it/s] 32%|███▏      | 175770/552076 [00:01<00:03, 119083.43it/s] 36%|███▌      | 198355/552076 [00:01<00:02, 138761.82it/s] 40%|███▉      | 220828/552076 [00:01<00:02, 156749.71it/s] 44%|████▍     | 242933/552076 [00:01<00:01, 171735.69it/s] 48%|████▊     | 266312/552076 [00:02<00:01, 186593.77it/s] 52%|█████▏    | 288443/552076 [00:02<00:01, 195807.47it/s] 56%|█████▌    | 309502/552076 [00:02<00:01, 173932.31it/s] 60%|█████▉    | 331132/552076 [00:02<00:01, 184790.67it/s] 64%|██████▍   | 353475/552076 [00:02<00:01, 194900.16it/s] 68%|██████▊   | 374613/552076 [00:02<00:00, 199566.68it/s] 72%|███████▏  | 395436/552076 [00:02<00:00, 202085.58it/s] 75%|███████▌  | 416165/552076 [00:02<00:00, 181076.38it/s] 79%|███████▉  | 438456/552076 [00:02<00:00, 191878.40it/s] 84%|████████▎ | 461052/552076 [00:03<00:00, 200970.59it/s] 88%|████████▊ | 483914/552076 [00:03<00:00, 208535.72it/s] 92%|█████████▏| 505802/552076 [00:03<00:00, 211532.73it/s] 96%|█████████▌| 527329/552076 [00:03<00:00, 212639.22it/s]100%|█████████▉| 549474/552076 [00:03<00:00, 215207.11it/s]100%|██████████| 552076/552076 [00:03<00:00, 160973.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22416/552076 [00:00<00:02, 224155.40it/s]  8%|▊         | 44611/552076 [00:00<00:02, 223487.01it/s] 12%|█▏        | 66010/552076 [00:00<00:02, 220548.18it/s] 16%|█▌        | 88809/552076 [00:00<00:02, 222726.94it/s] 20%|██        | 111872/552076 [00:00<00:01, 225038.57it/s] 24%|██▍       | 134535/552076 [00:00<00:01, 225510.99it/s] 28%|██▊       | 156478/552076 [00:00<00:01, 223651.17it/s] 32%|███▏      | 178331/552076 [00:00<00:01, 222086.79it/s] 36%|███▋      | 200641/552076 [00:00<00:01, 222387.31it/s] 41%|████      | 223850/552076 [00:01<00:01, 225210.67it/s] 45%|████▍     | 246830/552076 [00:01<00:01, 226567.21it/s] 49%|████▉     | 269785/552076 [00:01<00:01, 227452.81it/s] 53%|█████▎    | 292229/552076 [00:01<00:01, 223932.54it/s] 57%|█████▋    | 314424/552076 [00:01<00:01, 219926.11it/s] 61%|██████    | 336294/552076 [00:01<00:00, 218773.80it/s] 65%|██████▌   | 358956/552076 [00:01<00:00, 221067.30it/s] 69%|██████▉   | 381010/552076 [00:01<00:00, 218240.02it/s] 73%|███████▎  | 402805/552076 [00:01<00:00, 214921.48it/s] 77%|███████▋  | 424316/552076 [00:01<00:00, 214977.30it/s] 81%|████████  | 445808/552076 [00:02<00:00, 212017.37it/s] 85%|████████▍ | 467015/552076 [00:02<00:00, 210015.88it/s] 89%|████████▊ | 488842/552076 [00:02<00:00, 212424.54it/s] 92%|█████████▏| 510248/552076 [00:02<00:00, 212911.70it/s] 96%|█████████▋| 531548/552076 [00:02<00:00, 212465.46it/s]100%|██████████| 552076/552076 [00:02<00:00, 218822.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20882/552076 [00:00<00:02, 208814.22it/s]  7%|▋         | 41015/552076 [00:00<00:02, 206510.48it/s] 11%|█▏        | 63062/552076 [00:00<00:02, 210507.46it/s] 15%|█▌        | 84876/552076 [00:00<00:02, 212740.01it/s] 19%|█▉        | 106977/552076 [00:00<00:02, 215152.65it/s] 23%|██▎       | 128857/552076 [00:00<00:01, 216231.03it/s] 27%|██▋       | 151406/552076 [00:00<00:01, 218927.03it/s] 31%|███▏      | 173507/552076 [00:00<00:01, 219546.76it/s] 35%|███▌      | 195572/552076 [00:00<00:01, 219874.44it/s] 39%|███▉      | 217277/552076 [00:01<00:01, 219018.06it/s] 43%|████▎     | 240118/552076 [00:01<00:01, 221752.82it/s] 47%|████▋     | 262023/552076 [00:01<00:01, 220932.83it/s] 51%|█████▏    | 283838/552076 [00:01<00:01, 219423.22it/s] 56%|█████▌    | 306427/552076 [00:01<00:01, 221323.48it/s] 60%|█████▉    | 329484/552076 [00:01<00:00, 224017.74it/s] 64%|██████▎   | 351802/552076 [00:01<00:00, 222250.09it/s] 68%|██████▊   | 374448/552076 [00:01<00:00, 223495.02it/s] 72%|███████▏  | 396906/552076 [00:01<00:00, 223817.40it/s] 76%|███████▌  | 419262/552076 [00:01<00:00, 217012.07it/s] 80%|███████▉  | 440991/552076 [00:02<00:00, 209701.40it/s] 84%|████████▎ | 462034/552076 [00:02<00:00, 204470.52it/s] 87%|████████▋ | 482561/552076 [00:02<00:00, 189199.72it/s] 91%|█████████ | 501764/552076 [00:02<00:00, 188492.22it/s] 94%|█████████▍| 520812/552076 [00:02<00:00, 186337.77it/s] 98%|█████████▊| 539859/552076 [00:02<00:00, 187557.75it/s]100%|██████████| 552076/552076 [00:02<00:00, 209630.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14494/552076 [00:00<00:03, 144932.54it/s]  5%|▌         | 28892/552076 [00:00<00:03, 144642.79it/s]  8%|▊         | 43440/552076 [00:00<00:03, 144891.85it/s] 10%|█         | 57930/552076 [00:00<00:03, 144892.47it/s] 13%|█▎        | 71555/552076 [00:00<00:03, 142186.16it/s] 15%|█▌        | 85277/552076 [00:00<00:03, 140657.78it/s] 18%|█▊        | 101875/552076 [00:00<00:03, 147403.55it/s] 22%|██▏       | 121584/552076 [00:00<00:02, 159461.82it/s] 26%|██▌       | 141475/552076 [00:00<00:02, 169548.22it/s] 29%|██▉       | 161608/552076 [00:01<00:02, 177975.04it/s] 33%|███▎      | 181268/552076 [00:01<00:02, 183179.50it/s] 36%|███▌      | 199621/552076 [00:01<00:02, 144984.03it/s] 39%|███▉      | 215394/552076 [00:01<00:02, 137784.83it/s] 42%|████▏     | 230140/552076 [00:01<00:02, 124752.10it/s] 44%|████▍     | 243528/552076 [00:01<00:02, 110129.30it/s] 46%|████▋     | 255494/552076 [00:01<00:02, 103314.78it/s] 48%|████▊     | 266579/552076 [00:01<00:02, 104478.99it/s] 50%|█████     | 277558/552076 [00:02<00:02, 98183.32it/s]  52%|█████▏    | 288687/552076 [00:02<00:02, 101777.80it/s] 55%|█████▍    | 300958/552076 [00:02<00:02, 107266.73it/s] 57%|█████▋    | 313170/552076 [00:02<00:02, 111326.52it/s] 59%|█████▉    | 325468/552076 [00:02<00:01, 114582.01it/s] 61%|██████    | 337725/552076 [00:02<00:01, 116864.86it/s] 63%|██████▎   | 349570/552076 [00:02<00:01, 117041.24it/s] 66%|██████▌   | 361705/552076 [00:02<00:01, 118301.35it/s] 68%|██████▊   | 373616/552076 [00:02<00:01, 111696.14it/s] 70%|██████▉   | 384919/552076 [00:03<00:01, 110989.56it/s] 72%|███████▏  | 397302/552076 [00:03<00:01, 114551.01it/s] 74%|███████▍  | 409706/552076 [00:03<00:01, 117240.77it/s] 76%|███████▋  | 422108/552076 [00:03<00:01, 119193.16it/s] 79%|███████▊  | 434552/552076 [00:03<00:00, 120718.94it/s] 81%|████████  | 447043/552076 [00:03<00:00, 121945.35it/s] 83%|████████▎ | 459564/552076 [00:03<00:00, 122905.73it/s] 86%|████████▌ | 472048/552076 [00:03<00:00, 123478.94it/s] 88%|████████▊ | 484417/552076 [00:03<00:00, 117201.59it/s] 90%|████████▉ | 496219/552076 [00:03<00:00, 112754.35it/s] 92%|█████████▏| 508286/552076 [00:04<00:00, 115016.04it/s] 94%|█████████▍| 520342/552076 [00:04<00:00, 116624.73it/s] 96%|█████████▋| 532442/552076 [00:04<00:00, 117901.79it/s] 99%|█████████▊| 544394/552076 [00:04<00:00, 118381.07it/s]100%|██████████| 552076/552076 [00:04<00:00, 125602.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7415/552076 [00:00<00:07, 71847.32it/s]  3%|▎         | 13987/552076 [00:00<00:07, 67418.10it/s]  3%|▎         | 18511/552076 [00:00<00:09, 57893.73it/s]  4%|▍         | 24834/552076 [00:00<00:08, 59396.60it/s]  6%|▋         | 35006/552076 [00:00<00:07, 67867.84it/s]  8%|▊         | 46028/552076 [00:00<00:06, 76710.32it/s] 10%|█         | 57963/552076 [00:00<00:05, 85918.38it/s] 13%|█▎        | 70151/552076 [00:00<00:05, 94261.50it/s] 15%|█▍        | 82296/552076 [00:00<00:04, 101046.61it/s] 17%|█▋        | 94582/552076 [00:01<00:04, 106730.26it/s] 19%|█▉        | 106918/552076 [00:01<00:04, 111226.23it/s] 21%|██▏       | 118376/552076 [00:01<00:04, 107147.78it/s] 23%|██▎       | 129358/552076 [00:01<00:03, 107808.32it/s] 26%|██▌       | 141005/552076 [00:01<00:03, 106797.70it/s] 27%|██▋       | 151819/552076 [00:01<00:04, 98920.72it/s]  30%|██▉       | 164095/552076 [00:01<00:03, 105038.66it/s] 32%|███▏      | 176385/552076 [00:01<00:03, 109825.50it/s] 34%|███▍      | 188437/552076 [00:01<00:03, 112827.63it/s] 36%|███▋      | 200450/552076 [00:01<00:03, 114922.01it/s] 38%|███▊      | 212459/552076 [00:02<00:02, 116423.27it/s] 41%|████      | 224203/552076 [00:02<00:03, 107060.38it/s] 43%|████▎     | 236515/552076 [00:02<00:02, 111419.83it/s] 45%|████▌     | 248795/552076 [00:02<00:02, 114602.74it/s] 47%|████▋     | 261126/552076 [00:02<00:02, 117080.89it/s] 50%|████▉     | 273432/552076 [00:02<00:02, 118811.76it/s] 52%|█████▏    | 285734/552076 [00:02<00:02, 120041.71it/s] 54%|█████▍    | 298028/552076 [00:02<00:02, 120895.51it/s] 56%|█████▌    | 310451/552076 [00:02<00:01, 121874.29it/s] 58%|█████▊    | 322893/552076 [00:03<00:01, 122624.70it/s] 61%|██████    | 335183/552076 [00:03<00:02, 80255.96it/s]  63%|██████▎   | 345119/552076 [00:03<00:03, 65069.62it/s] 64%|██████▍   | 353429/552076 [00:03<00:03, 56022.57it/s] 65%|██████▌   | 360515/552076 [00:03<00:03, 57222.08it/s] 67%|██████▋   | 367282/552076 [00:03<00:03, 59525.94it/s] 68%|██████▊   | 373990/552076 [00:04<00:03, 59148.96it/s] 69%|██████▉   | 380434/552076 [00:04<00:02, 60487.02it/s] 70%|███████   | 386861/552076 [00:04<00:02, 59189.96it/s] 71%|███████   | 393106/552076 [00:04<00:02, 60130.64it/s] 72%|███████▏  | 399360/552076 [00:04<00:02, 60832.94it/s] 73%|███████▎  | 405581/552076 [00:04<00:02, 59216.86it/s] 75%|███████▍  | 411939/552076 [00:04<00:02, 60460.96it/s] 76%|███████▌  | 418341/552076 [00:04<00:02, 61485.97it/s] 77%|███████▋  | 424582/552076 [00:04<00:02, 59818.84it/s] 78%|███████▊  | 430920/552076 [00:04<00:01, 60844.05it/s] 79%|███████▉  | 437262/552076 [00:05<00:01, 61593.32it/s] 80%|████████  | 443453/552076 [00:05<00:01, 60352.08it/s] 81%|████████▏ | 449741/552076 [00:05<00:01, 61087.43it/s] 83%|████████▎ | 455871/552076 [00:05<00:01, 60092.89it/s] 84%|████████▎ | 461971/552076 [00:05<00:01, 59323.09it/s] 85%|████████▍ | 468105/552076 [00:05<00:01, 59913.07it/s] 86%|████████▌ | 474109/552076 [00:05<00:01, 59551.95it/s] 87%|████████▋ | 480074/552076 [00:05<00:01, 57438.29it/s] 88%|████████▊ | 485841/552076 [00:05<00:01, 51721.94it/s] 89%|████████▉ | 491137/552076 [00:06<00:01, 46185.70it/s] 90%|████████▉ | 495953/552076 [00:06<00:01, 44059.46it/s] 91%|█████████ | 500518/552076 [00:06<00:01, 42166.72it/s] 91%|█████████▏| 504863/552076 [00:06<00:01, 41200.89it/s] 92%|█████████▏| 509078/552076 [00:06<00:01, 40732.46it/s] 93%|█████████▎| 513219/552076 [00:06<00:00, 39116.49it/s] 94%|█████████▎| 517192/552076 [00:06<00:00, 38791.73it/s] 94%|█████████▍| 521115/552076 [00:06<00:00, 38346.17it/s] 95%|█████████▌| 524982/552076 [00:06<00:00, 37513.33it/s] 96%|█████████▌| 528973/552076 [00:07<00:00, 37183.82it/s] 97%|█████████▋| 532771/552076 [00:07<00:00, 37418.08it/s] 97%|█████████▋| 536527/552076 [00:07<00:00, 37152.43it/s] 98%|█████████▊| 540253/552076 [00:07<00:00, 36515.27it/s] 99%|█████████▊| 544076/552076 [00:07<00:00, 37013.20it/s] 99%|█████████▉| 548028/552076 [00:07<00:00, 36556.66it/s]100%|█████████▉| 551691/552076 [00:07<00:00, 33046.15it/s]100%|██████████| 552076/552076 [00:07<00:00, 71122.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4440/552076 [00:00<00:13, 40690.08it/s]  1%|▏         | 7982/552076 [00:00<00:14, 38820.23it/s]  2%|▏         | 11661/552076 [00:00<00:14, 38187.03it/s]  3%|▎         | 15403/552076 [00:00<00:14, 37952.97it/s]  3%|▎         | 18991/552076 [00:00<00:14, 36574.47it/s]  4%|▍         | 22618/552076 [00:00<00:14, 36248.41it/s]  5%|▍         | 26374/552076 [00:00<00:14, 36631.92it/s]  5%|▌         | 30143/552076 [00:00<00:14, 36942.06it/s]  6%|▌         | 33699/552076 [00:00<00:14, 35860.40it/s]  7%|▋         | 37402/552076 [00:01<00:14, 36002.78it/s]  7%|▋         | 41072/552076 [00:01<00:14, 36208.03it/s]  8%|▊         | 44619/552076 [00:01<00:14, 35478.85it/s]  9%|▊         | 48269/552076 [00:01<00:14, 35779.08it/s]  9%|▉         | 51814/552076 [00:01<00:14, 35572.94it/s] 10%|█         | 55605/552076 [00:01<00:14, 35393.97it/s] 11%|█         | 59434/552076 [00:01<00:13, 36013.84it/s] 11%|█▏        | 63476/552076 [00:01<00:13, 37231.16it/s] 12%|█▏        | 67340/552076 [00:01<00:12, 37440.36it/s] 13%|█▎        | 71242/552076 [00:01<00:12, 37596.84it/s] 14%|█▎        | 75210/552076 [00:02<00:12, 38197.60it/s] 14%|█▍        | 79034/552076 [00:02<00:12, 37881.99it/s] 15%|█▌        | 82940/552076 [00:02<00:12, 37268.95it/s] 16%|█▌        | 86672/552076 [00:02<00:13, 34873.14it/s] 16%|█▋        | 90194/552076 [00:02<00:13, 34273.15it/s] 17%|█▋        | 93648/552076 [00:02<00:13, 33622.93it/s] 18%|█▊        | 97032/552076 [00:02<00:13, 32803.05it/s] 18%|█▊        | 100850/552076 [00:02<00:13, 34037.91it/s] 19%|█▉        | 104685/552076 [00:02<00:12, 35225.66it/s] 20%|█▉        | 108236/552076 [00:03<00:12, 34547.53it/s] 20%|██        | 111714/552076 [00:03<00:12, 34311.06it/s] 21%|██        | 115935/552076 [00:03<00:11, 36351.52it/s] 22%|██▏       | 119860/552076 [00:03<00:11, 36612.91it/s] 23%|██▎       | 125144/552076 [00:03<00:10, 40125.26it/s] 24%|██▎       | 130482/552076 [00:03<00:09, 42639.21it/s] 25%|██▍       | 135934/552076 [00:03<00:09, 45180.42it/s] 26%|██▌       | 141799/552076 [00:03<00:08, 48523.07it/s] 27%|██▋       | 146814/552076 [00:03<00:09, 44961.26it/s] 27%|██▋       | 151540/552076 [00:03<00:09, 44009.27it/s] 28%|██▊       | 156062/552076 [00:04<00:09, 40882.70it/s] 29%|██▉       | 160705/552076 [00:04<00:09, 42000.51it/s] 30%|███       | 165670/552076 [00:04<00:08, 44035.82it/s] 31%|███       | 170168/552076 [00:04<00:09, 41783.37it/s] 32%|███▏      | 174437/552076 [00:04<00:10, 36722.63it/s] 32%|███▏      | 178758/552076 [00:04<00:09, 38454.57it/s] 33%|███▎      | 183447/552076 [00:04<00:09, 39466.35it/s] 34%|███▍      | 188278/552076 [00:04<00:08, 40803.84it/s] 35%|███▍      | 193034/552076 [00:05<00:08, 42619.14it/s] 36%|███▌      | 197378/552076 [00:05<00:08, 40064.90it/s] 36%|███▋      | 201473/552076 [00:05<00:12, 28187.59it/s] 37%|███▋      | 204840/552076 [00:05<00:12, 26798.73it/s] 38%|███▊      | 209295/552076 [00:05<00:11, 30015.29it/s] 39%|███▉      | 215174/552076 [00:05<00:09, 35180.78it/s] 40%|███▉      | 220456/552076 [00:05<00:08, 38441.35it/s] 41%|████      | 226156/552076 [00:05<00:07, 41970.63it/s] 42%|████▏     | 231648/552076 [00:06<00:07, 45055.55it/s] 43%|████▎     | 237380/552076 [00:06<00:06, 48144.81it/s] 44%|████▍     | 242710/552076 [00:06<00:06, 49582.88it/s] 45%|████▍     | 248132/552076 [00:06<00:05, 50796.59it/s] 46%|████▌     | 253655/552076 [00:06<00:05, 52049.24it/s] 47%|████▋     | 258993/552076 [00:06<00:05, 51770.86it/s] 48%|████▊     | 264501/552076 [00:06<00:05, 52506.61it/s] 49%|████▉     | 270559/552076 [00:06<00:05, 53604.36it/s] 50%|█████     | 276169/552076 [00:06<00:05, 54327.82it/s] 51%|█████     | 281863/552076 [00:06<00:05, 53377.45it/s] 52%|█████▏    | 287857/552076 [00:07<00:04, 54593.63it/s] 53%|█████▎    | 293606/552076 [00:07<00:04, 55431.41it/s] 54%|█████▍    | 299173/552076 [00:07<00:04, 55017.08it/s] 55%|█████▌    | 304909/552076 [00:07<00:04, 55698.66it/s] 56%|█████▋    | 310863/552076 [00:07<00:04, 55402.47it/s] 57%|█████▋    | 316589/552076 [00:07<00:04, 55946.81it/s] 58%|█████▊    | 322193/552076 [00:07<00:04, 55910.80it/s] 59%|█████▉    | 327790/552076 [00:07<00:04, 54712.03it/s] 60%|██████    | 333365/552076 [00:07<00:03, 55018.00it/s] 61%|██████▏   | 338875/552076 [00:07<00:03, 53679.13it/s] 62%|██████▏   | 344256/552076 [00:08<00:03, 53409.28it/s] 63%|██████▎   | 349606/552076 [00:08<00:03, 52445.18it/s] 64%|██████▍   | 354861/552076 [00:08<00:03, 52257.23it/s] 65%|██████▌   | 360348/552076 [00:08<00:03, 52040.78it/s] 66%|██████▋   | 365945/552076 [00:08<00:03, 53159.63it/s] 67%|██████▋   | 371271/552076 [00:08<00:03, 52876.04it/s] 68%|██████▊   | 376892/552076 [00:08<00:03, 53833.70it/s] 69%|██████▉   | 382738/552076 [00:08<00:03, 53656.39it/s] 70%|███████   | 388192/552076 [00:08<00:03, 53917.98it/s] 71%|███████▏  | 393946/552076 [00:09<00:02, 54955.72it/s] 72%|███████▏  | 399783/552076 [00:09<00:02, 55936.72it/s] 73%|███████▎  | 405387/552076 [00:09<00:02, 54189.11it/s] 74%|███████▍  | 410854/552076 [00:09<00:02, 53915.30it/s] 75%|███████▌  | 416625/552076 [00:09<00:02, 54999.59it/s] 77%|███████▋  | 422412/552076 [00:09<00:02, 54847.89it/s] 78%|███████▊  | 428493/552076 [00:09<00:02, 56510.03it/s] 79%|███████▊  | 434164/552076 [00:09<00:02, 54851.05it/s] 80%|███████▉  | 440216/552076 [00:09<00:01, 56200.55it/s] 81%|████████  | 445862/552076 [00:10<00:02, 45515.42it/s] 82%|████████▏ | 450760/552076 [00:10<00:02, 44819.00it/s] 83%|████████▎ | 456076/552076 [00:10<00:02, 46305.23it/s] 84%|████████▎ | 461749/552076 [00:10<00:01, 48785.65it/s] 85%|████████▍ | 466841/552076 [00:10<00:01, 49406.02it/s] 86%|████████▌ | 472852/552076 [00:10<00:01, 52007.85it/s] 87%|████████▋ | 478171/552076 [00:10<00:01, 48397.22it/s] 88%|████████▊ | 483144/552076 [00:10<00:01, 44703.42it/s] 88%|████████▊ | 487764/552076 [00:10<00:01, 43094.08it/s] 89%|████████▉ | 492191/552076 [00:11<00:01, 42409.89it/s] 90%|████████▉ | 496517/552076 [00:11<00:01, 42582.68it/s] 91%|█████████ | 500835/552076 [00:11<00:01, 38947.90it/s] 91%|█████████▏| 504832/552076 [00:11<00:01, 38671.83it/s] 92%|█████████▏| 508771/552076 [00:11<00:01, 35459.40it/s] 93%|█████████▎| 512420/552076 [00:11<00:01, 33462.23it/s] 94%|█████████▍| 517989/552076 [00:11<00:00, 37681.20it/s] 95%|█████████▍| 523722/552076 [00:11<00:00, 41998.97it/s] 96%|█████████▌| 529595/552076 [00:11<00:00, 45383.75it/s] 97%|█████████▋| 535434/552076 [00:12<00:00, 48632.48it/s] 98%|█████████▊| 540709/552076 [00:12<00:00, 49174.46it/s] 99%|█████████▉| 547205/552076 [00:12<00:00, 53040.78it/s]100%|██████████| 552076/552076 [00:12<00:00, 44882.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5113/552076 [00:00<00:11, 46437.78it/s]  2%|▏         | 10911/552076 [00:00<00:10, 49386.86it/s]  4%|▎         | 19365/552076 [00:00<00:09, 55838.34it/s]  5%|▍         | 24906/552076 [00:00<00:09, 55634.98it/s]  6%|▌         | 30531/552076 [00:00<00:09, 55817.06it/s]  6%|▋         | 35489/552076 [00:00<00:10, 50813.95it/s]  7%|▋         | 40221/552076 [00:00<00:10, 48355.05it/s]  8%|▊         | 46627/552076 [00:00<00:09, 52192.90it/s] 10%|█         | 57139/552076 [00:00<00:08, 61478.86it/s] 13%|█▎        | 69033/552076 [00:01<00:06, 71898.61it/s] 14%|█▍        | 77334/552076 [00:01<00:06, 68679.69it/s] 15%|█▌        | 85010/552076 [00:01<00:07, 66279.94it/s] 17%|█▋        | 92222/552076 [00:01<00:07, 62668.02it/s] 18%|█▊        | 98938/552076 [00:01<00:07, 62053.53it/s] 19%|█▉        | 105460/552076 [00:01<00:07, 61500.36it/s] 20%|██        | 111833/552076 [00:01<00:07, 58914.24it/s] 21%|██▏       | 117904/552076 [00:01<00:07, 55951.46it/s] 22%|██▏       | 123656/552076 [00:02<00:08, 53515.23it/s] 23%|██▎       | 129140/552076 [00:02<00:07, 53869.93it/s] 24%|██▍       | 134620/552076 [00:02<00:07, 53547.12it/s] 25%|██▌       | 140305/552076 [00:02<00:07, 54359.56it/s] 26%|██▋       | 145790/552076 [00:02<00:08, 48490.40it/s] 27%|██▋       | 151412/552076 [00:02<00:07, 50576.10it/s] 29%|██▊       | 157490/552076 [00:02<00:07, 53257.79it/s] 30%|██▉       | 162945/552076 [00:02<00:08, 47628.93it/s] 31%|███       | 168403/552076 [00:02<00:07, 49520.72it/s] 31%|███▏      | 173516/552076 [00:03<00:08, 46608.76it/s] 32%|███▏      | 178325/552076 [00:03<00:07, 47009.66it/s] 33%|███▎      | 184424/552076 [00:03<00:07, 50480.15it/s] 35%|███▍      | 190682/552076 [00:03<00:06, 53587.85it/s] 36%|███▌      | 196976/552076 [00:03<00:06, 56088.00it/s] 37%|███▋      | 202909/552076 [00:03<00:06, 55780.77it/s] 38%|███▊      | 209028/552076 [00:03<00:05, 57299.75it/s] 39%|███▉      | 217793/552076 [00:03<00:05, 63940.92it/s] 41%|████      | 224768/552076 [00:03<00:05, 64151.78it/s] 42%|████▏     | 231395/552076 [00:04<00:06, 53323.44it/s] 43%|████▎     | 237181/552076 [00:04<00:06, 48360.97it/s] 44%|████▍     | 242424/552076 [00:04<00:06, 46612.65it/s] 45%|████▍     | 247384/552076 [00:04<00:06, 45469.76it/s] 46%|████▌     | 252994/552076 [00:04<00:06, 47960.65it/s] 47%|████▋     | 259370/552076 [00:04<00:05, 50678.92it/s] 48%|████▊     | 265197/552076 [00:04<00:05, 50059.49it/s] 49%|████▉     | 270326/552076 [00:04<00:05, 46978.28it/s] 50%|████▉     | 275149/552076 [00:04<00:05, 46905.74it/s] 51%|█████     | 281212/552076 [00:05<00:05, 49992.69it/s] 52%|█████▏    | 286845/552076 [00:05<00:05, 51738.02it/s] 53%|█████▎    | 292728/552076 [00:05<00:04, 52437.93it/s] 54%|█████▍    | 298495/552076 [00:05<00:04, 52511.65it/s] 55%|█████▌    | 304033/552076 [00:05<00:04, 53177.78it/s] 56%|█████▌    | 309388/552076 [00:05<00:04, 50474.23it/s] 57%|█████▋    | 314490/552076 [00:05<00:04, 48954.91it/s] 58%|█████▊    | 320559/552076 [00:05<00:04, 50938.53it/s] 59%|█████▉    | 325708/552076 [00:05<00:04, 50966.34it/s] 60%|█████▉    | 330843/552076 [00:06<00:04, 50635.59it/s] 61%|██████    | 336011/552076 [00:06<00:04, 50388.25it/s] 62%|██████▏   | 342148/552076 [00:06<00:04, 51865.41it/s] 63%|██████▎   | 348220/552076 [00:06<00:03, 53188.52it/s] 64%|██████▍   | 353565/552076 [00:06<00:03, 50035.96it/s] 65%|██████▌   | 359682/552076 [00:06<00:03, 52502.36it/s] 66%|██████▌   | 365047/552076 [00:06<00:03, 50514.60it/s] 67%|██████▋   | 370624/552076 [00:06<00:03, 51704.23it/s] 68%|██████▊   | 376894/552076 [00:06<00:03, 54574.72it/s] 69%|██████▉   | 383136/552076 [00:06<00:03, 55551.03it/s] 70%|███████   | 388752/552076 [00:07<00:03, 51423.42it/s] 71%|███████▏  | 393998/552076 [00:07<00:03, 50661.28it/s] 72%|███████▏  | 399139/552076 [00:07<00:03, 49833.43it/s] 73%|███████▎  | 405122/552076 [00:07<00:02, 52361.84it/s] 74%|███████▍  | 410431/552076 [00:07<00:02, 48120.67it/s] 75%|███████▌  | 416127/552076 [00:07<00:02, 50470.06it/s] 76%|███████▋  | 421288/552076 [00:07<00:02, 47582.27it/s] 77%|███████▋  | 426160/552076 [00:07<00:02, 45065.73it/s] 78%|███████▊  | 430774/552076 [00:08<00:02, 43624.06it/s] 79%|███████▉  | 435884/552076 [00:08<00:02, 45625.90it/s] 80%|███████▉  | 441353/552076 [00:08<00:02, 47116.33it/s] 81%|████████  | 446136/552076 [00:08<00:02, 46862.46it/s] 82%|████████▏ | 450873/552076 [00:08<00:02, 45182.43it/s] 83%|████████▎ | 456049/552076 [00:08<00:02, 46274.23it/s] 84%|████████▍ | 462446/552076 [00:08<00:01, 50461.66it/s] 85%|████████▍ | 467633/552076 [00:08<00:01, 50519.53it/s] 86%|████████▌ | 472784/552076 [00:08<00:01, 46818.11it/s] 87%|████████▋ | 477589/552076 [00:09<00:01, 43760.11it/s] 87%|████████▋ | 482092/552076 [00:09<00:01, 43457.47it/s] 88%|████████▊ | 486527/552076 [00:09<00:01, 42973.19it/s] 89%|████████▉ | 490888/552076 [00:09<00:01, 42457.20it/s] 90%|████████▉ | 495180/552076 [00:09<00:01, 42409.35it/s] 90%|█████████ | 499454/552076 [00:09<00:01, 41164.67it/s] 91%|█████████ | 503626/552076 [00:09<00:01, 41329.37it/s] 92%|█████████▏| 507781/552076 [00:09<00:01, 41356.39it/s] 93%|█████████▎| 511932/552076 [00:09<00:00, 40767.67it/s] 93%|█████████▎| 516130/552076 [00:09<00:00, 41123.45it/s] 94%|█████████▍| 520472/552076 [00:10<00:00, 40970.26it/s] 95%|█████████▌| 525010/552076 [00:10<00:00, 41100.92it/s] 96%|█████████▌| 529206/552076 [00:10<00:00, 41073.62it/s] 97%|█████████▋| 533719/552076 [00:10<00:00, 41059.42it/s] 97%|█████████▋| 538191/552076 [00:10<00:00, 41195.80it/s] 98%|█████████▊| 542313/552076 [00:10<00:00, 36486.69it/s] 99%|█████████▉| 546843/552076 [00:10<00:00, 38747.65it/s]100%|█████████▉| 551645/552076 [00:10<00:00, 41129.35it/s]100%|██████████| 552076/552076 [00:10<00:00, 50887.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3912/552076 [00:00<00:14, 37858.19it/s]  1%|▏         | 7453/552076 [00:00<00:15, 36209.78it/s]  2%|▏         | 11266/552076 [00:00<00:14, 36691.90it/s]  3%|▎         | 15851/552076 [00:00<00:13, 38344.16it/s]  4%|▎         | 19392/552076 [00:00<00:15, 35512.18it/s]  4%|▍         | 23855/552076 [00:00<00:14, 36821.18it/s]  5%|▌         | 28308/552076 [00:00<00:13, 38119.43it/s]  6%|▌         | 33266/552076 [00:00<00:12, 40465.24it/s]  7%|▋         | 37169/552076 [00:00<00:13, 38633.64it/s]  7%|▋         | 40950/552076 [00:01<00:13, 36907.55it/s]  8%|▊         | 44599/552076 [00:01<00:13, 36446.11it/s]  9%|▊         | 48216/552076 [00:01<00:14, 35698.47it/s]  9%|▉         | 52047/552076 [00:01<00:14, 35224.12it/s] 10%|█         | 56819/552076 [00:01<00:13, 38026.77it/s] 11%|█         | 61855/552076 [00:01<00:11, 41041.78it/s] 12%|█▏        | 66068/552076 [00:01<00:11, 41346.57it/s] 13%|█▎        | 70280/552076 [00:01<00:12, 38022.65it/s] 13%|█▎        | 74189/552076 [00:01<00:12, 37994.82it/s] 14%|█▍        | 78063/552076 [00:02<00:12, 38068.11it/s] 15%|█▌        | 83011/552076 [00:02<00:11, 40897.21it/s] 16%|█▌        | 87197/552076 [00:02<00:11, 40891.42it/s] 17%|█▋        | 91899/552076 [00:02<00:10, 42080.98it/s] 17%|█▋        | 96510/552076 [00:02<00:10, 42570.29it/s] 18%|█▊        | 100808/552076 [00:02<00:10, 42587.94it/s] 19%|█▉        | 105861/552076 [00:02<00:10, 43670.99it/s] 20%|█▉        | 110255/552076 [00:02<00:11, 39836.59it/s] 21%|██        | 114323/552076 [00:02<00:11, 38725.19it/s] 21%|██▏       | 118261/552076 [00:03<00:11, 37187.63it/s] 22%|██▏       | 122877/552076 [00:03<00:10, 39189.31it/s] 23%|██▎       | 126970/552076 [00:03<00:10, 39694.62it/s] 24%|██▎       | 130990/552076 [00:03<00:11, 36266.52it/s] 25%|██▍       | 135565/552076 [00:03<00:10, 38577.85it/s] 25%|██▌       | 139529/552076 [00:03<00:11, 34798.39it/s] 26%|██▌       | 143477/552076 [00:03<00:11, 35832.01it/s] 27%|██▋       | 147169/552076 [00:03<00:11, 36085.46it/s] 27%|██▋       | 151712/552076 [00:03<00:10, 38066.94it/s] 28%|██▊       | 155625/552076 [00:04<00:10, 37768.59it/s] 29%|██▉       | 159461/552076 [00:04<00:10, 37465.34it/s] 30%|██▉       | 163807/552076 [00:04<00:10, 38461.00it/s] 30%|███       | 167689/552076 [00:04<00:10, 36626.66it/s] 31%|███       | 172036/552076 [00:04<00:09, 38374.11it/s] 32%|███▏      | 176697/552076 [00:04<00:09, 40522.02it/s] 34%|███▍      | 187499/552076 [00:04<00:07, 49870.51it/s] 36%|███▌      | 199520/552076 [00:04<00:05, 60488.14it/s] 38%|███▊      | 211701/552076 [00:04<00:04, 71247.72it/s] 41%|████      | 223846/552076 [00:04<00:04, 81332.58it/s] 43%|████▎     | 235897/552076 [00:05<00:03, 90121.54it/s] 45%|████▍     | 248118/552076 [00:05<00:03, 97826.92it/s] 47%|████▋     | 260386/552076 [00:05<00:02, 104155.42it/s] 49%|████▉     | 272697/552076 [00:05<00:02, 109199.16it/s] 52%|█████▏    | 285015/552076 [00:05<00:02, 113045.79it/s] 54%|█████▍    | 296917/552076 [00:05<00:02, 114191.15it/s] 56%|█████▌    | 308757/552076 [00:05<00:02, 108672.18it/s] 58%|█████▊    | 320981/552076 [00:05<00:02, 112414.46it/s] 60%|██████    | 333314/552076 [00:05<00:01, 115479.96it/s] 63%|██████▎   | 345591/552076 [00:05<00:01, 117573.24it/s] 65%|██████▍   | 357737/552076 [00:06<00:01, 118711.94it/s] 67%|██████▋   | 369723/552076 [00:06<00:01, 118101.17it/s] 69%|██████▉   | 381615/552076 [00:06<00:01, 118314.00it/s] 71%|███████▏  | 393545/552076 [00:06<00:01, 118605.08it/s] 73%|███████▎  | 405621/552076 [00:06<00:01, 119240.78it/s] 76%|███████▌  | 417574/552076 [00:06<00:01, 91768.58it/s]  78%|███████▊  | 427996/552076 [00:06<00:01, 94801.10it/s] 79%|███████▉  | 438188/552076 [00:06<00:01, 89633.14it/s] 82%|████████▏ | 450296/552076 [00:06<00:01, 97205.80it/s] 84%|████████▍ | 462537/552076 [00:07<00:00, 103604.41it/s] 86%|████████▌ | 474809/552076 [00:07<00:00, 108681.45it/s] 88%|████████▊ | 486947/552076 [00:07<00:00, 112201.09it/s] 90%|█████████ | 499029/552076 [00:07<00:00, 114653.38it/s] 93%|█████████▎| 511198/552076 [00:07<00:00, 116675.36it/s] 95%|█████████▍| 523362/552076 [00:07<00:00, 118119.65it/s] 97%|█████████▋| 535528/552076 [00:07<00:00, 119157.63it/s] 99%|█████████▉| 547554/552076 [00:07<00:00, 119485.82it/s]100%|██████████| 552076/552076 [00:07<00:00, 70451.36it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11996/552076 [00:00<00:04, 119957.54it/s]  4%|▍         | 23969/552076 [00:00<00:04, 119886.82it/s]  5%|▌         | 30080/552076 [00:00<00:05, 92119.12it/s]   7%|▋         | 40722/552076 [00:00<00:05, 95988.39it/s]  9%|▉         | 49865/552076 [00:00<00:05, 94522.48it/s] 11%|█         | 60073/552076 [00:00<00:05, 95587.11it/s] 12%|█▏        | 68582/552076 [00:00<00:05, 87074.97it/s] 15%|█▍        | 80672/552076 [00:00<00:04, 95051.81it/s] 16%|█▋        | 90026/552076 [00:00<00:04, 94591.96it/s] 19%|█▊        | 102136/552076 [00:01<00:04, 101239.33it/s] 21%|██        | 114403/552076 [00:01<00:04, 106837.57it/s] 23%|██▎       | 126625/552076 [00:01<00:03, 111028.15it/s] 25%|██▍       | 137937/552076 [00:01<00:03, 111645.21it/s] 27%|██▋       | 149952/552076 [00:01<00:03, 114066.27it/s] 29%|██▉       | 162088/552076 [00:01<00:03, 116157.97it/s] 32%|███▏      | 174221/552076 [00:01<00:03, 117662.14it/s] 34%|███▍      | 186489/552076 [00:01<00:03, 119122.41it/s] 36%|███▌      | 198901/552076 [00:01<00:02, 120578.11it/s] 38%|███▊      | 211283/552076 [00:01<00:02, 121530.27it/s] 41%|████      | 223668/552076 [00:02<00:02, 122216.62it/s] 43%|████▎     | 235907/552076 [00:02<00:02, 122172.33it/s] 45%|████▍     | 248137/552076 [00:02<00:02, 122115.85it/s] 47%|████▋     | 260357/552076 [00:02<00:02, 122136.05it/s] 49%|████▉     | 272577/552076 [00:02<00:02, 121783.02it/s] 52%|█████▏    | 284760/552076 [00:02<00:02, 121676.73it/s] 54%|█████▍    | 296931/552076 [00:02<00:02, 121466.29it/s] 56%|█████▌    | 309080/552076 [00:02<00:02, 120576.88it/s] 58%|█████▊    | 321338/552076 [00:02<00:01, 121169.57it/s] 60%|██████    | 333458/552076 [00:02<00:01, 111641.13it/s] 62%|██████▏   | 344772/552076 [00:03<00:01, 107623.14it/s] 65%|██████▍   | 357122/552076 [00:03<00:01, 111938.30it/s] 67%|██████▋   | 369498/552076 [00:03<00:01, 115238.86it/s] 69%|██████▉   | 381761/552076 [00:03<00:01, 117359.76it/s] 71%|███████▏  | 394132/552076 [00:03<00:01, 119192.63it/s] 74%|███████▎  | 406380/552076 [00:03<00:01, 120157.41it/s] 76%|███████▌  | 418740/552076 [00:03<00:01, 121167.88it/s] 78%|███████▊  | 431126/552076 [00:03<00:00, 121960.86it/s] 80%|████████  | 443488/552076 [00:03<00:00, 122451.69it/s] 83%|████████▎ | 455813/552076 [00:03<00:00, 122686.28it/s] 85%|████████▍ | 468097/552076 [00:04<00:00, 121386.95it/s] 87%|████████▋ | 480425/552076 [00:04<00:00, 121946.78it/s] 89%|████████▉ | 492809/552076 [00:04<00:00, 122507.12it/s] 91%|█████████▏| 505144/552076 [00:04<00:00, 122756.88it/s] 94%|█████████▎| 517426/552076 [00:04<00:00, 122654.91it/s] 96%|█████████▌| 529766/552076 [00:04<00:00, 122877.26it/s] 98%|█████████▊| 542118/552076 [00:04<00:00, 123068.63it/s]100%|██████████| 552076/552076 [00:04<00:00, 116070.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8314/552076 [00:00<00:06, 83139.29it/s]  4%|▎         | 20292/552076 [00:00<00:05, 91539.03it/s]  6%|▌         | 32470/552076 [00:00<00:05, 98906.76it/s]  8%|▊         | 44705/552076 [00:00<00:04, 104936.80it/s] 10%|█         | 56851/552076 [00:00<00:04, 109401.53it/s] 13%|█▎        | 69108/552076 [00:00<00:04, 113042.72it/s] 15%|█▍        | 81409/552076 [00:00<00:04, 115858.87it/s] 17%|█▋        | 93826/552076 [00:00<00:03, 118232.54it/s] 19%|█▉        | 106022/552076 [00:00<00:03, 119326.50it/s] 21%|██▏       | 118230/552076 [00:01<00:03, 120137.76it/s] 24%|██▎       | 130626/552076 [00:01<00:03, 121257.03it/s] 26%|██▌       | 142640/552076 [00:01<00:03, 119580.71it/s] 28%|██▊       | 154964/552076 [00:01<00:03, 120655.26it/s] 30%|███       | 167216/552076 [00:01<00:03, 121206.24it/s] 33%|███▎      | 179583/552076 [00:01<00:03, 121933.57it/s] 35%|███▍      | 191754/552076 [00:01<00:02, 120505.02it/s] 37%|███▋      | 203865/552076 [00:01<00:02, 120685.74it/s] 39%|███▉      | 216162/552076 [00:01<00:02, 121359.52it/s] 41%|████▏     | 228345/552076 [00:01<00:02, 121498.85it/s] 44%|████▎     | 240670/552076 [00:02<00:02, 122018.81it/s] 46%|████▌     | 252871/552076 [00:02<00:02, 121149.37it/s] 48%|████▊     | 264987/552076 [00:02<00:02, 119434.86it/s] 50%|█████     | 276937/552076 [00:02<00:02, 119285.47it/s] 52%|█████▏    | 288870/552076 [00:02<00:02, 118189.45it/s] 55%|█████▍    | 301207/552076 [00:02<00:02, 119694.56it/s] 57%|█████▋    | 313590/552076 [00:02<00:01, 120904.16it/s] 59%|█████▉    | 325690/552076 [00:02<00:01, 120417.39it/s] 61%|██████    | 337739/552076 [00:02<00:01, 117929.66it/s] 63%|██████▎   | 349548/552076 [00:02<00:01, 110936.45it/s] 65%|██████▌   | 360738/552076 [00:03<00:01, 105466.42it/s] 67%|██████▋   | 371409/552076 [00:03<00:01, 104252.46it/s] 69%|██████▉   | 381925/552076 [00:03<00:01, 94488.86it/s]  71%|███████   | 392592/552076 [00:03<00:01, 97838.83it/s] 73%|███████▎  | 402573/552076 [00:03<00:01, 84373.94it/s] 75%|███████▍  | 411476/552076 [00:03<00:01, 70850.54it/s] 76%|███████▌  | 419255/552076 [00:03<00:02, 63282.31it/s] 77%|███████▋  | 426931/552076 [00:03<00:01, 66777.77it/s] 79%|███████▉  | 436868/552076 [00:04<00:01, 74065.00it/s] 81%|████████  | 448551/552076 [00:04<00:01, 83200.48it/s] 83%|████████▎ | 460531/552076 [00:04<00:00, 91595.11it/s] 86%|████████▌ | 472446/552076 [00:04<00:00, 98423.16it/s] 87%|████████▋ | 482999/552076 [00:04<00:00, 100271.27it/s] 89%|████████▉ | 493532/552076 [00:04<00:00, 101266.80it/s] 92%|█████████▏| 505650/552076 [00:04<00:00, 106517.57it/s] 94%|█████████▎| 517470/552076 [00:04<00:00, 109771.86it/s] 96%|█████████▌| 529468/552076 [00:04<00:00, 112645.12it/s] 98%|█████████▊| 541523/552076 [00:04<00:00, 114903.23it/s]100%|██████████| 552076/552076 [00:05<00:00, 108656.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11616/552076 [00:00<00:04, 116152.91it/s]  4%|▎         | 20535/552076 [00:00<00:04, 106493.58it/s]  6%|▌         | 31013/552076 [00:00<00:04, 105973.37it/s]  8%|▊         | 42822/552076 [00:00<00:04, 109338.37it/s] 10%|▉         | 54590/552076 [00:00<00:04, 111713.11it/s] 12%|█▏        | 66468/552076 [00:00<00:04, 113743.08it/s] 14%|█▍        | 78532/552076 [00:00<00:04, 115725.40it/s] 16%|█▋        | 90579/552076 [00:00<00:03, 117106.50it/s] 19%|█▊        | 102512/552076 [00:00<00:03, 117763.42it/s] 21%|██        | 114172/552076 [00:01<00:03, 117411.83it/s] 23%|██▎       | 125608/552076 [00:01<00:03, 106784.32it/s] 25%|██▍       | 137483/552076 [00:01<00:03, 110112.53it/s] 27%|██▋       | 149388/552076 [00:01<00:03, 112647.52it/s] 29%|██▉       | 161479/552076 [00:01<00:03, 115004.22it/s] 31%|███▏      | 173419/552076 [00:01<00:03, 116287.89it/s] 34%|███▎      | 185287/552076 [00:01<00:03, 116994.05it/s] 36%|███▌      | 197190/552076 [00:01<00:03, 117596.27it/s] 38%|███▊      | 208982/552076 [00:01<00:02, 117691.47it/s] 40%|███▉      | 220760/552076 [00:01<00:02, 117299.20it/s] 42%|████▏     | 232496/552076 [00:02<00:02, 106954.57it/s] 44%|████▍     | 243941/552076 [00:02<00:02, 109097.11it/s] 46%|████▋     | 255611/552076 [00:02<00:02, 111271.23it/s] 48%|████▊     | 266980/552076 [00:02<00:02, 111984.60it/s] 50%|█████     | 278709/552076 [00:02<00:02, 113522.25it/s] 53%|█████▎    | 290367/552076 [00:02<00:02, 114419.66it/s] 55%|█████▍    | 302109/552076 [00:02<00:02, 115301.79it/s] 57%|█████▋    | 313911/552076 [00:02<00:02, 116102.50it/s] 59%|█████▉    | 325581/552076 [00:02<00:01, 116280.06it/s] 61%|██████    | 337226/552076 [00:02<00:01, 110845.50it/s] 63%|██████▎   | 348483/552076 [00:03<00:01, 111355.34it/s] 65%|██████▌   | 360297/552076 [00:03<00:01, 113306.03it/s] 67%|██████▋   | 372241/552076 [00:03<00:01, 115078.11it/s] 70%|██████▉   | 385436/552076 [00:03<00:01, 119667.98it/s] 72%|███████▏  | 397475/552076 [00:03<00:01, 119687.47it/s] 74%|███████▍  | 409494/552076 [00:03<00:01, 115341.49it/s] 76%|███████▋  | 421098/552076 [00:03<00:01, 94478.53it/s]  78%|███████▊  | 433161/552076 [00:03<00:01, 101048.73it/s] 81%|████████  | 445292/552076 [00:03<00:01, 106377.53it/s] 83%|████████▎ | 456421/552076 [00:04<00:00, 106559.99it/s] 85%|████████▍ | 468130/552076 [00:04<00:00, 109513.55it/s] 87%|████████▋ | 479343/552076 [00:04<00:00, 102206.15it/s] 89%|████████▊ | 489845/552076 [00:04<00:00, 100519.97it/s] 91%|█████████ | 502058/552076 [00:04<00:00, 106154.61it/s] 95%|█████████▍| 524395/552076 [00:04<00:00, 125988.34it/s] 99%|█████████▉| 547074/552076 [00:04<00:00, 145371.94it/s]100%|██████████| 552076/552076 [00:04<00:00, 116702.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20570/552076 [00:00<00:02, 205694.31it/s]  8%|▊         | 42253/552076 [00:00<00:02, 208912.23it/s] 12%|█▏        | 64839/552076 [00:00<00:02, 213721.97it/s] 14%|█▍        | 79192/552076 [00:00<00:02, 185330.35it/s] 18%|█▊        | 96988/552076 [00:00<00:02, 183044.00it/s] 21%|██        | 117293/552076 [00:00<00:02, 188618.43it/s] 25%|██▌       | 139257/552076 [00:00<00:02, 196960.98it/s] 29%|██▉       | 161859/552076 [00:00<00:01, 204862.16it/s] 33%|███▎      | 181499/552076 [00:00<00:02, 181099.61it/s] 36%|███▌      | 199523/552076 [00:01<00:01, 178338.47it/s] 40%|████      | 221038/552076 [00:01<00:01, 187985.88it/s] 44%|████▎     | 241411/552076 [00:01<00:01, 192446.69it/s] 48%|████▊     | 263526/552076 [00:01<00:01, 200243.44it/s] 52%|█████▏    | 285000/552076 [00:01<00:01, 204379.92it/s] 55%|█████▌    | 306156/552076 [00:01<00:01, 206482.16it/s] 60%|█████▉    | 328733/552076 [00:01<00:01, 211912.86it/s] 64%|██████▎   | 351022/552076 [00:01<00:00, 215088.90it/s] 68%|██████▊   | 372853/552076 [00:01<00:00, 216044.50it/s] 71%|███████▏  | 394517/552076 [00:01<00:00, 214566.59it/s] 75%|███████▌  | 416017/552076 [00:02<00:00, 213693.56it/s] 80%|███████▉  | 438979/552076 [00:02<00:00, 218234.35it/s] 84%|████████▎ | 461848/552076 [00:02<00:00, 221267.64it/s] 88%|████████▊ | 484017/552076 [00:02<00:00, 217188.45it/s] 92%|█████████▏| 505783/552076 [00:02<00:00, 217109.43it/s] 96%|█████████▌| 527527/552076 [00:02<00:00, 216941.49it/s] 99%|█████████▉| 549244/552076 [00:02<00:00, 213658.12it/s]100%|██████████| 552076/552076 [00:02<00:00, 206471.48it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16706/552076 [00:00<00:03, 167056.18it/s]  6%|▋         | 35059/552076 [00:00<00:03, 171677.18it/s] 10%|█         | 56120/552076 [00:00<00:02, 181755.16it/s] 14%|█▍        | 77189/552076 [00:00<00:02, 189563.61it/s] 18%|█▊        | 98234/552076 [00:00<00:02, 195379.88it/s] 22%|██▏       | 120854/552076 [00:00<00:02, 203706.27it/s] 26%|██▌       | 143710/552076 [00:00<00:01, 210573.82it/s] 30%|███       | 165638/552076 [00:00<00:01, 213109.15it/s] 34%|███▍      | 187444/552076 [00:00<00:01, 214567.98it/s] 38%|███▊      | 209307/552076 [00:01<00:01, 215769.19it/s] 42%|████▏     | 231923/552076 [00:01<00:01, 218782.11it/s] 46%|████▌     | 253539/552076 [00:01<00:01, 193551.03it/s] 49%|████▉     | 273246/552076 [00:01<00:01, 165120.16it/s] 53%|█████▎    | 290730/552076 [00:01<00:01, 148744.99it/s] 56%|█████▌    | 306593/552076 [00:01<00:01, 139045.39it/s] 58%|█████▊    | 321318/552076 [00:01<00:01, 130836.56it/s] 61%|██████    | 335075/552076 [00:01<00:01, 127287.63it/s] 63%|██████▎   | 348297/552076 [00:02<00:01, 125174.32it/s] 65%|██████▌   | 361167/552076 [00:02<00:01, 123951.61it/s] 68%|██████▊   | 373812/552076 [00:02<00:01, 123512.26it/s] 70%|██████▉   | 386339/552076 [00:02<00:01, 122860.31it/s] 72%|███████▏  | 398749/552076 [00:02<00:01, 122743.28it/s] 74%|███████▍  | 411110/552076 [00:02<00:01, 122686.13it/s] 77%|███████▋  | 423440/552076 [00:02<00:01, 121924.44it/s] 79%|███████▉  | 435676/552076 [00:02<00:00, 122047.07it/s] 81%|████████  | 447912/552076 [00:02<00:00, 121928.49it/s] 83%|████████▎ | 460184/552076 [00:02<00:00, 122164.82it/s] 86%|████████▌ | 472417/552076 [00:03<00:00, 122212.18it/s] 88%|████████▊ | 484759/552076 [00:03<00:00, 122569.80it/s] 90%|█████████ | 497024/552076 [00:03<00:00, 122583.02it/s] 92%|█████████▏| 509288/552076 [00:03<00:00, 122262.87it/s] 94%|█████████▍| 521519/552076 [00:03<00:00, 121374.94it/s] 97%|█████████▋| 533661/552076 [00:03<00:00, 121172.48it/s] 99%|█████████▉| 545933/552076 [00:03<00:00, 121632.14it/s]100%|██████████| 552076/552076 [00:03<00:00, 149069.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11592/552076 [00:00<00:04, 115914.03it/s]  4%|▍         | 23537/552076 [00:00<00:04, 116950.30it/s]  6%|▋         | 35537/552076 [00:00<00:04, 117848.76it/s]  9%|▊         | 47573/552076 [00:00<00:04, 118590.09it/s] 11%|█         | 59706/552076 [00:00<00:04, 119397.17it/s] 13%|█▎        | 71946/552076 [00:00<00:03, 120281.11it/s] 15%|█▌        | 84259/552076 [00:00<00:03, 121120.51it/s] 17%|█▋        | 96447/552076 [00:00<00:03, 121346.62it/s] 20%|█▉        | 108776/552076 [00:00<00:03, 121922.17it/s] 22%|██▏       | 121028/552076 [00:01<00:03, 122100.77it/s] 24%|██▍       | 133224/552076 [00:01<00:03, 122058.27it/s] 26%|██▋       | 145476/552076 [00:01<00:03, 122195.33it/s] 29%|██▊       | 157537/552076 [00:01<00:03, 120286.45it/s] 31%|███       | 169745/552076 [00:01<00:03, 116662.66it/s] 33%|███▎      | 181362/552076 [00:01<00:03, 110584.11it/s] 35%|███▌      | 193658/552076 [00:01<00:03, 114025.74it/s] 37%|███▋      | 205735/552076 [00:01<00:02, 115966.70it/s] 39%|███▉      | 217887/552076 [00:01<00:02, 117577.06it/s] 42%|████▏     | 230164/552076 [00:01<00:02, 119087.76it/s] 44%|████▍     | 242483/552076 [00:02<00:02, 120287.14it/s] 46%|████▌     | 254535/552076 [00:02<00:02, 119096.13it/s] 48%|████▊     | 266745/552076 [00:02<00:02, 119981.52it/s] 51%|█████     | 279131/552076 [00:02<00:02, 121118.51it/s] 53%|█████▎    | 291481/552076 [00:02<00:02, 121822.08it/s] 55%|█████▌    | 303820/552076 [00:02<00:02, 122287.95it/s] 57%|█████▋    | 316089/552076 [00:02<00:01, 122405.61it/s] 59%|█████▉    | 328335/552076 [00:02<00:01, 122386.69it/s] 62%|██████▏   | 340578/552076 [00:02<00:01, 120784.08it/s] 64%|██████▍   | 352664/552076 [00:02<00:01, 112695.58it/s] 66%|██████▌   | 364909/552076 [00:03<00:01, 115453.91it/s] 68%|██████▊   | 377248/552076 [00:03<00:01, 117724.10it/s] 71%|███████   | 389550/552076 [00:03<00:01, 119262.58it/s] 73%|███████▎  | 401842/552076 [00:03<00:01, 120334.25it/s] 75%|███████▌  | 414255/552076 [00:03<00:01, 121446.97it/s] 77%|███████▋  | 426434/552076 [00:03<00:01, 120124.71it/s] 79%|███████▉  | 438848/552076 [00:03<00:00, 121299.92it/s] 82%|████████▏ | 451262/552076 [00:03<00:00, 122136.35it/s] 84%|████████▍ | 463679/552076 [00:03<00:00, 122737.54it/s] 86%|████████▌ | 476027/552076 [00:03<00:00, 122958.50it/s] 88%|████████▊ | 488436/552076 [00:04<00:00, 123292.83it/s] 91%|█████████ | 500832/552076 [00:04<00:00, 123491.38it/s] 93%|█████████▎| 513186/552076 [00:04<00:00, 118679.43it/s] 95%|█████████▌| 525098/552076 [00:04<00:00, 105462.09it/s] 97%|█████████▋| 535948/552076 [00:04<00:00, 101931.79it/s] 99%|█████████▉| 547576/552076 [00:04<00:00, 105849.01it/s]100%|██████████| 552076/552076 [00:04<00:00, 118010.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10165/552076 [00:00<00:05, 101641.37it/s]  3%|▎         | 17427/552076 [00:00<00:05, 90759.93it/s]   5%|▌         | 28198/552076 [00:00<00:05, 95256.40it/s]  7%|▋         | 38316/552076 [00:00<00:05, 96958.12it/s]  8%|▊         | 45727/552076 [00:00<00:06, 82862.74it/s] 10%|█         | 55650/552076 [00:00<00:05, 87174.74it/s] 12%|█▏        | 67980/552076 [00:00<00:05, 95574.83it/s] 15%|█▍        | 80412/552076 [00:00<00:04, 102696.74it/s] 17%|█▋        | 92931/552076 [00:00<00:04, 108546.34it/s] 19%|█▉        | 105427/552076 [00:01<00:03, 112997.83it/s] 21%|██▏       | 117891/552076 [00:01<00:03, 116253.78it/s] 24%|██▎       | 130188/552076 [00:01<00:03, 118190.04it/s] 26%|██▌       | 142681/552076 [00:01<00:03, 120133.87it/s] 28%|██▊       | 155076/552076 [00:01<00:03, 121251.89it/s] 30%|███       | 167413/552076 [00:01<00:03, 121876.58it/s] 33%|███▎      | 179693/552076 [00:01<00:03, 122149.66it/s] 35%|███▍      | 191927/552076 [00:01<00:03, 117364.25it/s] 37%|███▋      | 203717/552076 [00:01<00:02, 116753.25it/s] 39%|███▉      | 215763/552076 [00:01<00:02, 117839.40it/s] 41%|████      | 227576/552076 [00:02<00:03, 99594.45it/s]  43%|████▎     | 238040/552076 [00:02<00:03, 98287.55it/s] 45%|████▍     | 248226/552076 [00:02<00:03, 92118.83it/s] 47%|████▋     | 259350/552076 [00:02<00:03, 97125.33it/s] 49%|████▉     | 272185/552076 [00:02<00:02, 104770.12it/s] 52%|█████▏    | 285212/552076 [00:02<00:02, 111304.73it/s] 54%|█████▍    | 298191/552076 [00:02<00:02, 116272.63it/s] 56%|█████▋    | 311153/552076 [00:02<00:02, 119978.02it/s] 59%|█████▊    | 323808/552076 [00:02<00:01, 121874.40it/s] 61%|██████▏   | 338471/552076 [00:03<00:01, 128374.66it/s] 64%|██████▎   | 351712/552076 [00:03<00:01, 129558.69it/s] 66%|██████▌   | 365189/552076 [00:03<00:01, 131076.75it/s] 69%|██████▊   | 378831/552076 [00:03<00:01, 132632.80it/s] 71%|███████   | 392327/552076 [00:03<00:01, 133321.59it/s] 73%|███████▎  | 405720/552076 [00:03<00:01, 132588.40it/s] 76%|███████▌  | 419023/552076 [00:03<00:01, 131677.70it/s] 78%|███████▊  | 432223/552076 [00:03<00:01, 119761.02it/s] 81%|████████  | 444430/552076 [00:03<00:00, 114637.22it/s] 83%|████████▎ | 456102/552076 [00:04<00:00, 101580.10it/s] 85%|████████▍ | 466680/552076 [00:04<00:01, 73732.98it/s]  86%|████████▌ | 475434/552076 [00:04<00:01, 75496.27it/s] 89%|████████▊ | 488736/552076 [00:04<00:00, 86750.46it/s] 91%|█████████ | 502306/552076 [00:04<00:00, 97276.46it/s] 93%|█████████▎| 514186/552076 [00:04<00:00, 102866.06it/s] 95%|█████████▌| 525480/552076 [00:04<00:00, 91613.63it/s]  97%|█████████▋| 535575/552076 [00:04<00:00, 87436.52it/s] 99%|█████████▊| 545153/552076 [00:05<00:00, 89782.08it/s]100%|██████████| 552076/552076 [00:05<00:00, 107263.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4758/552076 [00:00<00:11, 47579.93it/s]  2%|▏         | 9777/552076 [00:00<00:11, 48332.88it/s]  2%|▏         | 13669/552076 [00:00<00:12, 43472.10it/s]  3%|▎         | 18847/552076 [00:00<00:11, 45435.88it/s]  6%|▌         | 31139/552076 [00:00<00:09, 56031.97it/s]  8%|▊         | 44403/552076 [00:00<00:07, 67775.20it/s] 11%|█         | 58068/552076 [00:00<00:06, 79848.66it/s] 13%|█▎        | 71602/552076 [00:00<00:05, 91047.66it/s] 15%|█▌        | 85341/552076 [00:00<00:04, 101297.45it/s] 18%|█▊        | 99065/552076 [00:01<00:04, 109933.97it/s] 20%|██        | 112852/552076 [00:01<00:03, 117047.66it/s] 23%|██▎       | 125657/552076 [00:01<00:03, 112595.89it/s] 25%|██▌       | 138981/552076 [00:01<00:03, 118083.06it/s] 27%|██▋       | 151424/552076 [00:01<00:03, 105479.22it/s] 29%|██▉       | 162668/552076 [00:01<00:03, 98965.27it/s]  31%|███▏      | 173134/552076 [00:01<00:04, 92745.76it/s] 33%|███▎      | 182887/552076 [00:01<00:04, 84516.50it/s] 35%|███▍      | 191815/552076 [00:01<00:04, 81993.42it/s] 36%|███▋      | 200364/552076 [00:02<00:04, 80947.34it/s] 38%|███▊      | 209776/552076 [00:02<00:04, 84494.39it/s] 40%|███▉      | 219118/552076 [00:02<00:03, 86986.34it/s] 41%|████▏     | 227985/552076 [00:02<00:03, 85643.46it/s] 43%|████▎     | 236672/552076 [00:02<00:03, 83234.64it/s] 44%|████▍     | 245465/552076 [00:02<00:03, 84588.30it/s] 46%|████▌     | 254000/552076 [00:02<00:03, 84008.41it/s] 48%|████▊     | 262455/552076 [00:02<00:03, 80276.43it/s] 49%|████▉     | 270556/552076 [00:02<00:03, 80103.95it/s] 51%|█████     | 282107/552076 [00:03<00:03, 88215.84it/s] 53%|█████▎    | 294324/552076 [00:03<00:02, 96238.51it/s] 56%|█████▌    | 306630/552076 [00:03<00:02, 102970.60it/s] 58%|█████▊    | 319067/552076 [00:03<00:02, 108573.91it/s] 60%|██████    | 331387/552076 [00:03<00:01, 112582.71it/s] 62%|██████▏   | 343740/552076 [00:03<00:01, 115657.16it/s] 65%|██████▍   | 356182/552076 [00:03<00:01, 118152.04it/s] 67%|██████▋   | 368574/552076 [00:03<00:01, 119824.04it/s] 69%|██████▉   | 380940/552076 [00:03<00:01, 120948.45it/s] 71%|███████   | 393128/552076 [00:03<00:01, 117962.19it/s] 73%|███████▎  | 405514/552076 [00:04<00:01, 119669.26it/s] 76%|███████▌  | 417544/552076 [00:04<00:01, 109282.86it/s] 78%|███████▊  | 429861/552076 [00:04<00:01, 113108.56it/s] 80%|███████▉  | 441360/552076 [00:04<00:01, 108243.42it/s] 82%|████████▏ | 452360/552076 [00:04<00:01, 97703.18it/s]  84%|████████▍ | 463024/552076 [00:04<00:00, 100221.78it/s] 86%|████████▌ | 473285/552076 [00:04<00:00, 96641.62it/s]  88%|████████▊ | 483144/552076 [00:04<00:00, 87076.14it/s] 89%|████████▉ | 492168/552076 [00:05<00:00, 83110.71it/s] 91%|█████████▏| 504519/552076 [00:05<00:00, 92152.44it/s] 94%|█████████▍| 517875/552076 [00:05<00:00, 101601.00it/s] 96%|█████████▌| 530698/552076 [00:05<00:00, 108350.90it/s] 99%|█████████▊| 544075/552076 [00:05<00:00, 114900.37it/s]100%|██████████| 552076/552076 [00:05<00:00, 100527.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7796/552076 [00:00<00:06, 77958.40it/s]  3%|▎         | 15552/552076 [00:00<00:06, 77837.80it/s]  5%|▌         | 28061/552076 [00:00<00:05, 87785.18it/s]  7%|▋         | 36878/552076 [00:00<00:05, 87897.29it/s]  8%|▊         | 44092/552076 [00:00<00:06, 72597.05it/s] 10%|█         | 55489/552076 [00:00<00:06, 81468.57it/s] 12%|█▏        | 68715/552076 [00:00<00:05, 92075.69it/s] 15%|█▍        | 81898/552076 [00:00<00:04, 101233.29it/s] 17%|█▋        | 94873/552076 [00:00<00:04, 108377.32it/s] 20%|█▉        | 108067/552076 [00:01<00:03, 114511.38it/s] 22%|██▏       | 120088/552076 [00:01<00:03, 116161.69it/s] 24%|██▍       | 132032/552076 [00:01<00:04, 102199.65it/s] 26%|██▌       | 142788/552076 [00:01<00:04, 94719.25it/s]  28%|██▊       | 155068/552076 [00:01<00:03, 101695.11it/s] 30%|███       | 167307/552076 [00:01<00:03, 107129.22it/s] 33%|███▎      | 179551/552076 [00:01<00:03, 111302.15it/s] 35%|███▍      | 191014/552076 [00:01<00:03, 112052.64it/s] 37%|███▋      | 203281/552076 [00:01<00:03, 115039.60it/s] 39%|███▉      | 215542/552076 [00:02<00:02, 117208.50it/s] 41%|████▏     | 227812/552076 [00:02<00:02, 118801.20it/s] 44%|████▎     | 240241/552076 [00:02<00:02, 120394.45it/s] 46%|████▌     | 252358/552076 [00:02<00:02, 101042.53it/s] 48%|████▊     | 263044/552076 [00:02<00:03, 94898.80it/s]  50%|████▉     | 273594/552076 [00:02<00:02, 93763.48it/s] 51%|█████▏    | 283312/552076 [00:02<00:02, 89652.19it/s] 53%|█████▎    | 292555/552076 [00:02<00:03, 84354.90it/s] 55%|█████▍    | 301249/552076 [00:03<00:03, 75567.37it/s] 56%|█████▌    | 309274/552076 [00:03<00:03, 76621.05it/s] 58%|█████▊    | 317609/552076 [00:03<00:02, 78522.58it/s] 60%|█████▉    | 330429/552076 [00:03<00:02, 88850.61it/s] 63%|██████▎   | 347938/552076 [00:03<00:01, 104254.97it/s] 66%|██████▋   | 366114/552076 [00:03<00:01, 119546.85it/s] 70%|██████▉   | 384346/552076 [00:03<00:01, 133315.69it/s] 73%|███████▎  | 402262/552076 [00:03<00:01, 144398.29it/s] 76%|███████▌  | 418811/552076 [00:03<00:00, 150138.31it/s] 79%|███████▉  | 434942/552076 [00:03<00:00, 151789.04it/s] 82%|████████▏ | 450907/552076 [00:04<00:00, 141000.93it/s] 84%|████████▍ | 465711/552076 [00:04<00:00, 142085.74it/s] 87%|████████▋ | 482310/552076 [00:04<00:00, 148501.40it/s] 91%|█████████ | 501109/552076 [00:04<00:00, 158488.85it/s] 94%|█████████▍| 517984/552076 [00:04<00:00, 161431.90it/s] 97%|█████████▋| 534478/552076 [00:04<00:00, 161991.09it/s]100%|█████████▉| 550923/552076 [00:04<00:00, 149578.49it/s]100%|██████████| 552076/552076 [00:04<00:00, 117474.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11895/552076 [00:00<00:04, 118944.44it/s]  5%|▍         | 24952/552076 [00:00<00:04, 122208.64it/s]  7%|▋         | 38400/552076 [00:00<00:04, 125646.63it/s] 10%|▉         | 52957/552076 [00:00<00:03, 131025.35it/s] 12%|█▏        | 67461/552076 [00:00<00:03, 134935.03it/s] 15%|█▍        | 81677/552076 [00:00<00:03, 137023.40it/s] 17%|█▋        | 94733/552076 [00:00<00:03, 135016.51it/s] 20%|█▉        | 108484/552076 [00:00<00:03, 135753.90it/s] 22%|██▏       | 122201/552076 [00:00<00:03, 136172.98it/s] 25%|██▍       | 135996/552076 [00:01<00:03, 136700.72it/s] 27%|██▋       | 149666/552076 [00:01<00:02, 136700.44it/s] 30%|██▉       | 163116/552076 [00:01<00:02, 135694.46it/s] 32%|███▏      | 177165/552076 [00:01<00:02, 137096.13it/s] 35%|███▌      | 194948/552076 [00:01<00:02, 147211.38it/s] 39%|███▊      | 213480/552076 [00:01<00:02, 156889.47it/s] 42%|████▏     | 232753/552076 [00:01<00:01, 166157.48it/s] 46%|████▌     | 251920/552076 [00:01<00:01, 173066.69it/s] 49%|████▉     | 269538/552076 [00:01<00:01, 168091.52it/s] 52%|█████▏    | 286780/552076 [00:01<00:01, 169365.57it/s] 55%|█████▌    | 304318/552076 [00:02<00:01, 171124.39it/s] 58%|█████▊    | 321727/552076 [00:02<00:01, 172002.12it/s] 61%|██████▏   | 339018/552076 [00:02<00:01, 170680.53it/s] 65%|██████▍   | 358498/552076 [00:02<00:01, 177264.28it/s] 68%|██████▊   | 376336/552076 [00:02<00:01, 168242.90it/s] 71%|███████   | 393334/552076 [00:02<00:00, 165383.85it/s] 75%|███████▍  | 411875/552076 [00:02<00:00, 170920.27it/s] 78%|███████▊  | 429107/552076 [00:02<00:00, 157605.34it/s] 81%|████████  | 445171/552076 [00:02<00:00, 132819.73it/s] 84%|████████▎ | 461436/552076 [00:03<00:00, 140551.06it/s] 86%|████████▋ | 476227/552076 [00:03<00:00, 127307.09it/s] 89%|████████▊ | 489712/552076 [00:03<00:00, 98811.37it/s]  91%|█████████ | 502038/552076 [00:03<00:00, 105062.48it/s] 93%|█████████▎| 513707/552076 [00:03<00:00, 82626.67it/s]  95%|█████████▍| 523530/552076 [00:03<00:00, 72178.98it/s] 97%|█████████▋| 532935/552076 [00:03<00:00, 77591.54it/s] 98%|█████████▊| 541740/552076 [00:04<00:00, 71789.13it/s]100%|██████████| 552076/552076 [00:04<00:00, 131402.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6214/552076 [00:00<00:08, 62139.61it/s]  3%|▎         | 14387/552076 [00:00<00:08, 66953.65it/s]  5%|▍         | 24991/552076 [00:00<00:07, 75277.09it/s]  6%|▌         | 34124/552076 [00:00<00:06, 79466.38it/s]  8%|▊         | 45715/552076 [00:00<00:05, 87740.96it/s] 10%|█         | 56865/552076 [00:00<00:05, 93731.34it/s] 12%|█▏        | 66474/552076 [00:00<00:05, 93898.59it/s] 14%|█▍        | 77359/552076 [00:00<00:04, 97932.34it/s] 16%|█▌        | 89268/552076 [00:00<00:04, 103443.80it/s] 18%|█▊        | 101713/552076 [00:01<00:04, 108959.88it/s] 21%|██        | 114206/552076 [00:01<00:03, 113302.78it/s] 23%|██▎       | 126716/552076 [00:01<00:03, 116599.68it/s] 25%|██▌       | 139159/552076 [00:01<00:03, 118842.61it/s] 27%|██▋       | 151689/552076 [00:01<00:03, 120707.05it/s] 30%|██▉       | 164109/552076 [00:01<00:03, 121731.18it/s] 32%|███▏      | 176538/552076 [00:01<00:03, 122486.26it/s] 34%|███▍      | 188821/552076 [00:01<00:02, 121493.14it/s] 36%|███▋      | 201304/552076 [00:01<00:02, 122474.06it/s] 39%|███▊      | 213814/552076 [00:01<00:02, 123249.27it/s] 41%|████      | 226209/552076 [00:02<00:02, 123457.02it/s] 43%|████▎     | 238635/552076 [00:02<00:02, 123696.07it/s] 45%|████▌     | 251013/552076 [00:02<00:02, 123709.51it/s] 48%|████▊     | 263390/552076 [00:02<00:02, 123372.72it/s] 50%|████▉     | 275741/552076 [00:02<00:02, 123410.99it/s] 52%|█████▏    | 288149/552076 [00:02<00:02, 123609.21it/s] 54%|█████▍    | 300512/552076 [00:02<00:02, 123492.19it/s] 57%|█████▋    | 312874/552076 [00:02<00:01, 123530.45it/s] 59%|█████▉    | 325340/552076 [00:02<00:01, 123865.08it/s] 61%|██████    | 337728/552076 [00:02<00:01, 123497.92it/s] 63%|██████▎   | 350107/552076 [00:03<00:01, 123582.96it/s] 66%|██████▌   | 362466/552076 [00:03<00:01, 123562.22it/s] 68%|██████▊   | 374823/552076 [00:03<00:01, 123509.73it/s] 70%|███████   | 387175/552076 [00:03<00:01, 123465.43it/s] 72%|███████▏  | 399590/552076 [00:03<00:01, 123667.57it/s] 75%|███████▍  | 411992/552076 [00:03<00:01, 123771.62it/s] 77%|███████▋  | 424417/552076 [00:03<00:01, 123911.60it/s] 79%|███████▉  | 436844/552076 [00:03<00:00, 124016.99it/s] 81%|████████▏ | 449266/552076 [00:03<00:00, 124077.06it/s] 84%|████████▎ | 461748/552076 [00:03<00:00, 124297.19it/s] 86%|████████▌ | 474178/552076 [00:04<00:00, 124251.15it/s] 88%|████████▊ | 486642/552076 [00:04<00:00, 124365.63it/s] 90%|█████████ | 499079/552076 [00:04<00:00, 124022.09it/s] 93%|█████████▎| 511489/552076 [00:04<00:00, 124042.92it/s] 95%|█████████▍| 524042/552076 [00:04<00:00, 124484.30it/s] 97%|█████████▋| 536499/552076 [00:04<00:00, 124509.24it/s] 99%|█████████▉| 548951/552076 [00:04<00:00, 124477.60it/s]100%|██████████| 552076/552076 [00:04<00:00, 119134.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7607/552076 [00:00<00:07, 70664.63it/s]  3%|▎         | 16225/552076 [00:00<00:07, 72437.03it/s]  5%|▍         | 26253/552076 [00:00<00:06, 79017.30it/s]  6%|▌         | 32320/552076 [00:00<00:07, 71639.68it/s]  8%|▊         | 42415/552076 [00:00<00:06, 78473.80it/s] 10%|▉         | 54549/552076 [00:00<00:05, 87776.14it/s] 12%|█▏        | 66760/552076 [00:00<00:05, 95861.10it/s] 14%|█▍        | 77929/552076 [00:00<00:04, 100116.82it/s] 17%|█▋        | 91967/552076 [00:00<00:04, 109542.08it/s] 19%|█▊        | 103258/552076 [00:01<00:04, 104706.05it/s] 21%|██        | 114973/552076 [00:01<00:04, 108152.12it/s] 23%|██▎       | 128358/552076 [00:01<00:03, 114760.91it/s] 25%|██▌       | 140102/552076 [00:01<00:03, 109674.56it/s] 27%|██▋       | 151305/552076 [00:01<00:03, 109486.91it/s] 29%|██▉       | 162419/552076 [00:01<00:03, 100023.85it/s] 31%|███▏      | 172813/552076 [00:01<00:03, 100144.06it/s] 33%|███▎      | 183020/552076 [00:01<00:04, 91056.48it/s]  35%|███▍      | 192419/552076 [00:01<00:04, 82625.30it/s] 36%|███▋      | 201037/552076 [00:02<00:04, 83659.04it/s] 39%|███▊      | 213052/552076 [00:02<00:03, 92045.56it/s] 40%|████      | 222689/552076 [00:02<00:03, 92092.30it/s] 42%|████▏     | 232201/552076 [00:02<00:03, 92475.18it/s] 44%|████▍     | 241661/552076 [00:02<00:03, 82830.88it/s] 45%|████▌     | 250282/552076 [00:02<00:04, 66708.64it/s] 47%|████▋     | 257693/552076 [00:02<00:04, 60729.83it/s] 48%|████▊     | 264388/552076 [00:02<00:04, 58907.38it/s] 49%|████▉     | 270726/552076 [00:03<00:04, 58000.63it/s] 51%|█████     | 281843/552076 [00:03<00:03, 67716.51it/s] 53%|█████▎    | 294090/552076 [00:03<00:03, 78205.21it/s] 55%|█████▌    | 306049/552076 [00:03<00:02, 87264.35it/s] 58%|█████▊    | 318462/552076 [00:03<00:02, 95798.71it/s] 60%|█████▉    | 330944/552076 [00:03<00:02, 102981.02it/s] 62%|██████▏   | 343460/552076 [00:03<00:01, 108762.52it/s] 64%|██████▍   | 355818/552076 [00:03<00:01, 112819.82it/s] 67%|██████▋   | 368257/552076 [00:03<00:01, 116056.63it/s] 69%|██████▉   | 380791/552076 [00:03<00:01, 118691.43it/s] 71%|███████   | 393167/552076 [00:04<00:01, 120165.48it/s] 73%|███████▎  | 405396/552076 [00:04<00:01, 119895.99it/s] 76%|███████▌  | 417755/552076 [00:04<00:01, 120978.71it/s] 78%|███████▊  | 429959/552076 [00:04<00:01, 109663.79it/s] 80%|███████▉  | 441203/552076 [00:04<00:01, 90763.49it/s]  82%|████████▏ | 451016/552076 [00:04<00:01, 90157.09it/s] 83%|████████▎ | 460548/552076 [00:04<00:01, 90742.39it/s] 85%|████████▌ | 469985/552076 [00:04<00:01, 80119.56it/s] 87%|████████▋ | 478479/552076 [00:05<00:00, 79521.82it/s] 89%|████████▉ | 490754/552076 [00:05<00:00, 88914.80it/s] 91%|█████████ | 503041/552076 [00:05<00:00, 96952.26it/s] 93%|█████████▎| 514797/552076 [00:05<00:00, 102331.59it/s] 95%|█████████▌| 527217/552076 [00:05<00:00, 108038.32it/s] 98%|█████████▊| 538472/552076 [00:05<00:00, 108564.40it/s]100%|█████████▉| 550872/552076 [00:05<00:00, 112774.93it/s]100%|██████████| 552076/552076 [00:05<00:00, 97025.08it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12082/552076 [00:00<00:04, 120812.34it/s]  4%|▍         | 23579/552076 [00:00<00:04, 118995.36it/s]  6%|▋         | 35762/552076 [00:00<00:04, 119831.08it/s]  9%|▊         | 48077/552076 [00:00<00:04, 120806.07it/s] 11%|█         | 60343/552076 [00:00<00:04, 121355.08it/s] 13%|█▎        | 72653/552076 [00:00<00:03, 121872.77it/s] 15%|█▌        | 84946/552076 [00:00<00:03, 122185.98it/s] 18%|█▊        | 97312/552076 [00:00<00:03, 122623.30it/s] 20%|█▉        | 109634/552076 [00:00<00:03, 122801.65it/s] 22%|██▏       | 121947/552076 [00:01<00:03, 122897.72it/s] 24%|██▍       | 134227/552076 [00:01<00:03, 122866.32it/s] 27%|██▋       | 146590/552076 [00:01<00:03, 123093.32it/s] 29%|██▉       | 158825/552076 [00:01<00:03, 122868.44it/s] 31%|███       | 171106/552076 [00:01<00:03, 122848.39it/s] 33%|███▎      | 183310/552076 [00:01<00:03, 121962.49it/s] 35%|███▌      | 195451/552076 [00:01<00:02, 121643.50it/s] 38%|███▊      | 207776/552076 [00:01<00:02, 122120.81it/s] 40%|███▉      | 220106/552076 [00:01<00:02, 122468.14it/s] 42%|████▏     | 232396/552076 [00:01<00:02, 122596.98it/s] 44%|████▍     | 244657/552076 [00:02<00:02, 122599.95it/s] 47%|████▋     | 256908/552076 [00:02<00:02, 121968.29it/s] 49%|████▉     | 269260/552076 [00:02<00:02, 122429.38it/s] 51%|█████     | 281702/552076 [00:02<00:02, 123019.62it/s] 53%|█████▎    | 294103/552076 [00:02<00:02, 123312.30it/s] 56%|█████▌    | 306552/552076 [00:02<00:01, 123662.07it/s] 58%|█████▊    | 318971/552076 [00:02<00:01, 123819.13it/s] 60%|██████    | 331454/552076 [00:02<00:01, 124119.02it/s] 62%|██████▏   | 343922/552076 [00:02<00:01, 124284.52it/s] 65%|██████▍   | 356351/552076 [00:02<00:01, 107246.57it/s] 67%|██████▋   | 367489/552076 [00:03<00:02, 73745.62it/s]  68%|██████▊   | 376565/552076 [00:03<00:02, 66817.86it/s] 70%|██████▉   | 384563/552076 [00:03<00:03, 51544.07it/s] 71%|███████   | 391170/552076 [00:03<00:02, 54768.63it/s] 72%|███████▏  | 397719/552076 [00:03<00:02, 52345.23it/s] 73%|███████▎  | 403727/552076 [00:03<00:02, 50781.66it/s] 74%|███████▍  | 409357/552076 [00:04<00:03, 47211.22it/s] 75%|███████▌  | 415336/552076 [00:04<00:02, 50390.48it/s] 76%|███████▌  | 420740/552076 [00:04<00:02, 51312.71it/s] 77%|███████▋  | 426131/552076 [00:04<00:02, 51671.86it/s] 78%|███████▊  | 431481/552076 [00:04<00:02, 50867.57it/s] 79%|███████▉  | 438040/552076 [00:04<00:02, 54537.97it/s] 81%|████████  | 444698/552076 [00:04<00:01, 57666.86it/s] 82%|████████▏ | 451354/552076 [00:04<00:01, 60074.02it/s] 83%|████████▎ | 457686/552076 [00:04<00:01, 61010.37it/s] 84%|████████▍ | 463930/552076 [00:05<00:01, 61429.54it/s] 85%|████████▌ | 470381/552076 [00:05<00:01, 62321.54it/s] 86%|████████▋ | 476667/552076 [00:05<00:01, 61343.45it/s] 88%|████████▊ | 483358/552076 [00:05<00:01, 62913.14it/s] 89%|████████▊ | 489694/552076 [00:05<00:00, 63045.70it/s] 90%|████████▉ | 496026/552076 [00:05<00:00, 61142.40it/s] 91%|█████████ | 502172/552076 [00:05<00:00, 60765.97it/s] 92%|█████████▏| 508272/552076 [00:05<00:00, 53069.63it/s] 93%|█████████▎| 513771/552076 [00:05<00:00, 44755.09it/s] 94%|█████████▍| 518604/552076 [00:06<00:00, 38692.99it/s] 95%|█████████▌| 524569/552076 [00:06<00:00, 43250.85it/s] 96%|█████████▌| 530481/552076 [00:06<00:00, 47037.64it/s] 97%|█████████▋| 536587/552076 [00:06<00:00, 50517.72it/s] 98%|█████████▊| 542491/552076 [00:06<00:00, 52803.58it/s] 99%|█████████▉| 548090/552076 [00:06<00:00, 53720.22it/s]100%|██████████| 552076/552076 [00:06<00:00, 82239.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11197/552076 [00:00<00:04, 111964.77it/s]  4%|▍         | 23159/552076 [00:00<00:04, 114153.67it/s]  6%|▌         | 33784/552076 [00:00<00:04, 111660.74it/s]  8%|▊         | 44370/552076 [00:00<00:04, 109853.00it/s] 10%|█         | 56199/552076 [00:00<00:04, 112252.87it/s] 12%|█▏        | 68456/552076 [00:00<00:04, 115158.31it/s] 15%|█▍        | 80773/552076 [00:00<00:04, 117447.59it/s] 17%|█▋        | 92155/552076 [00:00<00:03, 116332.58it/s] 19%|█▉        | 103546/552076 [00:00<00:03, 115593.91it/s] 21%|██        | 114736/552076 [00:01<00:03, 114459.33it/s] 23%|██▎       | 125904/552076 [00:01<00:03, 111529.21it/s] 25%|██▍       | 137508/552076 [00:01<00:03, 112843.34it/s] 27%|██▋       | 149319/552076 [00:01<00:03, 114370.85it/s] 29%|██▉       | 161233/552076 [00:01<00:03, 115760.24it/s] 31%|███▏      | 173301/552076 [00:01<00:03, 117190.88it/s] 34%|███▎      | 185506/552076 [00:01<00:03, 118607.28it/s] 36%|███▌      | 197379/552076 [00:01<00:02, 118643.85it/s] 38%|███▊      | 209229/552076 [00:01<00:02, 118219.69it/s] 40%|████      | 221042/552076 [00:01<00:02, 113881.49it/s] 42%|████▏     | 232920/552076 [00:02<00:02, 115307.64it/s] 44%|████▍     | 244475/552076 [00:02<00:02, 108259.61it/s] 46%|████▋     | 256609/552076 [00:02<00:02, 111876.05it/s] 49%|████▊     | 267901/552076 [00:02<00:02, 112065.87it/s] 51%|█████     | 279181/552076 [00:02<00:02, 109963.74it/s] 53%|█████▎    | 291525/552076 [00:02<00:02, 113686.55it/s] 55%|█████▍    | 302968/552076 [00:02<00:02, 90594.92it/s]  57%|█████▋    | 312822/552076 [00:02<00:03, 77967.81it/s] 58%|█████▊    | 321485/552076 [00:03<00:03, 61443.36it/s] 60%|█████▉    | 328783/552076 [00:03<00:03, 56382.42it/s] 61%|██████    | 335310/552076 [00:03<00:03, 58469.09it/s] 62%|██████▏   | 341799/552076 [00:03<00:03, 59600.74it/s] 63%|██████▎   | 348214/552076 [00:03<00:03, 59801.83it/s] 64%|██████▍   | 354513/552076 [00:03<00:03, 59784.58it/s] 65%|██████▌   | 360778/552076 [00:03<00:03, 60615.65it/s] 66%|██████▋   | 366999/552076 [00:03<00:03, 58845.40it/s] 68%|██████▊   | 373006/552076 [00:04<00:03, 56768.98it/s] 69%|██████▊   | 379039/552076 [00:04<00:03, 56368.68it/s] 70%|██████▉   | 385590/552076 [00:04<00:02, 58830.83it/s] 71%|███████   | 391686/552076 [00:04<00:02, 57959.03it/s] 72%|███████▏  | 398346/552076 [00:04<00:02, 59020.31it/s] 73%|███████▎  | 404686/552076 [00:04<00:02, 60268.99it/s] 74%|███████▍  | 411171/552076 [00:04<00:02, 61572.75it/s] 76%|███████▌  | 417631/552076 [00:04<00:02, 62449.43it/s] 77%|███████▋  | 423903/552076 [00:04<00:02, 60404.54it/s] 78%|███████▊  | 430254/552076 [00:04<00:01, 61303.11it/s] 79%|███████▉  | 436411/552076 [00:05<00:01, 61248.83it/s] 80%|████████  | 442555/552076 [00:05<00:01, 61086.34it/s] 81%|████████▏ | 449028/552076 [00:05<00:01, 62134.54it/s] 82%|████████▏ | 455255/552076 [00:05<00:01, 61771.30it/s] 84%|████████▎ | 461621/552076 [00:05<00:01, 62324.44it/s] 85%|████████▍ | 468082/552076 [00:05<00:01, 62992.61it/s] 86%|████████▌ | 474389/552076 [00:05<00:01, 60243.05it/s] 87%|████████▋ | 480766/552076 [00:05<00:01, 61258.70it/s] 88%|████████▊ | 486978/552076 [00:05<00:01, 59914.97it/s] 89%|████████▉ | 493856/552076 [00:05<00:00, 62245.22it/s] 91%|█████████ | 501698/552076 [00:06<00:00, 65693.10it/s] 92%|█████████▏| 508460/552076 [00:06<00:00, 64865.91it/s] 93%|█████████▎| 515005/552076 [00:06<00:00, 64216.24it/s] 94%|█████████▍| 521469/552076 [00:06<00:00, 63081.80it/s] 96%|█████████▌| 527933/552076 [00:06<00:00, 63541.20it/s] 97%|█████████▋| 534312/552076 [00:06<00:00, 61943.20it/s] 98%|█████████▊| 540533/552076 [00:06<00:00, 61041.14it/s] 99%|█████████▉| 546964/552076 [00:06<00:00, 60451.13it/s]100%|██████████| 552076/552076 [00:06<00:00, 79938.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4740/552076 [00:00<00:11, 47396.54it/s]  2%|▏         | 10860/552076 [00:00<00:10, 49232.64it/s]  3%|▎         | 15029/552076 [00:00<00:11, 46313.41it/s]  4%|▎         | 19810/552076 [00:00<00:11, 46189.18it/s]  5%|▍         | 25553/552076 [00:00<00:10, 49069.98it/s]  6%|▌         | 30974/552076 [00:00<00:10, 49137.30it/s]  6%|▋         | 35382/552076 [00:00<00:11, 46849.84it/s]  7%|▋         | 40852/552076 [00:00<00:10, 48846.04it/s]  8%|▊         | 45527/552076 [00:00<00:10, 46838.82it/s]  9%|▉         | 51766/552076 [00:01<00:09, 50623.80it/s] 10%|█         | 57762/552076 [00:01<00:09, 53104.10it/s] 11%|█▏        | 63317/552076 [00:01<00:09, 52551.27it/s] 12%|█▏        | 68595/552076 [00:01<00:10, 46284.77it/s] 13%|█▎        | 74405/552076 [00:01<00:09, 48650.82it/s] 14%|█▍        | 79409/552076 [00:01<00:09, 47746.70it/s] 15%|█▌        | 84285/552076 [00:01<00:09, 47057.43it/s] 16%|█▋        | 90610/552076 [00:01<00:09, 50971.92it/s] 18%|█▊        | 99691/552076 [00:01<00:07, 58696.28it/s] 19%|█▉        | 107272/552076 [00:02<00:07, 60194.26it/s] 21%|██        | 113668/552076 [00:02<00:07, 60809.78it/s] 23%|██▎       | 125130/552076 [00:02<00:06, 70777.30it/s] 24%|██▍       | 135122/552076 [00:02<00:05, 76949.10it/s] 26%|██▌       | 143537/552076 [00:02<00:07, 56961.81it/s] 27%|██▋       | 150492/552076 [00:02<00:06, 58435.50it/s] 28%|██▊       | 157226/552076 [00:02<00:06, 60403.01it/s] 30%|██▉       | 164693/552076 [00:02<00:06, 64075.35it/s] 31%|███       | 171610/552076 [00:03<00:06, 54875.90it/s] 32%|███▏      | 177685/552076 [00:03<00:08, 45750.18it/s] 33%|███▎      | 183563/552076 [00:03<00:07, 49009.05it/s] 34%|███▍      | 188996/552076 [00:03<00:07, 47780.70it/s] 35%|███▌      | 194808/552076 [00:03<00:07, 49608.14it/s] 36%|███▌      | 200052/552076 [00:03<00:07, 48741.15it/s] 37%|███▋      | 206298/552076 [00:03<00:06, 52178.93it/s] 38%|███▊      | 211725/552076 [00:03<00:07, 47554.23it/s] 39%|███▉      | 216706/552076 [00:04<00:07, 45128.69it/s] 40%|████      | 221827/552076 [00:04<00:07, 46319.31it/s] 41%|████      | 226826/552076 [00:04<00:06, 47186.24it/s] 42%|████▏     | 232766/552076 [00:04<00:06, 50287.80it/s] 43%|████▎     | 237921/552076 [00:04<00:06, 47303.55it/s] 44%|████▍     | 242776/552076 [00:04<00:06, 45283.43it/s] 45%|████▍     | 247579/552076 [00:04<00:06, 46073.19it/s] 46%|████▌     | 252662/552076 [00:04<00:06, 46962.71it/s] 47%|████▋     | 257739/552076 [00:04<00:06, 47037.24it/s] 48%|████▊     | 262484/552076 [00:05<00:06, 44235.01it/s] 48%|████▊     | 266971/552076 [00:05<00:06, 42458.47it/s] 49%|████▉     | 272089/552076 [00:05<00:06, 44745.41it/s] 50%|█████     | 278333/552076 [00:05<00:05, 48902.74it/s] 51%|█████▏    | 283391/552076 [00:05<00:05, 45280.20it/s] 52%|█████▏    | 288090/552076 [00:05<00:06, 42557.45it/s] 53%|█████▎    | 293706/552076 [00:05<00:05, 45891.54it/s] 54%|█████▍    | 298477/552076 [00:05<00:05, 43033.85it/s] 55%|█████▍    | 303287/552076 [00:05<00:05, 44406.72it/s] 56%|█████▌    | 309042/552076 [00:06<00:05, 46595.36it/s] 57%|█████▋    | 313818/552076 [00:06<00:05, 41359.78it/s] 58%|█████▊    | 318145/552076 [00:06<00:06, 36680.21it/s] 58%|█████▊    | 322956/552076 [00:06<00:05, 39158.47it/s] 59%|█████▉    | 328316/552076 [00:06<00:05, 42601.73it/s] 60%|██████    | 333551/552076 [00:06<00:04, 45121.49it/s] 61%|██████▏   | 339451/552076 [00:06<00:04, 48546.68it/s] 63%|██████▎   | 345077/552076 [00:06<00:04, 50628.34it/s] 63%|██████▎   | 350315/552076 [00:06<00:04, 48213.68it/s] 65%|██████▍   | 356741/552076 [00:07<00:03, 51897.35it/s] 66%|██████▌   | 362484/552076 [00:07<00:03, 53441.01it/s] 67%|██████▋   | 368781/552076 [00:07<00:03, 55822.77it/s] 68%|██████▊   | 374489/552076 [00:07<00:03, 51479.82it/s] 69%|██████▉   | 379792/552076 [00:07<00:03, 50456.14it/s] 70%|██████▉   | 386070/552076 [00:07<00:03, 53612.70it/s] 71%|███████   | 391565/552076 [00:07<00:03, 52376.03it/s] 72%|███████▏  | 396902/552076 [00:07<00:02, 51776.08it/s] 73%|███████▎  | 402151/552076 [00:07<00:03, 48143.74it/s] 74%|███████▎  | 407067/552076 [00:08<00:03, 41253.22it/s] 75%|███████▍  | 412998/552076 [00:08<00:03, 45399.64it/s] 76%|███████▌  | 417836/552076 [00:08<00:02, 45225.37it/s] 77%|███████▋  | 424004/552076 [00:08<00:02, 48727.85it/s] 78%|███████▊  | 430096/552076 [00:08<00:02, 51839.70it/s] 79%|███████▉  | 435981/552076 [00:08<00:02, 51744.67it/s] 80%|███████▉  | 441303/552076 [00:08<00:02, 51182.61it/s] 81%|████████  | 446526/552076 [00:08<00:02, 47522.09it/s] 82%|████████▏ | 451404/552076 [00:08<00:02, 46927.57it/s] 83%|████████▎ | 457909/552076 [00:09<00:01, 51206.57it/s] 84%|████████▍ | 463732/552076 [00:09<00:01, 52051.11it/s] 85%|████████▌ | 470636/552076 [00:09<00:01, 54734.98it/s] 86%|████████▋ | 476910/552076 [00:09<00:01, 56855.89it/s] 88%|████████▊ | 483404/552076 [00:09<00:01, 59060.95it/s] 89%|████████▉ | 490044/552076 [00:09<00:01, 61085.97it/s] 90%|████████▉ | 496240/552076 [00:09<00:00, 60185.08it/s] 91%|█████████ | 502765/552076 [00:09<00:00, 60796.18it/s] 92%|█████████▏| 509366/552076 [00:09<00:00, 62271.09it/s] 93%|█████████▎| 515635/552076 [00:10<00:00, 61996.76it/s] 95%|█████████▍| 522271/552076 [00:10<00:00, 63244.16it/s] 96%|█████████▌| 528622/552076 [00:10<00:00, 62376.23it/s] 97%|█████████▋| 535444/552076 [00:10<00:00, 64020.67it/s] 98%|█████████▊| 541872/552076 [00:10<00:00, 62646.25it/s] 99%|█████████▉| 548166/552076 [00:10<00:00, 62158.21it/s]100%|██████████| 552076/552076 [00:10<00:00, 52168.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12182/552076 [00:00<00:04, 121814.31it/s]  4%|▎         | 20104/552076 [00:00<00:05, 103509.43it/s]  5%|▍         | 26460/552076 [00:00<00:06, 87086.91it/s]   7%|▋         | 37254/552076 [00:00<00:05, 92443.04it/s]  8%|▊         | 44754/552076 [00:00<00:05, 86394.64it/s]  9%|▉         | 51870/552076 [00:00<00:06, 79031.55it/s] 11%|█▏        | 62731/552076 [00:00<00:05, 86061.68it/s] 13%|█▎        | 73539/552076 [00:00<00:05, 91662.51it/s] 15%|█▌        | 84732/552076 [00:00<00:04, 96927.17it/s] 17%|█▋        | 94343/552076 [00:01<00:05, 89714.99it/s] 19%|█▉        | 106769/552076 [00:01<00:04, 97877.40it/s] 21%|██        | 117207/552076 [00:01<00:04, 99738.79it/s] 23%|██▎       | 127368/552076 [00:01<00:04, 98796.24it/s] 25%|██▍       | 137381/552076 [00:01<00:04, 86301.69it/s] 27%|██▋       | 149583/552076 [00:01<00:04, 94608.99it/s] 29%|██▉       | 159549/552076 [00:01<00:04, 91644.01it/s] 31%|███       | 172016/552076 [00:01<00:03, 99554.60it/s] 33%|███▎      | 184031/552076 [00:01<00:03, 104950.17it/s] 35%|███▌      | 194927/552076 [00:02<00:03, 104360.37it/s] 37%|███▋      | 205645/552076 [00:02<00:03, 101601.44it/s] 39%|███▉      | 217935/552076 [00:02<00:03, 107172.87it/s] 42%|████▏     | 229817/552076 [00:02<00:02, 110417.53it/s] 44%|████▎     | 241046/552076 [00:02<00:03, 99887.61it/s]  46%|████▌     | 251357/552076 [00:02<00:03, 85177.30it/s] 47%|████▋     | 260477/552076 [00:02<00:03, 78000.79it/s] 49%|████▊     | 268817/552076 [00:02<00:03, 71760.14it/s] 50%|█████     | 276469/552076 [00:03<00:03, 69643.07it/s] 51%|█████▏    | 283780/552076 [00:03<00:04, 66683.47it/s] 53%|█████▎    | 290718/552076 [00:03<00:03, 66095.15it/s] 54%|█████▍    | 297518/552076 [00:03<00:03, 64877.58it/s] 55%|█████▌    | 304144/552076 [00:03<00:03, 64414.58it/s] 56%|█████▋    | 310683/552076 [00:03<00:03, 64089.40it/s] 57%|█████▋    | 317409/552076 [00:03<00:03, 65007.95it/s] 59%|█████▊    | 323961/552076 [00:03<00:03, 63596.71it/s] 60%|█████▉    | 330364/552076 [00:03<00:03, 63446.17it/s] 61%|██████    | 336739/552076 [00:03<00:03, 62925.40it/s] 62%|██████▏   | 343110/552076 [00:04<00:03, 63157.51it/s] 63%|██████▎   | 349442/552076 [00:04<00:03, 62408.56it/s] 64%|██████▍   | 355832/552076 [00:04<00:03, 62386.63it/s] 66%|██████▌   | 362080/552076 [00:04<00:03, 58171.14it/s] 67%|██████▋   | 368398/552076 [00:04<00:03, 59587.83it/s] 68%|██████▊   | 374410/552076 [00:04<00:03, 55823.65it/s] 69%|██████▉   | 380078/552076 [00:04<00:03, 53714.44it/s] 70%|██████▉   | 385900/552076 [00:04<00:03, 54179.24it/s] 71%|███████   | 391482/552076 [00:04<00:02, 54660.61it/s] 72%|███████▏  | 397808/552076 [00:05<00:02, 55811.91it/s] 73%|███████▎  | 403423/552076 [00:05<00:02, 50584.94it/s] 74%|███████▍  | 408599/552076 [00:05<00:03, 47471.74it/s] 75%|███████▌  | 414073/552076 [00:05<00:02, 49440.71it/s] 76%|███████▌  | 419909/552076 [00:05<00:02, 51375.38it/s] 77%|███████▋  | 425141/552076 [00:05<00:02, 51071.65it/s] 78%|███████▊  | 430385/552076 [00:05<00:02, 50882.98it/s] 79%|███████▉  | 435520/552076 [00:05<00:02, 48444.54it/s] 80%|███████▉  | 440422/552076 [00:05<00:02, 47542.78it/s] 81%|████████  | 445220/552076 [00:06<00:02, 45390.78it/s] 82%|████████▏ | 451649/552076 [00:06<00:02, 49172.92it/s] 83%|████████▎ | 457203/552076 [00:06<00:01, 50924.15it/s] 84%|████████▍ | 462401/552076 [00:06<00:01, 50333.20it/s] 85%|████████▍ | 467510/552076 [00:06<00:01, 47395.81it/s] 86%|████████▌ | 473521/552076 [00:06<00:01, 50160.84it/s] 87%|████████▋ | 480034/552076 [00:06<00:01, 53875.41it/s] 88%|████████▊ | 485573/552076 [00:06<00:01, 53036.03it/s] 89%|████████▉ | 490986/552076 [00:06<00:01, 48967.57it/s] 90%|████████▉ | 496572/552076 [00:07<00:01, 50794.33it/s] 91%|█████████ | 502221/552076 [00:07<00:00, 50311.91it/s] 92%|█████████▏| 507901/552076 [00:07<00:00, 52040.04it/s] 93%|█████████▎| 513177/552076 [00:07<00:00, 51611.08it/s] 94%|█████████▍| 519627/552076 [00:07<00:00, 53734.29it/s] 96%|█████████▌| 528952/552076 [00:07<00:00, 61559.76it/s] 98%|█████████▊| 540614/552076 [00:07<00:00, 71717.59it/s]100%|█████████▉| 551950/552076 [00:07<00:00, 80086.30it/s]100%|██████████| 552076/552076 [00:07<00:00, 70875.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5071/552076 [00:00<00:10, 50707.75it/s]  2%|▏         | 11011/552076 [00:00<00:10, 52730.86it/s]  3%|▎         | 14624/552076 [00:00<00:11, 45528.35it/s]  3%|▎         | 17839/552076 [00:00<00:13, 39168.96it/s]  4%|▍         | 22967/552076 [00:00<00:12, 42155.51it/s]  5%|▍         | 26597/552076 [00:00<00:13, 38419.24it/s]  6%|▌         | 30658/552076 [00:00<00:13, 37830.42it/s]  6%|▋         | 35270/552076 [00:00<00:12, 39986.04it/s]  7%|▋         | 39739/552076 [00:00<00:12, 40508.44it/s]  8%|▊         | 45297/552076 [00:01<00:11, 43156.91it/s]  9%|▉         | 50211/552076 [00:01<00:11, 44574.49it/s] 10%|▉         | 54669/552076 [00:01<00:11, 43114.30it/s] 11%|█         | 58991/552076 [00:01<00:11, 41916.25it/s] 12%|█▏        | 64195/552076 [00:01<00:11, 43078.21it/s] 13%|█▎        | 69151/552076 [00:01<00:10, 44836.68it/s] 14%|█▎        | 75576/552076 [00:01<00:09, 49305.52it/s] 15%|█▍        | 81943/552076 [00:01<00:08, 52369.75it/s] 16%|█▌        | 88367/552076 [00:01<00:08, 55443.09it/s] 17%|█▋        | 94074/552076 [00:02<00:08, 54127.23it/s] 18%|█▊        | 99796/552076 [00:02<00:08, 50642.73it/s] 19%|█▉        | 104991/552076 [00:02<00:08, 50319.64it/s] 20%|█▉        | 110115/552076 [00:02<00:09, 48490.60it/s] 21%|██        | 115629/552076 [00:02<00:08, 50309.31it/s] 22%|██▏       | 120733/552076 [00:02<00:09, 47715.81it/s] 23%|██▎       | 126524/552076 [00:02<00:08, 50375.28it/s] 24%|██▍       | 131657/552076 [00:02<00:08, 49167.84it/s] 25%|██▍       | 137884/552076 [00:02<00:07, 51943.50it/s] 26%|██▌       | 144160/552076 [00:03<00:07, 52960.87it/s] 27%|██▋       | 149527/552076 [00:03<00:08, 48571.23it/s] 28%|██▊       | 155472/552076 [00:03<00:07, 51392.45it/s] 29%|██▉       | 160740/552076 [00:03<00:07, 51460.08it/s] 30%|███       | 165976/552076 [00:03<00:07, 48300.96it/s] 31%|███       | 170909/552076 [00:03<00:08, 45128.01it/s] 32%|███▏      | 178080/552076 [00:03<00:07, 50773.81it/s] 35%|███▍      | 190488/552076 [00:03<00:05, 61711.14it/s] 36%|███▌      | 197984/552076 [00:03<00:05, 61233.48it/s] 38%|███▊      | 210063/552076 [00:04<00:04, 71862.63it/s] 40%|███▉      | 219564/552076 [00:04<00:04, 75879.36it/s] 42%|████▏     | 230089/552076 [00:04<00:03, 82812.10it/s] 44%|████▍     | 242300/552076 [00:04<00:03, 91660.47it/s] 46%|████▌     | 254483/552076 [00:04<00:03, 99016.11it/s] 48%|████▊     | 265203/552076 [00:04<00:03, 84484.75it/s] 50%|█████     | 276336/552076 [00:04<00:03, 91072.64it/s] 52%|█████▏    | 286250/552076 [00:04<00:03, 85493.69it/s] 54%|█████▍    | 298062/552076 [00:04<00:02, 93216.87it/s] 56%|█████▌    | 308035/552076 [00:05<00:02, 88142.05it/s] 57%|█████▋    | 317362/552076 [00:05<00:03, 76502.32it/s] 59%|█████▉    | 325646/552076 [00:05<00:03, 72745.52it/s] 60%|██████    | 333403/552076 [00:05<00:03, 68902.16it/s] 62%|██████▏   | 340673/552076 [00:05<00:03, 67189.06it/s] 63%|██████▎   | 347667/552076 [00:05<00:03, 64063.59it/s] 64%|██████▍   | 354297/552076 [00:05<00:03, 62918.91it/s] 65%|██████▌   | 360750/552076 [00:05<00:03, 61715.68it/s] 66%|██████▋   | 367040/552076 [00:06<00:03, 58877.26it/s] 68%|██████▊   | 373038/552076 [00:06<00:03, 57948.04it/s] 69%|██████▊   | 379225/552076 [00:06<00:02, 59071.30it/s] 70%|██████▉   | 385748/552076 [00:06<00:02, 60792.04it/s] 71%|███████   | 392060/552076 [00:06<00:02, 61471.79it/s] 72%|███████▏  | 398248/552076 [00:06<00:02, 59084.77it/s] 73%|███████▎  | 404624/552076 [00:06<00:02, 60044.25it/s] 74%|███████▍  | 411152/552076 [00:06<00:02, 61524.05it/s] 76%|███████▌  | 417678/552076 [00:06<00:02, 62598.17it/s] 77%|███████▋  | 424327/552076 [00:06<00:02, 63716.21it/s] 78%|███████▊  | 430725/552076 [00:07<00:01, 61845.92it/s] 79%|███████▉  | 437566/552076 [00:07<00:01, 63678.85it/s] 80%|████████  | 443969/552076 [00:07<00:01, 56929.79it/s] 81%|████████▏ | 449820/552076 [00:07<00:01, 55045.65it/s] 83%|████████▎ | 456259/552076 [00:07<00:01, 57551.09it/s] 84%|████████▍ | 462619/552076 [00:07<00:01, 57893.22it/s] 85%|████████▍ | 468902/552076 [00:07<00:01, 59126.18it/s] 86%|████████▌ | 475312/552076 [00:07<00:01, 60054.30it/s] 87%|████████▋ | 481606/552076 [00:07<00:01, 60653.29it/s] 88%|████████▊ | 488138/552076 [00:08<00:01, 61981.52it/s] 90%|████████▉ | 494657/552076 [00:08<00:00, 62909.64it/s] 91%|█████████ | 500974/552076 [00:08<00:00, 61504.02it/s] 92%|█████████▏| 507150/552076 [00:08<00:00, 60613.50it/s] 93%|█████████▎| 513618/552076 [00:08<00:00, 60161.72it/s] 94%|█████████▍| 519976/552076 [00:08<00:00, 60956.99it/s] 95%|█████████▌| 526307/552076 [00:08<00:00, 61643.48it/s] 97%|█████████▋| 533916/552076 [00:08<00:00, 65365.95it/s]100%|██████████| 552076/552076 [00:08<00:00, 62301.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12746/552076 [00:00<00:04, 127456.17it/s]  5%|▌         | 30202/552076 [00:00<00:03, 138681.19it/s]  8%|▊         | 42740/552076 [00:00<00:03, 134401.83it/s]  9%|▉         | 52041/552076 [00:00<00:04, 117056.44it/s] 11%|█         | 61251/552076 [00:00<00:05, 97769.16it/s]  14%|█▍        | 79520/552076 [00:00<00:04, 113612.12it/s] 18%|█▊        | 96636/552076 [00:00<00:03, 126356.75it/s] 21%|██▏       | 118166/552076 [00:00<00:03, 144231.80it/s] 25%|██▌       | 140432/552076 [00:00<00:02, 161272.60it/s] 29%|██▊       | 158086/552076 [00:01<00:02, 152395.02it/s] 33%|███▎      | 181047/552076 [00:01<00:02, 169493.31it/s] 37%|███▋      | 203971/552076 [00:01<00:01, 183868.02it/s] 41%|████      | 226554/552076 [00:01<00:01, 194721.06it/s] 45%|████▍     | 247146/552076 [00:01<00:01, 190231.70it/s] 49%|████▉     | 270038/552076 [00:01<00:01, 200390.95it/s] 53%|█████▎    | 291507/552076 [00:01<00:01, 204474.84it/s] 57%|█████▋    | 312472/552076 [00:01<00:01, 165667.67it/s] 60%|█████▉    | 330592/552076 [00:02<00:01, 149089.81it/s] 63%|██████▎   | 346902/552076 [00:02<00:01, 142114.45it/s] 66%|██████▌   | 362163/552076 [00:02<00:01, 135111.34it/s] 68%|██████▊   | 376481/552076 [00:02<00:01, 131435.82it/s] 71%|███████   | 390212/552076 [00:02<00:01, 128089.79it/s] 73%|███████▎  | 403451/552076 [00:02<00:01, 124678.05it/s] 75%|███████▌  | 416240/552076 [00:02<00:01, 123240.26it/s] 78%|███████▊  | 428793/552076 [00:02<00:01, 121997.66it/s] 80%|███████▉  | 441156/552076 [00:02<00:00, 122074.81it/s] 82%|████████▏ | 453787/552076 [00:03<00:00, 123313.21it/s] 84%|████████▍ | 466201/552076 [00:03<00:00, 119608.77it/s] 87%|████████▋ | 478245/552076 [00:03<00:00, 119270.67it/s] 89%|████████▉ | 490230/552076 [00:03<00:00, 111622.90it/s] 91%|█████████ | 501533/552076 [00:03<00:00, 102180.47it/s] 93%|█████████▎| 513481/552076 [00:03<00:00, 106818.68it/s] 95%|█████████▌| 525307/552076 [00:03<00:00, 110009.95it/s] 97%|█████████▋| 536495/552076 [00:03<00:00, 109753.78it/s] 99%|█████████▉| 548033/552076 [00:03<00:00, 111380.44it/s]100%|██████████| 552076/552076 [00:03<00:00, 140646.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5705/552076 [00:00<00:09, 55527.33it/s]  2%|▏         | 11502/552076 [00:00<00:09, 55662.88it/s]  3%|▎         | 17173/552076 [00:00<00:09, 55972.00it/s]  5%|▍         | 24866/552076 [00:00<00:08, 60953.44it/s]  6%|▋         | 34950/552076 [00:00<00:07, 69159.94it/s]  8%|▊         | 45209/552076 [00:00<00:06, 76652.52it/s] 10%|█         | 55682/552076 [00:00<00:06, 81405.18it/s] 12%|█▏        | 66699/552076 [00:00<00:05, 88322.78it/s] 14%|█▍        | 76970/552076 [00:00<00:05, 92195.77it/s] 16%|█▌        | 86368/552076 [00:01<00:05, 89492.60it/s] 18%|█▊        | 97439/552076 [00:01<00:04, 94949.51it/s] 20%|█▉        | 109105/552076 [00:01<00:04, 100561.87it/s] 22%|██▏       | 120813/552076 [00:01<00:04, 105005.23it/s] 24%|██▍       | 131917/552076 [00:01<00:03, 106744.58it/s] 26%|██▌       | 143506/552076 [00:01<00:03, 109332.33it/s] 28%|██▊       | 154562/552076 [00:01<00:03, 99580.07it/s]  30%|██▉       | 164774/552076 [00:01<00:03, 98823.44it/s] 32%|███▏      | 174835/552076 [00:01<00:04, 89473.97it/s] 33%|███▎      | 184077/552076 [00:02<00:04, 79376.49it/s] 35%|███▍      | 192432/552076 [00:02<00:04, 75787.90it/s] 37%|███▋      | 204633/552076 [00:02<00:04, 85505.74it/s] 39%|███▉      | 215402/552076 [00:02<00:03, 91137.19it/s] 41%|████      | 225068/552076 [00:02<00:03, 85821.11it/s] 43%|████▎     | 237154/552076 [00:02<00:03, 93996.05it/s] 45%|████▍     | 247103/552076 [00:02<00:03, 92967.79it/s] 47%|████▋     | 258959/552076 [00:02<00:02, 99403.79it/s] 49%|████▉     | 269295/552076 [00:02<00:02, 95477.52it/s] 51%|█████     | 279153/552076 [00:03<00:02, 94112.35it/s] 53%|█████▎    | 290156/552076 [00:03<00:02, 98380.83it/s] 54%|█████▍    | 300658/552076 [00:03<00:02, 100280.03it/s] 56%|█████▋    | 310839/552076 [00:03<00:02, 100342.78it/s] 58%|█████▊    | 321315/552076 [00:03<00:02, 101628.15it/s] 60%|██████    | 331661/552076 [00:03<00:02, 102168.79it/s] 62%|██████▏   | 342858/552076 [00:03<00:01, 104922.75it/s] 64%|██████▍   | 354088/552076 [00:03<00:01, 107031.84it/s] 66%|██████▋   | 365982/552076 [00:03<00:01, 110344.22it/s] 69%|██████▊   | 378308/552076 [00:03<00:01, 113925.10it/s] 71%|███████   | 389912/552076 [00:04<00:01, 114550.82it/s] 73%|███████▎  | 401419/552076 [00:04<00:01, 113405.12it/s] 75%|███████▍  | 412799/552076 [00:04<00:01, 111605.85it/s] 77%|███████▋  | 423994/552076 [00:04<00:01, 111122.25it/s] 79%|███████▉  | 435131/552076 [00:04<00:01, 109885.82it/s] 81%|████████  | 447007/552076 [00:04<00:00, 112404.59it/s] 83%|████████▎ | 458958/552076 [00:04<00:00, 114442.86it/s] 85%|████████▌ | 471230/552076 [00:04<00:00, 116804.47it/s] 88%|████████▊ | 483926/552076 [00:04<00:00, 119675.89it/s] 90%|████████▉ | 495934/552076 [00:04<00:00, 117858.70it/s] 92%|█████████▏| 508113/552076 [00:05<00:00, 119010.63it/s] 94%|█████████▍| 520287/552076 [00:05<00:00, 119815.52it/s] 96%|█████████▋| 532289/552076 [00:05<00:00, 117267.94it/s] 99%|█████████▊| 544131/552076 [00:05<00:00, 117608.56it/s]100%|██████████| 552076/552076 [00:05<00:00, 101585.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10739/552076 [00:00<00:05, 107385.49it/s]  4%|▍         | 21849/552076 [00:00<00:04, 108312.57it/s]  6%|▌         | 32006/552076 [00:00<00:04, 106197.12it/s]  8%|▊         | 43286/552076 [00:00<00:04, 108094.65it/s] 10%|▉         | 55107/552076 [00:00<00:04, 110941.09it/s] 12%|█▏        | 67014/552076 [00:00<00:04, 113258.12it/s] 14%|█▍        | 78918/552076 [00:00<00:04, 114931.44it/s] 16%|█▌        | 89556/552076 [00:00<00:04, 111677.52it/s] 18%|█▊        | 101539/552076 [00:00<00:03, 114001.83it/s] 21%|██        | 113715/552076 [00:01<00:03, 116221.10it/s] 23%|██▎       | 125937/552076 [00:01<00:03, 117956.74it/s] 25%|██▌       | 138124/552076 [00:01<00:03, 119103.61it/s] 27%|██▋       | 150358/552076 [00:01<00:03, 120054.84it/s] 29%|██▉       | 162545/552076 [00:01<00:03, 120592.01it/s] 32%|███▏      | 174546/552076 [00:01<00:03, 119461.08it/s] 34%|███▍      | 186454/552076 [00:01<00:03, 119072.11it/s] 36%|███▌      | 198710/552076 [00:01<00:02, 120096.73it/s] 38%|███▊      | 210704/552076 [00:01<00:02, 119835.82it/s] 40%|████      | 222677/552076 [00:01<00:02, 119555.27it/s] 43%|████▎     | 234697/552076 [00:02<00:02, 119744.92it/s] 45%|████▍     | 246884/552076 [00:02<00:02, 120373.38it/s] 47%|████▋     | 258919/552076 [00:02<00:02, 116922.32it/s] 49%|████▉     | 271249/552076 [00:02<00:02, 118763.25it/s] 51%|█████▏    | 283502/552076 [00:02<00:02, 119866.41it/s] 54%|█████▎    | 295793/552076 [00:02<00:02, 120762.47it/s] 56%|█████▌    | 308145/552076 [00:02<00:02, 121576.15it/s] 58%|█████▊    | 320471/552076 [00:02<00:01, 122075.71it/s] 60%|██████    | 332790/552076 [00:02<00:01, 122407.56it/s] 63%|██████▎   | 345077/552076 [00:02<00:01, 122544.48it/s] 65%|██████▍   | 357336/552076 [00:03<00:01, 122145.65it/s] 67%|██████▋   | 369554/552076 [00:03<00:01, 120586.88it/s] 69%|██████▉   | 381921/552076 [00:03<00:01, 121495.42it/s] 71%|███████▏  | 394586/552076 [00:03<00:01, 122995.35it/s] 74%|███████▎  | 406918/552076 [00:03<00:01, 123090.05it/s] 76%|███████▌  | 419659/552076 [00:03<00:01, 124352.91it/s] 78%|███████▊  | 432217/552076 [00:03<00:00, 124715.54it/s] 81%|████████  | 444695/552076 [00:03<00:00, 123963.00it/s] 83%|████████▎ | 457097/552076 [00:03<00:00, 123493.50it/s] 85%|████████▌ | 469451/552076 [00:03<00:00, 122668.04it/s] 87%|████████▋ | 481722/552076 [00:04<00:00, 122057.91it/s] 89%|████████▉ | 493932/552076 [00:04<00:00, 122007.92it/s] 92%|█████████▏| 506301/552076 [00:04<00:00, 122507.15it/s] 94%|█████████▍| 518554/552076 [00:04<00:00, 122507.56it/s] 96%|█████████▌| 530892/552076 [00:04<00:00, 122766.28it/s] 98%|█████████▊| 543270/552076 [00:04<00:00, 123066.67it/s]100%|██████████| 552076/552076 [00:04<00:00, 119946.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7138/552076 [00:00<00:08, 68026.20it/s]  3%|▎         | 16659/552076 [00:00<00:07, 74397.41it/s]  5%|▌         | 28645/552076 [00:00<00:06, 83949.36it/s]  7%|▋         | 40682/552076 [00:00<00:05, 92330.27it/s]  9%|▉         | 49743/552076 [00:00<00:05, 91166.79it/s] 11%|█         | 60537/552076 [00:00<00:05, 95624.17it/s] 13%|█▎        | 72759/552076 [00:00<00:04, 102301.11it/s] 15%|█▌        | 85020/552076 [00:00<00:04, 107649.43it/s] 18%|█▊        | 96960/552076 [00:00<00:04, 110923.44it/s] 20%|█▉        | 108045/552076 [00:01<00:04, 98379.53it/s] 21%|██▏       | 118140/552076 [00:01<00:05, 73374.12it/s] 23%|██▎       | 126588/552076 [00:01<00:06, 61150.57it/s] 24%|██▍       | 134695/552076 [00:01<00:06, 65425.05it/s] 26%|██▌       | 144183/552076 [00:01<00:05, 72143.73it/s] 28%|██▊       | 156237/552076 [00:01<00:04, 82021.99it/s] 31%|███       | 168537/552076 [00:01<00:04, 91130.03it/s] 33%|███▎      | 181351/552076 [00:01<00:03, 99774.65it/s] 35%|███▌      | 194534/552076 [00:02<00:03, 107624.64it/s] 38%|███▊      | 207642/552076 [00:02<00:03, 113727.56it/s] 40%|████      | 220946/552076 [00:02<00:02, 118904.96it/s] 42%|████▏     | 234221/552076 [00:02<00:02, 122743.29it/s] 45%|████▍     | 247689/552076 [00:02<00:02, 126094.66it/s] 47%|████▋     | 261022/552076 [00:02<00:02, 128181.04it/s] 50%|████▉     | 275422/552076 [00:02<00:02, 132547.73it/s] 52%|█████▏    | 289373/552076 [00:02<00:01, 134559.59it/s] 55%|█████▍    | 302975/552076 [00:02<00:02, 117535.89it/s] 57%|█████▋    | 317239/552076 [00:03<00:01, 124085.60it/s] 60%|█████▉    | 330089/552076 [00:03<00:02, 86831.68it/s]  62%|██████▏   | 340616/552076 [00:03<00:02, 86360.77it/s] 64%|██████▎   | 351850/552076 [00:03<00:02, 90610.41it/s] 66%|██████▌   | 361870/552076 [00:03<00:02, 68999.88it/s] 67%|██████▋   | 370214/552076 [00:03<00:02, 69772.88it/s] 69%|██████▊   | 378204/552076 [00:03<00:02, 72265.67it/s] 71%|███████   | 389861/552076 [00:04<00:01, 81564.59it/s] 73%|███████▎  | 401357/552076 [00:04<00:01, 89350.33it/s] 74%|███████▍  | 411153/552076 [00:04<00:01, 89441.72it/s] 77%|███████▋  | 423347/552076 [00:04<00:01, 97212.33it/s] 79%|███████▉  | 435226/552076 [00:04<00:01, 102815.06it/s] 81%|████████  | 447265/552076 [00:04<00:00, 107523.35it/s] 83%|████████▎ | 458439/552076 [00:04<00:00, 100692.35it/s] 85%|████████▍ | 468891/552076 [00:04<00:00, 91838.29it/s]  87%|████████▋ | 478494/552076 [00:04<00:00, 84534.70it/s] 88%|████████▊ | 487431/552076 [00:05<00:00, 84918.39it/s] 90%|████████▉ | 496209/552076 [00:05<00:00, 75381.35it/s] 91%|█████████▏| 504146/552076 [00:05<00:00, 65708.36it/s] 93%|█████████▎| 511718/552076 [00:05<00:00, 68421.83it/s] 94%|█████████▍| 519902/552076 [00:05<00:00, 71960.49it/s] 96%|█████████▌| 528034/552076 [00:05<00:00, 73519.84it/s] 97%|█████████▋| 536633/552076 [00:05<00:00, 76774.14it/s] 99%|█████████▉| 545465/552076 [00:05<00:00, 79907.29it/s]100%|██████████| 552076/552076 [00:05<00:00, 93315.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12028/552076 [00:00<00:04, 120271.80it/s]  4%|▍         | 23891/552076 [00:00<00:04, 119029.54it/s]  7%|▋         | 35959/552076 [00:00<00:04, 119517.42it/s]  9%|▊         | 47996/552076 [00:00<00:04, 119771.78it/s] 11%|█         | 59738/552076 [00:00<00:04, 119055.24it/s] 13%|█▎        | 71853/552076 [00:00<00:04, 119674.54it/s] 15%|█▌        | 83434/552076 [00:00<00:03, 118486.06it/s] 17%|█▋        | 95266/552076 [00:00<00:03, 118435.97it/s] 19%|█▉        | 107294/552076 [00:00<00:03, 118983.16it/s] 22%|██▏       | 119459/552076 [00:01<00:03, 119770.81it/s] 24%|██▍       | 131568/552076 [00:01<00:03, 120163.06it/s] 26%|██▌       | 143783/552076 [00:01<00:03, 120751.84it/s] 28%|██▊       | 155795/552076 [00:01<00:03, 118980.10it/s] 30%|███       | 167585/552076 [00:01<00:03, 112136.44it/s] 33%|███▎      | 179774/552076 [00:01<00:03, 114894.14it/s] 35%|███▍      | 192000/552076 [00:01<00:03, 117007.10it/s] 37%|███▋      | 204195/552076 [00:01<00:02, 118447.00it/s] 39%|███▉      | 216061/552076 [00:01<00:03, 101003.36it/s] 41%|████      | 226622/552076 [00:02<00:03, 91345.26it/s]  43%|████▎     | 236256/552076 [00:02<00:03, 87650.49it/s] 44%|████▍     | 245402/552076 [00:02<00:03, 83245.65it/s] 46%|████▌     | 254040/552076 [00:02<00:03, 78106.69it/s] 47%|████▋     | 262135/552076 [00:02<00:03, 72905.85it/s] 49%|████▉     | 270405/552076 [00:02<00:03, 74525.21it/s] 50%|█████     | 278055/552076 [00:02<00:03, 74579.29it/s] 52%|█████▏    | 286012/552076 [00:02<00:03, 76009.01it/s] 53%|█████▎    | 293717/552076 [00:02<00:03, 75263.71it/s] 55%|█████▍    | 301318/552076 [00:03<00:03, 74476.64it/s] 56%|█████▌    | 309068/552076 [00:03<00:03, 74438.22it/s] 58%|█████▊    | 319216/552076 [00:03<00:02, 80905.35it/s] 60%|██████    | 331926/552076 [00:03<00:02, 90806.21it/s] 62%|██████▏   | 344908/552076 [00:03<00:02, 99804.14it/s] 65%|██████▍   | 357073/552076 [00:03<00:01, 105486.64it/s] 67%|██████▋   | 369792/552076 [00:03<00:01, 111176.96it/s] 69%|██████▉   | 382425/552076 [00:03<00:01, 115326.81it/s] 72%|███████▏  | 395166/552076 [00:03<00:01, 118703.55it/s] 74%|███████▍  | 407313/552076 [00:03<00:01, 116598.89it/s] 76%|███████▌  | 420278/552076 [00:04<00:01, 120228.57it/s] 78%|███████▊  | 432924/552076 [00:04<00:00, 122031.66it/s] 81%|████████  | 445631/552076 [00:04<00:00, 123498.76it/s] 83%|████████▎ | 458460/552076 [00:04<00:00, 124896.43it/s] 85%|████████▌ | 471018/552076 [00:04<00:00, 125036.07it/s] 88%|████████▊ | 484047/552076 [00:04<00:00, 126565.14it/s] 90%|████████▉ | 496742/552076 [00:04<00:00, 114577.91it/s] 92%|█████████▏| 508697/552076 [00:04<00:00, 116025.35it/s] 94%|█████████▍| 521536/552076 [00:04<00:00, 119477.12it/s] 97%|█████████▋| 534036/552076 [00:04<00:00, 121079.06it/s] 99%|█████████▉| 546780/552076 [00:05<00:00, 122918.76it/s]100%|██████████| 552076/552076 [00:05<00:00, 107641.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11851/552076 [00:00<00:04, 118503.05it/s]  4%|▍         | 23598/552076 [00:00<00:04, 118188.71it/s]  6%|▋         | 35512/552076 [00:00<00:04, 118471.02it/s]  8%|▊         | 43295/552076 [00:00<00:04, 102188.36it/s] 10%|▉         | 54530/552076 [00:00<00:04, 105037.72it/s] 12%|█▏        | 66450/552076 [00:00<00:04, 108917.60it/s] 14%|█▍        | 78621/552076 [00:00<00:04, 112462.24it/s] 16%|█▋        | 90133/552076 [00:00<00:04, 113243.20it/s] 19%|█▊        | 102168/552076 [00:00<00:03, 115285.31it/s] 21%|██        | 114218/552076 [00:01<00:03, 116801.33it/s] 23%|██▎       | 125644/552076 [00:01<00:04, 101837.20it/s] 25%|██▍       | 135995/552076 [00:01<00:04, 96377.39it/s]  26%|██▋       | 145810/552076 [00:01<00:04, 81621.13it/s] 29%|██▉       | 159873/552076 [00:01<00:04, 93375.20it/s] 31%|███       | 170165/552076 [00:01<00:04, 89657.76it/s] 33%|███▎      | 182551/552076 [00:01<00:03, 97755.75it/s] 35%|███▌      | 194996/552076 [00:01<00:03, 104477.92it/s] 38%|███▊      | 207426/552076 [00:01<00:03, 109725.19it/s] 40%|███▉      | 220382/552076 [00:02<00:02, 115005.75it/s] 42%|████▏     | 232304/552076 [00:02<00:03, 104022.84it/s] 44%|████▍     | 243201/552076 [00:02<00:03, 102864.18it/s] 46%|████▌     | 255027/552076 [00:02<00:02, 107043.27it/s] 48%|████▊     | 266307/552076 [00:02<00:02, 108706.32it/s] 50%|█████     | 277386/552076 [00:02<00:03, 89606.32it/s]  52%|█████▏    | 287048/552076 [00:02<00:03, 80854.26it/s] 54%|█████▎    | 296483/552076 [00:02<00:03, 84478.41it/s] 56%|█████▌    | 307159/552076 [00:03<00:02, 89644.10it/s] 58%|█████▊    | 318060/552076 [00:03<00:02, 94689.92it/s] 59%|█████▉    | 327911/552076 [00:03<00:02, 89218.30it/s] 62%|██████▏   | 339564/552076 [00:03<00:02, 95964.62it/s] 63%|██████▎   | 349538/552076 [00:03<00:02, 91748.67it/s] 65%|██████▌   | 359016/552076 [00:03<00:02, 65272.70it/s] 67%|██████▋   | 371065/552076 [00:03<00:02, 75675.96it/s] 69%|██████▉   | 382954/552076 [00:03<00:01, 84936.80it/s] 71%|███████▏  | 394221/552076 [00:04<00:01, 91707.18it/s] 74%|███████▎  | 406252/552076 [00:04<00:01, 98749.13it/s] 76%|███████▌  | 418336/552076 [00:04<00:01, 104477.39it/s] 78%|███████▊  | 430238/552076 [00:04<00:01, 108451.65it/s] 80%|███████▉  | 441656/552076 [00:04<00:01, 104814.38it/s] 82%|████████▏ | 452565/552076 [00:04<00:00, 101016.64it/s] 84%|████████▍ | 464641/552076 [00:04<00:00, 106225.32it/s] 86%|████████▋ | 476639/552076 [00:04<00:00, 110006.80it/s] 89%|████████▊ | 488625/552076 [00:04<00:00, 112786.49it/s] 91%|█████████ | 500906/552076 [00:04<00:00, 115617.31it/s] 93%|█████████▎| 513089/552076 [00:05<00:00, 117411.72it/s] 95%|█████████▌| 525331/552076 [00:05<00:00, 118869.85it/s] 97%|█████████▋| 537301/552076 [00:05<00:00, 117008.88it/s] 99%|█████████▉| 549067/552076 [00:05<00:00, 108520.02it/s]100%|██████████| 552076/552076 [00:05<00:00, 101838.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11871/552076 [00:00<00:04, 118707.57it/s]  3%|▎         | 18452/552076 [00:00<00:05, 95643.80it/s]   4%|▍         | 22920/552076 [00:00<00:10, 52229.89it/s]  5%|▌         | 27879/552076 [00:00<00:10, 51407.14it/s]  6%|▌         | 32089/552076 [00:00<00:11, 44445.50it/s]  7%|▋         | 37987/552076 [00:00<00:10, 47992.20it/s]  8%|▊         | 45040/552076 [00:00<00:09, 53079.30it/s]  9%|▉         | 52210/552076 [00:00<00:08, 57563.82it/s] 11%|█         | 59083/552076 [00:01<00:08, 60511.76it/s] 12%|█▏        | 65909/552076 [00:01<00:07, 62643.44it/s] 13%|█▎        | 72872/552076 [00:01<00:07, 64586.36it/s] 14%|█▍        | 79608/552076 [00:01<00:07, 65392.05it/s] 16%|█▌        | 86382/552076 [00:01<00:07, 66078.68it/s] 17%|█▋        | 93054/552076 [00:01<00:06, 66269.09it/s] 18%|█▊        | 99767/552076 [00:01<00:06, 66523.31it/s] 19%|█▉        | 106553/552076 [00:01<00:06, 66917.88it/s] 21%|██        | 113327/552076 [00:01<00:06, 67160.10it/s] 22%|██▏       | 120068/552076 [00:01<00:06, 67233.74it/s] 23%|██▎       | 126841/552076 [00:02<00:06, 67379.47it/s] 24%|██▍       | 133585/552076 [00:02<00:06, 67381.99it/s] 25%|██▌       | 140328/552076 [00:02<00:06, 67348.16it/s] 27%|██▋       | 147066/552076 [00:02<00:06, 66148.29it/s] 28%|██▊       | 153688/552076 [00:02<00:06, 66039.72it/s] 29%|██▉       | 160429/552076 [00:02<00:05, 66442.08it/s] 30%|███       | 167202/552076 [00:02<00:05, 66821.79it/s] 31%|███▏      | 173888/552076 [00:02<00:05, 66829.26it/s] 33%|███▎      | 180925/552076 [00:02<00:05, 67852.11it/s] 34%|███▍      | 187745/552076 [00:02<00:05, 67955.78it/s] 35%|███▌      | 194545/552076 [00:03<00:05, 67289.21it/s] 36%|███▋      | 201283/552076 [00:03<00:05, 67315.19it/s] 38%|███▊      | 208018/552076 [00:03<00:05, 67264.33it/s] 39%|███▉      | 214769/552076 [00:03<00:05, 67335.22it/s] 40%|████      | 221543/552076 [00:03<00:04, 67455.06it/s] 41%|████▏     | 228290/552076 [00:03<00:04, 67392.33it/s] 43%|████▎     | 235036/552076 [00:03<00:04, 67411.24it/s] 44%|████▍     | 241809/552076 [00:03<00:04, 67505.08it/s] 45%|████▌     | 248560/552076 [00:03<00:04, 62764.36it/s] 46%|████▌     | 254965/552076 [00:03<00:04, 63144.26it/s] 47%|████▋     | 261327/552076 [00:04<00:07, 39845.64it/s] 48%|████▊     | 266423/552076 [00:04<00:09, 28617.24it/s] 49%|████▉     | 270508/552076 [00:04<00:11, 24572.15it/s] 50%|████▉     | 273922/552076 [00:04<00:11, 23731.67it/s] 50%|█████     | 276971/552076 [00:05<00:11, 23370.39it/s] 51%|█████     | 279783/552076 [00:05<00:11, 23352.44it/s] 51%|█████     | 282451/552076 [00:05<00:12, 22337.58it/s] 52%|█████▏    | 284927/552076 [00:05<00:12, 21037.23it/s] 52%|█████▏    | 287216/552076 [00:05<00:12, 21147.53it/s] 52%|█████▏    | 289461/552076 [00:05<00:12, 21003.69it/s] 53%|█████▎    | 291653/552076 [00:05<00:12, 20121.70it/s] 53%|█████▎    | 293969/552076 [00:05<00:12, 20680.59it/s] 54%|█████▍    | 297658/552076 [00:05<00:10, 23549.82it/s] 55%|█████▍    | 300987/552076 [00:06<00:09, 25686.56it/s] 55%|█████▌    | 304585/552076 [00:06<00:08, 28097.92it/s] 56%|█████▌    | 307589/552076 [00:06<00:08, 27694.67it/s] 56%|█████▌    | 310496/552076 [00:06<00:09, 26780.07it/s] 57%|█████▋    | 314447/552076 [00:06<00:08, 28659.96it/s] 58%|█████▊    | 319931/552076 [00:06<00:06, 33444.38it/s] 59%|█████▊    | 323657/552076 [00:06<00:07, 31205.77it/s] 60%|██████    | 332648/552076 [00:06<00:05, 38806.99it/s] 62%|██████▏   | 341196/552076 [00:06<00:04, 46268.82it/s] 63%|██████▎   | 347635/552076 [00:07<00:04, 50534.73it/s] 64%|██████▍   | 354535/552076 [00:07<00:03, 54945.01it/s] 66%|██████▌   | 364446/552076 [00:07<00:02, 63423.18it/s] 68%|██████▊   | 375992/552076 [00:07<00:02, 73338.33it/s] 70%|██████▉   | 384712/552076 [00:07<00:02, 77008.80it/s] 71%|███████▏  | 394477/552076 [00:07<00:01, 82220.86it/s] 73%|███████▎  | 404713/552076 [00:07<00:01, 87376.95it/s] 76%|███████▌  | 417097/552076 [00:07<00:01, 95841.43it/s] 78%|███████▊  | 429502/552076 [00:07<00:01, 102857.44it/s] 80%|████████  | 441934/552076 [00:07<00:01, 108473.46it/s] 82%|████████▏ | 453307/552076 [00:08<00:00, 101894.40it/s] 84%|████████▍ | 463946/552076 [00:08<00:00, 91199.21it/s]  86%|████████▌ | 475350/552076 [00:08<00:00, 97028.89it/s] 88%|████████▊ | 487757/552076 [00:08<00:00, 103814.89it/s] 91%|█████████ | 500173/552076 [00:08<00:00, 109181.13it/s] 93%|█████████▎| 512612/552076 [00:08<00:00, 113336.23it/s] 95%|█████████▌| 525012/552076 [00:08<00:00, 116336.54it/s] 97%|█████████▋| 537264/552076 [00:08<00:00, 118122.38it/s]100%|█████████▉| 549605/552076 [00:08<00:00, 119658.76it/s]100%|██████████| 552076/552076 [00:08<00:00, 61668.96it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8986/552076 [00:00<00:06, 89855.37it/s]  3%|▎         | 14960/552076 [00:00<00:06, 78050.85it/s]  3%|▎         | 18640/552076 [00:00<00:09, 55091.62it/s]  5%|▍         | 26093/552076 [00:00<00:08, 59768.05it/s]  6%|▌         | 33970/552076 [00:00<00:08, 64010.49it/s]  8%|▊         | 42097/552076 [00:00<00:07, 68365.41it/s]  9%|▉         | 49422/552076 [00:00<00:07, 69760.63it/s] 10%|█         | 57408/552076 [00:00<00:06, 72510.73it/s] 12%|█▏        | 66841/552076 [00:00<00:06, 77916.16it/s] 14%|█▍        | 76672/552076 [00:01<00:05, 83086.35it/s] 15%|█▌        | 85211/552076 [00:01<00:05, 80807.64it/s] 17%|█▋        | 93360/552076 [00:01<00:05, 78138.52it/s] 19%|█▊        | 102683/552076 [00:01<00:05, 82126.01it/s] 20%|██        | 110996/552076 [00:01<00:06, 70586.77it/s] 22%|██▏       | 121835/552076 [00:01<00:05, 78834.52it/s] 24%|██▎       | 130277/552076 [00:01<00:05, 76887.64it/s] 26%|██▌       | 142590/552076 [00:01<00:04, 86649.60it/s] 28%|██▊       | 151947/552076 [00:01<00:04, 85920.91it/s] 30%|██▉       | 164312/552076 [00:02<00:04, 94577.10it/s] 32%|███▏      | 177069/552076 [00:02<00:03, 102531.38it/s] 34%|███▍      | 189967/552076 [00:02<00:03, 109251.13it/s] 37%|███▋      | 202647/552076 [00:02<00:03, 113981.57it/s] 39%|███▉      | 215086/552076 [00:02<00:02, 116915.66it/s] 41%|████      | 227464/552076 [00:02<00:02, 118892.23it/s] 43%|████▎     | 239888/552076 [00:02<00:02, 120445.03it/s] 46%|████▌     | 252363/552076 [00:02<00:02, 121702.74it/s] 48%|████▊     | 264872/552076 [00:02<00:02, 122696.61it/s] 50%|█████     | 277293/552076 [00:02<00:02, 123144.68it/s] 52%|█████▏    | 289670/552076 [00:03<00:02, 123085.66it/s] 55%|█████▍    | 302022/552076 [00:03<00:02, 113755.47it/s] 57%|█████▋    | 313569/552076 [00:03<00:02, 90460.05it/s]  59%|█████▉    | 325866/552076 [00:03<00:02, 98252.06it/s] 61%|██████▏   | 338292/552076 [00:03<00:02, 104833.98it/s] 64%|██████▎   | 350707/552076 [00:03<00:01, 109964.36it/s] 66%|██████▌   | 363076/552076 [00:03<00:01, 113749.05it/s] 68%|██████▊   | 375497/552076 [00:03<00:01, 116697.47it/s] 70%|███████   | 387920/552076 [00:03<00:01, 118857.54it/s] 73%|███████▎  | 400378/552076 [00:04<00:01, 120515.59it/s] 75%|███████▍  | 412808/552076 [00:04<00:01, 121625.08it/s] 77%|███████▋  | 425237/552076 [00:04<00:01, 122409.50it/s] 79%|███████▉  | 437562/552076 [00:04<00:00, 120888.31it/s] 81%|████████▏ | 449714/552076 [00:04<00:01, 86487.03it/s]  83%|████████▎ | 459780/552076 [00:04<00:01, 59676.03it/s] 85%|████████▍ | 467865/552076 [00:05<00:01, 50471.54it/s] 86%|████████▌ | 474638/552076 [00:05<00:01, 44965.66it/s] 87%|████████▋ | 480455/552076 [00:05<00:01, 41426.13it/s] 88%|████████▊ | 485577/552076 [00:05<00:01, 38750.97it/s] 89%|████████▉ | 490173/552076 [00:05<00:01, 40037.93it/s] 90%|████████▉ | 495922/552076 [00:05<00:01, 44023.19it/s] 91%|█████████ | 502141/552076 [00:05<00:01, 48251.17it/s] 93%|█████████▎| 512123/552076 [00:06<00:00, 57100.88it/s] 94%|█████████▍| 518817/552076 [00:06<00:00, 59291.88it/s] 95%|█████████▌| 525456/552076 [00:06<00:00, 60275.81it/s] 96%|█████████▋| 531985/552076 [00:06<00:00, 59290.10it/s] 98%|█████████▊| 539809/552076 [00:06<00:00, 61926.03it/s] 99%|█████████▉| 546281/552076 [00:06<00:00, 59643.11it/s]100%|██████████| 552076/552076 [00:06<00:00, 82871.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9848/552076 [00:00<00:05, 98476.81it/s]  3%|▎         | 17815/552076 [00:00<00:05, 91963.77it/s]  4%|▍         | 23836/552076 [00:00<00:06, 79400.72it/s]  6%|▋         | 35102/552076 [00:00<00:05, 87114.59it/s]  8%|▊         | 41931/552076 [00:00<00:06, 77292.63it/s]  9%|▉         | 48547/552076 [00:00<00:06, 72105.69it/s] 11%|█         | 59063/552076 [00:00<00:06, 79612.42it/s] 13%|█▎        | 70446/552076 [00:00<00:05, 87502.14it/s] 15%|█▍        | 81919/552076 [00:00<00:04, 94208.65it/s] 17%|█▋        | 91527/552076 [00:01<00:05, 89787.09it/s] 18%|█▊        | 100681/552076 [00:01<00:06, 73922.06it/s] 20%|█▉        | 108659/552076 [00:01<00:06, 70694.62it/s] 21%|██        | 117082/552076 [00:01<00:05, 74274.23it/s] 23%|██▎       | 128755/552076 [00:01<00:05, 83370.16it/s] 25%|██▍       | 137705/552076 [00:01<00:05, 75687.36it/s] 26%|██▋       | 145839/552076 [00:01<00:05, 70538.73it/s] 28%|██▊       | 153359/552076 [00:01<00:05, 68626.69it/s] 29%|██▉       | 160560/552076 [00:02<00:05, 68245.02it/s] 31%|███       | 172173/552076 [00:02<00:04, 77624.55it/s] 33%|███▎      | 180544/552076 [00:02<00:04, 78341.35it/s] 35%|███▍      | 192578/552076 [00:02<00:04, 87502.74it/s] 37%|███▋      | 203237/552076 [00:02<00:03, 92469.44it/s] 39%|███▉      | 214353/552076 [00:02<00:03, 96502.16it/s] 41%|████      | 224418/552076 [00:02<00:03, 82832.15it/s] 42%|████▏     | 233331/552076 [00:02<00:04, 68573.20it/s] 44%|████▎     | 241038/552076 [00:03<00:05, 61728.13it/s] 45%|████▍     | 247935/552076 [00:03<00:05, 58034.24it/s] 46%|████▌     | 254291/552076 [00:03<00:05, 52669.65it/s] 47%|████▋     | 261860/552076 [00:03<00:05, 57957.19it/s] 49%|████▉     | 269402/552076 [00:03<00:04, 62282.34it/s] 50%|█████     | 276769/552076 [00:03<00:04, 65310.53it/s] 51%|█████▏    | 283648/552076 [00:03<00:04, 63826.67it/s] 53%|█████▎    | 291792/552076 [00:03<00:03, 68253.92it/s] 55%|█████▍    | 301224/552076 [00:03<00:03, 73983.66it/s] 56%|█████▌    | 310377/552076 [00:04<00:03, 78495.27it/s] 58%|█████▊    | 319107/552076 [00:04<00:02, 80942.96it/s] 60%|█████▉    | 328770/552076 [00:04<00:02, 85086.54it/s] 61%|██████    | 337496/552076 [00:04<00:02, 83585.96it/s] 63%|██████▎   | 346013/552076 [00:04<00:02, 76164.48it/s] 65%|██████▍   | 356604/552076 [00:04<00:02, 83171.51it/s] 66%|██████▌   | 365280/552076 [00:04<00:02, 81171.31it/s] 68%|██████▊   | 373659/552076 [00:04<00:02, 74415.60it/s] 69%|██████▉   | 381394/552076 [00:04<00:02, 70744.75it/s] 70%|███████   | 388712/552076 [00:05<00:02, 64770.81it/s] 72%|███████▏  | 395458/552076 [00:05<00:02, 61494.11it/s] 74%|███████▍  | 407571/552076 [00:05<00:02, 72150.39it/s] 76%|███████▌  | 419638/552076 [00:05<00:01, 82047.14it/s] 78%|███████▊  | 429573/552076 [00:05<00:01, 86308.44it/s] 80%|███████▉  | 439020/552076 [00:05<00:01, 76746.10it/s] 81%|████████  | 447462/552076 [00:05<00:01, 70487.79it/s] 82%|████████▏ | 455148/552076 [00:05<00:01, 66768.64it/s] 84%|████████▎ | 462312/552076 [00:06<00:01, 64207.23it/s] 85%|████████▍ | 469095/552076 [00:06<00:01, 62495.01it/s] 86%|████████▌ | 475608/552076 [00:06<00:01, 58363.67it/s] 87%|████████▋ | 482580/552076 [00:06<00:01, 61361.67it/s] 89%|████████▉ | 493072/552076 [00:06<00:00, 70090.30it/s] 91%|█████████ | 502632/552076 [00:06<00:00, 76188.73it/s] 93%|█████████▎| 510812/552076 [00:06<00:00, 70356.07it/s] 94%|█████████▍| 518329/552076 [00:06<00:00, 69778.04it/s] 95%|█████████▌| 525645/552076 [00:06<00:00, 64568.07it/s] 96%|█████████▋| 532416/552076 [00:07<00:00, 61224.19it/s] 98%|█████████▊| 540500/552076 [00:07<00:00, 66029.80it/s] 99%|█████████▉| 547562/552076 [00:07<00:00, 67341.60it/s]100%|██████████| 552076/552076 [00:07<00:00, 74748.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3891/552076 [00:00<00:14, 38909.48it/s]  1%|▏         | 7226/552076 [00:00<00:14, 37055.94it/s]  2%|▏         | 11324/552076 [00:00<00:14, 37722.81it/s]  3%|▎         | 14788/552076 [00:00<00:14, 36404.91it/s]  3%|▎         | 18771/552076 [00:00<00:14, 37368.76it/s]  4%|▍         | 23695/552076 [00:00<00:13, 40282.18it/s]  5%|▍         | 27346/552076 [00:00<00:13, 38485.10it/s]  6%|▌         | 31801/552076 [00:00<00:12, 40067.62it/s]  6%|▋         | 35652/552076 [00:00<00:14, 36623.43it/s]  7%|▋         | 39613/552076 [00:01<00:13, 37469.93it/s]  8%|▊         | 43329/552076 [00:01<00:14, 33949.71it/s]  8%|▊         | 46766/552076 [00:01<00:15, 32535.39it/s]  9%|▉         | 50061/552076 [00:01<00:15, 32638.85it/s] 10%|▉         | 53354/552076 [00:01<00:16, 29919.55it/s] 10%|█         | 56411/552076 [00:01<00:17, 28745.92it/s] 11%|█         | 61279/552076 [00:01<00:14, 32771.68it/s] 12%|█▏        | 65887/552076 [00:01<00:13, 35797.31it/s] 13%|█▎        | 70783/552076 [00:01<00:12, 38936.91it/s] 14%|█▎        | 74931/552076 [00:02<00:13, 36080.89it/s] 14%|█▍        | 78759/552076 [00:02<00:12, 36495.68it/s] 15%|█▍        | 82564/552076 [00:02<00:12, 36222.15it/s] 16%|█▌        | 86603/552076 [00:02<00:12, 37378.86it/s] 16%|█▋        | 90427/552076 [00:02<00:13, 33306.18it/s] 17%|█▋        | 93900/552076 [00:02<00:14, 30894.43it/s] 18%|█▊        | 97124/552076 [00:02<00:15, 28944.03it/s] 18%|█▊        | 100138/552076 [00:02<00:16, 27726.00it/s] 19%|█▉        | 103890/552076 [00:03<00:14, 30081.04it/s] 20%|█▉        | 108522/552076 [00:03<00:13, 33616.65it/s] 20%|██        | 112105/552076 [00:03<00:14, 29959.57it/s] 21%|██        | 115330/552076 [00:03<00:15, 28692.00it/s] 21%|██▏       | 118371/552076 [00:03<00:15, 28622.27it/s] 22%|██▏       | 121354/552076 [00:03<00:15, 27112.03it/s] 23%|██▎       | 125135/552076 [00:03<00:14, 29281.15it/s] 23%|██▎       | 128184/552076 [00:03<00:14, 29339.39it/s] 24%|██▍       | 132967/552076 [00:03<00:12, 33017.75it/s] 25%|██▍       | 137280/552076 [00:04<00:11, 34980.26it/s] 26%|██▌       | 141881/552076 [00:04<00:10, 37690.20it/s] 26%|██▋       | 146028/552076 [00:04<00:10, 38366.85it/s] 27%|██▋       | 149998/552076 [00:04<00:10, 38056.14it/s] 28%|██▊       | 154079/552076 [00:04<00:10, 38842.16it/s] 29%|██▊       | 158033/552076 [00:04<00:10, 36763.28it/s] 29%|██▉       | 161978/552076 [00:04<00:10, 36600.53it/s] 30%|███       | 166054/552076 [00:04<00:10, 37755.05it/s] 31%|███       | 170264/552076 [00:04<00:09, 38961.29it/s] 32%|███▏      | 174439/552076 [00:04<00:09, 39756.62it/s] 32%|███▏      | 178448/552076 [00:05<00:09, 38873.52it/s] 33%|███▎      | 182620/552076 [00:05<00:09, 39685.70it/s] 34%|███▍      | 186612/552076 [00:05<00:09, 39692.75it/s] 35%|███▍      | 191490/552076 [00:05<00:08, 42042.21it/s] 36%|███▌      | 197652/552076 [00:05<00:07, 46470.68it/s] 37%|███▋      | 204314/552076 [00:05<00:06, 51107.16it/s] 38%|███▊      | 209969/552076 [00:05<00:06, 52084.79it/s] 39%|███▉      | 217154/552076 [00:05<00:05, 56768.69it/s] 41%|████      | 223857/552076 [00:05<00:05, 59499.60it/s] 42%|████▏     | 231059/552076 [00:05<00:05, 62771.66it/s] 43%|████▎     | 238225/552076 [00:06<00:04, 65197.37it/s] 44%|████▍     | 245427/552076 [00:06<00:04, 67103.27it/s] 46%|████▌     | 252928/552076 [00:06<00:04, 67801.16it/s] 47%|████▋     | 260375/552076 [00:06<00:04, 69670.25it/s] 49%|████▊     | 268498/552076 [00:06<00:03, 72776.82it/s] 50%|█████     | 276688/552076 [00:06<00:03, 75291.51it/s] 51%|█████▏    | 284303/552076 [00:06<00:03, 73557.19it/s] 53%|█████▎    | 291728/552076 [00:06<00:03, 71319.22it/s] 54%|█████▍    | 299827/552076 [00:06<00:03, 73966.59it/s] 56%|█████▌    | 307301/552076 [00:07<00:03, 74195.42it/s] 57%|█████▋    | 314769/552076 [00:07<00:03, 60988.21it/s] 58%|█████▊    | 321290/552076 [00:07<00:03, 60130.25it/s] 59%|█████▉    | 327601/552076 [00:07<00:03, 58121.08it/s] 60%|██████    | 333637/552076 [00:07<00:03, 57728.40it/s] 62%|██████▏   | 339567/552076 [00:07<00:03, 58187.20it/s] 63%|██████▎   | 345497/552076 [00:07<00:03, 57134.16it/s] 64%|██████▎   | 351500/552076 [00:07<00:03, 57260.38it/s] 65%|██████▍   | 357546/552076 [00:07<00:03, 58182.95it/s] 66%|██████▌   | 363501/552076 [00:08<00:03, 57804.45it/s] 67%|██████▋   | 369313/552076 [00:08<00:03, 56150.11it/s] 69%|██████▊   | 379281/552076 [00:08<00:02, 64252.42it/s] 70%|███████   | 387865/552076 [00:08<00:02, 69494.42it/s] 72%|███████▏  | 399815/552076 [00:08<00:01, 79470.76it/s] 75%|███████▍  | 411975/552076 [00:08<00:01, 88688.25it/s] 77%|███████▋  | 424154/552076 [00:08<00:01, 96560.14it/s] 79%|███████▉  | 436425/552076 [00:08<00:01, 103154.39it/s] 81%|████████▏ | 448699/552076 [00:08<00:00, 108339.02it/s] 83%|████████▎ | 460973/552076 [00:08<00:00, 112289.51it/s] 86%|████████▌ | 472636/552076 [00:09<00:00, 110049.13it/s] 88%|████████▊ | 483955/552076 [00:09<00:00, 95363.36it/s]  90%|████████▉ | 496182/552076 [00:09<00:00, 102102.66it/s] 92%|█████████▏| 508521/552076 [00:09<00:00, 107674.29it/s] 94%|█████████▍| 520789/552076 [00:09<00:00, 111774.89it/s] 97%|█████████▋| 533103/552076 [00:09<00:00, 114955.60it/s] 99%|█████████▉| 545493/552076 [00:09<00:00, 117499.88it/s]100%|██████████| 552076/552076 [00:09<00:00, 56534.59it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11552/552076 [00:00<00:04, 115519.01it/s]  3%|▎         | 16074/552076 [00:00<00:06, 78777.61it/s]   5%|▍         | 26484/552076 [00:00<00:06, 84977.35it/s]  7%|▋         | 39006/552076 [00:00<00:05, 94043.18it/s]  9%|▉         | 51297/552076 [00:00<00:04, 101169.99it/s] 12%|█▏        | 63545/552076 [00:00<00:04, 106741.19it/s] 14%|█▎        | 75569/552076 [00:00<00:04, 110460.22it/s] 16%|█▌        | 87771/552076 [00:00<00:04, 113690.65it/s] 18%|█▊        | 99782/552076 [00:00<00:03, 115541.19it/s] 20%|██        | 111882/552076 [00:01<00:03, 117124.17it/s] 23%|██▎       | 124241/552076 [00:01<00:03, 118989.57it/s] 25%|██▍       | 136409/552076 [00:01<00:03, 119783.90it/s] 27%|██▋       | 148770/552076 [00:01<00:03, 120905.14it/s] 29%|██▉       | 161222/552076 [00:01<00:03, 121966.21it/s] 31%|███▏      | 173556/552076 [00:01<00:03, 122374.63it/s] 34%|███▎      | 185943/552076 [00:01<00:02, 122817.12it/s] 36%|███▌      | 198296/552076 [00:01<00:02, 123028.05it/s] 38%|███▊      | 210706/552076 [00:01<00:02, 123347.02it/s] 40%|████      | 223103/552076 [00:01<00:02, 123531.00it/s] 43%|████▎     | 235454/552076 [00:02<00:02, 123500.35it/s] 45%|████▍     | 247803/552076 [00:02<00:03, 97592.21it/s]  47%|████▋     | 258413/552076 [00:02<00:03, 93722.12it/s] 49%|████▊     | 268414/552076 [00:02<00:03, 89961.13it/s] 50%|█████     | 277882/552076 [00:02<00:03, 88528.87it/s] 52%|█████▏    | 287071/552076 [00:02<00:03, 86324.20it/s] 54%|█████▎    | 295951/552076 [00:02<00:02, 85954.66it/s] 55%|█████▌    | 304720/552076 [00:02<00:02, 85053.88it/s] 57%|█████▋    | 313349/552076 [00:02<00:02, 82361.33it/s] 58%|█████▊    | 321690/552076 [00:03<00:02, 81130.13it/s] 60%|█████▉    | 329898/552076 [00:03<00:02, 81411.59it/s] 62%|██████▏   | 341879/552076 [00:03<00:02, 90071.42it/s] 64%|██████▍   | 353892/552076 [00:03<00:02, 97381.16it/s] 66%|██████▌   | 365595/552076 [00:03<00:01, 102544.51it/s] 68%|██████▊   | 376201/552076 [00:03<00:01, 101393.83it/s] 70%|███████   | 386590/552076 [00:03<00:02, 80091.89it/s]  72%|███████▏  | 395475/552076 [00:03<00:02, 75298.08it/s] 74%|███████▎  | 406566/552076 [00:04<00:01, 83322.66it/s] 76%|███████▌  | 417683/552076 [00:04<00:01, 90091.00it/s] 78%|███████▊  | 429303/552076 [00:04<00:01, 96601.87it/s] 80%|███████▉  | 439567/552076 [00:04<00:01, 92712.00it/s] 82%|████████▏ | 451416/552076 [00:04<00:01, 99183.70it/s] 84%|████████▍ | 463230/552076 [00:04<00:00, 104198.39it/s] 86%|████████▌ | 475365/552076 [00:04<00:00, 108810.39it/s] 88%|████████▊ | 487748/552076 [00:04<00:00, 112916.85it/s] 91%|█████████ | 500211/552076 [00:04<00:00, 116191.32it/s] 93%|█████████▎| 512667/552076 [00:04<00:00, 118581.05it/s] 95%|█████████▌| 525082/552076 [00:05<00:00, 120197.18it/s] 97%|█████████▋| 537575/552076 [00:05<00:00, 121578.80it/s]100%|█████████▉| 550001/552076 [00:05<00:00, 122369.07it/s]100%|██████████| 552076/552076 [00:05<00:00, 104967.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11121/552076 [00:00<00:04, 110010.67it/s]  3%|▎         | 17386/552076 [00:00<00:05, 89671.84it/s]   4%|▍         | 23229/552076 [00:00<00:06, 77161.08it/s]  5%|▌         | 29564/552076 [00:00<00:07, 72423.87it/s]  7%|▋         | 40203/552076 [00:00<00:06, 80093.84it/s]  9%|▊         | 48064/552076 [00:00<00:06, 79641.31it/s] 11%|█         | 58965/552076 [00:00<00:05, 86643.95it/s] 13%|█▎        | 70199/552076 [00:00<00:05, 91265.12it/s] 15%|█▍        | 82399/552076 [00:00<00:04, 98723.52it/s] 17%|█▋        | 92295/552076 [00:01<00:05, 91795.37it/s] 19%|█▊        | 103423/552076 [00:01<00:04, 96883.40it/s] 21%|██        | 115697/552076 [00:01<00:04, 103418.44it/s] 23%|██▎       | 126270/552076 [00:01<00:04, 100862.58it/s] 25%|██▍       | 137302/552076 [00:01<00:04, 102480.17it/s] 27%|██▋       | 147680/552076 [00:01<00:04, 85593.10it/s]  29%|██▉       | 159748/552076 [00:01<00:04, 93771.33it/s] 31%|███       | 172137/552076 [00:01<00:03, 101147.05it/s] 33%|███▎      | 184581/552076 [00:01<00:03, 107163.36it/s] 36%|███▌      | 196962/552076 [00:02<00:03, 111666.38it/s] 38%|███▊      | 209356/552076 [00:02<00:02, 115084.14it/s] 40%|████      | 221778/552076 [00:02<00:02, 117680.17it/s] 42%|████▏     | 234147/552076 [00:02<00:02, 119420.84it/s] 45%|████▍     | 246521/552076 [00:02<00:02, 120682.61it/s] 47%|████▋     | 258978/552076 [00:02<00:02, 121821.78it/s] 49%|████▉     | 271443/552076 [00:02<00:02, 122656.37it/s] 51%|█████▏    | 283772/552076 [00:02<00:02, 120394.26it/s] 54%|█████▎    | 296270/552076 [00:02<00:02, 121732.00it/s] 56%|█████▌    | 308654/552076 [00:02<00:01, 122356.77it/s] 58%|█████▊    | 321069/552076 [00:03<00:01, 122889.14it/s] 60%|██████    | 333435/552076 [00:03<00:01, 123118.19it/s] 63%|██████▎   | 345873/552076 [00:03<00:01, 123491.79it/s] 65%|██████▍   | 358332/552076 [00:03<00:01, 123816.61it/s] 67%|██████▋   | 370802/552076 [00:03<00:01, 124078.58it/s] 69%|██████▉   | 383216/552076 [00:03<00:01, 124007.84it/s] 72%|███████▏  | 395690/552076 [00:03<00:01, 124226.17it/s] 74%|███████▍  | 408116/552076 [00:03<00:01, 124030.58it/s] 76%|███████▌  | 420565/552076 [00:03<00:01, 124167.46it/s] 78%|███████▊  | 433062/552076 [00:03<00:00, 124407.00it/s] 81%|████████  | 445514/552076 [00:04<00:00, 124439.58it/s] 83%|████████▎ | 458041/552076 [00:04<00:00, 124687.32it/s] 85%|████████▌ | 470534/552076 [00:04<00:00, 124759.26it/s] 87%|████████▋ | 483011/552076 [00:04<00:00, 124388.60it/s] 90%|████████▉ | 495451/552076 [00:04<00:00, 123464.34it/s] 92%|█████████▏| 507800/552076 [00:04<00:00, 123229.63it/s] 94%|█████████▍| 520125/552076 [00:04<00:00, 102475.37it/s] 96%|█████████▋| 532237/552076 [00:04<00:00, 107434.44it/s] 99%|█████████▊| 544567/552076 [00:04<00:00, 111747.63it/s]100%|██████████| 552076/552076 [00:04<00:00, 111360.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11866/552076 [00:00<00:04, 118657.00it/s]  4%|▍         | 23965/552076 [00:00<00:04, 119344.74it/s]  7%|▋         | 35951/552076 [00:00<00:04, 119497.86it/s]  9%|▊         | 47940/552076 [00:00<00:04, 119612.79it/s] 11%|█         | 59724/552076 [00:00<00:04, 119075.24it/s] 13%|█▎        | 71749/552076 [00:00<00:04, 119424.27it/s] 15%|█▌        | 83861/552076 [00:00<00:03, 119926.83it/s] 17%|█▋        | 96179/552076 [00:00<00:03, 120884.20it/s] 20%|█▉        | 108503/552076 [00:00<00:03, 121579.06it/s] 22%|██▏       | 120401/552076 [00:01<00:03, 120784.38it/s] 24%|██▍       | 132148/552076 [00:01<00:03, 105892.20it/s] 26%|██▌       | 142838/552076 [00:01<00:04, 97883.87it/s]  28%|██▊       | 155130/552076 [00:01<00:03, 104252.54it/s] 30%|███       | 167389/552076 [00:01<00:03, 109148.49it/s] 33%|███▎      | 179677/552076 [00:01<00:03, 112934.34it/s] 35%|███▍      | 191976/552076 [00:01<00:03, 115772.20it/s] 37%|███▋      | 204184/552076 [00:01<00:02, 117594.97it/s] 39%|███▉      | 216423/552076 [00:01<00:02, 118990.28it/s] 41%|████▏     | 228493/552076 [00:01<00:02, 119495.67it/s] 44%|████▎     | 240524/552076 [00:02<00:02, 119737.22it/s] 46%|████▌     | 253152/552076 [00:02<00:02, 121627.19it/s] 48%|████▊     | 265352/552076 [00:02<00:02, 121292.74it/s] 50%|█████     | 278215/552076 [00:02<00:02, 123402.67it/s] 53%|█████▎    | 291034/552076 [00:02<00:02, 124798.32it/s] 55%|█████▌    | 303766/552076 [00:02<00:01, 125542.27it/s] 57%|█████▋    | 316338/552076 [00:02<00:01, 125472.39it/s] 60%|█████▉    | 328929/552076 [00:02<00:01, 125603.21it/s] 62%|██████▏   | 341498/552076 [00:02<00:01, 125225.07it/s] 64%|██████▍   | 354027/552076 [00:02<00:01, 124779.66it/s] 66%|██████▋   | 366510/552076 [00:03<00:01, 124019.02it/s] 69%|██████▉   | 379615/552076 [00:03<00:01, 126047.40it/s] 71%|███████   | 392247/552076 [00:03<00:01, 126125.94it/s] 73%|███████▎  | 404868/552076 [00:03<00:01, 124988.29it/s] 76%|███████▌  | 417375/552076 [00:03<00:01, 124865.89it/s] 78%|███████▊  | 429868/552076 [00:03<00:00, 124479.66it/s] 80%|████████  | 442509/552076 [00:03<00:00, 125052.22it/s] 82%|████████▏ | 455018/552076 [00:03<00:00, 125021.66it/s] 85%|████████▍ | 467523/552076 [00:03<00:00, 124656.67it/s] 87%|████████▋ | 479991/552076 [00:03<00:00, 124104.81it/s] 89%|████████▉ | 492404/552076 [00:04<00:00, 123282.23it/s] 92%|█████████▏| 505404/552076 [00:04<00:00, 125221.48it/s] 94%|█████████▍| 518136/552076 [00:04<00:00, 125843.68it/s] 96%|█████████▌| 530980/552076 [00:04<00:00, 126459.06it/s] 98%|█████████▊| 543632/552076 [00:04<00:00, 122444.40it/s]100%|██████████| 552076/552076 [00:04<00:00, 120899.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6375/552076 [00:00<00:08, 63748.84it/s]  2%|▏         | 13121/552076 [00:00<00:08, 64817.15it/s]  5%|▍         | 25265/552076 [00:00<00:06, 75357.48it/s]  6%|▌         | 33784/552076 [00:00<00:06, 78058.80it/s]  8%|▊         | 45953/552076 [00:00<00:05, 87466.06it/s] 10%|█         | 56436/552076 [00:00<00:05, 92038.54it/s] 12%|█▏        | 65446/552076 [00:00<00:06, 79609.57it/s] 14%|█▍        | 76822/552076 [00:00<00:05, 87487.36it/s] 16%|█▌        | 89057/552076 [00:00<00:04, 95663.31it/s] 18%|█▊        | 100518/552076 [00:01<00:04, 100652.86it/s] 20%|██        | 111737/552076 [00:01<00:04, 103855.85it/s] 22%|██▏       | 124031/552076 [00:01<00:03, 108927.03it/s] 25%|██▍       | 136407/552076 [00:01<00:03, 112988.88it/s] 27%|██▋       | 147941/552076 [00:01<00:03, 111258.04it/s] 29%|██▉       | 160205/552076 [00:01<00:03, 114442.71it/s] 31%|███       | 172375/552076 [00:01<00:03, 116524.76it/s] 33%|███▎      | 184243/552076 [00:01<00:03, 117161.12it/s] 36%|███▌      | 196339/552076 [00:01<00:03, 118275.19it/s] 38%|███▊      | 208422/552076 [00:01<00:02, 119027.73it/s] 40%|███▉      | 220603/552076 [00:02<00:02, 119848.50it/s] 42%|████▏     | 232843/552076 [00:02<00:02, 120602.32it/s] 44%|████▍     | 245133/552076 [00:02<00:02, 121281.48it/s] 47%|████▋     | 257343/552076 [00:02<00:02, 121525.05it/s] 49%|████▉     | 269507/552076 [00:02<00:02, 115573.31it/s] 51%|█████     | 281749/552076 [00:02<00:02, 117542.66it/s] 53%|█████▎    | 293560/552076 [00:02<00:02, 116805.49it/s] 55%|█████▌    | 305282/552076 [00:02<00:02, 108330.73it/s] 57%|█████▋    | 316267/552076 [00:02<00:02, 104138.81it/s] 59%|█████▉    | 327428/552076 [00:03<00:02, 106270.70it/s] 61%|██████▏   | 338443/552076 [00:03<00:01, 107404.70it/s] 63%|██████▎   | 349263/552076 [00:03<00:01, 106468.57it/s] 65%|██████▌   | 359968/552076 [00:03<00:02, 90646.72it/s]  67%|██████▋   | 370174/552076 [00:03<00:01, 93793.15it/s] 69%|██████▉   | 380858/552076 [00:03<00:01, 97358.72it/s] 71%|███████   | 392517/552076 [00:03<00:01, 102426.72it/s] 73%|███████▎  | 403565/552076 [00:03<00:01, 104714.85it/s] 75%|███████▌  | 415022/552076 [00:03<00:01, 107486.96it/s] 77%|███████▋  | 426492/552076 [00:03<00:01, 109553.66it/s] 79%|███████▉  | 438089/552076 [00:04<00:01, 111402.63it/s] 81%|████████▏ | 449320/552076 [00:04<00:00, 106216.10it/s] 83%|████████▎ | 460056/552076 [00:04<00:00, 102848.64it/s] 86%|████████▌ | 472034/552076 [00:04<00:00, 107401.64it/s] 88%|████████▊ | 484241/552076 [00:04<00:00, 111417.02it/s] 90%|████████▉ | 496102/552076 [00:04<00:00, 113480.40it/s] 92%|█████████▏| 507939/552076 [00:04<00:00, 114901.57it/s] 94%|█████████▍| 519748/552076 [00:04<00:00, 115838.77it/s] 96%|█████████▋| 531550/552076 [00:04<00:00, 116484.41it/s] 98%|█████████▊| 543361/552076 [00:05<00:00, 116966.99it/s]100%|██████████| 552076/552076 [00:05<00:00, 108602.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5226/552076 [00:00<00:10, 52259.18it/s]  2%|▏         | 10877/552076 [00:00<00:10, 53465.52it/s]  3%|▎         | 17298/552076 [00:00<00:09, 55364.20it/s]  4%|▍         | 22005/552076 [00:00<00:10, 52584.03it/s]  6%|▌         | 32596/552076 [00:00<00:08, 61939.89it/s]  8%|▊         | 44498/552076 [00:00<00:07, 72348.18it/s] 10%|▉         | 55048/552076 [00:00<00:06, 79234.94it/s] 12%|█▏        | 67960/552076 [00:00<00:05, 89621.68it/s] 14%|█▍        | 77784/552076 [00:00<00:05, 79720.71it/s] 16%|█▌        | 88601/552076 [00:01<00:05, 85732.76it/s] 18%|█▊        | 97867/552076 [00:01<00:05, 76250.86it/s] 19%|█▉        | 106172/552076 [00:01<00:06, 65472.08it/s] 21%|██        | 113463/552076 [00:01<00:08, 54706.88it/s] 22%|██▏       | 120875/552076 [00:01<00:07, 59131.68it/s] 23%|██▎       | 127465/552076 [00:01<00:07, 60654.34it/s] 24%|██▍       | 134114/552076 [00:01<00:06, 60981.59it/s] 26%|██▌       | 143705/552076 [00:01<00:05, 68461.04it/s] 28%|██▊       | 155170/552076 [00:02<00:05, 77872.71it/s] 30%|██▉       | 163778/552076 [00:02<00:04, 79484.60it/s] 32%|███▏      | 175227/552076 [00:02<00:04, 87509.92it/s] 33%|███▎      | 184817/552076 [00:02<00:04, 89867.16it/s] 36%|███▌      | 196690/552076 [00:02<00:03, 96935.99it/s] 38%|███▊      | 207426/552076 [00:02<00:03, 99842.11it/s] 39%|███▉      | 217776/552076 [00:02<00:03, 99986.71it/s] 42%|████▏     | 230588/552076 [00:02<00:03, 107036.32it/s] 44%|████▍     | 242934/552076 [00:02<00:02, 111483.48it/s] 46%|████▌     | 254353/552076 [00:02<00:02, 112231.23it/s] 48%|████▊     | 267673/552076 [00:03<00:02, 117792.91it/s] 51%|█████     | 281845/552076 [00:03<00:02, 124077.16it/s] 53%|█████▎    | 294487/552076 [00:03<00:02, 118993.97it/s] 56%|█████▌    | 306595/552076 [00:03<00:02, 110828.02it/s] 58%|█████▊    | 317936/552076 [00:03<00:02, 104327.40it/s] 60%|█████▉    | 329929/552076 [00:03<00:02, 108562.72it/s] 62%|██████▏   | 341813/552076 [00:03<00:01, 110494.54it/s] 64%|██████▍   | 353869/552076 [00:03<00:01, 113333.12it/s] 66%|██████▋   | 366245/552076 [00:03<00:01, 116269.45it/s] 69%|██████▊   | 378434/552076 [00:04<00:01, 117897.93it/s] 71%|███████   | 390309/552076 [00:04<00:01, 112638.35it/s] 73%|███████▎  | 402504/552076 [00:04<00:01, 115278.13it/s] 75%|███████▌  | 414705/552076 [00:04<00:01, 117216.80it/s] 77%|███████▋  | 426933/552076 [00:04<00:01, 118690.72it/s] 80%|███████▉  | 439080/552076 [00:04<00:00, 119509.58it/s] 82%|████████▏ | 451265/552076 [00:04<00:00, 120201.48it/s] 84%|████████▍ | 463416/552076 [00:04<00:00, 120588.88it/s] 86%|████████▌ | 475496/552076 [00:04<00:00, 108799.39it/s] 88%|████████▊ | 486610/552076 [00:05<00:00, 77596.77it/s]  90%|████████▉ | 495784/552076 [00:05<00:00, 68400.61it/s] 91%|█████████▏| 503814/552076 [00:05<00:00, 59387.13it/s] 93%|█████████▎| 510798/552076 [00:05<00:00, 57692.80it/s] 94%|█████████▎| 517309/552076 [00:05<00:00, 53162.37it/s] 95%|█████████▍| 523215/552076 [00:05<00:00, 51493.78it/s] 96%|█████████▌| 528789/552076 [00:06<00:00, 48894.14it/s] 97%|█████████▋| 534003/552076 [00:06<00:00, 48017.23it/s] 98%|█████████▊| 539036/552076 [00:06<00:00, 47559.48it/s] 99%|█████████▊| 543955/552076 [00:06<00:00, 45770.06it/s]100%|█████████▉| 549451/552076 [00:06<00:00, 48186.77it/s]100%|██████████| 552076/552076 [00:06<00:00, 84297.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4622/552076 [00:00<00:11, 46217.62it/s]  2%|▏         | 9548/552076 [00:00<00:11, 47089.34it/s]  2%|▏         | 13142/552076 [00:00<00:12, 42318.11it/s]  3%|▎         | 18013/552076 [00:00<00:12, 44051.70it/s]  4%|▍         | 22465/552076 [00:00<00:12, 44090.74it/s]  5%|▍         | 26734/552076 [00:00<00:12, 43660.30it/s]  6%|▌         | 31439/552076 [00:00<00:12, 43333.29it/s]  6%|▋         | 35743/552076 [00:00<00:11, 43145.83it/s]  8%|▊         | 45495/552076 [00:00<00:09, 51812.45it/s] 10%|▉         | 54673/552076 [00:01<00:08, 59597.46it/s] 12%|█▏        | 63984/552076 [00:01<00:07, 66810.82it/s] 13%|█▎        | 72537/552076 [00:01<00:06, 71505.53it/s] 15%|█▍        | 81275/552076 [00:01<00:06, 74849.83it/s] 17%|█▋        | 91179/552076 [00:01<00:05, 80766.63it/s] 18%|█▊        | 99762/552076 [00:01<00:05, 75568.85it/s] 20%|█▉        | 107741/552076 [00:01<00:05, 75832.69it/s] 21%|██        | 116008/552076 [00:01<00:05, 77761.24it/s] 23%|██▎       | 127441/552076 [00:01<00:04, 86014.33it/s] 25%|██▌       | 139423/552076 [00:01<00:04, 93965.90it/s] 27%|██▋       | 151111/552076 [00:02<00:04, 99836.85it/s] 29%|██▉       | 161557/552076 [00:02<00:04, 88277.16it/s] 31%|███       | 170954/552076 [00:02<00:05, 65512.95it/s] 32%|███▏      | 178759/552076 [00:02<00:05, 63672.25it/s] 34%|███▎      | 186015/552076 [00:02<00:05, 62636.50it/s] 35%|███▍      | 192905/552076 [00:02<00:05, 60720.97it/s] 36%|███▌      | 199428/552076 [00:02<00:05, 60171.05it/s] 37%|███▋      | 205762/552076 [00:03<00:05, 59690.36it/s] 38%|███▊      | 211954/552076 [00:03<00:05, 59031.77it/s] 39%|███▉      | 218015/552076 [00:03<00:05, 59030.74it/s] 41%|████      | 224029/552076 [00:03<00:06, 53293.50it/s] 42%|████▏     | 229923/552076 [00:03<00:05, 54869.41it/s] 43%|████▎     | 236275/552076 [00:03<00:05, 57205.60it/s] 44%|████▍     | 242646/552076 [00:03<00:05, 59012.10it/s] 45%|████▌     | 248649/552076 [00:03<00:05, 56215.85it/s] 46%|████▌     | 254370/552076 [00:03<00:05, 55056.73it/s] 47%|████▋     | 260190/552076 [00:04<00:05, 55889.68it/s] 48%|████▊     | 266410/552076 [00:04<00:04, 57643.02it/s] 49%|████▉     | 272227/552076 [00:04<00:04, 57785.67it/s] 50%|█████     | 278043/552076 [00:04<00:05, 51556.22it/s] 52%|█████▏    | 287312/552076 [00:04<00:04, 59473.72it/s] 54%|█████▍    | 297395/552076 [00:04<00:03, 67818.32it/s] 55%|█████▌    | 304967/552076 [00:04<00:04, 57008.22it/s] 56%|█████▋    | 311514/552076 [00:04<00:04, 54107.37it/s] 58%|█████▊    | 317690/552076 [00:04<00:04, 55565.95it/s] 59%|█████▊    | 324074/552076 [00:05<00:03, 57812.83it/s] 60%|█████▉    | 330191/552076 [00:05<00:04, 48984.28it/s] 61%|██████    | 335677/552076 [00:05<00:04, 50610.37it/s] 62%|██████▏   | 341079/552076 [00:05<00:04, 48830.32it/s] 63%|██████▎   | 346214/552076 [00:05<00:04, 44787.77it/s] 64%|██████▍   | 353049/552076 [00:05<00:03, 49953.85it/s] 66%|██████▌   | 362558/552076 [00:05<00:03, 57395.41it/s] 67%|██████▋   | 368946/552076 [00:05<00:03, 56709.17it/s] 68%|██████▊   | 375151/552076 [00:06<00:03, 58211.17it/s] 69%|██████▉   | 381301/552076 [00:06<00:02, 58358.28it/s] 70%|███████   | 387368/552076 [00:06<00:03, 51102.58it/s] 71%|███████   | 393350/552076 [00:06<00:02, 53438.03it/s] 72%|███████▏  | 399535/552076 [00:06<00:02, 55063.76it/s] 73%|███████▎  | 405423/552076 [00:06<00:02, 54483.23it/s] 74%|███████▍  | 411007/552076 [00:06<00:02, 53384.89it/s] 76%|███████▌  | 417030/552076 [00:06<00:02, 54380.11it/s] 77%|███████▋  | 423260/552076 [00:06<00:02, 56024.55it/s] 78%|███████▊  | 428927/552076 [00:07<00:02, 56093.95it/s] 79%|███████▉  | 435027/552076 [00:07<00:02, 56222.61it/s] 80%|███████▉  | 441319/552076 [00:07<00:01, 57332.03it/s] 81%|████████  | 447080/552076 [00:07<00:02, 52358.34it/s] 82%|████████▏ | 453259/552076 [00:07<00:01, 54870.60it/s] 83%|████████▎ | 458850/552076 [00:07<00:01, 54747.03it/s] 84%|████████▍ | 464979/552076 [00:07<00:01, 56557.36it/s] 85%|████████▌ | 471169/552076 [00:07<00:01, 56842.26it/s] 86%|████████▋ | 477422/552076 [00:07<00:01, 58436.59it/s] 88%|████████▊ | 483310/552076 [00:07<00:01, 58378.33it/s] 89%|████████▊ | 489456/552076 [00:08<00:01, 59269.12it/s] 90%|█████████ | 499035/552076 [00:08<00:00, 66923.50it/s] 92%|█████████▏| 508181/552076 [00:08<00:00, 72780.02it/s] 93%|█████████▎| 515853/552076 [00:08<00:00, 73069.64it/s] 95%|█████████▌| 524983/552076 [00:08<00:00, 77725.39it/s] 97%|█████████▋| 533030/552076 [00:08<00:00, 74038.34it/s] 98%|█████████▊| 543085/552076 [00:08<00:00, 80396.39it/s]100%|██████████| 552076/552076 [00:08<00:00, 62956.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3979/552076 [00:00<00:14, 38670.48it/s]  2%|▏         | 9035/552076 [00:00<00:13, 41604.81it/s]  3%|▎         | 14845/552076 [00:00<00:12, 43802.61it/s]  4%|▎         | 20088/552076 [00:00<00:11, 46076.48it/s]  5%|▍         | 26041/552076 [00:00<00:10, 49426.88it/s]  6%|▌         | 30623/552076 [00:00<00:10, 47545.07it/s]  6%|▋         | 35374/552076 [00:00<00:11, 45024.78it/s]  8%|▊         | 41666/552076 [00:00<00:10, 48619.63it/s]  8%|▊         | 46458/552076 [00:00<00:11, 45605.05it/s] 10%|▉         | 52578/552076 [00:01<00:10, 49379.36it/s] 10%|█         | 57599/552076 [00:01<00:09, 49616.89it/s] 12%|█▏        | 63730/552076 [00:01<00:09, 52627.06it/s] 13%|█▎        | 69887/552076 [00:01<00:08, 55023.69it/s] 14%|█▎        | 75627/552076 [00:01<00:08, 55271.59it/s] 15%|█▍        | 81813/552076 [00:01<00:08, 57094.74it/s] 16%|█▌        | 87583/552076 [00:01<00:08, 54029.38it/s] 17%|█▋        | 93548/552076 [00:01<00:08, 55600.16it/s] 18%|█▊        | 99831/552076 [00:01<00:07, 57587.46it/s] 19%|█▉        | 106118/552076 [00:01<00:07, 59075.86it/s] 20%|██        | 112080/552076 [00:02<00:07, 57947.40it/s] 21%|██▏       | 118150/552076 [00:02<00:07, 58745.44it/s] 23%|██▎       | 124424/552076 [00:02<00:07, 59888.35it/s] 24%|██▎       | 130655/552076 [00:02<00:06, 60593.94it/s] 25%|██▍       | 136737/552076 [00:02<00:07, 58086.72it/s] 26%|██▌       | 142583/552076 [00:02<00:07, 54915.07it/s] 27%|██▋       | 148137/552076 [00:02<00:07, 52996.18it/s] 28%|██▊       | 153495/552076 [00:02<00:07, 50905.89it/s] 29%|██▉       | 158974/552076 [00:02<00:07, 52010.93it/s] 30%|██▉       | 165106/552076 [00:03<00:07, 53032.08it/s] 31%|███       | 171263/552076 [00:03<00:06, 55333.05it/s] 32%|███▏      | 176993/552076 [00:03<00:06, 54320.74it/s] 33%|███▎      | 183181/552076 [00:03<00:06, 56386.79it/s] 34%|███▍      | 189221/552076 [00:03<00:06, 56805.83it/s] 35%|███▌      | 195568/552076 [00:03<00:06, 58652.99it/s] 37%|███▋      | 201679/552076 [00:03<00:05, 58762.94it/s] 38%|███▊      | 207999/552076 [00:03<00:05, 60027.05it/s] 39%|███▉      | 214073/552076 [00:03<00:05, 59453.99it/s] 40%|███▉      | 220038/552076 [00:04<00:05, 57996.67it/s] 41%|████      | 226221/552076 [00:04<00:05, 59095.18it/s] 42%|████▏     | 232151/552076 [00:04<00:05, 56291.54it/s] 43%|████▎     | 237823/552076 [00:04<00:05, 54410.08it/s] 44%|████▍     | 244318/552076 [00:04<00:05, 56581.61it/s] 45%|████▌     | 250821/552076 [00:04<00:05, 58875.92it/s] 47%|████▋     | 256770/552076 [00:04<00:05, 57698.26it/s] 48%|████▊     | 263049/552076 [00:04<00:04, 58456.58it/s] 49%|████▉     | 269475/552076 [00:04<00:04, 60083.65it/s] 50%|████▉     | 275924/552076 [00:04<00:04, 60131.14it/s] 51%|█████     | 282205/552076 [00:05<00:04, 60909.96it/s] 52%|█████▏    | 288317/552076 [00:05<00:04, 60471.32it/s] 53%|█████▎    | 294621/552076 [00:05<00:04, 61219.44it/s] 54%|█████▍    | 300756/552076 [00:05<00:04, 60131.00it/s] 56%|█████▌    | 307024/552076 [00:05<00:04, 60203.72it/s] 57%|█████▋    | 313054/552076 [00:05<00:04, 58124.01it/s] 58%|█████▊    | 318889/552076 [00:05<00:04, 51227.20it/s] 59%|█████▊    | 324177/552076 [00:05<00:04, 49611.73it/s] 60%|█████▉    | 329265/552076 [00:05<00:04, 47418.55it/s] 61%|██████    | 335456/552076 [00:06<00:04, 50999.42it/s] 62%|██████▏   | 341255/552076 [00:06<00:04, 51652.14it/s] 63%|██████▎   | 347365/552076 [00:06<00:03, 54163.63it/s] 64%|██████▍   | 352890/552076 [00:06<00:03, 51988.88it/s] 65%|██████▍   | 358698/552076 [00:06<00:03, 53677.62it/s] 66%|██████▌   | 364856/552076 [00:06<00:03, 55825.60it/s] 67%|██████▋   | 371013/552076 [00:06<00:03, 57432.68it/s] 68%|██████▊   | 376823/552076 [00:06<00:03, 56431.01it/s] 69%|██████▉   | 382598/552076 [00:06<00:02, 56555.84it/s] 70%|███████   | 388454/552076 [00:06<00:02, 57141.71it/s] 71%|███████▏  | 394195/552076 [00:07<00:02, 54433.30it/s] 72%|███████▏  | 399684/552076 [00:07<00:03, 45771.72it/s] 74%|███████▎  | 406036/552076 [00:07<00:02, 48882.75it/s] 75%|███████▍  | 412226/552076 [00:07<00:02, 52173.51it/s] 76%|███████▌  | 417677/552076 [00:07<00:03, 43383.96it/s] 77%|███████▋  | 422966/552076 [00:07<00:02, 45328.72it/s] 78%|███████▊  | 428279/552076 [00:07<00:02, 47416.63it/s] 79%|███████▊  | 434290/552076 [00:07<00:02, 50623.50it/s] 80%|███████▉  | 440059/552076 [00:08<00:02, 52554.04it/s] 82%|████████▏ | 451692/552076 [00:08<00:01, 62898.18it/s] 84%|████████▍ | 463054/552076 [00:08<00:01, 72623.34it/s] 86%|████████▌ | 474206/552076 [00:08<00:00, 81110.04it/s] 88%|████████▊ | 483512/552076 [00:08<00:00, 76605.15it/s] 89%|████████▉ | 492061/552076 [00:08<00:00, 72942.98it/s] 91%|█████████ | 500014/552076 [00:08<00:00, 67786.51it/s] 92%|█████████▏| 507327/552076 [00:08<00:00, 52533.15it/s] 93%|█████████▎| 513619/552076 [00:09<00:00, 55269.79it/s] 94%|█████████▍| 519814/552076 [00:09<00:00, 52881.93it/s] 95%|█████████▌| 525591/552076 [00:09<00:00, 49390.21it/s] 96%|█████████▌| 530919/552076 [00:09<00:00, 49004.15it/s] 97%|█████████▋| 536093/552076 [00:09<00:00, 47210.68it/s] 98%|█████████▊| 541041/552076 [00:09<00:00, 47815.86it/s] 99%|█████████▉| 546230/552076 [00:09<00:00, 48419.20it/s]100%|█████████▉| 551798/552076 [00:09<00:00, 49217.64it/s]100%|██████████| 552076/552076 [00:09<00:00, 55808.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4668/552076 [00:00<00:13, 41397.46it/s]  2%|▏         | 9473/552076 [00:00<00:12, 42952.14it/s]  2%|▏         | 13639/552076 [00:00<00:12, 41960.70it/s]  3%|▎         | 18951/552076 [00:00<00:12, 44269.29it/s]  5%|▍         | 25148/552076 [00:00<00:10, 48417.73it/s]  5%|▌         | 29446/552076 [00:00<00:11, 45324.77it/s]  6%|▌         | 33644/552076 [00:00<00:11, 44266.06it/s]  7%|▋         | 38467/552076 [00:00<00:11, 44450.09it/s]  8%|▊         | 44353/552076 [00:00<00:10, 47009.87it/s]  9%|▉         | 49403/552076 [00:01<00:10, 47623.14it/s] 10%|▉         | 54115/552076 [00:01<00:10, 46203.41it/s] 11%|█         | 58710/552076 [00:01<00:11, 43730.57it/s] 11%|█▏        | 63135/552076 [00:01<00:11, 43884.69it/s] 12%|█▏        | 67530/552076 [00:01<00:12, 39813.51it/s] 13%|█▎        | 73326/552076 [00:01<00:10, 43601.95it/s] 14%|█▍        | 79009/552076 [00:01<00:10, 46874.47it/s] 15%|█▌        | 84913/552076 [00:01<00:09, 49564.85it/s] 17%|█▋        | 91234/552076 [00:01<00:08, 52996.85it/s] 18%|█▊        | 96719/552076 [00:02<00:08, 52965.36it/s] 19%|█▊        | 102958/552076 [00:02<00:08, 55478.54it/s] 20%|█▉        | 108964/552076 [00:02<00:07, 56093.42it/s] 21%|██        | 115178/552076 [00:02<00:07, 57779.37it/s] 22%|██▏       | 121030/552076 [00:02<00:07, 56067.85it/s] 24%|██▍       | 132632/552076 [00:02<00:06, 66353.71it/s] 25%|██▌       | 140484/552076 [00:02<00:05, 69587.07it/s] 27%|██▋       | 148054/552076 [00:02<00:06, 67287.48it/s] 29%|██▉       | 159256/552076 [00:02<00:05, 76444.60it/s] 30%|███       | 167638/552076 [00:02<00:04, 77683.40it/s] 32%|███▏      | 175928/552076 [00:03<00:05, 73481.10it/s] 33%|███▎      | 183688/552076 [00:03<00:05, 66281.61it/s] 35%|███▍      | 190739/552076 [00:03<00:05, 65021.64it/s] 36%|███▌      | 197542/552076 [00:03<00:05, 64432.03it/s] 37%|███▋      | 204198/552076 [00:03<00:05, 61043.84it/s] 39%|███▊      | 212865/552076 [00:03<00:05, 66984.28it/s] 41%|████      | 224022/552076 [00:03<00:04, 76108.39it/s] 43%|████▎     | 236016/552076 [00:03<00:03, 85479.76it/s] 45%|████▍     | 246977/552076 [00:03<00:03, 91521.73it/s] 47%|████▋     | 256826/552076 [00:04<00:03, 86088.63it/s] 48%|████▊     | 265989/552076 [00:04<00:03, 78461.69it/s] 50%|████▉     | 274738/552076 [00:04<00:03, 80967.61it/s] 51%|█████▏    | 283218/552076 [00:04<00:03, 71690.40it/s] 53%|█████▎    | 292070/552076 [00:04<00:03, 76025.32it/s] 54%|█████▍    | 300069/552076 [00:04<00:03, 76655.26it/s] 56%|█████▌    | 308013/552076 [00:04<00:03, 76566.03it/s] 57%|█████▋    | 315865/552076 [00:04<00:03, 72966.87it/s] 59%|█████▉    | 326919/552076 [00:05<00:02, 81251.28it/s] 61%|██████    | 335464/552076 [00:05<00:02, 78449.06it/s] 63%|██████▎   | 347659/552076 [00:05<00:02, 87849.69it/s] 66%|██████▌   | 365236/552076 [00:05<00:01, 103359.35it/s] 69%|██████▉   | 383387/552076 [00:05<00:01, 118689.47it/s] 73%|███████▎  | 400544/552076 [00:05<00:01, 130781.66it/s] 75%|███████▌  | 415301/552076 [00:05<00:01, 134662.87it/s] 78%|███████▊  | 429971/552076 [00:05<00:00, 131895.46it/s] 80%|████████  | 444016/552076 [00:05<00:00, 128360.41it/s] 83%|████████▎ | 457472/552076 [00:06<00:00, 105386.04it/s] 85%|████████▍ | 469121/552076 [00:06<00:00, 106091.58it/s] 87%|████████▋ | 480509/552076 [00:06<00:00, 106699.24it/s] 89%|████████▉ | 492855/552076 [00:06<00:00, 111227.43it/s] 91%|█████████▏| 505117/552076 [00:06<00:00, 114415.97it/s] 94%|█████████▎| 516884/552076 [00:06<00:00, 114632.35it/s] 96%|█████████▌| 529131/552076 [00:06<00:00, 116875.33it/s] 98%|█████████▊| 540989/552076 [00:06<00:00, 110798.00it/s]100%|██████████| 552076/552076 [00:07<00:00, 78806.27it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14666/552076 [00:00<00:03, 146654.90it/s]  6%|▋         | 34531/552076 [00:00<00:03, 159150.42it/s] 10%|█         | 55579/552076 [00:00<00:02, 171712.21it/s] 14%|█▎        | 75037/552076 [00:00<00:02, 177986.66it/s] 16%|█▋        | 89724/552076 [00:00<00:02, 159232.93it/s] 19%|█▉        | 103839/552076 [00:00<00:03, 136274.21it/s] 21%|██        | 116779/552076 [00:00<00:03, 118050.22it/s] 23%|██▎       | 128536/552076 [00:00<00:04, 105871.90it/s] 26%|██▌       | 142247/552076 [00:01<00:03, 113638.92it/s] 29%|██▉       | 159490/552076 [00:01<00:03, 126586.22it/s] 33%|███▎      | 180949/552076 [00:01<00:02, 144343.79it/s] 37%|███▋      | 202254/552076 [00:01<00:02, 159803.66it/s] 41%|████      | 224048/552076 [00:01<00:01, 173704.51it/s] 44%|████▍     | 242790/552076 [00:01<00:01, 165462.93it/s] 47%|████▋     | 260385/552076 [00:01<00:01, 168474.41it/s] 51%|█████     | 282066/552076 [00:01<00:01, 180549.66it/s] 55%|█████▍    | 300884/552076 [00:01<00:01, 182715.92it/s] 59%|█████▊    | 322983/552076 [00:01<00:01, 192729.60it/s] 63%|██████▎   | 345670/552076 [00:02<00:01, 201840.59it/s] 67%|██████▋   | 368366/552076 [00:02<00:00, 208770.25it/s] 71%|███████   | 390907/552076 [00:02<00:00, 213495.69it/s] 75%|███████▍  | 413874/552076 [00:02<00:00, 218102.93it/s] 79%|███████▉  | 436603/552076 [00:02<00:00, 220778.34it/s] 83%|████████▎ | 458855/552076 [00:02<00:00, 220478.89it/s] 87%|████████▋ | 481025/552076 [00:02<00:00, 203955.96it/s] 91%|█████████ | 503491/552076 [00:02<00:00, 209753.33it/s] 95%|█████████▌| 525834/552076 [00:02<00:00, 213676.71it/s] 99%|█████████▉| 547752/552076 [00:02<00:00, 215296.85it/s]100%|██████████| 552076/552076 [00:03<00:00, 183393.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20673/552076 [00:00<00:02, 206725.76it/s]  8%|▊         | 42383/552076 [00:00<00:02, 209730.73it/s] 12%|█▏        | 65152/552076 [00:00<00:02, 214812.15it/s] 16%|█▌        | 88128/552076 [00:00<00:02, 219087.68it/s] 20%|█▉        | 110074/552076 [00:00<00:02, 219196.80it/s] 24%|██▎       | 131084/552076 [00:00<00:01, 216384.74it/s] 27%|██▋       | 150322/552076 [00:00<00:02, 192433.50it/s] 30%|███       | 168377/552076 [00:00<00:02, 178514.73it/s] 34%|███▎      | 185598/552076 [00:00<00:02, 171973.68it/s] 38%|███▊      | 207677/552076 [00:01<00:01, 184188.50it/s] 42%|████▏     | 229800/552076 [00:01<00:01, 193927.87it/s] 46%|████▌     | 252541/552076 [00:01<00:01, 202889.36it/s] 50%|████▉     | 275353/552076 [00:01<00:01, 209851.51it/s] 54%|█████▎    | 296532/552076 [00:01<00:01, 209173.28it/s] 58%|█████▊    | 318052/552076 [00:01<00:01, 210943.24it/s] 61%|██████▏   | 339245/552076 [00:01<00:01, 208199.85it/s] 65%|██████▌   | 360143/552076 [00:01<00:00, 200792.24it/s] 69%|██████▉   | 380333/552076 [00:01<00:00, 194529.17it/s] 72%|███████▏  | 399906/552076 [00:01<00:00, 193542.36it/s] 76%|███████▌  | 419346/552076 [00:02<00:00, 192748.89it/s] 79%|███████▉  | 438682/552076 [00:02<00:00, 191746.66it/s] 83%|████████▎ | 457901/552076 [00:02<00:00, 190913.19it/s] 86%|████████▋ | 477024/552076 [00:02<00:00, 190319.76it/s] 90%|████████▉ | 496145/552076 [00:02<00:00, 190583.84it/s] 93%|█████████▎| 515429/552076 [00:02<00:00, 191251.52it/s] 97%|█████████▋| 534566/552076 [00:02<00:00, 190528.37it/s]100%|██████████| 552076/552076 [00:02<00:00, 198112.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18664/552076 [00:00<00:02, 186631.72it/s]  7%|▋         | 38586/552076 [00:00<00:02, 190236.17it/s] 11%|█         | 58402/552076 [00:00<00:02, 192545.63it/s] 14%|█▍        | 78030/552076 [00:00<00:02, 193649.07it/s] 18%|█▊        | 96909/552076 [00:00<00:02, 192165.07it/s] 21%|██        | 115155/552076 [00:00<00:02, 189145.22it/s] 24%|██▍       | 131894/552076 [00:00<00:02, 177681.13it/s] 27%|██▋       | 148281/552076 [00:00<00:02, 141346.51it/s] 29%|██▉       | 162623/552076 [00:01<00:03, 122709.77it/s] 32%|███▏      | 175478/552076 [00:01<00:03, 121708.01it/s] 34%|███▍      | 188059/552076 [00:01<00:03, 117905.96it/s] 36%|███▋      | 200163/552076 [00:01<00:03, 115701.36it/s] 38%|███▊      | 211962/552076 [00:01<00:03, 108665.55it/s] 41%|████      | 224169/552076 [00:01<00:02, 112366.69it/s] 43%|████▎     | 235611/552076 [00:01<00:02, 112066.28it/s] 45%|████▍     | 246962/552076 [00:01<00:03, 98854.53it/s]  47%|████▋     | 257234/552076 [00:01<00:03, 95829.41it/s] 49%|████▉     | 269209/552076 [00:02<00:02, 101936.04it/s] 51%|█████     | 279713/552076 [00:02<00:02, 96672.22it/s]  53%|█████▎    | 291917/552076 [00:02<00:02, 103099.79it/s] 55%|█████▍    | 302537/552076 [00:02<00:02, 99225.53it/s]  57%|█████▋    | 312991/552076 [00:02<00:02, 99565.39it/s] 59%|█████▊    | 323122/552076 [00:02<00:02, 99155.67it/s] 61%|██████    | 335122/552076 [00:02<00:02, 104606.45it/s] 63%|██████▎   | 347262/552076 [00:02<00:01, 109133.61it/s] 65%|██████▌   | 359571/552076 [00:02<00:01, 112976.47it/s] 67%|██████▋   | 371020/552076 [00:03<00:01, 106910.27it/s] 69%|██████▉   | 383095/552076 [00:03<00:01, 110714.49it/s] 71%|███████▏  | 394492/552076 [00:03<00:01, 111669.83it/s] 74%|███████▍  | 407323/552076 [00:03<00:01, 116189.78it/s] 76%|███████▌  | 419067/552076 [00:03<00:01, 102258.61it/s] 78%|███████▊  | 429916/552076 [00:03<00:01, 104050.86it/s] 80%|███████▉  | 441573/552076 [00:03<00:01, 107514.17it/s] 82%|████████▏ | 453810/552076 [00:03<00:00, 111575.79it/s] 84%|████████▍ | 466133/552076 [00:03<00:00, 114831.50it/s] 87%|████████▋ | 478410/552076 [00:03<00:00, 117100.75it/s] 89%|████████▉ | 490674/552076 [00:04<00:00, 118708.72it/s] 91%|█████████ | 502656/552076 [00:04<00:00, 119038.62it/s] 93%|█████████▎| 514625/552076 [00:04<00:00, 118685.92it/s] 95%|█████████▌| 526702/552076 [00:04<00:00, 119302.57it/s] 98%|█████████▊| 538666/552076 [00:04<00:00, 112249.90it/s]100%|█████████▉| 550824/552076 [00:04<00:00, 114894.44it/s]100%|██████████| 552076/552076 [00:04<00:00, 120077.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5496/552076 [00:00<00:10, 53037.00it/s]  2%|▏         | 11283/552076 [00:00<00:09, 54399.31it/s]  3%|▎         | 17023/552076 [00:00<00:09, 55265.00it/s]  4%|▍         | 22605/552076 [00:00<00:09, 55332.03it/s]  6%|▌         | 31306/552076 [00:00<00:08, 62115.66it/s]  8%|▊         | 43119/552076 [00:00<00:07, 72416.92it/s] 10%|▉         | 55183/552076 [00:00<00:06, 82283.16it/s] 12%|█▏        | 65180/552076 [00:00<00:05, 85111.46it/s] 14%|█▍        | 76327/552076 [00:00<00:05, 91608.81it/s] 16%|█▌        | 88504/552076 [00:01<00:04, 98960.70it/s] 18%|█▊        | 100684/552076 [00:01<00:04, 104858.96it/s] 20%|██        | 111839/552076 [00:01<00:04, 106780.18it/s] 22%|██▏       | 123876/552076 [00:01<00:03, 110523.22it/s] 25%|██▍       | 135960/552076 [00:01<00:03, 113426.40it/s] 27%|██▋       | 147899/552076 [00:01<00:03, 115151.21it/s] 29%|██▉       | 159958/552076 [00:01<00:03, 116730.42it/s] 31%|███       | 171885/552076 [00:01<00:03, 117480.23it/s] 33%|███▎      | 184085/552076 [00:01<00:03, 118798.32it/s] 36%|███▌      | 196064/552076 [00:01<00:02, 119091.42it/s] 38%|███▊      | 208210/552076 [00:02<00:02, 119791.93it/s] 40%|███▉      | 220590/552076 [00:02<00:02, 120966.45it/s] 42%|████▏     | 232835/552076 [00:02<00:02, 121405.00it/s] 44%|████▍     | 245431/552076 [00:02<00:02, 122733.49it/s] 47%|████▋     | 257720/552076 [00:02<00:02, 122461.45it/s] 49%|████▉     | 269977/552076 [00:02<00:02, 110282.93it/s] 51%|█████     | 282090/552076 [00:02<00:02, 113326.71it/s] 53%|█████▎    | 294188/552076 [00:02<00:02, 115517.12it/s] 55%|█████▌    | 306227/552076 [00:02<00:02, 116935.06it/s] 58%|█████▊    | 318500/552076 [00:02<00:01, 118612.99it/s] 60%|█████▉    | 330760/552076 [00:03<00:01, 119780.12it/s] 62%|██████▏   | 343022/552076 [00:03<00:01, 120616.68it/s] 64%|██████▍   | 355350/552076 [00:03<00:01, 121400.82it/s] 67%|██████▋   | 367695/552076 [00:03<00:01, 122007.91it/s] 69%|██████▉   | 380060/552076 [00:03<00:01, 122495.10it/s] 71%|███████   | 392374/552076 [00:03<00:01, 122687.64it/s] 73%|███████▎  | 404661/552076 [00:03<00:01, 122741.18it/s] 76%|███████▌  | 416943/552076 [00:03<00:01, 122261.73it/s] 78%|███████▊  | 429176/552076 [00:03<00:01, 105365.36it/s] 80%|███████▉  | 440129/552076 [00:04<00:01, 101642.03it/s] 82%|████████▏ | 450613/552076 [00:04<00:01, 85720.17it/s]  83%|████████▎ | 460804/552076 [00:04<00:01, 90008.80it/s] 85%|████████▌ | 470702/552076 [00:04<00:00, 92522.80it/s] 87%|████████▋ | 480330/552076 [00:04<00:00, 79746.76it/s] 89%|████████▊ | 488879/552076 [00:04<00:00, 72355.70it/s] 90%|████████▉ | 496648/552076 [00:04<00:00, 68258.36it/s] 91%|█████████▏| 503896/552076 [00:04<00:00, 65118.08it/s] 93%|█████████▎| 514280/552076 [00:05<00:00, 73319.33it/s] 95%|█████████▌| 526472/552076 [00:05<00:00, 83277.99it/s] 97%|█████████▋| 536523/552076 [00:05<00:00, 87792.30it/s] 99%|█████████▉| 548787/552076 [00:05<00:00, 95972.66it/s]100%|██████████| 552076/552076 [00:05<00:00, 102780.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6783/552076 [00:00<00:08, 61657.28it/s]  2%|▏         | 12806/552076 [00:00<00:08, 61221.39it/s]  3%|▎         | 18212/552076 [00:00<00:09, 58880.65it/s]  4%|▍         | 24028/552076 [00:00<00:09, 58661.97it/s]  5%|▌         | 30169/552076 [00:00<00:08, 59459.03it/s]  8%|▊         | 41636/552076 [00:00<00:07, 69497.17it/s]  9%|▉         | 49688/552076 [00:00<00:06, 72472.93it/s] 10%|█         | 56924/552076 [00:00<00:07, 68367.88it/s] 12%|█▏        | 65138/552076 [00:00<00:06, 71988.30it/s] 14%|█▍        | 77082/552076 [00:01<00:05, 81728.09it/s] 16%|█▌        | 85760/552076 [00:01<00:05, 82653.72it/s] 17%|█▋        | 96094/552076 [00:01<00:05, 87934.26it/s] 20%|█▉        | 108171/552076 [00:01<00:04, 95742.29it/s] 22%|██▏       | 120276/552076 [00:01<00:04, 102147.74it/s] 24%|██▍       | 132625/552076 [00:01<00:03, 107733.30it/s] 26%|██▌       | 144776/552076 [00:01<00:03, 111526.04it/s] 28%|██▊       | 156487/552076 [00:01<00:03, 113142.04it/s] 31%|███       | 168777/552076 [00:01<00:03, 115902.40it/s] 33%|███▎      | 181085/552076 [00:01<00:03, 117965.19it/s] 35%|███▌      | 193474/552076 [00:02<00:02, 119680.07it/s] 37%|███▋      | 205937/552076 [00:02<00:02, 121120.35it/s] 40%|███▉      | 218309/552076 [00:02<00:02, 121888.13it/s] 42%|████▏     | 230602/552076 [00:02<00:02, 122197.91it/s] 44%|████▍     | 242985/552076 [00:02<00:02, 122682.69it/s] 46%|████▌     | 255303/552076 [00:02<00:02, 122829.83it/s] 48%|████▊     | 267604/552076 [00:02<00:02, 122535.92it/s] 51%|█████     | 279871/552076 [00:02<00:02, 120961.40it/s] 53%|█████▎    | 292151/552076 [00:02<00:02, 121506.34it/s] 55%|█████▌    | 304433/552076 [00:02<00:02, 121894.57it/s] 57%|█████▋    | 316798/552076 [00:03<00:01, 122412.86it/s] 60%|█████▉    | 329045/552076 [00:03<00:01, 122105.94it/s] 62%|██████▏   | 341260/552076 [00:03<00:01, 122051.99it/s] 64%|██████▍   | 353469/552076 [00:03<00:01, 100007.57it/s] 66%|██████▌   | 364126/552076 [00:03<00:01, 100520.01it/s] 68%|██████▊   | 374907/552076 [00:03<00:01, 102599.07it/s] 70%|██████▉   | 385686/552076 [00:03<00:01, 104102.54it/s] 72%|███████▏  | 396335/552076 [00:03<00:01, 93189.22it/s]  74%|███████▍  | 408045/552076 [00:03<00:01, 99269.80it/s] 76%|███████▌  | 418348/552076 [00:04<00:01, 98926.52it/s] 78%|███████▊  | 428505/552076 [00:04<00:01, 94748.14it/s] 79%|███████▉  | 438342/552076 [00:04<00:01, 95805.34it/s] 81%|████████▏ | 449048/552076 [00:04<00:01, 98652.41it/s] 83%|████████▎ | 459265/552076 [00:04<00:00, 99679.79it/s] 85%|████████▌ | 469328/552076 [00:04<00:00, 87054.42it/s] 87%|████████▋ | 481405/552076 [00:04<00:00, 95009.85it/s] 89%|████████▉ | 491370/552076 [00:04<00:00, 83339.25it/s] 91%|█████████ | 500289/552076 [00:05<00:00, 75506.07it/s] 92%|█████████▏| 509101/552076 [00:05<00:00, 78893.67it/s] 94%|█████████▎| 517416/552076 [00:05<00:00, 65199.33it/s] 95%|█████████▌| 524628/552076 [00:05<00:00, 53761.68it/s] 96%|█████████▌| 530821/552076 [00:05<00:00, 47723.66it/s] 97%|█████████▋| 536291/552076 [00:05<00:00, 44911.86it/s] 98%|█████████▊| 541305/552076 [00:05<00:00, 43083.31it/s] 99%|█████████▉| 545995/552076 [00:06<00:00, 41854.62it/s]100%|█████████▉| 550455/552076 [00:06<00:00, 41460.83it/s]100%|██████████| 552076/552076 [00:06<00:00, 88967.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6683/552076 [00:00<00:08, 66825.60it/s]  3%|▎         | 14580/552076 [00:00<00:07, 70057.72it/s]  4%|▍         | 24334/552076 [00:00<00:07, 75191.88it/s]  6%|▌         | 33843/552076 [00:00<00:06, 80226.09it/s]  8%|▊         | 44865/552076 [00:00<00:05, 87356.17it/s] 10%|▉         | 52796/552076 [00:00<00:06, 82243.64it/s] 11%|█         | 61587/552076 [00:00<00:05, 83863.36it/s] 13%|█▎        | 72583/552076 [00:00<00:05, 90291.99it/s] 15%|█▍        | 81512/552076 [00:00<00:05, 85853.58it/s] 17%|█▋        | 92943/552076 [00:01<00:04, 92781.38it/s] 19%|█▉        | 104124/552076 [00:01<00:04, 97771.98it/s] 21%|██        | 115258/552076 [00:01<00:04, 101481.63it/s] 23%|██▎       | 125563/552076 [00:01<00:04, 95425.22it/s]  25%|██▍       | 136412/552076 [00:01<00:04, 98998.80it/s] 27%|██▋       | 146475/552076 [00:01<00:04, 92912.32it/s] 28%|██▊       | 157239/552076 [00:01<00:04, 96889.24it/s] 30%|███       | 167115/552076 [00:01<00:03, 97442.46it/s] 32%|███▏      | 177681/552076 [00:01<00:03, 99769.05it/s] 34%|███▍      | 187760/552076 [00:02<00:04, 86191.02it/s] 36%|███▌      | 196778/552076 [00:02<00:04, 77229.28it/s] 37%|███▋      | 204955/552076 [00:02<00:04, 72529.77it/s] 39%|███▊      | 212584/552076 [00:02<00:04, 69153.92it/s] 40%|███▉      | 219796/552076 [00:02<00:05, 65758.50it/s] 41%|████      | 226615/552076 [00:02<00:05, 61282.22it/s] 42%|████▏     | 232975/552076 [00:02<00:05, 60214.69it/s] 43%|████▎     | 239163/552076 [00:02<00:05, 57601.87it/s] 44%|████▍     | 245064/552076 [00:03<00:05, 55704.84it/s] 45%|████▌     | 250747/552076 [00:03<00:05, 55998.05it/s] 46%|████▋     | 256426/552076 [00:03<00:05, 54717.78it/s] 47%|████▋     | 261960/552076 [00:03<00:05, 54386.50it/s] 48%|████▊     | 267486/552076 [00:03<00:05, 54645.61it/s] 49%|████▉     | 272982/552076 [00:03<00:05, 53528.65it/s] 50%|█████     | 278460/552076 [00:03<00:05, 53376.01it/s] 51%|█████▏    | 283817/552076 [00:03<00:05, 53389.09it/s] 52%|█████▏    | 289170/552076 [00:03<00:04, 52587.28it/s] 53%|█████▎    | 294561/552076 [00:03<00:04, 52977.02it/s] 54%|█████▍    | 299882/552076 [00:04<00:04, 52240.31it/s] 55%|█████▌    | 305215/552076 [00:04<00:04, 52562.49it/s] 56%|█████▌    | 310478/552076 [00:04<00:04, 51888.82it/s] 57%|█████▋    | 315802/552076 [00:04<00:04, 52285.94it/s] 58%|█████▊    | 321036/552076 [00:04<00:04, 51887.17it/s] 59%|█████▉    | 326427/552076 [00:04<00:04, 52477.29it/s] 60%|██████    | 331680/552076 [00:04<00:04, 50982.10it/s] 61%|██████    | 337142/552076 [00:04<00:04, 52021.07it/s] 62%|██████▏   | 342359/552076 [00:04<00:04, 46941.43it/s] 63%|██████▎   | 347704/552076 [00:05<00:04, 48006.06it/s] 64%|██████▍   | 352584/552076 [00:05<00:04, 46888.12it/s] 65%|██████▍   | 357334/552076 [00:05<00:04, 46465.24it/s] 66%|██████▌   | 362524/552076 [00:05<00:03, 47544.43it/s] 67%|██████▋   | 368132/552076 [00:05<00:03, 49818.26it/s] 68%|██████▊   | 373333/552076 [00:05<00:03, 50138.10it/s] 69%|██████▊   | 378735/552076 [00:05<00:03, 50914.26it/s] 70%|██████▉   | 384261/552076 [00:05<00:03, 52143.26it/s] 71%|███████   | 389504/552076 [00:05<00:03, 52116.16it/s] 72%|███████▏  | 395155/552076 [00:05<00:03, 51750.89it/s] 73%|███████▎  | 400589/552076 [00:06<00:02, 52500.27it/s] 74%|███████▎  | 405852/552076 [00:06<00:02, 52496.07it/s] 74%|███████▍  | 411215/552076 [00:06<00:02, 52830.97it/s] 75%|███████▌  | 416698/552076 [00:06<00:02, 53413.88it/s] 77%|███████▋  | 422450/552076 [00:06<00:02, 54582.38it/s] 78%|███████▊  | 427919/552076 [00:06<00:02, 53962.75it/s] 79%|███████▊  | 433471/552076 [00:06<00:02, 54419.73it/s] 80%|███████▉  | 439082/552076 [00:06<00:02, 54915.46it/s] 81%|████████  | 444580/552076 [00:06<00:02, 52948.24it/s] 81%|████████▏ | 449895/552076 [00:06<00:02, 50656.70it/s] 82%|████████▏ | 454996/552076 [00:07<00:02, 44371.65it/s] 83%|████████▎ | 460688/552076 [00:07<00:01, 47513.80it/s] 84%|████████▍ | 465800/552076 [00:07<00:01, 47853.64it/s] 85%|████████▌ | 471270/552076 [00:07<00:01, 49382.93it/s] 86%|████████▋ | 476871/552076 [00:07<00:01, 51199.47it/s] 87%|████████▋ | 482147/552076 [00:07<00:01, 51656.67it/s] 88%|████████▊ | 487375/552076 [00:07<00:01, 50779.60it/s] 89%|████████▉ | 492737/552076 [00:07<00:01, 51077.48it/s] 90%|█████████ | 497878/552076 [00:07<00:01, 47498.77it/s] 91%|█████████ | 502702/552076 [00:08<00:01, 44627.66it/s] 92%|█████████▏| 507252/552076 [00:08<00:01, 42889.81it/s] 93%|█████████▎| 512533/552076 [00:08<00:00, 44969.14it/s] 94%|█████████▎| 517519/552076 [00:08<00:00, 46332.09it/s] 95%|█████████▍| 522772/552076 [00:08<00:00, 47870.81it/s] 96%|█████████▌| 528404/552076 [00:08<00:00, 50126.47it/s] 97%|█████████▋| 534006/552076 [00:08<00:00, 50697.05it/s] 98%|█████████▊| 539126/552076 [00:08<00:00, 50399.27it/s] 99%|█████████▊| 544793/552076 [00:08<00:00, 52128.72it/s]100%|█████████▉| 550297/552076 [00:09<00:00, 52967.80it/s]100%|██████████| 552076/552076 [00:09<00:00, 60848.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5176/552076 [00:00<00:10, 50350.36it/s]  2%|▏         | 9051/552076 [00:00<00:11, 46091.98it/s]  2%|▏         | 13280/552076 [00:00<00:12, 44880.35it/s]  3%|▎         | 17198/552076 [00:00<00:12, 43002.94it/s]  4%|▍         | 21212/552076 [00:00<00:12, 41453.36it/s]  5%|▍         | 26037/552076 [00:00<00:12, 43282.13it/s]  5%|▌         | 30153/552076 [00:00<00:12, 42013.92it/s]  6%|▌         | 34436/552076 [00:00<00:13, 39350.40it/s]  7%|▋         | 38473/552076 [00:00<00:12, 39650.71it/s]  8%|▊         | 42455/552076 [00:01<00:12, 39700.67it/s]  8%|▊         | 46418/552076 [00:01<00:12, 39384.49it/s]  9%|▉         | 51085/552076 [00:01<00:12, 41318.09it/s] 10%|▉         | 55190/552076 [00:01<00:12, 40399.59it/s] 11%|█         | 59219/552076 [00:01<00:12, 40366.49it/s] 11%|█▏        | 63246/552076 [00:01<00:12, 40177.55it/s] 12%|█▏        | 67257/552076 [00:01<00:12, 40129.91it/s] 13%|█▎        | 71266/552076 [00:01<00:12, 39747.13it/s] 14%|█▎        | 75333/552076 [00:01<00:11, 40019.01it/s] 14%|█▍        | 79334/552076 [00:01<00:11, 39899.84it/s] 15%|█▌        | 83324/552076 [00:02<00:11, 39717.06it/s] 16%|█▌        | 87446/552076 [00:02<00:11, 40156.27it/s] 17%|█▋        | 91463/552076 [00:02<00:11, 39308.88it/s] 17%|█▋        | 95399/552076 [00:02<00:12, 37191.85it/s] 18%|█▊        | 99146/552076 [00:02<00:12, 36139.08it/s] 19%|█▊        | 102833/552076 [00:02<00:12, 36355.23it/s] 20%|██        | 110527/552076 [00:02<00:10, 43189.81it/s] 22%|██▏       | 118767/552076 [00:02<00:08, 50381.91it/s] 23%|██▎       | 124821/552076 [00:02<00:08, 52428.69it/s] 24%|██▎       | 130674/552076 [00:03<00:08, 46931.16it/s] 25%|██▍       | 136490/552076 [00:03<00:08, 49578.77it/s] 26%|██▌       | 141863/552076 [00:03<00:08, 45889.90it/s] 27%|██▋       | 146797/552076 [00:03<00:09, 42700.07it/s] 27%|██▋       | 151353/552076 [00:03<00:09, 41270.45it/s] 28%|██▊       | 155691/552076 [00:03<00:09, 40588.46it/s] 29%|██▉       | 159900/552076 [00:03<00:10, 37231.09it/s] 30%|██▉       | 163783/552076 [00:03<00:10, 35539.94it/s] 30%|███       | 167701/552076 [00:04<00:11, 34028.37it/s] 31%|███       | 171207/552076 [00:04<00:11, 33803.14it/s] 32%|███▏      | 175078/552076 [00:04<00:10, 34292.65it/s] 33%|███▎      | 180733/552076 [00:04<00:09, 38114.52it/s] 34%|███▍      | 186332/552076 [00:04<00:08, 42151.38it/s] 35%|███▍      | 191803/552076 [00:04<00:07, 45263.16it/s] 36%|███▌      | 197141/552076 [00:04<00:07, 45722.88it/s] 37%|███▋      | 201884/552076 [00:04<00:09, 37981.42it/s] 38%|███▊      | 209248/552076 [00:04<00:07, 44436.03it/s] 39%|███▉      | 217317/552076 [00:05<00:06, 51357.91it/s] 41%|████▏     | 228886/552076 [00:05<00:05, 61640.49it/s] 43%|████▎     | 238916/552076 [00:05<00:04, 69698.72it/s] 45%|████▍     | 247291/552076 [00:05<00:04, 68842.94it/s] 47%|████▋     | 259361/552076 [00:05<00:03, 79028.18it/s] 49%|████▊     | 268491/552076 [00:05<00:03, 73807.79it/s] 50%|█████     | 276801/552076 [00:05<00:03, 69654.73it/s] 52%|█████▏    | 285821/552076 [00:05<00:03, 74763.43it/s] 53%|█████▎    | 293892/552076 [00:05<00:03, 75743.60it/s] 55%|█████▍    | 303062/552076 [00:06<00:03, 79914.76it/s] 56%|█████▋    | 311409/552076 [00:06<00:03, 74407.54it/s] 58%|█████▊    | 320236/552076 [00:06<00:02, 77442.45it/s] 59%|█████▉    | 328240/552076 [00:06<00:02, 75444.18it/s] 61%|██████▏   | 339397/552076 [00:06<00:02, 83560.49it/s] 63%|██████▎   | 348161/552076 [00:06<00:02, 81313.68it/s] 65%|██████▍   | 356964/552076 [00:06<00:02, 83217.57it/s] 66%|██████▌   | 365506/552076 [00:06<00:02, 76961.85it/s] 68%|██████▊   | 376526/552076 [00:06<00:02, 84617.84it/s] 70%|██████▉   | 385825/552076 [00:07<00:01, 86966.53it/s] 72%|███████▏  | 396669/552076 [00:07<00:01, 92457.77it/s] 74%|███████▎  | 406220/552076 [00:07<00:01, 78163.14it/s] 75%|███████▌  | 414629/552076 [00:07<00:01, 70991.06it/s] 77%|███████▋  | 426586/552076 [00:07<00:01, 80843.52it/s] 79%|███████▉  | 438556/552076 [00:07<00:01, 89564.30it/s] 81%|████████  | 448402/552076 [00:07<00:01, 67377.87it/s] 83%|████████▎ | 456575/552076 [00:08<00:01, 61029.66it/s] 84%|████████▍ | 463797/552076 [00:08<00:01, 60017.90it/s] 85%|████████▌ | 470586/552076 [00:08<00:01, 56906.72it/s] 86%|████████▋ | 476862/552076 [00:08<00:01, 49571.80it/s] 87%|████████▋ | 482398/552076 [00:08<00:01, 44212.09it/s] 89%|████████▊ | 489124/552076 [00:08<00:01, 49277.69it/s] 90%|████████▉ | 495890/552076 [00:08<00:01, 53649.20it/s] 91%|█████████ | 501854/552076 [00:08<00:00, 55314.58it/s] 92%|█████████▏| 508517/552076 [00:09<00:00, 58282.41it/s] 93%|█████████▎| 514640/552076 [00:09<00:00, 52459.21it/s] 94%|█████████▍| 520202/552076 [00:09<00:00, 45286.39it/s] 95%|█████████▌| 525339/552076 [00:09<00:00, 46953.08it/s] 96%|█████████▌| 531139/552076 [00:09<00:00, 49262.70it/s] 97%|█████████▋| 536852/552076 [00:09<00:00, 51383.30it/s] 98%|█████████▊| 543541/552076 [00:09<00:00, 55223.37it/s] 99%|█████████▉| 549276/552076 [00:09<00:00, 51167.72it/s]100%|██████████| 552076/552076 [00:09<00:00, 55618.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4920/552076 [00:00<00:12, 42788.37it/s]  2%|▏         | 8864/552076 [00:00<00:13, 40058.35it/s]  3%|▎         | 13991/552076 [00:00<00:12, 42870.02it/s]  3%|▎         | 18768/552076 [00:00<00:12, 42142.83it/s]  4%|▍         | 22520/552076 [00:00<00:13, 40095.01it/s]  5%|▍         | 26513/552076 [00:00<00:13, 40044.20it/s]  6%|▌         | 32132/552076 [00:00<00:11, 43821.16it/s]  7%|▋         | 37574/552076 [00:00<00:11, 44784.83it/s]  8%|▊         | 43319/552076 [00:00<00:10, 47955.32it/s]  9%|▉         | 48770/552076 [00:01<00:10, 49681.37it/s] 10%|▉         | 54605/552076 [00:01<00:09, 51997.92it/s] 11%|█         | 60363/552076 [00:01<00:09, 53553.76it/s] 12%|█▏        | 65745/552076 [00:01<00:09, 52363.77it/s] 13%|█▎        | 71347/552076 [00:01<00:09, 53408.60it/s] 14%|█▍        | 77290/552076 [00:01<00:08, 55082.20it/s] 15%|█▌        | 83078/552076 [00:01<00:08, 55891.43it/s] 16%|█▌        | 88690/552076 [00:01<00:08, 54490.02it/s] 17%|█▋        | 94163/552076 [00:01<00:08, 54447.47it/s] 18%|█▊        | 99856/552076 [00:01<00:08, 55168.14it/s] 19%|█▉        | 105454/552076 [00:02<00:08, 53875.84it/s] 20%|██        | 110929/552076 [00:02<00:08, 54051.48it/s] 21%|██        | 116383/552076 [00:02<00:08, 54195.24it/s] 22%|██▏       | 121811/552076 [00:02<00:07, 54078.82it/s] 23%|██▎       | 127225/552076 [00:02<00:08, 52723.62it/s] 24%|██▍       | 132509/552076 [00:02<00:07, 52565.36it/s] 25%|██▍       | 137774/552076 [00:02<00:07, 52271.54it/s] 27%|██▋       | 147608/552076 [00:02<00:06, 60818.38it/s] 28%|██▊       | 155439/552076 [00:02<00:06, 64957.03it/s] 29%|██▉       | 162385/552076 [00:03<00:06, 62093.63it/s] 31%|███       | 168937/552076 [00:03<00:06, 60060.97it/s] 32%|███▏      | 175197/552076 [00:03<00:06, 55740.68it/s] 33%|███▎      | 181011/552076 [00:03<00:06, 55190.83it/s] 34%|███▍      | 186700/552076 [00:03<00:06, 54674.58it/s] 35%|███▍      | 192287/552076 [00:03<00:06, 54898.84it/s] 36%|███▌      | 197861/552076 [00:03<00:06, 53189.27it/s] 37%|███▋      | 203251/552076 [00:03<00:06, 53205.01it/s] 38%|███▊      | 208644/552076 [00:03<00:06, 52748.88it/s] 39%|███▉      | 214176/552076 [00:04<00:06, 53493.86it/s] 40%|███▉      | 219653/552076 [00:04<00:06, 53027.66it/s] 41%|████      | 225060/552076 [00:04<00:06, 53335.91it/s] 42%|████▏     | 230409/552076 [00:04<00:06, 52838.33it/s] 43%|████▎     | 235996/552076 [00:04<00:05, 53711.88it/s] 44%|████▎     | 241379/552076 [00:04<00:05, 52903.10it/s] 45%|████▍     | 246680/552076 [00:04<00:05, 51139.02it/s] 46%|████▌     | 251815/552076 [00:04<00:05, 50442.95it/s] 47%|████▋     | 257018/552076 [00:04<00:05, 50630.95it/s] 47%|████▋     | 262093/552076 [00:04<00:06, 43672.64it/s] 48%|████▊     | 266638/552076 [00:05<00:07, 40480.27it/s] 49%|████▉     | 270857/552076 [00:05<00:07, 38102.78it/s] 50%|████▉     | 274816/552076 [00:05<00:07, 36414.78it/s] 50%|█████     | 278577/552076 [00:05<00:07, 34913.30it/s] 51%|█████     | 282319/552076 [00:05<00:07, 35628.34it/s] 52%|█████▏    | 285954/552076 [00:05<00:07, 34079.91it/s] 52%|█████▏    | 289427/552076 [00:05<00:07, 34078.36it/s] 53%|█████▎    | 294372/552076 [00:05<00:06, 37396.13it/s] 54%|█████▍    | 299822/552076 [00:06<00:06, 41282.26it/s] 55%|█████▌    | 305329/552076 [00:06<00:05, 43664.25it/s] 56%|█████▌    | 309925/552076 [00:06<00:05, 43852.52it/s] 57%|█████▋    | 315604/552076 [00:06<00:05, 47068.62it/s] 58%|█████▊    | 321104/552076 [00:06<00:04, 48541.31it/s] 59%|█████▉    | 326675/552076 [00:06<00:04, 50490.11it/s] 60%|██████    | 331963/552076 [00:06<00:04, 50089.66it/s] 61%|██████    | 337927/552076 [00:06<00:04, 51553.70it/s] 62%|██████▏   | 343385/552076 [00:06<00:03, 52369.43it/s] 63%|██████▎   | 348734/552076 [00:06<00:03, 52111.76it/s] 64%|██████▍   | 353979/552076 [00:07<00:04, 49117.56it/s] 65%|██████▌   | 358950/552076 [00:07<00:04, 46965.32it/s] 66%|██████▌   | 363708/552076 [00:07<00:04, 43970.66it/s] 67%|██████▋   | 368742/552076 [00:07<00:04, 43352.36it/s] 68%|██████▊   | 373584/552076 [00:07<00:04, 44379.05it/s] 69%|██████▊   | 379268/552076 [00:07<00:03, 47501.89it/s] 70%|██████▉   | 384528/552076 [00:07<00:03, 48869.91it/s] 71%|███████   | 389654/552076 [00:07<00:03, 49563.05it/s] 72%|███████▏  | 395306/552076 [00:07<00:03, 51462.72it/s] 73%|███████▎  | 400510/552076 [00:08<00:03, 48936.21it/s] 73%|███████▎  | 405470/552076 [00:08<00:03, 48116.09it/s] 74%|███████▍  | 410332/552076 [00:08<00:03, 44516.15it/s] 75%|███████▌  | 414887/552076 [00:08<00:03, 44658.76it/s] 76%|███████▌  | 420585/552076 [00:08<00:02, 47756.02it/s] 77%|███████▋  | 425464/552076 [00:08<00:02, 47965.52it/s] 78%|███████▊  | 430333/552076 [00:08<00:02, 44793.60it/s] 79%|███████▉  | 436087/552076 [00:08<00:02, 47982.13it/s] 80%|███████▉  | 441014/552076 [00:08<00:02, 48171.76it/s] 81%|████████  | 446160/552076 [00:09<00:02, 48486.43it/s] 82%|████████▏ | 452086/552076 [00:09<00:01, 50779.12it/s] 83%|████████▎ | 458261/552076 [00:09<00:01, 53637.00it/s] 84%|████████▍ | 465125/552076 [00:09<00:01, 57399.87it/s] 86%|████████▌ | 474668/552076 [00:09<00:01, 65193.21it/s] 87%|████████▋ | 482801/552076 [00:09<00:00, 69318.59it/s] 89%|████████▉ | 494065/552076 [00:09<00:00, 78359.61it/s] 92%|█████████▏| 506634/552076 [00:09<00:00, 88338.10it/s] 94%|█████████▍| 518598/552076 [00:09<00:00, 95861.50it/s] 96%|█████████▌| 529085/552076 [00:09<00:00, 98396.68it/s] 98%|█████████▊| 541035/552076 [00:10<00:00, 103899.68it/s]100%|██████████| 552076/552076 [00:10<00:00, 54538.26it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5217/552076 [00:00<00:10, 52169.68it/s]  3%|▎         | 14917/552076 [00:00<00:08, 60278.63it/s]  5%|▍         | 26413/552076 [00:00<00:07, 70311.85it/s]  7%|▋         | 38079/552076 [00:00<00:06, 79825.08it/s]  8%|▊         | 45920/552076 [00:00<00:06, 77926.78it/s] 10%|▉         | 53624/552076 [00:00<00:06, 77266.50it/s] 12%|█▏        | 64859/552076 [00:00<00:05, 85251.85it/s] 14%|█▎        | 75905/552076 [00:00<00:05, 91516.85it/s] 15%|█▌        | 85335/552076 [00:00<00:05, 86689.25it/s] 17%|█▋        | 94251/552076 [00:01<00:05, 83783.28it/s] 19%|█▉        | 106309/552076 [00:01<00:04, 92226.38it/s] 21%|██▏       | 118125/552076 [00:01<00:04, 98726.88it/s] 24%|██▎       | 130301/552076 [00:01<00:04, 104665.19it/s] 26%|██▌       | 141148/552076 [00:01<00:04, 90866.48it/s]  27%|██▋       | 150826/552076 [00:01<00:04, 89606.80it/s] 29%|██▉       | 161920/552076 [00:01<00:04, 95090.94it/s] 32%|███▏      | 174213/552076 [00:01<00:03, 102021.44it/s] 34%|███▎      | 185755/552076 [00:01<00:03, 105701.17it/s] 36%|███▌      | 196647/552076 [00:02<00:03, 105584.20it/s] 38%|███▊      | 208855/552076 [00:02<00:03, 110042.98it/s] 40%|███▉      | 220209/552076 [00:02<00:02, 111067.50it/s] 42%|████▏     | 231874/552076 [00:02<00:02, 112684.50it/s] 44%|████▍     | 243989/552076 [00:02<00:02, 115094.64it/s] 46%|████▋     | 255651/552076 [00:02<00:02, 115547.91it/s] 49%|████▊     | 267864/552076 [00:02<00:02, 117445.24it/s] 51%|█████     | 279660/552076 [00:02<00:02, 117006.10it/s] 53%|█████▎    | 291904/552076 [00:02<00:02, 118584.65it/s] 55%|█████▌    | 304267/552076 [00:02<00:02, 120054.01it/s] 57%|█████▋    | 316299/552076 [00:03<00:01, 118409.42it/s] 60%|█████▉    | 328525/552076 [00:03<00:01, 119538.08it/s] 62%|██████▏   | 340832/552076 [00:03<00:01, 120573.43it/s] 64%|██████▍   | 352905/552076 [00:03<00:01, 118778.42it/s] 66%|██████▌   | 365099/552076 [00:03<00:01, 119706.72it/s] 68%|██████▊   | 377413/552076 [00:03<00:01, 120714.94it/s] 71%|███████   | 389496/552076 [00:03<00:01, 106553.59it/s] 73%|███████▎  | 401478/552076 [00:03<00:01, 110213.25it/s] 75%|███████▍  | 412923/552076 [00:03<00:01, 111449.91it/s] 77%|███████▋  | 424247/552076 [00:03<00:01, 104849.51it/s] 79%|███████▉  | 434938/552076 [00:04<00:01, 85619.22it/s]  81%|████████  | 445534/552076 [00:04<00:01, 90850.98it/s] 83%|████████▎ | 457664/552076 [00:04<00:00, 98248.51it/s] 85%|████████▍ | 468077/552076 [00:04<00:00, 98564.26it/s] 87%|████████▋ | 478345/552076 [00:04<00:00, 96460.03it/s] 89%|████████▉ | 490238/552076 [00:04<00:00, 102254.07it/s] 91%|█████████ | 501655/552076 [00:04<00:00, 105557.10it/s] 93%|█████████▎| 513104/552076 [00:04<00:00, 108084.94it/s] 95%|█████████▍| 524095/552076 [00:05<00:00, 103336.98it/s] 97%|█████████▋| 536118/552076 [00:05<00:00, 107883.01it/s] 99%|█████████▉| 547564/552076 [00:05<00:00, 109774.10it/s]100%|██████████| 552076/552076 [00:05<00:00, 105194.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7978/552076 [00:00<00:06, 79778.55it/s]  4%|▎         | 19748/552076 [00:00<00:06, 88314.60it/s]  6%|▌         | 30930/552076 [00:00<00:05, 94258.56it/s]  8%|▊         | 41974/552076 [00:00<00:05, 98590.23it/s] 10%|▉         | 54202/552076 [00:00<00:04, 104673.66it/s] 12%|█▏        | 66510/552076 [00:00<00:04, 109589.55it/s] 14%|█▍        | 78919/552076 [00:00<00:04, 113569.24it/s] 17%|█▋        | 91279/552076 [00:00<00:03, 116402.58it/s] 19%|█▉        | 103624/552076 [00:00<00:03, 118429.82it/s] 21%|██        | 116033/552076 [00:01<00:03, 120072.86it/s] 23%|██▎       | 128483/552076 [00:01<00:03, 121366.09it/s] 26%|██▌       | 140835/552076 [00:01<00:03, 122004.11it/s] 28%|██▊       | 153143/552076 [00:01<00:03, 122323.63it/s] 30%|██▉       | 165547/552076 [00:01<00:03, 122831.74it/s] 32%|███▏      | 177802/552076 [00:01<00:03, 122663.46it/s] 34%|███▍      | 190049/552076 [00:01<00:02, 122472.18it/s] 37%|███▋      | 202283/552076 [00:01<00:02, 122401.52it/s] 39%|███▉      | 214514/552076 [00:01<00:02, 122313.25it/s] 41%|████      | 226739/552076 [00:01<00:02, 122177.51it/s] 43%|████▎     | 238976/552076 [00:02<00:02, 122233.39it/s] 46%|████▌     | 251216/552076 [00:02<00:02, 122280.83it/s] 48%|████▊     | 263442/552076 [00:02<00:02, 122261.76it/s] 50%|████▉     | 275739/552076 [00:02<00:02, 122471.23it/s] 52%|█████▏    | 288182/552076 [00:02<00:02, 123051.52it/s] 54%|█████▍    | 300509/552076 [00:02<00:02, 123115.26it/s] 57%|█████▋    | 312831/552076 [00:02<00:01, 123145.46it/s] 59%|█████▉    | 325146/552076 [00:02<00:01, 122927.49it/s] 61%|██████    | 337439/552076 [00:02<00:01, 122865.62it/s] 63%|██████▎   | 349847/552076 [00:02<00:01, 123225.72it/s] 66%|██████▌   | 362170/552076 [00:03<00:01, 123177.52it/s] 68%|██████▊   | 374528/552076 [00:03<00:01, 123295.65it/s] 70%|███████   | 386858/552076 [00:03<00:01, 98345.19it/s]  72%|███████▏  | 397493/552076 [00:03<00:01, 92094.59it/s] 74%|███████▍  | 407344/552076 [00:03<00:01, 92492.04it/s] 76%|███████▌  | 417043/552076 [00:03<00:01, 92040.19it/s] 78%|███████▊  | 429058/552076 [00:03<00:01, 98986.05it/s] 80%|███████▉  | 439326/552076 [00:03<00:01, 83618.39it/s] 81%|████████  | 448355/552076 [00:04<00:01, 75756.75it/s] 83%|████████▎ | 459136/552076 [00:04<00:01, 83173.89it/s] 85%|████████▍ | 468099/552076 [00:04<00:01, 83585.95it/s] 87%|████████▋ | 480107/552076 [00:04<00:00, 91970.95it/s] 89%|████████▉ | 491891/552076 [00:04<00:00, 98454.32it/s] 91%|█████████ | 502266/552076 [00:04<00:00, 93883.33it/s] 93%|█████████▎| 512070/552076 [00:04<00:00, 89021.06it/s] 94%|█████████▍| 521315/552076 [00:04<00:00, 87274.97it/s] 97%|█████████▋| 533667/552076 [00:04<00:00, 95698.86it/s] 99%|█████████▉| 545304/552076 [00:05<00:00, 101084.41it/s]100%|██████████| 552076/552076 [00:05<00:00, 109019.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10524/552076 [00:00<00:05, 105235.58it/s]  3%|▎         | 17088/552076 [00:00<00:06, 89109.45it/s]   4%|▍         | 23025/552076 [00:00<00:06, 77465.37it/s]  5%|▌         | 29442/552076 [00:00<00:07, 72930.55it/s]  6%|▋         | 34662/552076 [00:00<00:08, 64027.70it/s]  8%|▊         | 41444/552076 [00:00<00:07, 65117.61it/s]  9%|▊         | 47348/552076 [00:00<00:07, 63164.92it/s] 10%|▉         | 53066/552076 [00:00<00:09, 55198.19it/s] 11%|█         | 58348/552076 [00:00<00:10, 48423.83it/s] 12%|█▏        | 64083/552076 [00:01<00:09, 50794.97it/s] 13%|█▎        | 70735/552076 [00:01<00:08, 54671.34it/s] 14%|█▍        | 76866/552076 [00:01<00:08, 56001.12it/s] 15%|█▍        | 82543/552076 [00:01<00:09, 51533.28it/s] 16%|█▌        | 88101/552076 [00:01<00:08, 52683.59it/s] 17%|█▋        | 94845/552076 [00:01<00:08, 56383.73it/s] 18%|█▊        | 100621/552076 [00:01<00:08, 53118.89it/s] 19%|█▉        | 106332/552076 [00:01<00:08, 54255.68it/s] 21%|██▏       | 118094/552076 [00:01<00:06, 64714.00it/s] 23%|██▎       | 128235/552076 [00:02<00:05, 72593.33it/s] 25%|██▌       | 138722/552076 [00:02<00:05, 79977.02it/s] 27%|██▋       | 147622/552076 [00:02<00:05, 80665.73it/s] 29%|██▉       | 159402/552076 [00:02<00:04, 89090.12it/s] 31%|███       | 169026/552076 [00:02<00:04, 91085.37it/s] 32%|███▏      | 178646/552076 [00:02<00:04, 89264.44it/s] 34%|███▍      | 188960/552076 [00:02<00:03, 93017.20it/s] 36%|███▋      | 200399/552076 [00:02<00:03, 98538.66it/s] 38%|███▊      | 211193/552076 [00:02<00:03, 101180.55it/s] 40%|████      | 221537/552076 [00:02<00:03, 93300.65it/s]  42%|████▏     | 233634/552076 [00:03<00:03, 100172.39it/s] 44%|████▍     | 243990/552076 [00:03<00:03, 99983.51it/s]  46%|████▌     | 254663/552076 [00:03<00:02, 101916.06it/s] 48%|████▊     | 266742/552076 [00:03<00:02, 106927.14it/s] 51%|█████     | 279023/552076 [00:03<00:02, 111241.74it/s] 53%|█████▎    | 291511/552076 [00:03<00:02, 115008.58it/s] 55%|█████▌    | 304036/552076 [00:03<00:02, 117899.73it/s] 57%|█████▋    | 316511/552076 [00:03<00:01, 119874.03it/s] 60%|█████▉    | 328596/552076 [00:03<00:01, 119938.38it/s] 62%|██████▏   | 341103/552076 [00:03<00:01, 121431.28it/s] 64%|██████▍   | 353567/552076 [00:04<00:01, 122375.42it/s] 66%|██████▋   | 365988/552076 [00:04<00:01, 122918.98it/s] 69%|██████▊   | 378522/552076 [00:04<00:01, 123633.09it/s] 71%|███████   | 391009/552076 [00:04<00:01, 123999.06it/s] 73%|███████▎  | 403424/552076 [00:04<00:01, 122618.36it/s] 75%|███████▌  | 415968/552076 [00:04<00:01, 123450.25it/s] 78%|███████▊  | 428535/552076 [00:04<00:00, 124107.32it/s] 80%|███████▉  | 440955/552076 [00:04<00:00, 123723.07it/s] 82%|████████▏ | 453371/552076 [00:04<00:00, 123852.89it/s] 84%|████████▍ | 465879/552076 [00:04<00:00, 124215.26it/s] 87%|████████▋ | 478395/552076 [00:05<00:00, 124495.35it/s] 89%|████████▉ | 490847/552076 [00:05<00:00, 117002.40it/s] 91%|█████████ | 502642/552076 [00:05<00:00, 101630.68it/s] 93%|█████████▎| 514549/552076 [00:05<00:00, 106301.40it/s] 95%|█████████▌| 525534/552076 [00:05<00:00, 99330.60it/s]  97%|█████████▋| 535808/552076 [00:05<00:00, 81756.33it/s] 99%|█████████▉| 547996/552076 [00:05<00:00, 90715.40it/s]100%|██████████| 552076/552076 [00:05<00:00, 93411.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11564/552076 [00:00<00:04, 115638.73it/s]  4%|▍         | 23589/552076 [00:00<00:04, 116983.60it/s]  7%|▋         | 36018/552076 [00:00<00:04, 119081.37it/s]  9%|▊         | 48166/552076 [00:00<00:04, 119789.81it/s] 11%|█         | 60468/552076 [00:00<00:04, 120740.69it/s] 13%|█▎        | 72671/552076 [00:00<00:03, 121122.58it/s] 15%|█▌        | 85021/552076 [00:00<00:03, 121825.40it/s] 18%|█▊        | 97351/552076 [00:00<00:03, 122262.11it/s] 20%|█▉        | 108915/552076 [00:00<00:04, 99632.49it/s] 22%|██▏       | 119097/552076 [00:01<00:05, 84599.85it/s] 23%|██▎       | 128102/552076 [00:01<00:05, 83649.97it/s] 25%|██▌       | 138527/552076 [00:01<00:04, 86592.04it/s] 27%|██▋       | 147482/552076 [00:01<00:05, 78168.69it/s] 29%|██▉       | 159784/552076 [00:01<00:04, 87768.07it/s] 31%|███       | 172069/552076 [00:01<00:03, 95990.22it/s] 33%|███▎      | 184336/552076 [00:01<00:03, 102690.19it/s] 36%|███▌      | 196726/552076 [00:01<00:03, 108247.46it/s] 38%|███▊      | 209013/552076 [00:01<00:03, 112253.74it/s] 40%|████      | 221398/552076 [00:02<00:02, 115496.73it/s] 42%|████▏     | 233834/552076 [00:02<00:02, 118018.03it/s] 45%|████▍     | 246374/552076 [00:02<00:02, 120138.44it/s] 47%|████▋     | 258948/552076 [00:02<00:02, 121765.74it/s] 49%|████▉     | 271478/552076 [00:02<00:02, 122803.48it/s] 51%|█████▏    | 283931/552076 [00:02<00:02, 123314.06it/s] 54%|█████▎    | 296324/552076 [00:02<00:02, 122612.24it/s] 56%|█████▌    | 308629/552076 [00:02<00:02, 121427.97it/s] 58%|█████▊    | 320805/552076 [00:02<00:01, 121462.65it/s] 60%|██████    | 333221/552076 [00:02<00:01, 122258.56it/s] 63%|██████▎   | 345465/552076 [00:03<00:02, 102734.30it/s] 65%|██████▍   | 357955/552076 [00:03<00:01, 108511.30it/s] 67%|██████▋   | 370277/552076 [00:03<00:01, 112540.58it/s] 69%|██████▉   | 382753/552076 [00:03<00:01, 115944.96it/s] 72%|███████▏  | 395208/552076 [00:03<00:01, 118397.32it/s] 74%|███████▍  | 407605/552076 [00:03<00:01, 120015.50it/s] 76%|███████▌  | 420078/552076 [00:03<00:01, 121390.26it/s] 78%|███████▊  | 432328/552076 [00:03<00:00, 121274.54it/s] 81%|████████  | 444743/552076 [00:03<00:00, 122121.33it/s] 83%|████████▎ | 457011/552076 [00:04<00:00, 112922.39it/s] 85%|████████▍ | 468480/552076 [00:04<00:00, 111298.27it/s] 87%|████████▋ | 480155/552076 [00:04<00:00, 112878.35it/s] 89%|████████▉ | 491539/552076 [00:04<00:00, 90345.06it/s]  91%|█████████ | 501357/552076 [00:04<00:00, 81614.83it/s] 93%|█████████▎| 512457/552076 [00:04<00:00, 88655.18it/s] 95%|█████████▍| 523812/552076 [00:04<00:00, 94895.82it/s] 97%|█████████▋| 533896/552076 [00:05<00:00, 74817.19it/s] 99%|█████████▉| 545706/552076 [00:05<00:00, 84059.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 106464.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11255/552076 [00:00<00:04, 112540.18it/s]  4%|▎         | 19457/552076 [00:00<00:05, 101237.40it/s]  5%|▌         | 28078/552076 [00:00<00:05, 96205.00it/s]   8%|▊         | 46834/552076 [00:00<00:04, 112667.81it/s] 11%|█         | 58966/552076 [00:00<00:04, 115130.69it/s] 13%|█▎        | 71248/552076 [00:00<00:04, 117334.17it/s] 15%|█▌        | 84112/552076 [00:00<00:03, 120510.10it/s] 18%|█▊        | 96631/552076 [00:00<00:03, 121875.34it/s] 20%|█▉        | 108495/552076 [00:00<00:04, 109274.53it/s] 22%|██▏       | 119441/552076 [00:01<00:04, 106137.43it/s] 24%|██▍       | 132564/552076 [00:01<00:03, 112594.27it/s] 26%|██▋       | 145419/552076 [00:01<00:03, 116947.83it/s] 29%|██▊       | 158560/552076 [00:01<00:03, 120940.14it/s] 31%|███       | 170783/552076 [00:01<00:03, 104301.68it/s] 33%|███▎      | 183872/552076 [00:01<00:03, 111069.17it/s] 36%|███▌      | 196391/552076 [00:01<00:03, 114958.95it/s] 38%|███▊      | 208899/552076 [00:01<00:02, 117817.13it/s] 40%|████      | 221092/552076 [00:01<00:02, 119020.18it/s] 42%|████▏     | 233187/552076 [00:02<00:02, 113118.60it/s] 44%|████▍     | 244866/552076 [00:02<00:02, 114194.79it/s] 47%|████▋     | 257114/552076 [00:02<00:02, 116559.06it/s] 49%|████▉     | 270165/552076 [00:02<00:02, 120419.87it/s] 51%|█████     | 282317/552076 [00:02<00:02, 114593.07it/s] 53%|█████▎    | 293912/552076 [00:02<00:02, 111764.08it/s] 57%|█████▋    | 316565/552076 [00:02<00:01, 131794.56it/s] 61%|██████▏   | 339458/552076 [00:02<00:01, 151017.43it/s] 65%|██████▌   | 361110/552076 [00:02<00:01, 166090.47it/s] 69%|██████▉   | 383325/552076 [00:02<00:00, 179694.05it/s] 73%|███████▎  | 403742/552076 [00:03<00:00, 186395.04it/s] 77%|███████▋  | 424235/552076 [00:03<00:00, 191592.69it/s] 80%|████████  | 444383/552076 [00:03<00:00, 194454.72it/s] 84%|████████▍ | 465405/552076 [00:03<00:00, 198929.82it/s] 88%|████████▊ | 485766/552076 [00:03<00:00, 180252.08it/s] 91%|█████████▏| 504455/552076 [00:03<00:00, 170270.81it/s] 95%|█████████▍| 522061/552076 [00:03<00:00, 171263.70it/s] 98%|█████████▊| 539594/552076 [00:03<00:00, 166864.44it/s]100%|██████████| 552076/552076 [00:03<00:00, 141504.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19525/552076 [00:00<00:02, 195249.26it/s]  6%|▋         | 35452/552076 [00:00<00:02, 182853.74it/s]  8%|▊         | 44331/552076 [00:00<00:03, 134056.47it/s] 12%|█▏        | 65310/552076 [00:00<00:03, 150336.80it/s] 16%|█▌        | 87408/552076 [00:00<00:02, 166284.14it/s] 19%|█▊        | 102703/552076 [00:00<00:02, 151498.61it/s] 22%|██▏       | 119239/552076 [00:00<00:02, 155404.58it/s] 26%|██▌       | 141952/552076 [00:00<00:02, 171666.62it/s] 30%|██▉       | 165083/552076 [00:00<00:02, 186057.38it/s] 34%|███▍      | 187215/552076 [00:01<00:01, 195394.91it/s] 38%|███▊      | 210137/552076 [00:01<00:01, 204445.08it/s] 42%|████▏     | 233282/552076 [00:01<00:01, 211858.85it/s] 46%|████▋     | 255963/552076 [00:01<00:01, 216131.20it/s] 50%|█████     | 277861/552076 [00:01<00:01, 214744.35it/s] 55%|█████▍    | 300943/552076 [00:01<00:01, 219326.08it/s] 59%|█████▊    | 324318/552076 [00:01<00:01, 223460.13it/s] 63%|██████▎   | 347547/552076 [00:01<00:00, 226037.54it/s] 67%|██████▋   | 370491/552076 [00:01<00:00, 227044.97it/s] 71%|███████   | 393268/552076 [00:01<00:00, 224756.93it/s] 75%|███████▌  | 415943/552076 [00:02<00:00, 225350.58it/s] 80%|███████▉  | 439331/552076 [00:02<00:00, 227842.79it/s] 84%|████████▍ | 462583/552076 [00:02<00:00, 229224.04it/s] 88%|████████▊ | 485532/552076 [00:02<00:00, 225105.89it/s] 92%|█████████▏| 508592/552076 [00:02<00:00, 226725.54it/s] 96%|█████████▋| 531945/552076 [00:02<00:00, 228722.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 209966.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17236/552076 [00:00<00:03, 172353.18it/s]  7%|▋         | 39602/552076 [00:00<00:02, 185090.00it/s] 11%|█▏        | 62277/552076 [00:00<00:02, 195886.45it/s] 15%|█▌        | 84652/552076 [00:00<00:02, 203487.57it/s] 19%|█▉        | 107321/552076 [00:00<00:02, 209933.70it/s] 23%|██▎       | 129560/552076 [00:00<00:01, 213520.75it/s] 28%|██▊       | 152423/552076 [00:00<00:01, 217837.43it/s] 32%|███▏      | 174380/552076 [00:00<00:01, 218350.66it/s] 35%|███▌      | 195340/552076 [00:00<00:01, 215154.65it/s] 39%|███▉      | 216254/552076 [00:01<00:01, 198988.91it/s] 43%|████▎     | 235973/552076 [00:01<00:01, 172552.65it/s] 46%|████▌     | 253728/552076 [00:01<00:02, 140501.16it/s] 49%|████▊     | 269097/552076 [00:01<00:02, 135817.04it/s] 52%|█████▏    | 287691/552076 [00:01<00:01, 147766.08it/s] 56%|█████▌    | 306728/552076 [00:01<00:01, 158400.83it/s] 59%|█████▉    | 325360/552076 [00:01<00:01, 165855.04it/s] 62%|██████▏   | 343949/552076 [00:01<00:01, 171395.94it/s] 66%|██████▌   | 361641/552076 [00:01<00:01, 166160.08it/s] 69%|██████▉   | 381176/552076 [00:02<00:00, 173955.72it/s] 73%|███████▎  | 400452/552076 [00:02<00:00, 179199.38it/s] 76%|███████▌  | 419796/552076 [00:02<00:00, 183245.00it/s] 79%|███████▉  | 438363/552076 [00:02<00:00, 179030.84it/s] 83%|████████▎ | 457947/552076 [00:02<00:00, 183760.07it/s] 86%|████████▋ | 477255/552076 [00:02<00:00, 186449.80it/s] 90%|████████▉ | 496177/552076 [00:02<00:00, 187270.24it/s] 93%|█████████▎| 515495/552076 [00:02<00:00, 189002.26it/s] 97%|█████████▋| 534744/552076 [00:02<00:00, 190031.53it/s]100%|██████████| 552076/552076 [00:02<00:00, 184533.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14244/552076 [00:00<00:03, 142435.38it/s]  5%|▌         | 28261/552076 [00:00<00:03, 141748.05it/s]  8%|▊         | 42744/552076 [00:00<00:03, 142657.21it/s] 10%|█         | 56966/552076 [00:00<00:03, 142524.99it/s] 13%|█▎        | 71623/552076 [00:00<00:03, 143714.19it/s] 15%|█▌        | 84661/552076 [00:00<00:03, 139432.92it/s] 18%|█▊        | 98274/552076 [00:00<00:03, 138423.77it/s] 21%|██        | 114081/552076 [00:00<00:03, 143783.35it/s] 24%|██▍       | 133995/552076 [00:00<00:02, 156864.47it/s] 28%|██▊       | 153487/552076 [00:01<00:02, 166623.63it/s] 31%|███▏      | 173434/552076 [00:01<00:02, 175280.95it/s] 35%|███▌      | 193817/552076 [00:01<00:01, 182968.93it/s] 39%|███▉      | 214405/552076 [00:01<00:01, 189286.64it/s] 42%|████▏     | 234453/552076 [00:01<00:01, 192509.90it/s] 46%|████▌     | 254770/552076 [00:01<00:01, 195588.38it/s] 50%|████▉     | 274444/552076 [00:01<00:01, 195353.76it/s] 53%|█████▎    | 294060/552076 [00:01<00:01, 194372.45it/s] 57%|█████▋    | 313555/552076 [00:01<00:01, 190717.74it/s] 60%|██████    | 332683/552076 [00:01<00:01, 190140.35it/s] 64%|██████▎   | 351737/552076 [00:02<00:01, 190144.83it/s] 67%|██████▋   | 370804/552076 [00:02<00:00, 190301.31it/s] 71%|███████   | 389964/552076 [00:02<00:00, 190688.58it/s] 74%|███████▍  | 409047/552076 [00:02<00:00, 188006.42it/s] 78%|███████▊  | 428852/552076 [00:02<00:00, 190909.62it/s] 81%|████████  | 447967/552076 [00:02<00:00, 189407.41it/s] 85%|████████▍ | 468318/552076 [00:02<00:00, 193428.39it/s] 88%|████████▊ | 487696/552076 [00:02<00:00, 191774.52it/s] 92%|█████████▏| 506901/552076 [00:02<00:00, 191782.86it/s] 95%|█████████▌| 526099/552076 [00:02<00:00, 191177.52it/s] 99%|█████████▉| 545775/552076 [00:03<00:00, 192817.56it/s]100%|██████████| 552076/552076 [00:03<00:00, 180536.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13160/552076 [00:00<00:04, 131596.99it/s]  5%|▍         | 25969/552076 [00:00<00:04, 130522.74it/s]  7%|▋         | 38789/552076 [00:00<00:03, 129815.38it/s]  9%|▉         | 52166/552076 [00:00<00:03, 130976.94it/s] 12%|█▏        | 65668/552076 [00:00<00:03, 132163.59it/s] 14%|█▍        | 79019/552076 [00:00<00:03, 132563.28it/s] 17%|█▋        | 92818/552076 [00:00<00:03, 134144.12it/s] 20%|█▉        | 107867/552076 [00:00<00:03, 138660.50it/s] 23%|██▎       | 128193/552076 [00:00<00:02, 153274.18it/s] 27%|██▋       | 148610/552076 [00:01<00:02, 165661.91it/s] 30%|███       | 167820/552076 [00:01<00:02, 172795.93it/s] 34%|███▍      | 187047/552076 [00:01<00:02, 178210.89it/s] 37%|███▋      | 206188/552076 [00:01<00:01, 181974.13it/s] 41%|████      | 225532/552076 [00:01<00:01, 185266.61it/s] 44%|████▍     | 245019/552076 [00:01<00:01, 188046.54it/s] 48%|████▊     | 263933/552076 [00:01<00:01, 186607.45it/s] 51%|█████▏    | 283318/552076 [00:01<00:01, 188718.99it/s] 55%|█████▍    | 302799/552076 [00:01<00:01, 190504.24it/s] 58%|█████▊    | 322674/552076 [00:01<00:01, 192899.92it/s] 62%|██████▏   | 342004/552076 [00:02<00:01, 192662.19it/s] 65%|██████▌   | 361361/552076 [00:02<00:00, 192931.91it/s] 69%|██████▉   | 380674/552076 [00:02<00:00, 191680.37it/s] 72%|███████▏  | 400160/552076 [00:02<00:00, 192622.55it/s] 76%|███████▌  | 419435/552076 [00:02<00:00, 191397.70it/s] 80%|███████▉  | 439433/552076 [00:02<00:00, 193893.95it/s] 83%|████████▎ | 459612/552076 [00:02<00:00, 196194.98it/s] 87%|████████▋ | 480094/552076 [00:02<00:00, 198704.05it/s] 91%|█████████ | 500067/552076 [00:02<00:00, 199009.08it/s] 94%|█████████▍| 520197/552076 [00:02<00:00, 199688.66it/s] 98%|█████████▊| 540289/552076 [00:03<00:00, 200054.96it/s]100%|██████████| 552076/552076 [00:03<00:00, 179292.49it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16331/552076 [00:00<00:03, 163303.93it/s]  6%|▌         | 33507/552076 [00:00<00:03, 165750.57it/s] 10%|▉         | 52914/552076 [00:00<00:02, 173338.12it/s] 13%|█▎        | 73144/552076 [00:00<00:02, 181116.24it/s] 17%|█▋        | 93240/552076 [00:00<00:02, 186643.88it/s] 20%|██        | 111760/552076 [00:00<00:02, 186207.07it/s] 24%|██▍       | 131229/552076 [00:00<00:02, 188670.22it/s] 27%|██▋       | 150471/552076 [00:00<00:02, 189777.90it/s] 31%|███       | 169548/552076 [00:00<00:02, 190073.68it/s] 34%|███▍      | 188659/552076 [00:01<00:01, 190380.60it/s] 38%|███▊      | 207837/552076 [00:01<00:01, 190795.75it/s] 41%|████      | 227112/552076 [00:01<00:01, 191377.09it/s] 45%|████▍     | 246039/552076 [00:01<00:01, 189510.56it/s] 48%|████▊     | 264847/552076 [00:01<00:01, 189060.27it/s] 51%|█████▏    | 283653/552076 [00:01<00:01, 187723.29it/s] 55%|█████▍    | 302358/552076 [00:01<00:01, 185120.22it/s] 58%|█████▊    | 320831/552076 [00:01<00:01, 182725.83it/s] 62%|██████▏   | 340393/552076 [00:01<00:01, 186411.79it/s] 65%|██████▌   | 359038/552076 [00:01<00:01, 182156.20it/s] 68%|██████▊   | 377278/552076 [00:02<00:00, 181281.85it/s] 72%|███████▏  | 395425/552076 [00:02<00:00, 161773.76it/s] 75%|███████▍  | 412007/552076 [00:02<00:00, 146153.82it/s] 77%|███████▋  | 427193/552076 [00:02<00:00, 138603.76it/s] 80%|███████▉  | 441534/552076 [00:02<00:00, 135360.59it/s] 82%|████████▏ | 455424/552076 [00:02<00:00, 130782.71it/s] 85%|████████▍ | 468783/552076 [00:02<00:00, 130390.17it/s] 87%|████████▋ | 482019/552076 [00:02<00:00, 129057.94it/s] 90%|████████▉ | 495066/552076 [00:02<00:00, 127709.33it/s] 92%|█████████▏| 507939/552076 [00:03<00:00, 124480.58it/s] 94%|█████████▍| 520477/552076 [00:03<00:00, 124444.43it/s] 97%|█████████▋| 532984/552076 [00:03<00:00, 124405.28it/s] 99%|█████████▉| 545656/552076 [00:03<00:00, 125089.13it/s]100%|██████████| 552076/552076 [00:03<00:00, 160999.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7671/552076 [00:00<00:07, 76707.88it/s]  4%|▎         | 19563/552076 [00:00<00:06, 85849.10it/s]  6%|▌         | 31774/552076 [00:00<00:05, 94244.91it/s]  8%|▊         | 44040/552076 [00:00<00:05, 101283.28it/s] 10%|█         | 55953/552076 [00:00<00:04, 106049.31it/s] 12%|█▏        | 65674/552076 [00:00<00:04, 99864.03it/s]  14%|█▍        | 78037/552076 [00:00<00:04, 105974.03it/s] 16%|█▌        | 89677/552076 [00:00<00:04, 108898.43it/s] 18%|█▊        | 101937/552076 [00:00<00:03, 112674.14it/s] 21%|██        | 114242/552076 [00:01<00:03, 115596.33it/s] 23%|██▎       | 126027/552076 [00:01<00:03, 116260.49it/s] 25%|██▌       | 138351/552076 [00:01<00:03, 118267.58it/s] 27%|██▋       | 150609/552076 [00:01<00:03, 119528.55it/s] 29%|██▉       | 162557/552076 [00:01<00:03, 119089.79it/s] 32%|███▏      | 174898/552076 [00:01<00:03, 120352.19it/s] 34%|███▍      | 187190/552076 [00:01<00:03, 121108.33it/s] 36%|███▌      | 199340/552076 [00:01<00:02, 121224.22it/s] 38%|███▊      | 211464/552076 [00:01<00:02, 119669.35it/s] 40%|████      | 223437/552076 [00:01<00:02, 118950.02it/s] 43%|████▎     | 235337/552076 [00:02<00:02, 118641.91it/s] 45%|████▍     | 247205/552076 [00:02<00:02, 107804.50it/s] 47%|████▋     | 258983/552076 [00:02<00:02, 110613.64it/s] 49%|████▉     | 270983/552076 [00:02<00:02, 113270.01it/s] 51%|█████     | 282927/552076 [00:02<00:02, 115050.83it/s] 53%|█████▎    | 294525/552076 [00:02<00:02, 109072.90it/s] 56%|█████▌    | 306866/552076 [00:02<00:02, 113010.47it/s] 58%|█████▊    | 318381/552076 [00:02<00:02, 113641.40it/s] 60%|█████▉    | 330166/552076 [00:02<00:01, 114872.03it/s] 62%|██████▏   | 342189/552076 [00:02<00:01, 116426.21it/s] 64%|██████▍   | 354134/552076 [00:03<00:01, 117316.77it/s] 66%|██████▋   | 365904/552076 [00:03<00:01, 116937.41it/s] 68%|██████▊   | 378115/552076 [00:03<00:01, 118440.06it/s] 71%|███████   | 390479/552076 [00:03<00:01, 119950.74it/s] 73%|███████▎  | 402928/552076 [00:03<00:01, 121275.38it/s] 75%|███████▌  | 415074/552076 [00:03<00:01, 120608.00it/s] 77%|███████▋  | 427155/552076 [00:03<00:01, 120665.72it/s] 80%|███████▉  | 439522/552076 [00:03<00:00, 121551.51it/s] 82%|████████▏ | 451996/552076 [00:03<00:00, 122487.92it/s] 84%|████████▍ | 464253/552076 [00:03<00:00, 121485.97it/s] 86%|████████▋ | 476958/552076 [00:04<00:00, 123101.06it/s] 89%|████████▊ | 489279/552076 [00:04<00:00, 119636.34it/s] 91%|█████████ | 501272/552076 [00:04<00:00, 113411.59it/s] 93%|█████████▎| 513086/552076 [00:04<00:00, 114789.36it/s] 95%|█████████▌| 524631/552076 [00:04<00:00, 99205.89it/s]  97%|█████████▋| 535536/552076 [00:04<00:00, 101965.29it/s] 99%|█████████▉| 547818/552076 [00:04<00:00, 107436.51it/s]100%|██████████| 552076/552076 [00:04<00:00, 115139.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9299/552076 [00:00<00:05, 92986.98it/s]  4%|▍         | 21334/552076 [00:00<00:05, 99793.27it/s]  6%|▌         | 31714/552076 [00:00<00:05, 100961.19it/s]  8%|▊         | 43908/552076 [00:00<00:04, 106455.21it/s] 10%|▉         | 52472/552076 [00:00<00:05, 95499.75it/s]  11%|█▏        | 62950/552076 [00:00<00:04, 98104.23it/s] 14%|█▎        | 75304/552076 [00:00<00:04, 104561.23it/s] 16%|█▌        | 87500/552076 [00:00<00:04, 109234.31it/s] 18%|█▊        | 99664/552076 [00:00<00:04, 112681.37it/s] 20%|██        | 112098/552076 [00:01<00:03, 115942.16it/s] 23%|██▎       | 124847/552076 [00:01<00:03, 119179.48it/s] 25%|██▍       | 137114/552076 [00:01<00:03, 120204.28it/s] 27%|██▋       | 149853/552076 [00:01<00:03, 122272.78it/s] 29%|██▉       | 162111/552076 [00:01<00:03, 122363.24it/s] 32%|███▏      | 174414/552076 [00:01<00:03, 122560.80it/s] 34%|███▍      | 186785/552076 [00:01<00:02, 122903.26it/s] 36%|███▌      | 199072/552076 [00:01<00:02, 122421.18it/s] 38%|███▊      | 211312/552076 [00:01<00:02, 122281.90it/s] 40%|████      | 223539/552076 [00:01<00:02, 122004.86it/s] 43%|████▎     | 235935/552076 [00:02<00:02, 122582.67it/s] 45%|████▍     | 248224/552076 [00:02<00:02, 122674.39it/s] 47%|████▋     | 260532/552076 [00:02<00:02, 122794.43it/s] 50%|████▉     | 273320/552076 [00:02<00:02, 124274.99it/s] 52%|█████▏    | 286052/552076 [00:02<00:02, 125171.80it/s] 54%|█████▍    | 298802/552076 [00:02<00:02, 125860.17it/s] 56%|█████▋    | 311393/552076 [00:02<00:01, 124199.75it/s] 59%|█████▊    | 323972/552076 [00:02<00:01, 124670.50it/s] 61%|██████    | 336445/552076 [00:02<00:01, 123722.09it/s] 63%|██████▎   | 348823/552076 [00:02<00:01, 122900.80it/s] 65%|██████▌   | 361119/552076 [00:03<00:01, 122864.12it/s] 68%|██████▊   | 373410/552076 [00:03<00:01, 122753.01it/s] 70%|██████▉   | 386280/552076 [00:03<00:01, 124477.33it/s] 72%|███████▏  | 399254/552076 [00:03<00:01, 126009.12it/s] 75%|███████▍  | 412183/552076 [00:03<00:01, 126974.55it/s] 77%|███████▋  | 425135/552076 [00:03<00:00, 127727.39it/s] 79%|███████▉  | 437919/552076 [00:03<00:00, 127760.55it/s] 82%|████████▏ | 450744/552076 [00:03<00:00, 127905.93it/s] 84%|████████▍ | 463718/552076 [00:03<00:00, 128449.63it/s] 86%|████████▋ | 476917/552076 [00:03<00:00, 129490.22it/s] 89%|████████▊ | 489871/552076 [00:04<00:00, 129248.90it/s] 91%|█████████ | 502799/552076 [00:04<00:00, 128891.69it/s] 93%|█████████▎| 515691/552076 [00:04<00:00, 127806.97it/s] 96%|█████████▌| 528476/552076 [00:04<00:00, 126566.59it/s] 98%|█████████▊| 541139/552076 [00:04<00:00, 125943.22it/s]100%|██████████| 552076/552076 [00:04<00:00, 122112.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10102/552076 [00:00<00:05, 99343.18it/s]  3%|▎         | 16984/552076 [00:00<00:06, 87675.43it/s]  4%|▍         | 23218/552076 [00:00<00:06, 77214.23it/s]  6%|▌         | 33172/552076 [00:00<00:06, 82784.21it/s]  8%|▊         | 41565/552076 [00:00<00:06, 83122.43it/s] 10%|▉         | 52768/552076 [00:00<00:05, 89242.21it/s] 11%|█         | 61691/552076 [00:00<00:05, 89235.76it/s] 13%|█▎        | 71932/552076 [00:00<00:05, 92813.66it/s] 15%|█▍        | 80835/552076 [00:00<00:05, 80936.74it/s] 17%|█▋        | 92036/552076 [00:01<00:05, 88283.22it/s] 18%|█▊        | 101068/552076 [00:01<00:05, 88209.53it/s] 20%|█▉        | 110393/552076 [00:01<00:04, 89663.23it/s] 22%|██▏       | 120321/552076 [00:01<00:04, 92345.83it/s] 23%|██▎       | 129650/552076 [00:01<00:04, 91292.62it/s] 25%|██▌       | 140311/552076 [00:01<00:04, 95402.50it/s] 27%|██▋       | 149948/552076 [00:01<00:05, 79741.25it/s] 29%|██▊       | 158424/552076 [00:01<00:05, 69401.00it/s] 31%|███       | 168900/552076 [00:01<00:04, 77219.49it/s] 33%|███▎      | 179865/552076 [00:02<00:04, 84075.05it/s] 34%|███▍      | 188937/552076 [00:02<00:04, 80169.38it/s] 36%|███▌      | 199726/552076 [00:02<00:04, 86863.77it/s] 38%|███▊      | 208927/552076 [00:02<00:03, 87582.05it/s] 39%|███▉      | 218047/552076 [00:02<00:03, 84091.94it/s] 41%|████      | 227658/552076 [00:02<00:03, 87368.81it/s] 43%|████▎     | 236626/552076 [00:02<00:04, 75380.40it/s] 44%|████▍     | 244674/552076 [00:02<00:04, 76840.24it/s] 46%|████▌     | 252682/552076 [00:03<00:04, 66928.35it/s] 47%|████▋     | 259831/552076 [00:03<00:04, 64878.15it/s] 48%|████▊     | 266652/552076 [00:03<00:04, 63664.95it/s] 49%|████▉     | 273257/552076 [00:03<00:04, 63693.90it/s] 51%|█████▏    | 283919/552076 [00:03<00:03, 72442.67it/s] 53%|█████▎    | 291841/552076 [00:03<00:03, 74350.52it/s] 54%|█████▍    | 299660/552076 [00:03<00:03, 75177.87it/s] 56%|█████▌    | 307449/552076 [00:03<00:03, 71490.23it/s] 57%|█████▋    | 315779/552076 [00:03<00:03, 74665.91it/s] 59%|█████▉    | 327700/552076 [00:04<00:02, 84089.79it/s] 61%|██████    | 336640/552076 [00:04<00:03, 70378.30it/s] 62%|██████▏   | 344427/552076 [00:04<00:03, 66736.00it/s] 64%|██████▎   | 351665/552076 [00:04<00:03, 63455.65it/s] 65%|██████▍   | 358439/552076 [00:04<00:03, 57479.79it/s] 66%|██████▌   | 364595/552076 [00:04<00:03, 57461.97it/s] 67%|██████▋   | 371211/552076 [00:04<00:03, 59819.85it/s] 68%|██████▊   | 377530/552076 [00:04<00:02, 60791.84it/s] 70%|██████▉   | 383771/552076 [00:04<00:02, 59711.32it/s] 71%|███████▏  | 393612/552076 [00:05<00:02, 67697.32it/s] 73%|███████▎  | 400826/552076 [00:05<00:02, 68054.43it/s] 75%|███████▌  | 414998/552076 [00:05<00:01, 80626.60it/s] 77%|███████▋  | 427236/552076 [00:05<00:01, 89818.60it/s] 79%|███████▉  | 438756/552076 [00:05<00:01, 96174.60it/s] 82%|████████▏ | 451090/552076 [00:05<00:00, 102977.23it/s] 84%|████████▍ | 463422/552076 [00:05<00:00, 108337.20it/s] 86%|████████▌ | 474881/552076 [00:05<00:00, 99334.97it/s]  88%|████████▊ | 485399/552076 [00:05<00:00, 88932.69it/s] 90%|█████████ | 497587/552076 [00:06<00:00, 96780.65it/s] 92%|█████████▏| 509875/552076 [00:06<00:00, 103366.14it/s] 95%|█████████▍| 522165/552076 [00:06<00:00, 108540.86it/s] 97%|█████████▋| 534208/552076 [00:06<00:00, 111852.22it/s] 99%|█████████▉| 546656/552076 [00:06<00:00, 115361.82it/s]100%|██████████| 552076/552076 [00:06<00:00, 84516.83it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7120/552076 [00:00<00:07, 71196.16it/s]  3%|▎         | 18754/552076 [00:00<00:06, 80575.44it/s]  5%|▌         | 27941/552076 [00:00<00:06, 83659.49it/s]  7%|▋         | 39929/552076 [00:00<00:05, 91997.76it/s]  9%|▊         | 47898/552076 [00:00<00:05, 87838.69it/s] 11%|█         | 59919/552076 [00:00<00:05, 95557.29it/s] 13%|█▎        | 72086/552076 [00:00<00:04, 102132.38it/s] 15%|█▌        | 84180/552076 [00:00<00:04, 107129.47it/s] 17%|█▋        | 96589/552076 [00:00<00:04, 111709.96it/s] 20%|█▉        | 108878/552076 [00:01<00:03, 114843.57it/s] 22%|██▏       | 121236/552076 [00:01<00:03, 117330.11it/s] 24%|██▍       | 133619/552076 [00:01<00:03, 119204.77it/s] 26%|██▋       | 145973/552076 [00:01<00:03, 120471.24it/s] 29%|██▊       | 158335/552076 [00:01<00:03, 121397.14it/s] 31%|███       | 170806/552076 [00:01<00:03, 122372.32it/s] 33%|███▎      | 183228/552076 [00:01<00:03, 122920.68it/s] 35%|███▌      | 195700/552076 [00:01<00:02, 123454.78it/s] 38%|███▊      | 208123/552076 [00:01<00:02, 123686.01it/s] 40%|███▉      | 220522/552076 [00:01<00:02, 123776.73it/s] 42%|████▏     | 232915/552076 [00:02<00:02, 123820.23it/s] 44%|████▍     | 245363/552076 [00:02<00:02, 124015.34it/s] 47%|████▋     | 257876/552076 [00:02<00:02, 124347.06it/s] 49%|████▉     | 270327/552076 [00:02<00:02, 124393.54it/s] 51%|█████     | 282768/552076 [00:02<00:02, 124188.72it/s] 53%|█████▎    | 295188/552076 [00:02<00:02, 123851.11it/s] 56%|█████▌    | 307626/552076 [00:02<00:01, 124006.77it/s] 58%|█████▊    | 320039/552076 [00:02<00:01, 124041.09it/s] 60%|██████    | 332462/552076 [00:02<00:01, 124095.61it/s] 62%|██████▏   | 344872/552076 [00:02<00:01, 115064.53it/s] 65%|██████▍   | 356510/552076 [00:03<00:01, 115288.94it/s] 67%|██████▋   | 368753/552076 [00:03<00:01, 117340.57it/s] 69%|██████▉   | 380762/552076 [00:03<00:01, 118149.22it/s] 71%|███████   | 392630/552076 [00:03<00:01, 80683.32it/s]  73%|███████▎  | 402329/552076 [00:03<00:03, 48126.51it/s] 74%|███████▍  | 409862/552076 [00:04<00:03, 46526.54it/s] 75%|███████▌  | 416431/552076 [00:04<00:02, 50910.47it/s] 77%|███████▋  | 423073/552076 [00:04<00:02, 54743.71it/s] 78%|███████▊  | 429655/552076 [00:04<00:02, 57573.32it/s] 79%|███████▉  | 436226/552076 [00:04<00:02, 52083.26it/s] 80%|████████  | 442104/552076 [00:04<00:02, 50894.96it/s] 81%|████████  | 448434/552076 [00:04<00:01, 54073.75it/s] 82%|████████▏ | 454695/552076 [00:04<00:01, 56377.85it/s] 83%|████████▎ | 460629/552076 [00:04<00:01, 56524.07it/s] 85%|████████▍ | 467448/552076 [00:05<00:01, 59581.58it/s] 86%|████████▋ | 476264/552076 [00:05<00:01, 65999.27it/s] 88%|████████▊ | 483212/552076 [00:05<00:01, 63925.57it/s] 89%|████████▉ | 494028/552076 [00:05<00:00, 72864.67it/s] 91%|█████████▏| 505029/552076 [00:05<00:00, 80241.07it/s] 93%|█████████▎| 515522/552076 [00:05<00:00, 86333.70it/s] 96%|█████████▌| 527797/552076 [00:05<00:00, 94767.10it/s] 98%|█████████▊| 540104/552076 [00:05<00:00, 101788.86it/s]100%|██████████| 552076/552076 [00:05<00:00, 94370.27it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8170/552076 [00:00<00:06, 81693.65it/s]  3%|▎         | 18340/552076 [00:00<00:06, 86816.20it/s]  5%|▌         | 28441/552076 [00:00<00:05, 90636.74it/s]  7%|▋         | 38642/552076 [00:00<00:05, 93771.82it/s]  9%|▉         | 49777/552076 [00:00<00:05, 98431.47it/s] 11%|█         | 60287/552076 [00:00<00:04, 100339.90it/s] 13%|█▎        | 72100/552076 [00:00<00:04, 105086.31it/s] 15%|█▌        | 83828/552076 [00:00<00:04, 108469.57it/s] 17%|█▋        | 94658/552076 [00:00<00:04, 108417.74it/s] 19%|█▉        | 105895/552076 [00:01<00:04, 104355.92it/s] 21%|██        | 116191/552076 [00:01<00:05, 82813.72it/s]  23%|██▎       | 128366/552076 [00:01<00:04, 91601.25it/s] 25%|██▌       | 140739/552076 [00:01<00:04, 99339.21it/s] 28%|██▊       | 153075/552076 [00:01<00:03, 105502.03it/s] 30%|██▉       | 165498/552076 [00:01<00:03, 110497.44it/s] 32%|███▏      | 177995/552076 [00:01<00:03, 114472.05it/s] 34%|███▍      | 190464/552076 [00:01<00:03, 117356.49it/s] 37%|███▋      | 202475/552076 [00:01<00:02, 117983.00it/s] 39%|███▉      | 214906/552076 [00:02<00:02, 119811.63it/s] 41%|████      | 227317/552076 [00:02<00:02, 121068.07it/s] 43%|████▎     | 239765/552076 [00:02<00:02, 122070.51it/s] 46%|████▌     | 252056/552076 [00:02<00:02, 122320.49it/s] 48%|████▊     | 264340/552076 [00:02<00:02, 122221.41it/s] 50%|█████     | 276765/552076 [00:02<00:02, 122822.33it/s] 52%|█████▏    | 289177/552076 [00:02<00:02, 123208.11it/s] 55%|█████▍    | 301573/552076 [00:02<00:02, 123431.61it/s] 57%|█████▋    | 313930/552076 [00:02<00:01, 123029.27it/s] 59%|█████▉    | 326243/552076 [00:02<00:01, 122816.66it/s] 61%|██████▏   | 338532/552076 [00:03<00:01, 121140.86it/s] 64%|██████▎   | 350656/552076 [00:03<00:01, 121004.63it/s] 66%|██████▌   | 362815/552076 [00:03<00:01, 121179.60it/s] 68%|██████▊   | 375139/552076 [00:03<00:01, 121789.79it/s] 70%|███████   | 387505/552076 [00:03<00:01, 122343.54it/s] 72%|███████▏  | 399898/552076 [00:03<00:01, 122813.58it/s] 75%|███████▍  | 412183/552076 [00:03<00:01, 106212.22it/s] 77%|███████▋  | 423205/552076 [00:03<00:01, 95738.36it/s]  78%|███████▊  | 433255/552076 [00:03<00:01, 91923.00it/s] 80%|████████  | 442813/552076 [00:04<00:01, 86533.10it/s] 82%|████████▏ | 451788/552076 [00:04<00:01, 77309.30it/s] 83%|████████▎ | 459928/552076 [00:04<00:01, 73041.79it/s] 85%|████████▍ | 467804/552076 [00:04<00:01, 74668.10it/s] 86%|████████▋ | 477090/552076 [00:04<00:00, 79329.22it/s] 88%|████████▊ | 485273/552076 [00:04<00:00, 71972.66it/s] 89%|████████▉ | 492776/552076 [00:04<00:00, 68730.52it/s] 91%|█████████ | 499894/552076 [00:04<00:00, 66657.65it/s] 92%|█████████▏| 508091/552076 [00:04<00:00, 70613.94it/s] 94%|█████████▍| 520239/552076 [00:05<00:00, 80758.42it/s] 96%|█████████▌| 528962/552076 [00:05<00:00, 75281.45it/s] 97%|█████████▋| 537018/552076 [00:05<00:00, 74077.39it/s] 99%|█████████▉| 549037/552076 [00:05<00:00, 83712.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 101012.50it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9575/552076 [00:00<00:05, 95749.63it/s]  4%|▎         | 20114/552076 [00:00<00:05, 97913.33it/s]  5%|▍         | 26406/552076 [00:00<00:06, 83910.95it/s]  6%|▌         | 32352/552076 [00:00<00:06, 74695.29it/s]  7%|▋         | 38267/552076 [00:00<00:07, 68340.24it/s]  8%|▊         | 44594/552076 [00:00<00:07, 66735.01it/s]  9%|▉         | 50744/552076 [00:00<00:07, 65072.29it/s] 11%|█         | 60706/552076 [00:00<00:06, 72627.89it/s] 13%|█▎        | 72250/552076 [00:00<00:05, 81719.87it/s] 15%|█▌        | 84496/552076 [00:01<00:05, 90779.08it/s] 18%|█▊        | 96833/552076 [00:01<00:04, 98592.45it/s] 20%|█▉        | 109150/552076 [00:01<00:04, 104868.42it/s] 22%|██▏       | 121403/552076 [00:01<00:03, 109606.33it/s] 24%|██▍       | 133719/552076 [00:01<00:03, 113347.34it/s] 26%|██▋       | 146121/552076 [00:01<00:03, 116349.47it/s] 29%|██▊       | 158477/552076 [00:01<00:03, 118421.67it/s] 31%|███       | 170854/552076 [00:01<00:03, 119974.53it/s] 33%|███▎      | 182982/552076 [00:01<00:03, 109940.89it/s] 35%|███▌      | 194750/552076 [00:01<00:03, 112151.40it/s] 38%|███▊      | 207099/552076 [00:02<00:02, 115326.27it/s] 40%|███▉      | 219458/552076 [00:02<00:02, 117684.84it/s] 42%|████▏     | 231866/552076 [00:02<00:02, 119530.98it/s] 44%|████▍     | 244299/552076 [00:02<00:02, 120929.93it/s] 46%|████▋     | 256661/552076 [00:02<00:02, 121722.98it/s] 49%|████▊     | 269047/552076 [00:02<00:02, 122353.57it/s] 51%|█████     | 281322/552076 [00:02<00:02, 122470.87it/s] 53%|█████▎    | 293594/552076 [00:02<00:02, 95397.47it/s]  55%|█████▌    | 305167/552076 [00:02<00:02, 100703.91it/s] 57%|█████▋    | 317265/552076 [00:03<00:02, 106034.82it/s] 60%|█████▉    | 329657/552076 [00:03<00:02, 110832.44it/s] 62%|██████▏   | 342022/552076 [00:03<00:01, 114389.16it/s] 64%|██████▍   | 354449/552076 [00:03<00:01, 117182.21it/s] 66%|██████▋   | 366886/552076 [00:03<00:01, 119247.11it/s] 69%|██████▊   | 379336/552076 [00:03<00:01, 120775.03it/s] 71%|███████   | 391758/552076 [00:03<00:01, 121785.85it/s] 73%|███████▎  | 404038/552076 [00:03<00:01, 96974.57it/s]  75%|███████▌  | 414606/552076 [00:03<00:01, 88677.90it/s] 77%|███████▋  | 424222/552076 [00:04<00:01, 89391.02it/s] 79%|███████▉  | 436487/552076 [00:04<00:01, 97305.35it/s] 81%|████████▏ | 448841/552076 [00:04<00:00, 103924.91it/s] 84%|████████▎ | 461155/552076 [00:04<00:00, 109026.54it/s] 86%|████████▌ | 473528/552076 [00:04<00:00, 113055.56it/s] 88%|████████▊ | 485918/552076 [00:04<00:00, 116103.76it/s] 90%|█████████ | 498139/552076 [00:04<00:00, 117869.96it/s] 92%|█████████▏| 510272/552076 [00:04<00:00, 118886.53it/s] 95%|█████████▍| 522295/552076 [00:04<00:00, 115322.62it/s] 97%|█████████▋| 534560/552076 [00:04<00:00, 117425.90it/s] 99%|█████████▉| 546995/552076 [00:05<00:00, 119419.92it/s]100%|██████████| 552076/552076 [00:05<00:00, 107809.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8793/552076 [00:00<00:06, 87928.83it/s]  4%|▍         | 20892/552076 [00:00<00:05, 95780.18it/s]  6%|▌         | 32308/552076 [00:00<00:05, 100640.88it/s]  8%|▊         | 43776/552076 [00:00<00:04, 104475.98it/s] 10%|█         | 55249/552076 [00:00<00:04, 107351.73it/s] 12%|█▏        | 67059/552076 [00:00<00:04, 110364.39it/s] 14%|█▍        | 79513/552076 [00:00<00:04, 114265.08it/s] 16%|█▋        | 90901/552076 [00:00<00:04, 114146.94it/s] 18%|█▊        | 102007/552076 [00:00<00:03, 113200.30it/s] 20%|██        | 113035/552076 [00:01<00:04, 107521.02it/s] 22%|██▏       | 123642/552076 [00:01<00:04, 101567.34it/s] 24%|██▍       | 133766/552076 [00:01<00:04, 93089.63it/s]  26%|██▋       | 145290/552076 [00:01<00:04, 96872.95it/s] 28%|██▊       | 155098/552076 [00:01<00:04, 81072.39it/s] 30%|██▉       | 165291/552076 [00:01<00:04, 86374.05it/s] 32%|███▏      | 174388/552076 [00:01<00:04, 82562.12it/s] 34%|███▎      | 185875/552076 [00:01<00:04, 90170.18it/s] 35%|███▌      | 195351/552076 [00:01<00:04, 85130.99it/s] 37%|███▋      | 205679/552076 [00:02<00:03, 89868.08it/s] 39%|███▉      | 215002/552076 [00:02<00:03, 84466.25it/s] 41%|████      | 226207/552076 [00:02<00:03, 91199.85it/s] 43%|████▎     | 237342/552076 [00:02<00:03, 96434.97it/s] 45%|████▍     | 247322/552076 [00:02<00:03, 90718.93it/s] 47%|████▋     | 259013/552076 [00:02<00:03, 97254.04it/s] 49%|████▉     | 270652/552076 [00:02<00:02, 102299.62it/s] 51%|█████     | 282628/552076 [00:02<00:02, 106976.54it/s] 53%|█████▎    | 294837/552076 [00:02<00:02, 111101.92it/s] 55%|█████▌    | 306180/552076 [00:03<00:02, 98254.92it/s]  58%|█████▊    | 317673/552076 [00:03<00:02, 102724.05it/s] 60%|█████▉    | 329061/552076 [00:03<00:02, 105833.50it/s] 62%|██████▏   | 339919/552076 [00:03<00:02, 103530.95it/s] 64%|██████▎   | 350805/552076 [00:03<00:01, 105073.95it/s] 66%|██████▌   | 361848/552076 [00:03<00:01, 106624.19it/s] 68%|██████▊   | 373517/552076 [00:03<00:01, 109455.16it/s] 70%|██████▉   | 384975/552076 [00:03<00:01, 110942.16it/s] 72%|███████▏  | 396220/552076 [00:03<00:01, 111387.52it/s] 74%|███████▍  | 407410/552076 [00:03<00:01, 109627.45it/s] 76%|███████▌  | 418415/552076 [00:04<00:01, 101701.69it/s] 78%|███████▊  | 430113/552076 [00:04<00:01, 105848.81it/s] 80%|████████  | 441851/552076 [00:04<00:01, 109062.86it/s] 82%|████████▏ | 453401/552076 [00:04<00:00, 110916.58it/s] 84%|████████▍ | 464600/552076 [00:04<00:00, 111233.70it/s] 86%|████████▋ | 476388/552076 [00:04<00:00, 113147.50it/s] 88%|████████▊ | 487902/552076 [00:04<00:00, 113736.64it/s] 90%|█████████ | 499315/552076 [00:04<00:00, 95524.48it/s]  92%|█████████▏| 509513/552076 [00:04<00:00, 97372.75it/s] 94%|█████████▍| 519625/552076 [00:05<00:00, 84285.10it/s] 96%|█████████▌| 528629/552076 [00:05<00:00, 67546.14it/s] 97%|█████████▋| 536316/552076 [00:05<00:00, 55809.44it/s] 98%|█████████▊| 542889/552076 [00:05<00:00, 40928.55it/s] 99%|█████████▉| 548247/552076 [00:06<00:00, 29029.95it/s]100%|██████████| 552076/552076 [00:06<00:00, 88037.57it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4772/552076 [00:00<00:11, 47718.79it/s]  2%|▏         | 9813/552076 [00:00<00:11, 48037.05it/s]  3%|▎         | 15087/552076 [00:00<00:10, 49355.51it/s]  4%|▍         | 21439/552076 [00:00<00:10, 52892.69it/s]  5%|▍         | 27370/552076 [00:00<00:09, 54666.80it/s]  6%|▌         | 32105/552076 [00:00<00:10, 50607.08it/s]  7%|▋         | 38213/552076 [00:00<00:09, 53350.89it/s]  8%|▊         | 44256/552076 [00:00<00:09, 55292.23it/s]  9%|▉         | 50279/552076 [00:00<00:08, 56314.04it/s] 10%|█         | 55792/552076 [00:01<00:10, 47373.87it/s] 11%|█         | 60688/552076 [00:01<00:11, 42398.41it/s] 12%|█▏        | 65137/552076 [00:01<00:12, 39715.17it/s] 13%|█▎        | 69290/552076 [00:01<00:12, 37990.38it/s] 13%|█▎        | 73232/552076 [00:01<00:13, 36557.02it/s] 14%|█▍        | 76999/552076 [00:01<00:13, 35701.52it/s] 15%|█▍        | 80652/552076 [00:01<00:13, 35459.19it/s] 15%|█▌        | 84256/552076 [00:01<00:13, 35610.34it/s] 16%|█▌        | 87858/552076 [00:02<00:13, 34791.24it/s] 17%|█▋        | 91370/552076 [00:02<00:13, 33770.94it/s] 17%|█▋        | 94934/552076 [00:02<00:13, 34310.54it/s] 18%|█▊        | 98524/552076 [00:02<00:13, 34772.05it/s] 18%|█▊        | 102019/552076 [00:02<00:13, 33853.40it/s] 19%|█▉        | 105485/552076 [00:02<00:13, 34090.65it/s] 20%|█▉        | 109081/552076 [00:02<00:12, 34630.47it/s] 20%|██        | 112667/552076 [00:02<00:12, 34989.64it/s] 21%|██        | 116175/552076 [00:02<00:12, 33949.62it/s] 22%|██▏       | 119773/552076 [00:02<00:12, 34533.82it/s] 22%|██▏       | 123358/552076 [00:03<00:12, 34917.08it/s] 23%|██▎       | 126859/552076 [00:03<00:12, 33937.39it/s] 24%|██▎       | 130281/552076 [00:03<00:12, 34021.13it/s] 24%|██▍       | 133818/552076 [00:03<00:12, 34414.18it/s] 25%|██▍       | 137368/552076 [00:03<00:11, 34732.34it/s] 26%|██▌       | 141524/552076 [00:03<00:11, 36527.26it/s] 27%|██▋       | 146978/552076 [00:03<00:09, 40544.17it/s] 28%|██▊       | 156711/552076 [00:03<00:08, 49144.85it/s] 30%|███       | 166328/552076 [00:03<00:06, 57592.75it/s] 32%|███▏      | 178006/552076 [00:03<00:05, 67919.10it/s] 34%|███▍      | 186405/552076 [00:04<00:05, 67480.26it/s] 36%|███▌      | 196883/552076 [00:04<00:04, 75547.10it/s] 38%|███▊      | 208779/552076 [00:04<00:04, 84833.29it/s] 40%|███▉      | 218406/552076 [00:04<00:04, 77518.44it/s] 41%|████      | 227081/552076 [00:04<00:04, 74073.93it/s] 43%|████▎     | 238795/552076 [00:04<00:03, 83255.08it/s] 45%|████▌     | 250764/552076 [00:04<00:03, 91622.24it/s] 47%|████▋     | 261990/552076 [00:04<00:02, 96968.43it/s] 49%|████▉     | 272367/552076 [00:05<00:03, 85229.95it/s] 51%|█████     | 281625/552076 [00:05<00:03, 79567.01it/s] 53%|█████▎    | 293471/552076 [00:05<00:02, 88260.27it/s] 55%|█████▌    | 305641/552076 [00:05<00:02, 96188.62it/s] 58%|█████▊    | 317633/552076 [00:05<00:02, 102258.59it/s] 59%|█████▉    | 328459/552076 [00:05<00:02, 96751.28it/s]  62%|██████▏   | 340253/552076 [00:05<00:02, 102260.76it/s] 64%|██████▎   | 351824/552076 [00:05<00:01, 105954.79it/s] 66%|██████▌   | 362749/552076 [00:05<00:01, 100032.15it/s] 68%|██████▊   | 374953/552076 [00:05<00:01, 105752.45it/s] 70%|███████   | 387090/552076 [00:06<00:01, 109997.06it/s] 72%|███████▏  | 399135/552076 [00:06<00:01, 112936.55it/s] 74%|███████▍  | 410625/552076 [00:06<00:01, 103849.37it/s] 76%|███████▋  | 421291/552076 [00:06<00:01, 102235.12it/s] 78%|███████▊  | 431868/552076 [00:06<00:01, 103270.26it/s] 80%|████████  | 443576/552076 [00:06<00:01, 105569.76it/s] 82%|████████▏ | 454247/552076 [00:06<00:00, 99029.92it/s]  85%|████████▍ | 466531/552076 [00:06<00:00, 105143.45it/s] 87%|████████▋ | 478350/552076 [00:06<00:00, 108742.07it/s] 89%|████████▊ | 489407/552076 [00:07<00:00, 108688.09it/s] 91%|█████████ | 500404/552076 [00:07<00:00, 103790.85it/s] 93%|█████████▎| 512218/552076 [00:07<00:00, 107715.58it/s] 95%|█████████▍| 524002/552076 [00:07<00:00, 110563.13it/s] 97%|█████████▋| 535171/552076 [00:07<00:00, 102911.15it/s] 99%|█████████▉| 547384/552076 [00:07<00:00, 108008.33it/s]100%|██████████| 552076/552076 [00:07<00:00, 72191.00it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11441/552076 [00:00<00:04, 114409.02it/s]  3%|▎         | 17292/552076 [00:00<00:06, 88921.15it/s]   5%|▌         | 28956/552076 [00:00<00:05, 95746.98it/s]  7%|▋         | 37981/552076 [00:00<00:05, 94026.41it/s]  8%|▊         | 45176/552076 [00:00<00:06, 82925.92it/s]  9%|▉         | 52163/552076 [00:00<00:06, 75193.11it/s] 11%|█         | 58907/552076 [00:00<00:07, 69368.71it/s] 12%|█▏        | 65390/552076 [00:00<00:07, 67797.28it/s] 13%|█▎        | 71860/552076 [00:00<00:07, 66709.51it/s] 14%|█▍        | 78328/552076 [00:01<00:07, 66047.66it/s] 15%|█▌        | 84862/552076 [00:01<00:07, 64678.70it/s] 17%|█▋        | 95288/552076 [00:01<00:06, 72990.89it/s] 19%|█▉        | 105033/552076 [00:01<00:05, 78933.14it/s] 21%|██        | 115719/552076 [00:01<00:05, 85647.97it/s] 23%|██▎       | 128009/552076 [00:01<00:04, 94213.46it/s] 25%|██▍       | 137975/552076 [00:01<00:04, 88204.35it/s] 27%|██▋       | 148769/552076 [00:01<00:04, 93323.14it/s] 29%|██▊       | 158503/552076 [00:01<00:04, 92320.33it/s] 31%|███       | 169373/552076 [00:01<00:03, 96689.24it/s] 33%|███▎      | 181691/552076 [00:02<00:03, 103355.81it/s] 35%|███▍      | 192332/552076 [00:02<00:03, 91652.83it/s]  37%|███▋      | 204718/552076 [00:02<00:03, 99407.44it/s] 39%|███▉      | 215170/552076 [00:02<00:03, 86857.77it/s] 41%|████      | 224500/552076 [00:02<00:03, 87354.66it/s] 43%|████▎     | 236616/552076 [00:02<00:03, 95334.10it/s] 45%|████▌     | 249065/552076 [00:02<00:02, 102537.54it/s] 47%|████▋     | 259846/552076 [00:02<00:02, 101189.68it/s] 49%|████▉     | 270338/552076 [00:03<00:02, 96506.21it/s]  51%|█████     | 282000/552076 [00:03<00:02, 101771.16it/s] 53%|█████▎    | 292469/552076 [00:03<00:02, 100257.94it/s] 55%|█████▌    | 304420/552076 [00:03<00:02, 105347.23it/s] 57%|█████▋    | 315170/552076 [00:03<00:02, 94601.22it/s]  59%|█████▉    | 325951/552076 [00:03<00:02, 98208.82it/s] 61%|██████    | 336057/552076 [00:03<00:02, 94851.60it/s] 63%|██████▎   | 345767/552076 [00:03<00:02, 85680.85it/s] 64%|██████▍   | 355476/552076 [00:03<00:02, 87318.64it/s] 66%|██████▌   | 364444/552076 [00:04<00:02, 78437.10it/s] 67%|██████▋   | 372624/552076 [00:04<00:02, 73712.23it/s] 70%|██████▉   | 384524/552076 [00:04<00:02, 83212.38it/s] 71%|███████▏  | 393459/552076 [00:04<00:01, 81175.08it/s] 73%|███████▎  | 403976/552076 [00:04<00:01, 87138.99it/s] 75%|███████▍  | 413122/552076 [00:04<00:01, 80546.69it/s] 76%|███████▋  | 421578/552076 [00:04<00:01, 75511.40it/s] 78%|███████▊  | 431865/552076 [00:04<00:01, 82057.55it/s] 80%|███████▉  | 440479/552076 [00:05<00:01, 75044.97it/s] 81%|████████  | 448386/552076 [00:05<00:01, 70492.04it/s] 83%|████████▎ | 456039/552076 [00:05<00:01, 72199.48it/s] 85%|████████▍ | 468212/552076 [00:05<00:01, 82237.48it/s] 87%|████████▋ | 480374/552076 [00:05<00:00, 91085.16it/s] 89%|████████▉ | 492515/552076 [00:05<00:00, 98462.73it/s] 91%|█████████▏| 504438/552076 [00:05<00:00, 103890.15it/s] 94%|█████████▎| 516429/552076 [00:05<00:00, 108225.05it/s] 96%|█████████▌| 528271/552076 [00:05<00:00, 111091.75it/s] 98%|█████████▊| 540609/552076 [00:05<00:00, 114513.10it/s]100%|██████████| 552076/552076 [00:06<00:00, 91445.80it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10159/552076 [00:00<00:05, 101588.40it/s]  3%|▎         | 17185/552076 [00:00<00:06, 88546.30it/s]   5%|▍         | 27161/552076 [00:00<00:05, 91635.65it/s]  7%|▋         | 38925/552076 [00:00<00:05, 98142.41it/s]  9%|▉         | 51206/552076 [00:00<00:04, 104435.18it/s] 12%|█▏        | 63492/552076 [00:00<00:04, 109353.82it/s] 14%|█▎        | 75820/552076 [00:00<00:04, 113187.45it/s] 16%|█▌        | 88252/552076 [00:00<00:03, 116311.26it/s] 18%|█▊        | 100700/552076 [00:00<00:03, 118646.76it/s] 20%|██        | 113017/552076 [00:01<00:03, 119967.24it/s] 23%|██▎       | 125244/552076 [00:01<00:03, 120646.98it/s] 25%|██▍       | 137599/552076 [00:01<00:03, 121501.70it/s] 27%|██▋       | 149682/552076 [00:01<00:03, 121297.61it/s] 29%|██▉       | 161750/552076 [00:01<00:03, 114117.07it/s] 31%|███▏      | 173206/552076 [00:01<00:03, 107052.32it/s] 33%|███▎      | 184032/552076 [00:01<00:03, 104842.28it/s] 36%|███▌      | 196344/552076 [00:01<00:03, 109728.13it/s] 38%|███▊      | 208585/552076 [00:01<00:03, 113247.89it/s] 40%|███▉      | 220618/552076 [00:01<00:02, 115281.47it/s] 42%|████▏     | 232637/552076 [00:02<00:02, 116709.74it/s] 44%|████▍     | 244788/552076 [00:02<00:02, 118108.15it/s] 47%|████▋     | 257175/552076 [00:02<00:02, 119776.85it/s] 49%|████▉     | 269623/552076 [00:02<00:02, 121147.55it/s] 51%|█████     | 282160/552076 [00:02<00:02, 122382.36it/s] 53%|█████▎    | 294425/552076 [00:02<00:02, 120480.99it/s] 56%|█████▌    | 306773/552076 [00:02<00:02, 121362.42it/s] 58%|█████▊    | 318929/552076 [00:02<00:01, 117399.19it/s] 60%|█████▉    | 330803/552076 [00:02<00:01, 117796.44it/s] 62%|██████▏   | 343109/552076 [00:02<00:01, 119325.99it/s] 64%|██████▍   | 355345/552076 [00:03<00:01, 120218.79it/s] 67%|██████▋   | 367796/552076 [00:03<00:01, 121472.35it/s] 69%|██████▉   | 380203/552076 [00:03<00:01, 122238.37it/s] 71%|███████   | 392570/552076 [00:03<00:01, 122663.01it/s] 73%|███████▎  | 404872/552076 [00:03<00:01, 122767.47it/s] 76%|███████▌  | 417294/552076 [00:03<00:01, 123199.51it/s] 78%|███████▊  | 429784/552076 [00:03<00:00, 123704.64it/s] 80%|████████  | 442238/552076 [00:03<00:00, 123953.22it/s] 82%|████████▏ | 454705/552076 [00:03<00:00, 124165.92it/s] 85%|████████▍ | 467196/552076 [00:03<00:00, 124387.01it/s] 87%|████████▋ | 479750/552076 [00:04<00:00, 124729.11it/s] 89%|████████▉ | 492257/552076 [00:04<00:00, 124831.13it/s] 91%|█████████▏| 504742/552076 [00:04<00:00, 124828.88it/s] 94%|█████████▎| 517226/552076 [00:04<00:00, 124307.88it/s] 96%|█████████▌| 529658/552076 [00:04<00:00, 118521.35it/s] 98%|█████████▊| 541568/552076 [00:04<00:00, 102609.37it/s]100%|██████████| 552076/552076 [00:04<00:00, 116771.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11941/552076 [00:00<00:04, 119403.57it/s]  4%|▍         | 23726/552076 [00:00<00:04, 118931.19it/s]  6%|▋         | 35278/552076 [00:00<00:04, 117884.57it/s]  9%|▉         | 49956/552076 [00:00<00:04, 125282.77it/s] 13%|█▎        | 72551/552076 [00:00<00:03, 144610.95it/s] 17%|█▋        | 94472/552076 [00:00<00:02, 161052.15it/s] 21%|██        | 116579/552076 [00:00<00:02, 175331.18it/s] 25%|██▌       | 139593/552076 [00:00<00:02, 188821.51it/s] 29%|██▉       | 159038/552076 [00:00<00:02, 173907.25it/s] 32%|███▏      | 179414/552076 [00:01<00:02, 181901.02it/s] 37%|███▋      | 202079/552076 [00:01<00:01, 193352.29it/s] 41%|████      | 224803/552076 [00:01<00:01, 202406.15it/s] 45%|████▍     | 247138/552076 [00:01<00:01, 208264.86it/s] 49%|████▊     | 268365/552076 [00:01<00:01, 184319.48it/s] 53%|█████▎    | 291132/552076 [00:01<00:01, 195484.46it/s] 57%|█████▋    | 314235/552076 [00:01<00:01, 204942.69it/s] 61%|██████    | 336110/552076 [00:01<00:01, 208896.11it/s] 65%|██████▍   | 357964/552076 [00:01<00:00, 211697.45it/s] 69%|██████▉   | 380471/552076 [00:01<00:00, 215538.95it/s] 73%|███████▎  | 402667/552076 [00:02<00:00, 217425.67it/s] 77%|███████▋  | 424589/552076 [00:02<00:00, 215594.00it/s] 81%|████████  | 446278/552076 [00:02<00:00, 215327.88it/s] 85%|████████▍ | 468565/552076 [00:02<00:00, 217535.36it/s] 89%|████████▉ | 491468/552076 [00:02<00:00, 220858.38it/s] 93%|█████████▎| 513973/552076 [00:02<00:00, 222096.62it/s] 97%|█████████▋| 536227/552076 [00:02<00:00, 218254.01it/s]100%|██████████| 552076/552076 [00:02<00:00, 199497.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20922/552076 [00:00<00:02, 209216.21it/s]  8%|▊         | 42070/552076 [00:00<00:02, 209888.21it/s] 11%|█▏        | 62391/552076 [00:00<00:02, 207838.72it/s] 15%|█▌        | 83541/552076 [00:00<00:02, 208922.45it/s] 19%|█▉        | 105020/552076 [00:00<00:02, 210648.25it/s] 23%|██▎       | 126400/552076 [00:00<00:02, 211581.49it/s] 27%|██▋       | 146962/552076 [00:00<00:01, 209756.05it/s] 30%|███       | 166223/552076 [00:00<00:01, 194252.93it/s] 33%|███▎      | 184676/552076 [00:00<00:01, 188096.14it/s] 37%|███▋      | 202848/552076 [00:01<00:01, 183467.49it/s] 40%|████      | 222128/552076 [00:01<00:01, 186169.36it/s] 44%|████▍     | 242536/552076 [00:01<00:01, 191201.28it/s] 48%|████▊     | 263374/552076 [00:01<00:01, 196049.87it/s] 52%|█████▏    | 284911/552076 [00:01<00:01, 201470.72it/s] 56%|█████▌    | 307009/552076 [00:01<00:01, 206950.77it/s] 59%|█████▉    | 328372/552076 [00:01<00:01, 208908.87it/s] 64%|██████▎   | 350935/552076 [00:01<00:00, 213658.83it/s] 67%|██████▋   | 372342/552076 [00:01<00:00, 212753.86it/s] 71%|███████▏  | 393647/552076 [00:01<00:00, 210901.78it/s] 75%|███████▌  | 415616/552076 [00:02<00:00, 213462.99it/s] 79%|███████▉  | 437704/552076 [00:02<00:00, 215633.21it/s] 83%|████████▎ | 460762/552076 [00:02<00:00, 219907.11it/s] 88%|████████▊ | 483588/552076 [00:02<00:00, 222347.36it/s] 92%|█████████▏| 506237/552076 [00:02<00:00, 223572.32it/s] 96%|█████████▌| 528619/552076 [00:02<00:00, 218354.84it/s]100%|█████████▉| 550499/552076 [00:02<00:00, 211200.10it/s]100%|██████████| 552076/552076 [00:02<00:00, 207629.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20746/552076 [00:00<00:02, 207453.77it/s]  8%|▊         | 43191/552076 [00:00<00:02, 212275.99it/s] 12%|█▏        | 64519/552076 [00:00<00:02, 212574.29it/s] 16%|█▌        | 86582/552076 [00:00<00:02, 214926.67it/s] 20%|█▉        | 108592/552076 [00:00<00:02, 216452.40it/s] 23%|██▎       | 128508/552076 [00:00<00:02, 210956.97it/s] 27%|██▋       | 148336/552076 [00:00<00:01, 206984.93it/s] 31%|███       | 168538/552076 [00:00<00:01, 205467.98it/s] 34%|███▍      | 189798/552076 [00:00<00:01, 207554.43it/s] 38%|███▊      | 209746/552076 [00:01<00:01, 185468.38it/s] 41%|████▏     | 228167/552076 [00:01<00:01, 165087.52it/s] 45%|████▌     | 248803/552076 [00:01<00:01, 175623.80it/s] 49%|████▉     | 269348/552076 [00:01<00:01, 183618.89it/s] 52%|█████▏    | 288176/552076 [00:01<00:01, 184991.56it/s] 56%|█████▌    | 306947/552076 [00:01<00:01, 169601.98it/s] 59%|█████▉    | 324348/552076 [00:01<00:01, 165421.64it/s] 62%|██████▏   | 341222/552076 [00:01<00:01, 148520.69it/s] 65%|██████▍   | 356632/552076 [00:02<00:01, 117041.21it/s] 67%|██████▋   | 369768/552076 [00:02<00:01, 118805.90it/s] 69%|██████▉   | 382658/552076 [00:02<00:01, 118973.70it/s] 72%|███████▏  | 396122/552076 [00:02<00:01, 123274.07it/s] 74%|███████▍  | 408984/552076 [00:02<00:01, 123796.72it/s] 77%|███████▋  | 422646/552076 [00:02<00:01, 127382.29it/s] 80%|███████▉  | 439121/552076 [00:02<00:00, 136681.44it/s] 83%|████████▎ | 458598/552076 [00:02<00:00, 150111.67it/s] 87%|████████▋ | 478174/552076 [00:02<00:00, 161400.34it/s] 90%|█████████ | 497438/552076 [00:02<00:00, 169652.20it/s] 93%|█████████▎| 515014/552076 [00:03<00:00, 160405.91it/s] 96%|█████████▋| 531587/552076 [00:03<00:00, 152234.18it/s] 99%|█████████▉| 547270/552076 [00:03<00:00, 147367.36it/s]100%|██████████| 552076/552076 [00:03<00:00, 163900.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7549/552076 [00:00<00:07, 75484.31it/s]  3%|▎         | 15071/552076 [00:00<00:07, 75403.28it/s]  4%|▍         | 22480/552076 [00:00<00:07, 75004.07it/s]  5%|▌         | 30188/552076 [00:00<00:06, 75613.50it/s]  7%|▋         | 37917/552076 [00:00<00:06, 76106.64it/s]  8%|▊         | 45671/552076 [00:00<00:06, 76529.18it/s] 10%|▉         | 53641/552076 [00:00<00:06, 77451.86it/s] 12%|█▏        | 64551/552076 [00:00<00:05, 84833.54it/s] 13%|█▎        | 73042/552076 [00:00<00:05, 84854.06it/s] 15%|█▍        | 82385/552076 [00:01<00:05, 87255.30it/s] 17%|█▋        | 92777/552076 [00:01<00:05, 91663.04it/s] 19%|█▊        | 102806/552076 [00:01<00:04, 94089.73it/s] 21%|██        | 113328/552076 [00:01<00:04, 97171.88it/s] 22%|██▏       | 123080/552076 [00:01<00:04, 95718.35it/s] 24%|██▍       | 132681/552076 [00:01<00:04, 93896.63it/s] 26%|██▌       | 143197/552076 [00:01<00:04, 97013.08it/s] 28%|██▊       | 153959/552076 [00:01<00:03, 99968.63it/s] 30%|██▉       | 164011/552076 [00:01<00:03, 97762.06it/s] 31%|███▏      | 173837/552076 [00:01<00:04, 92897.37it/s] 33%|███▎      | 183212/552076 [00:02<00:04, 91075.08it/s] 35%|███▍      | 192580/552076 [00:02<00:03, 91840.53it/s] 37%|███▋      | 203498/552076 [00:02<00:03, 96432.07it/s] 39%|███▉      | 214183/552076 [00:02<00:03, 99335.23it/s] 41%|████      | 225041/552076 [00:02<00:03, 101936.73it/s] 43%|████▎     | 235314/552076 [00:02<00:03, 101761.98it/s] 44%|████▍     | 245546/552076 [00:02<00:03, 101444.99it/s] 46%|████▋     | 255743/552076 [00:02<00:02, 101600.43it/s] 48%|████▊     | 265931/552076 [00:02<00:02, 96628.86it/s]  50%|████▉     | 275664/552076 [00:02<00:03, 89317.04it/s] 52%|█████▏    | 284755/552076 [00:03<00:03, 72341.80it/s] 53%|█████▎    | 294298/552076 [00:03<00:03, 78001.61it/s] 55%|█████▌    | 304172/552076 [00:03<00:03, 81159.87it/s] 57%|█████▋    | 312720/552076 [00:03<00:02, 81028.45it/s] 58%|█████▊    | 321862/552076 [00:03<00:02, 83887.15it/s] 60%|██████    | 333784/552076 [00:03<00:02, 92072.50it/s] 63%|██████▎   | 346120/552076 [00:03<00:02, 99654.94it/s] 65%|██████▍   | 356551/552076 [00:03<00:02, 83698.78it/s] 67%|██████▋   | 368359/552076 [00:04<00:02, 91706.74it/s] 69%|██████▊   | 378292/552076 [00:04<00:02, 76779.24it/s] 71%|███████   | 390503/552076 [00:04<00:01, 86401.04it/s] 73%|███████▎  | 402741/552076 [00:04<00:01, 94758.43it/s] 75%|███████▌  | 414331/552076 [00:04<00:01, 100243.19it/s] 77%|███████▋  | 426425/552076 [00:04<00:01, 105666.76it/s] 79%|███████▉  | 438502/552076 [00:04<00:01, 109784.37it/s] 82%|████████▏ | 450777/552076 [00:04<00:00, 113376.55it/s] 84%|████████▍ | 462483/552076 [00:04<00:00, 114455.29it/s] 86%|████████▌ | 474796/552076 [00:05<00:00, 116924.24it/s] 88%|████████▊ | 487085/552076 [00:05<00:00, 118650.64it/s] 90%|█████████ | 499435/552076 [00:05<00:00, 120063.43it/s] 93%|█████████▎| 511774/552076 [00:05<00:00, 121040.16it/s] 95%|█████████▍| 523952/552076 [00:05<00:00, 120858.62it/s] 97%|█████████▋| 536195/552076 [00:05<00:00, 121325.04it/s] 99%|█████████▉| 548371/552076 [00:05<00:00, 121452.98it/s]100%|██████████| 552076/552076 [00:05<00:00, 97304.47it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11956/552076 [00:00<00:04, 119556.98it/s]  4%|▍         | 23828/552076 [00:00<00:04, 119304.00it/s]  6%|▋         | 35780/552076 [00:00<00:04, 119366.11it/s]  9%|▊         | 47854/552076 [00:00<00:04, 119773.14it/s] 11%|█         | 60110/552076 [00:00<00:04, 120594.56it/s] 13%|█▎        | 72303/552076 [00:00<00:03, 120991.72it/s] 15%|█▌        | 84542/552076 [00:00<00:03, 121405.11it/s] 18%|█▊        | 96733/552076 [00:00<00:03, 121554.87it/s] 20%|█▉        | 108911/552076 [00:00<00:03, 121621.23it/s] 22%|██▏       | 121031/552076 [00:01<00:03, 121493.37it/s] 24%|██▍       | 132892/552076 [00:01<00:03, 120613.34it/s] 26%|██▋       | 145027/552076 [00:01<00:03, 120832.74it/s] 28%|██▊       | 157273/552076 [00:01<00:03, 121316.31it/s] 31%|███       | 169688/552076 [00:01<00:03, 122150.97it/s] 33%|███▎      | 182017/552076 [00:01<00:03, 122489.89it/s] 35%|███▌      | 194242/552076 [00:01<00:02, 122417.33it/s] 37%|███▋      | 206446/552076 [00:01<00:02, 121966.46it/s] 40%|███▉      | 218719/552076 [00:01<00:02, 122191.77it/s] 42%|████▏     | 231010/552076 [00:01<00:02, 122403.95it/s] 44%|████▍     | 243317/552076 [00:02<00:02, 122602.52it/s] 46%|████▋     | 255569/552076 [00:02<00:02, 122254.09it/s] 49%|████▊     | 267789/552076 [00:02<00:02, 121780.63it/s] 51%|█████     | 280122/552076 [00:02<00:02, 122240.42it/s] 53%|█████▎    | 292344/552076 [00:02<00:02, 122111.95it/s] 55%|█████▌    | 304752/552076 [00:02<00:02, 122695.73it/s] 57%|█████▋    | 317022/552076 [00:02<00:01, 121251.79it/s] 60%|█████▉    | 329214/552076 [00:02<00:01, 121451.34it/s] 62%|██████▏   | 341537/552076 [00:02<00:01, 121977.14it/s] 64%|██████▍   | 353805/552076 [00:02<00:01, 122185.71it/s] 66%|██████▋   | 366026/552076 [00:03<00:01, 115088.44it/s] 68%|██████▊   | 377621/552076 [00:03<00:01, 92745.85it/s]  70%|███████   | 387653/552076 [00:03<00:01, 89993.95it/s] 72%|███████▏  | 399855/552076 [00:03<00:01, 97684.48it/s] 74%|███████▍  | 410199/552076 [00:03<00:01, 98765.75it/s] 76%|███████▌  | 420481/552076 [00:03<00:01, 91202.15it/s] 78%|███████▊  | 431812/552076 [00:03<00:01, 96871.26it/s] 80%|████████  | 442102/552076 [00:03<00:01, 98603.39it/s] 82%|████████▏ | 452854/552076 [00:03<00:00, 101117.18it/s] 84%|████████▍ | 463171/552076 [00:04<00:00, 94125.95it/s]  86%|████████▌ | 472825/552076 [00:04<00:00, 94005.69it/s] 88%|████████▊ | 484190/552076 [00:04<00:00, 99146.64it/s] 90%|████████▉ | 494298/552076 [00:04<00:00, 90356.43it/s] 91%|█████████ | 503620/552076 [00:04<00:00, 80887.04it/s] 93%|█████████▎| 512095/552076 [00:04<00:00, 72859.79it/s] 94%|█████████▍| 519803/552076 [00:04<00:00, 69073.86it/s] 96%|█████████▌| 529580/552076 [00:04<00:00, 75742.50it/s] 98%|█████████▊| 541670/552076 [00:05<00:00, 85300.32it/s]100%|█████████▉| 550900/552076 [00:05<00:00, 81824.45it/s]100%|██████████| 552076/552076 [00:05<00:00, 106572.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12027/552076 [00:00<00:04, 120262.09it/s]  4%|▎         | 20159/552076 [00:00<00:05, 103648.57it/s]  6%|▌         | 31630/552076 [00:00<00:04, 106734.44it/s]  8%|▊         | 43798/552076 [00:00<00:04, 110816.95it/s] 10%|█         | 55245/552076 [00:00<00:04, 111885.91it/s] 12%|█▏        | 67340/552076 [00:00<00:04, 114457.23it/s] 14%|█▍        | 78262/552076 [00:00<00:04, 112832.43it/s] 16%|█▋        | 90570/552076 [00:00<00:03, 115721.34it/s] 19%|█▊        | 102863/552076 [00:00<00:03, 117791.35it/s] 21%|██        | 114941/552076 [00:01<00:03, 118670.08it/s] 23%|██▎       | 127011/552076 [00:01<00:03, 119271.80it/s] 25%|██▌       | 139243/552076 [00:01<00:03, 120169.38it/s] 27%|██▋       | 151526/552076 [00:01<00:03, 120953.71it/s] 30%|██▉       | 163526/552076 [00:01<00:03, 119483.91it/s] 32%|███▏      | 175769/552076 [00:01<00:03, 120351.08it/s] 34%|███▍      | 188056/552076 [00:01<00:03, 121093.06it/s] 36%|███▋      | 200282/552076 [00:01<00:02, 121439.80it/s] 38%|███▊      | 212521/552076 [00:01<00:02, 121722.65it/s] 41%|████      | 224721/552076 [00:01<00:02, 121802.97it/s] 43%|████▎     | 237038/552076 [00:02<00:02, 122209.14it/s] 45%|████▌     | 249287/552076 [00:02<00:02, 122291.37it/s] 47%|████▋     | 261527/552076 [00:02<00:02, 122323.80it/s] 50%|████▉     | 273796/552076 [00:02<00:02, 122432.33it/s] 52%|█████▏    | 286038/552076 [00:02<00:02, 122376.14it/s] 54%|█████▍    | 298453/552076 [00:02<00:02, 122901.69it/s] 56%|█████▋    | 310907/552076 [00:02<00:01, 123385.61it/s] 59%|█████▊    | 323246/552076 [00:02<00:01, 123362.35it/s] 61%|██████    | 335583/552076 [00:02<00:01, 123341.30it/s] 63%|██████▎   | 347940/552076 [00:02<00:01, 123409.50it/s] 65%|██████▌   | 360310/552076 [00:03<00:01, 123495.66it/s] 68%|██████▊   | 372660/552076 [00:03<00:01, 123249.99it/s] 70%|██████▉   | 384986/552076 [00:03<00:01, 123197.70it/s] 72%|███████▏  | 397360/552076 [00:03<00:01, 123357.02it/s] 74%|███████▍  | 409696/552076 [00:03<00:01, 123203.12it/s] 76%|███████▋  | 422059/552076 [00:03<00:01, 123329.50it/s] 79%|███████▊  | 434486/552076 [00:03<00:00, 123609.66it/s] 81%|████████  | 446848/552076 [00:03<00:00, 123356.32it/s] 83%|████████▎ | 459184/552076 [00:03<00:00, 123157.94it/s] 85%|████████▌ | 471527/552076 [00:03<00:00, 123236.48it/s] 88%|████████▊ | 483851/552076 [00:04<00:00, 120469.52it/s] 90%|████████▉ | 495912/552076 [00:04<00:00, 116084.70it/s] 92%|█████████▏| 507565/552076 [00:04<00:00, 116128.83it/s] 94%|█████████▍| 519732/552076 [00:04<00:00, 117736.18it/s] 96%|█████████▋| 532014/552076 [00:04<00:00, 119214.96it/s] 99%|█████████▊| 544272/552076 [00:04<00:00, 120202.33it/s]100%|██████████| 552076/552076 [00:04<00:00, 120139.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11078/552076 [00:00<00:04, 110777.20it/s]  3%|▎         | 17529/552076 [00:00<00:05, 89752.69it/s]   4%|▍         | 23644/552076 [00:00<00:06, 78706.79it/s]  6%|▌         | 34105/552076 [00:00<00:06, 85020.90it/s]  8%|▊         | 46038/552076 [00:00<00:05, 93045.97it/s] 10%|█         | 57879/552076 [00:00<00:04, 99434.64it/s] 13%|█▎        | 69619/552076 [00:00<00:04, 104218.64it/s] 14%|█▍        | 79603/552076 [00:00<00:04, 96465.49it/s]  17%|█▋        | 92052/552076 [00:00<00:04, 103450.05it/s] 19%|█▉        | 103586/552076 [00:01<00:04, 106751.32it/s] 21%|██        | 115704/552076 [00:01<00:03, 110705.52it/s] 23%|██▎       | 127553/552076 [00:01<00:03, 112930.10it/s] 25%|██▌       | 139755/552076 [00:01<00:03, 115510.40it/s] 27%|██▋       | 151358/552076 [00:01<00:03, 115562.00it/s] 30%|██▉       | 163560/552076 [00:01<00:03, 117424.16it/s] 32%|███▏      | 176102/552076 [00:01<00:03, 119711.19it/s] 34%|███▍      | 189497/552076 [00:01<00:02, 123651.85it/s] 37%|███▋      | 201919/552076 [00:01<00:02, 120254.02it/s] 39%|███▉      | 214208/552076 [00:01<00:02, 121032.05it/s] 41%|████      | 226459/552076 [00:02<00:02, 121469.13it/s] 43%|████▎     | 238637/552076 [00:02<00:02, 119048.69it/s] 45%|████▌     | 250813/552076 [00:02<00:02, 119848.68it/s] 48%|████▊     | 262936/552076 [00:02<00:02, 120257.83it/s] 50%|████▉     | 275169/552076 [00:02<00:02, 120871.77it/s] 52%|█████▏    | 287269/552076 [00:02<00:02, 118688.72it/s] 54%|█████▍    | 299443/552076 [00:02<00:02, 119587.70it/s] 56%|█████▋    | 311416/552076 [00:02<00:02, 119091.64it/s] 59%|█████▊    | 324323/552076 [00:02<00:01, 121917.61it/s] 61%|██████    | 337688/552076 [00:02<00:01, 125214.30it/s] 63%|██████▎   | 350249/552076 [00:03<00:01, 124517.18it/s] 66%|██████▌   | 362729/552076 [00:03<00:01, 123721.50it/s] 68%|██████▊   | 375122/552076 [00:03<00:01, 120464.54it/s] 70%|███████   | 387342/552076 [00:03<00:01, 120978.47it/s] 72%|███████▏  | 399503/552076 [00:03<00:01, 121164.16it/s] 75%|███████▍  | 411637/552076 [00:03<00:01, 120881.25it/s] 77%|███████▋  | 423776/552076 [00:03<00:01, 121032.08it/s] 79%|███████▉  | 437428/552076 [00:03<00:00, 125296.01it/s] 82%|████████▏ | 450002/552076 [00:03<00:00, 124608.40it/s] 84%|████████▍ | 462495/552076 [00:03<00:00, 124343.24it/s] 86%|████████▌ | 474952/552076 [00:04<00:00, 121942.12it/s] 88%|████████▊ | 487173/552076 [00:04<00:00, 121614.45it/s] 90%|█████████ | 499353/552076 [00:04<00:00, 121621.00it/s] 93%|█████████▎| 511575/552076 [00:04<00:00, 121799.51it/s] 95%|█████████▍| 523765/552076 [00:04<00:00, 115337.61it/s] 97%|█████████▋| 536207/552076 [00:04<00:00, 117918.65it/s] 99%|█████████▉| 548327/552076 [00:04<00:00, 118884.12it/s]100%|██████████| 552076/552076 [00:04<00:00, 116807.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7784/552076 [00:00<00:07, 73704.38it/s]  3%|▎         | 16752/552076 [00:00<00:06, 77865.22it/s]  5%|▍         | 26609/552076 [00:00<00:06, 83101.30it/s]  6%|▌         | 33888/552076 [00:00<00:06, 79712.32it/s]  7%|▋         | 40929/552076 [00:00<00:06, 76671.55it/s]  9%|▉         | 51737/552076 [00:00<00:05, 83992.97it/s] 11%|█         | 60240/552076 [00:00<00:05, 84300.96it/s] 12%|█▏        | 68792/552076 [00:00<00:05, 84662.43it/s] 14%|█▍        | 77531/552076 [00:00<00:05, 85460.83it/s] 16%|█▌        | 89532/552076 [00:01<00:04, 93538.77it/s] 18%|█▊        | 100475/552076 [00:01<00:04, 96703.96it/s] 20%|█▉        | 110237/552076 [00:01<00:05, 79352.66it/s] 22%|██▏       | 122286/552076 [00:01<00:04, 88407.12it/s] 24%|██▍       | 132190/552076 [00:01<00:04, 91347.26it/s] 26%|██▌       | 142952/552076 [00:01<00:04, 95684.62it/s] 28%|██▊       | 152951/552076 [00:01<00:04, 86035.61it/s] 29%|██▉       | 162040/552076 [00:01<00:04, 84468.94it/s] 31%|███▏      | 172909/552076 [00:01<00:04, 90518.65it/s] 33%|███▎      | 183831/552076 [00:02<00:03, 95070.42it/s] 35%|███▌      | 195489/552076 [00:02<00:03, 100640.89it/s] 38%|███▊      | 207395/552076 [00:02<00:03, 105537.12it/s] 40%|███▉      | 219736/552076 [00:02<00:03, 110328.77it/s] 42%|████▏     | 231021/552076 [00:02<00:03, 103190.36it/s] 44%|████▍     | 242126/552076 [00:02<00:02, 105427.00it/s] 46%|████▌     | 252870/552076 [00:02<00:03, 85501.03it/s]  48%|████▊     | 262415/552076 [00:02<00:03, 88259.01it/s] 50%|████▉     | 273822/552076 [00:02<00:02, 94684.63it/s] 52%|█████▏    | 285362/552076 [00:03<00:02, 100073.73it/s] 54%|█████▍    | 296911/552076 [00:03<00:02, 104246.58it/s] 56%|█████▌    | 307691/552076 [00:03<00:02, 87631.17it/s]  58%|█████▊    | 319561/552076 [00:03<00:02, 95098.48it/s] 60%|█████▉    | 331154/552076 [00:03<00:02, 100515.72it/s] 62%|██████▏   | 343065/552076 [00:03<00:01, 105453.03it/s] 64%|██████▍   | 354932/552076 [00:03<00:01, 109096.33it/s] 66%|██████▋   | 366713/552076 [00:03<00:01, 111571.29it/s] 69%|██████▊   | 378339/552076 [00:03<00:01, 112934.52it/s] 71%|███████   | 389818/552076 [00:04<00:01, 111510.58it/s] 73%|███████▎  | 401528/552076 [00:04<00:01, 113129.50it/s] 75%|███████▍  | 413392/552076 [00:04<00:01, 114727.38it/s] 77%|███████▋  | 424940/552076 [00:04<00:01, 90708.57it/s]  79%|███████▉  | 436476/552076 [00:04<00:01, 96920.50it/s] 81%|████████  | 447925/552076 [00:04<00:01, 101595.85it/s] 83%|████████▎ | 459347/552076 [00:04<00:00, 105079.93it/s] 85%|████████▌ | 470930/552076 [00:04<00:00, 108087.65it/s] 87%|████████▋ | 482053/552076 [00:04<00:00, 99148.53it/s]  89%|████████▉ | 492693/552076 [00:05<00:00, 101217.71it/s] 91%|█████████ | 503720/552076 [00:05<00:00, 103770.84it/s] 93%|█████████▎| 515150/552076 [00:05<00:00, 106719.29it/s] 95%|█████████▌| 526662/552076 [00:05<00:00, 109107.40it/s] 97%|█████████▋| 537700/552076 [00:05<00:00, 109263.02it/s] 99%|█████████▉| 548716/552076 [00:05<00:00, 107757.23it/s]100%|██████████| 552076/552076 [00:05<00:00, 98871.33it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8208/552076 [00:00<00:06, 79512.14it/s]  2%|▏         | 13780/552076 [00:00<00:07, 68513.78it/s]  4%|▍         | 23563/552076 [00:00<00:07, 75280.58it/s]  6%|▌         | 31123/552076 [00:00<00:06, 75374.91it/s]  7%|▋         | 39897/552076 [00:00<00:06, 78701.14it/s]  8%|▊         | 46661/552076 [00:00<00:07, 71228.62it/s] 10%|█         | 56325/552076 [00:00<00:06, 77327.80it/s] 12%|█▏        | 67925/552076 [00:00<00:05, 85919.75it/s] 14%|█▍        | 79546/552076 [00:00<00:05, 93207.09it/s] 17%|█▋        | 91779/552076 [00:01<00:04, 100373.96it/s] 19%|█▊        | 103426/552076 [00:01<00:04, 104714.18it/s] 21%|██        | 115664/552076 [00:01<00:03, 109452.65it/s] 23%|██▎       | 127266/552076 [00:01<00:03, 111341.71it/s] 25%|██▌       | 139472/552076 [00:01<00:03, 114352.39it/s] 27%|██▋       | 151780/552076 [00:01<00:03, 116837.05it/s] 30%|██▉       | 163582/552076 [00:01<00:03, 116892.92it/s] 32%|███▏      | 175780/552076 [00:01<00:03, 118371.41it/s] 34%|███▍      | 187680/552076 [00:01<00:03, 111404.07it/s] 36%|███▌      | 198948/552076 [00:02<00:03, 92137.23it/s]  38%|███▊      | 208805/552076 [00:02<00:04, 83042.39it/s] 39%|███▉      | 217730/552076 [00:02<00:04, 76429.50it/s] 41%|████      | 225911/552076 [00:02<00:04, 75324.96it/s] 43%|████▎     | 236736/552076 [00:02<00:03, 81762.41it/s] 45%|████▍     | 246650/552076 [00:02<00:03, 86298.56it/s] 46%|████▋     | 256130/552076 [00:02<00:03, 88164.24it/s] 48%|████▊     | 265213/552076 [00:02<00:03, 87348.13it/s] 50%|████▉     | 274832/552076 [00:02<00:03, 89823.28it/s] 52%|█████▏    | 285186/552076 [00:03<00:02, 93540.38it/s] 53%|█████▎    | 294685/552076 [00:03<00:02, 90233.57it/s] 55%|█████▌    | 303835/552076 [00:03<00:03, 76976.72it/s] 57%|█████▋    | 311960/552076 [00:03<00:03, 77603.48it/s] 58%|█████▊    | 322442/552076 [00:03<00:02, 84157.87it/s] 60%|█████▉    | 331229/552076 [00:03<00:02, 80542.23it/s] 62%|██████▏   | 339576/552076 [00:03<00:02, 77239.11it/s] 63%|██████▎   | 347534/552076 [00:03<00:02, 72680.52it/s] 64%|██████▍   | 355021/552076 [00:04<00:03, 63384.93it/s] 66%|██████▌   | 361727/552076 [00:04<00:04, 43460.93it/s] 67%|██████▋   | 367173/552076 [00:04<00:05, 31015.52it/s] 67%|██████▋   | 371543/552076 [00:04<00:07, 23723.00it/s] 68%|██████▊   | 375062/552076 [00:05<00:08, 20163.65it/s] 68%|██████▊   | 377973/552076 [00:05<00:07, 21800.40it/s] 69%|██████▉   | 381274/552076 [00:05<00:07, 23701.06it/s] 70%|██████▉   | 384318/552076 [00:05<00:06, 25386.69it/s] 70%|███████   | 387397/552076 [00:05<00:06, 26797.37it/s] 71%|███████   | 390373/552076 [00:05<00:06, 26856.15it/s] 73%|███████▎  | 401120/552076 [00:05<00:04, 34654.31it/s] 75%|███████▍  | 412670/552076 [00:05<00:03, 43865.39it/s] 77%|███████▋  | 424215/552076 [00:05<00:02, 53889.57it/s] 79%|███████▉  | 436456/552076 [00:06<00:01, 64765.14it/s] 81%|████████▏ | 448778/552076 [00:06<00:01, 75511.04it/s] 83%|████████▎ | 460219/552076 [00:06<00:01, 84086.65it/s] 85%|████████▌ | 471048/552076 [00:06<00:00, 90129.81it/s] 87%|████████▋ | 481802/552076 [00:06<00:00, 89114.91it/s] 89%|████████▉ | 494084/552076 [00:06<00:00, 97108.47it/s] 92%|█████████▏| 505709/552076 [00:06<00:00, 102153.59it/s] 94%|█████████▎| 516741/552076 [00:06<00:00, 95302.55it/s]  96%|█████████▌| 528949/552076 [00:06<00:00, 102015.26it/s] 98%|█████████▊| 541189/552076 [00:06<00:00, 107378.60it/s]100%|██████████| 552076/552076 [00:07<00:00, 77958.46it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5925/552076 [00:00<00:09, 59248.50it/s]  2%|▏         | 10707/552076 [00:00<00:09, 55283.17it/s]  3%|▎         | 16311/552076 [00:00<00:09, 55438.83it/s]  4%|▍         | 22364/552076 [00:00<00:09, 56873.33it/s]  5%|▌         | 28111/552076 [00:00<00:09, 56793.77it/s]  6%|▋         | 35011/552076 [00:00<00:08, 59976.07it/s]  8%|▊         | 43149/552076 [00:00<00:07, 65113.51it/s]  9%|▉         | 49347/552076 [00:00<00:09, 55580.04it/s] 10%|▉         | 54929/552076 [00:00<00:09, 50751.57it/s] 11%|█         | 60102/552076 [00:01<00:10, 47667.09it/s] 12%|█▏        | 64976/552076 [00:01<00:10, 44822.49it/s] 13%|█▎        | 69568/552076 [00:01<00:10, 44726.36it/s] 14%|█▎        | 75901/552076 [00:01<00:09, 49048.17it/s] 15%|█▍        | 80986/552076 [00:01<00:09, 47955.72it/s] 17%|█▋        | 92914/552076 [00:01<00:07, 58438.85it/s] 18%|█▊        | 100957/552076 [00:01<00:07, 63332.69it/s] 20%|█▉        | 108238/552076 [00:01<00:06, 63932.08it/s] 21%|██        | 115296/552076 [00:01<00:06, 62922.92it/s] 22%|██▏       | 122057/552076 [00:02<00:06, 61573.02it/s] 23%|██▎       | 128549/552076 [00:02<00:06, 62517.71it/s] 24%|██▍       | 135039/552076 [00:02<00:06, 63180.75it/s] 26%|██▌       | 141526/552076 [00:02<00:06, 62318.25it/s] 27%|██▋       | 147879/552076 [00:02<00:06, 61299.21it/s] 28%|██▊       | 154181/552076 [00:02<00:06, 61805.30it/s] 29%|██▉       | 160733/552076 [00:02<00:06, 62874.09it/s] 30%|███       | 167264/552076 [00:02<00:06, 63584.74it/s] 31%|███▏      | 173659/552076 [00:02<00:06, 61986.03it/s] 33%|███▎      | 180072/552076 [00:03<00:05, 62612.90it/s] 34%|███▍      | 186503/552076 [00:03<00:05, 62424.23it/s] 35%|███▍      | 193015/552076 [00:03<00:05, 63207.80it/s] 36%|███▌      | 199351/552076 [00:03<00:05, 62683.61it/s] 37%|███▋      | 205631/552076 [00:03<00:05, 60910.19it/s] 38%|███▊      | 212069/552076 [00:03<00:05, 60664.11it/s] 40%|███▉      | 218522/552076 [00:03<00:05, 61773.35it/s] 41%|████      | 224714/552076 [00:03<00:05, 61372.26it/s] 42%|████▏     | 231221/552076 [00:03<00:05, 62436.15it/s] 43%|████▎     | 237630/552076 [00:03<00:05, 61905.95it/s] 44%|████▍     | 244202/552076 [00:04<00:04, 63002.66it/s] 45%|████▌     | 250514/552076 [00:04<00:04, 62600.99it/s] 47%|████▋     | 256990/552076 [00:04<00:04, 63232.95it/s] 48%|████▊     | 263321/552076 [00:04<00:04, 62200.00it/s] 49%|████▉     | 269859/552076 [00:04<00:04, 63120.31it/s] 50%|█████     | 276181/552076 [00:04<00:04, 62654.79it/s] 51%|█████     | 282745/552076 [00:04<00:04, 63519.97it/s] 52%|█████▏    | 289106/552076 [00:04<00:04, 62491.20it/s] 54%|█████▎    | 295705/552076 [00:04<00:04, 63500.05it/s] 55%|█████▍    | 302066/552076 [00:04<00:03, 62982.11it/s] 56%|█████▌    | 308577/552076 [00:05<00:03, 63604.23it/s] 57%|█████▋    | 314945/552076 [00:05<00:03, 62359.47it/s] 58%|█████▊    | 321192/552076 [00:05<00:04, 46200.15it/s] 59%|█████▉    | 326429/552076 [00:05<00:05, 40892.63it/s] 60%|██████    | 331533/552076 [00:05<00:05, 43357.99it/s] 61%|██████    | 337930/552076 [00:05<00:04, 47996.98it/s] 62%|██████▏   | 344323/552076 [00:05<00:04, 51875.38it/s] 63%|██████▎   | 350494/552076 [00:05<00:03, 53356.61it/s] 65%|██████▍   | 356671/552076 [00:06<00:03, 55620.53it/s] 66%|██████▌   | 363115/552076 [00:06<00:03, 58001.26it/s] 67%|██████▋   | 369556/552076 [00:06<00:03, 59785.75it/s] 68%|██████▊   | 375802/552076 [00:06<00:02, 59197.35it/s] 69%|██████▉   | 381977/552076 [00:06<00:02, 59934.69it/s] 70%|███████   | 388411/552076 [00:06<00:02, 61190.92it/s] 72%|███████▏  | 394880/552076 [00:06<00:02, 62199.36it/s] 73%|███████▎  | 401145/552076 [00:06<00:02, 59758.58it/s] 74%|███████▍  | 407598/552076 [00:06<00:02, 61113.63it/s] 75%|███████▍  | 413970/552076 [00:06<00:02, 60201.69it/s] 76%|███████▌  | 420214/552076 [00:07<00:02, 60855.70it/s] 77%|███████▋  | 426824/552076 [00:07<00:02, 60886.54it/s] 78%|███████▊  | 433205/552076 [00:07<00:01, 61734.10it/s] 80%|███████▉  | 439772/552076 [00:07<00:01, 62863.49it/s] 81%|████████  | 446075/552076 [00:07<00:01, 61439.51it/s] 82%|████████▏ | 452534/552076 [00:07<00:01, 62351.23it/s] 83%|████████▎ | 458786/552076 [00:07<00:01, 61370.48it/s] 84%|████████▍ | 465332/552076 [00:07<00:01, 61407.66it/s] 85%|████████▌ | 471853/552076 [00:07<00:01, 62500.69it/s] 87%|████████▋ | 478115/552076 [00:08<00:01, 61261.91it/s] 88%|████████▊ | 484488/552076 [00:08<00:01, 57324.78it/s] 89%|████████▉ | 490282/552076 [00:08<00:01, 52066.89it/s] 90%|████████▉ | 496553/552076 [00:08<00:01, 53929.17it/s] 91%|█████████ | 502379/552076 [00:08<00:00, 55158.24it/s] 92%|█████████▏| 508496/552076 [00:08<00:00, 56075.66it/s] 93%|█████████▎| 515381/552076 [00:08<00:00, 59379.82it/s] 94%|█████████▍| 521416/552076 [00:08<00:00, 58372.54it/s] 96%|█████████▌| 527809/552076 [00:08<00:00, 59934.30it/s] 97%|█████████▋| 534316/552076 [00:09<00:00, 61387.47it/s] 98%|█████████▊| 540506/552076 [00:09<00:00, 52274.63it/s] 99%|█████████▉| 546004/552076 [00:09<00:00, 50212.73it/s]100%|██████████| 552076/552076 [00:09<00:00, 59074.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9236/552076 [00:00<00:05, 92354.80it/s]  3%|▎         | 18240/552076 [00:00<00:05, 91646.65it/s]  5%|▌         | 28339/552076 [00:00<00:05, 92552.40it/s]  7%|▋         | 36332/552076 [00:00<00:05, 88364.16it/s]  8%|▊         | 46705/552076 [00:00<00:05, 92471.94it/s] 10%|█         | 55629/552076 [00:00<00:05, 91475.85it/s] 12%|█▏        | 67218/552076 [00:00<00:04, 97646.23it/s] 14%|█▍        | 76965/552076 [00:00<00:04, 97591.02it/s] 16%|█▌        | 87334/552076 [00:00<00:04, 96036.94it/s] 18%|█▊        | 96647/552076 [00:01<00:05, 79955.30it/s] 19%|█▉        | 104891/552076 [00:01<00:06, 67988.97it/s] 20%|██        | 112174/552076 [00:01<00:06, 64292.95it/s] 22%|██▏       | 118984/552076 [00:01<00:07, 61233.51it/s] 23%|██▎       | 125404/552076 [00:01<00:07, 57218.21it/s] 24%|██▍       | 131387/552076 [00:01<00:07, 57775.96it/s] 25%|██▍       | 137349/552076 [00:01<00:08, 51037.55it/s] 26%|██▌       | 142726/552076 [00:01<00:08, 50389.81it/s] 27%|██▋       | 147958/552076 [00:02<00:08, 48148.32it/s] 28%|██▊       | 152929/552076 [00:02<00:09, 41261.86it/s] 28%|██▊       | 157337/552076 [00:02<00:09, 40873.89it/s] 30%|██▉       | 163310/552076 [00:02<00:08, 45149.19it/s] 30%|███       | 168276/552076 [00:02<00:08, 44700.24it/s] 31%|███▏      | 172941/552076 [00:02<00:08, 45154.84it/s] 32%|███▏      | 177594/552076 [00:02<00:08, 42894.10it/s] 33%|███▎      | 182004/552076 [00:02<00:09, 40897.52it/s] 34%|███▍      | 187850/552076 [00:03<00:08, 44948.10it/s] 35%|███▍      | 192539/552076 [00:03<00:08, 44714.43it/s] 36%|███▌      | 197147/552076 [00:03<00:07, 44531.17it/s] 37%|███▋      | 201696/552076 [00:03<00:07, 43957.42it/s] 37%|███▋      | 206436/552076 [00:03<00:07, 44572.24it/s] 38%|███▊      | 212258/552076 [00:03<00:07, 47013.89it/s] 39%|███▉      | 217363/552076 [00:03<00:07, 47091.14it/s] 40%|████      | 222700/552076 [00:03<00:06, 48782.76it/s] 41%|████▏     | 228443/552076 [00:03<00:06, 49019.10it/s] 43%|████▎     | 236199/552076 [00:03<00:05, 55101.24it/s] 44%|████▍     | 243740/552076 [00:04<00:05, 59388.70it/s] 45%|████▌     | 249965/552076 [00:04<00:05, 55108.97it/s] 46%|████▋     | 255738/552076 [00:04<00:05, 53574.88it/s] 47%|████▋     | 261289/552076 [00:04<00:05, 50011.55it/s] 49%|████▉     | 269798/552076 [00:04<00:04, 57069.15it/s] 51%|█████     | 281787/552076 [00:04<00:03, 67712.29it/s] 53%|█████▎    | 290564/552076 [00:04<00:03, 72694.86it/s] 55%|█████▍    | 302110/552076 [00:04<00:03, 81780.97it/s] 57%|█████▋    | 314006/552076 [00:04<00:02, 90241.90it/s] 59%|█████▉    | 325795/552076 [00:05<00:02, 97070.71it/s] 61%|██████    | 337516/552076 [00:05<00:02, 102345.71it/s] 63%|██████▎   | 349185/552076 [00:05<00:01, 106263.17it/s] 65%|██████▌   | 361191/552076 [00:05<00:01, 110056.11it/s] 68%|██████▊   | 373443/552076 [00:05<00:01, 113518.63it/s] 70%|██████▉   | 385091/552076 [00:05<00:01, 106843.93it/s] 72%|███████▏  | 397251/552076 [00:05<00:01, 110877.29it/s] 74%|███████▍  | 408580/552076 [00:05<00:01, 108653.62it/s] 76%|███████▌  | 419624/552076 [00:05<00:01, 95832.32it/s]  78%|███████▊  | 429609/552076 [00:06<00:01, 78630.63it/s] 79%|███████▉  | 438261/552076 [00:06<00:01, 75791.60it/s] 82%|████████▏ | 450436/552076 [00:06<00:01, 85470.66it/s] 84%|████████▍ | 462419/552076 [00:06<00:00, 93513.28it/s] 86%|████████▌ | 473812/552076 [00:06<00:00, 98824.92it/s] 88%|████████▊ | 485602/552076 [00:06<00:00, 103865.85it/s] 90%|████████▉ | 496504/552076 [00:06<00:00, 85912.59it/s]  92%|█████████▏| 505972/552076 [00:07<00:00, 67752.25it/s] 93%|█████████▎| 515046/552076 [00:07<00:00, 73324.45it/s] 96%|█████████▌| 527286/552076 [00:07<00:00, 83349.39it/s] 98%|█████████▊| 539484/552076 [00:07<00:00, 92098.65it/s]100%|█████████▉| 551093/552076 [00:07<00:00, 98183.98it/s]100%|██████████| 552076/552076 [00:07<00:00, 74197.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11577/552076 [00:00<00:04, 115768.73it/s]  5%|▍         | 25384/552076 [00:00<00:04, 121661.64it/s]  6%|▌         | 34129/552076 [00:00<00:04, 105331.18it/s]  8%|▊         | 42704/552076 [00:00<00:05, 98575.88it/s]  10%|▉         | 53490/552076 [00:00<00:04, 101186.63it/s] 12%|█▏        | 66549/552076 [00:00<00:04, 108515.12it/s] 14%|█▍        | 76396/552076 [00:00<00:04, 99161.16it/s]  16%|█▌        | 88113/552076 [00:00<00:04, 103953.42it/s] 18%|█▊        | 100032/552076 [00:00<00:04, 108098.45it/s] 20%|██        | 111292/552076 [00:01<00:04, 109407.81it/s] 22%|██▏       | 122901/552076 [00:01<00:03, 111329.39it/s] 24%|██▍       | 135054/552076 [00:01<00:03, 114204.62it/s] 27%|██▋       | 146438/552076 [00:01<00:03, 113141.13it/s] 29%|██▊       | 157729/552076 [00:01<00:03, 102265.42it/s] 30%|███       | 168139/552076 [00:01<00:04, 83315.18it/s]  32%|███▏      | 177171/552076 [00:01<00:04, 78671.82it/s] 34%|███▎      | 185582/552076 [00:01<00:04, 76555.23it/s] 35%|███▌      | 194391/552076 [00:01<00:04, 79684.70it/s] 37%|███▋      | 204844/552076 [00:02<00:04, 85801.40it/s] 39%|███▊      | 213774/552076 [00:02<00:04, 78528.63it/s] 41%|████      | 225174/552076 [00:02<00:03, 86612.48it/s] 43%|████▎     | 236422/552076 [00:02<00:03, 93029.05it/s] 45%|████▍     | 247311/552076 [00:02<00:03, 97279.96it/s] 47%|████▋     | 258351/552076 [00:02<00:02, 100600.32it/s] 49%|████▊     | 269067/552076 [00:02<00:02, 102482.07it/s] 51%|█████     | 280191/552076 [00:02<00:02, 104960.19it/s] 53%|█████▎    | 291278/552076 [00:02<00:02, 106665.49it/s] 55%|█████▍    | 302572/552076 [00:03<00:02, 108471.64it/s] 57%|█████▋    | 313515/552076 [00:03<00:02, 107901.79it/s] 59%|█████▉    | 324761/552076 [00:03<00:02, 109228.04it/s] 61%|██████    | 335911/552076 [00:03<00:01, 109897.32it/s] 63%|██████▎   | 347253/552076 [00:03<00:01, 110929.10it/s] 65%|██████▌   | 360586/552076 [00:03<00:01, 116817.02it/s] 69%|██████▉   | 382963/552076 [00:03<00:01, 136370.09it/s] 72%|███████▏  | 397926/552076 [00:03<00:01, 139067.19it/s] 75%|███████▍  | 412774/552076 [00:03<00:01, 135978.00it/s] 77%|███████▋  | 427046/552076 [00:04<00:01, 116232.70it/s] 80%|███████▉  | 439828/552076 [00:04<00:00, 119481.29it/s] 82%|████████▏ | 453180/552076 [00:04<00:00, 123372.29it/s] 84%|████████▍ | 466409/552076 [00:04<00:00, 125918.71it/s] 87%|████████▋ | 479381/552076 [00:04<00:00, 124511.54it/s] 89%|████████▉ | 492102/552076 [00:04<00:00, 96106.54it/s]  92%|█████████▏| 507721/552076 [00:04<00:00, 108643.84it/s] 94%|█████████▍| 519957/552076 [00:04<00:00, 108139.75it/s] 96%|█████████▋| 531732/552076 [00:04<00:00, 99032.82it/s]  98%|█████████▊| 542458/552076 [00:05<00:00, 94678.67it/s]100%|██████████| 552076/552076 [00:05<00:00, 106800.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20064/552076 [00:00<00:02, 200632.06it/s]  8%|▊         | 42293/552076 [00:00<00:02, 206671.92it/s] 12%|█▏        | 65234/552076 [00:00<00:02, 213003.64it/s] 16%|█▌        | 88364/552076 [00:00<00:02, 218179.38it/s] 20%|█▉        | 110094/552076 [00:00<00:02, 217913.63it/s] 24%|██▍       | 131213/552076 [00:00<00:01, 215851.13it/s] 28%|██▊       | 153158/552076 [00:00<00:01, 216916.40it/s] 32%|███▏      | 176240/552076 [00:00<00:01, 220906.32it/s] 36%|███▌      | 199028/552076 [00:00<00:01, 222953.10it/s] 40%|███▉      | 220687/552076 [00:01<00:01, 221003.70it/s] 44%|████▍     | 242249/552076 [00:01<00:01, 213378.18it/s] 48%|████▊     | 266152/552076 [00:01<00:01, 220474.56it/s] 52%|█████▏    | 289438/552076 [00:01<00:01, 224048.74it/s] 56%|█████▋    | 311742/552076 [00:01<00:01, 222616.57it/s] 61%|██████    | 334740/552076 [00:01<00:00, 224773.78it/s] 65%|██████▍   | 358515/552076 [00:01<00:00, 228513.15it/s] 69%|██████▉   | 382300/552076 [00:01<00:00, 231234.13it/s] 73%|███████▎  | 405591/552076 [00:01<00:00, 231731.45it/s] 78%|███████▊  | 429014/552076 [00:01<00:00, 232473.82it/s] 82%|████████▏ | 452354/552076 [00:02<00:00, 232749.14it/s] 86%|████████▌ | 475797/552076 [00:02<00:00, 233248.44it/s] 90%|█████████ | 499297/552076 [00:02<00:00, 233767.23it/s] 95%|█████████▍| 522674/552076 [00:02<00:00, 232834.70it/s] 99%|█████████▉| 546615/552076 [00:02<00:00, 234766.98it/s]100%|██████████| 552076/552076 [00:02<00:00, 226667.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22481/552076 [00:00<00:02, 224802.71it/s]  8%|▊         | 44397/552076 [00:00<00:02, 223079.04it/s] 12%|█▏        | 67419/552076 [00:00<00:02, 225172.70it/s] 16%|█▋        | 89940/552076 [00:00<00:02, 225182.02it/s] 20%|██        | 112573/552076 [00:00<00:01, 225524.93it/s] 24%|██▍       | 134374/552076 [00:00<00:01, 223214.06it/s] 28%|██▊       | 154697/552076 [00:00<00:01, 216816.74it/s] 32%|███▏      | 174773/552076 [00:00<00:01, 211730.67it/s] 35%|███▌      | 194709/552076 [00:00<00:01, 204110.95it/s] 39%|███▉      | 214313/552076 [00:01<00:01, 199700.04it/s] 42%|████▏     | 233953/552076 [00:01<00:01, 198695.91it/s] 46%|████▌     | 253771/552076 [00:01<00:01, 198538.07it/s] 50%|████▉     | 273629/552076 [00:01<00:01, 198550.14it/s] 53%|█████▎    | 293299/552076 [00:01<00:01, 196534.95it/s] 57%|█████▋    | 312827/552076 [00:01<00:01, 196045.98it/s] 60%|██████    | 332351/552076 [00:01<00:01, 195802.84it/s] 64%|██████▎   | 351871/552076 [00:01<00:01, 194876.56it/s] 67%|██████▋   | 371577/552076 [00:01<00:00, 195523.64it/s] 71%|███████   | 391101/552076 [00:01<00:00, 194960.98it/s] 74%|███████▍  | 411185/552076 [00:02<00:00, 196685.25it/s] 78%|███████▊  | 430844/552076 [00:02<00:00, 195403.74it/s] 82%|████████▏ | 450380/552076 [00:02<00:00, 192488.23it/s] 85%|████████▌ | 469778/552076 [00:02<00:00, 192932.85it/s] 89%|████████▊ | 489076/552076 [00:02<00:00, 191078.54it/s] 92%|█████████▏| 508382/552076 [00:02<00:00, 191665.35it/s] 96%|█████████▌| 527555/552076 [00:02<00:00, 191264.63it/s] 99%|█████████▉| 547253/552076 [00:02<00:00, 192942.41it/s]100%|██████████| 552076/552076 [00:02<00:00, 200678.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14611/552076 [00:00<00:03, 146106.66it/s]  5%|▌         | 29208/552076 [00:00<00:03, 146064.73it/s]  8%|▊         | 43246/552076 [00:00<00:03, 144310.43it/s] 11%|█▏        | 62903/552076 [00:00<00:03, 156817.18it/s] 15%|█▌        | 83313/552076 [00:00<00:02, 168529.86it/s] 19%|█▉        | 103583/552076 [00:00<00:02, 177506.42it/s] 22%|██▏       | 123979/552076 [00:00<00:02, 184692.38it/s] 26%|██▌       | 143742/552076 [00:00<00:02, 188390.75it/s] 30%|██▉       | 163539/552076 [00:00<00:02, 191164.89it/s] 33%|███▎      | 183930/552076 [00:01<00:01, 194815.59it/s] 37%|███▋      | 203168/552076 [00:01<00:01, 190072.62it/s] 40%|████      | 222030/552076 [00:01<00:01, 189213.83it/s] 44%|████▎     | 240851/552076 [00:01<00:01, 180401.25it/s] 47%|████▋     | 260006/552076 [00:01<00:01, 183604.84it/s] 51%|█████     | 279338/552076 [00:01<00:01, 186413.67it/s] 54%|█████▍    | 299212/552076 [00:01<00:01, 189946.60it/s] 58%|█████▊    | 318243/552076 [00:01<00:01, 188912.59it/s] 61%|██████    | 337161/552076 [00:01<00:01, 187915.23it/s] 65%|██████▍   | 356552/552076 [00:01<00:01, 189672.58it/s] 68%|██████▊   | 376847/552076 [00:02<00:00, 193467.28it/s] 72%|███████▏  | 397379/552076 [00:02<00:00, 196875.45it/s] 76%|███████▌  | 417457/552076 [00:02<00:00, 198028.73it/s] 79%|███████▉  | 437287/552076 [00:02<00:00, 192963.49it/s] 83%|████████▎ | 456631/552076 [00:02<00:00, 192814.39it/s] 86%|████████▌ | 476163/552076 [00:02<00:00, 193556.74it/s] 90%|████████▉ | 496492/552076 [00:02<00:00, 196375.59it/s] 94%|█████████▎| 516371/552076 [00:02<00:00, 197093.09it/s] 97%|█████████▋| 537083/552076 [00:02<00:00, 199996.67it/s]100%|██████████| 552076/552076 [00:02<00:00, 189206.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19611/552076 [00:00<00:02, 196102.24it/s]  7%|▋         | 38751/552076 [00:00<00:02, 194666.55it/s] 11%|█         | 58661/552076 [00:00<00:02, 195973.70it/s] 14%|█▍        | 76449/552076 [00:00<00:02, 190169.72it/s] 18%|█▊        | 96772/552076 [00:00<00:02, 193907.48it/s] 21%|██        | 116757/552076 [00:00<00:02, 195649.15it/s] 25%|██▍       | 137660/552076 [00:00<00:02, 199478.29it/s] 29%|██▊       | 158693/552076 [00:00<00:01, 202614.16it/s] 33%|███▎      | 179490/552076 [00:00<00:01, 204191.49it/s] 36%|███▋      | 200538/552076 [00:01<00:01, 206036.70it/s] 40%|████      | 221707/552076 [00:01<00:01, 207699.48it/s] 44%|████▍     | 242112/552076 [00:01<00:01, 205405.40it/s] 48%|████▊     | 262403/552076 [00:01<00:01, 203004.08it/s] 51%|█████▏    | 283014/552076 [00:01<00:01, 203923.44it/s] 55%|█████▌    | 303737/552076 [00:01<00:01, 204902.60it/s] 59%|█████▉    | 324348/552076 [00:01<00:01, 205262.07it/s] 62%|██████▏   | 344818/552076 [00:01<00:01, 203574.93it/s] 66%|██████▌   | 365569/552076 [00:01<00:00, 204739.17it/s] 70%|██████▉   | 386411/552076 [00:01<00:00, 205829.32it/s] 74%|███████▎  | 406979/552076 [00:02<00:00, 205136.44it/s] 77%|███████▋  | 427544/552076 [00:02<00:00, 205287.22it/s] 81%|████████  | 448066/552076 [00:02<00:00, 202921.82it/s] 85%|████████▍ | 468360/552076 [00:02<00:00, 201438.07it/s] 88%|████████▊ | 488508/552076 [00:02<00:00, 198166.37it/s] 92%|█████████▏| 508339/552076 [00:02<00:00, 197881.72it/s] 96%|█████████▌| 528138/552076 [00:02<00:00, 197353.78it/s] 99%|█████████▉| 547881/552076 [00:02<00:00, 194104.56it/s]100%|██████████| 552076/552076 [00:02<00:00, 200877.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19214/552076 [00:00<00:02, 192137.89it/s]  7%|▋         | 38115/552076 [00:00<00:02, 191188.35it/s] 10%|█         | 57199/552076 [00:00<00:02, 191082.40it/s] 14%|█▍        | 76390/552076 [00:00<00:02, 191329.85it/s] 17%|█▋        | 94201/552076 [00:00<00:02, 187160.97it/s] 20%|██        | 113053/552076 [00:00<00:02, 187565.61it/s] 24%|██▍       | 131755/552076 [00:00<00:02, 187400.70it/s] 27%|██▋       | 149895/552076 [00:00<00:02, 185558.59it/s] 30%|███       | 168163/552076 [00:00<00:02, 184684.12it/s] 34%|███▍      | 187977/552076 [00:01<00:01, 188524.53it/s] 38%|███▊      | 208952/552076 [00:01<00:01, 194426.01it/s] 42%|████▏     | 229843/552076 [00:01<00:01, 198554.42it/s] 45%|████▌     | 250206/552076 [00:01<00:01, 200048.55it/s] 49%|████▉     | 270075/552076 [00:01<00:01, 197980.79it/s] 52%|█████▏    | 289783/552076 [00:01<00:01, 160900.33it/s] 56%|█████▌    | 306938/552076 [00:01<00:01, 147388.94it/s] 58%|█████▊    | 322644/552076 [00:01<00:01, 128463.21it/s] 61%|██████    | 336603/552076 [00:02<00:01, 119416.42it/s] 63%|██████▎   | 349452/552076 [00:02<00:01, 119596.48it/s] 66%|██████▌   | 362047/552076 [00:02<00:01, 121376.48it/s] 68%|██████▊   | 374636/552076 [00:02<00:01, 120308.81it/s] 70%|███████   | 386985/552076 [00:02<00:01, 120650.31it/s] 72%|███████▏  | 399444/552076 [00:02<00:01, 121804.48it/s] 75%|███████▍  | 411783/552076 [00:02<00:01, 120701.95it/s] 77%|███████▋  | 423967/552076 [00:02<00:01, 108312.04it/s] 79%|███████▉  | 435117/552076 [00:02<00:01, 106734.63it/s] 81%|████████  | 446512/552076 [00:02<00:00, 106113.09it/s] 83%|████████▎ | 457284/552076 [00:03<00:00, 96145.61it/s]  85%|████████▌ | 469466/552076 [00:03<00:00, 102634.50it/s] 87%|████████▋ | 481507/552076 [00:03<00:00, 107390.31it/s] 89%|████████▉ | 492532/552076 [00:03<00:00, 107069.28it/s] 91%|█████████▏| 504248/552076 [00:03<00:00, 109906.67it/s] 94%|█████████▎| 516614/552076 [00:03<00:00, 113699.56it/s] 96%|█████████▌| 528946/552076 [00:03<00:00, 116422.93it/s] 98%|█████████▊| 541415/552076 [00:03<00:00, 118785.48it/s]100%|██████████| 552076/552076 [00:03<00:00, 141000.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11838/552076 [00:00<00:04, 118378.70it/s]  4%|▍         | 23686/552076 [00:00<00:04, 117009.70it/s]  6%|▋         | 35571/552076 [00:00<00:04, 117555.31it/s]  9%|▊         | 47440/552076 [00:00<00:04, 117892.54it/s] 11%|█         | 59562/552076 [00:00<00:04, 118871.14it/s] 13%|█▎        | 71711/552076 [00:00<00:04, 119644.73it/s] 15%|█▌        | 84015/552076 [00:00<00:03, 120640.46it/s] 17%|█▋        | 96240/552076 [00:00<00:03, 121117.00it/s] 20%|█▉        | 107874/552076 [00:00<00:03, 119640.43it/s] 22%|██▏       | 120179/552076 [00:01<00:03, 120640.79it/s] 24%|██▍       | 132224/552076 [00:01<00:03, 120580.85it/s] 26%|██▌       | 144589/552076 [00:01<00:03, 121485.25it/s] 28%|██▊       | 156790/552076 [00:01<00:03, 121640.33it/s] 31%|███       | 169147/552076 [00:01<00:03, 122209.97it/s] 33%|███▎      | 181464/552076 [00:01<00:03, 122494.43it/s] 35%|███▌      | 193660/552076 [00:01<00:02, 120466.79it/s] 37%|███▋      | 205677/552076 [00:01<00:02, 120046.74it/s] 39%|███▉      | 217661/552076 [00:01<00:02, 119698.12it/s] 42%|████▏     | 229617/552076 [00:01<00:02, 119084.78it/s] 44%|████▍     | 241857/552076 [00:02<00:02, 120058.18it/s] 46%|████▌     | 253859/552076 [00:02<00:02, 111656.04it/s] 48%|████▊     | 265140/552076 [00:02<00:02, 110278.58it/s] 50%|█████     | 276253/552076 [00:02<00:02, 100092.26it/s] 52%|█████▏    | 288056/552076 [00:02<00:02, 104562.38it/s] 54%|█████▍    | 299385/552076 [00:02<00:02, 107033.84it/s] 56%|█████▌    | 310257/552076 [00:02<00:02, 100513.10it/s] 58%|█████▊    | 322581/552076 [00:02<00:02, 106398.34it/s] 61%|██████    | 334948/552076 [00:02<00:01, 111048.74it/s] 63%|██████▎   | 347073/552076 [00:03<00:01, 113923.25it/s] 65%|██████▌   | 359433/552076 [00:03<00:01, 116662.12it/s] 67%|██████▋   | 371858/552076 [00:03<00:01, 118837.44it/s] 70%|██████▉   | 384189/552076 [00:03<00:01, 120143.21it/s] 72%|███████▏  | 396669/552076 [00:03<00:01, 121502.02it/s] 74%|███████▍  | 409048/552076 [00:03<00:01, 122176.93it/s] 76%|███████▋  | 421307/552076 [00:03<00:01, 120383.53it/s] 79%|███████▊  | 433491/552076 [00:03<00:00, 120816.15it/s] 81%|████████  | 445799/552076 [00:03<00:00, 121485.26it/s] 83%|████████▎ | 458206/552076 [00:03<00:00, 122248.82it/s] 85%|████████▌ | 470445/552076 [00:04<00:00, 122226.80it/s] 87%|████████▋ | 482857/552076 [00:04<00:00, 122787.22it/s] 90%|████████▉ | 495264/552076 [00:04<00:00, 123166.41it/s] 92%|█████████▏| 507587/552076 [00:04<00:00, 122955.71it/s] 94%|█████████▍| 519887/552076 [00:04<00:00, 122767.47it/s] 96%|█████████▋| 532365/552076 [00:04<00:00, 123362.41it/s] 99%|█████████▊| 544862/552076 [00:04<00:00, 123839.13it/s]100%|██████████| 552076/552076 [00:04<00:00, 118030.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11731/552076 [00:00<00:04, 117303.68it/s]  4%|▍         | 23816/552076 [00:00<00:04, 118342.99it/s]  7%|▋         | 35972/552076 [00:00<00:04, 119288.51it/s]  9%|▊         | 47925/552076 [00:00<00:04, 119360.21it/s] 11%|█         | 59997/552076 [00:00<00:04, 119763.08it/s] 13%|█▎        | 72172/552076 [00:00<00:03, 120352.26it/s] 15%|█▌        | 84383/552076 [00:00<00:03, 120873.00it/s] 17%|█▋        | 96514/552076 [00:00<00:03, 121002.51it/s] 20%|█▉        | 108490/552076 [00:00<00:03, 120626.48it/s] 22%|██▏       | 120903/552076 [00:01<00:03, 121654.84it/s] 24%|██▍       | 132741/552076 [00:01<00:03, 120603.70it/s] 26%|██▌       | 144574/552076 [00:01<00:03, 119754.09it/s] 28%|██▊       | 156635/552076 [00:01<00:03, 120008.77it/s] 31%|███       | 168948/552076 [00:01<00:03, 120926.31it/s] 33%|███▎      | 180965/552076 [00:01<00:03, 120138.57it/s] 35%|███▌      | 193236/552076 [00:01<00:02, 120896.60it/s] 37%|███▋      | 205617/552076 [00:01<00:02, 121755.56it/s] 39%|███▉      | 217889/552076 [00:01<00:02, 122041.16it/s] 42%|████▏     | 230272/552076 [00:01<00:02, 122571.09it/s] 44%|████▍     | 242536/552076 [00:02<00:02, 122590.04it/s] 46%|████▌     | 254788/552076 [00:02<00:02, 121738.90it/s] 48%|████▊     | 266959/552076 [00:02<00:02, 121006.15it/s] 51%|█████     | 279377/552076 [00:02<00:02, 121938.43it/s] 53%|█████▎    | 291806/552076 [00:02<00:02, 122633.07it/s] 55%|█████▌    | 304129/552076 [00:02<00:02, 122810.79it/s] 57%|█████▋    | 316412/552076 [00:02<00:01, 122252.73it/s] 60%|█████▉    | 328639/552076 [00:02<00:01, 121392.89it/s] 62%|██████▏   | 340781/552076 [00:02<00:01, 120792.22it/s] 64%|██████▍   | 353149/552076 [00:02<00:01, 121643.73it/s] 66%|██████▌   | 365521/552076 [00:03<00:01, 122259.12it/s] 68%|██████▊   | 377750/552076 [00:03<00:01, 121600.91it/s] 71%|███████   | 389913/552076 [00:03<00:01, 103424.11it/s] 73%|███████▎  | 401890/552076 [00:03<00:01, 107837.21it/s] 75%|███████▍  | 413053/552076 [00:03<00:01, 103355.10it/s] 77%|███████▋  | 425214/552076 [00:03<00:01, 108226.94it/s] 79%|███████▉  | 437529/552076 [00:03<00:01, 112307.98it/s] 81%|████████▏ | 449310/552076 [00:03<00:00, 113903.81it/s] 83%|████████▎ | 460868/552076 [00:03<00:00, 108549.95it/s] 86%|████████▌ | 473046/552076 [00:04<00:00, 112205.67it/s] 88%|████████▊ | 485322/552076 [00:04<00:00, 115175.16it/s] 90%|█████████ | 497645/552076 [00:04<00:00, 117477.99it/s] 92%|█████████▏| 509995/552076 [00:04<00:00, 119219.90it/s] 95%|█████████▍| 522311/552076 [00:04<00:00, 120374.99it/s] 97%|█████████▋| 534746/552076 [00:04<00:00, 121540.07it/s] 99%|█████████▉| 547068/552076 [00:04<00:00, 122039.08it/s]100%|██████████| 552076/552076 [00:04<00:00, 118719.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11949/552076 [00:00<00:04, 119484.42it/s]  4%|▍         | 23875/552076 [00:00<00:04, 119416.10it/s]  7%|▋         | 35930/552076 [00:00<00:04, 119753.29it/s]  9%|▊         | 47937/552076 [00:00<00:04, 119847.90it/s] 11%|█         | 59676/552076 [00:00<00:04, 119097.24it/s] 13%|█▎        | 71679/552076 [00:00<00:04, 119372.69it/s] 15%|█▍        | 82212/552076 [00:00<00:04, 103351.14it/s] 17%|█▋        | 91946/552076 [00:00<00:05, 89777.18it/s]  19%|█▉        | 104095/552076 [00:00<00:04, 97404.29it/s] 21%|██        | 116348/552076 [00:01<00:04, 103788.82it/s] 23%|██▎       | 128594/552076 [00:01<00:03, 108763.18it/s] 26%|██▌       | 140972/552076 [00:01<00:03, 112869.90it/s] 28%|██▊       | 153260/552076 [00:01<00:03, 115695.48it/s] 30%|██▉       | 165617/552076 [00:01<00:03, 117948.42it/s] 32%|███▏      | 177941/552076 [00:01<00:03, 119485.77it/s] 34%|███▍      | 189973/552076 [00:01<00:03, 119478.03it/s] 37%|███▋      | 202358/552076 [00:01<00:02, 120755.38it/s] 39%|███▉      | 214478/552076 [00:01<00:02, 119933.15it/s] 41%|████      | 226774/552076 [00:01<00:02, 120823.19it/s] 43%|████▎     | 238998/552076 [00:02<00:02, 121244.03it/s] 46%|████▌     | 251267/552076 [00:02<00:02, 121674.01it/s] 48%|████▊     | 263449/552076 [00:02<00:02, 121715.63it/s] 50%|████▉     | 275661/552076 [00:02<00:02, 121836.34it/s] 52%|█████▏    | 287851/552076 [00:02<00:02, 121783.46it/s] 54%|█████▍    | 300227/552076 [00:02<00:02, 122367.03it/s] 57%|█████▋    | 312468/552076 [00:02<00:01, 122300.10it/s] 59%|█████▉    | 324791/552076 [00:02<00:01, 122575.54it/s] 61%|██████    | 337066/552076 [00:02<00:01, 122626.63it/s] 63%|██████▎   | 349370/552076 [00:02<00:01, 122748.63it/s] 66%|██████▌   | 361646/552076 [00:03<00:01, 120640.47it/s] 68%|██████▊   | 373881/552076 [00:03<00:01, 121146.78it/s] 70%|██████▉   | 386149/552076 [00:03<00:01, 121599.81it/s] 72%|███████▏  | 398344/552076 [00:03<00:01, 121702.69it/s] 74%|███████▍  | 410599/552076 [00:03<00:01, 121953.86it/s] 77%|███████▋  | 422798/552076 [00:03<00:01, 104588.40it/s] 79%|███████▊  | 433692/552076 [00:03<00:01, 98458.00it/s]  81%|████████  | 445910/552076 [00:03<00:01, 104545.36it/s] 83%|████████▎ | 456732/552076 [00:03<00:00, 104201.76it/s] 85%|████████▍ | 467410/552076 [00:04<00:00, 94992.56it/s]  87%|████████▋ | 478896/552076 [00:04<00:00, 100190.85it/s] 89%|████████▊ | 489228/552076 [00:04<00:00, 97062.73it/s]  91%|█████████ | 500796/552076 [00:04<00:00, 101986.68it/s] 93%|█████████▎| 511229/552076 [00:04<00:00, 94769.59it/s]  95%|█████████▍| 522837/552076 [00:04<00:00, 100291.11it/s] 97%|█████████▋| 533798/552076 [00:04<00:00, 102914.14it/s] 99%|█████████▊| 544298/552076 [00:04<00:00, 99707.11it/s] 100%|██████████| 552076/552076 [00:04<00:00, 111761.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11851/552076 [00:00<00:04, 118501.07it/s]  3%|▎         | 15407/552076 [00:00<00:09, 56334.80it/s]   5%|▍         | 27390/552076 [00:00<00:07, 66981.95it/s]  7%|▋         | 39546/552076 [00:00<00:06, 77407.47it/s]  9%|▉         | 51754/552076 [00:00<00:05, 86952.04it/s] 11%|█▏        | 63137/552076 [00:00<00:05, 93579.43it/s] 14%|█▎        | 75311/552076 [00:00<00:04, 100555.59it/s] 16%|█▌        | 87596/552076 [00:00<00:04, 106343.20it/s] 18%|█▊        | 99242/552076 [00:00<00:04, 109186.58it/s] 20%|██        | 110459/552076 [00:01<00:04, 109051.81it/s] 22%|██▏       | 122801/552076 [00:01<00:03, 112995.87it/s] 24%|██▍       | 134283/552076 [00:01<00:04, 96222.20it/s]  26%|██▌       | 144465/552076 [00:01<00:04, 95298.75it/s] 28%|██▊       | 155958/552076 [00:01<00:03, 99115.99it/s] 30%|███       | 168336/552076 [00:01<00:03, 105416.28it/s] 33%|███▎      | 180246/552076 [00:01<00:03, 109178.12it/s] 35%|███▍      | 192589/552076 [00:01<00:03, 113095.52it/s] 37%|███▋      | 204958/552076 [00:01<00:02, 116077.84it/s] 39%|███▉      | 217397/552076 [00:02<00:02, 118450.15it/s] 42%|████▏     | 229776/552076 [00:02<00:02, 119968.61it/s] 44%|████▍     | 241872/552076 [00:02<00:03, 100638.17it/s] 46%|████▌     | 254215/552076 [00:02<00:02, 106539.91it/s] 48%|████▊     | 266462/552076 [00:02<00:02, 110864.65it/s] 51%|█████     | 278900/552076 [00:02<00:02, 114599.51it/s] 53%|█████▎    | 290675/552076 [00:02<00:02, 115225.40it/s] 55%|█████▍    | 302918/552076 [00:02<00:02, 117295.61it/s] 57%|█████▋    | 315034/552076 [00:02<00:02, 118426.51it/s] 59%|█████▉    | 327300/552076 [00:02<00:01, 119663.42it/s] 62%|██████▏   | 339704/552076 [00:03<00:01, 120941.88it/s] 64%|██████▍   | 352130/552076 [00:03<00:01, 121917.05it/s] 66%|██████▌   | 364475/552076 [00:03<00:01, 122370.62it/s] 68%|██████▊   | 376745/552076 [00:03<00:01, 122069.97it/s] 70%|███████   | 388975/552076 [00:03<00:01, 120460.92it/s] 73%|███████▎  | 401090/552076 [00:03<00:01, 120664.62it/s] 75%|███████▍  | 413378/552076 [00:03<00:01, 121319.29it/s] 77%|███████▋  | 425522/552076 [00:03<00:01, 120978.42it/s] 79%|███████▉  | 437848/552076 [00:03<00:00, 121653.06it/s] 82%|████████▏ | 450265/552076 [00:03<00:00, 122394.72it/s] 84%|████████▍ | 462599/552076 [00:04<00:00, 122676.47it/s] 86%|████████▌ | 474874/552076 [00:04<00:00, 122696.19it/s] 88%|████████▊ | 487255/552076 [00:04<00:00, 123027.29it/s] 90%|█████████ | 499582/552076 [00:04<00:00, 123098.98it/s] 93%|█████████▎| 511898/552076 [00:04<00:00, 123115.12it/s] 95%|█████████▍| 524211/552076 [00:04<00:00, 123086.43it/s] 97%|█████████▋| 536521/552076 [00:04<00:00, 119167.38it/s] 99%|█████████▉| 548484/552076 [00:04<00:00, 119303.78it/s]100%|██████████| 552076/552076 [00:04<00:00, 114230.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12279/552076 [00:00<00:04, 122788.65it/s]  4%|▍         | 24277/552076 [00:00<00:04, 121930.96it/s]  7%|▋         | 36140/552076 [00:00<00:04, 120921.49it/s]  9%|▊         | 48081/552076 [00:00<00:04, 120462.86it/s] 10%|█         | 57182/552076 [00:00<00:04, 108999.63it/s] 12%|█▏        | 66229/552076 [00:00<00:05, 85924.02it/s]  13%|█▎        | 74287/552076 [00:00<00:06, 73699.49it/s] 15%|█▍        | 81588/552076 [00:00<00:07, 62867.42it/s] 16%|█▌        | 88103/552076 [00:01<00:07, 61814.76it/s] 17%|█▋        | 94448/552076 [00:01<00:07, 59140.85it/s] 18%|█▊        | 100502/552076 [00:01<00:07, 58092.32it/s] 19%|█▉        | 106413/552076 [00:01<00:08, 54912.07it/s] 20%|██        | 112171/552076 [00:01<00:08, 54889.33it/s] 21%|██▏       | 117735/552076 [00:01<00:08, 54228.38it/s] 22%|██▏       | 123213/552076 [00:01<00:08, 52481.32it/s] 23%|██▎       | 128512/552076 [00:01<00:08, 50354.28it/s] 25%|██▌       | 139450/552076 [00:01<00:06, 60080.13it/s] 27%|██▋       | 146450/552076 [00:02<00:06, 62709.27it/s] 28%|██▊       | 153336/552076 [00:02<00:06, 61206.86it/s] 29%|██▉       | 159895/552076 [00:02<00:06, 59932.72it/s] 30%|███       | 166201/552076 [00:02<00:06, 59410.21it/s] 31%|███       | 172362/552076 [00:02<00:06, 59675.60it/s] 32%|███▏      | 178484/552076 [00:02<00:06, 59077.25it/s] 33%|███▎      | 184540/552076 [00:02<00:06, 59513.83it/s] 35%|███▍      | 190569/552076 [00:02<00:06, 58612.32it/s] 36%|███▌      | 196488/552076 [00:02<00:06, 58390.45it/s] 37%|███▋      | 202368/552076 [00:03<00:07, 49669.41it/s] 38%|███▊      | 211119/552076 [00:03<00:06, 56658.36it/s] 39%|███▉      | 217513/552076 [00:03<00:05, 57057.23it/s] 41%|████      | 223656/552076 [00:03<00:05, 57398.51it/s] 42%|████▏     | 229992/552076 [00:03<00:05, 59064.42it/s] 43%|████▎     | 236090/552076 [00:03<00:05, 59046.27it/s] 44%|████▍     | 242129/552076 [00:03<00:05, 58075.04it/s] 45%|████▍     | 248329/552076 [00:03<00:05, 59198.59it/s] 46%|████▌     | 254323/552076 [00:03<00:05, 57127.33it/s] 47%|████▋     | 260335/552076 [00:04<00:05, 57992.31it/s] 48%|████▊     | 266185/552076 [00:04<00:04, 57251.28it/s] 49%|████▉     | 271948/552076 [00:04<00:05, 53621.01it/s] 50%|█████     | 277549/552076 [00:04<00:05, 53006.64it/s] 52%|█████▏    | 288034/552076 [00:04<00:04, 62238.27it/s] 54%|█████▎    | 295591/552076 [00:04<00:03, 65715.97it/s] 56%|█████▌    | 306432/552076 [00:04<00:03, 73569.64it/s] 57%|█████▋    | 315583/552076 [00:04<00:03, 78165.86it/s] 59%|█████▉    | 327100/552076 [00:04<00:02, 86503.02it/s] 61%|██████    | 336409/552076 [00:04<00:02, 85563.03it/s] 63%|██████▎   | 345429/552076 [00:05<00:02, 79415.83it/s] 65%|██████▍   | 356666/552076 [00:05<00:02, 87075.85it/s] 67%|██████▋   | 368473/552076 [00:05<00:01, 94519.41it/s] 69%|██████▉   | 380152/552076 [00:05<00:01, 100253.51it/s] 71%|███████   | 392316/552076 [00:05<00:01, 105835.69it/s] 73%|███████▎  | 403791/552076 [00:05<00:01, 108358.70it/s] 75%|███████▌  | 415736/552076 [00:05<00:01, 111461.12it/s] 78%|███████▊  | 427977/552076 [00:05<00:01, 114531.73it/s] 80%|███████▉  | 440241/552076 [00:05<00:00, 116846.52it/s] 82%|████████▏ | 452557/552076 [00:06<00:00, 118671.08it/s] 84%|████████▍ | 464944/552076 [00:06<00:00, 120182.22it/s] 86%|████████▋ | 477287/552076 [00:06<00:00, 121136.03it/s] 89%|████████▊ | 489653/552076 [00:06<00:00, 121881.77it/s] 91%|█████████ | 501979/552076 [00:06<00:00, 122291.24it/s] 93%|█████████▎| 514242/552076 [00:06<00:00, 122390.87it/s] 95%|█████████▌| 526609/552076 [00:06<00:00, 122768.90it/s] 98%|█████████▊| 538901/552076 [00:06<00:00, 122454.90it/s]100%|█████████▉| 551157/552076 [00:06<00:00, 122279.64it/s]100%|██████████| 552076/552076 [00:06<00:00, 80988.94it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5930/552076 [00:00<00:10, 50968.92it/s]  2%|▏         | 13032/552076 [00:00<00:09, 55684.78it/s]  4%|▎         | 19391/552076 [00:00<00:09, 57840.82it/s]  5%|▍         | 25333/552076 [00:00<00:09, 58304.64it/s]  6%|▌         | 32284/552076 [00:00<00:08, 61267.07it/s]  7%|▋         | 38240/552076 [00:00<00:08, 60743.50it/s]  8%|▊         | 45390/552076 [00:00<00:07, 63614.33it/s] 10%|▉         | 55080/552076 [00:00<00:07, 70922.08it/s] 11%|█▏        | 63125/552076 [00:00<00:06, 73533.87it/s] 14%|█▎        | 75319/552076 [00:01<00:05, 83473.77it/s] 15%|█▌        | 84158/552076 [00:01<00:05, 80049.02it/s] 17%|█▋        | 92537/552076 [00:01<00:06, 75557.75it/s] 19%|█▊        | 103226/552076 [00:01<00:05, 82015.46it/s] 20%|██        | 111808/552076 [00:01<00:05, 78519.13it/s] 22%|██▏       | 122891/552076 [00:01<00:04, 86044.05it/s] 24%|██▍       | 131921/552076 [00:01<00:04, 86038.15it/s] 26%|██▌       | 140823/552076 [00:01<00:04, 84967.41it/s] 27%|██▋       | 149943/552076 [00:01<00:04, 86743.82it/s] 29%|██▉       | 160459/552076 [00:02<00:04, 91553.52it/s] 31%|███       | 170111/552076 [00:02<00:04, 92988.28it/s] 33%|███▎      | 179543/552076 [00:02<00:04, 86213.02it/s] 35%|███▍      | 190998/552076 [00:02<00:03, 93122.80it/s] 36%|███▋      | 200604/552076 [00:02<00:03, 91090.52it/s] 38%|███▊      | 209928/552076 [00:02<00:04, 76459.75it/s] 40%|███▉      | 220644/552076 [00:02<00:03, 83648.41it/s] 42%|████▏     | 229596/552076 [00:02<00:04, 80144.66it/s] 44%|████▎     | 240812/552076 [00:02<00:03, 87650.02it/s] 45%|████▌     | 250097/552076 [00:03<00:03, 82666.50it/s] 47%|████▋     | 258786/552076 [00:03<00:03, 73863.33it/s] 48%|████▊     | 266643/552076 [00:03<00:04, 68047.71it/s] 50%|█████     | 278075/552076 [00:03<00:03, 77451.89it/s] 53%|█████▎    | 289880/552076 [00:03<00:03, 86361.94it/s] 55%|█████▍    | 301774/552076 [00:03<00:02, 94093.10it/s] 57%|█████▋    | 311980/552076 [00:03<00:02, 83174.84it/s] 58%|█████▊    | 321088/552076 [00:03<00:03, 75897.16it/s] 60%|█████▉    | 329355/552076 [00:04<00:03, 72587.72it/s] 61%|██████    | 337118/552076 [00:04<00:03, 68038.59it/s] 62%|██████▏   | 344333/552076 [00:04<00:03, 67612.89it/s] 64%|██████▍   | 354947/552076 [00:04<00:02, 75875.29it/s] 66%|██████▌   | 363066/552076 [00:04<00:02, 75776.24it/s] 68%|██████▊   | 374703/552076 [00:04<00:02, 84632.19it/s] 70%|██████▉   | 384797/552076 [00:04<00:01, 88942.81it/s] 72%|███████▏  | 394762/552076 [00:04<00:01, 91903.71it/s] 73%|███████▎  | 404309/552076 [00:04<00:01, 83575.12it/s] 75%|███████▌  | 414630/552076 [00:05<00:01, 88563.47it/s] 77%|███████▋  | 423844/552076 [00:05<00:01, 87099.79it/s] 79%|███████▉  | 435340/552076 [00:05<00:01, 93927.45it/s] 81%|████████  | 445852/552076 [00:05<00:01, 97025.06it/s] 83%|████████▎ | 455813/552076 [00:05<00:01, 95786.00it/s] 84%|████████▍ | 465576/552076 [00:05<00:01, 80899.72it/s] 86%|████████▌ | 474192/552076 [00:05<00:01, 74035.89it/s] 87%|████████▋ | 482077/552076 [00:05<00:00, 71032.26it/s] 89%|████████▊ | 489543/552076 [00:06<00:00, 67199.60it/s] 90%|████████▉ | 496560/552076 [00:06<00:00, 63414.23it/s] 91%|█████████▏| 504734/552076 [00:06<00:00, 67986.35it/s] 93%|█████████▎| 514249/552076 [00:06<00:00, 74352.77it/s] 95%|█████████▍| 522051/552076 [00:06<00:00, 71106.83it/s] 96%|█████████▌| 529448/552076 [00:06<00:00, 58232.02it/s] 97%|█████████▋| 535854/552076 [00:06<00:00, 58770.22it/s] 98%|█████████▊| 543242/552076 [00:06<00:00, 62611.20it/s]100%|█████████▉| 549859/552076 [00:06<00:00, 59700.91it/s]100%|██████████| 552076/552076 [00:07<00:00, 78652.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3784/552076 [00:00<00:14, 37839.13it/s]  2%|▏         | 10234/552076 [00:00<00:12, 43194.74it/s]  3%|▎         | 15878/552076 [00:00<00:11, 46465.06it/s]  4%|▍         | 22054/552076 [00:00<00:10, 49364.30it/s]  5%|▍         | 26310/552076 [00:00<00:11, 46876.48it/s]  6%|▌         | 32561/552076 [00:00<00:10, 50678.05it/s]  7%|▋         | 38175/552076 [00:00<00:09, 52201.04it/s]  8%|▊         | 43375/552076 [00:00<00:09, 51943.25it/s]  9%|▉         | 48467/552076 [00:00<00:09, 51539.56it/s] 10%|▉         | 54252/552076 [00:01<00:09, 53281.15it/s] 11%|█         | 59555/552076 [00:01<00:09, 52813.80it/s] 12%|█▏        | 64813/552076 [00:01<00:09, 52436.38it/s] 13%|█▎        | 70041/552076 [00:01<00:09, 49973.18it/s] 14%|█▎        | 75052/552076 [00:01<00:10, 46447.89it/s] 15%|█▍        | 81399/552076 [00:01<00:09, 50510.44it/s] 16%|█▌        | 87207/552076 [00:01<00:08, 52563.30it/s] 17%|█▋        | 92587/552076 [00:01<00:09, 47057.84it/s] 18%|█▊        | 99110/552076 [00:01<00:08, 51349.21it/s] 19%|█▉        | 105440/552076 [00:01<00:08, 54431.16it/s] 20%|██        | 111110/552076 [00:02<00:08, 50841.89it/s] 21%|██▏       | 117488/552076 [00:02<00:08, 54134.75it/s] 22%|██▏       | 123105/552076 [00:02<00:07, 54220.80it/s] 23%|██▎       | 129220/552076 [00:02<00:07, 56127.23it/s] 24%|██▍       | 134950/552076 [00:02<00:07, 55919.99it/s] 25%|██▌       | 140624/552076 [00:02<00:07, 52298.82it/s] 27%|██▋       | 146432/552076 [00:02<00:07, 53907.84it/s] 28%|██▊       | 152112/552076 [00:02<00:07, 54742.70it/s] 29%|██▊       | 157650/552076 [00:02<00:07, 51172.52it/s] 30%|██▉       | 164294/552076 [00:03<00:07, 54959.64it/s] 31%|███       | 169933/552076 [00:03<00:06, 54636.52it/s] 32%|███▏      | 175751/552076 [00:03<00:06, 55651.47it/s] 33%|███▎      | 181392/552076 [00:03<00:07, 51550.15it/s] 34%|███▍      | 187811/552076 [00:03<00:06, 54786.56it/s] 35%|███▌      | 193532/552076 [00:03<00:06, 55491.73it/s] 36%|███▌      | 199308/552076 [00:03<00:06, 56152.63it/s] 37%|███▋      | 204993/552076 [00:03<00:07, 46693.37it/s] 38%|███▊      | 209978/552076 [00:04<00:07, 43175.88it/s] 39%|███▉      | 216234/552076 [00:04<00:07, 47599.96it/s] 40%|████      | 221835/552076 [00:04<00:06, 49844.24it/s] 41%|████▏     | 227752/552076 [00:04<00:06, 52316.71it/s] 42%|████▏     | 233198/552076 [00:04<00:06, 46110.28it/s] 43%|████▎     | 238094/552076 [00:04<00:07, 43579.68it/s] 44%|████▍     | 244598/552076 [00:04<00:06, 48366.55it/s] 45%|████▌     | 249759/552076 [00:04<00:06, 48764.56it/s] 46%|████▌     | 254864/552076 [00:04<00:06, 47523.18it/s] 47%|████▋     | 259783/552076 [00:05<00:06, 42400.33it/s] 48%|████▊     | 264243/552076 [00:05<00:07, 36618.53it/s] 49%|████▊     | 268199/552076 [00:05<00:07, 35580.32it/s] 49%|████▉     | 271969/552076 [00:05<00:07, 35769.08it/s] 50%|████▉     | 275695/552076 [00:05<00:07, 34650.47it/s] 51%|█████     | 279272/552076 [00:05<00:07, 34911.32it/s] 51%|█████     | 282842/552076 [00:05<00:07, 33872.39it/s] 52%|█████▏    | 286291/552076 [00:05<00:07, 33629.17it/s] 52%|█████▏    | 289698/552076 [00:05<00:08, 32751.07it/s] 53%|█████▎    | 293197/552076 [00:06<00:07, 33390.65it/s] 54%|█████▎    | 296731/552076 [00:06<00:07, 33951.80it/s] 54%|█████▍    | 300391/552076 [00:06<00:07, 34332.74it/s] 55%|█████▌    | 304189/552076 [00:06<00:07, 35119.23it/s] 56%|█████▌    | 307717/552076 [00:06<00:07, 34746.40it/s] 56%|█████▋    | 311204/552076 [00:06<00:07, 31401.99it/s] 57%|█████▋    | 314697/552076 [00:06<00:07, 31653.61it/s] 58%|█████▊    | 318100/552076 [00:06<00:07, 32313.13it/s] 58%|█████▊    | 321370/552076 [00:06<00:07, 32048.92it/s] 59%|█████▉    | 324899/552076 [00:07<00:07, 32198.97it/s] 59%|█████▉    | 328368/552076 [00:07<00:06, 32330.37it/s] 60%|██████    | 331890/552076 [00:07<00:06, 33145.69it/s] 61%|██████    | 335220/552076 [00:07<00:06, 32816.62it/s] 61%|██████▏   | 338513/552076 [00:07<00:06, 32488.03it/s] 62%|██████▏   | 341828/552076 [00:07<00:06, 32643.11it/s] 63%|██████▎   | 345099/552076 [00:07<00:06, 32046.70it/s] 63%|██████▎   | 348329/552076 [00:07<00:06, 32120.89it/s] 64%|██████▎   | 351656/552076 [00:07<00:06, 32395.07it/s] 64%|██████▍   | 354978/552076 [00:07<00:06, 32444.74it/s] 65%|██████▍   | 358487/552076 [00:08<00:05, 32891.58it/s] 66%|██████▌   | 361990/552076 [00:08<00:05, 33504.27it/s] 66%|██████▌   | 365346/552076 [00:08<00:07, 24675.14it/s] 67%|██████▋   | 370928/552076 [00:08<00:06, 29392.39it/s] 68%|██████▊   | 376450/552076 [00:08<00:05, 34189.49it/s] 69%|██████▉   | 382850/552076 [00:08<00:04, 39742.55it/s] 70%|███████   | 388885/552076 [00:08<00:03, 44277.96it/s] 71%|███████▏  | 394072/552076 [00:08<00:03, 45458.74it/s] 72%|███████▏  | 399157/552076 [00:09<00:03, 44539.41it/s] 73%|███████▎  | 404408/552076 [00:09<00:03, 46663.16it/s] 74%|███████▍  | 409424/552076 [00:09<00:03, 47228.87it/s] 75%|███████▌  | 414517/552076 [00:09<00:02, 48279.72it/s] 76%|███████▌  | 419496/552076 [00:09<00:02, 47374.96it/s] 77%|███████▋  | 424343/552076 [00:09<00:02, 46574.22it/s] 78%|███████▊  | 429080/552076 [00:09<00:02, 46537.20it/s] 79%|███████▊  | 433790/552076 [00:09<00:02, 44386.58it/s] 79%|███████▉  | 438289/552076 [00:09<00:02, 44179.37it/s] 80%|████████  | 442750/552076 [00:09<00:02, 44054.44it/s] 81%|████████  | 447186/552076 [00:10<00:02, 42286.69it/s] 82%|████████▏ | 451451/552076 [00:10<00:02, 40957.82it/s] 84%|████████▎ | 461626/552076 [00:10<00:01, 49901.57it/s] 85%|████████▍ | 467658/552076 [00:10<00:01, 51469.25it/s] 86%|████████▋ | 476911/552076 [00:10<00:01, 59372.89it/s] 88%|████████▊ | 486927/552076 [00:10<00:00, 67634.53it/s] 90%|█████████ | 497280/552076 [00:10<00:00, 75461.90it/s] 92%|█████████▏| 505844/552076 [00:10<00:00, 68823.95it/s] 94%|█████████▍| 517975/552076 [00:10<00:00, 79089.50it/s] 96%|█████████▌| 530345/552076 [00:11<00:00, 88683.63it/s] 98%|█████████▊| 542950/552076 [00:11<00:00, 97338.78it/s]100%|██████████| 552076/552076 [00:11<00:00, 49123.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11976/552076 [00:00<00:04, 119758.12it/s]  4%|▍         | 24066/552076 [00:00<00:04, 120096.82it/s]  7%|▋         | 36209/552076 [00:00<00:04, 120491.84it/s]  9%|▉         | 48410/552076 [00:00<00:04, 120941.37it/s] 11%|█         | 60727/552076 [00:00<00:04, 121598.82it/s] 13%|█▎        | 72942/552076 [00:00<00:03, 121761.95it/s] 15%|█▌        | 83711/552076 [00:00<00:04, 111434.48it/s] 17%|█▋        | 95331/552076 [00:00<00:04, 112820.89it/s] 20%|█▉        | 107660/552076 [00:00<00:03, 115769.70it/s] 22%|██▏       | 119989/552076 [00:01<00:03, 117926.89it/s] 24%|██▍       | 132360/552076 [00:01<00:03, 119603.78it/s] 26%|██▌       | 144149/552076 [00:01<00:04, 92595.75it/s]  28%|██▊       | 155817/552076 [00:01<00:04, 98708.10it/s] 30%|███       | 168057/552076 [00:01<00:03, 104791.83it/s] 33%|███▎      | 180293/552076 [00:01<00:03, 109506.80it/s] 35%|███▍      | 192159/552076 [00:01<00:03, 112099.56it/s] 37%|███▋      | 203706/552076 [00:01<00:03, 110211.62it/s] 39%|███▉      | 216377/552076 [00:01<00:02, 114690.29it/s] 41%|████▏     | 228680/552076 [00:02<00:02, 117070.90it/s] 44%|████▎     | 240936/552076 [00:02<00:02, 118665.17it/s] 46%|████▌     | 253270/552076 [00:02<00:02, 120029.85it/s] 48%|████▊     | 265651/552076 [00:02<00:02, 121139.21it/s] 50%|█████     | 277992/552076 [00:02<00:02, 121810.71it/s] 53%|█████▎    | 290257/552076 [00:02<00:02, 122059.76it/s] 55%|█████▍    | 302609/552076 [00:02<00:02, 122492.32it/s] 57%|█████▋    | 315133/552076 [00:02<00:01, 123301.48it/s] 59%|█████▉    | 327887/552076 [00:02<00:01, 124542.24it/s] 62%|██████▏   | 340373/552076 [00:02<00:01, 124636.10it/s] 64%|██████▍   | 352848/552076 [00:03<00:01, 124462.46it/s] 66%|██████▌   | 365302/552076 [00:03<00:01, 124387.21it/s] 68%|██████▊   | 377746/552076 [00:03<00:01, 124041.12it/s] 71%|███████   | 390186/552076 [00:03<00:01, 124146.92it/s] 73%|███████▎  | 402604/552076 [00:03<00:01, 123793.03it/s] 75%|███████▌  | 415054/552076 [00:03<00:01, 124001.84it/s] 77%|███████▋  | 427473/552076 [00:03<00:01, 124057.11it/s] 80%|███████▉  | 439880/552076 [00:03<00:00, 121809.35it/s] 82%|████████▏ | 452254/552076 [00:03<00:00, 122381.27it/s] 84%|████████▍ | 464583/552076 [00:03<00:00, 122649.90it/s] 86%|████████▋ | 476854/552076 [00:04<00:00, 122397.10it/s] 89%|████████▊ | 489109/552076 [00:04<00:00, 122441.65it/s] 91%|█████████ | 501445/552076 [00:04<00:00, 122715.05it/s] 93%|█████████▎| 513781/552076 [00:04<00:00, 122905.59it/s] 95%|█████████▌| 526074/552076 [00:04<00:00, 122895.89it/s] 98%|█████████▊| 538365/552076 [00:04<00:00, 122802.76it/s]100%|█████████▉| 550717/552076 [00:04<00:00, 123015.25it/s]100%|██████████| 552076/552076 [00:04<00:00, 118967.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11841/552076 [00:00<00:04, 118402.77it/s]  4%|▎         | 20422/552076 [00:00<00:05, 106288.47it/s]  5%|▌         | 28762/552076 [00:00<00:05, 98202.68it/s]   7%|▋         | 39249/552076 [00:00<00:05, 97588.60it/s]  8%|▊         | 46366/552076 [00:00<00:06, 75205.54it/s] 10%|▉         | 52818/552076 [00:00<00:07, 66023.86it/s] 11%|█         | 58876/552076 [00:00<00:08, 59699.67it/s] 12%|█▏        | 64581/552076 [00:00<00:09, 52367.46it/s] 13%|█▎        | 74233/552076 [00:01<00:08, 58830.88it/s] 16%|█▌        | 85599/552076 [00:01<00:06, 68784.27it/s] 18%|█▊        | 97756/552076 [00:01<00:05, 79085.16it/s] 20%|█▉        | 108871/552076 [00:01<00:05, 86576.46it/s] 22%|██▏       | 121140/552076 [00:01<00:04, 94961.68it/s] 24%|██▍       | 131800/552076 [00:01<00:04, 98175.97it/s] 26%|██▌       | 143480/552076 [00:01<00:03, 102856.20it/s] 28%|██▊       | 154308/552076 [00:01<00:03, 102777.83it/s] 30%|██▉       | 165487/552076 [00:01<00:03, 105322.53it/s] 32%|███▏      | 176693/552076 [00:01<00:03, 107254.09it/s] 34%|███▍      | 187624/552076 [00:02<00:03, 105066.80it/s] 36%|███▌      | 200069/552076 [00:02<00:03, 110215.83it/s] 39%|███▊      | 213778/552076 [00:02<00:02, 117101.36it/s] 41%|████      | 225998/552076 [00:02<00:02, 118585.33it/s] 43%|████▎     | 238266/552076 [00:02<00:02, 119783.52it/s] 45%|████▌     | 250682/552076 [00:02<00:02, 121060.97it/s] 48%|████▊     | 263026/552076 [00:02<00:02, 121764.00it/s] 50%|████▉     | 275267/552076 [00:02<00:02, 121624.91it/s] 52%|█████▏    | 287561/552076 [00:02<00:02, 122016.33it/s] 54%|█████▍    | 300442/552076 [00:02<00:02, 123976.73it/s] 57%|█████▋    | 313607/552076 [00:03<00:01, 126181.25it/s] 59%|█████▉    | 328416/552076 [00:03<00:01, 132041.13it/s] 62%|██████▏   | 341713/552076 [00:03<00:01, 131333.69it/s] 64%|██████▍   | 354912/552076 [00:03<00:01, 128815.43it/s] 67%|██████▋   | 367851/552076 [00:03<00:01, 127284.68it/s] 69%|██████▉   | 380624/552076 [00:03<00:01, 126132.66it/s] 71%|███████   | 393271/552076 [00:03<00:01, 125460.28it/s] 74%|███████▎  | 405841/552076 [00:03<00:01, 124995.00it/s] 76%|███████▌  | 418358/552076 [00:03<00:01, 124528.01it/s] 78%|███████▊  | 430824/552076 [00:04<00:00, 122381.92it/s] 80%|████████  | 443080/552076 [00:04<00:00, 122367.22it/s] 83%|████████▎ | 456220/552076 [00:04<00:00, 124943.86it/s] 85%|████████▍ | 468737/552076 [00:04<00:00, 117321.37it/s] 87%|████████▋ | 481105/552076 [00:04<00:00, 119156.56it/s] 89%|████████▉ | 493361/552076 [00:04<00:00, 120156.43it/s] 92%|█████████▏| 505669/552076 [00:04<00:00, 121018.51it/s] 94%|█████████▍| 518775/552076 [00:04<00:00, 123864.37it/s] 98%|█████████▊| 540863/552076 [00:04<00:00, 142662.21it/s]100%|██████████| 552076/552076 [00:04<00:00, 113269.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20213/552076 [00:00<00:02, 202122.00it/s]  8%|▊         | 42213/552076 [00:00<00:02, 207171.76it/s] 12%|█▏        | 65682/552076 [00:00<00:02, 214723.17it/s] 15%|█▍        | 81309/552076 [00:00<00:02, 193054.04it/s] 18%|█▊        | 98952/552076 [00:00<00:02, 187746.27it/s] 22%|██▏       | 121803/552076 [00:00<00:02, 198361.03it/s] 26%|██▌       | 144563/552076 [00:00<00:01, 206311.28it/s] 30%|███       | 168233/552076 [00:00<00:01, 214575.13it/s] 34%|███▍      | 188873/552076 [00:00<00:01, 190573.83it/s] 38%|███▊      | 210736/552076 [00:01<00:01, 198203.74it/s] 42%|████▏     | 233126/552076 [00:01<00:01, 205271.15it/s] 46%|████▋     | 256359/552076 [00:01<00:01, 212702.25it/s] 51%|█████     | 278943/552076 [00:01<00:01, 216478.81it/s] 55%|█████▍    | 302274/552076 [00:01<00:01, 221266.55it/s] 59%|█████▉    | 325295/552076 [00:01<00:01, 223875.36it/s] 63%|██████▎   | 348586/552076 [00:01<00:00, 226510.88it/s] 67%|██████▋   | 371299/552076 [00:01<00:00, 226508.43it/s] 72%|███████▏  | 394975/552076 [00:01<00:00, 229488.72it/s] 76%|███████▌  | 418468/552076 [00:01<00:00, 231092.73it/s] 80%|████████  | 442285/552076 [00:02<00:00, 233168.48it/s] 84%|████████▍ | 465628/552076 [00:02<00:00, 229761.92it/s] 89%|████████▊ | 489434/552076 [00:02<00:00, 232187.76it/s] 93%|█████████▎| 513536/552076 [00:02<00:00, 234767.63it/s] 97%|█████████▋| 537302/552076 [00:02<00:00, 235625.14it/s]100%|██████████| 552076/552076 [00:02<00:00, 220204.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21825/552076 [00:00<00:02, 218243.96it/s]  8%|▊         | 44669/552076 [00:00<00:02, 221204.29it/s] 12%|█▏        | 67957/552076 [00:00<00:02, 224580.40it/s] 16%|█▋        | 90894/552076 [00:00<00:02, 225995.25it/s] 21%|██        | 113846/552076 [00:00<00:01, 227040.36it/s] 25%|██▍       | 136493/552076 [00:00<00:01, 226867.06it/s] 29%|██▉       | 159821/552076 [00:00<00:01, 228751.75it/s] 33%|███▎      | 183525/552076 [00:00<00:01, 231175.18it/s] 38%|███▊      | 207579/552076 [00:00<00:01, 233903.80it/s] 42%|████▏     | 231000/552076 [00:01<00:01, 233993.14it/s] 46%|████▌     | 254738/552076 [00:01<00:01, 234997.41it/s] 50%|█████     | 278588/552076 [00:01<00:01, 236035.23it/s] 55%|█████▍    | 301897/552076 [00:01<00:01, 233980.03it/s] 59%|█████▉    | 325433/552076 [00:01<00:00, 234390.71it/s] 63%|██████▎   | 348731/552076 [00:01<00:00, 233614.57it/s] 67%|██████▋   | 371995/552076 [00:01<00:00, 231618.35it/s] 72%|███████▏  | 395261/552076 [00:01<00:00, 231928.28it/s] 76%|███████▌  | 419055/552076 [00:01<00:00, 233697.92it/s] 80%|████████  | 442397/552076 [00:01<00:00, 231262.08it/s] 84%|████████▍ | 466118/552076 [00:02<00:00, 233013.66it/s] 89%|████████▊ | 489863/552076 [00:02<00:00, 234325.63it/s] 93%|█████████▎| 513667/552076 [00:02<00:00, 235426.12it/s] 97%|█████████▋| 537438/552076 [00:02<00:00, 236103.87it/s]100%|██████████| 552076/552076 [00:02<00:00, 232935.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21034/552076 [00:00<00:02, 210331.17it/s]  8%|▊         | 43542/552076 [00:00<00:02, 214548.71it/s] 12%|█▏        | 66424/552076 [00:00<00:02, 218638.48it/s] 16%|█▌        | 89670/552076 [00:00<00:02, 222608.37it/s] 20%|██        | 113088/552076 [00:00<00:01, 225956.79it/s] 25%|██▍       | 135706/552076 [00:00<00:01, 226022.80it/s] 29%|██▉       | 159288/552076 [00:00<00:01, 228872.61it/s] 33%|███▎      | 182871/552076 [00:00<00:01, 230913.49it/s] 37%|███▋      | 206612/552076 [00:00<00:01, 232824.38it/s] 42%|████▏     | 229494/552076 [00:01<00:01, 231606.98it/s] 46%|████▌     | 252913/552076 [00:01<00:01, 232372.32it/s] 50%|████▉     | 275747/552076 [00:01<00:01, 231048.95it/s] 54%|█████▍    | 299288/552076 [00:01<00:01, 232338.63it/s] 58%|█████▊    | 322327/552076 [00:01<00:00, 231616.67it/s] 63%|██████▎   | 345685/552076 [00:01<00:00, 232200.94it/s] 67%|██████▋   | 368881/552076 [00:01<00:00, 232126.35it/s] 71%|███████   | 392028/552076 [00:01<00:00, 231174.13it/s] 75%|███████▌  | 415836/552076 [00:01<00:00, 233201.07it/s] 80%|███████▉  | 439129/552076 [00:01<00:00, 230998.71it/s] 84%|████████▍ | 463021/552076 [00:02<00:00, 233316.85it/s] 88%|████████▊ | 486896/552076 [00:02<00:00, 234919.39it/s] 93%|█████████▎| 510784/552076 [00:02<00:00, 236091.61it/s] 97%|█████████▋| 534395/552076 [00:02<00:00, 235383.22it/s]100%|██████████| 552076/552076 [00:02<00:00, 231140.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 23046/552076 [00:00<00:02, 230453.08it/s]  8%|▊         | 46083/552076 [00:00<00:02, 230425.91it/s] 12%|█▏        | 68816/552076 [00:00<00:02, 229488.22it/s] 16%|█▋        | 90670/552076 [00:00<00:02, 226087.67it/s] 21%|██        | 113704/552076 [00:00<00:01, 227346.21it/s] 25%|██▍       | 136889/552076 [00:00<00:01, 228678.77it/s] 29%|██▉       | 159823/552076 [00:00<00:01, 228875.82it/s] 33%|███▎      | 180819/552076 [00:00<00:01, 222118.15it/s] 37%|███▋      | 203921/552076 [00:00<00:01, 224713.39it/s] 41%|████      | 227241/552076 [00:01<00:01, 227192.44it/s] 45%|████▌     | 250351/552076 [00:01<00:01, 228347.92it/s] 49%|████▉     | 272921/552076 [00:01<00:01, 227544.65it/s] 54%|█████▎    | 296357/552076 [00:01<00:01, 229545.24it/s] 58%|█████▊    | 320128/552076 [00:01<00:01, 231933.93it/s] 62%|██████▏   | 343911/552076 [00:01<00:00, 233671.40it/s] 67%|██████▋   | 367185/552076 [00:01<00:00, 232224.81it/s] 71%|███████   | 390842/552076 [00:01<00:00, 233511.09it/s] 75%|███████▌  | 414546/552076 [00:01<00:00, 234556.42it/s] 79%|███████▉  | 438441/552076 [00:01<00:00, 235856.34it/s] 84%|████████▎ | 462009/552076 [00:02<00:00, 232350.89it/s] 88%|████████▊ | 485243/552076 [00:02<00:00, 231279.35it/s] 92%|█████████▏| 508892/552076 [00:02<00:00, 232818.18it/s] 96%|█████████▋| 532590/552076 [00:02<00:00, 234051.03it/s]100%|██████████| 552076/552076 [00:02<00:00, 230662.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22249/552076 [00:00<00:02, 222481.73it/s]  8%|▊         | 45732/552076 [00:00<00:02, 226046.95it/s] 12%|█▏        | 68466/552076 [00:00<00:02, 226431.93it/s] 16%|█▋        | 90964/552076 [00:00<00:02, 225993.80it/s] 21%|██        | 114219/552076 [00:00<00:01, 227919.98it/s] 25%|██▍       | 136883/552076 [00:00<00:01, 227534.05it/s] 29%|██▉       | 159836/552076 [00:00<00:01, 228128.27it/s] 33%|███▎      | 183563/552076 [00:00<00:01, 230792.81it/s] 37%|███▋      | 206983/552076 [00:00<00:01, 231803.92it/s] 42%|████▏     | 229856/552076 [00:01<00:01, 230873.00it/s] 46%|████▌     | 254070/552076 [00:01<00:01, 234138.76it/s] 50%|█████     | 278297/552076 [00:01<00:01, 236519.31it/s] 55%|█████▍    | 302400/552076 [00:01<00:01, 237852.24it/s] 59%|█████▉    | 326570/552076 [00:01<00:00, 238993.37it/s] 63%|██████▎   | 350330/552076 [00:01<00:00, 236238.81it/s] 68%|██████▊   | 374357/552076 [00:01<00:00, 237432.28it/s] 72%|███████▏  | 398039/552076 [00:01<00:00, 236889.32it/s] 76%|███████▋  | 421685/552076 [00:01<00:00, 235932.33it/s] 81%|████████  | 445249/552076 [00:01<00:00, 231879.28it/s] 85%|████████▍ | 469179/552076 [00:02<00:00, 234054.33it/s] 89%|████████▉ | 493000/552076 [00:02<00:00, 235284.63it/s] 94%|█████████▎| 516603/552076 [00:02<00:00, 235506.64it/s] 98%|█████████▊| 540156/552076 [00:02<00:00, 230087.03it/s]100%|██████████| 552076/552076 [00:02<00:00, 232906.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22076/552076 [00:00<00:02, 220756.00it/s]  8%|▊         | 44918/552076 [00:00<00:02, 223000.56it/s] 12%|█▏        | 66083/552076 [00:00<00:02, 219466.72it/s] 16%|█▌        | 88921/552076 [00:00<00:02, 222065.77it/s] 20%|██        | 112469/552076 [00:00<00:01, 225924.82it/s] 25%|██▍       | 136188/552076 [00:00<00:01, 229189.82it/s] 29%|██▉       | 159243/552076 [00:00<00:01, 229591.18it/s] 33%|███▎      | 183210/552076 [00:00<00:01, 232522.49it/s] 38%|███▊      | 207076/552076 [00:00<00:01, 234328.60it/s] 42%|████▏     | 230453/552076 [00:01<00:01, 234160.47it/s] 46%|████▌     | 253302/552076 [00:01<00:01, 232427.36it/s] 50%|█████     | 276122/552076 [00:01<00:01, 229141.96it/s] 54%|█████▍    | 299403/552076 [00:01<00:01, 230227.47it/s] 58%|█████▊    | 322949/552076 [00:01<00:00, 231771.25it/s] 63%|██████▎   | 346404/552076 [00:01<00:00, 232595.86it/s] 67%|██████▋   | 369975/552076 [00:01<00:00, 233520.33it/s] 71%|███████   | 393262/552076 [00:01<00:00, 231473.46it/s] 75%|███████▌  | 416619/552076 [00:01<00:00, 232097.54it/s] 80%|███████▉  | 439800/552076 [00:01<00:00, 228650.15it/s] 84%|████████▍ | 462935/552076 [00:02<00:00, 229453.21it/s] 88%|████████▊ | 485875/552076 [00:02<00:00, 228393.60it/s] 92%|█████████▏| 509224/552076 [00:02<00:00, 229895.99it/s] 96%|█████████▋| 532215/552076 [00:02<00:00, 229178.87it/s]100%|██████████| 552076/552076 [00:02<00:00, 230206.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21988/552076 [00:00<00:02, 219874.44it/s]  8%|▊         | 45362/552076 [00:00<00:02, 223856.32it/s] 13%|█▎        | 69153/552076 [00:00<00:02, 227893.29it/s] 17%|█▋        | 92524/552076 [00:00<00:02, 229604.35it/s] 21%|██        | 115337/552076 [00:00<00:01, 229157.64it/s] 25%|██▌       | 139474/552076 [00:00<00:01, 232688.05it/s] 30%|██▉       | 163631/552076 [00:00<00:01, 235280.73it/s] 34%|███▍      | 187224/552076 [00:00<00:01, 235474.70it/s] 38%|███▊      | 210528/552076 [00:00<00:01, 234738.86it/s] 42%|████▏     | 234400/552076 [00:01<00:01, 235917.26it/s] 47%|████▋     | 258161/552076 [00:01<00:01, 236420.09it/s] 51%|█████     | 281376/552076 [00:01<00:01, 232928.30it/s] 55%|█████▌    | 304382/552076 [00:01<00:01, 231599.22it/s] 59%|█████▉    | 328263/552076 [00:01<00:00, 233714.25it/s] 64%|██████▎   | 351500/552076 [00:01<00:00, 230590.13it/s] 68%|██████▊   | 374474/552076 [00:01<00:00, 229200.57it/s] 72%|███████▏  | 398016/552076 [00:01<00:00, 231029.25it/s] 76%|███████▋  | 421083/552076 [00:01<00:00, 226843.67it/s] 80%|████████  | 443759/552076 [00:01<00:00, 226576.12it/s] 84%|████████▍ | 466411/552076 [00:02<00:00, 223869.12it/s] 89%|████████▊ | 488911/552076 [00:02<00:00, 224206.93it/s] 93%|█████████▎| 511969/552076 [00:02<00:00, 226079.24it/s] 97%|█████████▋| 534733/552076 [00:02<00:00, 226542.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 230639.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20634/552076 [00:00<00:02, 206337.74it/s]  8%|▊         | 43353/552076 [00:00<00:02, 212179.18it/s] 12%|█▏        | 65600/552076 [00:00<00:02, 215163.18it/s] 16%|█▌        | 88294/552076 [00:00<00:02, 218564.26it/s] 20%|██        | 111028/552076 [00:00<00:01, 221121.53it/s] 24%|██▍       | 133762/552076 [00:00<00:01, 222950.81it/s] 28%|██▊       | 156809/552076 [00:00<00:01, 225153.34it/s] 33%|███▎      | 179786/552076 [00:00<00:01, 226517.53it/s] 37%|███▋      | 202736/552076 [00:00<00:01, 227401.91it/s] 41%|████      | 224659/552076 [00:01<00:01, 223654.60it/s] 45%|████▍     | 246466/552076 [00:01<00:01, 220779.26it/s] 49%|████▊     | 269038/552076 [00:01<00:01, 222235.86it/s] 53%|█████▎    | 291760/552076 [00:01<00:01, 223707.27it/s] 57%|█████▋    | 313959/552076 [00:01<00:01, 223184.71it/s] 61%|██████    | 336228/552076 [00:01<00:00, 223035.33it/s] 65%|██████▌   | 359135/552076 [00:01<00:00, 224811.51it/s] 69%|██████▉   | 381763/552076 [00:01<00:00, 225248.36it/s] 73%|███████▎  | 404391/552076 [00:01<00:00, 225556.60it/s] 77%|███████▋  | 426918/552076 [00:01<00:00, 213528.46it/s] 81%|████████  | 448384/552076 [00:02<00:00, 205964.19it/s] 85%|████████▍ | 469118/552076 [00:02<00:00, 201314.68it/s] 89%|████████▊ | 489369/552076 [00:02<00:00, 197656.52it/s] 92%|█████████▏| 509233/552076 [00:02<00:00, 195109.42it/s] 96%|█████████▌| 528821/552076 [00:02<00:00, 191556.08it/s] 99%|█████████▉| 548045/552076 [00:02<00:00, 191332.70it/s]100%|██████████| 552076/552076 [00:02<00:00, 213688.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12655/552076 [00:00<00:04, 126546.20it/s]  5%|▍         | 25698/552076 [00:00<00:04, 127685.98it/s]  7%|▋         | 39304/552076 [00:00<00:03, 130086.62it/s] 10%|▉         | 54140/552076 [00:00<00:03, 135076.39it/s] 13%|█▎        | 73404/552076 [00:00<00:03, 148377.14it/s] 17%|█▋        | 92725/552076 [00:00<00:02, 159476.47it/s] 20%|██        | 111464/552076 [00:00<00:02, 166934.42it/s] 24%|██▎       | 130189/552076 [00:00<00:02, 172549.68it/s] 27%|██▋       | 148475/552076 [00:00<00:02, 175516.84it/s] 30%|███       | 167229/552076 [00:01<00:02, 178956.23it/s] 34%|███▎      | 186256/552076 [00:01<00:02, 182204.82it/s] 37%|███▋      | 205707/552076 [00:01<00:01, 185728.65it/s] 41%|████      | 225181/552076 [00:01<00:01, 188343.17it/s] 44%|████▍     | 244541/552076 [00:01<00:01, 189887.66it/s] 48%|████▊     | 264863/552076 [00:01<00:01, 193697.93it/s] 52%|█████▏    | 285681/552076 [00:01<00:01, 197826.13it/s] 56%|█████▌    | 306482/552076 [00:01<00:01, 200771.89it/s] 59%|█████▉    | 326590/552076 [00:01<00:01, 191754.59it/s] 63%|██████▎   | 345873/552076 [00:01<00:01, 188891.37it/s] 66%|██████▌   | 365287/552076 [00:02<00:00, 190432.49it/s] 70%|██████▉   | 384674/552076 [00:02<00:00, 191447.82it/s] 73%|███████▎  | 404375/552076 [00:02<00:00, 193082.59it/s] 77%|███████▋  | 423718/552076 [00:02<00:00, 191511.13it/s] 80%|████████  | 442897/552076 [00:02<00:00, 189692.18it/s] 84%|████████▎ | 461890/552076 [00:02<00:00, 189097.03it/s] 87%|████████▋ | 480965/552076 [00:02<00:00, 189587.54it/s] 91%|█████████ | 500296/552076 [00:02<00:00, 190687.17it/s] 94%|█████████▍| 519567/552076 [00:02<00:00, 191287.56it/s] 98%|█████████▊| 538706/552076 [00:02<00:00, 191318.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 184186.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14857/552076 [00:00<00:03, 148564.47it/s]  5%|▌         | 29441/552076 [00:00<00:03, 147732.91it/s]  8%|▊         | 44196/552076 [00:00<00:03, 147677.40it/s] 10%|█         | 57874/552076 [00:00<00:03, 144227.76it/s] 13%|█▎        | 72002/552076 [00:00<00:03, 143329.81it/s] 16%|█▌        | 85781/552076 [00:00<00:03, 141618.57it/s] 18%|█▊        | 99669/552076 [00:00<00:03, 140783.31it/s] 21%|██        | 113623/552076 [00:00<00:03, 140406.73it/s] 24%|██▍       | 131564/552076 [00:00<00:02, 150201.35it/s] 27%|██▋       | 149283/552076 [00:01<00:02, 157392.39it/s] 30%|██▉       | 164831/552076 [00:01<00:02, 146195.25it/s] 33%|███▎      | 179476/552076 [00:01<00:02, 139484.56it/s] 35%|███▌      | 193507/552076 [00:01<00:02, 131678.60it/s] 37%|███▋      | 206823/552076 [00:01<00:02, 128529.79it/s] 40%|███▉      | 219797/552076 [00:01<00:02, 126686.47it/s] 42%|████▏     | 232556/552076 [00:01<00:02, 125741.29it/s] 44%|████▍     | 245195/552076 [00:01<00:02, 125305.12it/s] 47%|████▋     | 257772/552076 [00:01<00:02, 124446.98it/s] 49%|████▉     | 270250/552076 [00:01<00:02, 124388.14it/s] 51%|█████     | 282713/552076 [00:02<00:02, 124323.52it/s] 53%|█████▎    | 295162/552076 [00:02<00:02, 124302.75it/s] 56%|█████▌    | 307604/552076 [00:02<00:02, 122049.14it/s] 58%|█████▊    | 319967/552076 [00:02<00:01, 122519.08it/s] 60%|██████    | 332376/552076 [00:02<00:01, 122983.85it/s] 62%|██████▏   | 344741/552076 [00:02<00:01, 123181.66it/s] 65%|██████▍   | 357180/552076 [00:02<00:01, 123540.76it/s] 67%|██████▋   | 369539/552076 [00:02<00:01, 123462.86it/s] 69%|██████▉   | 381953/552076 [00:02<00:01, 123663.24it/s] 71%|███████▏  | 394322/552076 [00:02<00:01, 123316.16it/s] 74%|███████▎  | 406656/552076 [00:03<00:01, 109933.93it/s] 76%|███████▌  | 418936/552076 [00:03<00:01, 113499.93it/s] 78%|███████▊  | 430506/552076 [00:03<00:01, 104797.03it/s] 80%|████████  | 442659/552076 [00:03<00:01, 109309.89it/s] 82%|████████▏ | 453841/552076 [00:03<00:00, 109995.06it/s] 84%|████████▍ | 465017/552076 [00:03<00:00, 106418.53it/s] 86%|████████▌ | 475808/552076 [00:03<00:00, 98270.25it/s]  88%|████████▊ | 487345/552076 [00:03<00:00, 102842.34it/s] 90%|█████████ | 499300/552076 [00:04<00:00, 107342.31it/s] 93%|█████████▎| 511634/552076 [00:04<00:00, 111687.61it/s] 95%|█████████▍| 524007/552076 [00:04<00:00, 115043.99it/s] 97%|█████████▋| 536335/552076 [00:04<00:00, 117396.68it/s] 99%|█████████▉| 548680/552076 [00:04<00:00, 119147.39it/s]100%|██████████| 552076/552076 [00:04<00:00, 124538.08it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12069/552076 [00:00<00:04, 120687.81it/s]  4%|▍         | 24082/552076 [00:00<00:04, 120519.61it/s]  7%|▋         | 36164/552076 [00:00<00:04, 120607.45it/s]  9%|▉         | 48315/552076 [00:00<00:04, 120876.15it/s] 11%|█         | 60654/552076 [00:00<00:04, 121616.95it/s] 13%|█▎        | 73009/552076 [00:00<00:03, 122187.84it/s] 15%|█▌        | 85382/552076 [00:00<00:03, 122645.51it/s] 18%|█▊        | 97748/552076 [00:00<00:03, 122947.53it/s] 20%|█▉        | 109672/552076 [00:00<00:03, 121809.27it/s] 22%|██▏       | 121370/552076 [00:01<00:03, 119625.60it/s] 24%|██▍       | 133003/552076 [00:01<00:03, 114081.03it/s] 26%|██▌       | 144893/552076 [00:01<00:03, 115483.31it/s] 28%|██▊       | 157199/552076 [00:01<00:03, 117654.77it/s] 31%|███       | 169542/552076 [00:01<00:03, 119328.83it/s] 33%|███▎      | 181879/552076 [00:01<00:03, 120510.44it/s] 35%|███▌      | 194163/552076 [00:01<00:02, 121199.59it/s] 37%|███▋      | 206544/552076 [00:01<00:02, 121970.08it/s] 40%|███▉      | 218964/552076 [00:01<00:02, 122628.04it/s] 42%|████▏     | 231226/552076 [00:01<00:02, 122625.05it/s] 44%|████▍     | 243483/552076 [00:02<00:03, 92103.77it/s]  46%|████▋     | 255641/552076 [00:02<00:02, 99326.89it/s] 49%|████▊     | 267847/552076 [00:02<00:02, 105203.35it/s] 51%|█████     | 280260/552076 [00:02<00:02, 110243.99it/s] 53%|█████▎    | 292021/552076 [00:02<00:02, 112354.85it/s] 55%|█████▌    | 304466/552076 [00:02<00:02, 115727.31it/s] 57%|█████▋    | 316831/552076 [00:02<00:01, 117995.30it/s] 60%|█████▉    | 329178/552076 [00:02<00:01, 119584.83it/s] 62%|██████▏   | 341405/552076 [00:02<00:01, 120375.15it/s] 64%|██████▍   | 353806/552076 [00:03<00:01, 121441.37it/s] 66%|██████▋   | 366037/552076 [00:03<00:01, 121520.63it/s] 69%|██████▊   | 378250/552076 [00:03<00:01, 115937.25it/s] 71%|███████   | 390539/552076 [00:03<00:01, 117938.02it/s] 73%|███████▎  | 402805/552076 [00:03<00:01, 119314.37it/s] 75%|███████▌  | 415217/552076 [00:03<00:01, 120716.47it/s] 77%|███████▋  | 427720/552076 [00:03<00:01, 121978.56it/s] 80%|███████▉  | 440239/552076 [00:03<00:00, 122924.51it/s] 82%|████████▏ | 452681/552076 [00:03<00:00, 123367.13it/s] 84%|████████▍ | 465132/552076 [00:03<00:00, 123707.02it/s] 86%|████████▋ | 477516/552076 [00:04<00:00, 112974.87it/s] 89%|████████▊ | 489567/552076 [00:04<00:00, 115132.32it/s] 91%|█████████ | 501926/552076 [00:04<00:00, 117544.85it/s] 93%|█████████▎| 514314/552076 [00:04<00:00, 119375.59it/s] 95%|█████████▌| 526728/552076 [00:04<00:00, 120765.76it/s] 98%|█████████▊| 539141/552076 [00:04<00:00, 121753.71it/s]100%|█████████▉| 551468/552076 [00:04<00:00, 122202.02it/s]100%|██████████| 552076/552076 [00:04<00:00, 117976.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11889/552076 [00:00<00:04, 118881.33it/s]  4%|▍         | 23857/552076 [00:00<00:04, 119117.47it/s]  6%|▌         | 32549/552076 [00:00<00:04, 107200.92it/s]  8%|▊         | 43637/552076 [00:00<00:04, 108277.04it/s] 10%|█         | 55964/552076 [00:00<00:04, 112374.95it/s] 12%|█▏        | 68173/552076 [00:00<00:04, 115120.31it/s] 15%|█▍        | 80394/552076 [00:00<00:04, 117156.70it/s] 17%|█▋        | 92675/552076 [00:00<00:03, 118796.73it/s] 19%|█▉        | 104980/552076 [00:00<00:03, 120040.79it/s] 21%|██▏       | 117419/552076 [00:01<00:03, 121311.96it/s] 24%|██▎       | 129803/552076 [00:01<00:03, 122057.61it/s] 26%|██▌       | 141804/552076 [00:01<00:03, 112480.12it/s] 28%|██▊       | 153188/552076 [00:01<00:03, 112884.61it/s] 30%|██▉       | 165093/552076 [00:01<00:03, 114663.31it/s] 32%|███▏      | 176739/552076 [00:01<00:03, 115195.93it/s] 34%|███▍      | 188977/552076 [00:01<00:03, 117259.42it/s] 36%|███▋      | 201276/552076 [00:01<00:02, 118921.11it/s] 39%|███▊      | 213247/552076 [00:01<00:02, 119156.04it/s] 41%|████      | 225632/552076 [00:01<00:02, 120525.63it/s] 43%|████▎     | 237878/552076 [00:02<00:02, 121099.27it/s] 45%|████▌     | 250225/552076 [00:02<00:02, 121799.96it/s] 48%|████▊     | 262412/552076 [00:02<00:02, 121534.77it/s] 50%|████▉     | 274571/552076 [00:02<00:02, 108112.12it/s] 52%|█████▏    | 285661/552076 [00:02<00:02, 105146.79it/s] 54%|█████▎    | 296389/552076 [00:02<00:02, 98406.61it/s]  56%|█████▌    | 306823/552076 [00:02<00:02, 100112.85it/s] 58%|█████▊    | 317867/552076 [00:02<00:02, 103000.86it/s] 60%|█████▉    | 328969/552076 [00:02<00:02, 105281.01it/s] 62%|██████▏   | 339609/552076 [00:03<00:02, 95306.62it/s]  64%|██████▎   | 351338/552076 [00:03<00:01, 100983.85it/s] 66%|██████▌   | 361710/552076 [00:03<00:01, 100680.46it/s] 67%|██████▋   | 371970/552076 [00:03<00:01, 90601.74it/s]  69%|██████▉   | 381355/552076 [00:03<00:02, 78686.78it/s] 71%|███████   | 389731/552076 [00:03<00:02, 74499.55it/s] 73%|███████▎  | 400693/552076 [00:03<00:01, 82420.05it/s] 74%|███████▍  | 409478/552076 [00:03<00:01, 80516.09it/s] 76%|███████▋  | 421720/552076 [00:03<00:01, 89729.06it/s] 78%|███████▊  | 432035/552076 [00:04<00:01, 93373.22it/s] 80%|████████  | 444142/552076 [00:04<00:01, 100253.24it/s] 83%|████████▎ | 455791/552076 [00:04<00:00, 104626.01it/s] 85%|████████▍ | 467989/552076 [00:04<00:00, 109289.24it/s] 87%|████████▋ | 480097/552076 [00:04<00:00, 112577.45it/s] 89%|████████▉ | 492365/552076 [00:04<00:00, 115427.72it/s] 91%|█████████▏| 504532/552076 [00:04<00:00, 117231.72it/s] 94%|█████████▎| 516777/552076 [00:04<00:00, 118749.77it/s] 96%|█████████▌| 528944/552076 [00:04<00:00, 119610.12it/s] 98%|█████████▊| 541189/552076 [00:04<00:00, 120444.89it/s]100%|██████████| 552076/552076 [00:05<00:00, 108819.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7451/552076 [00:00<00:07, 74504.21it/s]  2%|▏         | 13109/552076 [00:00<00:07, 68036.68it/s]  4%|▍         | 21970/552076 [00:00<00:07, 73129.28it/s]  5%|▌         | 29741/552076 [00:00<00:07, 73654.54it/s]  7%|▋         | 36531/552076 [00:00<00:07, 71826.96it/s]  9%|▊         | 48141/552076 [00:00<00:06, 81105.25it/s] 10%|█         | 56129/552076 [00:00<00:06, 80733.13it/s] 12%|█▏        | 66203/552076 [00:00<00:05, 85846.27it/s] 14%|█▎        | 74678/552076 [00:00<00:05, 82692.09it/s] 16%|█▌        | 86005/552076 [00:01<00:05, 89978.98it/s] 18%|█▊        | 97132/552076 [00:01<00:04, 95457.80it/s] 20%|█▉        | 108111/552076 [00:01<00:04, 99346.58it/s] 22%|██▏       | 119235/552076 [00:01<00:04, 102637.93it/s] 24%|██▎       | 130314/552076 [00:01<00:04, 104952.78it/s] 26%|██▌       | 141068/552076 [00:01<00:03, 105715.74it/s] 28%|██▊       | 152101/552076 [00:01<00:03, 107057.37it/s] 30%|██▉       | 163336/552076 [00:01<00:03, 108592.00it/s] 32%|███▏      | 174297/552076 [00:01<00:03, 108893.97it/s] 34%|███▎      | 185493/552076 [00:01<00:03, 109795.03it/s] 36%|███▌      | 196569/552076 [00:02<00:03, 110080.98it/s] 38%|███▊      | 207813/552076 [00:02<00:03, 110777.64it/s] 40%|███▉      | 218905/552076 [00:02<00:03, 106647.45it/s] 42%|████▏     | 229613/552076 [00:02<00:03, 106315.99it/s] 44%|████▎     | 240929/552076 [00:02<00:02, 108280.03it/s] 46%|████▌     | 251910/552076 [00:02<00:02, 108733.32it/s] 48%|████▊     | 263303/552076 [00:02<00:02, 110240.90it/s] 50%|████▉     | 275074/552076 [00:02<00:02, 112379.89it/s] 52%|█████▏    | 286579/552076 [00:02<00:02, 113167.45it/s] 54%|█████▍    | 297914/552076 [00:02<00:02, 106647.04it/s] 56%|█████▌    | 309721/552076 [00:03<00:02, 109833.04it/s] 58%|█████▊    | 320792/552076 [00:03<00:02, 102340.38it/s] 60%|██████    | 332612/552076 [00:03<00:02, 106630.20it/s] 62%|██████▏   | 343437/552076 [00:03<00:02, 101447.66it/s] 64%|██████▍   | 353748/552076 [00:03<00:01, 101762.56it/s] 66%|██████▌   | 364503/552076 [00:03<00:01, 103431.14it/s] 68%|██████▊   | 375526/552076 [00:03<00:01, 105380.89it/s] 70%|██████▉   | 386297/552076 [00:03<00:01, 106068.56it/s] 72%|███████▏  | 396955/552076 [00:03<00:01, 102509.36it/s] 74%|███████▍  | 407268/552076 [00:04<00:01, 85541.03it/s]  75%|███████▌  | 416338/552076 [00:04<00:01, 76409.91it/s] 77%|███████▋  | 424522/552076 [00:04<00:01, 70281.10it/s] 78%|███████▊  | 432027/552076 [00:04<00:01, 67710.57it/s] 80%|███████▉  | 439152/552076 [00:04<00:01, 67976.96it/s] 81%|████████  | 446198/552076 [00:04<00:01, 62854.48it/s] 83%|████████▎ | 455803/552076 [00:04<00:01, 70124.48it/s] 84%|████████▍ | 463260/552076 [00:04<00:01, 64845.01it/s] 86%|████████▌ | 475160/552076 [00:05<00:01, 75097.01it/s] 88%|████████▊ | 485797/552076 [00:05<00:00, 82361.17it/s] 90%|█████████ | 497988/552076 [00:05<00:00, 91239.87it/s] 92%|█████████▏| 507986/552076 [00:05<00:00, 93357.24it/s] 94%|█████████▍| 517946/552076 [00:05<00:00, 92850.50it/s] 96%|█████████▌| 527669/552076 [00:05<00:00, 66864.39it/s] 97%|█████████▋| 535689/552076 [00:05<00:00, 58488.36it/s] 98%|█████████▊| 543407/552076 [00:05<00:00, 63070.36it/s]100%|█████████▉| 550814/552076 [00:06<00:00, 65271.19it/s]100%|██████████| 552076/552076 [00:06<00:00, 90430.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21520/552076 [00:00<00:02, 215168.91it/s]  7%|▋         | 41153/552076 [00:00<00:02, 209146.87it/s] 11%|█         | 61593/552076 [00:00<00:02, 207698.07it/s] 15%|█▍        | 82097/552076 [00:00<00:02, 206893.35it/s] 18%|█▊        | 97748/552076 [00:00<00:02, 188670.54it/s] 21%|██        | 114599/552076 [00:00<00:02, 182131.21it/s] 25%|██▍       | 136164/552076 [00:00<00:02, 191038.46it/s] 29%|██▊       | 158197/552076 [00:00<00:01, 198971.92it/s] 33%|███▎      | 181260/552076 [00:00<00:01, 207515.22it/s] 36%|███▋      | 201449/552076 [00:01<00:01, 204699.02it/s] 40%|████      | 221534/552076 [00:01<00:01, 185683.09it/s] 44%|████▍     | 243580/552076 [00:01<00:01, 194906.68it/s] 48%|████▊     | 266603/552076 [00:01<00:01, 204308.51it/s] 52%|█████▏    | 289335/552076 [00:01<00:01, 210706.95it/s] 57%|█████▋    | 311979/552076 [00:01<00:01, 215192.34it/s] 61%|██████    | 334197/552076 [00:01<00:01, 217240.89it/s] 65%|██████▍   | 357165/552076 [00:01<00:00, 220826.14it/s] 69%|██████▉   | 379941/552076 [00:01<00:00, 222860.37it/s] 73%|███████▎  | 403436/552076 [00:01<00:00, 226352.77it/s] 77%|███████▋  | 426179/552076 [00:02<00:00, 226673.31it/s] 81%|████████▏ | 448894/552076 [00:02<00:00, 221754.88it/s] 85%|████████▌ | 471424/552076 [00:02<00:00, 222805.29it/s] 89%|████████▉ | 493746/552076 [00:02<00:00, 220247.94it/s] 93%|█████████▎| 516154/552076 [00:02<00:00, 221382.69it/s] 98%|█████████▊| 539166/552076 [00:02<00:00, 223932.85it/s]100%|██████████| 552076/552076 [00:02<00:00, 211756.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21784/552076 [00:00<00:02, 217832.42it/s]  8%|▊         | 44379/552076 [00:00<00:02, 220204.31it/s] 12%|█▏        | 66306/552076 [00:00<00:02, 219920.72it/s] 15%|█▍        | 80831/552076 [00:00<00:02, 188052.90it/s] 17%|█▋        | 95215/552076 [00:00<00:03, 141143.19it/s] 20%|█▉        | 107960/552076 [00:00<00:03, 118738.19it/s] 22%|██▏       | 119481/552076 [00:00<00:04, 106068.91it/s] 24%|██▍       | 134416/552076 [00:00<00:03, 116167.33it/s] 28%|██▊       | 154996/552076 [00:01<00:02, 133626.80it/s] 32%|███▏      | 175384/552076 [00:01<00:02, 149032.39it/s] 36%|███▌      | 196455/552076 [00:01<00:02, 163378.79it/s] 40%|███▉      | 218083/552076 [00:01<00:01, 176316.53it/s] 44%|████▎     | 240487/552076 [00:01<00:01, 188351.94it/s] 48%|████▊     | 263032/552076 [00:01<00:01, 198131.15it/s] 52%|█████▏    | 285052/552076 [00:01<00:01, 204272.44it/s] 56%|█████▌    | 306464/552076 [00:01<00:01, 207128.46it/s] 60%|█████▉    | 329538/552076 [00:01<00:01, 213687.95it/s] 64%|██████▍   | 352132/552076 [00:01<00:00, 217221.05it/s] 68%|██████▊   | 374681/552076 [00:02<00:00, 219635.88it/s] 72%|███████▏  | 397143/552076 [00:02<00:00, 221104.84it/s] 76%|███████▌  | 419403/552076 [00:02<00:00, 219564.24it/s] 80%|███████▉  | 441467/552076 [00:02<00:00, 219298.79it/s] 84%|████████▍ | 464683/552076 [00:02<00:00, 223002.92it/s] 88%|████████▊ | 487051/552076 [00:02<00:00, 220919.49it/s] 92%|█████████▏| 509195/552076 [00:02<00:00, 216104.94it/s] 96%|█████████▌| 530866/552076 [00:02<00:00, 207590.53it/s]100%|█████████▉| 551739/552076 [00:02<00:00, 202005.70it/s]100%|██████████| 552076/552076 [00:02<00:00, 191102.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13421/552076 [00:00<00:04, 134198.29it/s]  5%|▍         | 26873/552076 [00:00<00:03, 134293.05it/s]  7%|▋         | 40095/552076 [00:00<00:03, 133664.28it/s] 10%|▉         | 53834/552076 [00:00<00:03, 134759.42it/s] 12%|█▏        | 67365/552076 [00:00<00:03, 134923.29it/s] 16%|█▌        | 85960/552076 [00:00<00:03, 147025.66it/s] 19%|█▉        | 104965/552076 [00:00<00:02, 157737.62it/s] 22%|██▏       | 123083/552076 [00:00<00:02, 164104.72it/s] 25%|██▌       | 139841/552076 [00:00<00:02, 165130.84it/s] 29%|██▉       | 160082/552076 [00:01<00:02, 174787.05it/s] 33%|███▎      | 179720/552076 [00:01<00:02, 180747.84it/s] 36%|███▌      | 199598/552076 [00:01<00:01, 185801.93it/s] 40%|███▉      | 218246/552076 [00:01<00:01, 186004.22it/s] 43%|████▎     | 237443/552076 [00:01<00:01, 187754.58it/s] 47%|████▋     | 256726/552076 [00:01<00:01, 189248.45it/s] 50%|█████     | 276653/552076 [00:01<00:01, 192146.45it/s] 54%|█████▎    | 296462/552076 [00:01<00:01, 193890.96it/s] 57%|█████▋    | 315874/552076 [00:01<00:01, 193289.84it/s] 61%|██████    | 335220/552076 [00:01<00:01, 190987.84it/s] 64%|██████▍   | 355754/552076 [00:02<00:01, 195075.45it/s] 68%|██████▊   | 376561/552076 [00:02<00:00, 198797.88it/s] 72%|███████▏  | 397728/552076 [00:02<00:00, 202491.03it/s] 76%|███████▌  | 418223/552076 [00:02<00:00, 203220.11it/s] 80%|███████▉  | 439875/552076 [00:02<00:00, 207032.52it/s] 84%|████████▎ | 461548/552076 [00:02<00:00, 209843.21it/s] 88%|████████▊ | 483449/552076 [00:02<00:00, 212510.23it/s] 91%|█████████▏| 504735/552076 [00:02<00:00, 211467.05it/s] 95%|█████████▌| 525907/552076 [00:02<00:00, 211283.98it/s] 99%|█████████▉| 547054/552076 [00:02<00:00, 208912.54it/s]100%|██████████| 552076/552076 [00:02<00:00, 188086.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13548/552076 [00:00<00:03, 135472.70it/s]  5%|▌         | 30342/552076 [00:00<00:03, 143812.41it/s]  9%|▉         | 48862/552076 [00:00<00:03, 154146.75it/s] 12%|█▏        | 67951/552076 [00:00<00:02, 163591.82it/s] 16%|█▌        | 86993/552076 [00:00<00:02, 170808.35it/s] 19%|█▉        | 106142/552076 [00:00<00:02, 176527.76it/s] 23%|██▎       | 125204/552076 [00:00<00:02, 180529.41it/s] 26%|██▌       | 143417/552076 [00:00<00:02, 181005.52it/s] 29%|██▉       | 162581/552076 [00:00<00:02, 184068.62it/s] 33%|███▎      | 181761/552076 [00:01<00:01, 186321.06it/s] 36%|███▋      | 201144/552076 [00:01<00:01, 188509.50it/s] 40%|███▉      | 219799/552076 [00:01<00:01, 187464.78it/s] 43%|████▎     | 239132/552076 [00:01<00:01, 189184.84it/s] 47%|████▋     | 258051/552076 [00:01<00:01, 189180.22it/s] 50%|█████     | 277529/552076 [00:01<00:01, 190824.77it/s] 54%|█████▎    | 296570/552076 [00:01<00:01, 188988.84it/s] 57%|█████▋    | 315465/552076 [00:01<00:01, 188973.59it/s] 61%|██████    | 334345/552076 [00:01<00:01, 187552.88it/s] 64%|██████▍   | 354118/552076 [00:01<00:01, 190493.03it/s] 68%|██████▊   | 373172/552076 [00:02<00:00, 189188.72it/s] 71%|███████   | 392584/552076 [00:02<00:00, 190638.17it/s] 75%|███████▍  | 411772/552076 [00:02<00:00, 191006.91it/s] 78%|███████▊  | 431182/552076 [00:02<00:00, 191922.45it/s] 82%|████████▏ | 450477/552076 [00:02<00:00, 192228.25it/s] 85%|████████▌ | 469703/552076 [00:02<00:00, 192070.52it/s] 89%|████████▊ | 489342/552076 [00:02<00:00, 193344.97it/s] 92%|█████████▏| 508996/552076 [00:02<00:00, 194292.30it/s] 96%|█████████▌| 528645/552076 [00:02<00:00, 194944.00it/s] 99%|█████████▉| 548436/552076 [00:02<00:00, 195823.37it/s]100%|██████████| 552076/552076 [00:02<00:00, 188580.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14697/552076 [00:00<00:03, 146962.78it/s]  5%|▌         | 29463/552076 [00:00<00:03, 147169.09it/s]  8%|▊         | 44465/552076 [00:00<00:03, 148009.62it/s] 10%|█         | 55960/552076 [00:00<00:03, 136250.70it/s] 13%|█▎        | 69795/552076 [00:00<00:03, 136871.10it/s] 15%|█▍        | 81143/552076 [00:00<00:03, 128038.00it/s] 17%|█▋        | 96151/552076 [00:00<00:03, 133938.62it/s] 21%|██        | 115853/552076 [00:00<00:02, 148170.71it/s] 25%|██▍       | 136032/552076 [00:00<00:02, 161004.17it/s] 28%|██▊       | 156345/552076 [00:01<00:02, 171685.34it/s] 32%|███▏      | 176174/552076 [00:01<00:02, 178884.12it/s] 35%|███▌      | 194697/552076 [00:01<00:01, 180739.66it/s] 39%|███▉      | 214448/552076 [00:01<00:01, 185463.84it/s] 42%|████▏     | 233992/552076 [00:01<00:01, 188345.28it/s] 46%|████▌     | 253781/552076 [00:01<00:01, 191110.26it/s] 49%|████▉     | 273209/552076 [00:01<00:01, 192049.10it/s] 53%|█████▎    | 293398/552076 [00:01<00:01, 194896.37it/s] 57%|█████▋    | 312951/552076 [00:01<00:01, 180603.11it/s] 60%|██████    | 331264/552076 [00:01<00:01, 171430.01it/s] 63%|██████▎   | 348682/552076 [00:02<00:01, 164909.64it/s] 66%|██████▌   | 365418/552076 [00:02<00:01, 160341.67it/s] 69%|██████▉   | 381652/552076 [00:02<00:01, 153599.03it/s] 72%|███████▏  | 397212/552076 [00:02<00:01, 149497.36it/s] 75%|███████▌  | 415684/552076 [00:02<00:00, 158566.54it/s] 79%|███████▉  | 435472/552076 [00:02<00:00, 168615.11it/s] 82%|████████▏ | 454688/552076 [00:02<00:00, 175047.74it/s] 86%|████████▌ | 472508/552076 [00:02<00:00, 170475.91it/s] 89%|████████▉ | 491874/552076 [00:02<00:00, 176826.16it/s] 93%|█████████▎| 511709/552076 [00:03<00:00, 182773.84it/s] 96%|█████████▌| 531348/552076 [00:03<00:00, 186655.64it/s]100%|█████████▉| 550823/552076 [00:03<00:00, 189011.02it/s]100%|██████████| 552076/552076 [00:03<00:00, 171464.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8664/552076 [00:00<00:06, 86632.23it/s]  3%|▎         | 14229/552076 [00:00<00:07, 74231.40it/s]  4%|▎         | 19816/552076 [00:00<00:07, 67567.46it/s]  5%|▍         | 25415/552076 [00:00<00:08, 63620.62it/s]  6%|▌         | 31886/552076 [00:00<00:08, 63943.13it/s]  7%|▋         | 38705/552076 [00:00<00:07, 65157.89it/s]  8%|▊         | 45541/552076 [00:00<00:07, 66084.63it/s]  9%|▉         | 52330/552076 [00:00<00:07, 66613.24it/s] 11%|█         | 59184/552076 [00:00<00:07, 67177.65it/s] 12%|█▏        | 66019/552076 [00:01<00:07, 67522.51it/s] 13%|█▎        | 72840/552076 [00:01<00:07, 67725.87it/s] 14%|█▍        | 79667/552076 [00:01<00:06, 67886.72it/s] 16%|█▌        | 86536/552076 [00:01<00:06, 68124.78it/s] 17%|█▋        | 93402/552076 [00:01<00:06, 68283.03it/s] 18%|█▊        | 100224/552076 [00:01<00:06, 68263.59it/s] 19%|█▉        | 107057/552076 [00:01<00:06, 68282.49it/s] 21%|██        | 113885/552076 [00:01<00:06, 68280.54it/s] 22%|██▏       | 120745/552076 [00:01<00:06, 68374.33it/s] 23%|██▎       | 127571/552076 [00:01<00:06, 66864.46it/s] 24%|██▍       | 134357/552076 [00:02<00:06, 67159.01it/s] 26%|██▌       | 141187/552076 [00:02<00:06, 67494.97it/s] 27%|██▋       | 148057/552076 [00:02<00:05, 67851.55it/s] 28%|██▊       | 154890/552076 [00:02<00:05, 67991.60it/s] 29%|██▉       | 161744/552076 [00:02<00:05, 68154.78it/s] 31%|███       | 168569/552076 [00:02<00:05, 68181.19it/s] 32%|███▏      | 175416/552076 [00:02<00:05, 68266.09it/s] 33%|███▎      | 182243/552076 [00:02<00:05, 68100.31it/s] 34%|███▍      | 189054/552076 [00:02<00:05, 67680.62it/s] 35%|███▌      | 195823/552076 [00:02<00:05, 67264.30it/s] 37%|███▋      | 202551/552076 [00:03<00:05, 67190.18it/s] 38%|███▊      | 209271/552076 [00:03<00:05, 67029.91it/s] 39%|███▉      | 216026/552076 [00:03<00:05, 67184.06it/s] 40%|████      | 222825/552076 [00:03<00:04, 67423.13it/s] 42%|████▏     | 229599/552076 [00:03<00:04, 67515.93it/s] 43%|████▎     | 236457/552076 [00:03<00:04, 67829.43it/s] 44%|████▍     | 243259/552076 [00:03<00:04, 67882.87it/s] 45%|████▌     | 250048/552076 [00:03<00:04, 67840.25it/s] 47%|████▋     | 256899/552076 [00:03<00:04, 68037.69it/s] 48%|████▊     | 263704/552076 [00:03<00:04, 67346.16it/s] 49%|████▉     | 270441/552076 [00:04<00:04, 67316.55it/s] 50%|█████     | 278206/552076 [00:04<00:03, 70115.36it/s] 52%|█████▏    | 285249/552076 [00:04<00:03, 69608.78it/s] 53%|█████▎    | 292233/552076 [00:04<00:03, 69126.07it/s] 54%|█████▍    | 299163/552076 [00:04<00:03, 68681.08it/s] 55%|█████▌    | 306044/552076 [00:04<00:03, 68492.22it/s] 57%|█████▋    | 312902/552076 [00:04<00:03, 68250.98it/s] 58%|█████▊    | 319734/552076 [00:04<00:03, 68090.60it/s] 59%|█████▉    | 326548/552076 [00:04<00:03, 68092.00it/s] 60%|██████    | 333361/552076 [00:04<00:03, 67835.35it/s] 62%|██████▏   | 340311/552076 [00:05<00:03, 68325.80it/s] 63%|██████▎   | 347225/552076 [00:05<00:02, 68566.65it/s] 64%|██████▍   | 354084/552076 [00:05<00:02, 68348.55it/s] 65%|██████▌   | 360921/552076 [00:05<00:02, 68259.38it/s] 67%|██████▋   | 367749/552076 [00:05<00:02, 68011.81it/s] 68%|██████▊   | 374552/552076 [00:05<00:02, 67647.88it/s] 69%|██████▉   | 381318/552076 [00:05<00:02, 66501.78it/s] 70%|███████   | 388008/552076 [00:05<00:02, 66619.81it/s] 71%|███████▏  | 394674/552076 [00:05<00:02, 65533.78it/s] 73%|███████▎  | 401487/552076 [00:05<00:02, 66291.55it/s] 74%|███████▍  | 408169/552076 [00:06<00:02, 66446.63it/s] 75%|███████▌  | 414819/552076 [00:06<00:02, 65486.68it/s] 76%|███████▋  | 421463/552076 [00:06<00:01, 65768.74it/s] 78%|███████▊  | 428236/552076 [00:06<00:01, 66343.94it/s] 79%|███████▉  | 434875/552076 [00:06<00:01, 66024.39it/s] 80%|███████▉  | 441649/552076 [00:06<00:01, 66528.59it/s] 81%|████████  | 448462/552076 [00:06<00:01, 66998.81it/s] 82%|████████▏ | 455166/552076 [00:06<00:01, 66357.24it/s] 84%|████████▎ | 461974/552076 [00:06<00:01, 66862.14it/s] 85%|████████▍ | 468751/552076 [00:06<00:01, 67131.76it/s] 86%|████████▌ | 475467/552076 [00:07<00:01, 66941.84it/s] 87%|████████▋ | 482164/552076 [00:07<00:01, 66860.76it/s] 89%|████████▊ | 488852/552076 [00:07<00:00, 66518.45it/s] 90%|████████▉ | 495527/552076 [00:07<00:00, 66586.96it/s] 91%|█████████ | 502266/552076 [00:07<00:00, 66824.59it/s] 92%|█████████▏| 508950/552076 [00:07<00:00, 66073.91it/s] 93%|█████████▎| 515622/552076 [00:07<00:00, 66264.74it/s] 95%|█████████▍| 522408/552076 [00:07<00:00, 66733.67it/s] 96%|█████████▌| 529084/552076 [00:07<00:00, 66415.89it/s] 97%|█████████▋| 535866/552076 [00:07<00:00, 66829.02it/s] 98%|█████████▊| 542551/552076 [00:08<00:00, 66766.91it/s] 99%|█████████▉| 549230/552076 [00:08<00:00, 66170.70it/s]100%|██████████| 552076/552076 [00:08<00:00, 67225.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6620/552076 [00:00<00:08, 66196.75it/s]  2%|▏         | 13281/552076 [00:00<00:08, 66317.98it/s]  4%|▎         | 19843/552076 [00:00<00:08, 66104.58it/s]  5%|▍         | 26633/552076 [00:00<00:07, 66632.85it/s]  6%|▌         | 33463/552076 [00:00<00:07, 67123.32it/s]  7%|▋         | 40253/552076 [00:00<00:07, 67352.51it/s]  9%|▊         | 47081/552076 [00:00<00:07, 67626.11it/s] 10%|▉         | 53905/552076 [00:00<00:07, 67808.89it/s] 11%|█         | 60773/552076 [00:00<00:07, 68065.07it/s] 12%|█▏        | 67608/552076 [00:01<00:07, 68150.22it/s] 13%|█▎        | 74447/552076 [00:01<00:07, 68220.34it/s] 15%|█▍        | 81311/552076 [00:01<00:06, 68345.38it/s] 16%|█▌        | 88168/552076 [00:01<00:06, 68412.53it/s] 17%|█▋        | 94988/552076 [00:01<00:06, 68346.74it/s] 18%|█▊        | 101778/552076 [00:01<00:07, 63350.78it/s] 20%|█▉        | 108155/552076 [00:01<00:07, 59966.57it/s] 21%|██        | 114219/552076 [00:01<00:08, 50860.47it/s] 22%|██▏       | 119590/552076 [00:01<00:08, 50785.02it/s] 23%|██▎       | 125517/552076 [00:02<00:08, 51979.22it/s] 24%|██▎       | 130862/552076 [00:02<00:09, 45648.17it/s] 25%|██▍       | 137596/552076 [00:02<00:08, 50529.41it/s] 26%|██▌       | 142982/552076 [00:02<00:08, 50270.17it/s] 27%|██▋       | 149537/552076 [00:02<00:07, 54048.29it/s] 28%|██▊       | 155403/552076 [00:02<00:07, 55155.28it/s] 29%|██▉       | 161095/552076 [00:02<00:07, 50268.92it/s] 30%|███       | 167423/552076 [00:02<00:07, 53572.72it/s] 31%|███▏      | 172985/552076 [00:02<00:08, 45903.98it/s] 32%|███▏      | 178667/552076 [00:03<00:07, 48710.45it/s] 33%|███▎      | 183947/552076 [00:03<00:07, 49626.07it/s] 34%|███▍      | 189111/552076 [00:03<00:08, 44563.33it/s] 35%|███▌      | 195598/552076 [00:03<00:07, 49181.16it/s] 36%|███▋      | 200831/552076 [00:03<00:07, 49787.35it/s] 37%|███▋      | 206647/552076 [00:03<00:06, 50613.46it/s] 38%|███▊      | 211867/552076 [00:03<00:07, 45186.48it/s] 40%|███▉      | 218440/552076 [00:03<00:06, 49860.19it/s] 41%|████      | 225032/552076 [00:03<00:06, 53790.78it/s] 42%|████▏     | 231511/552076 [00:04<00:05, 56675.22it/s] 43%|████▎     | 237430/552076 [00:04<00:05, 54422.61it/s] 44%|████▍     | 243809/552076 [00:04<00:05, 56830.85it/s] 45%|████▌     | 249657/552076 [00:04<00:05, 55922.31it/s] 46%|████▋     | 256181/552076 [00:04<00:05, 58425.33it/s] 48%|████▊     | 262807/552076 [00:04<00:04, 60573.02it/s] 49%|████▊     | 268963/552076 [00:04<00:04, 58259.17it/s] 50%|████▉     | 274986/552076 [00:04<00:04, 58836.06it/s] 51%|█████     | 281574/552076 [00:04<00:04, 60785.38it/s] 52%|█████▏    | 288381/552076 [00:05<00:04, 62800.93it/s] 53%|█████▎    | 295197/552076 [00:05<00:03, 64316.40it/s] 55%|█████▍    | 301991/552076 [00:05<00:03, 65360.54it/s] 56%|█████▌    | 308811/552076 [00:05<00:03, 66185.42it/s] 57%|█████▋    | 315572/552076 [00:05<00:03, 66603.65it/s] 58%|█████▊    | 322386/552076 [00:05<00:03, 67056.12it/s] 60%|█████▉    | 329192/552076 [00:05<00:03, 67353.70it/s] 61%|██████    | 335939/552076 [00:05<00:03, 66474.03it/s] 62%|██████▏   | 342757/552076 [00:05<00:03, 66976.67it/s] 63%|██████▎   | 349556/552076 [00:05<00:03, 67275.07it/s] 65%|██████▍   | 356385/552076 [00:06<00:02, 67576.34it/s] 66%|██████▌   | 363148/552076 [00:06<00:02, 66735.78it/s] 67%|██████▋   | 370455/552076 [00:06<00:02, 68516.62it/s] 68%|██████▊   | 377508/552076 [00:06<00:02, 69108.29it/s] 70%|██████▉   | 384432/552076 [00:06<00:02, 68915.37it/s] 71%|███████   | 391333/552076 [00:06<00:02, 67687.50it/s] 72%|███████▏  | 398173/552076 [00:06<00:02, 67898.70it/s] 73%|███████▎  | 405027/552076 [00:06<00:02, 68086.80it/s] 75%|███████▍  | 411878/552076 [00:06<00:02, 68210.85it/s] 76%|███████▌  | 418704/552076 [00:06<00:01, 68053.72it/s] 77%|███████▋  | 425513/552076 [00:07<00:01, 67282.22it/s] 78%|███████▊  | 432246/552076 [00:07<00:01, 67124.68it/s] 80%|███████▉  | 438962/552076 [00:07<00:01, 66742.60it/s] 81%|████████  | 445653/552076 [00:07<00:01, 66789.89it/s] 82%|████████▏ | 452334/552076 [00:07<00:01, 65544.89it/s] 83%|████████▎ | 458907/552076 [00:07<00:01, 65598.84it/s] 84%|████████▍ | 465908/552076 [00:07<00:01, 66861.84it/s] 86%|████████▌ | 472699/552076 [00:07<00:01, 67169.95it/s] 87%|████████▋ | 479447/552076 [00:07<00:01, 67260.14it/s] 88%|████████▊ | 486178/552076 [00:07<00:00, 66928.80it/s] 89%|████████▉ | 492889/552076 [00:08<00:00, 66981.12it/s] 91%|█████████ | 499687/552076 [00:08<00:00, 67276.56it/s] 92%|█████████▏| 506417/552076 [00:08<00:00, 66576.59it/s] 93%|█████████▎| 513130/552076 [00:08<00:00, 66739.77it/s] 94%|█████████▍| 519866/552076 [00:08<00:00, 66923.52it/s] 95%|█████████▌| 526664/552076 [00:08<00:00, 67235.02it/s] 97%|█████████▋| 533390/552076 [00:08<00:00, 67238.30it/s] 98%|█████████▊| 540155/552076 [00:08<00:00, 67360.68it/s] 99%|█████████▉| 546892/552076 [00:08<00:00, 66700.37it/s]100%|██████████| 552076/552076 [00:08<00:00, 61745.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11983/552076 [00:00<00:04, 119824.40it/s]  4%|▍         | 23733/552076 [00:00<00:04, 119117.17it/s]  6%|▌         | 33470/552076 [00:00<00:04, 111634.36it/s]  7%|▋         | 40620/552076 [00:00<00:05, 92449.33it/s]   9%|▉         | 48756/552076 [00:00<00:05, 88817.41it/s] 11%|█         | 58873/552076 [00:00<00:05, 92193.66it/s] 13%|█▎        | 70331/552076 [00:00<00:04, 97931.87it/s] 14%|█▍        | 79485/552076 [00:00<00:05, 87526.28it/s] 16%|█▌        | 87997/552076 [00:00<00:06, 76007.54it/s] 18%|█▊        | 100231/552076 [00:01<00:05, 85749.59it/s] 20%|██        | 112269/552076 [00:01<00:04, 93848.20it/s] 22%|██▏       | 122224/552076 [00:01<00:04, 92617.98it/s] 24%|██▍       | 134183/552076 [00:01<00:04, 99338.78it/s] 26%|██▋       | 145913/552076 [00:01<00:03, 104119.89it/s] 28%|██▊       | 156679/552076 [00:01<00:04, 96421.34it/s]  30%|███       | 166682/552076 [00:01<00:04, 79499.73it/s] 32%|███▏      | 178887/552076 [00:01<00:04, 88784.37it/s] 34%|███▍      | 189167/552076 [00:02<00:03, 92569.85it/s] 36%|███▋      | 200627/552076 [00:02<00:03, 98234.91it/s] 38%|███▊      | 212083/552076 [00:02<00:03, 102620.07it/s] 41%|████      | 224300/552076 [00:02<00:03, 107794.63it/s] 43%|████▎     | 236067/552076 [00:02<00:02, 110576.43it/s] 45%|████▍     | 248360/552076 [00:02<00:02, 114011.23it/s] 47%|████▋     | 260617/552076 [00:02<00:02, 116449.75it/s] 49%|████▉     | 273023/552076 [00:02<00:02, 118631.52it/s] 52%|█████▏    | 285463/552076 [00:02<00:02, 120302.81it/s] 54%|█████▍    | 297861/552076 [00:02<00:02, 121381.70it/s] 56%|█████▌    | 310288/552076 [00:03<00:01, 122232.14it/s] 58%|█████▊    | 322685/552076 [00:03<00:01, 122746.57it/s] 61%|██████    | 334995/552076 [00:03<00:01, 121471.07it/s] 63%|██████▎   | 347170/552076 [00:03<00:01, 121334.92it/s] 65%|██████▌   | 359323/552076 [00:03<00:01, 119491.18it/s] 67%|██████▋   | 371656/552076 [00:03<00:01, 120616.69it/s] 70%|██████▉   | 384040/552076 [00:03<00:01, 121563.74it/s] 72%|███████▏  | 396531/552076 [00:03<00:01, 122547.99it/s] 74%|███████▍  | 408905/552076 [00:03<00:01, 122902.33it/s] 76%|███████▋  | 421392/552076 [00:03<00:01, 123484.47it/s] 79%|███████▊  | 433749/552076 [00:04<00:00, 123507.59it/s] 81%|████████  | 446105/552076 [00:04<00:01, 98052.22it/s]  83%|████████▎ | 456740/552076 [00:04<00:01, 68786.15it/s] 85%|████████▍ | 469026/552076 [00:04<00:01, 79249.77it/s] 87%|████████▋ | 478775/552076 [00:04<00:00, 82457.43it/s] 89%|████████▉ | 490930/552076 [00:04<00:00, 91262.67it/s] 91%|█████████ | 502579/552076 [00:04<00:00, 96022.59it/s] 93%|█████████▎| 513094/552076 [00:05<00:00, 89669.69it/s] 95%|█████████▌| 524595/552076 [00:05<00:00, 96014.79it/s] 97%|█████████▋| 534829/552076 [00:05<00:00, 82717.07it/s] 99%|█████████▉| 545323/552076 [00:05<00:00, 87658.58it/s]100%|██████████| 552076/552076 [00:05<00:00, 101493.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11939/552076 [00:00<00:04, 119385.28it/s]  4%|▍         | 23287/552076 [00:00<00:04, 117549.93it/s]  6%|▋         | 35421/552076 [00:00<00:04, 118661.72it/s]  9%|▊         | 47687/552076 [00:00<00:04, 119832.76it/s] 11%|█         | 59072/552076 [00:00<00:04, 117971.31it/s] 13%|█▎        | 71348/552076 [00:00<00:04, 119366.76it/s] 15%|█▌        | 83477/552076 [00:00<00:03, 119937.25it/s] 17%|█▋        | 94497/552076 [00:00<00:03, 116691.96it/s] 19%|█▉        | 105504/552076 [00:00<00:04, 111502.71it/s] 21%|██        | 116488/552076 [00:01<00:03, 110996.58it/s] 23%|██▎       | 128635/552076 [00:01<00:03, 113942.51it/s] 26%|██▌       | 140824/552076 [00:01<00:03, 116213.74it/s] 28%|██▊       | 152682/552076 [00:01<00:03, 116912.93it/s] 30%|██▉       | 164754/552076 [00:01<00:03, 118027.82it/s] 32%|███▏      | 177020/552076 [00:01<00:03, 119377.94it/s] 34%|███▍      | 189301/552076 [00:01<00:03, 120386.86it/s] 36%|███▋      | 201318/552076 [00:01<00:02, 119284.25it/s] 39%|███▊      | 213234/552076 [00:01<00:02, 119065.37it/s] 41%|████      | 225611/552076 [00:01<00:02, 120438.47it/s] 43%|████▎     | 237653/552076 [00:02<00:02, 105986.79it/s] 45%|████▌     | 249959/552076 [00:02<00:02, 110588.61it/s] 47%|████▋     | 262095/552076 [00:02<00:02, 113613.19it/s] 50%|████▉     | 274315/552076 [00:02<00:02, 116059.12it/s] 52%|█████▏    | 286082/552076 [00:02<00:02, 115807.73it/s] 54%|█████▍    | 297776/552076 [00:02<00:02, 115757.00it/s] 56%|█████▌    | 309891/552076 [00:02<00:02, 117323.35it/s] 58%|█████▊    | 322153/552076 [00:02<00:01, 118860.90it/s] 61%|██████    | 334416/552076 [00:02<00:01, 119965.26it/s] 63%|██████▎   | 346448/552076 [00:02<00:01, 114668.39it/s] 65%|██████▍   | 357990/552076 [00:03<00:01, 111029.46it/s] 67%|██████▋   | 369170/552076 [00:03<00:01, 109363.09it/s] 69%|██████▉   | 380648/552076 [00:03<00:01, 110932.59it/s] 71%|███████   | 392336/552076 [00:03<00:01, 112651.14it/s] 73%|███████▎  | 404615/552076 [00:03<00:01, 115509.91it/s] 75%|███████▌  | 416212/552076 [00:03<00:01, 112562.79it/s] 77%|███████▋  | 427517/552076 [00:03<00:01, 107231.42it/s] 80%|███████▉  | 439766/552076 [00:03<00:01, 111393.64it/s] 82%|████████▏ | 451585/552076 [00:03<00:00, 113347.20it/s] 84%|████████▍ | 464889/552076 [00:04<00:00, 118613.88it/s] 86%|████████▋ | 476871/552076 [00:04<00:00, 109510.24it/s] 89%|████████▉ | 490094/552076 [00:04<00:00, 115459.92it/s] 91%|█████████ | 502341/552076 [00:04<00:00, 117476.35it/s] 93%|█████████▎| 514267/552076 [00:04<00:00, 107223.83it/s] 95%|█████████▌| 525288/552076 [00:04<00:00, 102522.44it/s] 97%|█████████▋| 535793/552076 [00:04<00:00, 93730.99it/s]  99%|█████████▉| 545490/552076 [00:04<00:00, 88711.66it/s]100%|██████████| 552076/552076 [00:04<00:00, 112310.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11494/552076 [00:00<00:04, 114938.19it/s]  4%|▍         | 23738/552076 [00:00<00:04, 117088.35it/s]  6%|▋         | 35414/552076 [00:00<00:04, 116987.26it/s]  9%|▉         | 50043/552076 [00:00<00:04, 124464.06it/s] 11%|█         | 61587/552076 [00:00<00:04, 121609.11it/s] 13%|█▎        | 73814/552076 [00:00<00:03, 121805.88it/s] 16%|█▌        | 85988/552076 [00:00<00:03, 121785.18it/s] 18%|█▊        | 98309/552076 [00:00<00:03, 122208.93it/s] 20%|██        | 110607/552076 [00:00<00:03, 122437.18it/s] 22%|██▏       | 122414/552076 [00:01<00:04, 99497.69it/s]  24%|██▍       | 132756/552076 [00:01<00:04, 98289.16it/s] 26%|██▋       | 145177/552076 [00:01<00:03, 104853.43it/s] 28%|██▊       | 157278/552076 [00:01<00:03, 109228.25it/s] 31%|███       | 169184/552076 [00:01<00:03, 112000.64it/s] 33%|███▎      | 180590/552076 [00:01<00:03, 96366.60it/s]  35%|███▍      | 191518/552076 [00:01<00:03, 99908.16it/s] 37%|███▋      | 201912/552076 [00:01<00:03, 97001.80it/s] 39%|███▊      | 213705/552076 [00:01<00:03, 102456.17it/s] 41%|████      | 224244/552076 [00:02<00:03, 98741.02it/s]  42%|████▏     | 234352/552076 [00:02<00:03, 91422.75it/s] 44%|████▍     | 245537/552076 [00:02<00:03, 96721.51it/s] 46%|████▋     | 255483/552076 [00:02<00:03, 94026.25it/s] 48%|████▊     | 267534/552076 [00:02<00:02, 100661.27it/s] 51%|█████     | 279318/552076 [00:02<00:02, 105263.14it/s] 53%|█████▎    | 290879/552076 [00:02<00:02, 108164.72it/s] 55%|█████▍    | 303437/552076 [00:02<00:02, 112859.27it/s] 57%|█████▋    | 315150/552076 [00:02<00:02, 114104.67it/s] 59%|█████▉    | 326696/552076 [00:03<00:03, 71142.84it/s]  61%|██████    | 335915/552076 [00:03<00:03, 58518.19it/s] 63%|██████▎   | 348028/552076 [00:03<00:02, 69257.59it/s] 65%|██████▌   | 360221/552076 [00:03<00:02, 79569.51it/s] 67%|██████▋   | 372552/552076 [00:03<00:02, 89044.36it/s] 70%|██████▉   | 384959/552076 [00:03<00:01, 97281.84it/s] 72%|███████▏  | 397159/552076 [00:03<00:01, 103575.79it/s] 74%|███████▍  | 409258/552076 [00:04<00:01, 108249.91it/s] 76%|███████▋  | 421652/552076 [00:04<00:01, 112523.23it/s] 79%|███████▊  | 434009/552076 [00:04<00:01, 115621.49it/s] 81%|████████  | 446357/552076 [00:04<00:00, 117870.79it/s] 83%|████████▎ | 458632/552076 [00:04<00:00, 119292.46it/s] 85%|████████▌ | 470804/552076 [00:04<00:00, 112675.80it/s] 87%|████████▋ | 482317/552076 [00:04<00:00, 111187.11it/s] 90%|████████▉ | 494549/552076 [00:04<00:00, 114307.79it/s] 92%|█████████▏| 506879/552076 [00:04<00:00, 116862.00it/s] 94%|█████████▍| 519021/552076 [00:04<00:00, 118191.77it/s] 96%|█████████▋| 531459/552076 [00:05<00:00, 119982.56it/s] 99%|█████████▊| 543959/552076 [00:05<00:00, 121443.66it/s]100%|██████████| 552076/552076 [00:05<00:00, 105546.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12855/552076 [00:00<00:04, 128539.09it/s]  4%|▍         | 23654/552076 [00:00<00:04, 121596.52it/s]  6%|▋         | 35567/552076 [00:00<00:04, 120844.80it/s]  9%|▊         | 47844/552076 [00:00<00:04, 121413.28it/s] 11%|█         | 59429/552076 [00:00<00:04, 119686.72it/s] 13%|█▎        | 71714/552076 [00:00<00:03, 120617.99it/s] 15%|█▌        | 84187/552076 [00:00<00:03, 121820.15it/s] 17%|█▋        | 96401/552076 [00:00<00:03, 121915.79it/s] 20%|█▉        | 108656/552076 [00:00<00:03, 122105.23it/s] 22%|██▏       | 120996/552076 [00:01<00:03, 122487.96it/s] 24%|██▍       | 133172/552076 [00:01<00:03, 122265.97it/s] 26%|██▋       | 145572/552076 [00:01<00:03, 122779.71it/s] 29%|██▊       | 157805/552076 [00:01<00:03, 122643.08it/s] 31%|███       | 170103/552076 [00:01<00:03, 122742.68it/s] 33%|███▎      | 182324/552076 [00:01<00:03, 122581.28it/s] 35%|███▌      | 194623/552076 [00:01<00:02, 122702.95it/s] 37%|███▋      | 206852/552076 [00:01<00:02, 121514.12it/s] 40%|███▉      | 219128/552076 [00:01<00:02, 121883.35it/s] 42%|████▏     | 231754/552076 [00:01<00:02, 123162.04it/s] 44%|████▍     | 244374/552076 [00:02<00:02, 124057.03it/s] 47%|████▋     | 256903/552076 [00:02<00:02, 124422.37it/s] 49%|████▉     | 269342/552076 [00:02<00:02, 119812.02it/s] 51%|█████     | 281358/552076 [00:02<00:02, 115965.79it/s] 53%|█████▎    | 293006/552076 [00:02<00:02, 96563.06it/s]  55%|█████▌    | 303994/552076 [00:02<00:02, 100205.08it/s] 57%|█████▋    | 316229/552076 [00:02<00:02, 105956.77it/s] 59%|█████▉    | 327888/552076 [00:02<00:02, 107522.85it/s] 61%|██████▏   | 338925/552076 [00:02<00:02, 106407.24it/s] 63%|██████▎   | 349768/552076 [00:03<00:01, 105215.17it/s] 65%|██████▌   | 360434/552076 [00:03<00:02, 78642.35it/s]  67%|██████▋   | 369385/552076 [00:03<00:02, 66648.65it/s] 68%|██████▊   | 377125/552076 [00:03<00:02, 65261.98it/s] 70%|██████▉   | 384411/552076 [00:03<00:02, 66665.61it/s] 72%|███████▏  | 396598/552076 [00:03<00:02, 77149.69it/s] 74%|███████▍  | 407926/552076 [00:03<00:01, 85312.64it/s] 76%|███████▌  | 419425/552076 [00:03<00:01, 92471.52it/s] 78%|███████▊  | 431015/552076 [00:04<00:01, 98439.36it/s] 80%|████████  | 443270/552076 [00:04<00:01, 104613.50it/s] 83%|████████▎ | 455625/552076 [00:04<00:00, 109655.11it/s] 85%|████████▍ | 468063/552076 [00:04<00:00, 113692.98it/s] 87%|████████▋ | 480506/552076 [00:04<00:00, 116712.27it/s] 89%|████████▉ | 492845/552076 [00:04<00:00, 118636.35it/s] 91%|█████████▏| 504914/552076 [00:04<00:00, 112435.45it/s] 94%|█████████▎| 516369/552076 [00:04<00:00, 110305.80it/s] 96%|█████████▌| 528714/552076 [00:04<00:00, 113944.37it/s] 98%|█████████▊| 540999/552076 [00:04<00:00, 116475.21it/s]100%|██████████| 552076/552076 [00:05<00:00, 109162.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13275/552076 [00:00<00:04, 132748.23it/s]  5%|▌         | 28571/552076 [00:00<00:03, 138224.57it/s]  7%|▋         | 40509/552076 [00:00<00:03, 131973.97it/s] 10%|▉         | 52601/552076 [00:00<00:03, 128450.79it/s] 12%|█▏        | 64753/552076 [00:00<00:03, 126287.06it/s] 14%|█▍        | 76924/552076 [00:00<00:03, 124877.87it/s] 16%|█▌        | 89197/552076 [00:00<00:03, 124225.51it/s] 18%|█▊        | 101324/552076 [00:00<00:03, 123321.37it/s] 21%|██        | 113743/552076 [00:00<00:03, 123578.60it/s] 23%|██▎       | 126200/552076 [00:01<00:03, 123873.34it/s] 25%|██▌       | 138700/552076 [00:01<00:03, 124208.97it/s] 27%|██▋       | 151151/552076 [00:01<00:03, 124297.21it/s] 30%|██▉       | 163459/552076 [00:01<00:03, 123926.97it/s] 32%|███▏      | 175729/552076 [00:01<00:03, 122860.99it/s] 34%|███▍      | 187931/552076 [00:01<00:02, 122131.51it/s] 36%|███▌      | 200087/552076 [00:01<00:03, 107120.95it/s] 38%|███▊      | 211595/552076 [00:01<00:03, 109388.27it/s] 41%|████      | 223930/552076 [00:01<00:02, 113230.98it/s] 43%|████▎     | 236310/552076 [00:01<00:02, 116204.99it/s] 45%|████▌     | 248744/552076 [00:02<00:02, 118530.15it/s] 47%|████▋     | 261155/552076 [00:02<00:02, 120148.32it/s] 50%|████▉     | 273620/552076 [00:02<00:02, 121461.72it/s] 52%|█████▏    | 286073/552076 [00:02<00:02, 122366.16it/s] 54%|█████▍    | 298357/552076 [00:02<00:02, 121534.83it/s] 56%|█████▋    | 310660/552076 [00:02<00:01, 121978.03it/s] 58%|█████▊    | 322882/552076 [00:02<00:02, 113035.59it/s] 61%|██████    | 334334/552076 [00:02<00:02, 92284.76it/s]  63%|██████▎   | 345967/552076 [00:02<00:02, 98384.39it/s] 65%|██████▍   | 358243/552076 [00:03<00:01, 104614.63it/s] 67%|██████▋   | 370493/552076 [00:03<00:01, 109404.75it/s] 69%|██████▉   | 382883/552076 [00:03<00:01, 113382.94it/s] 72%|███████▏  | 395315/552076 [00:03<00:01, 116455.85it/s] 74%|███████▍  | 407755/552076 [00:03<00:01, 118727.76it/s] 76%|███████▌  | 420191/552076 [00:03<00:01, 120362.16it/s] 78%|███████▊  | 432368/552076 [00:03<00:00, 120046.21it/s] 81%|████████  | 444800/552076 [00:03<00:00, 121294.84it/s] 83%|████████▎ | 457210/552076 [00:03<00:00, 122122.84it/s] 85%|████████▌ | 469565/552076 [00:03<00:00, 122545.12it/s] 87%|████████▋ | 481877/552076 [00:04<00:00, 122715.74it/s] 90%|████████▉ | 494220/552076 [00:04<00:00, 122928.48it/s] 92%|█████████▏| 506701/552076 [00:04<00:00, 123485.42it/s] 94%|█████████▍| 519063/552076 [00:04<00:00, 123499.32it/s] 96%|█████████▋| 531527/552076 [00:04<00:00, 123836.63it/s] 99%|█████████▊| 543955/552076 [00:04<00:00, 123966.69it/s]100%|██████████| 552076/552076 [00:04<00:00, 119380.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12305/552076 [00:00<00:04, 123042.78it/s]  4%|▍         | 24484/552076 [00:00<00:04, 122663.93it/s]  7%|▋         | 36736/552076 [00:00<00:04, 122617.94it/s]  9%|▉         | 48983/552076 [00:00<00:04, 122573.21it/s] 11%|█         | 61148/552076 [00:00<00:04, 122294.02it/s] 13%|█▎        | 73388/552076 [00:00<00:03, 122322.86it/s] 16%|█▌        | 85813/552076 [00:00<00:03, 122894.55it/s] 18%|█▊        | 98154/552076 [00:00<00:03, 123046.93it/s] 20%|██        | 110586/552076 [00:00<00:03, 123423.51it/s] 22%|██▏       | 123052/552076 [00:01<00:03, 123789.89it/s] 25%|██▍       | 135459/552076 [00:01<00:03, 123872.14it/s] 27%|██▋       | 147893/552076 [00:01<00:03, 124011.10it/s] 29%|██▉       | 160343/552076 [00:01<00:03, 124155.37it/s] 31%|███▏      | 172640/552076 [00:01<00:03, 122343.30it/s] 34%|███▎      | 185103/552076 [00:01<00:02, 123019.18it/s] 36%|███▌      | 197513/552076 [00:01<00:02, 123339.29it/s] 38%|███▊      | 209829/552076 [00:01<00:02, 123283.89it/s] 40%|████      | 222225/552076 [00:01<00:02, 123485.63it/s] 43%|████▎     | 234662/552076 [00:01<00:02, 123749.30it/s] 45%|████▍     | 247138/552076 [00:02<00:02, 124048.88it/s] 47%|████▋     | 259535/552076 [00:02<00:02, 123450.60it/s] 49%|████▉     | 271875/552076 [00:02<00:02, 121878.94it/s] 51%|█████▏    | 284243/552076 [00:02<00:02, 122413.33it/s] 54%|█████▎    | 296486/552076 [00:02<00:02, 113267.51it/s] 56%|█████▌    | 308214/552076 [00:02<00:02, 114442.00it/s] 58%|█████▊    | 319757/552076 [00:02<00:02, 96354.41it/s]  60%|██████    | 331279/552076 [00:02<00:02, 100054.58it/s] 62%|██████▏   | 341711/552076 [00:02<00:02, 83377.05it/s]  64%|██████▍   | 352523/552076 [00:03<00:02, 89521.35it/s] 66%|██████▌   | 364848/552076 [00:03<00:01, 97527.48it/s] 68%|██████▊   | 377290/552076 [00:03<00:01, 104288.28it/s] 70%|███████   | 388323/552076 [00:03<00:01, 93046.51it/s]  72%|███████▏  | 398276/552076 [00:03<00:01, 94254.33it/s] 74%|███████▍  | 410729/552076 [00:03<00:01, 101668.65it/s] 77%|███████▋  | 423233/552076 [00:03<00:01, 107706.64it/s] 79%|███████▉  | 435665/552076 [00:03<00:01, 112202.52it/s] 81%|████████  | 447490/552076 [00:03<00:00, 113448.83it/s] 83%|████████▎ | 459087/552076 [00:04<00:01, 91229.66it/s]  85%|████████▍ | 469084/552076 [00:04<00:01, 81634.60it/s] 87%|████████▋ | 478564/552076 [00:04<00:00, 85182.39it/s] 89%|████████▉ | 490770/552076 [00:04<00:00, 93672.32it/s] 91%|█████████ | 502513/552076 [00:04<00:00, 99724.70it/s] 93%|█████████▎| 514897/552076 [00:04<00:00, 105910.88it/s] 95%|█████████▌| 526000/552076 [00:04<00:00, 99105.40it/s]  97%|█████████▋| 538098/552076 [00:04<00:00, 104789.19it/s] 99%|█████████▉| 548978/552076 [00:05<00:00, 85118.10it/s] 100%|██████████| 552076/552076 [00:05<00:00, 108003.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11811/552076 [00:00<00:04, 118105.89it/s]  4%|▍         | 23656/552076 [00:00<00:04, 118207.68it/s]  6%|▋         | 35813/552076 [00:00<00:04, 119195.55it/s]  9%|▊         | 47959/552076 [00:00<00:04, 119864.06it/s] 11%|█         | 60207/552076 [00:00<00:04, 120635.02it/s] 13%|█▎        | 72499/552076 [00:00<00:03, 121309.44it/s] 15%|█▌        | 84844/552076 [00:00<00:03, 121942.60it/s] 18%|█▊        | 97169/552076 [00:00<00:03, 122330.11it/s] 20%|█▉        | 108951/552076 [00:00<00:03, 120938.61it/s] 22%|██▏       | 121402/552076 [00:01<00:03, 121985.54it/s] 24%|██▍       | 133766/552076 [00:01<00:03, 122476.38it/s] 26%|██▋       | 146230/552076 [00:01<00:03, 123116.79it/s] 29%|██▊       | 158598/552076 [00:01<00:03, 123282.87it/s] 31%|███       | 171023/552076 [00:01<00:03, 123570.58it/s] 33%|███▎      | 183416/552076 [00:01<00:02, 123677.34it/s] 35%|███▌      | 195811/552076 [00:01<00:02, 123758.87it/s] 38%|███▊      | 208149/552076 [00:01<00:02, 123341.58it/s] 40%|███▉      | 220575/552076 [00:01<00:02, 123615.18it/s] 42%|████▏     | 233047/552076 [00:01<00:02, 123943.72it/s] 44%|████▍     | 245474/552076 [00:02<00:02, 124039.42it/s] 47%|████▋     | 257870/552076 [00:02<00:02, 123841.04it/s] 49%|████▉     | 270249/552076 [00:02<00:02, 123747.32it/s] 51%|█████     | 282620/552076 [00:02<00:02, 121801.10it/s] 53%|█████▎    | 294925/552076 [00:02<00:02, 122172.35it/s] 56%|█████▌    | 307368/552076 [00:02<00:01, 122838.26it/s] 58%|█████▊    | 319710/552076 [00:02<00:01, 123011.54it/s] 60%|██████    | 332014/552076 [00:02<00:01, 120502.47it/s] 62%|██████▏   | 344078/552076 [00:02<00:01, 119435.01it/s] 65%|██████▍   | 356452/552076 [00:02<00:01, 120693.24it/s] 67%|██████▋   | 368802/552076 [00:03<00:01, 121521.39it/s] 69%|██████▉   | 381142/552076 [00:03<00:01, 122076.21it/s] 71%|███████▏  | 393427/552076 [00:03<00:01, 122307.09it/s] 73%|███████▎  | 405713/552076 [00:03<00:01, 122469.95it/s] 76%|███████▌  | 417964/552076 [00:03<00:01, 122167.58it/s] 78%|███████▊  | 430372/552076 [00:03<00:00, 122732.87it/s] 80%|████████  | 442648/552076 [00:03<00:00, 114423.03it/s] 82%|████████▏ | 454992/552076 [00:03<00:00, 116984.20it/s] 85%|████████▍ | 467408/552076 [00:03<00:00, 119045.73it/s] 87%|████████▋ | 479820/552076 [00:03<00:00, 120522.93it/s] 89%|████████▉ | 492251/552076 [00:04<00:00, 121632.42it/s] 91%|█████████▏| 504640/552076 [00:04<00:00, 122300.96it/s] 94%|█████████▎| 517079/552076 [00:04<00:00, 122919.43it/s] 96%|█████████▌| 529535/552076 [00:04<00:00, 123404.72it/s] 98%|█████████▊| 541983/552076 [00:04<00:00, 123723.45it/s]100%|██████████| 552076/552076 [00:04<00:00, 122042.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11573/552076 [00:00<00:04, 115723.21it/s]  4%|▍         | 23479/552076 [00:00<00:04, 116701.61it/s]  6%|▌         | 32885/552076 [00:00<00:04, 108838.56it/s]  8%|▊         | 44477/552076 [00:00<00:04, 110868.89it/s] 10%|▉         | 52871/552076 [00:00<00:05, 88354.65it/s]  11%|█         | 60545/552076 [00:00<00:06, 76278.41it/s] 12%|█▏        | 67652/552076 [00:00<00:06, 72141.55it/s] 14%|█▎        | 74548/552076 [00:00<00:07, 65309.35it/s] 15%|█▍        | 82745/552076 [00:01<00:06, 69549.88it/s] 17%|█▋        | 94839/552076 [00:01<00:05, 79710.69it/s] 19%|█▉        | 103906/552076 [00:01<00:05, 82323.18it/s] 20%|██        | 112531/552076 [00:01<00:05, 82611.84it/s] 22%|██▏       | 123666/552076 [00:01<00:04, 89544.51it/s] 24%|██▍       | 132982/552076 [00:01<00:04, 84591.75it/s] 26%|██▌       | 144186/552076 [00:01<00:04, 90409.68it/s] 28%|██▊       | 153555/552076 [00:01<00:04, 91057.56it/s] 30%|██▉       | 164756/552076 [00:01<00:04, 96470.31it/s] 32%|███▏      | 174701/552076 [00:01<00:03, 97345.05it/s] 33%|███▎      | 184917/552076 [00:02<00:03, 98738.29it/s] 35%|███▌      | 194919/552076 [00:02<00:04, 88707.86it/s] 38%|███▊      | 207103/552076 [00:02<00:03, 96587.21it/s] 40%|███▉      | 219333/552076 [00:02<00:03, 103088.78it/s] 42%|████▏     | 231643/552076 [00:02<00:02, 108371.83it/s] 44%|████▍     | 243310/552076 [00:02<00:02, 110732.56it/s] 46%|████▋     | 255710/552076 [00:02<00:02, 114404.07it/s] 48%|████▊     | 267364/552076 [00:02<00:02, 114793.48it/s] 51%|█████     | 279748/552076 [00:02<00:02, 117364.54it/s] 53%|█████▎    | 292098/552076 [00:02<00:02, 119138.67it/s] 55%|█████▌    | 304558/552076 [00:03<00:02, 120724.83it/s] 57%|█████▋    | 316928/552076 [00:03<00:01, 121600.82it/s] 60%|█████▉    | 329314/552076 [00:03<00:01, 122267.67it/s] 62%|██████▏   | 341576/552076 [00:03<00:01, 120649.21it/s] 64%|██████▍   | 353865/552076 [00:03<00:01, 121311.06it/s] 66%|██████▋   | 366206/552076 [00:03<00:01, 121930.74it/s] 69%|██████▊   | 378678/552076 [00:03<00:01, 122752.98it/s] 71%|███████   | 391107/552076 [00:03<00:01, 123208.80it/s] 73%|███████▎  | 403437/552076 [00:03<00:01, 121104.00it/s] 75%|███████▌  | 415789/552076 [00:03<00:01, 121817.14it/s] 78%|███████▊  | 428165/552076 [00:04<00:01, 122392.21it/s] 80%|███████▉  | 440558/552076 [00:04<00:00, 122849.30it/s] 82%|████████▏ | 452942/552076 [00:04<00:00, 123142.34it/s] 84%|████████▍ | 465305/552076 [00:04<00:00, 123284.84it/s] 87%|████████▋ | 477655/552076 [00:04<00:00, 123348.90it/s] 89%|████████▉ | 490023/552076 [00:04<00:00, 123444.03it/s] 91%|█████████ | 502423/552076 [00:04<00:00, 123608.48it/s] 93%|█████████▎| 514786/552076 [00:04<00:00, 123550.82it/s] 95%|█████████▌| 527142/552076 [00:04<00:00, 117741.94it/s] 98%|█████████▊| 539542/552076 [00:05<00:00, 119550.64it/s]100%|█████████▉| 551904/552076 [00:05<00:00, 120740.71it/s]100%|██████████| 552076/552076 [00:05<00:00, 107894.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11940/552076 [00:00<00:04, 119398.98it/s]  4%|▍         | 23859/552076 [00:00<00:04, 119333.33it/s]  6%|▋         | 34592/552076 [00:00<00:04, 115454.46it/s]  8%|▊         | 46682/552076 [00:00<00:04, 113152.02it/s] 10%|█         | 56128/552076 [00:00<00:04, 106808.89it/s] 12%|█▏        | 68471/552076 [00:00<00:04, 111305.08it/s] 14%|█▍        | 79943/552076 [00:00<00:04, 112307.03it/s] 16%|█▋        | 90341/552076 [00:00<00:04, 107161.99it/s] 18%|█▊        | 100477/552076 [00:00<00:04, 104771.17it/s] 20%|██        | 111325/552076 [00:01<00:04, 105856.65it/s] 22%|██▏       | 123122/552076 [00:01<00:03, 109220.60it/s] 26%|██▌       | 144302/552076 [00:01<00:03, 127787.69it/s] 30%|███       | 167148/552076 [00:01<00:02, 147253.65it/s] 34%|███▍      | 188667/552076 [00:01<00:02, 162658.29it/s] 37%|███▋      | 206724/552076 [00:01<00:02, 133198.39it/s] 41%|████▏     | 228854/552076 [00:01<00:02, 151263.16it/s] 45%|████▌     | 250668/552076 [00:01<00:01, 166583.16it/s] 49%|████▉     | 269429/552076 [00:01<00:01, 156093.22it/s] 53%|█████▎    | 290429/552076 [00:02<00:01, 169116.79it/s] 57%|█████▋    | 311950/552076 [00:02<00:01, 180727.45it/s] 60%|██████    | 333439/552076 [00:02<00:01, 189777.18it/s] 64%|██████▍   | 354246/552076 [00:02<00:01, 194915.98it/s] 68%|██████▊   | 374459/552076 [00:02<00:00, 194006.72it/s] 71%|███████▏  | 394366/552076 [00:02<00:00, 180819.84it/s] 75%|███████▌  | 416281/552076 [00:02<00:00, 190831.33it/s] 79%|███████▉  | 437824/552076 [00:02<00:00, 197597.76it/s] 83%|████████▎ | 459866/552076 [00:02<00:00, 203931.80it/s] 87%|████████▋ | 481133/552076 [00:02<00:00, 206474.97it/s] 91%|█████████ | 502866/552076 [00:03<00:00, 209615.08it/s] 95%|█████████▍| 524212/552076 [00:03<00:00, 210751.61it/s] 99%|█████████▉| 546003/552076 [00:03<00:00, 212846.79it/s]100%|██████████| 552076/552076 [00:03<00:00, 166580.50it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20677/552076 [00:00<00:02, 206769.70it/s]  8%|▊         | 42174/552076 [00:00<00:02, 209163.11it/s] 12%|█▏        | 64680/552076 [00:00<00:02, 213689.73it/s] 16%|█▌        | 87420/552076 [00:00<00:02, 217623.70it/s] 20%|█▉        | 109423/552076 [00:00<00:02, 218339.33it/s] 24%|██▎       | 130391/552076 [00:00<00:01, 215665.67it/s] 28%|██▊       | 152012/552076 [00:00<00:01, 215826.28it/s] 32%|███▏      | 175239/552076 [00:00<00:01, 220507.28it/s] 36%|███▌      | 198319/552076 [00:00<00:01, 223496.38it/s] 40%|███▉      | 220676/552076 [00:01<00:01, 223516.77it/s] 44%|████▍     | 242469/552076 [00:01<00:01, 221500.55it/s] 48%|████▊     | 265150/552076 [00:01<00:01, 223066.53it/s] 52%|█████▏    | 287678/552076 [00:01<00:01, 223723.35it/s] 56%|█████▌    | 309864/552076 [00:01<00:01, 214032.10it/s] 60%|██████    | 332719/552076 [00:01<00:01, 218187.43it/s] 64%|██████▍   | 355627/552076 [00:01<00:00, 221342.47it/s] 69%|██████▊   | 378279/552076 [00:01<00:00, 222867.79it/s] 73%|███████▎  | 400572/552076 [00:01<00:00, 218829.70it/s] 77%|███████▋  | 423304/552076 [00:01<00:00, 221308.58it/s] 81%|████████  | 446451/552076 [00:02<00:00, 224260.28it/s] 85%|████████▌ | 469540/552076 [00:02<00:00, 226208.46it/s] 89%|████████▉ | 492483/552076 [00:02<00:00, 227162.55it/s] 93%|█████████▎| 515215/552076 [00:02<00:00, 193821.06it/s] 97%|█████████▋| 537227/552076 [00:02<00:00, 201023.54it/s]100%|██████████| 552076/552076 [00:02<00:00, 216945.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16787/552076 [00:00<00:03, 167865.76it/s]  7%|▋         | 38710/552076 [00:00<00:02, 180555.53it/s] 10%|█         | 55678/552076 [00:00<00:02, 177147.84it/s] 13%|█▎        | 70462/552076 [00:00<00:02, 167201.91it/s] 17%|█▋        | 91240/552076 [00:00<00:02, 177606.55it/s] 19%|█▉        | 106537/552076 [00:00<00:02, 150117.22it/s] 22%|██▏       | 121476/552076 [00:00<00:02, 149897.07it/s] 26%|██▌       | 144266/552076 [00:00<00:02, 167048.72it/s] 30%|███       | 167178/552076 [00:00<00:02, 181825.60it/s] 34%|███▍      | 190136/552076 [00:01<00:01, 193926.91it/s] 38%|███▊      | 210088/552076 [00:01<00:02, 165978.93it/s] 41%|████▏     | 227787/552076 [00:01<00:01, 169133.51it/s] 45%|████▌     | 250219/552076 [00:01<00:01, 182609.16it/s] 49%|████▉     | 272809/552076 [00:01<00:01, 193746.81it/s] 53%|█████▎    | 293205/552076 [00:01<00:01, 196699.21it/s] 57%|█████▋    | 315315/552076 [00:01<00:01, 203433.15it/s] 61%|██████    | 336619/552076 [00:01<00:01, 206222.90it/s] 65%|██████▍   | 358818/552076 [00:01<00:00, 210711.93it/s] 69%|██████▉   | 380400/552076 [00:01<00:00, 212216.75it/s] 73%|███████▎  | 401800/552076 [00:02<00:00, 211597.48it/s] 77%|███████▋  | 423983/552076 [00:02<00:00, 214563.96it/s] 81%|████████  | 445537/552076 [00:02<00:00, 212590.63it/s] 85%|████████▍ | 467341/552076 [00:02<00:00, 214195.03it/s] 89%|████████▊ | 488984/552076 [00:02<00:00, 214859.65it/s] 93%|█████████▎| 511417/552076 [00:02<00:00, 217615.33it/s] 97%|█████████▋| 533214/552076 [00:02<00:00, 213964.70it/s]100%|██████████| 552076/552076 [00:02<00:00, 197104.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22078/552076 [00:00<00:02, 220777.58it/s]  8%|▊         | 44295/552076 [00:00<00:02, 221193.06it/s] 12%|█▏        | 66263/552076 [00:00<00:02, 220736.07it/s] 16%|█▌        | 88134/552076 [00:00<00:02, 220123.75it/s] 20%|██        | 111368/552076 [00:00<00:01, 223649.94it/s] 24%|██▍       | 133976/552076 [00:00<00:01, 224371.45it/s] 28%|██▊       | 156384/552076 [00:00<00:01, 224281.27it/s] 32%|███▏      | 178613/552076 [00:00<00:01, 223677.80it/s] 36%|███▌      | 199714/552076 [00:00<00:01, 210661.72it/s] 40%|███▉      | 220049/552076 [00:01<00:01, 199097.97it/s] 43%|████▎     | 239579/552076 [00:01<00:02, 156041.85it/s] 47%|████▋     | 257852/552076 [00:01<00:01, 163189.25it/s] 51%|█████     | 279565/552076 [00:01<00:01, 176330.02it/s] 54%|█████▍    | 300847/552076 [00:01<00:01, 185889.73it/s] 58%|█████▊    | 320302/552076 [00:01<00:01, 188404.51it/s] 62%|██████▏   | 339709/552076 [00:01<00:01, 185131.23it/s] 65%|██████▍   | 358632/552076 [00:01<00:01, 185991.07it/s] 68%|██████▊   | 377519/552076 [00:01<00:01, 161934.59it/s] 71%|███████▏  | 394472/552076 [00:02<00:01, 155457.52it/s] 74%|███████▍  | 410605/552076 [00:02<00:00, 152685.20it/s] 78%|███████▊  | 428403/552076 [00:02<00:00, 159484.40it/s] 81%|████████  | 446863/552076 [00:02<00:00, 166269.40it/s] 84%|████████▍ | 465506/552076 [00:02<00:00, 171843.08it/s] 88%|████████▊ | 483987/552076 [00:02<00:00, 175536.60it/s] 91%|█████████ | 503138/552076 [00:02<00:00, 180041.46it/s] 94%|█████████▍| 521693/552076 [00:02<00:00, 181658.79it/s] 98%|█████████▊| 539990/552076 [00:02<00:00, 181676.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 185599.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17846/552076 [00:00<00:02, 178446.98it/s]  7%|▋         | 36638/552076 [00:00<00:02, 181184.37it/s] 10%|█         | 55482/552076 [00:00<00:02, 183301.24it/s] 14%|█▎        | 75049/552076 [00:00<00:02, 186844.05it/s] 17%|█▋        | 95162/552076 [00:00<00:02, 190911.77it/s] 21%|██        | 114576/552076 [00:00<00:02, 191867.61it/s] 24%|██▍       | 133478/552076 [00:00<00:02, 191001.51it/s] 28%|██▊       | 152463/552076 [00:00<00:02, 190649.99it/s] 31%|███       | 171339/552076 [00:00<00:02, 190078.13it/s] 35%|███▍      | 190879/552076 [00:01<00:01, 191642.17it/s] 38%|███▊      | 210190/552076 [00:01<00:01, 192077.77it/s] 41%|████▏     | 229053/552076 [00:01<00:01, 188564.51it/s] 45%|████▌     | 249274/552076 [00:01<00:01, 192460.05it/s] 49%|████▊     | 268381/552076 [00:01<00:01, 187227.68it/s] 52%|█████▏    | 287038/552076 [00:01<00:01, 144408.80it/s] 55%|█████▌    | 305539/552076 [00:01<00:01, 154585.10it/s] 59%|█████▉    | 326487/552076 [00:01<00:01, 167773.00it/s] 63%|██████▎   | 347632/552076 [00:01<00:01, 178855.41it/s] 66%|██████▋   | 366543/552076 [00:02<00:01, 164362.61it/s] 70%|██████▉   | 383927/552076 [00:02<00:01, 121019.19it/s] 72%|███████▏  | 398344/552076 [00:02<00:01, 94138.97it/s]  74%|███████▍  | 410296/552076 [00:02<00:01, 81486.57it/s] 76%|███████▌  | 420524/552076 [00:02<00:02, 58578.62it/s] 78%|███████▊  | 432354/552076 [00:03<00:01, 69033.25it/s] 81%|████████  | 444510/552076 [00:03<00:01, 79313.74it/s] 83%|████████▎ | 456765/552076 [00:03<00:01, 88700.65it/s] 85%|████████▍ | 469006/552076 [00:03<00:00, 96687.04it/s] 87%|████████▋ | 481285/552076 [00:03<00:00, 103272.97it/s] 89%|████████▉ | 493097/552076 [00:03<00:00, 107317.27it/s] 92%|█████████▏| 505397/552076 [00:03<00:00, 111583.33it/s] 94%|█████████▍| 517732/552076 [00:03<00:00, 114869.56it/s] 96%|█████████▌| 529957/552076 [00:03<00:00, 116987.15it/s] 98%|█████████▊| 542343/552076 [00:03<00:00, 118965.22it/s]100%|██████████| 552076/552076 [00:04<00:00, 135502.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7754/552076 [00:00<00:07, 77537.30it/s]  3%|▎         | 15103/552076 [00:00<00:07, 76275.33it/s]  4%|▎         | 20298/552076 [00:00<00:07, 66878.71it/s]  4%|▍         | 24540/552076 [00:00<00:09, 55227.73it/s]  6%|▌         | 31212/552076 [00:00<00:08, 58234.54it/s]  7%|▋         | 36117/552076 [00:00<00:10, 50102.97it/s]  8%|▊         | 42811/552076 [00:00<00:09, 54190.70it/s]  9%|▉         | 49545/552076 [00:00<00:08, 57561.94it/s] 10%|█         | 56310/552076 [00:00<00:08, 60256.13it/s] 11%|█▏        | 63055/552076 [00:01<00:07, 62247.45it/s] 13%|█▎        | 69274/552076 [00:01<00:08, 60309.36it/s] 14%|█▍        | 75926/552076 [00:01<00:07, 62046.50it/s] 15%|█▍        | 82736/552076 [00:01<00:07, 63744.68it/s] 16%|█▌        | 89469/552076 [00:01<00:07, 64777.10it/s] 17%|█▋        | 96163/552076 [00:01<00:06, 65410.21it/s] 19%|█▊        | 102853/552076 [00:01<00:06, 65849.36it/s] 20%|█▉        | 109540/552076 [00:01<00:06, 66151.30it/s] 21%|██        | 116185/552076 [00:01<00:06, 66238.57it/s] 22%|██▏       | 122824/552076 [00:01<00:06, 66282.15it/s] 23%|██▎       | 129499/552076 [00:02<00:06, 66421.69it/s] 25%|██▍       | 136193/552076 [00:02<00:06, 66574.27it/s] 26%|██▌       | 142921/552076 [00:02<00:06, 66782.98it/s] 27%|██▋       | 149737/552076 [00:02<00:05, 67188.90it/s] 28%|██▊       | 156554/552076 [00:02<00:05, 67477.93it/s] 30%|██▉       | 163309/552076 [00:02<00:05, 67497.87it/s] 31%|███       | 170060/552076 [00:02<00:05, 67233.41it/s] 32%|███▏      | 176847/552076 [00:02<00:05, 67422.05it/s] 33%|███▎      | 183645/552076 [00:02<00:05, 67585.70it/s] 34%|███▍      | 190405/552076 [00:02<00:05, 60850.81it/s] 36%|███▌      | 196618/552076 [00:03<00:07, 50282.18it/s] 37%|███▋      | 202041/552076 [00:03<00:07, 44173.81it/s] 37%|███▋      | 206870/552076 [00:03<00:08, 40036.45it/s] 38%|███▊      | 211236/552076 [00:03<00:08, 38402.76it/s] 39%|███▉      | 215344/552076 [00:03<00:09, 36651.56it/s] 40%|███▉      | 219214/552076 [00:03<00:09, 34378.90it/s] 40%|████      | 222824/552076 [00:03<00:09, 34167.23it/s] 41%|████      | 226362/552076 [00:04<00:09, 34195.37it/s] 42%|████▏     | 232202/552076 [00:04<00:08, 39049.93it/s] 43%|████▎     | 237951/552076 [00:04<00:07, 41632.73it/s] 44%|████▍     | 243797/552076 [00:04<00:06, 45444.39it/s] 45%|████▌     | 248625/552076 [00:04<00:07, 41143.20it/s] 46%|████▌     | 253016/552076 [00:04<00:07, 39602.60it/s] 47%|████▋     | 258778/552076 [00:04<00:06, 43701.38it/s] 48%|████▊     | 264838/552076 [00:04<00:06, 47690.63it/s] 49%|████▉     | 271354/552076 [00:04<00:05, 51860.32it/s] 50%|█████     | 276857/552076 [00:05<00:05, 50232.38it/s] 51%|█████     | 282114/552076 [00:05<00:07, 37261.24it/s] 52%|█████▏    | 286491/552076 [00:05<00:07, 37531.75it/s] 53%|█████▎    | 293948/552076 [00:05<00:05, 44103.13it/s] 54%|█████▍    | 299819/552076 [00:05<00:05, 47660.36it/s] 55%|█████▌    | 305209/552076 [00:05<00:06, 38522.80it/s] 57%|█████▋    | 313892/552076 [00:05<00:05, 45970.13it/s] 58%|█████▊    | 320249/552076 [00:05<00:04, 50133.81it/s] 60%|█████▉    | 328960/552076 [00:06<00:03, 57448.98it/s] 61%|██████    | 335708/552076 [00:06<00:03, 58144.57it/s] 62%|██████▏   | 343384/552076 [00:06<00:03, 62705.90it/s] 63%|██████▎   | 350250/552076 [00:06<00:03, 63545.79it/s] 66%|██████▌   | 362041/552076 [00:06<00:02, 73746.27it/s] 67%|██████▋   | 370320/552076 [00:06<00:02, 73964.01it/s] 69%|██████▉   | 382552/552076 [00:06<00:02, 83916.12it/s] 71%|███████   | 391903/552076 [00:06<00:01, 86580.75it/s] 73%|███████▎  | 401212/552076 [00:06<00:01, 77765.83it/s] 75%|███████▍  | 413381/552076 [00:07<00:01, 87209.21it/s] 77%|███████▋  | 425677/552076 [00:07<00:01, 95541.89it/s] 79%|███████▉  | 437980/552076 [00:07<00:01, 102405.90it/s] 82%|████████▏ | 450263/552076 [00:07<00:00, 107780.50it/s] 84%|████████▍ | 462514/552076 [00:07<00:00, 111811.23it/s] 86%|████████▌ | 474135/552076 [00:07<00:00, 112919.77it/s] 88%|████████▊ | 486472/552076 [00:07<00:00, 115862.65it/s] 90%|█████████ | 498853/552076 [00:07<00:00, 118135.00it/s] 93%|█████████▎| 511228/552076 [00:07<00:00, 119765.04it/s] 95%|█████████▍| 523669/552076 [00:07<00:00, 121119.45it/s] 97%|█████████▋| 536010/552076 [00:08<00:00, 121797.07it/s] 99%|█████████▉| 548351/552076 [00:08<00:00, 122274.46it/s]100%|██████████| 552076/552076 [00:08<00:00, 67223.96it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7384/552076 [00:00<00:07, 68656.19it/s]  3%|▎         | 19216/552076 [00:00<00:06, 78547.00it/s]  5%|▍         | 24863/552076 [00:00<00:07, 69827.51it/s]  6%|▌         | 31479/552076 [00:00<00:07, 68683.80it/s]  8%|▊         | 41745/552076 [00:00<00:06, 76254.22it/s] 10%|▉         | 52829/552076 [00:00<00:05, 84128.83it/s] 12%|█▏        | 64536/552076 [00:00<00:05, 91884.64it/s] 14%|█▍        | 76958/552076 [00:00<00:04, 99666.17it/s] 16%|█▌        | 87172/552076 [00:00<00:04, 97927.31it/s] 18%|█▊        | 97145/552076 [00:01<00:05, 81995.29it/s] 20%|█▉        | 109193/552076 [00:01<00:04, 90683.86it/s] 22%|██▏       | 121339/552076 [00:01<00:04, 98144.20it/s] 24%|██▍       | 131807/552076 [00:01<00:04, 95125.60it/s] 26%|██▌       | 144046/552076 [00:01<00:04, 101937.84it/s] 28%|██▊       | 154711/552076 [00:01<00:04, 89093.30it/s]  30%|██▉       | 164242/552076 [00:01<00:04, 84692.00it/s] 32%|███▏      | 176229/552076 [00:01<00:04, 92868.11it/s] 34%|███▍      | 188470/552076 [00:01<00:03, 100116.06it/s] 36%|███▋      | 200639/552076 [00:02<00:03, 105739.03it/s] 39%|███▊      | 212785/552076 [00:02<00:03, 110010.35it/s] 41%|████      | 224166/552076 [00:02<00:03, 98928.44it/s]  43%|████▎     | 236524/552076 [00:02<00:02, 105225.41it/s] 45%|████▌     | 248905/552076 [00:02<00:02, 110186.24it/s] 47%|████▋     | 261331/552076 [00:02<00:02, 114059.49it/s] 50%|████▉     | 273664/552076 [00:02<00:02, 116690.25it/s] 52%|█████▏    | 286031/552076 [00:02<00:02, 118698.26it/s] 54%|█████▍    | 298354/552076 [00:02<00:02, 120021.93it/s] 56%|█████▋    | 310696/552076 [00:03<00:01, 121020.81it/s] 59%|█████▊    | 323104/552076 [00:03<00:01, 121921.62it/s] 61%|██████    | 335357/552076 [00:03<00:01, 121886.69it/s] 63%|██████▎   | 347589/552076 [00:03<00:01, 121747.63it/s] 65%|██████▌   | 359939/552076 [00:03<00:01, 122266.84it/s] 67%|██████▋   | 372188/552076 [00:03<00:01, 122089.88it/s] 70%|██████▉   | 384517/552076 [00:03<00:01, 122445.41it/s] 72%|███████▏  | 397029/552076 [00:03<00:01, 123232.70it/s] 74%|███████▍  | 409557/552076 [00:03<00:01, 123838.90it/s] 76%|███████▋  | 421948/552076 [00:03<00:01, 123533.99it/s] 79%|███████▊  | 434307/552076 [00:04<00:00, 120321.48it/s] 81%|████████  | 446361/552076 [00:04<00:00, 109508.55it/s] 83%|████████▎ | 457515/552076 [00:04<00:01, 83796.70it/s]  85%|████████▍ | 466947/552076 [00:04<00:00, 85418.58it/s] 87%|████████▋ | 479197/552076 [00:04<00:00, 93948.79it/s] 89%|████████▊ | 489372/552076 [00:04<00:00, 94062.57it/s] 91%|█████████ | 501368/552076 [00:04<00:00, 100574.75it/s] 93%|█████████▎| 513809/552076 [00:04<00:00, 106706.92it/s] 95%|█████████▌| 526179/552076 [00:04<00:00, 111291.93it/s] 98%|█████████▊| 538454/552076 [00:05<00:00, 114497.47it/s]100%|█████████▉| 551024/552076 [00:05<00:00, 117642.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 106176.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6447/552076 [00:00<00:08, 61428.02it/s]  2%|▏         | 12071/552076 [00:00<00:09, 59069.24it/s]  4%|▎         | 19762/552076 [00:00<00:08, 63487.02it/s]  5%|▌         | 29899/552076 [00:00<00:07, 71503.00it/s]  7%|▋         | 36412/552076 [00:00<00:07, 69463.26it/s]  9%|▊         | 47436/552076 [00:00<00:06, 78132.94it/s] 11%|█         | 59534/552076 [00:00<00:05, 87420.58it/s] 13%|█▎        | 71798/552076 [00:00<00:05, 95662.10it/s] 15%|█▌        | 84524/552076 [00:00<00:04, 103359.40it/s] 18%|█▊        | 96850/552076 [00:01<00:04, 108619.64it/s] 20%|█▉        | 109051/552076 [00:01<00:03, 112315.30it/s] 22%|██▏       | 120591/552076 [00:01<00:03, 112645.19it/s] 24%|██▍       | 132144/552076 [00:01<00:03, 113492.87it/s] 26%|██▌       | 144412/552076 [00:01<00:03, 116098.88it/s] 28%|██▊       | 156144/552076 [00:01<00:03, 116215.60it/s] 31%|███       | 168515/552076 [00:01<00:03, 118364.82it/s] 33%|███▎      | 180845/552076 [00:01<00:03, 119802.17it/s] 35%|███▍      | 192878/552076 [00:01<00:03, 108302.66it/s] 37%|███▋      | 204661/552076 [00:01<00:03, 110994.12it/s] 39%|███▉      | 215951/552076 [00:02<00:03, 100058.30it/s] 41%|████      | 226295/552076 [00:02<00:03, 86129.22it/s]  43%|████▎     | 238139/552076 [00:02<00:03, 93806.02it/s] 45%|████▌     | 248508/552076 [00:02<00:03, 96565.69it/s] 47%|████▋     | 258610/552076 [00:02<00:03, 90878.78it/s] 49%|████▊     | 268078/552076 [00:02<00:03, 85833.37it/s] 50%|█████     | 277084/552076 [00:02<00:03, 86871.49it/s] 52%|█████▏    | 286001/552076 [00:02<00:03, 85323.40it/s] 54%|█████▍    | 298182/552076 [00:03<00:02, 93747.43it/s] 56%|█████▌    | 307926/552076 [00:03<00:02, 81475.42it/s] 57%|█████▋    | 316619/552076 [00:03<00:03, 77756.20it/s] 60%|█████▉    | 328731/552076 [00:03<00:02, 87111.75it/s] 62%|██████▏   | 340882/552076 [00:03<00:02, 95196.15it/s] 64%|██████▎   | 351086/552076 [00:03<00:02, 92737.21it/s] 66%|██████▌   | 363405/552076 [00:03<00:01, 100163.53it/s] 68%|██████▊   | 375131/552076 [00:03<00:01, 104743.69it/s] 70%|███████   | 387426/552076 [00:03<00:01, 109611.04it/s] 72%|███████▏  | 399760/552076 [00:04<00:01, 113397.16it/s] 75%|███████▍  | 412130/552076 [00:04<00:01, 116303.14it/s] 77%|███████▋  | 423975/552076 [00:04<00:01, 116935.80it/s] 79%|███████▉  | 436322/552076 [00:04<00:00, 118820.17it/s] 81%|████████▏ | 448765/552076 [00:04<00:00, 120448.56it/s] 84%|████████▎ | 461184/552076 [00:04<00:00, 121545.19it/s] 86%|████████▌ | 473400/552076 [00:04<00:00, 120634.40it/s] 88%|████████▊ | 485911/552076 [00:04<00:00, 121940.66it/s] 90%|█████████ | 498437/552076 [00:04<00:00, 122917.79it/s] 93%|█████████▎| 510755/552076 [00:04<00:00, 121370.32it/s] 95%|█████████▍| 523178/552076 [00:05<00:00, 122213.22it/s] 97%|█████████▋| 535417/552076 [00:05<00:00, 121464.21it/s] 99%|█████████▉| 547904/552076 [00:05<00:00, 122466.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 103521.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11834/552076 [00:00<00:04, 118335.60it/s]  4%|▍         | 23828/552076 [00:00<00:04, 118811.59it/s]  7%|▋         | 35952/552076 [00:00<00:04, 119529.53it/s]  9%|▊         | 47997/552076 [00:00<00:04, 119803.71it/s] 11%|█         | 59727/552076 [00:00<00:04, 119041.31it/s] 13%|█▎        | 71987/552076 [00:00<00:03, 120085.13it/s] 15%|█▌        | 84254/552076 [00:00<00:03, 120848.86it/s] 17%|█▋        | 96519/552076 [00:00<00:03, 121383.57it/s] 20%|█▉        | 108817/552076 [00:00<00:03, 121856.44it/s] 22%|██▏       | 121110/552076 [00:01<00:03, 122173.61it/s] 24%|██▍       | 133445/552076 [00:01<00:03, 122520.11it/s] 26%|██▋       | 145851/552076 [00:01<00:03, 122977.30it/s] 29%|██▊       | 158164/552076 [00:01<00:03, 123022.75it/s] 31%|███       | 170527/552076 [00:01<00:03, 123203.46it/s] 33%|███▎      | 182768/552076 [00:01<00:03, 122820.89it/s] 35%|███▌      | 195014/552076 [00:01<00:02, 122710.94it/s] 38%|███▊      | 207397/552076 [00:01<00:02, 123042.73it/s] 40%|███▉      | 219793/552076 [00:01<00:02, 123316.25it/s] 42%|████▏     | 232178/552076 [00:01<00:02, 123474.52it/s] 44%|████▍     | 244560/552076 [00:02<00:02, 123577.64it/s] 47%|████▋     | 256968/552076 [00:02<00:02, 123725.22it/s] 49%|████▉     | 269335/552076 [00:02<00:02, 123585.78it/s] 51%|█████     | 281690/552076 [00:02<00:02, 121907.05it/s] 53%|█████▎    | 293883/552076 [00:02<00:02, 104033.08it/s] 55%|█████▌    | 306006/552076 [00:02<00:02, 108656.64it/s] 57%|█████▋    | 317246/552076 [00:02<00:02, 102891.87it/s] 59%|█████▉    | 327861/552076 [00:02<00:02, 103575.92it/s] 61%|██████▏   | 338448/552076 [00:02<00:02, 101292.12it/s] 64%|██████▎   | 350734/552076 [00:02<00:01, 106921.28it/s] 66%|██████▌   | 363051/552076 [00:03<00:01, 111325.93it/s] 68%|██████▊   | 375524/552076 [00:03<00:01, 115034.38it/s] 70%|███████   | 387852/552076 [00:03<00:01, 117387.19it/s] 72%|███████▏  | 400079/552076 [00:03<00:01, 118809.96it/s] 75%|███████▍  | 412323/552076 [00:03<00:01, 119873.94it/s] 77%|███████▋  | 424586/552076 [00:03<00:01, 120685.31it/s] 79%|███████▉  | 436890/552076 [00:03<00:00, 121380.01it/s] 81%|████████▏ | 449096/552076 [00:03<00:00, 121582.29it/s] 84%|████████▎ | 461341/552076 [00:03<00:00, 121838.40it/s] 86%|████████▌ | 473629/552076 [00:03<00:00, 122148.53it/s] 88%|████████▊ | 485964/552076 [00:04<00:00, 122504.45it/s] 90%|█████████ | 498238/552076 [00:04<00:00, 122573.13it/s] 92%|█████████▏| 510524/552076 [00:04<00:00, 122656.28it/s] 95%|█████████▍| 522904/552076 [00:04<00:00, 122991.44it/s] 97%|█████████▋| 535306/552076 [00:04<00:00, 123297.20it/s] 99%|█████████▉| 547639/552076 [00:04<00:00, 120132.71it/s]100%|██████████| 552076/552076 [00:04<00:00, 117051.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11817/552076 [00:00<00:04, 118161.38it/s]  4%|▍         | 21797/552076 [00:00<00:04, 111023.29it/s]  5%|▍         | 27198/552076 [00:00<00:06, 80233.82it/s]   7%|▋         | 39525/552076 [00:00<00:05, 89620.16it/s]  9%|▉         | 51584/552076 [00:00<00:05, 97101.27it/s] 12%|█▏        | 63772/552076 [00:00<00:04, 103407.11it/s] 14%|█▍        | 76009/552076 [00:00<00:04, 108448.20it/s] 16%|█▌        | 87712/552076 [00:00<00:04, 110885.92it/s] 18%|█▊        | 99976/552076 [00:00<00:03, 114166.16it/s] 20%|██        | 111273/552076 [00:01<00:04, 97565.13it/s] 22%|██▏       | 121366/552076 [00:01<00:04, 96178.69it/s] 24%|██▍       | 131224/552076 [00:01<00:04, 94862.37it/s] 26%|██▌       | 140883/552076 [00:01<00:04, 87110.07it/s] 28%|██▊       | 153239/552076 [00:01<00:04, 95566.88it/s] 30%|██▉       | 165384/552076 [00:01<00:03, 102093.47it/s] 32%|███▏      | 177032/552076 [00:01<00:03, 106019.74it/s] 34%|███▍      | 189039/552076 [00:01<00:03, 109875.22it/s] 36%|███▋      | 200294/552076 [00:01<00:03, 99114.50it/s]  38%|███▊      | 211992/552076 [00:02<00:03, 103871.64it/s] 41%|████      | 224270/552076 [00:02<00:03, 108901.18it/s] 43%|████▎     | 236446/552076 [00:02<00:02, 112461.90it/s] 45%|████▍     | 248207/552076 [00:02<00:02, 113955.72it/s] 47%|████▋     | 260319/552076 [00:02<00:02, 116014.04it/s] 49%|████▉     | 272049/552076 [00:02<00:02, 116075.18it/s] 52%|█████▏    | 284321/552076 [00:02<00:02, 117989.50it/s] 54%|█████▎    | 296628/552076 [00:02<00:02, 119468.51it/s] 56%|█████▌    | 308804/552076 [00:02<00:02, 120146.80it/s] 58%|█████▊    | 320858/552076 [00:02<00:01, 119810.61it/s] 60%|██████    | 333104/552076 [00:03<00:01, 120591.73it/s] 63%|██████▎   | 345323/552076 [00:03<00:01, 121064.43it/s] 65%|██████▍   | 357657/552076 [00:03<00:01, 121735.87it/s] 67%|██████▋   | 369925/552076 [00:03<00:01, 122015.96it/s] 69%|██████▉   | 382262/552076 [00:03<00:01, 122418.21it/s] 71%|███████▏  | 394635/552076 [00:03<00:01, 122807.63it/s] 74%|███████▎  | 406921/552076 [00:03<00:01, 121401.47it/s] 76%|███████▌  | 419093/552076 [00:03<00:01, 121495.50it/s] 78%|███████▊  | 431338/552076 [00:03<00:00, 121778.76it/s] 80%|████████  | 443629/552076 [00:03<00:00, 122113.28it/s] 83%|████████▎ | 455843/552076 [00:04<00:00, 121535.35it/s] 85%|████████▍ | 468000/552076 [00:04<00:00, 120688.33it/s] 87%|████████▋ | 480117/552076 [00:04<00:00, 120831.60it/s] 89%|████████▉ | 492203/552076 [00:04<00:00, 119573.64it/s] 91%|█████████▏| 504165/552076 [00:04<00:00, 117527.93it/s] 93%|█████████▎| 516176/552076 [00:04<00:00, 118290.27it/s] 96%|█████████▌| 528014/552076 [00:04<00:00, 117845.10it/s] 98%|█████████▊| 540072/552076 [00:04<00:00, 118650.07it/s]100%|█████████▉| 551943/552076 [00:04<00:00, 117411.27it/s]100%|██████████| 552076/552076 [00:04<00:00, 113082.40it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 6940/552076 [00:00<00:07, 69399.57it/s]  3%|▎         | 17888/552076 [00:00<00:06, 77961.68it/s]  5%|▍         | 26130/552076 [00:00<00:06, 78176.90it/s]  6%|▌         | 32485/552076 [00:00<00:07, 73126.81it/s]  7%|▋         | 41273/552076 [00:00<00:06, 77003.93it/s]  9%|▉         | 51438/552076 [00:00<00:06, 83043.90it/s] 11%|█         | 60189/552076 [00:00<00:05, 84333.69it/s] 13%|█▎        | 70924/552076 [00:00<00:05, 90129.06it/s] 15%|█▌        | 83003/552076 [00:00<00:04, 97558.01it/s] 17%|█▋        | 95202/552076 [00:01<00:04, 103793.62it/s] 19%|█▉        | 107321/552076 [00:01<00:04, 108463.65it/s] 22%|██▏       | 119378/552076 [00:01<00:03, 111829.93it/s] 24%|██▍       | 131744/552076 [00:01<00:03, 115132.92it/s] 26%|██▌       | 143463/552076 [00:01<00:03, 114278.20it/s] 28%|██▊       | 154981/552076 [00:01<00:03, 110017.61it/s] 30%|███       | 166856/552076 [00:01<00:03, 112498.47it/s] 32%|███▏      | 178709/552076 [00:01<00:03, 114239.67it/s] 34%|███▍      | 190266/552076 [00:01<00:03, 114633.22it/s] 37%|███▋      | 201775/552076 [00:01<00:03, 113868.14it/s] 39%|███▊      | 213195/552076 [00:02<00:03, 102384.34it/s] 41%|████      | 223675/552076 [00:02<00:03, 95456.93it/s]  43%|████▎     | 234698/552076 [00:02<00:03, 99453.69it/s] 45%|████▍     | 246624/552076 [00:02<00:02, 104662.18it/s] 47%|████▋     | 258009/552076 [00:02<00:02, 107257.47it/s] 49%|████▉     | 270151/552076 [00:02<00:02, 111146.12it/s] 51%|█████▏    | 282948/552076 [00:02<00:02, 115707.37it/s] 53%|█████▎    | 294968/552076 [00:02<00:02, 117018.80it/s] 56%|█████▌    | 306787/552076 [00:02<00:02, 113889.96it/s] 58%|█████▊    | 318276/552076 [00:03<00:02, 103577.59it/s] 60%|█████▉    | 328884/552076 [00:03<00:02, 95129.78it/s]  61%|██████▏   | 338707/552076 [00:03<00:02, 86082.00it/s] 63%|██████▎   | 350164/552076 [00:03<00:02, 93020.15it/s] 65%|██████▌   | 360716/552076 [00:03<00:01, 96447.02it/s] 68%|██████▊   | 372903/552076 [00:03<00:01, 102884.57it/s] 70%|██████▉   | 385257/552076 [00:03<00:01, 108315.31it/s] 72%|███████▏  | 397493/552076 [00:03<00:01, 112177.33it/s] 74%|███████▍  | 409734/552076 [00:03<00:01, 115062.29it/s] 76%|███████▋  | 422224/552076 [00:04<00:01, 117845.62it/s] 79%|███████▊  | 434578/552076 [00:04<00:00, 119495.68it/s] 81%|████████  | 446864/552076 [00:04<00:00, 120484.40it/s] 83%|████████▎ | 459261/552076 [00:04<00:00, 121507.15it/s] 85%|████████▌ | 471472/552076 [00:04<00:00, 121612.69it/s] 88%|████████▊ | 483693/552076 [00:04<00:00, 121790.52it/s] 90%|████████▉ | 495902/552076 [00:04<00:00, 118075.54it/s] 92%|█████████▏| 507755/552076 [00:04<00:00, 111752.64it/s] 94%|█████████▍| 519033/552076 [00:04<00:00, 110775.20it/s] 96%|█████████▌| 530184/552076 [00:04<00:00, 110280.88it/s] 98%|█████████▊| 541264/552076 [00:05<00:00, 102992.48it/s]100%|██████████| 552076/552076 [00:05<00:00, 107068.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8881/552076 [00:00<00:06, 88807.54it/s]  4%|▎         | 20147/552076 [00:00<00:05, 93209.78it/s]  5%|▍         | 26470/552076 [00:00<00:06, 80272.26it/s]  7%|▋         | 37884/552076 [00:00<00:05, 88115.89it/s]  8%|▊         | 46226/552076 [00:00<00:05, 86652.18it/s] 11%|█         | 58134/552076 [00:00<00:05, 94360.68it/s] 13%|█▎        | 69353/552076 [00:00<00:04, 99083.00it/s] 15%|█▍        | 80143/552076 [00:00<00:04, 101571.45it/s] 17%|█▋        | 92540/552076 [00:00<00:04, 107390.43it/s] 19%|█▉        | 104942/552076 [00:01<00:03, 111889.71it/s] 21%|██        | 117276/552076 [00:01<00:03, 115093.05it/s] 23%|██▎       | 129076/552076 [00:01<00:03, 115948.55it/s] 26%|██▌       | 141466/552076 [00:01<00:03, 118223.86it/s] 28%|██▊       | 153767/552076 [00:01<00:03, 119617.67it/s] 30%|███       | 166019/552076 [00:01<00:03, 120471.58it/s] 32%|███▏      | 178276/552076 [00:01<00:03, 121092.36it/s] 35%|███▍      | 190636/552076 [00:01<00:02, 121832.56it/s] 37%|███▋      | 203026/552076 [00:01<00:02, 122443.47it/s] 39%|███▉      | 215339/552076 [00:01<00:02, 122645.95it/s] 41%|████      | 227609/552076 [00:02<00:02, 121633.49it/s] 43%|████▎     | 240099/552076 [00:02<00:02, 122593.33it/s] 46%|████▌     | 252364/552076 [00:02<00:02, 122590.20it/s] 48%|████▊     | 264627/552076 [00:02<00:02, 121819.99it/s] 50%|█████     | 276813/552076 [00:02<00:02, 121655.42it/s] 52%|█████▏    | 289088/552076 [00:02<00:02, 121980.74it/s] 55%|█████▍    | 301289/552076 [00:02<00:02, 121191.16it/s] 57%|█████▋    | 313411/552076 [00:02<00:02, 103949.79it/s] 59%|█████▉    | 324943/552076 [00:02<00:02, 107117.92it/s] 61%|██████    | 336374/552076 [00:02<00:01, 109176.56it/s] 63%|██████▎   | 347530/552076 [00:03<00:01, 109333.91it/s] 65%|██████▌   | 359596/552076 [00:03<00:01, 112500.98it/s] 67%|██████▋   | 371914/552076 [00:03<00:01, 115504.33it/s] 69%|██████▉   | 383583/552076 [00:03<00:01, 111084.93it/s] 72%|███████▏  | 395763/552076 [00:03<00:01, 114093.41it/s] 74%|███████▍  | 407276/552076 [00:03<00:01, 95267.70it/s]  76%|███████▌  | 417399/552076 [00:03<00:01, 92063.41it/s] 77%|███████▋  | 427046/552076 [00:03<00:01, 89883.61it/s] 79%|███████▉  | 436354/552076 [00:04<00:01, 76461.79it/s] 81%|████████  | 444571/552076 [00:04<00:01, 65562.36it/s] 82%|████████▏ | 453641/552076 [00:04<00:01, 71169.06it/s] 84%|████████▍ | 463745/552076 [00:04<00:01, 78094.96it/s] 86%|████████▌ | 474298/552076 [00:04<00:00, 84700.06it/s] 88%|████████▊ | 486291/552076 [00:04<00:00, 92885.19it/s] 90%|████████▉ | 496241/552076 [00:04<00:00, 89699.03it/s] 92%|█████████▏| 505698/552076 [00:04<00:00, 77453.34it/s] 93%|█████████▎| 514080/552076 [00:05<00:00, 78182.53it/s] 95%|█████████▍| 523146/552076 [00:05<00:00, 80625.62it/s] 96%|█████████▋| 532180/552076 [00:05<00:00, 83312.18it/s] 99%|█████████▊| 544199/552076 [00:05<00:00, 91758.30it/s]100%|██████████| 552076/552076 [00:05<00:00, 102637.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5713/552076 [00:00<00:09, 57125.15it/s]  2%|▏         | 10236/552076 [00:00<00:10, 52945.41it/s]  3%|▎         | 14990/552076 [00:00<00:10, 51198.52it/s]  4%|▎         | 19970/552076 [00:00<00:10, 50769.91it/s]  5%|▍         | 25187/552076 [00:00<00:10, 51181.21it/s]  5%|▌         | 30247/552076 [00:00<00:10, 50733.43it/s]  7%|▋         | 36814/552076 [00:00<00:09, 54446.73it/s]  8%|▊         | 43491/552076 [00:00<00:08, 57636.61it/s]  9%|▉         | 50118/552076 [00:00<00:08, 59979.48it/s] 10%|█         | 56707/552076 [00:01<00:08, 61637.12it/s] 11%|█▏        | 63457/552076 [00:01<00:07, 63285.10it/s] 13%|█▎        | 70182/552076 [00:01<00:07, 64424.48it/s] 14%|█▍        | 76832/552076 [00:01<00:07, 65031.60it/s] 15%|█▌        | 83511/552076 [00:01<00:07, 65548.93it/s] 16%|█▋        | 90220/552076 [00:01<00:06, 66002.99it/s] 18%|█▊        | 96972/552076 [00:01<00:06, 66449.69it/s] 19%|█▉        | 103765/552076 [00:01<00:06, 66885.05it/s] 20%|██        | 110452/552076 [00:01<00:06, 65624.11it/s] 21%|██        | 117162/552076 [00:01<00:06, 66059.15it/s] 22%|██▏       | 123877/552076 [00:02<00:06, 66380.29it/s] 24%|██▎       | 130581/552076 [00:02<00:06, 66576.66it/s] 25%|██▍       | 137269/552076 [00:02<00:06, 66664.54it/s] 26%|██▌       | 143937/552076 [00:02<00:06, 66223.60it/s] 27%|██▋       | 150565/552076 [00:02<00:06, 66239.77it/s] 28%|██▊       | 157281/552076 [00:02<00:05, 66510.18it/s] 30%|██▉       | 163934/552076 [00:02<00:05, 66092.15it/s] 31%|███       | 171061/552076 [00:02<00:05, 67562.89it/s] 32%|███▏      | 177827/552076 [00:02<00:05, 66839.09it/s] 33%|███▎      | 184519/552076 [00:02<00:05, 65118.82it/s] 35%|███▍      | 191047/552076 [00:03<00:05, 63739.38it/s] 36%|███▌      | 197439/552076 [00:03<00:05, 62116.23it/s] 37%|███▋      | 203672/552076 [00:03<00:05, 61972.39it/s] 38%|███▊      | 210377/552076 [00:03<00:05, 63411.18it/s] 39%|███▉      | 217033/552076 [00:03<00:05, 64322.64it/s] 41%|████      | 224095/552076 [00:03<00:04, 66090.66it/s] 42%|████▏     | 231294/552076 [00:03<00:04, 67755.90it/s] 43%|████▎     | 238438/552076 [00:03<00:04, 68818.44it/s] 44%|████▍     | 245343/552076 [00:03<00:04, 68122.54it/s] 46%|████▌     | 252173/552076 [00:03<00:04, 67794.97it/s] 47%|████▋     | 258967/552076 [00:04<00:04, 67837.65it/s] 48%|████▊     | 265760/552076 [00:04<00:04, 67840.92it/s] 49%|████▉     | 272551/552076 [00:04<00:04, 67767.15it/s] 51%|█████     | 279333/552076 [00:04<00:04, 58134.07it/s] 52%|█████▏    | 285390/552076 [00:04<00:05, 47294.61it/s] 54%|█████▍    | 297857/552076 [00:04<00:04, 58114.99it/s] 56%|█████▌    | 310150/552076 [00:04<00:03, 69034.15it/s] 58%|█████▊    | 322275/552076 [00:04<00:02, 79275.93it/s] 61%|██████    | 334837/552076 [00:04<00:02, 89141.30it/s] 63%|██████▎   | 345497/552076 [00:05<00:02, 71463.53it/s] 65%|██████▍   | 356356/552076 [00:05<00:02, 79630.26it/s] 67%|██████▋   | 369263/552076 [00:05<00:02, 89968.54it/s] 69%|██████▉   | 382626/552076 [00:05<00:01, 99744.32it/s] 72%|███████▏  | 395049/552076 [00:05<00:01, 106012.81it/s] 74%|███████▎  | 406741/552076 [00:05<00:01, 103349.21it/s] 76%|███████▌  | 417854/552076 [00:05<00:01, 102342.89it/s] 78%|███████▊  | 430925/552076 [00:05<00:01, 109468.55it/s] 80%|████████  | 444237/552076 [00:06<00:00, 115631.16it/s] 83%|████████▎ | 457092/552076 [00:06<00:00, 119225.09it/s] 85%|████████▌ | 470306/552076 [00:06<00:00, 122825.45it/s] 88%|████████▊ | 483366/552076 [00:06<00:00, 125056.92it/s] 90%|████████▉ | 496754/552076 [00:06<00:00, 127577.66it/s] 92%|█████████▏| 510049/552076 [00:06<00:00, 129141.19it/s] 95%|█████████▍| 523075/552076 [00:06<00:00, 125383.81it/s] 97%|█████████▋| 536402/552076 [00:06<00:00, 127647.66it/s]100%|█████████▉| 549482/552076 [00:06<00:00, 128575.61it/s]100%|██████████| 552076/552076 [00:06<00:00, 80366.22it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20939/552076 [00:00<00:02, 209387.70it/s]  8%|▊         | 43608/552076 [00:00<00:02, 214293.61it/s] 12%|█▏        | 66418/552076 [00:00<00:02, 218255.21it/s] 16%|█▌        | 89377/552076 [00:00<00:02, 221534.28it/s] 20%|██        | 112466/552076 [00:00<00:01, 224258.13it/s] 24%|██▍       | 135135/552076 [00:00<00:01, 224979.55it/s] 29%|██▊       | 158421/552076 [00:00<00:01, 227286.53it/s] 33%|███▎      | 181764/552076 [00:00<00:01, 229095.09it/s] 37%|███▋      | 205091/552076 [00:00<00:01, 230329.58it/s] 41%|████▏     | 228185/552076 [00:01<00:01, 230510.45it/s] 45%|████▌     | 250656/552076 [00:01<00:01, 227436.64it/s] 49%|████▉     | 273003/552076 [00:01<00:01, 224152.19it/s] 53%|█████▎    | 295151/552076 [00:01<00:01, 201399.35it/s] 57%|█████▋    | 315540/552076 [00:01<00:01, 155104.47it/s] 60%|██████    | 332841/552076 [00:01<00:01, 126016.34it/s] 64%|██████▍   | 352619/552076 [00:01<00:01, 141408.50it/s] 68%|██████▊   | 373210/552076 [00:01<00:01, 156075.21it/s] 72%|███████▏  | 395049/552076 [00:02<00:00, 170686.08it/s] 76%|███████▌  | 416929/552076 [00:02<00:00, 182741.09it/s] 80%|███████▉  | 439193/552076 [00:02<00:00, 193122.88it/s] 84%|████████▎ | 461159/552076 [00:02<00:00, 200383.02it/s] 88%|████████▊ | 484245/552076 [00:02<00:00, 208643.84it/s] 92%|█████████▏| 507422/552076 [00:02<00:00, 215081.64it/s] 96%|█████████▌| 529823/552076 [00:02<00:00, 217682.91it/s]100%|█████████▉| 551988/552076 [00:02<00:00, 214031.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 200851.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12812/552076 [00:00<00:04, 128115.85it/s]  5%|▍         | 25545/552076 [00:00<00:04, 127878.74it/s]  7%|▋         | 38121/552076 [00:00<00:04, 127232.75it/s] 10%|▉         | 52578/552076 [00:00<00:03, 131979.67it/s] 13%|█▎        | 70019/552076 [00:00<00:03, 142369.68it/s] 16%|█▌        | 88855/552076 [00:00<00:03, 153621.97it/s] 19%|█▉        | 107572/552076 [00:00<00:02, 162350.80it/s] 23%|██▎       | 125936/552076 [00:00<00:02, 168199.98it/s] 26%|██▌       | 144658/552076 [00:00<00:02, 173485.78it/s] 30%|██▉       | 163502/552076 [00:01<00:02, 177716.20it/s] 33%|███▎      | 182690/552076 [00:01<00:02, 181740.49it/s] 37%|███▋      | 201866/552076 [00:01<00:01, 184634.19it/s] 40%|███▉      | 220293/552076 [00:01<00:01, 183663.59it/s] 43%|████▎     | 239438/552076 [00:01<00:01, 185931.34it/s] 47%|████▋     | 258659/552076 [00:01<00:01, 187769.26it/s] 50%|█████     | 277843/552076 [00:01<00:01, 188968.55it/s] 54%|█████▎    | 296740/552076 [00:01<00:01, 188729.97it/s] 57%|█████▋    | 315885/552076 [00:01<00:01, 189535.20it/s] 61%|██████    | 334911/552076 [00:01<00:01, 189750.76it/s] 64%|██████▍   | 353887/552076 [00:02<00:01, 188440.44it/s] 68%|██████▊   | 373097/552076 [00:02<00:00, 189522.43it/s] 71%|███████   | 392053/552076 [00:02<00:00, 189142.43it/s] 74%|███████▍  | 411060/552076 [00:02<00:00, 189419.26it/s] 78%|███████▊  | 430296/552076 [00:02<00:00, 190290.84it/s] 81%|████████▏ | 449328/552076 [00:02<00:00, 189376.77it/s] 85%|████████▍ | 468269/552076 [00:02<00:00, 188949.51it/s] 88%|████████▊ | 487166/552076 [00:02<00:00, 188000.78it/s] 92%|█████████▏| 505969/552076 [00:02<00:00, 187799.81it/s] 95%|█████████▌| 524751/552076 [00:02<00:00, 186318.79it/s] 98%|█████████▊| 543387/552076 [00:03<00:00, 186284.58it/s]100%|██████████| 552076/552076 [00:03<00:00, 180592.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14221/552076 [00:00<00:03, 142209.12it/s]  5%|▌         | 28352/552076 [00:00<00:03, 141937.61it/s]  8%|▊         | 41906/552076 [00:00<00:03, 139953.88it/s] 10%|▉         | 55052/552076 [00:00<00:03, 137292.49it/s] 12%|█▏        | 68993/552076 [00:00<00:03, 137918.46it/s] 15%|█▌        | 84459/552076 [00:00<00:03, 142547.24it/s] 18%|█▊        | 97089/552076 [00:00<00:03, 121192.37it/s] 20%|█▉        | 108624/552076 [00:00<00:03, 119066.74it/s] 22%|██▏       | 122418/552076 [00:00<00:03, 124161.50it/s] 25%|██▍       | 136152/552076 [00:01<00:03, 127840.13it/s] 27%|██▋       | 148807/552076 [00:01<00:03, 120812.01it/s] 29%|██▉       | 160878/552076 [00:01<00:03, 114113.89it/s] 31%|███       | 172359/552076 [00:01<00:03, 106094.73it/s] 33%|███▎      | 184413/552076 [00:01<00:03, 110049.89it/s] 36%|███▌      | 196629/552076 [00:01<00:03, 113421.16it/s] 38%|███▊      | 208764/552076 [00:01<00:02, 115688.80it/s] 40%|████      | 221054/552076 [00:01<00:02, 117760.61it/s] 42%|████▏     | 232912/552076 [00:01<00:02, 117985.79it/s] 44%|████▍     | 245289/552076 [00:02<00:02, 119661.61it/s] 47%|████▋     | 257678/552076 [00:02<00:02, 120897.51it/s] 49%|████▉     | 269923/552076 [00:02<00:02, 121358.71it/s] 51%|█████     | 282207/552076 [00:02<00:02, 121798.07it/s] 53%|█████▎    | 294455/552076 [00:02<00:02, 122001.11it/s] 56%|█████▌    | 306841/552076 [00:02<00:02, 122551.28it/s] 58%|█████▊    | 319189/552076 [00:02<00:01, 122828.28it/s] 60%|██████    | 331543/552076 [00:02<00:01, 123040.44it/s] 62%|██████▏   | 343852/552076 [00:02<00:01, 122646.66it/s] 65%|██████▍   | 356121/552076 [00:02<00:01, 122510.68it/s] 67%|██████▋   | 368375/552076 [00:03<00:01, 121497.80it/s] 69%|██████▉   | 380721/552076 [00:03<00:01, 122079.05it/s] 71%|███████   | 393054/552076 [00:03<00:01, 122449.35it/s] 73%|███████▎  | 405309/552076 [00:03<00:01, 122477.55it/s] 76%|███████▌  | 417633/552076 [00:03<00:01, 122703.32it/s] 78%|███████▊  | 429905/552076 [00:03<00:00, 122646.87it/s] 80%|████████  | 442171/552076 [00:03<00:00, 122544.88it/s] 82%|████████▏ | 454450/552076 [00:03<00:00, 122616.42it/s] 85%|████████▍ | 466713/552076 [00:03<00:00, 122469.61it/s] 87%|████████▋ | 479002/552076 [00:03<00:00, 122592.66it/s] 89%|████████▉ | 491345/552076 [00:04<00:00, 122840.34it/s] 91%|█████████ | 503630/552076 [00:04<00:00, 120713.95it/s] 93%|█████████▎| 515802/552076 [00:04<00:00, 121013.36it/s] 96%|█████████▌| 528068/552076 [00:04<00:00, 121501.35it/s] 98%|█████████▊| 540328/552076 [00:04<00:00, 121828.04it/s]100%|██████████| 552076/552076 [00:04<00:00, 122349.08it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11865/552076 [00:00<00:04, 118645.87it/s]  3%|▎         | 18117/552076 [00:00<00:05, 93471.38it/s]   5%|▌         | 29381/552076 [00:00<00:05, 98499.92it/s]  7%|▋         | 39073/552076 [00:00<00:05, 98018.54it/s]  9%|▉         | 49536/552076 [00:00<00:05, 99780.64it/s] 11%|█         | 61688/552076 [00:00<00:04, 105438.86it/s] 13%|█▎        | 73879/552076 [00:00<00:04, 109892.52it/s] 16%|█▌        | 86115/552076 [00:00<00:04, 113356.26it/s] 18%|█▊        | 98405/552076 [00:00<00:03, 116059.05it/s] 20%|██        | 110657/552076 [00:01<00:03, 117923.12it/s] 22%|██▏       | 122545/552076 [00:01<00:03, 118207.42it/s] 24%|██▍       | 134861/552076 [00:01<00:03, 119648.90it/s] 27%|██▋       | 147117/552076 [00:01<00:03, 120503.74it/s] 29%|██▉       | 159478/552076 [00:01<00:03, 121416.32it/s] 31%|███       | 171839/552076 [00:01<00:03, 122064.69it/s] 33%|███▎      | 184255/552076 [00:01<00:02, 122685.42it/s] 36%|███▌      | 196676/552076 [00:01<00:02, 123138.53it/s] 38%|███▊      | 209076/552076 [00:01<00:02, 123393.73it/s] 40%|████      | 221406/552076 [00:01<00:02, 122840.99it/s] 42%|████▏     | 233684/552076 [00:02<00:02, 121145.20it/s] 45%|████▍     | 246085/552076 [00:02<00:02, 121990.08it/s] 47%|████▋     | 258463/552076 [00:02<00:02, 122520.33it/s] 49%|████▉     | 270732/552076 [00:02<00:02, 122568.24it/s] 51%|█████▏    | 283021/552076 [00:02<00:02, 122664.10it/s] 53%|█████▎    | 295289/552076 [00:02<00:02, 122501.57it/s] 56%|█████▌    | 307540/552076 [00:02<00:02, 121382.99it/s] 58%|█████▊    | 319929/552076 [00:02<00:01, 122123.21it/s] 60%|██████    | 332326/552076 [00:02<00:01, 122668.78it/s] 62%|██████▏   | 344596/552076 [00:02<00:02, 100037.75it/s] 64%|██████▍   | 355442/552076 [00:03<00:01, 102422.10it/s] 66%|██████▋   | 366177/552076 [00:03<00:02, 81674.61it/s]  69%|██████▊   | 378422/552076 [00:03<00:01, 90738.47it/s] 70%|███████   | 388520/552076 [00:03<00:01, 92159.09it/s] 72%|███████▏  | 398459/552076 [00:03<00:01, 86270.26it/s] 74%|███████▍  | 410384/552076 [00:03<00:01, 94075.37it/s] 76%|███████▌  | 420408/552076 [00:03<00:01, 92415.19it/s] 78%|███████▊  | 430088/552076 [00:03<00:01, 91418.32it/s] 80%|███████▉  | 439539/552076 [00:04<00:01, 89168.60it/s] 81%|████████▏ | 448685/552076 [00:04<00:01, 84878.01it/s] 83%|████████▎ | 459445/552076 [00:04<00:01, 90618.14it/s] 85%|████████▍ | 468757/552076 [00:04<00:00, 89325.69it/s] 87%|████████▋ | 480749/552076 [00:04<00:00, 96726.86it/s] 89%|████████▉ | 492725/552076 [00:04<00:00, 102648.14it/s] 91%|█████████▏| 504828/552076 [00:04<00:00, 107548.39it/s] 93%|█████████▎| 515862/552076 [00:04<00:00, 101989.99it/s] 96%|█████████▌| 527662/552076 [00:04<00:00, 106316.54it/s] 98%|█████████▊| 539957/552076 [00:04<00:00, 110812.70it/s]100%|█████████▉| 551246/552076 [00:05<00:00, 110094.70it/s]100%|██████████| 552076/552076 [00:05<00:00, 107991.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11688/552076 [00:00<00:04, 116872.59it/s]  4%|▍         | 22424/552076 [00:00<00:04, 113843.58it/s]  6%|▌         | 33727/552076 [00:00<00:04, 113598.23it/s]  8%|▊         | 45691/552076 [00:00<00:04, 115345.18it/s] 10%|█         | 56758/552076 [00:00<00:04, 113899.52it/s] 12%|█▏        | 66199/552076 [00:00<00:04, 101483.13it/s] 14%|█▎        | 75423/552076 [00:00<00:04, 98521.24it/s]  16%|█▌        | 86383/552076 [00:00<00:04, 101602.30it/s] 18%|█▊        | 98165/552076 [00:00<00:04, 105976.33it/s] 20%|█▉        | 110308/552076 [00:01<00:04, 110182.85it/s] 22%|██▏       | 121663/552076 [00:01<00:03, 111169.30it/s] 24%|██▍       | 134102/552076 [00:01<00:03, 114828.16it/s] 26%|██▋       | 146063/552076 [00:01<00:03, 116219.77it/s] 29%|██▊       | 157903/552076 [00:01<00:03, 116865.15it/s] 31%|███       | 169689/552076 [00:01<00:03, 117160.12it/s] 33%|███▎      | 181633/552076 [00:01<00:03, 117834.51it/s] 35%|███▌      | 193643/552076 [00:01<00:03, 118502.57it/s] 37%|███▋      | 205488/552076 [00:01<00:02, 117853.74it/s] 39%|███▉      | 217271/552076 [00:01<00:02, 115709.52it/s] 41%|████▏     | 228849/552076 [00:02<00:02, 114431.42it/s] 44%|████▎     | 240300/552076 [00:02<00:02, 113606.93it/s] 46%|████▌     | 251668/552076 [00:02<00:02, 111449.10it/s] 48%|████▊     | 262832/552076 [00:02<00:02, 111505.46it/s] 50%|████▉     | 274052/552076 [00:02<00:02, 111710.08it/s] 52%|█████▏    | 285281/552076 [00:02<00:02, 111882.98it/s] 54%|█████▎    | 296512/552076 [00:02<00:02, 112010.06it/s] 56%|█████▌    | 307725/552076 [00:02<00:02, 112044.92it/s] 58%|█████▊    | 318932/552076 [00:02<00:02, 111955.52it/s] 60%|█████▉    | 330414/552076 [00:02<00:01, 112798.51it/s] 62%|██████▏   | 341697/552076 [00:03<00:01, 112608.84it/s] 64%|██████▍   | 352960/552076 [00:03<00:02, 89539.54it/s]  66%|██████▌   | 362662/552076 [00:03<00:02, 78124.45it/s] 67%|██████▋   | 372470/552076 [00:03<00:02, 83201.70it/s] 69%|██████▉   | 383283/552076 [00:03<00:01, 89382.89it/s] 71%|███████▏  | 393860/552076 [00:03<00:01, 93738.52it/s] 73%|███████▎  | 404991/552076 [00:03<00:01, 98396.66it/s] 75%|███████▌  | 415218/552076 [00:03<00:01, 99526.70it/s] 77%|███████▋  | 425443/552076 [00:03<00:01, 100021.11it/s] 79%|███████▉  | 437128/552076 [00:04<00:01, 104537.71it/s] 81%|████████▏ | 449675/552076 [00:04<00:00, 110044.33it/s] 84%|████████▎ | 461921/552076 [00:04<00:00, 113495.07it/s] 86%|████████▌ | 473836/552076 [00:04<00:00, 115132.97it/s] 88%|████████▊ | 486483/552076 [00:04<00:00, 118313.77it/s] 90%|█████████ | 499228/552076 [00:04<00:00, 120912.31it/s] 93%|█████████▎| 511411/552076 [00:04<00:00, 119307.28it/s] 95%|█████████▍| 523411/552076 [00:04<00:00, 117370.20it/s] 97%|█████████▋| 535657/552076 [00:04<00:00, 118851.94it/s] 99%|█████████▉| 547586/552076 [00:05<00:00, 117836.80it/s]100%|██████████| 552076/552076 [00:05<00:00, 109580.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5431/552076 [00:00<00:10, 54309.53it/s]  3%|▎         | 17733/552076 [00:00<00:08, 65241.01it/s]  5%|▌         | 29774/552076 [00:00<00:06, 75636.44it/s]  7%|▋         | 36768/552076 [00:00<00:07, 72071.33it/s]  8%|▊         | 43612/552076 [00:00<00:07, 64047.69it/s] 10%|▉         | 52796/552076 [00:00<00:07, 69898.86it/s] 12%|█▏        | 63785/552076 [00:00<00:06, 78463.93it/s] 14%|█▍        | 76036/552076 [00:00<00:05, 87949.04it/s] 16%|█▌        | 87646/552076 [00:00<00:04, 94846.99it/s] 18%|█▊        | 100042/552076 [00:01<00:04, 102034.42it/s] 20%|██        | 111011/552076 [00:01<00:04, 104215.10it/s] 22%|██▏       | 123079/552076 [00:01<00:03, 108662.38it/s] 25%|██▍       | 135444/552076 [00:01<00:03, 112762.07it/s] 27%|██▋       | 147690/552076 [00:01<00:03, 115505.18it/s] 29%|██▉       | 159454/552076 [00:01<00:03, 103625.10it/s] 31%|███       | 170196/552076 [00:01<00:03, 101757.38it/s] 33%|███▎      | 182490/552076 [00:01<00:03, 107301.88it/s] 35%|███▌      | 194837/552076 [00:01<00:03, 111688.48it/s] 38%|███▊      | 207339/552076 [00:01<00:02, 115377.73it/s] 40%|███▉      | 219842/552076 [00:02<00:02, 118112.37it/s] 42%|████▏     | 232344/552076 [00:02<00:02, 120101.71it/s] 44%|████▍     | 244706/552076 [00:02<00:02, 121132.63it/s] 47%|████▋     | 256971/552076 [00:02<00:02, 121583.14it/s] 49%|████▉     | 269188/552076 [00:02<00:02, 118471.18it/s] 51%|█████     | 281094/552076 [00:02<00:02, 102420.91it/s] 53%|█████▎    | 293479/552076 [00:02<00:02, 108026.65it/s] 55%|█████▌    | 305228/552076 [00:02<00:02, 110700.08it/s] 58%|█████▊    | 317675/552076 [00:02<00:02, 114499.00it/s] 60%|█████▉    | 330115/552076 [00:03<00:01, 117299.40it/s] 62%|██████▏   | 342538/552076 [00:03<00:01, 119293.50it/s] 64%|██████▍   | 354984/552076 [00:03<00:01, 120795.44it/s] 67%|██████▋   | 367448/552076 [00:03<00:01, 121922.69it/s] 69%|██████▉   | 379712/552076 [00:03<00:01, 107893.77it/s] 71%|███████   | 390849/552076 [00:03<00:01, 105242.28it/s] 73%|███████▎  | 403251/552076 [00:03<00:01, 110247.98it/s] 75%|███████▌  | 415807/552076 [00:03<00:01, 114433.10it/s] 78%|███████▊  | 428353/552076 [00:03<00:01, 117529.96it/s] 80%|███████▉  | 440899/552076 [00:04<00:00, 119800.97it/s] 82%|████████▏ | 453357/552076 [00:04<00:00, 121194.08it/s] 84%|████████▍ | 465822/552076 [00:04<00:00, 122210.09it/s] 87%|████████▋ | 478337/552076 [00:04<00:00, 123074.55it/s] 89%|████████▉ | 490694/552076 [00:04<00:00, 107435.92it/s] 91%|█████████ | 503274/552076 [00:04<00:00, 112354.35it/s] 93%|█████████▎| 515670/552076 [00:04<00:00, 115598.91it/s] 96%|█████████▌| 528001/552076 [00:04<00:00, 117806.98it/s] 98%|█████████▊| 540442/552076 [00:04<00:00, 119711.57it/s]100%|██████████| 552076/552076 [00:04<00:00, 111351.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6103/552076 [00:00<00:09, 60379.09it/s]  3%|▎         | 17361/552076 [00:00<00:07, 70134.40it/s]  5%|▌         | 29278/552076 [00:00<00:06, 80011.15it/s]  7%|▋         | 41371/552076 [00:00<00:05, 89049.19it/s] 10%|▉         | 53553/552076 [00:00<00:05, 96865.49it/s] 12%|█▏        | 64940/552076 [00:00<00:04, 101408.08it/s] 14%|█▍        | 77193/552076 [00:00<00:04, 106936.57it/s] 16%|█▌        | 89583/552076 [00:00<00:04, 111515.79it/s] 18%|█▊        | 101664/552076 [00:00<00:03, 114150.15it/s] 21%|██        | 113699/552076 [00:01<00:03, 115941.93it/s] 23%|██▎       | 125616/552076 [00:01<00:03, 116889.25it/s] 25%|██▍       | 137685/552076 [00:01<00:03, 118003.88it/s] 27%|██▋       | 149555/552076 [00:01<00:03, 118209.03it/s] 29%|██▉       | 161399/552076 [00:01<00:03, 113039.19it/s] 31%|███▏      | 173415/552076 [00:01<00:03, 115082.95it/s] 34%|███▎      | 184978/552076 [00:01<00:03, 97672.15it/s]  35%|███▌      | 195238/552076 [00:01<00:03, 92949.30it/s] 37%|███▋      | 205135/552076 [00:01<00:03, 91948.12it/s] 39%|███▉      | 214607/552076 [00:02<00:03, 85063.78it/s] 41%|████      | 225442/552076 [00:02<00:03, 90925.29it/s] 43%|████▎     | 234855/552076 [00:02<00:03, 84263.97it/s] 45%|████▍     | 246086/552076 [00:02<00:03, 91086.87it/s] 47%|████▋     | 258103/552076 [00:02<00:02, 98217.78it/s] 49%|████▉     | 269863/552076 [00:02<00:02, 103324.92it/s] 51%|█████     | 282193/552076 [00:02<00:02, 108601.07it/s] 53%|█████▎    | 294409/552076 [00:02<00:02, 112340.15it/s] 55%|█████▌    | 306235/552076 [00:02<00:02, 114051.78it/s] 58%|█████▊    | 318498/552076 [00:02<00:02, 116495.53it/s] 60%|█████▉    | 330707/552076 [00:03<00:01, 118119.08it/s] 62%|██████▏   | 342882/552076 [00:03<00:01, 119184.69it/s] 64%|██████▍   | 355212/552076 [00:03<00:01, 120388.75it/s] 67%|██████▋   | 367309/552076 [00:03<00:01, 119324.69it/s] 69%|██████▊   | 379502/552076 [00:03<00:01, 120091.59it/s] 71%|███████   | 391888/552076 [00:03<00:01, 121195.64it/s] 73%|███████▎  | 404151/552076 [00:03<00:01, 121620.38it/s] 75%|███████▌  | 416450/552076 [00:03<00:01, 122025.31it/s] 78%|███████▊  | 428731/552076 [00:03<00:01, 122257.00it/s] 80%|███████▉  | 440972/552076 [00:03<00:00, 122301.76it/s] 82%|████████▏ | 453318/552076 [00:04<00:00, 122646.54it/s] 84%|████████▍ | 465653/552076 [00:04<00:00, 122855.72it/s] 87%|████████▋ | 478016/552076 [00:04<00:00, 123086.32it/s] 89%|████████▉ | 490397/552076 [00:04<00:00, 123300.99it/s] 91%|█████████ | 502781/552076 [00:04<00:00, 123460.82it/s] 93%|█████████▎| 515129/552076 [00:04<00:00, 123415.51it/s] 96%|█████████▌| 527485/552076 [00:04<00:00, 123458.68it/s] 98%|█████████▊| 539832/552076 [00:04<00:00, 123186.43it/s]100%|██████████| 552076/552076 [00:04<00:00, 113233.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11954/552076 [00:00<00:04, 119537.55it/s]  4%|▍         | 23986/552076 [00:00<00:04, 119768.77it/s]  7%|▋         | 36013/552076 [00:00<00:04, 119918.22it/s]  9%|▊         | 48156/552076 [00:00<00:04, 120364.67it/s] 11%|█         | 60329/552076 [00:00<00:04, 120769.02it/s] 13%|█▎        | 72588/552076 [00:00<00:03, 121308.18it/s] 15%|█▌        | 84844/552076 [00:00<00:03, 121678.65it/s] 18%|█▊        | 97113/552076 [00:00<00:03, 121979.21it/s] 20%|█▉        | 109267/552076 [00:00<00:03, 121844.87it/s] 22%|██▏       | 120970/552076 [00:01<00:03, 119943.52it/s] 24%|██▍       | 133268/552076 [00:01<00:03, 120838.38it/s] 26%|██▋       | 145365/552076 [00:01<00:03, 120875.54it/s] 29%|██▊       | 157528/552076 [00:01<00:03, 121098.77it/s] 31%|███       | 169852/552076 [00:01<00:03, 121731.60it/s] 33%|███▎      | 182159/552076 [00:01<00:03, 122128.79it/s] 35%|███▌      | 194481/552076 [00:01<00:02, 122452.24it/s] 37%|███▋      | 206806/552076 [00:01<00:02, 122688.85it/s] 40%|███▉      | 219279/552076 [00:01<00:02, 123293.57it/s] 42%|████▏     | 231591/552076 [00:01<00:02, 122988.86it/s] 44%|████▍     | 243878/552076 [00:02<00:02, 112232.46it/s] 46%|████▋     | 255526/552076 [00:02<00:02, 113472.29it/s] 48%|████▊     | 266999/552076 [00:02<00:02, 104855.81it/s] 50%|█████     | 278332/552076 [00:02<00:02, 107260.53it/s] 53%|█████▎    | 290434/552076 [00:02<00:02, 111046.52it/s] 55%|█████▍    | 302673/552076 [00:02<00:02, 114221.43it/s] 57%|█████▋    | 314864/552076 [00:02<00:02, 116424.08it/s] 59%|█████▉    | 327199/552076 [00:02<00:01, 118417.04it/s] 61%|██████▏   | 339488/552076 [00:02<00:01, 119723.64it/s] 64%|██████▎   | 351670/552076 [00:02<00:01, 120342.42it/s] 66%|██████▌   | 363932/552076 [00:03<00:01, 121015.08it/s] 68%|██████▊   | 376064/552076 [00:03<00:01, 120051.86it/s] 70%|███████   | 388239/552076 [00:03<00:01, 120554.04it/s] 73%|███████▎  | 400311/552076 [00:03<00:01, 97025.11it/s]  75%|███████▍  | 412160/552076 [00:03<00:01, 102599.13it/s] 77%|███████▋  | 423929/552076 [00:03<00:01, 106703.04it/s] 79%|███████▉  | 435069/552076 [00:03<00:01, 89583.06it/s]  81%|████████  | 447220/552076 [00:03<00:01, 97247.15it/s] 83%|████████▎ | 459509/552076 [00:04<00:00, 103740.95it/s] 87%|████████▋ | 480936/552076 [00:04<00:00, 122733.66it/s] 90%|█████████ | 498172/552076 [00:04<00:00, 134335.51it/s] 93%|█████████▎| 513241/552076 [00:04<00:00, 130424.18it/s] 96%|█████████▌| 530657/552076 [00:04<00:00, 141048.29it/s] 99%|█████████▉| 545830/552076 [00:04<00:00, 138568.96it/s]100%|██████████| 552076/552076 [00:04<00:00, 120461.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16923/552076 [00:00<00:03, 169224.51it/s]  7%|▋         | 37930/552076 [00:00<00:02, 179705.22it/s] 11%|█         | 59849/552076 [00:00<00:02, 189970.28it/s] 15%|█▍        | 82327/552076 [00:00<00:02, 199224.03it/s] 19%|█▉        | 104688/552076 [00:00<00:02, 205961.28it/s] 23%|██▎       | 127058/552076 [00:00<00:02, 210978.80it/s] 27%|██▋       | 150087/552076 [00:00<00:01, 216422.65it/s] 31%|███▏      | 173430/552076 [00:00<00:01, 221257.83it/s] 35%|███▌      | 194966/552076 [00:00<00:01, 219454.58it/s] 39%|███▉      | 216351/552076 [00:01<00:01, 217741.87it/s] 43%|████▎     | 239674/552076 [00:01<00:01, 222166.93it/s] 47%|████▋     | 261996/552076 [00:01<00:01, 222481.24it/s] 52%|█████▏    | 284879/552076 [00:01<00:01, 224347.37it/s] 56%|█████▌    | 307847/552076 [00:01<00:01, 225918.66it/s] 60%|█████▉    | 330551/552076 [00:01<00:00, 226252.35it/s] 64%|██████▍   | 353120/552076 [00:01<00:00, 222249.49it/s] 68%|██████▊   | 375321/552076 [00:01<00:00, 220633.43it/s] 72%|███████▏  | 398504/552076 [00:01<00:00, 223876.15it/s] 76%|███████▋  | 421916/552076 [00:01<00:00, 226852.58it/s] 81%|████████  | 445068/552076 [00:02<00:00, 228231.22it/s] 85%|████████▍ | 467901/552076 [00:02<00:00, 226819.89it/s] 89%|████████▉ | 490748/552076 [00:02<00:00, 227309.57it/s] 93%|█████████▎| 513943/552076 [00:02<00:00, 228681.34it/s] 97%|█████████▋| 537152/552076 [00:02<00:00, 229692.63it/s]100%|██████████| 552076/552076 [00:02<00:00, 223081.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21126/552076 [00:00<00:02, 211256.17it/s]  6%|▌         | 30715/552076 [00:00<00:03, 155226.86it/s]  7%|▋         | 39527/552076 [00:00<00:04, 126357.47it/s]  9%|▊         | 48006/552076 [00:00<00:04, 110151.75it/s] 12%|█▏        | 65936/552076 [00:00<00:03, 124562.33it/s] 14%|█▍        | 79249/552076 [00:00<00:03, 127013.82it/s] 18%|█▊        | 96713/552076 [00:00<00:03, 138330.93it/s] 21%|██        | 114137/552076 [00:00<00:02, 147446.45it/s] 24%|██▍       | 131959/552076 [00:00<00:02, 155500.16it/s] 28%|██▊       | 152027/552076 [00:01<00:02, 166761.83it/s] 32%|███▏      | 175087/552076 [00:01<00:02, 181865.62it/s] 36%|███▌      | 196197/552076 [00:01<00:01, 189747.71it/s] 40%|███▉      | 219597/552076 [00:01<00:01, 201159.47it/s] 44%|████▍     | 243086/552076 [00:01<00:01, 210215.56it/s] 48%|████▊     | 266652/552076 [00:01<00:01, 217250.85it/s] 52%|█████▏    | 288772/552076 [00:01<00:01, 218266.31it/s] 56%|█████▋    | 311622/552076 [00:01<00:01, 221237.85it/s] 61%|██████    | 334965/552076 [00:01<00:00, 224757.99it/s] 65%|██████▍   | 358629/552076 [00:01<00:00, 228194.51it/s] 69%|██████▉   | 382162/552076 [00:02<00:00, 230288.40it/s] 73%|███████▎  | 405339/552076 [00:02<00:00, 230727.83it/s] 78%|███████▊  | 428691/552076 [00:02<00:00, 231557.03it/s] 82%|████████▏ | 452333/552076 [00:02<00:00, 232992.72it/s] 86%|████████▌ | 475666/552076 [00:02<00:00, 232182.90it/s] 90%|█████████ | 498909/552076 [00:02<00:00, 229166.47it/s] 95%|█████████▍| 521972/552076 [00:02<00:00, 229601.52it/s] 99%|█████████▊| 544951/552076 [00:02<00:00, 228574.95it/s]100%|██████████| 552076/552076 [00:02<00:00, 201590.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21755/552076 [00:00<00:02, 217545.54it/s]  8%|▊         | 43825/552076 [00:00<00:02, 218480.73it/s] 12%|█▏        | 66583/552076 [00:00<00:02, 221130.48it/s] 16%|█▌        | 87819/552076 [00:00<00:02, 218423.46it/s] 20%|█▉        | 110212/552076 [00:00<00:02, 220045.75it/s] 24%|██▍       | 132947/552076 [00:00<00:01, 222185.16it/s] 28%|██▊       | 155335/552076 [00:00<00:01, 222688.12it/s] 32%|███▏      | 177295/552076 [00:00<00:01, 221750.74it/s] 36%|███▌      | 198224/552076 [00:01<00:02, 160670.96it/s] 40%|███▉      | 220535/552076 [00:01<00:01, 175395.16it/s] 44%|████▍     | 243218/552076 [00:01<00:01, 188195.40it/s] 48%|████▊     | 266118/552076 [00:01<00:01, 198823.48it/s] 52%|█████▏    | 287063/552076 [00:01<00:01, 192008.11it/s] 56%|█████▌    | 307058/552076 [00:01<00:01, 190026.95it/s] 60%|█████▉    | 330047/552076 [00:01<00:01, 200454.44it/s] 64%|██████▎   | 351834/552076 [00:01<00:00, 205379.08it/s] 68%|██████▊   | 374707/552076 [00:01<00:00, 209929.43it/s] 72%|███████▏  | 397639/552076 [00:01<00:00, 215392.51it/s] 76%|███████▌  | 420633/552076 [00:02<00:00, 219558.75it/s] 80%|████████  | 443658/552076 [00:02<00:00, 222658.77it/s] 84%|████████▍ | 466091/552076 [00:02<00:00, 223155.84it/s] 89%|████████▊ | 488919/552076 [00:02<00:00, 224667.41it/s] 93%|█████████▎| 511462/552076 [00:02<00:00, 222560.24it/s] 97%|█████████▋| 534938/552076 [00:02<00:00, 226084.21it/s]100%|██████████| 552076/552076 [00:02<00:00, 210820.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21639/552076 [00:00<00:02, 216386.08it/s]  8%|▊         | 43657/552076 [00:00<00:02, 217507.60it/s] 12%|█▏        | 66151/552076 [00:00<00:02, 219684.52it/s] 16%|█▌        | 88729/552076 [00:00<00:02, 221475.75it/s] 20%|██        | 111495/552076 [00:00<00:01, 223295.05it/s] 24%|██▍       | 134055/552076 [00:00<00:01, 223981.16it/s] 28%|██▊       | 156453/552076 [00:00<00:01, 223978.95it/s] 32%|███▏      | 179232/552076 [00:00<00:01, 225106.49it/s] 37%|███▋      | 202290/552076 [00:00<00:01, 226718.41it/s] 41%|████      | 224709/552076 [00:01<00:01, 225952.85it/s] 45%|████▍     | 246814/552076 [00:01<00:01, 224457.25it/s] 49%|████▉     | 269274/552076 [00:01<00:01, 224497.23it/s] 53%|█████▎    | 291429/552076 [00:01<00:01, 223454.10it/s] 57%|█████▋    | 313680/552076 [00:01<00:01, 223168.49it/s] 61%|██████    | 335853/552076 [00:01<00:00, 221529.99it/s] 65%|██████▍   | 357908/552076 [00:01<00:00, 220113.55it/s] 69%|██████▉   | 380482/552076 [00:01<00:00, 221770.78it/s] 73%|███████▎  | 402616/552076 [00:01<00:00, 218294.93it/s] 77%|███████▋  | 424766/552076 [00:01<00:00, 219245.80it/s] 81%|████████  | 447535/552076 [00:02<00:00, 221710.61it/s] 85%|████████▌ | 470688/552076 [00:02<00:00, 224567.60it/s] 89%|████████▉ | 493205/552076 [00:02<00:00, 224747.88it/s] 93%|█████████▎| 515796/552076 [00:02<00:00, 225092.12it/s] 98%|█████████▊| 538720/552076 [00:02<00:00, 226317.66it/s]100%|██████████| 552076/552076 [00:02<00:00, 223445.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22125/552076 [00:00<00:02, 221248.63it/s]  8%|▊         | 44954/552076 [00:00<00:02, 223313.82it/s] 12%|█▏        | 67364/552076 [00:00<00:02, 223548.84it/s] 16%|█▌        | 89379/552076 [00:00<00:02, 222516.19it/s] 20%|██        | 112306/552076 [00:00<00:01, 224497.57it/s] 25%|██▍       | 135530/552076 [00:00<00:01, 226765.14it/s] 29%|██▊       | 158652/552076 [00:00<00:01, 228081.76it/s] 33%|███▎      | 181830/552076 [00:00<00:01, 229178.68it/s] 37%|███▋      | 203480/552076 [00:00<00:01, 224801.90it/s] 41%|████      | 225092/552076 [00:01<00:01, 186511.61it/s] 44%|████▍     | 244224/552076 [00:01<00:01, 187887.29it/s] 48%|████▊     | 263352/552076 [00:01<00:01, 172384.81it/s] 51%|█████▏    | 283641/552076 [00:01<00:01, 180527.63it/s] 55%|█████▌    | 305386/552076 [00:01<00:01, 190216.10it/s] 59%|█████▉    | 324856/552076 [00:01<00:01, 173253.83it/s] 62%|██████▏   | 344568/552076 [00:01<00:01, 179781.82it/s] 66%|██████▌   | 363034/552076 [00:01<00:01, 166595.28it/s] 70%|██████▉   | 386320/552076 [00:01<00:00, 182143.75it/s] 74%|███████▍  | 408704/552076 [00:02<00:00, 192924.81it/s] 78%|███████▊  | 431245/552076 [00:02<00:00, 201641.69it/s] 82%|████████▏ | 454299/552076 [00:02<00:00, 209519.30it/s] 86%|████████▋ | 476321/552076 [00:02<00:00, 212616.12it/s] 90%|█████████ | 499557/552076 [00:02<00:00, 218175.18it/s] 95%|█████████▍| 522320/552076 [00:02<00:00, 220926.03it/s] 99%|█████████▉| 545652/552076 [00:02<00:00, 224502.86it/s]100%|██████████| 552076/552076 [00:02<00:00, 205360.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21843/552076 [00:00<00:02, 218421.88it/s]  8%|▊         | 44547/552076 [00:00<00:02, 220935.58it/s] 12%|█▏        | 67146/552076 [00:00<00:02, 222427.13it/s] 16%|█▋        | 90120/552076 [00:00<00:02, 224570.44it/s] 20%|██        | 112659/552076 [00:00<00:01, 224814.30it/s] 24%|██▍       | 134305/552076 [00:00<00:01, 222240.00it/s] 28%|██▊       | 156559/552076 [00:00<00:01, 222329.50it/s] 32%|███▏      | 178657/552076 [00:00<00:01, 221920.60it/s] 37%|███▋      | 201632/552076 [00:00<00:01, 224210.99it/s] 41%|████      | 224017/552076 [00:01<00:01, 224099.59it/s] 45%|████▍     | 247213/552076 [00:01<00:01, 226399.21it/s] 49%|████▉     | 269938/552076 [00:01<00:01, 226653.36it/s] 53%|█████▎    | 293117/552076 [00:01<00:01, 228168.26it/s] 57%|█████▋    | 316308/552076 [00:01<00:01, 229276.16it/s] 61%|██████▏   | 339341/552076 [00:01<00:00, 229589.56it/s] 66%|██████▌   | 362201/552076 [00:01<00:00, 228543.87it/s] 70%|██████▉   | 385313/552076 [00:01<00:00, 229308.77it/s] 74%|███████▍  | 408197/552076 [00:01<00:00, 228004.87it/s] 78%|███████▊  | 430967/552076 [00:02<00:00, 151117.37it/s] 81%|████████▏ | 449443/552076 [00:02<00:00, 159108.21it/s] 85%|████████▍ | 467821/552076 [00:02<00:00, 146277.65it/s] 88%|████████▊ | 485436/552076 [00:02<00:00, 154117.67it/s] 91%|█████████ | 502311/552076 [00:02<00:00, 156486.91it/s] 95%|█████████▍| 521957/552076 [00:02<00:00, 166659.37it/s] 99%|█████████▊| 544559/552076 [00:02<00:00, 180912.10it/s]100%|██████████| 552076/552076 [00:02<00:00, 200022.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20357/552076 [00:00<00:02, 203562.43it/s]  8%|▊         | 41483/552076 [00:00<00:02, 205811.63it/s] 12%|█▏        | 64180/552076 [00:00<00:02, 211731.24it/s] 16%|█▌        | 86984/552076 [00:00<00:02, 216371.57it/s] 20%|█▉        | 109703/552076 [00:00<00:02, 219504.52it/s] 24%|██▍       | 132845/552076 [00:00<00:01, 222947.14it/s] 28%|██▊       | 156199/552076 [00:00<00:01, 226020.89it/s] 33%|███▎      | 179971/552076 [00:00<00:01, 229407.18it/s] 37%|███▋      | 203129/552076 [00:00<00:01, 230054.31it/s] 41%|████      | 226725/552076 [00:01<00:01, 231793.50it/s] 45%|████▌     | 250172/552076 [00:01<00:01, 232588.10it/s] 50%|████▉     | 273511/552076 [00:01<00:01, 232826.33it/s] 54%|█████▍    | 296913/552076 [00:01<00:01, 233181.22it/s] 58%|█████▊    | 320206/552076 [00:01<00:00, 233102.86it/s] 62%|██████▏   | 343385/552076 [00:01<00:00, 228850.09it/s] 66%|██████▋   | 366196/552076 [00:01<00:00, 227450.86it/s] 70%|███████   | 388891/552076 [00:01<00:00, 227099.19it/s] 75%|███████▍  | 412038/552076 [00:01<00:00, 228390.49it/s] 79%|███████▉  | 435736/552076 [00:01<00:00, 230900.18it/s] 83%|████████▎ | 458882/552076 [00:02<00:00, 231065.10it/s] 87%|████████▋ | 481982/552076 [00:02<00:00, 230328.36it/s] 91%|█████████▏| 505011/552076 [00:02<00:00, 229596.40it/s] 96%|█████████▌| 528839/552076 [00:02<00:00, 232132.25it/s]100%|██████████| 552076/552076 [00:02<00:00, 229099.45it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15009/552076 [00:00<00:03, 150076.90it/s]  4%|▍         | 21909/552076 [00:00<00:04, 110958.01it/s]  7%|▋         | 40559/552076 [00:00<00:04, 126305.54it/s] 11%|█▏        | 62739/552076 [00:00<00:03, 145038.04it/s] 15%|█▌        | 84756/552076 [00:00<00:02, 161578.87it/s] 20%|█▉        | 107791/552076 [00:00<00:02, 177473.36it/s] 23%|██▎       | 129661/552076 [00:00<00:02, 188110.39it/s] 28%|██▊       | 152863/552076 [00:00<00:02, 199432.84it/s] 32%|███▏      | 175873/552076 [00:00<00:01, 207736.83it/s] 36%|███▌      | 197026/552076 [00:01<00:01, 206496.94it/s] 39%|███▉      | 217943/552076 [00:01<00:01, 198136.89it/s] 44%|████▎     | 240688/552076 [00:01<00:01, 206104.30it/s] 48%|████▊     | 262478/552076 [00:01<00:01, 209504.45it/s] 52%|█████▏    | 285648/552076 [00:01<00:01, 215702.17it/s] 56%|█████▌    | 307403/552076 [00:01<00:01, 215029.28it/s] 60%|█████▉    | 330474/552076 [00:01<00:01, 219502.40it/s] 64%|██████▍   | 352741/552076 [00:01<00:00, 220442.93it/s] 68%|██████▊   | 375647/552076 [00:01<00:00, 222957.86it/s] 72%|███████▏  | 398007/552076 [00:01<00:00, 222401.02it/s] 76%|███████▌  | 420703/552076 [00:02<00:00, 223749.11it/s] 80%|████████  | 443790/552076 [00:02<00:00, 225837.47it/s] 85%|████████▍ | 466896/552076 [00:02<00:00, 227379.01it/s] 89%|████████▊ | 489963/552076 [00:02<00:00, 228355.02it/s] 93%|█████████▎| 512815/552076 [00:02<00:00, 227196.46it/s] 97%|█████████▋| 535890/552076 [00:02<00:00, 228249.43it/s]100%|██████████| 552076/552076 [00:02<00:00, 212524.08it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21690/552076 [00:00<00:02, 216893.48it/s]  8%|▊         | 43868/552076 [00:00<00:02, 218333.82it/s] 12%|█▏        | 66871/552076 [00:00<00:02, 221714.84it/s] 16%|█▌        | 89358/552076 [00:00<00:02, 222650.85it/s] 20%|██        | 112323/552076 [00:00<00:01, 224703.41it/s] 24%|██▍       | 134815/552076 [00:00<00:01, 224765.83it/s] 28%|██▊       | 157174/552076 [00:00<00:01, 224409.60it/s] 33%|███▎      | 180697/552076 [00:00<00:01, 227546.80it/s] 37%|███▋      | 203755/552076 [00:00<00:01, 228446.80it/s] 41%|████      | 227233/552076 [00:01<00:01, 230309.04it/s] 45%|████▌     | 249663/552076 [00:01<00:01, 227790.10it/s] 49%|████▉     | 272345/552076 [00:01<00:01, 227494.35it/s] 53%|█████▎    | 295299/552076 [00:01<00:01, 228102.16it/s] 58%|█████▊    | 317907/552076 [00:01<00:01, 227357.94it/s] 62%|██████▏   | 341149/552076 [00:01<00:00, 228851.38it/s] 66%|██████▌   | 364236/552076 [00:01<00:00, 229452.50it/s] 70%|███████   | 387114/552076 [00:01<00:00, 228576.09it/s] 74%|███████▍  | 410072/552076 [00:01<00:00, 228874.61it/s] 78%|███████▊  | 432928/552076 [00:01<00:00, 224531.84it/s] 83%|████████▎ | 455596/552076 [00:02<00:00, 225169.18it/s] 87%|████████▋ | 479081/552076 [00:02<00:00, 227986.74it/s] 91%|█████████ | 502002/552076 [00:02<00:00, 228350.46it/s] 95%|█████████▌| 525407/552076 [00:02<00:00, 230028.11it/s] 99%|█████████▉| 548417/552076 [00:02<00:00, 228660.03it/s]100%|██████████| 552076/552076 [00:02<00:00, 227511.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21031/552076 [00:00<00:02, 210302.18it/s]  8%|▊         | 41905/552076 [00:00<00:02, 209828.12it/s] 12%|█▏        | 63954/552076 [00:00<00:02, 212914.82it/s] 16%|█▌        | 86560/552076 [00:00<00:02, 216692.84it/s] 20%|█▉        | 109201/552076 [00:00<00:02, 219516.89it/s] 23%|██▎       | 127644/552076 [00:00<00:02, 179336.48it/s] 26%|██▌       | 144324/552076 [00:00<00:02, 156131.06it/s] 29%|██▉       | 159598/552076 [00:00<00:02, 151196.93it/s] 33%|███▎      | 181115/552076 [00:00<00:02, 166002.51it/s] 37%|███▋      | 203586/552076 [00:01<00:01, 180119.83it/s] 40%|████      | 222155/552076 [00:01<00:02, 164636.77it/s] 43%|████▎     | 239267/552076 [00:01<00:02, 152290.14it/s] 47%|████▋     | 261510/552076 [00:01<00:01, 168202.07it/s] 51%|█████▏    | 284166/552076 [00:01<00:01, 182286.42it/s] 55%|█████▌    | 305631/552076 [00:01<00:01, 190919.73it/s] 59%|█████▉    | 327504/552076 [00:01<00:01, 198490.10it/s] 63%|██████▎   | 349996/552076 [00:01<00:00, 205740.67it/s] 67%|██████▋   | 372641/552076 [00:01<00:00, 211543.17it/s] 72%|███████▏  | 395387/552076 [00:02<00:00, 216076.72it/s] 76%|███████▌  | 417303/552076 [00:02<00:00, 215081.05it/s] 80%|███████▉  | 439231/552076 [00:02<00:00, 216321.37it/s] 84%|████████▎ | 461017/552076 [00:02<00:00, 215838.46it/s] 88%|████████▊ | 483987/552076 [00:02<00:00, 219817.03it/s] 92%|█████████▏| 506062/552076 [00:02<00:00, 217240.62it/s] 96%|█████████▌| 527859/552076 [00:02<00:00, 215611.64it/s]100%|█████████▉| 550462/552076 [00:02<00:00, 218632.53it/s]100%|██████████| 552076/552076 [00:02<00:00, 198500.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14676/552076 [00:00<00:03, 146753.14it/s]  6%|▌         | 32623/552076 [00:00<00:03, 155243.20it/s] 10%|▉         | 53946/552076 [00:00<00:02, 169031.95it/s] 14%|█▎        | 74997/552076 [00:00<00:02, 179650.56it/s] 18%|█▊        | 97210/552076 [00:00<00:02, 190584.53it/s] 21%|██▏       | 118631/552076 [00:00<00:02, 197103.32it/s] 26%|██▌       | 141534/552076 [00:00<00:01, 205704.38it/s] 30%|██▉       | 164575/552076 [00:00<00:01, 212540.21it/s] 34%|███▎      | 186316/552076 [00:00<00:01, 213976.79it/s] 38%|███▊      | 208044/552076 [00:01<00:01, 214954.94it/s] 42%|████▏     | 230264/552076 [00:01<00:01, 217075.84it/s] 46%|████▌     | 253382/552076 [00:01<00:01, 221122.93it/s] 50%|████▉     | 275395/552076 [00:01<00:01, 218456.85it/s] 54%|█████▍    | 297179/552076 [00:01<00:01, 167091.38it/s] 57%|█████▋    | 315665/552076 [00:01<00:01, 129470.14it/s] 60%|█████▉    | 331152/552076 [00:01<00:01, 117685.87it/s] 64%|██████▎   | 350808/552076 [00:01<00:01, 133791.49it/s] 68%|██████▊   | 373163/552076 [00:02<00:01, 152113.96it/s] 71%|███████▏  | 393559/552076 [00:02<00:00, 164670.87it/s] 75%|███████▌  | 415512/552076 [00:02<00:00, 178014.70it/s] 79%|███████▉  | 436653/552076 [00:02<00:00, 186869.95it/s] 83%|████████▎ | 457737/552076 [00:02<00:00, 193466.37it/s] 87%|████████▋ | 478686/552076 [00:02<00:00, 198009.42it/s] 91%|█████████ | 501342/552076 [00:02<00:00, 205787.53it/s] 95%|█████████▌| 524611/552076 [00:02<00:00, 213180.99it/s] 99%|█████████▉| 547779/552076 [00:02<00:00, 218412.36it/s]100%|██████████| 552076/552076 [00:02<00:00, 190274.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22630/552076 [00:00<00:02, 226296.44it/s]  8%|▊         | 44153/552076 [00:00<00:02, 222857.91it/s] 12%|█▏        | 66992/552076 [00:00<00:02, 224488.78it/s] 16%|█▌        | 88961/552076 [00:00<00:02, 223024.75it/s] 20%|██        | 110904/552076 [00:00<00:01, 221931.19it/s] 24%|██▍       | 133344/552076 [00:00<00:01, 222663.33it/s] 28%|██▊       | 156358/552076 [00:00<00:01, 224852.68it/s] 32%|███▏      | 178974/552076 [00:00<00:01, 225241.11it/s] 37%|███▋      | 202323/552076 [00:00<00:01, 227652.40it/s] 41%|████      | 225960/552076 [00:01<00:01, 230199.31it/s] 45%|████▌     | 249183/552076 [00:01<00:01, 230802.87it/s] 49%|████▉     | 272958/552076 [00:01<00:01, 232843.74it/s] 54%|█████▍    | 296743/552076 [00:01<00:01, 234321.60it/s] 58%|█████▊    | 320739/552076 [00:01<00:00, 235983.18it/s] 62%|██████▏   | 344194/552076 [00:01<00:00, 233088.56it/s] 67%|██████▋   | 367634/552076 [00:01<00:00, 233478.02it/s] 71%|███████   | 390918/552076 [00:01<00:00, 232418.22it/s] 75%|███████▌  | 414388/552076 [00:01<00:00, 233097.82it/s] 79%|███████▉  | 437865/552076 [00:01<00:00, 233596.70it/s] 84%|████████▎ | 461204/552076 [00:02<00:00, 232050.81it/s] 88%|████████▊ | 484397/552076 [00:02<00:00, 228134.54it/s] 92%|█████████▏| 507217/552076 [00:02<00:00, 225784.00it/s] 96%|█████████▌| 530548/552076 [00:02<00:00, 227990.22it/s]100%|██████████| 552076/552076 [00:02<00:00, 228687.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22544/552076 [00:00<00:02, 225435.38it/s]  7%|▋         | 41048/552076 [00:00<00:02, 211575.13it/s]  9%|▉         | 51334/552076 [00:00<00:03, 136144.76it/s] 13%|█▎        | 70309/552076 [00:00<00:03, 148750.53it/s] 17%|█▋        | 93178/552076 [00:00<00:02, 166175.69it/s] 20%|██        | 110476/552076 [00:00<00:02, 168155.59it/s] 23%|██▎       | 126491/552076 [00:00<00:02, 157173.50it/s] 27%|██▋       | 149173/552076 [00:00<00:02, 173119.94it/s] 31%|███       | 171558/552076 [00:00<00:02, 185748.47it/s] 35%|███▌      | 194100/552076 [00:01<00:01, 196100.86it/s] 39%|███▉      | 216283/552076 [00:01<00:01, 203166.39it/s] 43%|████▎     | 239193/552076 [00:01<00:01, 210308.10it/s] 47%|████▋     | 261087/552076 [00:01<00:01, 212824.22it/s] 51%|█████▏    | 284304/552076 [00:01<00:01, 218279.34it/s] 56%|█████▌    | 306945/552076 [00:01<00:01, 220654.47it/s] 60%|█████▉    | 330220/552076 [00:01<00:00, 224146.62it/s] 64%|██████▍   | 353483/552076 [00:01<00:00, 226623.96it/s] 68%|██████▊   | 376503/552076 [00:01<00:00, 227683.51it/s] 72%|███████▏  | 399334/552076 [00:01<00:00, 223612.16it/s] 76%|███████▋  | 421995/552076 [00:02<00:00, 224502.90it/s] 81%|████████  | 445280/552076 [00:02<00:00, 226943.26it/s] 85%|████████▍ | 468623/552076 [00:02<00:00, 228847.96it/s] 89%|████████▉ | 491537/552076 [00:02<00:00, 228073.69it/s] 93%|█████████▎| 514366/552076 [00:02<00:00, 226830.51it/s] 97%|█████████▋| 537461/552076 [00:02<00:00, 228049.13it/s]100%|██████████| 552076/552076 [00:02<00:00, 210061.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21822/552076 [00:00<00:02, 218215.53it/s]  8%|▊         | 43999/552076 [00:00<00:02, 219267.43it/s] 12%|█▏        | 67240/552076 [00:00<00:02, 223049.96it/s] 16%|█▋        | 90359/552076 [00:00<00:02, 225428.69it/s] 21%|██        | 113184/552076 [00:00<00:01, 226267.16it/s] 24%|██▍       | 135227/552076 [00:00<00:01, 224482.73it/s] 29%|██▊       | 157883/552076 [00:00<00:01, 225100.36it/s] 33%|███▎      | 180519/552076 [00:00<00:01, 225475.56it/s] 37%|███▋      | 203421/552076 [00:00<00:01, 226525.62it/s] 41%|████      | 226333/552076 [00:01<00:01, 227295.71it/s] 45%|████▌     | 248463/552076 [00:01<00:01, 225460.43it/s] 49%|████▉     | 270585/552076 [00:01<00:01, 223755.41it/s] 53%|█████▎    | 292667/552076 [00:01<00:01, 220943.81it/s] 57%|█████▋    | 316025/552076 [00:01<00:01, 224588.19it/s] 61%|██████▏   | 338360/552076 [00:01<00:00, 222611.83it/s] 66%|██████▌   | 362090/552076 [00:01<00:00, 226822.26it/s] 70%|██████▉   | 384734/552076 [00:01<00:00, 225841.47it/s] 74%|███████▍  | 408298/552076 [00:01<00:00, 228692.54it/s] 78%|███████▊  | 431158/552076 [00:01<00:00, 228009.70it/s] 82%|████████▏ | 454498/552076 [00:02<00:00, 229599.40it/s] 87%|████████▋ | 477944/552076 [00:02<00:00, 231035.21it/s] 91%|█████████ | 501255/552076 [00:02<00:00, 231653.66it/s] 95%|█████████▍| 524422/552076 [00:02<00:00, 229026.62it/s] 99%|█████████▉| 547333/552076 [00:02<00:00, 228389.77it/s]100%|██████████| 552076/552076 [00:02<00:00, 226642.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21288/552076 [00:00<00:02, 212872.59it/s]  6%|▌         | 33682/552076 [00:00<00:02, 175163.71it/s] 10%|▉         | 53075/552076 [00:00<00:02, 180400.41it/s] 13%|█▎        | 74485/552076 [00:00<00:02, 189340.97it/s] 16%|█▌        | 88993/552076 [00:00<00:02, 164935.44it/s] 20%|██        | 110933/552076 [00:00<00:02, 178205.95it/s] 24%|██▍       | 133527/552076 [00:00<00:02, 190264.08it/s] 28%|██▊       | 152983/552076 [00:00<00:02, 188826.37it/s] 31%|███       | 171308/552076 [00:00<00:02, 167873.76it/s] 34%|███▍      | 189403/552076 [00:01<00:02, 171590.93it/s] 37%|███▋      | 206611/552076 [00:01<00:02, 165594.00it/s] 41%|████▏     | 228895/552076 [00:01<00:01, 179420.13it/s] 46%|████▌     | 251530/552076 [00:01<00:01, 191319.36it/s] 50%|████▉     | 274807/552076 [00:01<00:01, 202116.91it/s] 54%|█████▍    | 297307/552076 [00:01<00:01, 208475.44it/s] 58%|█████▊    | 319689/552076 [00:01<00:01, 212852.15it/s] 62%|██████▏   | 342698/552076 [00:01<00:00, 217745.83it/s] 66%|██████▌   | 365166/552076 [00:01<00:00, 219778.32it/s] 70%|███████   | 388337/552076 [00:01<00:00, 223224.84it/s] 75%|███████▍  | 411537/552076 [00:02<00:00, 225786.32it/s] 79%|███████▊  | 434301/552076 [00:02<00:00, 226337.54it/s] 83%|████████▎ | 457526/552076 [00:02<00:00, 228078.85it/s] 87%|████████▋ | 480812/552076 [00:02<00:00, 229489.60it/s] 91%|█████████▏| 503840/552076 [00:02<00:00, 229723.43it/s] 95%|█████████▌| 526840/552076 [00:02<00:00, 226993.15it/s]100%|█████████▉| 549997/552076 [00:02<00:00, 228345.39it/s]100%|██████████| 552076/552076 [00:02<00:00, 205812.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9784/552076 [00:00<00:05, 97839.63it/s]  4%|▍         | 23005/552076 [00:00<00:04, 106113.89it/s]  7%|▋         | 36306/552076 [00:00<00:04, 112966.79it/s]  9%|▉         | 49529/552076 [00:00<00:04, 118129.39it/s] 11%|█▏        | 62635/552076 [00:00<00:04, 121730.18it/s] 14%|█▎        | 75621/552076 [00:00<00:03, 124058.79it/s] 16%|█▌        | 87027/552076 [00:00<00:04, 115884.98it/s] 18%|█▊        | 100248/552076 [00:00<00:03, 120341.35it/s] 20%|██        | 113163/552076 [00:00<00:03, 122853.50it/s] 23%|██▎       | 125958/552076 [00:01<00:03, 124337.35it/s] 25%|██▌       | 138224/552076 [00:01<00:03, 120347.82it/s] 27%|██▋       | 150170/552076 [00:01<00:03, 113311.64it/s] 29%|██▉       | 161523/552076 [00:01<00:03, 109165.08it/s] 31%|███▏      | 172901/552076 [00:01<00:03, 110508.87it/s] 33%|███▎      | 184107/552076 [00:01<00:03, 110967.51it/s] 35%|███▌      | 195281/552076 [00:01<00:03, 111196.03it/s] 37%|███▋      | 206420/552076 [00:01<00:03, 87244.16it/s]  39%|███▉      | 215959/552076 [00:01<00:03, 88365.37it/s] 41%|████      | 227416/552076 [00:02<00:03, 94875.13it/s] 43%|████▎     | 240099/552076 [00:02<00:03, 102631.46it/s] 46%|████▌     | 253549/552076 [00:02<00:02, 110484.75it/s] 48%|████▊     | 265160/552076 [00:02<00:02, 109894.13it/s] 50%|█████     | 276544/552076 [00:02<00:02, 107715.90it/s] 52%|█████▏    | 289447/552076 [00:02<00:02, 113331.24it/s] 55%|█████▍    | 302904/552076 [00:02<00:02, 118961.88it/s] 57%|█████▋    | 315542/552076 [00:02<00:01, 121091.45it/s] 59%|█████▉    | 327849/552076 [00:02<00:01, 115254.50it/s] 62%|██████▏   | 343818/552076 [00:02<00:01, 125751.95it/s] 66%|██████▋   | 366538/552076 [00:03<00:01, 145201.81it/s] 71%|███████   | 389290/552076 [00:03<00:00, 162880.03it/s] 75%|███████▍  | 412192/552076 [00:03<00:00, 178328.89it/s] 79%|███████▉  | 435429/552076 [00:03<00:00, 191702.55it/s] 83%|████████▎ | 458525/552076 [00:03<00:00, 202001.74it/s] 87%|████████▋ | 482133/552076 [00:03<00:00, 211144.93it/s] 92%|█████████▏| 505585/552076 [00:03<00:00, 217653.02it/s] 96%|█████████▌| 529317/552076 [00:03<00:00, 223202.03it/s]100%|██████████| 552076/552076 [00:03<00:00, 142082.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21969/552076 [00:00<00:02, 219688.11it/s]  8%|▊         | 43330/552076 [00:00<00:02, 217826.19it/s] 12%|█▏        | 66213/552076 [00:00<00:02, 221012.66it/s] 16%|█▌        | 89295/552076 [00:00<00:02, 223865.05it/s] 20%|██        | 112483/552076 [00:00<00:01, 226208.76it/s] 25%|██▍       | 135674/552076 [00:00<00:01, 227888.26it/s] 28%|██▊       | 155895/552076 [00:00<00:01, 202274.41it/s] 32%|███▏      | 174857/552076 [00:00<00:02, 164814.06it/s] 36%|███▌      | 198247/552076 [00:00<00:01, 180836.78it/s] 40%|████      | 221348/552076 [00:01<00:01, 193439.74it/s] 44%|████▍     | 241804/552076 [00:01<00:01, 196642.76it/s] 47%|████▋     | 261967/552076 [00:01<00:01, 158406.73it/s] 52%|█████▏    | 284584/552076 [00:01<00:01, 174049.57it/s] 56%|█████▌    | 307123/552076 [00:01<00:01, 186814.65it/s] 60%|█████▉    | 329093/552076 [00:01<00:01, 195595.89it/s] 64%|██████▎   | 351867/552076 [00:01<00:00, 204244.03it/s] 68%|██████▊   | 374195/552076 [00:01<00:00, 209603.14it/s] 72%|███████▏  | 397420/552076 [00:01<00:00, 215917.81it/s] 76%|███████▌  | 420669/552076 [00:02<00:00, 220634.84it/s] 80%|████████  | 443095/552076 [00:02<00:00, 220312.67it/s] 84%|████████▍ | 465836/552076 [00:02<00:00, 222392.64it/s] 89%|████████▊ | 488774/552076 [00:02<00:00, 224443.49it/s] 93%|█████████▎| 511404/552076 [00:02<00:00, 224994.26it/s] 97%|█████████▋| 533997/552076 [00:02<00:00, 220625.61it/s]100%|██████████| 552076/552076 [00:02<00:00, 207138.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22290/552076 [00:00<00:02, 222894.37it/s]  8%|▊         | 45184/552076 [00:00<00:02, 224673.54it/s] 12%|█▏        | 68157/552076 [00:00<00:02, 226164.31it/s] 16%|█▋        | 90920/552076 [00:00<00:02, 226599.35it/s] 21%|██        | 114069/552076 [00:00<00:01, 228044.13it/s] 25%|██▍       | 137203/552076 [00:00<00:01, 229021.76it/s] 29%|██▉       | 160280/552076 [00:00<00:01, 229542.85it/s] 33%|███▎      | 183566/552076 [00:00<00:01, 230527.44it/s] 37%|███▋      | 206827/552076 [00:00<00:01, 231146.87it/s] 42%|████▏     | 229239/552076 [00:01<00:01, 228992.04it/s] 46%|████▌     | 252054/552076 [00:01<00:01, 228737.20it/s] 50%|████▉     | 275133/552076 [00:01<00:01, 229347.30it/s] 54%|█████▍    | 297763/552076 [00:01<00:01, 228230.00it/s] 58%|█████▊    | 320374/552076 [00:01<00:01, 227111.65it/s] 62%|██████▏   | 342938/552076 [00:01<00:00, 225550.31it/s] 66%|██████▋   | 366101/552076 [00:01<00:00, 227338.75it/s] 70%|███████   | 388768/552076 [00:01<00:00, 224625.91it/s] 74%|███████▍  | 411191/552076 [00:01<00:00, 223140.92it/s] 79%|███████▊  | 433535/552076 [00:01<00:00, 223228.71it/s] 83%|████████▎ | 455841/552076 [00:02<00:00, 221558.02it/s] 87%|████████▋ | 477988/552076 [00:02<00:00, 221257.97it/s] 91%|█████████ | 500488/552076 [00:02<00:00, 222366.72it/s] 95%|█████████▍| 522722/552076 [00:02<00:00, 222257.50it/s] 99%|█████████▉| 546060/552076 [00:02<00:00, 225481.22it/s]100%|██████████| 552076/552076 [00:02<00:00, 226495.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21820/552076 [00:00<00:02, 218199.17it/s]  8%|▊         | 44461/552076 [00:00<00:02, 220596.65it/s] 12%|█▏        | 66958/552076 [00:00<00:02, 221889.82it/s] 16%|█▋        | 89925/552076 [00:00<00:02, 224167.24it/s] 20%|██        | 111664/552076 [00:00<00:01, 222089.69it/s] 24%|██▍       | 134260/552076 [00:00<00:01, 223236.53it/s] 28%|██▊       | 156754/552076 [00:00<00:01, 223742.53it/s] 32%|███▏      | 177339/552076 [00:00<00:01, 193321.26it/s] 36%|███▌      | 198520/552076 [00:00<00:01, 198519.78it/s] 40%|████      | 221352/552076 [00:01<00:01, 206607.94it/s] 44%|████▍     | 241868/552076 [00:01<00:01, 200425.55it/s] 47%|████▋     | 261849/552076 [00:01<00:01, 185851.06it/s] 51%|█████     | 280689/552076 [00:01<00:01, 186608.00it/s] 54%|█████▍    | 299469/552076 [00:01<00:01, 165178.75it/s] 57%|█████▋    | 316523/552076 [00:01<00:01, 156805.84it/s] 60%|██████    | 332668/552076 [00:01<00:01, 154848.57it/s] 63%|██████▎   | 348483/552076 [00:01<00:01, 143990.59it/s] 67%|██████▋   | 368259/552076 [00:01<00:01, 156776.92it/s] 71%|███████   | 391178/552076 [00:02<00:00, 173192.34it/s] 75%|███████▌  | 414502/552076 [00:02<00:00, 187687.86it/s] 79%|███████▉  | 437130/552076 [00:02<00:00, 197807.95it/s] 83%|████████▎ | 460624/552076 [00:02<00:00, 207653.72it/s] 88%|████████▊ | 483304/552076 [00:02<00:00, 213048.84it/s] 92%|█████████▏| 506515/552076 [00:02<00:00, 218427.87it/s] 96%|█████████▌| 529835/552076 [00:02<00:00, 222658.65it/s]100%|██████████| 552076/552076 [00:02<00:00, 199153.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22488/552076 [00:00<00:02, 224875.93it/s]  8%|▊         | 43758/552076 [00:00<00:02, 221078.66it/s] 12%|█▏        | 66174/552076 [00:00<00:02, 221992.30it/s] 16%|█▌        | 88733/552076 [00:00<00:02, 223057.52it/s] 20%|██        | 111486/552076 [00:00<00:01, 224376.96it/s] 24%|██▍       | 132534/552076 [00:00<00:01, 220016.36it/s] 28%|██▊       | 155054/552076 [00:00<00:01, 221544.88it/s] 32%|███▏      | 177307/552076 [00:00<00:01, 221839.40it/s] 36%|███▋      | 200212/552076 [00:00<00:01, 223953.27it/s] 40%|████      | 222161/552076 [00:01<00:01, 222594.28it/s] 44%|████▍     | 244115/552076 [00:01<00:01, 221668.53it/s] 49%|████▊     | 267954/552076 [00:01<00:01, 226431.59it/s] 53%|█████▎    | 291551/552076 [00:01<00:01, 229211.05it/s] 57%|█████▋    | 314285/552076 [00:01<00:01, 228364.68it/s] 61%|██████    | 337470/552076 [00:01<00:00, 229398.15it/s] 65%|██████▌   | 360320/552076 [00:01<00:00, 228306.51it/s] 69%|██████▉   | 383089/552076 [00:01<00:00, 211319.68it/s] 73%|███████▎  | 404429/552076 [00:01<00:00, 194973.29it/s] 77%|███████▋  | 424322/552076 [00:01<00:00, 191942.80it/s] 80%|████████  | 443804/552076 [00:02<00:00, 190789.32it/s] 84%|████████▍ | 463086/552076 [00:02<00:00, 178532.89it/s] 87%|████████▋ | 481242/552076 [00:02<00:00, 154426.21it/s] 90%|█████████ | 497474/552076 [00:02<00:00, 138486.22it/s] 94%|█████████▍| 517620/552076 [00:02<00:00, 152816.16it/s] 98%|█████████▊| 539580/552076 [00:02<00:00, 168156.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 201020.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21929/552076 [00:00<00:02, 219284.98it/s]  8%|▊         | 42568/552076 [00:00<00:02, 215249.51it/s] 12%|█▏        | 64717/552076 [00:00<00:02, 217084.02it/s] 16%|█▌        | 86922/552076 [00:00<00:02, 218548.86it/s] 20%|█▉        | 109173/552076 [00:00<00:02, 219720.67it/s] 24%|██▍       | 131809/552076 [00:00<00:01, 221669.25it/s] 28%|██▊       | 154146/552076 [00:00<00:01, 222176.18it/s] 32%|███▏      | 177030/552076 [00:00<00:01, 224131.77it/s] 36%|███▋      | 200872/552076 [00:00<00:01, 228232.69it/s] 41%|████      | 224789/552076 [00:01<00:01, 231405.85it/s] 45%|████▍     | 248008/552076 [00:01<00:01, 231640.44it/s] 49%|████▉     | 271883/552076 [00:01<00:01, 233726.39it/s] 53%|█████▎    | 294971/552076 [00:01<00:01, 231678.04it/s] 58%|█████▊    | 317944/552076 [00:01<00:01, 229487.64it/s] 62%|██████▏   | 341467/552076 [00:01<00:00, 231180.59it/s] 66%|██████▌   | 364765/552076 [00:01<00:00, 231714.59it/s] 70%|███████   | 388814/552076 [00:01<00:00, 234277.17it/s] 75%|███████▍  | 412205/552076 [00:01<00:00, 234147.68it/s] 79%|███████▉  | 435821/552076 [00:01<00:00, 234746.33it/s] 83%|████████▎ | 459278/552076 [00:02<00:00, 232451.90it/s] 87%|████████▋ | 482935/552076 [00:02<00:00, 233670.45it/s] 92%|█████████▏| 506299/552076 [00:02<00:00, 232439.31it/s] 96%|█████████▌| 529542/552076 [00:02<00:00, 230471.72it/s]100%|██████████| 552076/552076 [00:02<00:00, 218214.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22371/552076 [00:00<00:02, 223704.35it/s]  8%|▊         | 45091/552076 [00:00<00:02, 224739.37it/s] 11%|█         | 58338/552076 [00:00<00:02, 185885.12it/s] 13%|█▎        | 70372/552076 [00:00<00:03, 144527.78it/s] 17%|█▋        | 92804/552076 [00:00<00:02, 161792.01it/s] 21%|██        | 116126/552076 [00:00<00:02, 178160.28it/s] 25%|██▌       | 139600/552076 [00:00<00:02, 192046.02it/s] 29%|██▉       | 161050/552076 [00:00<00:01, 198272.00it/s] 33%|███▎      | 184197/552076 [00:00<00:01, 207184.10it/s] 38%|███▊      | 207293/552076 [00:01<00:01, 213785.70it/s] 42%|████▏     | 230349/552076 [00:01<00:01, 218553.68it/s] 46%|████▌     | 252862/552076 [00:01<00:01, 220483.62it/s] 50%|████▉     | 275728/552076 [00:01<00:01, 222872.05it/s] 54%|█████▍    | 298150/552076 [00:01<00:01, 223271.77it/s] 58%|█████▊    | 321409/552076 [00:01<00:01, 225985.13it/s] 62%|██████▏   | 344064/552076 [00:01<00:00, 226152.74it/s] 67%|██████▋   | 367665/552076 [00:01<00:00, 229020.04it/s] 71%|███████   | 390943/552076 [00:01<00:00, 230132.84it/s] 75%|███████▍  | 413977/552076 [00:01<00:00, 226090.58it/s] 79%|███████▉  | 437014/552076 [00:02<00:00, 227355.44it/s] 83%|████████▎ | 459976/552076 [00:02<00:00, 228029.68it/s] 87%|████████▋ | 483027/552076 [00:02<00:00, 228764.81it/s] 92%|█████████▏| 505916/552076 [00:02<00:00, 227143.47it/s] 96%|█████████▌| 529479/552076 [00:02<00:00, 229622.36it/s]100%|██████████| 552076/552076 [00:02<00:00, 218038.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22087/552076 [00:00<00:02, 220862.31it/s]  8%|▊         | 43669/552076 [00:00<00:02, 219323.68it/s] 12%|█▏        | 65874/552076 [00:00<00:02, 220133.18it/s] 16%|█▌        | 89676/552076 [00:00<00:02, 225208.52it/s] 20%|██        | 113157/552076 [00:00<00:01, 228003.50it/s] 25%|██▍       | 136077/552076 [00:00<00:01, 228358.43it/s] 29%|██▊       | 158494/552076 [00:00<00:01, 227084.47it/s] 33%|███▎      | 181846/552076 [00:00<00:01, 228977.00it/s] 37%|███▋      | 205262/552076 [00:00<00:01, 230505.60it/s] 41%|████      | 227458/552076 [00:01<00:01, 227873.02it/s] 45%|████▌     | 250411/552076 [00:01<00:01, 228365.22it/s] 50%|████▉     | 273593/552076 [00:01<00:01, 229388.59it/s] 54%|█████▎    | 296421/552076 [00:01<00:01, 229052.65it/s] 58%|█████▊    | 319119/552076 [00:01<00:01, 225091.36it/s] 62%|██████▏   | 342664/552076 [00:01<00:00, 228100.29it/s] 66%|██████▋   | 366125/552076 [00:01<00:00, 230013.25it/s] 71%|███████   | 389932/552076 [00:01<00:00, 232371.03it/s] 75%|███████▍  | 413138/552076 [00:01<00:00, 231522.86it/s] 79%|███████▉  | 436615/552076 [00:01<00:00, 232485.29it/s] 83%|████████▎ | 459908/552076 [00:02<00:00, 232617.10it/s] 88%|████████▊ | 483160/552076 [00:02<00:00, 224140.50it/s] 92%|█████████▏| 505816/552076 [00:02<00:00, 224857.93it/s] 96%|█████████▌| 528345/552076 [00:02<00:00, 224016.96it/s]100%|██████████| 552076/552076 [00:02<00:00, 228113.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 13887/552076 [00:00<00:03, 138868.15it/s]  6%|▌         | 31331/552076 [00:00<00:03, 147916.99it/s]  9%|▉         | 50788/552076 [00:00<00:03, 159379.60it/s] 12%|█▏        | 63716/552076 [00:00<00:03, 148972.84it/s] 16%|█▌        | 86204/552076 [00:00<00:02, 165756.64it/s] 20%|█▉        | 109138/552076 [00:00<00:02, 180792.31it/s] 24%|██▍       | 132029/552076 [00:00<00:02, 192959.84it/s] 27%|██▋       | 151120/552076 [00:00<00:02, 172750.07it/s] 31%|███       | 170125/552076 [00:00<00:02, 177599.39it/s] 34%|███▍      | 188096/552076 [00:01<00:02, 166992.14it/s] 38%|███▊      | 211512/552076 [00:01<00:01, 182714.32it/s] 42%|████▏     | 234049/552076 [00:01<00:01, 193713.11it/s] 46%|████▋     | 256613/552076 [00:01<00:01, 202298.17it/s] 50%|█████     | 278628/552076 [00:01<00:01, 207341.78it/s] 55%|█████▍    | 302106/552076 [00:01<00:01, 214873.05it/s] 59%|█████▉    | 325657/552076 [00:01<00:01, 220671.38it/s] 63%|██████▎   | 348457/552076 [00:01<00:00, 222818.83it/s] 67%|██████▋   | 371271/552076 [00:01<00:00, 224386.63it/s] 71%|███████▏  | 394398/552076 [00:01<00:00, 226405.60it/s] 76%|███████▌  | 417843/552076 [00:02<00:00, 228758.66it/s] 80%|███████▉  | 440875/552076 [00:02<00:00, 229223.76it/s] 84%|████████▍ | 464207/552076 [00:02<00:00, 230435.89it/s] 88%|████████▊ | 488050/552076 [00:02<00:00, 232775.38it/s] 93%|█████████▎| 511363/552076 [00:02<00:00, 228850.97it/s] 97%|█████████▋| 534809/552076 [00:02<00:00, 230504.87it/s]100%|██████████| 552076/552076 [00:02<00:00, 209230.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22382/552076 [00:00<00:02, 223817.01it/s]  8%|▊         | 45462/552076 [00:00<00:02, 225866.72it/s] 12%|█▏        | 68462/552076 [00:00<00:02, 227090.93it/s] 17%|█▋        | 92163/552076 [00:00<00:01, 229976.67it/s] 21%|██        | 115101/552076 [00:00<00:01, 229795.60it/s] 25%|██▌       | 138253/552076 [00:00<00:01, 230308.81it/s] 29%|██▉       | 161160/552076 [00:00<00:01, 229934.67it/s] 33%|███▎      | 184530/552076 [00:00<00:01, 231049.08it/s] 38%|███▊      | 207554/552076 [00:00<00:01, 230805.50it/s] 42%|████▏     | 229735/552076 [00:01<00:01, 194661.25it/s] 45%|████▌     | 249539/552076 [00:01<00:02, 143432.16it/s] 48%|████▊     | 266068/552076 [00:01<00:01, 148318.45it/s] 51%|█████     | 282472/552076 [00:01<00:01, 150442.08it/s] 54%|█████▍    | 298624/552076 [00:01<00:01, 135153.47it/s] 58%|█████▊    | 320241/552076 [00:01<00:01, 152273.70it/s] 62%|██████▏   | 342596/552076 [00:01<00:01, 168377.94it/s] 66%|██████▌   | 365724/552076 [00:01<00:01, 183335.46it/s] 70%|███████   | 389016/552076 [00:02<00:00, 195841.30it/s] 75%|███████▍  | 411790/552076 [00:02<00:00, 204429.84it/s] 79%|███████▉  | 435351/552076 [00:02<00:00, 212880.21it/s] 83%|████████▎ | 459069/552076 [00:02<00:00, 219629.51it/s] 88%|████████▊ | 483082/552076 [00:02<00:00, 225401.31it/s] 92%|█████████▏| 507234/552076 [00:02<00:00, 230005.05it/s] 96%|█████████▌| 530579/552076 [00:02<00:00, 229865.66it/s]100%|██████████| 552076/552076 [00:02<00:00, 202041.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22168/552076 [00:00<00:02, 221674.93it/s]  8%|▊         | 44703/552076 [00:00<00:02, 222764.08it/s] 12%|█▏        | 67182/552076 [00:00<00:02, 223366.48it/s] 16%|█▌        | 89253/552076 [00:00<00:02, 222561.79it/s] 20%|██        | 111430/552076 [00:00<00:01, 222323.40it/s] 24%|██▍       | 134674/552076 [00:00<00:01, 225263.04it/s] 29%|██▊       | 157871/552076 [00:00<00:01, 227233.32it/s] 33%|███▎      | 180062/552076 [00:00<00:01, 225609.60it/s] 37%|███▋      | 202982/552076 [00:00<00:01, 226674.76it/s] 41%|████      | 225544/552076 [00:01<00:01, 226355.57it/s] 45%|████▌     | 248789/552076 [00:01<00:01, 228148.38it/s] 49%|████▉     | 272292/552076 [00:01<00:01, 230168.15it/s] 54%|█████▎    | 295606/552076 [00:01<00:01, 231051.29it/s] 58%|█████▊    | 319070/552076 [00:01<00:01, 232113.93it/s] 62%|██████▏   | 343092/552076 [00:01<00:00, 234487.29it/s] 66%|██████▋   | 366446/552076 [00:01<00:00, 232242.18it/s] 71%|███████   | 389919/552076 [00:01<00:00, 232981.38it/s] 75%|███████▍  | 413175/552076 [00:01<00:00, 231237.09it/s] 79%|███████▉  | 436272/552076 [00:01<00:00, 228798.02it/s] 83%|████████▎ | 459139/552076 [00:02<00:00, 225631.14it/s] 87%|████████▋ | 482375/552076 [00:02<00:00, 227607.63it/s] 92%|█████████▏| 505623/552076 [00:02<00:00, 229046.53it/s] 96%|█████████▌| 528534/552076 [00:02<00:00, 228541.83it/s]100%|█████████▉| 551393/552076 [00:02<00:00, 228343.40it/s]100%|██████████| 552076/552076 [00:02<00:00, 228370.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22048/552076 [00:00<00:02, 220471.80it/s]  8%|▊         | 43719/552076 [00:00<00:02, 219329.52it/s] 12%|█▏        | 66230/552076 [00:00<00:02, 221029.68it/s] 16%|█▌        | 89221/552076 [00:00<00:02, 223620.49it/s] 20%|██        | 112272/552076 [00:00<00:01, 225641.09it/s] 25%|██▍       | 135924/552076 [00:00<00:01, 228797.96it/s] 29%|██▊       | 158546/552076 [00:00<00:01, 228015.69it/s] 33%|███▎      | 182553/552076 [00:00<00:01, 231502.84it/s] 37%|███▋      | 205938/552076 [00:00<00:01, 232199.29it/s] 41%|████▏     | 228285/552076 [00:01<00:01, 228784.27it/s] 45%|████▌     | 250687/552076 [00:01<00:01, 227332.59it/s] 50%|████▉     | 273768/552076 [00:01<00:01, 228364.50it/s] 54%|█████▍    | 297573/552076 [00:01<00:01, 231185.15it/s] 58%|█████▊    | 320723/552076 [00:01<00:01, 231276.94it/s] 62%|██████▏   | 343714/552076 [00:01<00:00, 230270.66it/s] 67%|██████▋   | 367693/552076 [00:01<00:00, 233044.42it/s] 71%|███████   | 391951/552076 [00:01<00:00, 235824.36it/s] 75%|███████▌  | 415501/552076 [00:01<00:00, 232120.63it/s] 79%|███████▉  | 438704/552076 [00:01<00:00, 226785.52it/s] 84%|████████▎ | 461403/552076 [00:02<00:00, 225689.71it/s] 88%|████████▊ | 484043/552076 [00:02<00:00, 225899.66it/s] 92%|█████████▏| 506644/552076 [00:02<00:00, 224358.94it/s] 96%|█████████▌| 529182/552076 [00:02<00:00, 224662.91it/s]100%|█████████▉| 551656/552076 [00:02<00:00, 223229.01it/s]100%|██████████| 552076/552076 [00:02<00:00, 227830.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21619/552076 [00:00<00:02, 216189.18it/s]  8%|▊         | 43766/552076 [00:00<00:02, 217744.25it/s] 12%|█▏        | 66158/552076 [00:00<00:02, 219560.04it/s] 16%|█▋        | 90165/552076 [00:00<00:02, 225334.23it/s] 20%|██        | 112217/552076 [00:00<00:01, 223867.61it/s] 24%|██▍       | 132800/552076 [00:00<00:01, 218131.46it/s] 28%|██▊       | 155867/552076 [00:00<00:01, 221744.69it/s] 32%|███▏      | 178534/552076 [00:00<00:01, 223198.15it/s] 36%|███▋      | 200469/552076 [00:00<00:01, 222026.61it/s] 40%|████      | 222299/552076 [00:01<00:01, 220893.64it/s] 44%|████▍     | 244670/552076 [00:01<00:01, 221728.94it/s] 48%|████▊     | 267667/552076 [00:01<00:01, 224135.97it/s] 53%|█████▎    | 290595/552076 [00:01<00:01, 225652.30it/s] 57%|█████▋    | 313777/552076 [00:01<00:01, 227467.14it/s] 61%|██████    | 336391/552076 [00:01<00:00, 226237.80it/s] 65%|██████▌   | 359194/552076 [00:01<00:00, 226770.95it/s] 69%|██████▉   | 382830/552076 [00:01<00:00, 229562.31it/s] 74%|███████▎  | 406640/552076 [00:01<00:00, 232057.24it/s] 78%|███████▊  | 430249/552076 [00:01<00:00, 233249.79it/s] 82%|████████▏ | 453736/552076 [00:02<00:00, 233731.24it/s] 87%|████████▋ | 477878/552076 [00:02<00:00, 235985.68it/s] 91%|█████████ | 502172/552076 [00:02<00:00, 238027.38it/s] 95%|█████████▌| 525979/552076 [00:02<00:00, 237855.49it/s]100%|█████████▉| 549922/552076 [00:02<00:00, 238325.23it/s]100%|██████████| 552076/552076 [00:02<00:00, 229010.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14484/552076 [00:00<00:03, 144831.16it/s]  5%|▌         | 28919/552076 [00:00<00:03, 144683.92it/s]  9%|▊         | 47057/552076 [00:00<00:03, 154031.46it/s] 13%|█▎        | 70695/552076 [00:00<00:02, 172006.93it/s] 17%|█▋        | 94425/552076 [00:00<00:02, 187481.67it/s] 21%|██▏       | 118256/552076 [00:00<00:02, 200297.01it/s] 26%|██▌       | 140834/552076 [00:00<00:01, 207314.62it/s] 30%|██▉       | 164983/552076 [00:00<00:01, 216506.46it/s] 34%|███▍      | 187756/552076 [00:00<00:01, 219755.22it/s] 38%|███▊      | 210738/552076 [00:01<00:01, 222678.92it/s] 42%|████▏     | 234082/552076 [00:01<00:01, 225799.48it/s] 47%|████▋     | 258108/552076 [00:01<00:01, 229948.89it/s] 51%|█████     | 281982/552076 [00:01<00:01, 232516.58it/s] 55%|█████▌    | 305226/552076 [00:01<00:01, 225211.79it/s] 60%|█████▉    | 329339/552076 [00:01<00:00, 229761.56it/s] 64%|██████▍   | 352666/552076 [00:01<00:00, 230801.72it/s] 68%|██████▊   | 376599/552076 [00:01<00:00, 233294.29it/s] 73%|███████▎  | 400657/552076 [00:01<00:00, 235430.18it/s] 77%|███████▋  | 424500/552076 [00:01<00:00, 236320.23it/s] 81%|████████  | 448270/552076 [00:02<00:00, 236731.36it/s] 86%|████████▌ | 472269/552076 [00:02<00:00, 237699.52it/s] 90%|████████▉ | 496050/552076 [00:02<00:00, 236991.87it/s] 94%|█████████▍| 520126/552076 [00:02<00:00, 238109.09it/s] 99%|█████████▊| 543944/552076 [00:02<00:00, 237995.46it/s]100%|██████████| 552076/552076 [00:02<00:00, 225677.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22019/552076 [00:00<00:02, 220181.29it/s]  8%|▊         | 44546/552076 [00:00<00:02, 221681.16it/s] 12%|█▏        | 67396/552076 [00:00<00:02, 223682.35it/s] 16%|█▋        | 90564/552076 [00:00<00:02, 226021.23it/s] 21%|██        | 113309/552076 [00:00<00:01, 226446.75it/s] 25%|██▍       | 135634/552076 [00:00<00:01, 225477.40it/s] 29%|██▊       | 158109/552076 [00:00<00:01, 225258.59it/s] 33%|███▎      | 181542/552076 [00:00<00:01, 227903.88it/s] 37%|███▋      | 203074/552076 [00:00<00:01, 221490.62it/s] 41%|████      | 224382/552076 [00:01<00:01, 218795.39it/s] 45%|████▍     | 247213/552076 [00:01<00:01, 221564.13it/s] 49%|████▉     | 269953/552076 [00:01<00:01, 223281.37it/s] 53%|█████▎    | 293443/552076 [00:01<00:01, 226642.02it/s] 57%|█████▋    | 316935/552076 [00:01<00:01, 229061.97it/s] 62%|██████▏   | 340562/552076 [00:01<00:00, 231175.90it/s] 66%|██████▌   | 364418/552076 [00:01<00:00, 233340.79it/s] 70%|███████   | 388095/552076 [00:01<00:00, 234358.31it/s] 75%|███████▍  | 411497/552076 [00:01<00:00, 233618.50it/s] 79%|███████▉  | 434836/552076 [00:01<00:00, 231936.54it/s] 83%|████████▎ | 458016/552076 [00:02<00:00, 231560.26it/s] 87%|████████▋ | 481623/552076 [00:02<00:00, 232894.07it/s] 92%|█████████▏| 505155/552076 [00:02<00:00, 233614.66it/s] 96%|█████████▌| 529019/552076 [00:02<00:00, 235098.64it/s]100%|██████████| 552076/552076 [00:02<00:00, 229657.87it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16152/552076 [00:00<00:03, 161517.84it/s]  7%|▋         | 36047/552076 [00:00<00:03, 171179.33it/s] 11%|█         | 58883/552076 [00:00<00:02, 185080.57it/s] 15%|█▍        | 81258/552076 [00:00<00:02, 195199.57it/s] 19%|█▊        | 102860/552076 [00:00<00:02, 201009.39it/s] 23%|██▎       | 125808/552076 [00:00<00:02, 208779.91it/s] 27%|██▋       | 148511/552076 [00:00<00:01, 213937.71it/s] 31%|███       | 172136/552076 [00:00<00:01, 220174.71it/s] 35%|███▌      | 195236/552076 [00:00<00:01, 223312.61it/s] 40%|███▉      | 218639/552076 [00:01<00:01, 226421.50it/s] 44%|████▍     | 241994/552076 [00:01<00:01, 228511.44it/s] 48%|████▊     | 264622/552076 [00:01<00:01, 226978.95it/s] 52%|█████▏    | 287166/552076 [00:01<00:01, 225778.79it/s] 56%|█████▌    | 310141/552076 [00:01<00:01, 226954.45it/s] 60%|██████    | 333220/552076 [00:01<00:00, 228089.63it/s] 64%|██████▍   | 355980/552076 [00:01<00:00, 225574.22it/s] 69%|██████▊   | 378509/552076 [00:01<00:00, 223663.60it/s] 73%|███████▎  | 401378/552076 [00:01<00:00, 225147.59it/s] 77%|███████▋  | 424755/552076 [00:01<00:00, 227665.42it/s] 81%|████████  | 447522/552076 [00:02<00:00, 225263.45it/s] 85%|████████▌ | 470055/552076 [00:02<00:00, 215899.85it/s] 89%|████████▉ | 491733/552076 [00:02<00:00, 215871.91it/s] 93%|█████████▎| 513382/552076 [00:02<00:00, 161994.52it/s] 97%|█████████▋| 535190/552076 [00:02<00:00, 175536.82it/s]100%|██████████| 552076/552076 [00:02<00:00, 207219.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20891/552076 [00:00<00:02, 208906.21it/s]  7%|▋         | 37985/552076 [00:00<00:02, 195850.45it/s]  9%|▉         | 49496/552076 [00:00<00:03, 161791.76it/s] 11%|█         | 60523/552076 [00:00<00:03, 141898.50it/s] 13%|█▎        | 71106/552076 [00:00<00:03, 128735.43it/s] 15%|█▍        | 81731/552076 [00:00<00:03, 121049.41it/s] 17%|█▋        | 92753/552076 [00:00<00:03, 117580.26it/s] 19%|█▉        | 104776/552076 [00:00<00:03, 118361.62it/s] 21%|██        | 116798/552076 [00:00<00:03, 118912.52it/s] 23%|██▎       | 128276/552076 [00:01<00:03, 117641.80it/s] 25%|██▌       | 139969/552076 [00:01<00:03, 117424.69it/s] 27%|██▋       | 151707/552076 [00:01<00:03, 117409.97it/s] 30%|██▉       | 163265/552076 [00:01<00:03, 112802.90it/s] 32%|███▏      | 174456/552076 [00:01<00:03, 107447.57it/s] 34%|███▍      | 186466/552076 [00:01<00:03, 110953.91it/s] 36%|███▌      | 198640/552076 [00:01<00:03, 113982.77it/s] 38%|███▊      | 210744/552076 [00:01<00:02, 116011.70it/s] 40%|████      | 222752/552076 [00:01<00:02, 117200.53it/s] 42%|████▏     | 234499/552076 [00:01<00:02, 116938.98it/s] 45%|████▍     | 246458/552076 [00:02<00:02, 117719.82it/s] 47%|████▋     | 258245/552076 [00:02<00:03, 92243.58it/s]  49%|████▊     | 268335/552076 [00:02<00:03, 79670.04it/s] 50%|█████     | 277211/552076 [00:02<00:03, 73092.03it/s] 52%|█████▏    | 285263/552076 [00:02<00:03, 70115.26it/s] 53%|█████▎    | 292821/552076 [00:02<00:03, 65423.14it/s] 54%|█████▍    | 299809/552076 [00:02<00:03, 65585.75it/s] 56%|█████▌    | 306680/552076 [00:03<00:03, 63490.92it/s] 57%|█████▋    | 313262/552076 [00:03<00:03, 61619.31it/s] 58%|█████▊    | 320945/552076 [00:03<00:03, 65509.53it/s] 60%|██████    | 331467/552076 [00:03<00:02, 73873.27it/s] 62%|██████▏   | 343240/552076 [00:03<00:02, 83167.06it/s] 64%|██████▍   | 355119/552076 [00:03<00:02, 91388.07it/s] 66%|██████▋   | 366819/552076 [00:03<00:01, 97808.03it/s] 69%|██████▊   | 378874/552076 [00:03<00:01, 103674.03it/s] 71%|███████   | 389796/552076 [00:03<00:01, 103122.85it/s] 73%|███████▎  | 401894/552076 [00:03<00:01, 107899.69it/s] 75%|███████▍  | 413622/552076 [00:04<00:01, 110549.33it/s] 77%|███████▋  | 425294/552076 [00:04<00:01, 112328.79it/s] 79%|███████▉  | 437364/552076 [00:04<00:00, 114712.94it/s] 81%|████████▏ | 449070/552076 [00:04<00:00, 115404.87it/s] 84%|████████▎ | 461159/552076 [00:04<00:00, 116996.64it/s] 86%|████████▌ | 472933/552076 [00:04<00:00, 116373.44it/s] 88%|████████▊ | 485033/552076 [00:04<00:00, 117723.70it/s] 90%|████████▉ | 496846/552076 [00:04<00:00, 117778.94it/s] 92%|█████████▏| 508802/552076 [00:04<00:00, 118306.52it/s] 94%|█████████▍| 520688/552076 [00:04<00:00, 118469.94it/s] 97%|█████████▋| 532778/552076 [00:05<00:00, 119188.42it/s] 99%|█████████▊| 544708/552076 [00:05<00:00, 115623.65it/s]100%|██████████| 552076/552076 [00:05<00:00, 105971.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11622/552076 [00:00<00:04, 116217.89it/s]  4%|▍         | 23515/552076 [00:00<00:04, 117017.16it/s]  6%|▋         | 35233/552076 [00:00<00:04, 117064.83it/s]  8%|▊         | 45379/552076 [00:00<00:04, 111615.12it/s] 10%|█         | 57035/552076 [00:00<00:04, 113052.58it/s] 12%|█▏        | 67183/552076 [00:00<00:04, 108240.74it/s] 14%|█▍        | 76713/552076 [00:00<00:04, 103463.76it/s] 16%|█▌        | 86199/552076 [00:00<00:04, 100380.60it/s] 18%|█▊        | 96802/552076 [00:00<00:04, 102011.14it/s] 19%|█▉        | 107177/552076 [00:01<00:04, 101332.42it/s] 21%|██        | 117031/552076 [00:01<00:05, 83421.19it/s]  23%|██▎       | 127671/552076 [00:01<00:04, 89198.74it/s] 25%|██▌       | 139812/552076 [00:01<00:04, 96911.90it/s] 28%|██▊       | 151937/552076 [00:01<00:03, 103121.21it/s] 30%|██▉       | 163844/552076 [00:01<00:03, 107435.77it/s] 32%|███▏      | 174923/552076 [00:01<00:03, 100376.81it/s] 34%|███▍      | 186834/552076 [00:01<00:03, 105347.23it/s] 36%|███▌      | 198847/552076 [00:01<00:03, 109383.65it/s] 38%|███▊      | 210944/552076 [00:02<00:03, 112617.03it/s] 40%|████      | 223189/552076 [00:02<00:02, 115395.56it/s] 44%|████▍     | 241791/552076 [00:02<00:02, 130227.24it/s] 48%|████▊     | 262904/552076 [00:02<00:01, 147141.83it/s] 51%|█████▏    | 284273/552076 [00:02<00:01, 162305.18it/s] 56%|█████▌    | 306945/552076 [00:02<00:01, 177427.69it/s] 60%|█████▉    | 329931/552076 [00:02<00:01, 190461.20it/s] 64%|██████▎   | 351597/552076 [00:02<00:01, 197627.99it/s] 68%|██████▊   | 373337/552076 [00:02<00:00, 203170.75it/s] 71%|███████▏  | 394344/552076 [00:02<00:00, 167467.64it/s] 75%|███████▌  | 416039/552076 [00:03<00:00, 179766.33it/s] 79%|███████▉  | 435431/552076 [00:03<00:00, 183787.32it/s] 82%|████████▏ | 454756/552076 [00:03<00:00, 160365.95it/s] 85%|████████▌ | 471992/552076 [00:03<00:00, 160982.63it/s] 89%|████████▊ | 488930/552076 [00:03<00:00, 159565.36it/s] 92%|█████████▏| 506223/552076 [00:03<00:00, 163350.87it/s] 96%|█████████▌| 528923/552076 [00:03<00:00, 178352.02it/s] 99%|█████████▉| 547473/552076 [00:03<00:00, 154261.20it/s]100%|██████████| 552076/552076 [00:03<00:00, 139821.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20886/552076 [00:00<00:02, 208856.22it/s]  8%|▊         | 43792/552076 [00:00<00:02, 214532.58it/s] 12%|█▏        | 66163/552076 [00:00<00:02, 217205.36it/s] 16%|█▌        | 87942/552076 [00:00<00:02, 217378.31it/s] 20%|█▉        | 109529/552076 [00:00<00:02, 216920.87it/s] 24%|██▍       | 132673/552076 [00:00<00:01, 221079.61it/s] 28%|██▊       | 155995/552076 [00:00<00:01, 224586.04it/s] 32%|███▏      | 179155/552076 [00:00<00:01, 226642.89it/s] 37%|███▋      | 202378/552076 [00:00<00:01, 228289.05it/s] 41%|████      | 225725/552076 [00:01<00:01, 229817.96it/s] 45%|████▌     | 249137/552076 [00:01<00:01, 231090.80it/s] 49%|████▉     | 272426/552076 [00:01<00:01, 231627.04it/s] 54%|█████▎    | 295579/552076 [00:01<00:01, 231597.66it/s] 58%|█████▊    | 318963/552076 [00:01<00:01, 232265.73it/s] 62%|██████▏   | 342054/552076 [00:01<00:00, 231781.34it/s] 66%|██████▌   | 365138/552076 [00:01<00:00, 231234.31it/s] 70%|███████   | 388498/552076 [00:01<00:00, 231938.21it/s] 75%|███████▍  | 412272/552076 [00:01<00:00, 233648.37it/s] 79%|███████▉  | 436013/552076 [00:01<00:00, 234763.68it/s] 83%|████████▎ | 459471/552076 [00:02<00:00, 231969.31it/s] 88%|████████▊ | 483160/552076 [00:02<00:00, 233423.33it/s] 92%|█████████▏| 506516/552076 [00:02<00:00, 233464.21it/s] 96%|█████████▌| 530082/552076 [00:02<00:00, 234118.54it/s]100%|██████████| 552076/552076 [00:02<00:00, 229537.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16475/552076 [00:00<00:03, 164742.69it/s]  6%|▌         | 33802/552076 [00:00<00:03, 167210.21it/s]  9%|▉         | 51361/552076 [00:00<00:02, 169637.35it/s] 13%|█▎        | 70087/552076 [00:00<00:02, 174564.52it/s] 16%|█▌        | 88683/552076 [00:00<00:02, 177832.73it/s] 19%|█▉        | 103745/552076 [00:00<00:02, 150028.07it/s] 22%|██▏       | 120237/552076 [00:00<00:02, 154205.13it/s] 24%|██▍       | 134874/552076 [00:00<00:02, 142445.04it/s] 27%|██▋       | 151216/552076 [00:00<00:02, 148148.91it/s] 31%|███       | 171687/552076 [00:01<00:02, 161537.00it/s] 35%|███▍      | 192492/552076 [00:01<00:02, 173149.08it/s] 39%|███▉      | 214744/552076 [00:01<00:01, 185494.92it/s] 43%|████▎     | 237183/552076 [00:01<00:01, 195668.19it/s] 47%|████▋     | 259713/552076 [00:01<00:01, 203703.64it/s] 51%|█████     | 280802/552076 [00:01<00:01, 205807.51it/s] 55%|█████▍    | 302276/552076 [00:01<00:01, 208408.15it/s] 59%|█████▉    | 324361/552076 [00:01<00:01, 211988.28it/s] 63%|██████▎   | 347552/552076 [00:01<00:00, 217595.82it/s] 67%|██████▋   | 369600/552076 [00:01<00:00, 218450.55it/s] 71%|███████   | 391561/552076 [00:02<00:00, 218795.13it/s] 75%|███████▌  | 414550/552076 [00:02<00:00, 222006.80it/s] 79%|███████▉  | 437711/552076 [00:02<00:00, 224802.84it/s] 83%|████████▎ | 460247/552076 [00:02<00:00, 222969.99it/s] 88%|████████▊ | 483369/552076 [00:02<00:00, 225382.26it/s] 92%|█████████▏| 505952/552076 [00:02<00:00, 225515.49it/s] 96%|█████████▌| 528529/552076 [00:02<00:00, 221365.79it/s]100%|█████████▉| 551050/552076 [00:02<00:00, 222502.75it/s]100%|██████████| 552076/552076 [00:02<00:00, 199152.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21533/552076 [00:00<00:02, 215320.96it/s]  8%|▊         | 44408/552076 [00:00<00:02, 219179.11it/s] 12%|█▏        | 66980/552076 [00:00<00:02, 221100.66it/s] 16%|█▌        | 89615/552076 [00:00<00:02, 222648.69it/s] 20%|██        | 111731/552076 [00:00<00:01, 222199.25it/s] 24%|██▍       | 134343/552076 [00:00<00:01, 223361.03it/s] 28%|██▊       | 155545/552076 [00:00<00:01, 219830.79it/s] 32%|███▏      | 175774/552076 [00:00<00:02, 186006.90it/s] 35%|███▌      | 194040/552076 [00:00<00:02, 161436.25it/s] 39%|███▉      | 215601/552076 [00:01<00:01, 174595.95it/s] 43%|████▎     | 238333/552076 [00:01<00:01, 187651.80it/s] 47%|████▋     | 257760/552076 [00:01<00:01, 151924.00it/s] 50%|████▉     | 274515/552076 [00:01<00:01, 143871.40it/s] 54%|█████▎    | 296425/552076 [00:01<00:01, 160391.07it/s] 58%|█████▊    | 319032/552076 [00:01<00:01, 175703.64it/s] 62%|██████▏   | 340673/552076 [00:01<00:01, 186210.36it/s] 66%|██████▌   | 363509/552076 [00:01<00:00, 197123.22it/s] 70%|██████▉   | 385382/552076 [00:02<00:00, 203141.51it/s] 74%|███████▍  | 408252/552076 [00:02<00:00, 210187.38it/s] 78%|███████▊  | 431239/552076 [00:02<00:00, 215728.54it/s] 82%|████████▏ | 454072/552076 [00:02<00:00, 219357.36it/s] 86%|████████▋ | 477030/552076 [00:02<00:00, 222326.56it/s] 90%|█████████ | 499501/552076 [00:02<00:00, 222026.76it/s] 95%|█████████▍| 522307/552076 [00:02<00:00, 223802.38it/s] 99%|█████████▊| 544808/552076 [00:02<00:00, 221619.93it/s]100%|██████████| 552076/552076 [00:02<00:00, 200685.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20911/552076 [00:00<00:02, 209104.72it/s]  8%|▊         | 43076/552076 [00:00<00:02, 212715.07it/s] 12%|█▏        | 65450/552076 [00:00<00:02, 215905.77it/s] 16%|█▌        | 87844/552076 [00:00<00:02, 218254.45it/s] 20%|██        | 110527/552076 [00:00<00:02, 220755.39it/s] 24%|██▍       | 132224/552076 [00:00<00:01, 219604.77it/s] 28%|██▊       | 155069/552076 [00:00<00:01, 222183.47it/s] 32%|███▏      | 177901/552076 [00:00<00:01, 223988.16it/s] 36%|███▋      | 200912/552076 [00:00<00:01, 225788.56it/s] 40%|████      | 223133/552076 [00:01<00:01, 224701.22it/s] 45%|████▍     | 246095/552076 [00:01<00:01, 226154.01it/s] 49%|████▊     | 268875/552076 [00:01<00:01, 226642.47it/s] 53%|█████▎    | 291801/552076 [00:01<00:01, 227420.69it/s] 57%|█████▋    | 314347/552076 [00:01<00:01, 224962.31it/s] 61%|██████    | 337273/552076 [00:01<00:00, 226234.19it/s] 65%|██████▌   | 360237/552076 [00:01<00:00, 227243.09it/s] 69%|██████▉   | 383068/552076 [00:01<00:00, 227560.39it/s] 74%|███████▎  | 406053/552076 [00:01<00:00, 228242.21it/s] 78%|███████▊  | 428848/552076 [00:01<00:00, 225995.45it/s] 82%|████████▏ | 451432/552076 [00:02<00:00, 221489.98it/s] 86%|████████▌ | 474666/552076 [00:02<00:00, 224634.65it/s] 90%|█████████ | 497662/552076 [00:02<00:00, 226205.28it/s] 94%|█████████▍| 520298/552076 [00:02<00:00, 224623.72it/s] 99%|█████████▊| 543981/552076 [00:02<00:00, 228150.37it/s]100%|██████████| 552076/552076 [00:02<00:00, 225361.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21781/552076 [00:00<00:02, 217798.78it/s]  8%|▊         | 42487/552076 [00:00<00:02, 214461.09it/s] 12%|█▏        | 65320/552076 [00:00<00:02, 218438.94it/s] 16%|█▌        | 88242/552076 [00:00<00:02, 221562.86it/s] 20%|█▉        | 109562/552076 [00:00<00:02, 218984.37it/s] 24%|██▍       | 132401/552076 [00:00<00:01, 221720.99it/s] 28%|██▊       | 154096/552076 [00:00<00:01, 220265.15it/s] 32%|███▏      | 174351/552076 [00:00<00:01, 191125.99it/s] 36%|███▌      | 196106/552076 [00:00<00:01, 198352.85it/s] 40%|███▉      | 218235/552076 [00:01<00:01, 204717.67it/s] 43%|████▎     | 238537/552076 [00:01<00:01, 184275.15it/s] 47%|████▋     | 258650/552076 [00:01<00:01, 189026.89it/s] 51%|█████     | 281223/552076 [00:01<00:01, 198718.11it/s] 55%|█████▍    | 301379/552076 [00:01<00:01, 180889.31it/s] 58%|█████▊    | 321686/552076 [00:01<00:01, 187016.20it/s] 62%|██████▏   | 340796/552076 [00:01<00:01, 187436.61it/s] 65%|██████▌   | 359826/552076 [00:01<00:01, 175757.98it/s] 69%|██████▉   | 382254/552076 [00:01<00:00, 187956.46it/s] 73%|███████▎  | 405117/552076 [00:02<00:00, 198553.25it/s] 78%|███████▊  | 428429/552076 [00:02<00:00, 207796.20it/s] 82%|████████▏ | 450584/552076 [00:02<00:00, 211738.67it/s] 86%|████████▌ | 472627/552076 [00:02<00:00, 214271.37it/s] 90%|████████▉ | 495630/552076 [00:02<00:00, 218766.06it/s] 94%|█████████▍| 518748/552076 [00:02<00:00, 222345.12it/s] 98%|█████████▊| 541163/552076 [00:02<00:00, 222880.58it/s]100%|██████████| 552076/552076 [00:02<00:00, 205608.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 23096/552076 [00:00<00:02, 230952.51it/s]  8%|▊         | 45188/552076 [00:00<00:02, 227847.59it/s] 12%|█▏        | 67676/552076 [00:00<00:02, 226948.86it/s] 16%|█▋        | 89796/552076 [00:00<00:02, 225192.32it/s] 20%|██        | 112730/552076 [00:00<00:01, 226420.21it/s] 24%|██▍       | 135171/552076 [00:00<00:01, 225811.81it/s] 28%|██▊       | 157182/552076 [00:00<00:01, 224067.62it/s] 33%|███▎      | 179851/552076 [00:00<00:01, 224844.97it/s] 36%|███▋      | 201211/552076 [00:00<00:01, 221346.54it/s] 41%|████      | 224582/552076 [00:01<00:01, 224914.84it/s] 45%|████▍     | 247645/552076 [00:01<00:01, 226596.94it/s] 49%|████▉     | 270188/552076 [00:01<00:01, 226243.22it/s] 53%|█████▎    | 292985/552076 [00:01<00:01, 226756.95it/s] 57%|█████▋    | 316728/552076 [00:01<00:01, 229855.37it/s] 62%|██████▏   | 340618/552076 [00:01<00:00, 232493.82it/s] 66%|██████▌   | 364250/552076 [00:01<00:00, 233628.50it/s] 70%|███████   | 387552/552076 [00:01<00:00, 231850.45it/s] 74%|███████▍  | 410697/552076 [00:01<00:00, 230069.81it/s] 79%|███████▊  | 433680/552076 [00:01<00:00, 215025.61it/s] 82%|████████▏ | 455365/552076 [00:02<00:00, 196928.92it/s] 86%|████████▌ | 475483/552076 [00:02<00:00, 176652.70it/s] 89%|████████▉ | 493838/552076 [00:02<00:00, 137543.16it/s] 92%|█████████▏| 509408/552076 [00:02<00:00, 133138.53it/s] 96%|█████████▋| 532421/552076 [00:02<00:00, 152408.73it/s]100%|██████████| 552076/552076 [00:02<00:00, 202934.98it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = linear
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3604452610015869 seconds.
Run epoch 1
Epoch 1 ends in 0.37523961067199707 seconds.
39434 sentences created
mode 1: time used = 0.5696718692779541
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
epoch 5: {'train_loss': '1.26517'}; time used = 24.243067979812622s
epoch 10: {'train_loss': '1.13700'}; time used = 25.300776481628418s
epoch 15: {'train_loss': '1.09341'}; time used = 26.995182037353516s
epoch 20: {'train_loss': '1.05033'}; time used = 18.439363718032837s
epoch 25: {'train_loss': '1.02722'}; time used = 60.243210315704346s
epoch 30: {'train_loss': '1.00997'}; time used = 39.263689279556274s
epoch 35: {'train_loss': '0.99863'}; time used = 23.695030212402344s
epoch 40: {'train_loss': '0.99125'}; time used = 22.799630641937256s
epoch 45: {'train_loss': '0.98220'}; time used = 48.9312903881073s
epoch 50: {'train_loss': '0.97543'}; time used = 39.11737656593323s
epoch 55: {'train_loss': '0.96938'}; time used = 18.050958156585693s
epoch 60: {'train_loss': '0.96557'}; time used = 26.749255418777466s
epoch 65: {'train_loss': '0.96255'}; time used = 63.55191922187805s
epoch 70: {'train_loss': '0.95950'}; time used = 26.871872901916504s
epoch 75: {'train_loss': '0.95426'}; time used = 20.308464765548706s
epoch 80: {'train_loss': '0.94972'}; time used = 23.167278289794922s
epoch 85: {'train_loss': '0.94929'}; time used = 57.605878591537476s
epoch 90: {'train_loss': '0.94580'}; time used = 47.425262212753296s
epoch 95: {'train_loss': '0.94421'}; time used = 24.985044717788696s
epoch 100: {'train_loss': '0.94057'}; time used = 22.171075582504272s
epoch 105: {'train_loss': '0.93992'}; time used = 39.729294776916504s
epoch 110: {'train_loss': '0.93856'}; time used = 44.358285427093506s
epoch 115: {'train_loss': '0.93504'}; time used = 29.39383888244629s
epoch 120: {'train_loss': '0.93568'}; time used = 19.342443466186523s
epoch 125: {'train_loss': '0.93166'}; time used = 20.22460150718689s
epoch 130: {'train_loss': '0.93110'}; time used = 32.73891615867615s
epoch 135: {'train_loss': '0.92997'}; time used = 36.90003967285156s
epoch 140: {'train_loss': '0.92792'}; time used = 45.949774503707886s
epoch 145: {'train_loss': '0.92825'}; time used = 36.01078820228577s
epoch 150: {'train_loss': '0.92747'}; time used = 26.469130516052246s
epoch 155: {'train_loss': '0.92672'}; time used = 40.146854877471924s
epoch 160: {'train_loss': '0.92517'}; time used = 46.33716702461243s
epoch 165: {'train_loss': '0.92457'}; time used = 38.68292832374573s
epoch 170: {'train_loss': '0.92284'}; time used = 29.454739093780518s
epoch 175: {'train_loss': '0.92327'}; time used = 20.320587635040283s
epoch 180: {'train_loss': '0.92053'}; time used = 56.65556478500366s
epoch 185: {'train_loss': '0.92145'}; time used = 25.5693097114563s
epoch 190: {'train_loss': '0.91992'}; time used = 30.271055698394775s
epoch 195: {'train_loss': '0.91984'}; time used = 16.693315267562866s
epoch 200: {'train_loss': '0.91887'}; time used = 39.91625905036926s
epoch 205: {'train_loss': '0.91911'}; time used = 42.43202447891235s
epoch 210: {'train_loss': '0.92036'}; time used = 35.912089109420776s
epoch 215: {'train_loss': '0.91766'}; time used = 22.902278423309326s
epoch 220: {'train_loss': '0.91792'}; time used = 16.258209228515625s
epoch 225: {'train_loss': '0.91810'}; time used = 25.132850408554077s
epoch 230: {'train_loss': '0.91768'}; time used = 26.486653089523315s
epoch 235: {'train_loss': '0.91616'}; time used = 30.287610292434692s
epoch 240: {'train_loss': '0.91567'}; time used = 27.175100088119507s
epoch 245: {'train_loss': '0.91525'}; time used = 19.400618314743042s
epoch 250: {'train_loss': '0.91588'}; time used = 16.73898673057556s
epoch 255: {'train_loss': '0.91659'}; time used = 20.74694323539734s
epoch 260: {'train_loss': '0.91436'}; time used = 21.27452802658081s
epoch 265: {'train_loss': '0.91394'}; time used = 15.893900871276855s
epoch 270: {'train_loss': '0.91535'}; time used = 14.230559825897217s
epoch 275: {'train_loss': '0.91454'}; time used = 13.99798059463501s
epoch 280: {'train_loss': '0.91640'}; time used = 29.144289016723633s
epoch 285: {'train_loss': '0.91325'}; time used = 34.886862993240356s
epoch 290: {'train_loss': '0.91329'}; time used = 35.50222420692444s
epoch 295: {'train_loss': '0.91293'}; time used = 27.601728439331055s
epoch 300: {'train_loss': '0.91478'}; time used = 24.45172119140625s
epoch 305: {'train_loss': '0.91240'}; time used = 24.91048765182495s
epoch 310: {'train_loss': '0.91397'}; time used = 26.307871341705322s
epoch 315: {'train_loss': '0.91373'}; time used = 21.238507747650146s
epoch 320: {'train_loss': '0.91264'}; time used = 41.82943797111511s
epoch 325: {'train_loss': '0.91263'}; time used = 21.52048969268799s
epoch 330: {'train_loss': '0.91365'}; time used = 25.458802700042725s
epoch 335: {'train_loss': '0.91319'}; time used = 41.921433210372925s
epoch 340: {'train_loss': '0.91283'}; time used = 25.803125381469727s
epoch 345: {'train_loss': '0.91260'}; time used = 39.31753444671631s
epoch 350: {'train_loss': '0.91274'}; time used = 27.207288026809692s
epoch 355: {'train_loss': '0.91317'}; time used = 32.11263036727905s
epoch 360: {'train_loss': '0.91072'}; time used = 36.276570081710815s
epoch 365: {'train_loss': '0.91183'}; time used = 32.4789080619812s
epoch 370: {'train_loss': '0.91315'}; time used = 15.864907264709473s
epoch 375: {'train_loss': '0.91132'}; time used = 26.041974306106567s
epoch 380: {'train_loss': '0.91252'}; time used = 31.338181734085083s
epoch 385: {'train_loss': '0.90969'}; time used = 19.554489135742188s
epoch 390: {'train_loss': '0.91070'}; time used = 27.985461473464966s
epoch 395: {'train_loss': '0.91101'}; time used = 27.7684965133667s
epoch 400: {'train_loss': '0.91111'}; time used = 19.573216438293457s
epoch 405: {'train_loss': '0.91087'}; time used = 35.85748529434204s
epoch 410: {'train_loss': '0.91093'}; time used = 17.184431552886963s
epoch 415: {'train_loss': '0.91260'}; time used = 12.33665156364441s
epoch 420: {'train_loss': '0.91089'}; time used = 24.061373472213745s
epoch 425: {'train_loss': '0.91096'}; time used = 14.806042671203613s
epoch 430: {'train_loss': '0.90934'}; time used = 33.544965505599976s
epoch 435: {'train_loss': '0.91256'}; time used = 25.29417371749878s
epoch 440: {'train_loss': '0.91179'}; time used = 16.08519458770752s
epoch 445: {'train_loss': '0.91015'}; time used = 29.14411759376526s
epoch 450: {'train_loss': '0.91070'}; time used = 23.752992868423462s
epoch 455: {'train_loss': '0.91105'}; time used = 25.388078212738037s
epoch 460: {'train_loss': '0.91074'}; time used = 15.116325855255127s
epoch 465: {'train_loss': '0.91006'}; time used = 13.105999946594238s
epoch 470: {'train_loss': '0.91085'}; time used = 13.358961343765259s
epoch 475: {'train_loss': '0.90967'}; time used = 14.646385192871094s
epoch 480: {'train_loss': '0.91159'}; time used = 13.044800043106079s
epoch 485: {'train_loss': '0.91216'}; time used = 12.592764139175415s
epoch 490: {'train_loss': '0.91102'}; time used = 16.99224019050598s
epoch 495: {'train_loss': '0.91098'}; time used = 13.569533348083496s
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19821/552076 [00:00<00:02, 198206.88it/s]  8%|▊         | 42264/552076 [00:00<00:02, 205404.91it/s] 12%|█▏        | 65199/552076 [00:00<00:02, 212046.24it/s] 16%|█▌        | 87705/552076 [00:00<00:02, 215788.43it/s] 20%|██        | 110418/552076 [00:00<00:02, 219067.65it/s] 24%|██▍       | 133613/552076 [00:00<00:01, 222777.48it/s] 28%|██▊       | 157300/552076 [00:00<00:01, 226825.41it/s] 33%|███▎      | 181482/552076 [00:00<00:01, 231123.31it/s] 37%|███▋      | 205360/552076 [00:00<00:01, 233367.67it/s] 41%|████▏     | 228789/552076 [00:01<00:01, 233641.34it/s] 46%|████▌     | 251980/552076 [00:01<00:01, 233117.79it/s] 50%|████▉     | 275922/552076 [00:01<00:01, 234972.58it/s] 54%|█████▍    | 299961/552076 [00:01<00:01, 236571.06it/s] 59%|█████▊    | 323654/552076 [00:01<00:00, 236678.53it/s] 63%|██████▎   | 347200/552076 [00:01<00:00, 233417.17it/s] 67%|██████▋   | 371628/552076 [00:01<00:00, 236571.80it/s] 72%|███████▏  | 395836/552076 [00:01<00:00, 238196.15it/s] 76%|███████▌  | 420193/552076 [00:01<00:00, 239780.77it/s] 80%|████████  | 444155/552076 [00:01<00:00, 234431.46it/s] 85%|████████▍ | 467614/552076 [00:02<00:00, 229379.23it/s] 89%|████████▉ | 490587/552076 [00:02<00:00, 171085.36it/s] 93%|█████████▎| 513762/552076 [00:02<00:00, 185664.29it/s] 97%|█████████▋| 534227/552076 [00:02<00:00, 189301.60it/s]100%|██████████| 552076/552076 [00:02<00:00, 217871.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21950/552076 [00:00<00:02, 219499.69it/s]  8%|▊         | 42047/552076 [00:00<00:02, 213582.63it/s] 10%|▉         | 52685/552076 [00:00<00:03, 136193.82it/s] 13%|█▎        | 73796/552076 [00:00<00:03, 152420.53it/s] 17%|█▋        | 96549/552076 [00:00<00:02, 169173.13it/s] 22%|██▏       | 119655/552076 [00:00<00:02, 183953.78it/s] 26%|██▌       | 140812/552076 [00:00<00:02, 191450.47it/s] 30%|██▉       | 164052/552076 [00:00<00:01, 202134.07it/s] 34%|███▍      | 186997/552076 [00:00<00:01, 209619.88it/s] 38%|███▊      | 210253/552076 [00:01<00:01, 216011.71it/s] 42%|████▏     | 233452/552076 [00:01<00:01, 220568.22it/s] 46%|████▋     | 255719/552076 [00:01<00:01, 221193.07it/s] 51%|█████     | 278832/552076 [00:01<00:01, 224081.46it/s] 55%|█████▍    | 301309/552076 [00:01<00:01, 222402.84it/s] 59%|█████▉    | 324574/552076 [00:01<00:01, 225380.06it/s] 63%|██████▎   | 347158/552076 [00:01<00:00, 223522.47it/s] 67%|██████▋   | 370670/552076 [00:01<00:00, 226879.54it/s] 71%|███████▏  | 393395/552076 [00:01<00:00, 226425.40it/s] 75%|███████▌  | 416215/552076 [00:01<00:00, 226953.01it/s] 80%|███████▉  | 438929/552076 [00:02<00:00, 224462.07it/s] 84%|████████▎ | 461395/552076 [00:02<00:00, 221731.92it/s] 88%|████████▊ | 484433/552076 [00:02<00:00, 224256.05it/s] 92%|█████████▏| 507534/552076 [00:02<00:00, 226238.72it/s] 96%|█████████▌| 530533/552076 [00:02<00:00, 227350.13it/s]100%|██████████| 552076/552076 [00:02<00:00, 215592.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20460/552076 [00:00<00:02, 204594.83it/s]  7%|▋         | 39982/552076 [00:00<00:02, 201687.45it/s] 11%|█         | 60175/552076 [00:00<00:02, 201759.64it/s] 15%|█▍        | 80833/552076 [00:00<00:02, 203181.02it/s] 19%|█▊        | 103031/552076 [00:00<00:02, 208475.34it/s] 23%|██▎       | 124409/552076 [00:00<00:02, 210037.47it/s] 26%|██▋       | 145796/552076 [00:00<00:01, 211171.75it/s] 30%|███       | 165671/552076 [00:00<00:01, 207282.93it/s] 34%|███▍      | 187467/552076 [00:00<00:01, 210373.47it/s] 38%|███▊      | 210272/552076 [00:01<00:01, 215380.89it/s] 42%|████▏     | 232291/552076 [00:01<00:01, 216799.96it/s] 46%|████▌     | 254871/552076 [00:01<00:01, 219423.02it/s] 50%|█████     | 276648/552076 [00:01<00:01, 218923.76it/s] 54%|█████▍    | 299298/552076 [00:01<00:01, 221142.17it/s] 58%|█████▊    | 321297/552076 [00:01<00:01, 219116.47it/s] 62%|██████▏   | 344835/552076 [00:01<00:00, 223753.40it/s] 67%|██████▋   | 367761/552076 [00:01<00:00, 225374.61it/s] 71%|███████   | 390281/552076 [00:01<00:00, 222224.45it/s] 75%|███████▍  | 412988/552076 [00:01<00:00, 223654.27it/s] 79%|███████▉  | 435354/552076 [00:02<00:00, 222511.93it/s] 83%|████████▎ | 457607/552076 [00:02<00:00, 207795.42it/s] 87%|████████▋ | 478585/552076 [00:02<00:00, 194042.65it/s] 91%|█████████ | 500801/552076 [00:02<00:00, 201699.27it/s] 94%|█████████▍| 521275/552076 [00:02<00:00, 181478.48it/s] 98%|█████████▊| 542550/552076 [00:02<00:00, 189847.64it/s]100%|██████████| 552076/552076 [00:02<00:00, 209136.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15486/552076 [00:00<00:03, 154852.76it/s]  6%|▌         | 30472/552076 [00:00<00:03, 153319.05it/s]  9%|▉         | 51981/552076 [00:00<00:02, 167770.24it/s] 12%|█▏        | 63857/552076 [00:00<00:03, 138270.18it/s] 16%|█▌        | 85850/552076 [00:00<00:02, 155602.53it/s] 20%|█▉        | 107701/552076 [00:00<00:02, 170310.43it/s] 24%|██▎       | 130320/552076 [00:00<00:02, 183941.23it/s] 28%|██▊       | 152977/552076 [00:00<00:02, 194944.72it/s] 32%|███▏      | 175778/552076 [00:00<00:01, 203811.47it/s] 36%|███▌      | 197715/552076 [00:01<00:01, 208240.06it/s] 40%|███▉      | 219851/552076 [00:01<00:01, 212007.08it/s] 44%|████▍     | 242828/552076 [00:01<00:01, 217039.19it/s] 48%|████▊     | 265718/552076 [00:01<00:01, 220464.41it/s] 52%|█████▏    | 288700/552076 [00:01<00:01, 223188.32it/s] 56%|█████▋    | 311107/552076 [00:01<00:01, 220659.54it/s] 60%|██████    | 333980/552076 [00:01<00:00, 223019.68it/s] 65%|██████▍   | 356356/552076 [00:01<00:00, 223240.05it/s] 69%|██████▊   | 379063/552076 [00:01<00:00, 224373.24it/s] 73%|███████▎  | 401528/552076 [00:01<00:00, 223296.62it/s] 77%|███████▋  | 424311/552076 [00:02<00:00, 224636.37it/s] 81%|████████  | 446791/552076 [00:02<00:00, 220893.80it/s] 85%|████████▍ | 469001/552076 [00:02<00:00, 221252.93it/s] 89%|████████▉ | 491570/552076 [00:02<00:00, 222565.53it/s] 93%|█████████▎| 514825/552076 [00:02<00:00, 225468.48it/s] 97%|█████████▋| 537660/552076 [00:02<00:00, 226324.70it/s]100%|██████████| 552076/552076 [00:02<00:00, 212603.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22101/552076 [00:00<00:02, 221007.05it/s]  8%|▊         | 44188/552076 [00:00<00:02, 220963.77it/s] 12%|█▏        | 67056/552076 [00:00<00:02, 223223.15it/s] 16%|█▌        | 89584/552076 [00:00<00:02, 223836.00it/s] 20%|██        | 110753/552076 [00:00<00:02, 220047.90it/s] 23%|██▎       | 129061/552076 [00:00<00:02, 182930.51it/s] 26%|██▋       | 145815/552076 [00:00<00:02, 137068.73it/s] 29%|██▉       | 160137/552076 [00:01<00:03, 114576.31it/s] 31%|███▏      | 172648/552076 [00:01<00:03, 115701.93it/s] 34%|███▍      | 190430/552076 [00:01<00:02, 129245.41it/s] 38%|███▊      | 208545/552076 [00:01<00:02, 141399.41it/s] 42%|████▏     | 231003/552076 [00:01<00:02, 159073.99it/s] 46%|████▌     | 252921/552076 [00:01<00:01, 173334.02it/s] 50%|████▉     | 275592/552076 [00:01<00:01, 186505.86it/s] 54%|█████▍    | 297874/552076 [00:01<00:01, 196091.69it/s] 58%|█████▊    | 320739/552076 [00:01<00:01, 204841.82it/s] 62%|██████▏   | 343526/552076 [00:01<00:00, 211244.52it/s] 66%|██████▋   | 366641/552076 [00:02<00:00, 216845.39it/s] 70%|███████   | 388973/552076 [00:02<00:00, 218746.38it/s] 75%|███████▍  | 412139/552076 [00:02<00:00, 222466.48it/s] 79%|███████▉  | 435392/552076 [00:02<00:00, 225392.47it/s] 83%|████████▎ | 458609/552076 [00:02<00:00, 227383.40it/s] 87%|████████▋ | 481672/552076 [00:02<00:00, 228347.64it/s] 91%|█████████▏| 504601/552076 [00:02<00:00, 227721.89it/s] 96%|█████████▌| 527801/552076 [00:02<00:00, 228985.82it/s]100%|█████████▉| 551023/552076 [00:02<00:00, 229944.69it/s]100%|██████████| 552076/552076 [00:02<00:00, 195919.37it/s]

epoch 500: {'train_loss': '0.91186'}; time used = 13.312082052230835s
Finished training. Time used = 2798.5178689956665.
Training classifier using 20.00% nodes...
{'micro': 0.8485482439457335, 'macro': 0.8460309243505962, 'samples': 0.8485482439457335, 'weighted': 0.8484651333765139}
