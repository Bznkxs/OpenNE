Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 247, in main
    graph = Graph(silent=train_args['silent'])  # prepare dataset
TypeError: __init__() got an unexpected keyword argument 'silent'
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 88.00 MiB (GPU 0; 10.76 GiB total capacity; 255.02 MiB already allocated; 78.44 MiB free; 278.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19275/88651 [00:00<00:00, 192740.99it/s] 38%|███▊      | 33680/88651 [00:00<00:00, 174992.08it/s] 55%|█████▌    | 48959/88651 [00:00<00:00, 167680.99it/s] 67%|██████▋   | 59401/88651 [00:00<00:00, 120749.59it/s] 86%|████████▋ | 76630/88651 [00:00<00:00, 132654.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 143062.75it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12075/88651 [00:00<00:00, 120747.81it/s] 33%|███▎      | 29374/88651 [00:00<00:00, 132775.60it/s] 53%|█████▎    | 46755/88651 [00:00<00:00, 142896.21it/s] 67%|██████▋   | 59510/88651 [00:00<00:00, 137915.28it/s] 83%|████████▎ | 73375/88651 [00:00<00:00, 135675.80it/s] 96%|█████████▌| 85180/88651 [00:00<00:00, 116492.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 132492.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17841/88651 [00:00<00:00, 178405.07it/s] 41%|████      | 36054/88651 [00:00<00:00, 179502.07it/s] 51%|█████     | 45264/88651 [00:00<00:00, 136186.00it/s] 62%|██████▏   | 54809/88651 [00:00<00:00, 120725.12it/s] 75%|███████▌  | 66913/88651 [00:00<00:00, 120817.29it/s] 88%|████████▊ | 78088/88651 [00:00<00:00, 117944.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 126618.92it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11687/88651 [00:00<00:00, 116860.64it/s] 24%|██▍       | 21618/88651 [00:00<00:00, 110976.04it/s] 40%|███▉      | 35266/88651 [00:00<00:00, 117566.69it/s] 57%|█████▋    | 50950/88651 [00:00<00:00, 127114.02it/s] 77%|███████▋  | 68296/88651 [00:00<00:00, 138189.09it/s] 96%|█████████▌| 84715/88651 [00:00<00:00, 145080.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 132354.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8565/88651 [00:00<00:00, 85648.86it/s] 25%|██▍       | 21927/88651 [00:00<00:00, 95986.57it/s] 38%|███▊      | 33929/88651 [00:00<00:00, 102120.77it/s] 58%|█████▊    | 51665/88651 [00:00<00:00, 117012.29it/s] 78%|███████▊  | 69199/88651 [00:00<00:00, 129982.77it/s] 98%|█████████▊| 86566/88651 [00:00<00:00, 140591.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 144883.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5561/88651 [00:00<00:01, 55607.67it/s] 18%|█▊        | 16276/88651 [00:00<00:01, 64985.04it/s] 28%|██▊       | 24658/88651 [00:00<00:00, 69373.21it/s] 43%|████▎     | 38527/88651 [00:00<00:00, 81609.46it/s] 61%|██████    | 53791/88651 [00:00<00:00, 94850.39it/s] 76%|███████▌  | 66973/88651 [00:00<00:00, 103563.87it/s] 88%|████████▊ | 78072/88651 [00:00<00:00, 90345.59it/s] 100%|██████████| 88651/88651 [00:00<00:00, 108468.62it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13467/88651 [00:00<00:00, 134667.56it/s] 23%|██▎       | 20546/88651 [00:00<00:00, 103056.56it/s] 30%|██▉       | 26305/88651 [00:00<00:00, 83320.45it/s]  43%|████▎     | 38321/88651 [00:00<00:00, 91759.13it/s] 51%|█████▏    | 45500/88651 [00:00<00:00, 69615.26it/s] 68%|██████▊   | 60056/88651 [00:00<00:00, 82533.35it/s] 78%|███████▊  | 68876/88651 [00:00<00:00, 75997.75it/s] 97%|█████████▋| 85949/88651 [00:00<00:00, 91174.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 96355.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15859/88651 [00:00<00:00, 138381.73it/s] 23%|██▎       | 20029/88651 [00:00<00:00, 81611.41it/s]  30%|██▉       | 26445/88651 [00:00<00:00, 72947.20it/s] 37%|███▋      | 32751/88651 [00:00<00:00, 68723.67it/s] 49%|████▊     | 43206/88651 [00:00<00:00, 76597.72it/s] 56%|█████▋    | 49900/88651 [00:00<00:00, 58945.67it/s] 70%|███████   | 62311/88651 [00:00<00:00, 69965.87it/s] 86%|████████▌ | 76405/88651 [00:00<00:00, 82415.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 89397.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18973/88651 [00:00<00:00, 189725.21it/s] 37%|███▋      | 33134/88651 [00:00<00:00, 169971.98it/s] 46%|████▋     | 41221/88651 [00:00<00:00, 93364.67it/s]  66%|██████▌   | 58271/88651 [00:00<00:00, 108025.05it/s] 84%|████████▍ | 74387/88651 [00:00<00:00, 119372.96it/s] 97%|█████████▋| 86155/88651 [00:00<00:00, 109247.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 122024.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12255/88651 [00:00<00:00, 122541.94it/s] 27%|██▋       | 24248/88651 [00:00<00:00, 121743.61it/s] 47%|████▋     | 41624/88651 [00:00<00:00, 133755.45it/s] 68%|██████▊   | 59871/88651 [00:00<00:00, 145398.92it/s] 89%|████████▊ | 78533/88651 [00:00<00:00, 155716.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 159861.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16745/88651 [00:00<00:00, 167443.77it/s] 39%|███▉      | 34838/88651 [00:00<00:00, 171273.64it/s] 60%|██████    | 53590/88651 [00:00<00:00, 175842.35it/s] 81%|████████  | 71504/88651 [00:00<00:00, 176818.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 179972.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17047/88651 [00:00<00:00, 170465.69it/s] 39%|███▉      | 34639/88651 [00:00<00:00, 171760.86it/s] 59%|█████▉    | 52656/88651 [00:00<00:00, 174197.53it/s] 74%|███████▎  | 65260/88651 [00:00<00:00, 156282.84it/s] 94%|█████████▎| 82926/88651 [00:00<00:00, 161884.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 166711.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14177/88651 [00:00<00:00, 141758.31it/s] 31%|███▏      | 27724/88651 [00:00<00:00, 139811.09it/s] 51%|█████     | 45239/88651 [00:00<00:00, 148818.19it/s] 67%|██████▋   | 59140/88651 [00:00<00:00, 145731.60it/s] 82%|████████▏ | 72843/88651 [00:00<00:00, 142993.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 149918.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 11047/88651 [00:00<00:00, 110463.52it/s] 27%|██▋       | 23615/88651 [00:00<00:00, 114625.31it/s] 39%|███▊      | 34216/88651 [00:00<00:00, 111894.85it/s] 53%|█████▎    | 46910/88651 [00:00<00:00, 116019.77it/s] 65%|██████▍   | 57615/88651 [00:00<00:00, 113172.35it/s] 82%|████████▏ | 72552/88651 [00:00<00:00, 122045.06it/s] 94%|█████████▍| 83700/88651 [00:00<00:00, 111517.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 118478.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16492/88651 [00:00<00:00, 164912.69it/s] 33%|███▎      | 28979/88651 [00:00<00:00, 150437.05it/s] 44%|████▍     | 39267/88651 [00:00<00:00, 132115.06it/s] 60%|█████▉    | 53006/88651 [00:00<00:00, 133653.91it/s] 76%|███████▋  | 67811/88651 [00:00<00:00, 137667.59it/s] 92%|█████████▏| 81213/88651 [00:00<00:00, 136551.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 137069.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12647/88651 [00:00<00:00, 126464.39it/s] 34%|███▎      | 29793/88651 [00:00<00:00, 137270.57it/s] 52%|█████▏    | 45907/88651 [00:00<00:00, 143653.94it/s] 69%|██████▊   | 60778/88651 [00:00<00:00, 145133.52it/s] 84%|████████▍ | 74841/88651 [00:00<00:00, 143751.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 153357.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18244/88651 [00:00<00:00, 182438.87it/s] 41%|████▏     | 36642/88651 [00:00<00:00, 182896.07it/s] 62%|██████▏   | 54739/88651 [00:00<00:00, 182313.49it/s] 81%|████████  | 71555/88651 [00:00<00:00, 177821.61it/s] 96%|█████████▌| 84982/88651 [00:00<00:00, 160589.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 166390.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14302/88651 [00:00<00:00, 143016.39it/s] 36%|███▌      | 32004/88651 [00:00<00:00, 151761.13it/s] 45%|████▌     | 40318/88651 [00:00<00:00, 118620.91it/s] 55%|█████▍    | 48496/88651 [00:00<00:00, 77964.90it/s]  66%|██████▋   | 58936/88651 [00:00<00:00, 82819.04it/s] 77%|███████▋  | 68031/88651 [00:00<00:00, 83486.56it/s] 86%|████████▌ | 76060/88651 [00:00<00:00, 71011.30it/s] 94%|█████████▍| 83260/88651 [00:01<00:00, 59879.49it/s]100%|██████████| 88651/88651 [00:01<00:00, 83330.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6008/88651 [00:00<00:01, 57950.39it/s] 15%|█▌        | 13641/88651 [00:00<00:01, 62461.55it/s] 20%|█▉        | 17714/88651 [00:00<00:01, 52907.46it/s] 27%|██▋       | 24107/88651 [00:00<00:01, 55792.68it/s] 41%|████      | 36072/88651 [00:00<00:00, 66428.40it/s] 55%|█████▌    | 49108/88651 [00:00<00:00, 77886.72it/s] 65%|██████▌   | 57715/88651 [00:00<00:00, 70288.87it/s] 75%|███████▌  | 66868/88651 [00:00<00:00, 75547.35it/s] 85%|████████▍ | 75270/88651 [00:00<00:00, 77380.96it/s] 97%|█████████▋| 85686/88651 [00:01<00:00, 83847.67it/s]100%|██████████| 88651/88651 [00:01<00:00, 82324.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10742/88651 [00:00<00:00, 107412.93it/s] 19%|█▊        | 16605/88651 [00:00<00:00, 85956.28it/s]  40%|███▉      | 35251/88651 [00:00<00:00, 102536.22it/s] 61%|██████    | 53921/88651 [00:00<00:00, 118570.92it/s] 79%|███████▉  | 70202/88651 [00:00<00:00, 129094.20it/s] 95%|█████████▍| 83940/88651 [00:00<00:00, 131472.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 141817.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19870/88651 [00:00<00:00, 198695.93it/s] 46%|████▌     | 40532/88651 [00:00<00:00, 201007.24it/s] 68%|██████▊   | 60472/88651 [00:00<00:00, 200520.54it/s] 84%|████████▍ | 74459/88651 [00:00<00:00, 177438.01it/s] 99%|█████████▉| 87925/88651 [00:00<00:00, 140674.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 162382.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17072/88651 [00:00<00:00, 170715.28it/s] 40%|███▉      | 35272/88651 [00:00<00:00, 173948.64it/s] 59%|█████▉    | 52476/88651 [00:00<00:00, 173369.92it/s] 73%|███████▎  | 64987/88651 [00:00<00:00, 155386.91it/s] 87%|████████▋ | 76785/88651 [00:00<00:00, 122281.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 145725.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18503/88651 [00:00<00:00, 185028.85it/s] 36%|███▌      | 31615/88651 [00:00<00:00, 164711.51it/s] 54%|█████▍    | 47794/88651 [00:00<00:00, 163823.37it/s] 73%|███████▎  | 64860/88651 [00:00<00:00, 165814.47it/s] 87%|████████▋ | 77418/88651 [00:00<00:00, 151273.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 156631.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15441/88651 [00:00<00:00, 154404.26it/s] 33%|███▎      | 29597/88651 [00:00<00:00, 150310.61it/s] 42%|████▏     | 37087/88651 [00:00<00:00, 114525.38it/s] 58%|█████▊    | 51140/88651 [00:00<00:00, 121255.07it/s] 71%|███████   | 62640/88651 [00:00<00:00, 119307.66it/s] 83%|████████▎ | 74018/88651 [00:00<00:00, 117592.77it/s] 99%|█████████▉| 87720/88651 [00:00<00:00, 122814.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 125351.62it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17809/88651 [00:00<00:00, 178089.75it/s] 41%|████      | 36103/88651 [00:00<00:00, 179517.15it/s] 55%|█████▍    | 48542/88651 [00:00<00:00, 158446.83it/s] 69%|██████▉   | 61027/88651 [00:00<00:00, 146607.87it/s] 86%|████████▋ | 76600/88651 [00:00<00:00, 149228.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 150382.23it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17828/88651 [00:00<00:00, 178275.07it/s] 39%|███▉      | 34499/88651 [00:00<00:00, 174637.15it/s] 50%|████▉     | 43995/88651 [00:00<00:00, 139516.70it/s] 65%|██████▍   | 57473/88651 [00:00<00:00, 138059.01it/s] 83%|████████▎ | 73567/88651 [00:00<00:00, 144208.86it/s] 98%|█████████▊| 87154/88651 [00:00<00:00, 141601.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 145671.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17493/88651 [00:00<00:00, 174928.92it/s] 39%|███▉      | 34695/88651 [00:00<00:00, 174042.11it/s] 54%|█████▎    | 47503/88651 [00:00<00:00, 157125.81it/s] 73%|███████▎  | 65150/88651 [00:00<00:00, 162467.49it/s] 87%|████████▋ | 77463/88651 [00:00<00:00, 119392.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 134077.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9364/88651 [00:00<00:00, 93639.64it/s] 32%|███▏      | 28679/88651 [00:00<00:00, 110757.57it/s] 47%|████▋     | 41326/88651 [00:00<00:00, 113329.07it/s] 59%|█████▊    | 51942/88651 [00:00<00:00, 111076.99it/s] 80%|███████▉  | 70706/88651 [00:00<00:00, 126569.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 147917.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10261/88651 [00:00<00:00, 102605.45it/s] 20%|█▉        | 17601/88651 [00:00<00:00, 91661.61it/s]  33%|███▎      | 29311/88651 [00:00<00:00, 98050.17it/s] 42%|████▏     | 37235/88651 [00:00<00:00, 91530.06it/s] 53%|█████▎    | 47302/88651 [00:00<00:00, 94091.98it/s] 68%|██████▊   | 59939/88651 [00:00<00:00, 101900.01it/s] 81%|████████  | 71898/88651 [00:00<00:00, 106630.50it/s] 95%|█████████▍| 84091/88651 [00:00<00:00, 110799.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 106244.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18296/88651 [00:00<00:00, 182957.56it/s] 42%|████▏     | 37189/88651 [00:00<00:00, 184708.54it/s] 60%|█████▉    | 53118/88651 [00:00<00:00, 170034.93it/s] 76%|███████▌  | 67020/88651 [00:00<00:00, 159368.20it/s] 97%|█████████▋| 86317/88651 [00:00<00:00, 168151.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 169357.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17238/88651 [00:00<00:00, 172378.11it/s] 41%|████      | 36281/88651 [00:00<00:00, 177422.66it/s] 61%|██████    | 53683/88651 [00:00<00:00, 176384.44it/s] 75%|███████▍  | 66171/88651 [00:00<00:00, 156959.83it/s] 88%|████████▊ | 78145/88651 [00:00<00:00, 122867.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 145588.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18228/88651 [00:00<00:00, 182278.87it/s] 42%|████▏     | 36804/88651 [00:00<00:00, 183308.84it/s] 59%|█████▊    | 51878/88651 [00:00<00:00, 172146.95it/s] 72%|███████▏  | 64061/88651 [00:00<00:00, 153166.05it/s] 87%|████████▋ | 77023/88651 [00:00<00:00, 145249.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 131188.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12643/88651 [00:00<00:00, 126421.98it/s] 33%|███▎      | 29476/88651 [00:00<00:00, 136625.25it/s] 42%|████▏     | 37181/88651 [00:00<00:00, 89772.68it/s]  54%|█████▍    | 47794/88651 [00:00<00:00, 93834.57it/s] 65%|██████▍   | 57402/88651 [00:00<00:00, 94495.80it/s] 74%|███████▍  | 65864/88651 [00:00<00:00, 77375.50it/s] 83%|████████▎ | 73419/88651 [00:00<00:00, 66821.65it/s] 90%|█████████ | 80228/88651 [00:00<00:00, 67189.22it/s]100%|██████████| 88651/88651 [00:01<00:00, 83636.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11387/88651 [00:00<00:00, 113868.48it/s] 21%|██        | 18542/88651 [00:00<00:00, 96706.55it/s]  26%|██▌       | 23107/88651 [00:00<00:00, 72098.40it/s] 40%|████      | 35507/88651 [00:00<00:00, 82451.71it/s] 52%|█████▏    | 46035/88651 [00:00<00:00, 88186.76it/s] 64%|██████▍   | 57113/88651 [00:00<00:00, 93933.71it/s] 74%|███████▍  | 66025/88651 [00:00<00:00, 87120.50it/s] 90%|█████████ | 79993/88651 [00:00<00:00, 98205.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 98954.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17914/88651 [00:00<00:00, 179138.46it/s] 41%|████      | 36135/88651 [00:00<00:00, 180045.86it/s] 61%|██████    | 53900/88651 [00:00<00:00, 179317.68it/s] 74%|███████▍  | 65689/88651 [00:00<00:00, 125008.18it/s] 88%|████████▊ | 78246/88651 [00:00<00:00, 125173.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 142984.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17593/88651 [00:00<00:00, 175926.39it/s] 41%|████      | 36133/88651 [00:00<00:00, 178662.33it/s] 62%|██████▏   | 55253/88651 [00:00<00:00, 182247.44it/s] 79%|███████▉  | 69879/88651 [00:00<00:00, 169717.34it/s] 93%|█████████▎| 82818/88651 [00:00<00:00, 154828.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 161899.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18382/88651 [00:00<00:00, 183818.86it/s] 42%|████▏     | 37216/88651 [00:00<00:00, 185150.34it/s] 63%|██████▎   | 55775/88651 [00:00<00:00, 185281.28it/s] 84%|████████▍ | 74614/88651 [00:00<00:00, 186201.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 175933.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15918/88651 [00:00<00:00, 159172.18it/s] 40%|███▉      | 35340/88651 [00:00<00:00, 168281.67it/s] 59%|█████▊    | 51964/88651 [00:00<00:00, 167662.88it/s] 77%|███████▋  | 67944/88651 [00:00<00:00, 165222.66it/s] 94%|█████████▍| 83504/88651 [00:00<00:00, 162211.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 166678.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8019/88651 [00:00<00:01, 80183.77it/s] 20%|██        | 17990/88651 [00:00<00:00, 85188.38it/s] 28%|██▊       | 24738/88651 [00:00<00:00, 78803.74it/s] 38%|███▊      | 33974/88651 [00:00<00:00, 82432.44it/s] 51%|█████     | 45343/88651 [00:00<00:00, 89842.33it/s] 69%|██████▉   | 61448/88651 [00:00<00:00, 103581.47it/s] 90%|████████▉ | 79542/88651 [00:00<00:00, 118821.24it/s]100%|██████████| 88651/88651 [00:00<00:00, 116142.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13795/88651 [00:00<00:00, 137946.84it/s] 27%|██▋       | 24225/88651 [00:00<00:00, 125773.47it/s] 34%|███▍      | 30251/88651 [00:00<00:00, 93251.91it/s]  52%|█████▏    | 46518/88651 [00:00<00:00, 106942.85it/s] 73%|███████▎  | 64333/88651 [00:00<00:00, 121511.69it/s] 86%|████████▌ | 76424/88651 [00:00<00:00, 121329.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 126348.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5955/88651 [00:00<00:01, 59543.67it/s] 13%|█▎        | 11285/88651 [00:00<00:01, 57521.76it/s] 25%|██▍       | 22151/88651 [00:00<00:00, 66977.76it/s] 37%|███▋      | 32838/88651 [00:00<00:00, 74668.21it/s] 49%|████▉     | 43872/88651 [00:00<00:00, 82687.12it/s] 61%|██████    | 53831/88651 [00:00<00:00, 87121.37it/s] 72%|███████▏  | 63792/88651 [00:00<00:00, 88176.04it/s] 85%|████████▍ | 75023/88651 [00:00<00:00, 94250.43it/s] 96%|█████████▌| 84880/88651 [00:00<00:00, 95504.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 93456.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8333/88651 [00:00<00:00, 83329.68it/s] 19%|█▉        | 17033/88651 [00:00<00:00, 78882.37it/s] 30%|███       | 26622/88651 [00:00<00:00, 83313.94it/s] 43%|████▎     | 38001/88651 [00:00<00:00, 90591.75it/s] 52%|█████▏    | 45903/88651 [00:00<00:00, 86776.84it/s] 60%|██████    | 53395/88651 [00:00<00:00, 72442.73it/s] 68%|██████▊   | 60277/88651 [00:00<00:00, 71315.29it/s] 80%|███████▉  | 70583/88651 [00:00<00:00, 78576.18it/s] 89%|████████▊ | 78459/88651 [00:01<00:00, 65581.58it/s]100%|█████████▉| 88321/88651 [00:01<00:00, 72908.47it/s]100%|██████████| 88651/88651 [00:01<00:00, 77978.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7356/88651 [00:00<00:01, 73554.46it/s] 21%|██        | 18184/88651 [00:00<00:00, 81383.59it/s] 33%|███▎      | 29672/88651 [00:00<00:00, 89183.56it/s] 46%|████▋     | 41008/88651 [00:00<00:00, 95278.17it/s] 59%|█████▉    | 52446/88651 [00:00<00:00, 100302.49it/s] 72%|███████▏  | 64072/88651 [00:00<00:00, 104608.98it/s] 84%|████████▍ | 74809/88651 [00:00<00:00, 105422.21it/s] 98%|█████████▊| 86766/88651 [00:00<00:00, 109301.17it/s]100%|██████████| 88651/88651 [00:00<00:00, 108677.58it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11639/88651 [00:00<00:00, 116380.95it/s] 26%|██▋       | 23461/88651 [00:00<00:00, 116924.18it/s] 40%|███▉      | 35356/88651 [00:00<00:00, 117523.77it/s] 53%|█████▎    | 47179/88651 [00:00<00:00, 117734.03it/s] 67%|██████▋   | 59215/88651 [00:00<00:00, 118509.66it/s] 79%|███████▉  | 70032/88651 [00:00<00:00, 115205.24it/s] 92%|█████████▏| 81986/88651 [00:00<00:00, 116471.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 117410.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11564/88651 [00:00<00:00, 115633.49it/s] 26%|██▌       | 23176/88651 [00:00<00:00, 115778.97it/s] 39%|███▉      | 34969/88651 [00:00<00:00, 116413.64it/s] 53%|█████▎    | 46897/88651 [00:00<00:00, 117257.12it/s] 66%|██████▋   | 58947/88651 [00:00<00:00, 118208.72it/s] 80%|████████  | 71094/88651 [00:00<00:00, 119166.42it/s] 94%|█████████▍| 83337/88651 [00:00<00:00, 120124.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 119018.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11380/88651 [00:00<00:00, 113792.24it/s] 25%|██▌       | 22214/88651 [00:00<00:00, 112098.34it/s] 38%|███▊      | 33318/88651 [00:00<00:00, 111777.88it/s] 51%|█████     | 45023/88651 [00:00<00:00, 113306.80it/s] 64%|██████▍   | 56853/88651 [00:00<00:00, 114757.81it/s] 78%|███████▊  | 68757/88651 [00:00<00:00, 116008.18it/s] 89%|████████▉ | 79173/88651 [00:00<00:00, 112178.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 113465.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9530/88651 [00:00<00:00, 95241.05it/s] 24%|██▍       | 21163/88651 [00:00<00:00, 100717.17it/s] 37%|███▋      | 32689/88651 [00:00<00:00, 104679.28it/s] 46%|████▌     | 40820/88651 [00:00<00:00, 96369.93it/s]  57%|█████▋    | 50432/88651 [00:00<00:00, 96293.39it/s] 70%|██████▉   | 61794/88651 [00:00<00:00, 98906.72it/s] 82%|████████▏ | 72276/88651 [00:00<00:00, 100609.20it/s] 92%|█████████▏| 81641/88651 [00:00<00:00, 90627.34it/s] 100%|██████████| 88651/88651 [00:00<00:00, 99299.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6349/88651 [00:00<00:01, 63230.61it/s] 17%|█▋        | 15361/88651 [00:00<00:01, 69445.73it/s] 31%|███       | 27249/88651 [00:00<00:00, 79342.69it/s] 44%|████▍     | 39097/88651 [00:00<00:00, 88069.32it/s] 57%|█████▋    | 50955/88651 [00:00<00:00, 95433.80it/s] 71%|███████   | 62595/88651 [00:00<00:00, 100883.95it/s] 83%|████████▎ | 73580/88651 [00:00<00:00, 103415.63it/s] 95%|█████████▍| 83816/88651 [00:00<00:00, 90032.46it/s] 100%|██████████| 88651/88651 [00:00<00:00, 100021.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12494/88651 [00:00<00:00, 124930.89it/s] 28%|██▊       | 24828/88651 [00:00<00:00, 124446.49it/s] 41%|████      | 36099/88651 [00:00<00:00, 120675.32it/s] 55%|█████▍    | 48318/88651 [00:00<00:00, 121124.94it/s] 68%|██████▊   | 60511/88651 [00:00<00:00, 121362.35it/s] 82%|████████▏ | 72480/88651 [00:00<00:00, 120855.62it/s] 94%|█████████▎| 83106/88651 [00:00<00:00, 101215.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 110447.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5861/88651 [00:00<00:01, 58605.31it/s] 10%|█         | 9055/88651 [00:00<00:01, 46864.13it/s] 13%|█▎        | 11860/88651 [00:00<00:01, 38467.61it/s] 16%|█▌        | 14206/88651 [00:00<00:02, 31918.82it/s] 20%|██        | 18097/88651 [00:00<00:02, 33467.66it/s] 31%|███▏      | 27924/88651 [00:00<00:01, 41721.34it/s] 41%|████      | 36255/88651 [00:00<00:01, 48478.74it/s] 47%|████▋     | 42010/88651 [00:00<00:00, 47059.68it/s] 54%|█████▎    | 47618/88651 [00:00<00:00, 47606.33it/s] 61%|██████    | 53912/88651 [00:01<00:00, 51359.98it/s] 68%|██████▊   | 60228/88651 [00:01<00:00, 54409.38it/s] 77%|███████▋  | 68357/88651 [00:01<00:00, 60400.86it/s] 87%|████████▋ | 77464/88651 [00:01<00:00, 67188.07it/s] 96%|█████████▌| 84731/88651 [00:01<00:00, 54760.11it/s]100%|██████████| 88651/88651 [00:01<00:00, 54412.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6763/88651 [00:00<00:01, 66932.23it/s] 14%|█▍        | 12639/88651 [00:00<00:01, 64249.90it/s] 19%|█▉        | 16883/88651 [00:00<00:01, 54251.76it/s] 23%|██▎       | 20295/88651 [00:00<00:01, 42762.58it/s] 30%|██▉       | 26172/88651 [00:00<00:01, 45611.64it/s] 34%|███▍      | 30066/88651 [00:00<00:01, 41045.01it/s] 38%|███▊      | 33790/88651 [00:00<00:01, 37365.52it/s] 44%|████▎     | 38678/88651 [00:00<00:01, 39465.83it/s] 50%|█████     | 44617/88651 [00:00<00:01, 43847.55it/s] 57%|█████▋    | 50895/88651 [00:01<00:00, 48208.66it/s] 65%|██████▍   | 57289/88651 [00:01<00:00, 52050.45it/s] 71%|███████▏  | 63239/88651 [00:01<00:00, 52698.31it/s] 78%|███████▊  | 69294/88651 [00:01<00:00, 54730.80it/s] 90%|█████████ | 80122/88651 [00:01<00:00, 64265.37it/s] 98%|█████████▊| 87292/88651 [00:01<00:00, 63302.42it/s]100%|██████████| 88651/88651 [00:01<00:00, 54727.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12176/88651 [00:00<00:00, 121753.73it/s] 26%|██▌       | 22923/88651 [00:00<00:00, 117083.26it/s] 39%|███▉      | 34816/88651 [00:00<00:00, 117628.93it/s] 53%|█████▎    | 46606/88651 [00:00<00:00, 117709.73it/s] 66%|██████▌   | 58627/88651 [00:00<00:00, 118448.19it/s] 77%|███████▋  | 68441/88651 [00:00<00:00, 95088.45it/s]  90%|█████████ | 79839/88651 [00:00<00:00, 100061.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 102216.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9837/88651 [00:00<00:00, 95843.92it/s] 18%|█▊        | 16193/88651 [00:00<00:00, 83168.29it/s] 29%|██▉       | 25565/88651 [00:00<00:00, 85658.83it/s] 36%|███▌      | 31687/88651 [00:00<00:00, 76494.85it/s] 45%|████▌     | 40036/88651 [00:00<00:00, 77720.16it/s] 55%|█████▍    | 48451/88651 [00:00<00:00, 79541.82it/s] 68%|██████▊   | 60295/88651 [00:00<00:00, 88234.40it/s] 79%|███████▊  | 69643/88651 [00:00<00:00, 89743.50it/s] 88%|████████▊ | 78369/88651 [00:00<00:00, 80925.01it/s]100%|█████████▉| 88496/88651 [00:01<00:00, 86113.58it/s]100%|██████████| 88651/88651 [00:01<00:00, 83283.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10862/88651 [00:00<00:00, 108619.33it/s] 25%|██▍       | 22076/88651 [00:00<00:00, 109650.82it/s] 38%|███▊      | 33503/88651 [00:00<00:00, 110995.60it/s] 46%|████▌     | 40883/88651 [00:00<00:00, 80109.86it/s]  59%|█████▉    | 52113/88651 [00:00<00:00, 87645.46it/s] 72%|███████▏  | 64053/88651 [00:00<00:00, 95243.13it/s] 86%|████████▌ | 76008/88651 [00:00<00:00, 101429.66it/s] 99%|█████████▉| 88040/88651 [00:00<00:00, 106441.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 103389.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11709/88651 [00:00<00:00, 117082.85it/s] 26%|██▋       | 23490/88651 [00:00<00:00, 117297.66it/s] 37%|███▋      | 32811/88651 [00:00<00:00, 108857.24it/s] 45%|████▍     | 39803/88651 [00:00<00:00, 84092.39it/s]  58%|█████▊    | 51629/88651 [00:00<00:00, 92071.47it/s] 72%|███████▏  | 63596/88651 [00:00<00:00, 98913.63it/s] 85%|████████▌ | 75681/88651 [00:00<00:00, 104609.84it/s] 99%|█████████▉| 87791/88651 [00:00<00:00, 109065.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 106186.72it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 11077/88651 [00:00<00:00, 110763.50it/s] 26%|██▌       | 22862/88651 [00:00<00:00, 112797.27it/s] 39%|███▉      | 34951/88651 [00:00<00:00, 115108.16it/s] 53%|█████▎    | 46988/88651 [00:00<00:00, 116635.29it/s] 67%|██████▋   | 58982/88651 [00:00<00:00, 117604.90it/s] 80%|████████  | 71127/88651 [00:00<00:00, 118731.82it/s] 94%|█████████▍| 83228/88651 [00:00<00:00, 119406.17it/s]100%|██████████| 88651/88651 [00:00<00:00, 119019.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10968/88651 [00:00<00:00, 109673.04it/s] 25%|██▍       | 22137/88651 [00:00<00:00, 110269.30it/s] 37%|███▋      | 32826/88651 [00:00<00:00, 109232.68it/s] 49%|████▉     | 43467/88651 [00:00<00:00, 108368.65it/s] 62%|██████▏   | 55312/88651 [00:00<00:00, 111205.34it/s] 76%|███████▌  | 67258/88651 [00:00<00:00, 113558.83it/s] 89%|████████▉ | 79315/88651 [00:00<00:00, 115572.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 114093.33it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8419/88651 [00:00<00:00, 84182.65it/s] 23%|██▎       | 20362/88651 [00:00<00:00, 92358.71it/s] 35%|███▍      | 30602/88651 [00:00<00:00, 95156.88it/s] 48%|████▊     | 42553/88651 [00:00<00:00, 101351.31it/s] 61%|██████▏   | 54479/88651 [00:00<00:00, 106131.34it/s] 72%|███████▏  | 64121/88651 [00:00<00:00, 103016.31it/s] 86%|████████▌ | 76307/88651 [00:00<00:00, 108025.50it/s]100%|█████████▉| 88432/88651 [00:00<00:00, 111678.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 110477.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6145/88651 [00:00<00:01, 61449.47it/s] 16%|█▋        | 14457/88651 [00:00<00:01, 66223.26it/s] 23%|██▎       | 20599/88651 [00:00<00:01, 64704.89it/s] 35%|███▌      | 31063/88651 [00:00<00:00, 73070.39it/s] 42%|████▏     | 37314/88651 [00:00<00:00, 56666.60it/s] 56%|█████▌    | 49606/88651 [00:00<00:00, 67596.64it/s] 69%|██████▉   | 61549/88651 [00:00<00:00, 77715.30it/s] 83%|████████▎ | 73665/88651 [00:00<00:00, 87082.77it/s] 96%|█████████▋| 85519/88651 [00:00<00:00, 94613.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 88843.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11140/88651 [00:00<00:00, 111396.12it/s] 26%|██▌       | 22617/88651 [00:00<00:00, 112337.26it/s] 39%|███▉      | 34677/88651 [00:00<00:00, 114693.64it/s] 52%|█████▏    | 46443/88651 [00:00<00:00, 115565.89it/s] 66%|██████▌   | 58144/88651 [00:00<00:00, 115992.60it/s] 77%|███████▋  | 67880/88651 [00:00<00:00, 90632.75it/s]  90%|████████▉ | 79429/88651 [00:00<00:00, 96888.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 100700.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7682/88651 [00:00<00:01, 76816.04it/s] 22%|██▏       | 19524/88651 [00:00<00:00, 85865.57it/s] 34%|███▎      | 29763/88651 [00:00<00:00, 90233.31it/s] 47%|████▋     | 41680/88651 [00:00<00:00, 97322.42it/s] 61%|██████    | 53638/88651 [00:00<00:00, 103077.89it/s] 73%|███████▎  | 65070/88651 [00:00<00:00, 106210.55it/s] 87%|████████▋ | 76843/88651 [00:00<00:00, 109421.83it/s] 99%|█████████▊| 87366/88651 [00:00<00:00, 91090.96it/s] 100%|██████████| 88651/88651 [00:00<00:00, 100665.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6427/88651 [00:00<00:01, 64265.77it/s] 16%|█▋        | 14507/88651 [00:00<00:01, 67208.40it/s] 28%|██▊       | 24567/88651 [00:00<00:00, 74042.60it/s] 38%|███▊      | 33352/88651 [00:00<00:00, 77705.43it/s] 48%|████▊     | 42462/88651 [00:00<00:00, 81290.23it/s] 57%|█████▋    | 50186/88651 [00:00<00:00, 80029.85it/s] 65%|██████▍   | 57573/88651 [00:00<00:00, 76057.34it/s] 76%|███████▌  | 67551/88651 [00:00<00:00, 81290.59it/s] 87%|████████▋ | 77451/88651 [00:00<00:00, 85900.18it/s] 97%|█████████▋| 86223/88651 [00:01<00:00, 86437.50it/s]100%|██████████| 88651/88651 [00:01<00:00, 84841.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8822/88651 [00:00<00:00, 88217.35it/s] 15%|█▌        | 13665/88651 [00:00<00:01, 70773.13it/s] 28%|██▊       | 25258/88651 [00:00<00:00, 80135.74it/s] 35%|███▌      | 31050/88651 [00:00<00:00, 67392.20it/s] 49%|████▊     | 43213/88651 [00:00<00:00, 77799.00it/s] 63%|██████▎   | 55419/88651 [00:00<00:00, 87294.11it/s] 74%|███████▍  | 65884/88651 [00:00<00:00, 91304.92it/s] 85%|████████▍ | 75200/88651 [00:00<00:00, 70534.20it/s] 95%|█████████▍| 83933/88651 [00:01<00:00, 72769.14it/s]100%|██████████| 88651/88651 [00:01<00:00, 78572.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4333/88651 [00:00<00:01, 43329.73it/s]  8%|▊         | 6915/88651 [00:00<00:02, 34391.12it/s] 11%|█▏        | 10176/88651 [00:00<00:02, 33260.17it/s] 14%|█▍        | 12610/88651 [00:00<00:02, 27511.97it/s] 21%|██        | 18741/88651 [00:00<00:02, 32951.46it/s] 28%|██▊       | 24895/88651 [00:00<00:01, 38287.06it/s] 35%|███▌      | 31054/88651 [00:00<00:01, 42559.40it/s] 42%|████▏     | 36837/88651 [00:00<00:01, 46220.73it/s] 49%|████▊     | 43159/88651 [00:00<00:00, 50276.37it/s] 58%|█████▊    | 51062/88651 [00:01<00:00, 56435.89it/s] 65%|██████▍   | 57193/88651 [00:01<00:00, 47207.27it/s] 71%|███████   | 62510/88651 [00:01<00:00, 43842.50it/s] 76%|███████▌  | 67515/88651 [00:01<00:00, 45536.28it/s] 83%|████████▎ | 73249/88651 [00:01<00:00, 47593.20it/s] 89%|████████▊ | 78556/88651 [00:01<00:00, 49112.96it/s]100%|██████████| 88651/88651 [00:01<00:00, 50321.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12079/88651 [00:00<00:00, 120785.51it/s] 27%|██▋       | 24243/88651 [00:00<00:00, 121039.77it/s] 41%|████      | 36111/88651 [00:00<00:00, 120319.11it/s] 54%|█████▍    | 47932/88651 [00:00<00:00, 119676.04it/s] 68%|██████▊   | 59906/88651 [00:00<00:00, 119693.37it/s] 81%|████████  | 71950/88651 [00:00<00:00, 119914.71it/s] 94%|█████████▍| 83773/88651 [00:00<00:00, 119404.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 116733.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5122/88651 [00:00<00:01, 49649.58it/s] 15%|█▍        | 13109/88651 [00:00<00:01, 55553.09it/s] 22%|██▏       | 19275/88651 [00:00<00:01, 57253.55it/s] 28%|██▊       | 24574/88651 [00:00<00:01, 55902.77it/s] 35%|███▌      | 31260/88651 [00:00<00:00, 58793.17it/s] 44%|████▎     | 38683/88651 [00:00<00:00, 61459.63it/s] 53%|█████▎    | 47046/88651 [00:00<00:00, 64893.48it/s] 61%|██████    | 54245/88651 [00:00<00:00, 66871.02it/s] 69%|██████▊   | 60757/88651 [00:00<00:00, 66178.54it/s] 76%|███████▌  | 67254/88651 [00:01<00:00, 63516.57it/s] 86%|████████▌ | 76413/88651 [00:01<00:00, 69947.47it/s] 95%|█████████▌| 84283/88651 [00:01<00:00, 72361.35it/s]100%|██████████| 88651/88651 [00:01<00:00, 68820.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12156/88651 [00:00<00:00, 121554.61it/s] 28%|██▊       | 24508/88651 [00:00<00:00, 122137.32it/s] 42%|████▏     | 37213/88651 [00:00<00:00, 123568.82it/s] 57%|█████▋    | 50297/88651 [00:00<00:00, 125661.93it/s] 71%|███████▏  | 63285/88651 [00:00<00:00, 126895.76it/s] 85%|████████▌ | 75610/88651 [00:00<00:00, 125778.25it/s] 99%|█████████▉| 88031/88651 [00:00<00:00, 125302.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 124160.11it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 11985/88651 [00:00<00:00, 119846.97it/s] 22%|██▏       | 19676/88651 [00:00<00:00, 102651.57it/s] 35%|███▌      | 31164/88651 [00:00<00:00, 106037.41it/s] 46%|████▌     | 40398/88651 [00:00<00:00, 99976.92it/s]  59%|█████▉    | 52327/88651 [00:00<00:00, 101852.94it/s] 68%|██████▊   | 60719/88651 [00:00<00:00, 94137.49it/s]  82%|████████▏ | 72846/88651 [00:00<00:00, 100910.55it/s] 93%|█████████▎| 82629/88651 [00:00<00:00, 99964.55it/s] 100%|██████████| 88651/88651 [00:00<00:00, 101704.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6909/88651 [00:00<00:01, 69065.86it/s] 15%|█▌        | 13487/88651 [00:00<00:01, 68045.31it/s] 28%|██▊       | 24636/88651 [00:00<00:00, 77052.17it/s] 41%|████      | 36499/88651 [00:00<00:00, 86105.15it/s] 55%|█████▍    | 48396/88651 [00:00<00:00, 93885.70it/s] 65%|██████▌   | 57663/88651 [00:00<00:00, 92593.97it/s] 77%|███████▋  | 67882/88651 [00:00<00:00, 95277.13it/s] 87%|████████▋ | 77180/88651 [00:00<00:00, 90109.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 97593.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5796/88651 [00:00<00:01, 57957.29it/s] 14%|█▍        | 12496/88651 [00:00<00:01, 60402.77it/s] 19%|█▉        | 17262/88651 [00:00<00:01, 55916.07it/s] 25%|██▍       | 21769/88651 [00:00<00:01, 52150.96it/s] 31%|███       | 27063/88651 [00:00<00:01, 52214.00it/s] 36%|███▌      | 31904/88651 [00:00<00:01, 51010.87it/s] 47%|████▋     | 41816/88651 [00:00<00:00, 59703.48it/s] 54%|█████▍    | 47926/88651 [00:00<00:00, 59367.16it/s] 61%|██████    | 54104/88651 [00:00<00:00, 60069.62it/s] 68%|██████▊   | 60182/88651 [00:01<00:00, 60234.17it/s] 76%|███████▋  | 67731/88651 [00:01<00:00, 64120.62it/s] 85%|████████▌ | 75576/88651 [00:01<00:00, 67837.60it/s] 98%|█████████▊| 87094/88651 [00:01<00:00, 77377.97it/s]100%|██████████| 88651/88651 [00:01<00:00, 67220.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5341/88651 [00:00<00:01, 53407.89it/s] 16%|█▌        | 14379/88651 [00:00<00:01, 60878.41it/s] 28%|██▊       | 25248/88651 [00:00<00:00, 70133.50it/s] 39%|███▉      | 34886/88651 [00:00<00:00, 76372.38it/s] 53%|█████▎    | 46729/88651 [00:00<00:00, 85478.78it/s] 67%|██████▋   | 59026/88651 [00:00<00:00, 94082.90it/s] 78%|███████▊  | 69305/88651 [00:00<00:00, 96534.64it/s] 89%|████████▉ | 79131/88651 [00:00<00:00, 81802.15it/s] 99%|█████████▉| 87839/88651 [00:00<00:00, 83261.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 90969.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12178/88651 [00:00<00:00, 121769.37it/s] 18%|█▊        | 15832/88651 [00:00<00:01, 71562.01it/s]  29%|██▉       | 25607/88651 [00:00<00:00, 77718.11it/s] 37%|███▋      | 32999/88651 [00:00<00:00, 76536.69it/s] 51%|█████▏    | 45505/88651 [00:00<00:00, 85095.16it/s] 60%|██████    | 53194/88651 [00:00<00:00, 80834.23it/s] 69%|██████▊   | 60747/88651 [00:00<00:00, 71064.52it/s] 76%|███████▋  | 67698/88651 [00:00<00:00, 66740.95it/s] 87%|████████▋ | 76785/88651 [00:00<00:00, 72516.62it/s] 95%|█████████▍| 84144/88651 [00:01<00:00, 68379.06it/s]100%|██████████| 88651/88651 [00:01<00:00, 78305.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9651/88651 [00:00<00:00, 96476.97it/s] 24%|██▍       | 21371/88651 [00:00<00:00, 101879.42it/s] 38%|███▊      | 33424/88651 [00:00<00:00, 106838.79it/s] 50%|████▉     | 43980/88651 [00:00<00:00, 104823.18it/s] 59%|█████▉    | 52239/88651 [00:00<00:00, 89422.26it/s]  73%|███████▎  | 64426/88651 [00:00<00:00, 97184.22it/s] 86%|████████▋ | 76637/88651 [00:00<00:00, 103523.74it/s] 99%|█████████▉| 87608/88651 [00:00<00:00, 101773.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 98916.43it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s]  3%|▎         | 3009/88651 [00:00<00:03, 24031.89it/s] 16%|█▌        | 13936/88651 [00:00<00:02, 31217.89it/s] 21%|██        | 18609/88651 [00:00<00:02, 33656.34it/s] 30%|███       | 26758/88651 [00:00<00:01, 40849.61it/s] 36%|███▌      | 32018/88651 [00:00<00:01, 42708.89it/s] 48%|████▊     | 42282/88651 [00:00<00:00, 51778.66it/s] 61%|██████▏   | 54307/88651 [00:00<00:00, 62445.22it/s] 71%|███████   | 62513/88651 [00:00<00:00, 59263.09it/s] 84%|████████▍ | 74515/88651 [00:01<00:00, 69874.01it/s] 98%|█████████▊| 86500/88651 [00:01<00:00, 79646.36it/s]100%|██████████| 88651/88651 [00:01<00:00, 76397.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7442/88651 [00:00<00:01, 69617.57it/s] 11%|█         | 9904/88651 [00:00<00:01, 44961.87it/s] 19%|█▉        | 17141/88651 [00:00<00:01, 50724.39it/s] 24%|██▍       | 21542/88651 [00:00<00:01, 47933.96it/s] 31%|███       | 27679/88651 [00:00<00:01, 50054.17it/s] 36%|███▌      | 32065/88651 [00:00<00:01, 43591.43it/s] 41%|████      | 36140/88651 [00:00<00:01, 42342.53it/s] 50%|█████     | 44345/88651 [00:00<00:00, 49533.29it/s] 60%|█████▉    | 52881/88651 [00:00<00:00, 56050.96it/s] 67%|██████▋   | 59324/88651 [00:01<00:00, 58325.77it/s] 74%|███████▍  | 65549/88651 [00:01<00:00, 58691.02it/s] 81%|████████▏ | 72093/88651 [00:01<00:00, 60563.65it/s] 89%|████████▊ | 78608/88651 [00:01<00:00, 61868.88it/s] 99%|█████████▉| 88129/88651 [00:01<00:00, 69130.83it/s]100%|██████████| 88651/88651 [00:01<00:00, 60359.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10391/88651 [00:00<00:00, 102773.40it/s] 18%|█▊        | 16325/88651 [00:00<00:00, 84267.32it/s]  26%|██▌       | 22648/88651 [00:00<00:00, 74326.70it/s] 33%|███▎      | 29093/88651 [00:00<00:00, 70281.62it/s] 40%|████      | 35567/88651 [00:00<00:00, 68521.15it/s] 46%|████▋     | 41027/88651 [00:00<00:00, 62715.96it/s] 58%|█████▊    | 51729/88651 [00:00<00:00, 71608.32it/s] 71%|███████   | 62734/88651 [00:00<00:00, 79439.03it/s] 80%|███████▉  | 70824/88651 [00:00<00:00, 73465.19it/s] 92%|█████████▏| 81289/88651 [00:01<00:00, 80676.73it/s]100%|██████████| 88651/88651 [00:01<00:00, 79882.73it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7777/88651 [00:00<00:01, 77764.51it/s] 20%|██        | 17732/88651 [00:00<00:00, 83227.36it/s] 26%|██▌       | 23027/88651 [00:00<00:00, 68535.63it/s] 32%|███▏      | 28361/88651 [00:00<00:00, 63138.49it/s] 44%|████▍     | 38981/88651 [00:00<00:00, 71880.32it/s] 56%|█████▌    | 49633/88651 [00:00<00:00, 77597.63it/s] 69%|██████▊   | 60848/88651 [00:00<00:00, 84683.32it/s] 78%|███████▊  | 69314/88651 [00:00<00:00, 77125.32it/s] 90%|█████████ | 80136/88651 [00:00<00:00, 84400.40it/s]100%|██████████| 88651/88651 [00:01<00:00, 80823.62it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9422/88651 [00:00<00:00, 94219.64it/s] 20%|██        | 18109/88651 [00:00<00:00, 91885.97it/s] 31%|███       | 27634/88651 [00:00<00:00, 92869.53it/s] 42%|████▏     | 37049/88651 [00:00<00:00, 93248.90it/s] 51%|█████     | 45266/88651 [00:00<00:00, 89525.36it/s] 61%|██████    | 54137/88651 [00:00<00:00, 88145.90it/s] 70%|██████▉   | 61875/88651 [00:00<00:00, 74048.51it/s] 80%|███████▉  | 70513/88651 [00:00<00:00, 77360.11it/s] 89%|████████▊ | 78640/88651 [00:00<00:00, 77703.83it/s] 97%|█████████▋| 86256/88651 [00:01<00:00, 73902.17it/s]100%|██████████| 88651/88651 [00:01<00:00, 81637.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6993/88651 [00:00<00:01, 69926.73it/s] 15%|█▍        | 13270/88651 [00:00<00:01, 66611.89it/s] 22%|██▏       | 19553/88651 [00:00<00:01, 65429.56it/s] 35%|███▍      | 30890/88651 [00:00<00:00, 73918.83it/s] 42%|████▏     | 37623/88651 [00:00<00:00, 71809.18it/s] 56%|█████▌    | 49772/88651 [00:00<00:00, 81849.69it/s] 66%|██████▌   | 58270/88651 [00:00<00:00, 81724.55it/s] 75%|███████▍  | 66347/88651 [00:00<00:00, 75663.49it/s] 85%|████████▌ | 75715/88651 [00:00<00:00, 79209.81it/s] 96%|█████████▌| 84706/88651 [00:01<00:00, 82141.01it/s]100%|██████████| 88651/88651 [00:01<00:00, 78351.03it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11436/88651 [00:00<00:00, 114356.02it/s] 25%|██▍       | 21735/88651 [00:00<00:00, 106902.60it/s] 30%|███       | 26921/88651 [00:00<00:00, 74995.04it/s]  39%|███▉      | 34886/88651 [00:00<00:00, 76332.04it/s] 48%|████▊     | 42465/88651 [00:00<00:00, 76166.72it/s] 57%|█████▋    | 50110/88651 [00:00<00:00, 76249.60it/s] 64%|██████▍   | 56866/88651 [00:00<00:00, 63871.80it/s] 75%|███████▍  | 66466/88651 [00:00<00:00, 70999.76it/s] 87%|████████▋ | 77421/88651 [00:00<00:00, 79378.25it/s] 97%|█████████▋| 85722/88651 [00:01<00:00, 80301.36it/s]100%|██████████| 88651/88651 [00:01<00:00, 80319.24it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6806/88651 [00:00<00:01, 62718.19it/s] 14%|█▍        | 12761/88651 [00:00<00:01, 61351.88it/s] 21%|██▏       | 18866/88651 [00:00<00:01, 61259.74it/s] 28%|██▊       | 24629/88651 [00:00<00:01, 59993.67it/s] 35%|███▍      | 30854/88651 [00:00<00:00, 59939.62it/s] 42%|████▏     | 37120/88651 [00:00<00:00, 60730.58it/s] 48%|████▊     | 42908/88651 [00:00<00:00, 59836.46it/s] 55%|█████▌    | 48988/88651 [00:00<00:00, 60122.02it/s] 62%|██████▏   | 55365/88651 [00:00<00:00, 61170.71it/s] 71%|███████   | 62717/88651 [00:01<00:00, 64415.66it/s] 83%|████████▎ | 73707/88651 [00:01<00:00, 73546.93it/s] 96%|█████████▌| 85116/88651 [00:01<00:00, 82322.64it/s]100%|██████████| 88651/88651 [00:01<00:00, 71116.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6341/88651 [00:00<00:01, 63051.83it/s] 17%|█▋        | 15442/88651 [00:00<00:01, 69451.74it/s] 30%|███       | 26886/88651 [00:00<00:00, 78271.26it/s] 42%|████▏     | 37103/88651 [00:00<00:00, 84177.37it/s] 50%|█████     | 44491/88651 [00:00<00:00, 78371.68it/s] 58%|█████▊    | 51688/88651 [00:00<00:00, 64116.55it/s] 72%|███████▏  | 63688/88651 [00:00<00:00, 74528.33it/s] 81%|████████  | 71771/88651 [00:00<00:00, 75811.35it/s] 92%|█████████▏| 81892/88651 [00:00<00:00, 81982.78it/s]100%|██████████| 88651/88651 [00:01<00:00, 85918.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 11078/88651 [00:00<00:00, 110777.73it/s] 25%|██▌       | 22196/88651 [00:00<00:00, 110895.21it/s] 32%|███▏      | 28440/88651 [00:00<00:00, 89951.31it/s]  39%|███▊      | 34277/88651 [00:00<00:00, 74908.96it/s] 51%|█████▏    | 45570/88651 [00:00<00:00, 83323.56it/s] 64%|██████▎   | 56396/88651 [00:00<00:00, 89507.92it/s] 77%|███████▋  | 68478/88651 [00:00<00:00, 97051.76it/s] 89%|████████▊ | 78527/88651 [00:00<00:00, 96093.40it/s] 99%|█████████▉| 88005/88651 [00:00<00:00, 81497.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 90538.11it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5931/88651 [00:00<00:01, 59169.41it/s] 12%|█▏        | 10500/88651 [00:00<00:01, 54357.39it/s] 18%|█▊        | 15913/88651 [00:00<00:01, 54287.62it/s] 30%|███       | 26824/88651 [00:00<00:00, 63922.53it/s] 40%|████      | 35568/88651 [00:00<00:00, 69413.49it/s] 48%|████▊     | 42156/88651 [00:00<00:00, 66406.30it/s] 58%|█████▊    | 51062/88651 [00:00<00:00, 71891.88it/s] 68%|██████▊   | 60108/88651 [00:00<00:00, 76608.17it/s] 77%|███████▋  | 68029/88651 [00:00<00:00, 76847.26it/s] 88%|████████▊ | 78042/88651 [00:01<00:00, 82609.75it/s]100%|██████████| 88651/88651 [00:01<00:00, 80592.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7118/88651 [00:00<00:01, 56153.99it/s] 12%|█▏        | 10660/88651 [00:00<00:01, 47765.33it/s] 24%|██▍       | 21171/88651 [00:00<00:01, 57112.79it/s] 33%|███▎      | 29263/88651 [00:00<00:00, 61823.02it/s] 39%|███▉      | 34866/88651 [00:00<00:00, 56490.95it/s] 48%|████▊     | 42392/88651 [00:00<00:00, 60931.93it/s] 58%|█████▊    | 51197/88651 [00:00<00:00, 67134.24it/s] 72%|███████▏  | 63839/88651 [00:00<00:00, 78125.45it/s] 85%|████████▍ | 75214/88651 [00:00<00:00, 86226.06it/s] 97%|█████████▋| 85908/88651 [00:01<00:00, 91545.10it/s]100%|██████████| 88651/88651 [00:01<00:00, 81883.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8180/88651 [00:00<00:01, 79156.62it/s] 14%|█▍        | 12790/88651 [00:00<00:01, 62120.18it/s] 19%|█▊        | 16503/88651 [00:00<00:01, 50677.27it/s] 29%|██▉       | 25765/88651 [00:00<00:01, 57823.94it/s] 34%|███▍      | 30518/88651 [00:00<00:01, 52028.40it/s] 40%|███▉      | 35227/88651 [00:00<00:01, 50441.07it/s] 52%|█████▏    | 45982/88651 [00:00<00:00, 59998.78it/s] 59%|█████▉    | 52448/88651 [00:00<00:00, 57241.46it/s] 66%|██████▌   | 58525/88651 [00:00<00:00, 55575.68it/s] 73%|███████▎  | 65116/88651 [00:01<00:00, 58318.15it/s] 81%|████████  | 72023/88651 [00:01<00:00, 60483.60it/s] 93%|█████████▎| 82087/88651 [00:01<00:00, 68707.90it/s]100%|██████████| 88651/88651 [00:01<00:00, 65926.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6825/88651 [00:00<00:01, 68249.58it/s] 12%|█▏        | 10899/88651 [00:00<00:01, 56751.74it/s] 18%|█▊        | 15957/88651 [00:00<00:01, 54652.81it/s] 25%|██▍       | 21975/88651 [00:00<00:01, 56200.87it/s] 31%|███▏      | 27810/88651 [00:00<00:01, 56638.21it/s] 38%|███▊      | 34053/88651 [00:00<00:00, 57700.36it/s] 45%|████▌     | 40281/88651 [00:00<00:00, 59001.08it/s] 52%|█████▏    | 46227/88651 [00:00<00:00, 58946.22it/s] 59%|█████▉    | 52459/88651 [00:00<00:00, 59919.14it/s] 66%|██████▌   | 58433/88651 [00:01<00:00, 59863.80it/s] 72%|███████▏  | 64255/88651 [00:01<00:00, 58803.52it/s] 80%|███████▉  | 70642/88651 [00:01<00:00, 60236.66it/s] 86%|████████▋ | 76597/88651 [00:01<00:00, 57916.83it/s] 94%|█████████▍| 83477/88651 [00:01<00:00, 60801.11it/s]100%|██████████| 88651/88651 [00:01<00:00, 59751.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5594/88651 [00:00<00:01, 52259.13it/s] 15%|█▌        | 13305/88651 [00:00<00:01, 57852.43it/s] 25%|██▌       | 22457/88651 [00:00<00:01, 64289.74it/s] 37%|███▋      | 32413/88651 [00:00<00:00, 71934.73it/s] 50%|█████     | 44339/88651 [00:00<00:00, 81654.71it/s] 62%|██████▏   | 54771/88651 [00:00<00:00, 87346.83it/s] 72%|███████▏  | 63581/88651 [00:00<00:00, 85233.99it/s] 81%|████████▏ | 72169/88651 [00:00<00:00, 74414.54it/s] 91%|█████████▏| 80910/88651 [00:00<00:00, 77888.32it/s]100%|██████████| 88651/88651 [00:01<00:00, 80891.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6673/88651 [00:00<00:01, 66725.93it/s] 14%|█▍        | 12285/88651 [00:00<00:01, 63144.31it/s] 21%|██        | 18460/88651 [00:00<00:01, 61593.55it/s] 32%|███▏      | 28022/88651 [00:00<00:00, 68953.79it/s] 45%|████▌     | 40023/88651 [00:00<00:00, 79041.02it/s] 58%|█████▊    | 51589/88651 [00:00<00:00, 87336.01it/s] 68%|██████▊   | 60515/88651 [00:00<00:00, 87903.66it/s] 78%|███████▊  | 69308/88651 [00:00<00:00, 86300.73it/s] 88%|████████▊ | 77947/88651 [00:00<00:00, 77212.09it/s] 98%|█████████▊| 87211/88651 [00:01<00:00, 81270.72it/s]100%|██████████| 88651/88651 [00:01<00:00, 83260.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11614/88651 [00:00<00:00, 112668.17it/s] 22%|██▏       | 19099/88651 [00:00<00:00, 97836.10it/s]  35%|███▍      | 30935/88651 [00:00<00:00, 103204.33it/s] 47%|████▋     | 41482/88651 [00:00<00:00, 103872.75it/s] 59%|█████▉    | 52125/88651 [00:00<00:00, 104626.59it/s] 69%|██████▊   | 60855/88651 [00:00<00:00, 97062.80it/s]  82%|████████▏ | 72851/88651 [00:00<00:00, 102956.48it/s] 94%|█████████▎| 83057/88651 [00:00<00:00, 102683.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 90154.21it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10572/88651 [00:00<00:00, 105714.56it/s] 25%|██▍       | 22105/88651 [00:00<00:00, 108426.11it/s] 39%|███▊      | 34168/88651 [00:00<00:00, 111818.29it/s] 52%|█████▏    | 46299/88651 [00:00<00:00, 114505.58it/s] 66%|██████▌   | 58447/88651 [00:00<00:00, 116509.42it/s] 80%|███████▉  | 70581/88651 [00:00<00:00, 117917.02it/s] 92%|█████████▏| 81161/88651 [00:00<00:00, 90695.36it/s] 100%|██████████| 88651/88651 [00:00<00:00, 105294.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8058/88651 [00:00<00:01, 72398.00it/s] 17%|█▋        | 15199/88651 [00:00<00:01, 71907.35it/s] 26%|██▌       | 22765/88651 [00:00<00:00, 72992.48it/s] 36%|███▌      | 31603/88651 [00:00<00:00, 77013.52it/s] 49%|████▉     | 43555/88651 [00:00<00:00, 86210.87it/s] 63%|██████▎   | 55567/88651 [00:00<00:00, 94185.87it/s] 74%|███████▎  | 65321/88651 [00:00<00:00, 95165.73it/s] 85%|████████▌ | 75681/88651 [00:00<00:00, 97547.97it/s] 96%|█████████▌| 85280/88651 [00:00<00:00, 80784.11it/s]100%|██████████| 88651/88651 [00:01<00:00, 87162.92it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11321/88651 [00:00<00:00, 113203.09it/s] 22%|██▏       | 19165/88651 [00:00<00:00, 93045.14it/s]  27%|██▋       | 24309/88651 [00:00<00:00, 71161.31it/s] 34%|███▍      | 30444/88651 [00:00<00:00, 67902.39it/s] 44%|████▍     | 38882/88651 [00:00<00:00, 71404.09it/s] 51%|█████     | 44943/88651 [00:00<00:00, 67782.08it/s] 58%|█████▊    | 51008/88651 [00:00<00:00, 65471.14it/s] 65%|██████▍   | 57449/88651 [00:00<00:00, 62853.54it/s] 72%|███████▏  | 63881/88651 [00:00<00:00, 63285.36it/s] 79%|███████▉  | 69948/88651 [00:01<00:00, 62279.27it/s] 86%|████████▌ | 76001/88651 [00:01<00:00, 59741.15it/s] 96%|█████████▋| 85539/88651 [00:01<00:00, 67283.17it/s]100%|██████████| 88651/88651 [00:01<00:00, 68945.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6815/88651 [00:00<00:01, 68144.87it/s] 21%|██        | 18828/88651 [00:00<00:00, 78310.38it/s] 34%|███▍      | 30345/88651 [00:00<00:00, 86626.83it/s] 46%|████▌     | 40414/88651 [00:00<00:00, 90413.43it/s] 58%|█████▊    | 51624/88651 [00:00<00:00, 95983.22it/s] 68%|██████▊   | 60522/88651 [00:00<00:00, 61584.45it/s] 79%|███████▉  | 70036/88651 [00:00<00:00, 67214.51it/s] 88%|████████▊ | 77664/88651 [00:01<00:00, 56830.72it/s] 96%|█████████▌| 84730/88651 [00:01<00:00, 60374.97it/s]100%|██████████| 88651/88651 [00:01<00:00, 74357.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11807/88651 [00:00<00:00, 118063.92it/s] 27%|██▋       | 23682/88651 [00:00<00:00, 118266.50it/s] 40%|████      | 35648/88651 [00:00<00:00, 118680.41it/s] 49%|████▉     | 43467/88651 [00:00<00:00, 98135.05it/s]  58%|█████▊    | 51164/88651 [00:00<00:00, 90654.38it/s] 72%|███████▏  | 63617/88651 [00:00<00:00, 98709.90it/s] 85%|████████▌ | 75385/88651 [00:00<00:00, 103725.10it/s] 97%|█████████▋| 85783/88651 [00:00<00:00, 100644.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 100394.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5385/88651 [00:00<00:01, 53845.69it/s] 10%|█         | 9096/88651 [00:00<00:01, 47428.71it/s] 16%|█▌        | 14230/88651 [00:00<00:01, 47675.83it/s] 23%|██▎       | 20498/88651 [00:00<00:01, 51363.86it/s] 30%|██▉       | 26305/88651 [00:00<00:01, 52997.11it/s] 35%|███▍      | 30818/88651 [00:00<00:01, 43422.17it/s] 40%|███▉      | 35176/88651 [00:00<00:01, 43469.13it/s] 44%|████▍     | 39337/88651 [00:00<00:01, 41566.83it/s] 51%|█████     | 45152/88651 [00:00<00:00, 45455.19it/s] 58%|█████▊    | 51190/88651 [00:01<00:00, 49095.45it/s] 64%|██████▍   | 56581/88651 [00:01<00:00, 50446.85it/s] 71%|███████   | 63101/88651 [00:01<00:00, 54119.78it/s] 81%|████████▏ | 72063/88651 [00:01<00:00, 61418.00it/s] 91%|█████████▏| 81093/88651 [00:01<00:00, 67935.61it/s]100%|██████████| 88651/88651 [00:01<00:00, 56711.39it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 8983/88651 [00:00<00:00, 89825.59it/s] 22%|██▏       | 19824/88651 [00:00<00:00, 92708.79it/s] 28%|██▊       | 25143/88651 [00:00<00:00, 75641.47it/s] 39%|███▊      | 34224/88651 [00:00<00:00, 79631.36it/s] 47%|████▋     | 42080/88651 [00:00<00:00, 78357.98it/s] 55%|█████▍    | 48710/88651 [00:00<00:00, 69215.84it/s] 68%|██████▊   | 60660/88651 [00:00<00:00, 79214.86it/s] 77%|███████▋  | 68691/88651 [00:00<00:00, 79538.42it/s] 91%|█████████ | 80597/88651 [00:00<00:00, 88333.57it/s]100%|██████████| 88651/88651 [00:01<00:00, 83259.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10510/88651 [00:00<00:00, 105097.59it/s] 22%|██▏       | 19459/88651 [00:00<00:00, 99871.82it/s]  28%|██▊       | 25060/88651 [00:00<00:00, 80871.01it/s] 34%|███▍      | 30165/88651 [00:00<00:00, 65785.20it/s] 40%|███▉      | 35443/88651 [00:00<00:00, 60190.55it/s] 47%|████▋     | 41952/88651 [00:00<00:00, 60589.16it/s] 53%|█████▎    | 47278/88651 [00:00<00:00, 52220.27it/s] 60%|██████    | 53567/88651 [00:00<00:00, 55020.16it/s] 68%|██████▊   | 59934/88651 [00:00<00:00, 57357.65it/s] 76%|███████▌  | 67148/88651 [00:01<00:00, 60600.66it/s] 83%|████████▎ | 73189/88651 [00:01<00:00, 59865.23it/s] 97%|█████████▋| 85869/88651 [00:01<00:00, 71129.16it/s]100%|██████████| 88651/88651 [00:01<00:00, 69247.12it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11127/88651 [00:00<00:00, 111264.27it/s] 26%|██▌       | 23112/88651 [00:00<00:00, 113706.25it/s] 41%|████      | 36431/88651 [00:00<00:00, 118923.49it/s] 50%|█████     | 44579/88651 [00:00<00:00, 91863.69it/s]  67%|██████▋   | 59002/88651 [00:00<00:00, 103092.26it/s] 84%|████████▎ | 74042/88651 [00:00<00:00, 113832.99it/s] 96%|█████████▌| 85260/88651 [00:00<00:00, 105866.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 112503.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16280/88651 [00:00<00:00, 162793.95it/s] 35%|███▍      | 30684/88651 [00:00<00:00, 156672.61it/s] 49%|████▉     | 43817/88651 [00:00<00:00, 145140.56it/s] 60%|█████▉    | 52951/88651 [00:00<00:00, 120906.75it/s] 76%|███████▋  | 67609/88651 [00:00<00:00, 127611.54it/s] 90%|████████▉ | 79565/88651 [00:00<00:00, 125081.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 123927.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11547/88651 [00:00<00:00, 115468.73it/s] 17%|█▋        | 15096/88651 [00:00<00:01, 66562.47it/s]  29%|██▉       | 25864/88651 [00:00<00:00, 75172.15it/s] 37%|███▋      | 33093/88651 [00:00<00:00, 74255.30it/s] 49%|████▉     | 43706/88651 [00:00<00:00, 81607.49it/s] 61%|██████▏   | 54503/88651 [00:00<00:00, 88055.44it/s] 73%|███████▎  | 64733/88651 [00:00<00:00, 91893.56it/s] 88%|████████▊ | 77979/88651 [00:00<00:00, 101189.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 100118.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3645/88651 [00:00<00:02, 36448.99it/s] 17%|█▋        | 14996/88651 [00:00<00:01, 45770.99it/s] 30%|███       | 26697/88651 [00:00<00:01, 55998.50it/s] 46%|████▌     | 40365/88651 [00:00<00:00, 68048.81it/s] 59%|█████▉    | 52150/88651 [00:00<00:00, 77926.93it/s] 73%|███████▎  | 64490/88651 [00:00<00:00, 87611.44it/s] 87%|████████▋ | 77005/88651 [00:00<00:00, 96273.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 111471.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5090/88651 [00:00<00:01, 48951.02it/s] 12%|█▏        | 10759/88651 [00:00<00:01, 51041.29it/s] 19%|█▉        | 17026/88651 [00:00<00:01, 51006.65it/s] 26%|██▌       | 23216/88651 [00:00<00:01, 53717.45it/s] 33%|███▎      | 28988/88651 [00:00<00:01, 54857.85it/s] 45%|████▌     | 40255/88651 [00:00<00:00, 64838.04it/s] 53%|█████▎    | 46928/88651 [00:00<00:00, 59643.82it/s] 63%|██████▎   | 55755/88651 [00:00<00:00, 66071.18it/s] 74%|███████▍  | 65496/88651 [00:00<00:00, 72390.50it/s] 83%|████████▎ | 73173/88651 [00:01<00:00, 68662.49it/s] 96%|█████████▌| 84926/88651 [00:01<00:00, 78447.19it/s]100%|██████████| 88651/88651 [00:01<00:00, 72291.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7711/88651 [00:00<00:01, 77104.74it/s] 12%|█▏        | 10448/88651 [00:00<00:01, 49901.49it/s] 17%|█▋        | 15098/88651 [00:00<00:01, 48829.41it/s] 26%|██▌       | 22857/88651 [00:00<00:01, 54938.42it/s] 31%|███       | 27463/88651 [00:00<00:01, 48194.01it/s] 43%|████▎     | 38012/88651 [00:00<00:00, 57574.93it/s] 50%|█████     | 44665/88651 [00:00<00:00, 57392.49it/s] 57%|█████▋    | 50684/88651 [00:00<00:00, 52807.42it/s] 68%|██████▊   | 60086/88651 [00:00<00:00, 60123.06it/s] 75%|███████▌  | 66635/88651 [00:01<00:00, 48668.76it/s] 83%|████████▎ | 73983/88651 [00:01<00:00, 54153.60it/s] 96%|█████████▌| 84800/88651 [00:01<00:00, 63694.90it/s]100%|██████████| 88651/88651 [00:01<00:00, 62889.39it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13175/88651 [00:00<00:00, 131744.47it/s] 28%|██▊       | 25084/88651 [00:00<00:00, 127673.44it/s] 38%|███▊      | 34005/88651 [00:00<00:00, 111510.67it/s] 51%|█████     | 44958/88651 [00:00<00:00, 110906.61it/s] 62%|██████▏   | 55230/88651 [00:00<00:00, 108313.98it/s] 75%|███████▌  | 66763/88651 [00:00<00:00, 110325.94it/s] 87%|████████▋ | 77302/88651 [00:00<00:00, 107814.71it/s] 98%|█████████▊| 87118/88651 [00:00<00:00, 84327.52it/s] 100%|██████████| 88651/88651 [00:00<00:00, 99032.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11325/88651 [00:00<00:00, 113247.68it/s] 26%|██▌       | 23160/88651 [00:00<00:00, 114730.02it/s] 39%|███▉      | 35012/88651 [00:00<00:00, 115838.75it/s] 51%|█████▏    | 45646/88651 [00:00<00:00, 112814.09it/s] 61%|██████    | 54230/88651 [00:00<00:00, 99481.39it/s]  74%|███████▍  | 65996/88651 [00:00<00:00, 104316.46it/s] 87%|████████▋ | 77507/88651 [00:00<00:00, 107333.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 110286.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11881/88651 [00:00<00:00, 118806.43it/s] 25%|██▌       | 22403/88651 [00:00<00:00, 113422.49it/s] 32%|███▏      | 27976/88651 [00:00<00:00, 83780.24it/s]  44%|████▍     | 39273/88651 [00:00<00:00, 90818.57it/s] 57%|█████▋    | 50844/88651 [00:00<00:00, 97082.98it/s] 71%|███████   | 62512/88651 [00:00<00:00, 102232.96it/s] 84%|████████▍ | 74341/88651 [00:00<00:00, 106572.05it/s] 96%|█████████▋| 85484/88651 [00:00<00:00, 107983.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 97779.45it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5914/88651 [00:00<00:01, 59136.25it/s] 11%|█         | 9762/88651 [00:00<00:01, 50933.77it/s] 23%|██▎       | 20274/88651 [00:00<00:01, 60250.15it/s] 35%|███▌      | 31354/88651 [00:00<00:00, 69803.44it/s] 48%|████▊     | 42659/88651 [00:00<00:00, 78851.75it/s] 59%|█████▊    | 52035/88651 [00:00<00:00, 81628.49it/s] 68%|██████▊   | 60363/88651 [00:00<00:00, 72957.65it/s] 81%|████████  | 71635/88651 [00:00<00:00, 81591.82it/s] 93%|█████████▎| 82693/88651 [00:00<00:00, 88554.43it/s]100%|██████████| 88651/88651 [00:01<00:00, 88424.75it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5652/88651 [00:00<00:01, 52969.55it/s] 12%|█▏        | 10990/88651 [00:00<00:01, 53091.62it/s] 25%|██▍       | 21919/88651 [00:00<00:01, 62774.55it/s] 38%|███▊      | 33437/88651 [00:00<00:00, 72696.15it/s] 50%|████▉     | 44296/88651 [00:00<00:00, 80697.64it/s] 59%|█████▉    | 52510/88651 [00:00<00:00, 66519.32it/s] 68%|██████▊   | 60650/88651 [00:00<00:00, 68860.90it/s] 77%|███████▋  | 67916/88651 [00:00<00:00, 68313.72it/s] 89%|████████▉ | 79094/88651 [00:00<00:00, 77335.01it/s]100%|██████████| 88651/88651 [00:01<00:00, 82057.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11541/88651 [00:00<00:00, 115404.33it/s] 25%|██▍       | 22051/88651 [00:00<00:00, 112106.46it/s] 37%|███▋      | 33068/88651 [00:00<00:00, 111517.15it/s] 49%|████▉     | 43693/88651 [00:00<00:00, 109880.98it/s] 62%|██████▏   | 54733/88651 [00:00<00:00, 110034.32it/s] 75%|███████▍  | 66091/88651 [00:00<00:00, 111071.87it/s] 88%|████████▊ | 77705/88651 [00:00<00:00, 112543.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 111232.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11471/88651 [00:00<00:00, 114703.55it/s] 33%|███▎      | 28842/88651 [00:00<00:00, 127717.42it/s] 53%|█████▎    | 47146/88651 [00:00<00:00, 140452.25it/s] 74%|███████▍  | 65982/88651 [00:00<00:00, 152052.56it/s] 96%|█████████▌| 85134/88651 [00:00<00:00, 162070.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 170617.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13327/88651 [00:00<00:00, 133264.09it/s] 33%|███▎      | 29468/88651 [00:00<00:00, 140619.02it/s] 54%|█████▎    | 47574/88651 [00:00<00:00, 150716.62it/s] 74%|███████▍  | 65899/88651 [00:00<00:00, 159195.12it/s] 94%|█████████▍| 83270/88651 [00:00<00:00, 163288.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 167320.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13395/88651 [00:00<00:00, 133944.38it/s] 35%|███▌      | 31433/88651 [00:00<00:00, 145153.99it/s] 55%|█████▌    | 49085/88651 [00:00<00:00, 153324.26it/s] 68%|██████▊   | 60138/88651 [00:00<00:00, 113614.75it/s] 87%|████████▋ | 77051/88651 [00:00<00:00, 126023.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 128074.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12077/88651 [00:00<00:00, 120767.52it/s] 32%|███▏      | 28030/88651 [00:00<00:00, 130261.76it/s] 50%|█████     | 44752/88651 [00:00<00:00, 139509.44it/s] 65%|██████▍   | 57446/88651 [00:00<00:00, 135483.58it/s] 78%|███████▊  | 68969/88651 [00:00<00:00, 128694.95it/s] 90%|█████████ | 80061/88651 [00:00<00:00, 122518.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 134801.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7738/88651 [00:00<00:01, 76730.09it/s] 24%|██▎       | 20983/88651 [00:00<00:00, 87811.57it/s] 41%|████      | 36054/88651 [00:00<00:00, 100378.38it/s] 61%|██████    | 54061/88651 [00:00<00:00, 115744.63it/s] 81%|████████▏ | 72066/88651 [00:00<00:00, 129634.18it/s]100%|██████████| 88651/88651 [00:00<00:00, 150172.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18821/88651 [00:00<00:00, 188205.24it/s] 42%|████▏     | 37163/88651 [00:00<00:00, 186743.58it/s] 62%|██████▏   | 55372/88651 [00:00<00:00, 185320.88it/s] 82%|████████▏ | 72345/88651 [00:00<00:00, 180348.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 178231.59it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14255/88651 [00:00<00:00, 142545.38it/s] 36%|███▌      | 31957/88651 [00:00<00:00, 151390.21it/s] 56%|█████▋    | 49903/88651 [00:00<00:00, 158841.98it/s] 74%|███████▎  | 65229/88651 [00:00<00:00, 157122.90it/s] 88%|████████▊ | 77665/88651 [00:00<00:00, 144665.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 136379.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14220/88651 [00:00<00:00, 142195.05it/s] 22%|██▏       | 19720/88651 [00:00<00:00, 83350.87it/s]  36%|███▌      | 31917/88651 [00:00<00:00, 92098.90it/s] 50%|█████     | 44457/88651 [00:00<00:00, 100070.18it/s] 64%|██████▍   | 57116/88651 [00:00<00:00, 106780.56it/s] 75%|███████▌  | 66801/88651 [00:00<00:00, 87747.60it/s]  90%|████████▉ | 79737/88651 [00:00<00:00, 97118.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 102771.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12146/88651 [00:00<00:00, 121455.19it/s] 20%|██        | 17917/88651 [00:00<00:00, 87560.08it/s]  29%|██▉       | 25558/88651 [00:00<00:00, 83885.82it/s] 41%|████      | 36503/88651 [00:00<00:00, 90204.89it/s] 49%|████▉     | 43677/88651 [00:00<00:00, 83737.41it/s] 65%|██████▍   | 57261/88651 [00:00<00:00, 94624.89it/s] 83%|████████▎ | 73674/88651 [00:00<00:00, 108394.94it/s] 98%|█████████▊| 87137/88651 [00:00<00:00, 115125.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 107351.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12379/88651 [00:00<00:00, 116619.92it/s] 18%|█▊        | 15995/88651 [00:00<00:01, 69932.56it/s]  30%|███       | 26673/88651 [00:00<00:00, 78007.49it/s] 44%|████▍     | 39123/88651 [00:00<00:00, 87847.72it/s] 62%|██████▏   | 54541/88651 [00:00<00:00, 100865.72it/s] 83%|████████▎ | 73456/88651 [00:00<00:00, 117288.42it/s] 99%|█████████▊| 87462/88651 [00:00<00:00, 123300.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 121012.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18294/88651 [00:00<00:00, 182935.38it/s] 41%|████▏     | 36745/88651 [00:00<00:00, 183404.73it/s] 62%|██████▏   | 54985/88651 [00:00<00:00, 183101.41it/s] 84%|████████▍ | 74691/88651 [00:00<00:00, 187074.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 181441.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15515/88651 [00:00<00:00, 155144.97it/s] 35%|███▍      | 30979/88651 [00:00<00:00, 154990.95it/s] 55%|█████▍    | 48651/88651 [00:00<00:00, 160923.49it/s] 74%|███████▍  | 65876/88651 [00:00<00:00, 164160.36it/s] 95%|█████████▍| 84095/88651 [00:00<00:00, 169180.45it/s]100%|██████████| 88651/88651 [00:00<00:00, 168668.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18500/88651 [00:00<00:00, 184991.36it/s] 42%|████▏     | 36976/88651 [00:00<00:00, 184920.48it/s] 63%|██████▎   | 55925/88651 [00:00<00:00, 186265.33it/s] 84%|████████▍ | 74496/88651 [00:00<00:00, 186097.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 187061.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18325/88651 [00:00<00:00, 183241.00it/s] 41%|████      | 36528/88651 [00:00<00:00, 182873.83it/s] 63%|██████▎   | 55766/88651 [00:00<00:00, 185624.07it/s] 84%|████████▍ | 74683/88651 [00:00<00:00, 186672.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 184774.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19780/88651 [00:00<00:00, 197794.06it/s] 44%|████▎     | 38605/88651 [00:00<00:00, 194829.80it/s] 64%|██████▍   | 57063/88651 [00:00<00:00, 191634.36it/s] 87%|████████▋ | 77047/88651 [00:00<00:00, 194023.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 195096.75it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19669/88651 [00:00<00:00, 196687.37it/s] 45%|████▍     | 39453/88651 [00:00<00:00, 197030.26it/s] 56%|█████▌    | 49519/88651 [00:00<00:00, 128370.51it/s] 75%|███████▍  | 66344/88651 [00:00<00:00, 138196.69it/s] 97%|█████████▋| 86076/88651 [00:00<00:00, 151845.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 159515.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19180/88651 [00:00<00:00, 191795.15it/s] 44%|████▍     | 38889/88651 [00:00<00:00, 193350.43it/s] 66%|██████▋   | 58816/88651 [00:00<00:00, 195087.73it/s] 89%|████████▉ | 78932/88651 [00:00<00:00, 196870.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 197158.68it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14722/88651 [00:00<00:00, 147217.68it/s] 33%|███▎      | 29449/88651 [00:00<00:00, 147230.47it/s] 50%|████▉     | 44319/88651 [00:00<00:00, 147667.47it/s] 67%|██████▋   | 59217/88651 [00:00<00:00, 148057.15it/s] 89%|████████▉ | 79311/88651 [00:00<00:00, 160747.72it/s]100%|██████████| 88651/88651 [00:00<00:00, 163769.11it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12799/88651 [00:00<00:00, 127981.58it/s] 34%|███▍      | 30555/88651 [00:00<00:00, 139680.92it/s] 48%|████▊     | 42226/88651 [00:00<00:00, 131890.30it/s] 64%|██████▍   | 56674/88651 [00:00<00:00, 135429.87it/s] 82%|████████▏ | 73120/88651 [00:00<00:00, 143000.53it/s] 97%|█████████▋| 85552/88651 [00:00<00:00, 134975.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 142969.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13146/88651 [00:00<00:00, 131455.42it/s] 30%|███       | 27006/88651 [00:00<00:00, 133515.22it/s] 40%|████      | 35727/88651 [00:00<00:00, 115168.14it/s] 51%|█████▏    | 45442/88651 [00:00<00:00, 109095.59it/s] 60%|██████    | 53578/88651 [00:00<00:00, 82558.24it/s]  70%|███████   | 62064/88651 [00:00<00:00, 81185.58it/s] 86%|████████▌ | 76443/88651 [00:00<00:00, 93382.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 106099.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7546/88651 [00:00<00:01, 72089.93it/s] 23%|██▎       | 20713/88651 [00:00<00:00, 83412.14it/s] 37%|███▋      | 32862/88651 [00:00<00:00, 92068.11it/s] 52%|█████▏    | 45872/88651 [00:00<00:00, 100916.68it/s] 62%|██████▏   | 55004/88651 [00:00<00:00, 91000.62it/s]  72%|███████▏  | 63617/88651 [00:00<00:00, 75002.48it/s] 80%|████████  | 71242/88651 [00:00<00:00, 65223.35it/s] 89%|████████▉ | 78980/88651 [00:00<00:00, 68448.89it/s] 99%|█████████▊| 87493/88651 [00:01<00:00, 72723.91it/s]100%|██████████| 88651/88651 [00:01<00:00, 84487.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6529/88651 [00:00<00:01, 65288.82it/s] 25%|██▍       | 21832/88651 [00:00<00:00, 78851.14it/s] 32%|███▏      | 28565/88651 [00:00<00:00, 74389.43it/s] 42%|████▏     | 37277/88651 [00:00<00:00, 75403.27it/s] 50%|████▉     | 43915/88651 [00:00<00:00, 54676.28it/s] 60%|██████    | 53576/88651 [00:00<00:00, 62861.80it/s] 81%|████████▏ | 72247/88651 [00:00<00:00, 78478.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 98410.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12639/88651 [00:00<00:00, 126383.19it/s] 28%|██▊       | 24644/88651 [00:00<00:00, 124410.97it/s] 47%|████▋     | 41997/88651 [00:00<00:00, 135955.87it/s] 68%|██████▊   | 60371/88651 [00:00<00:00, 147459.22it/s] 89%|████████▊ | 78664/88651 [00:00<00:00, 156566.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 160343.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17304/88651 [00:00<00:00, 173032.74it/s] 29%|██▉       | 26137/88651 [00:00<00:00, 134374.70it/s] 42%|████▏     | 36937/88651 [00:00<00:00, 125200.29it/s] 63%|██████▎   | 56093/88651 [00:00<00:00, 139720.25it/s] 86%|████████▌ | 76046/88651 [00:00<00:00, 153525.18it/s]100%|██████████| 88651/88651 [00:00<00:00, 156522.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14275/88651 [00:00<00:00, 142747.07it/s] 33%|███▎      | 29220/88651 [00:00<00:00, 143604.77it/s] 49%|████▉     | 43863/88651 [00:00<00:00, 144440.66it/s] 67%|██████▋   | 59074/88651 [00:00<00:00, 146656.63it/s] 84%|████████▍ | 74420/88651 [00:00<00:00, 148631.43it/s]100%|██████████| 88651/88651 [00:00<00:00, 152494.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17366/88651 [00:00<00:00, 173655.61it/s] 40%|████      | 35463/88651 [00:00<00:00, 175784.93it/s] 61%|██████    | 53804/88651 [00:00<00:00, 178004.35it/s] 80%|████████  | 71099/88651 [00:00<00:00, 176452.84it/s] 95%|█████████▌| 84586/88651 [00:00<00:00, 158402.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 167986.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14506/88651 [00:00<00:00, 145053.57it/s] 38%|███▊      | 33532/88651 [00:00<00:00, 156186.39it/s] 59%|█████▊    | 52057/88651 [00:00<00:00, 163898.70it/s] 80%|███████▉  | 70498/88651 [00:00<00:00, 169556.17it/s]100%|██████████| 88651/88651 [00:00<00:00, 180787.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14214/88651 [00:00<00:00, 142139.46it/s] 33%|███▎      | 29500/88651 [00:00<00:00, 145192.70it/s] 54%|█████▍    | 47694/88651 [00:00<00:00, 154557.49it/s] 74%|███████▍  | 65836/88651 [00:00<00:00, 161741.77it/s] 95%|█████████▌| 84350/88651 [00:00<00:00, 168114.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 169697.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19672/88651 [00:00<00:00, 196716.44it/s] 44%|████▍     | 38838/88651 [00:00<00:00, 195168.78it/s] 67%|██████▋   | 59320/88651 [00:00<00:00, 197965.28it/s] 89%|████████▉ | 79151/88651 [00:00<00:00, 198066.22it/s]100%|██████████| 88651/88651 [00:00<00:00, 198113.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19320/88651 [00:00<00:00, 193198.80it/s] 45%|████▍     | 39496/88651 [00:00<00:00, 195686.69it/s] 67%|██████▋   | 59039/88651 [00:00<00:00, 195608.55it/s] 84%|████████▍ | 74429/88651 [00:00<00:00, 180895.78it/s]100%|██████████| 88651/88651 [00:00<00:00, 179154.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20517/88651 [00:00<00:00, 205168.24it/s] 47%|████▋     | 41761/88651 [00:00<00:00, 207294.55it/s] 70%|███████   | 62305/88651 [00:00<00:00, 206731.17it/s] 94%|█████████▍| 83170/88651 [00:00<00:00, 207300.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 206319.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▎       | 20868/88651 [00:00<00:00, 208677.71it/s] 39%|███▊      | 34239/88651 [00:00<00:00, 178331.66it/s] 55%|█████▌    | 49181/88651 [00:00<00:00, 167650.68it/s] 77%|███████▋  | 68094/88651 [00:00<00:00, 173563.50it/s] 98%|█████████▊| 86899/88651 [00:00<00:00, 177667.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 173253.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12607/88651 [00:00<00:00, 126063.81it/s] 31%|███       | 27107/88651 [00:00<00:00, 131201.99it/s] 44%|████▎     | 38709/88651 [00:00<00:00, 126243.83it/s] 60%|█████▉    | 52973/88651 [00:00<00:00, 130751.94it/s] 77%|███████▋  | 68114/88651 [00:00<00:00, 136331.09it/s] 93%|█████████▎| 82463/88651 [00:00<00:00, 138402.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 137150.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12790/88651 [00:00<00:00, 127893.11it/s] 28%|██▊       | 24941/88651 [00:00<00:00, 125908.70it/s] 42%|████▏     | 37346/88651 [00:00<00:00, 125345.13it/s] 62%|██████▏   | 54555/88651 [00:00<00:00, 136461.51it/s] 74%|███████▍  | 65425/88651 [00:00<00:00, 123523.48it/s] 86%|████████▌ | 76068/88651 [00:00<00:00, 115161.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 124866.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8776/88651 [00:00<00:00, 87756.95it/s] 20%|██        | 17781/88651 [00:00<00:00, 87001.20it/s] 25%|██▌       | 22183/88651 [00:00<00:01, 60769.00it/s] 40%|███▉      | 35267/88651 [00:00<00:00, 72401.19it/s] 58%|█████▊    | 51118/88651 [00:00<00:00, 86497.64it/s] 80%|███████▉  | 70533/88651 [00:00<00:00, 103756.23it/s] 99%|█████████▉| 87694/88651 [00:00<00:00, 117719.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 120281.75it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13812/88651 [00:00<00:00, 137899.19it/s] 20%|██        | 17949/88651 [00:00<00:00, 79920.10it/s]  27%|██▋       | 23995/88651 [00:00<00:00, 72882.07it/s] 33%|███▎      | 29115/88651 [00:00<00:00, 64664.76it/s] 46%|████▌     | 40670/88651 [00:00<00:00, 74359.82it/s] 65%|██████▍   | 57549/88651 [00:00<00:00, 89356.89it/s] 86%|████████▌ | 75932/88651 [00:00<00:00, 105644.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 113865.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11557/88651 [00:00<00:00, 115567.35it/s] 35%|███▍      | 30757/88651 [00:00<00:00, 131240.19it/s] 57%|█████▋    | 50600/88651 [00:00<00:00, 146079.11it/s] 79%|███████▉  | 70354/88651 [00:00<00:00, 158462.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 178573.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14579/88651 [00:00<00:00, 145784.58it/s] 33%|███▎      | 29248/88651 [00:00<00:00, 146051.53it/s] 51%|█████     | 45229/88651 [00:00<00:00, 149920.45it/s] 68%|██████▊   | 59941/88651 [00:00<00:00, 149067.83it/s] 86%|████████▌ | 75902/88651 [00:00<00:00, 152080.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 147709.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15721/88651 [00:00<00:00, 157201.53it/s] 40%|███▉      | 35078/88651 [00:00<00:00, 166590.14it/s] 61%|██████▏   | 54343/88651 [00:00<00:00, 173635.65it/s] 82%|████████▏ | 73055/88651 [00:00<00:00, 177470.27it/s] 98%|█████████▊| 87177/88651 [00:00<00:00, 157030.62it/s]100%|██████████| 88651/88651 [00:00<00:00, 167569.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11438/88651 [00:00<00:00, 114376.02it/s] 29%|██▉       | 25912/88651 [00:00<00:00, 122056.85it/s] 46%|████▌     | 40339/88651 [00:00<00:00, 127966.68it/s] 62%|██████▏   | 55056/88651 [00:00<00:00, 133178.86it/s] 79%|███████▉  | 70105/88651 [00:00<00:00, 137937.85it/s] 99%|█████████▊| 87384/88651 [00:00<00:00, 146820.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 146060.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17753/88651 [00:00<00:00, 177522.13it/s] 41%|████▏     | 36758/88651 [00:00<00:00, 181101.27it/s] 60%|██████    | 53402/88651 [00:00<00:00, 176436.71it/s] 79%|███████▉  | 70029/88651 [00:00<00:00, 173256.87it/s] 98%|█████████▊| 87089/88651 [00:00<00:00, 172449.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 174210.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17714/88651 [00:00<00:00, 177135.52it/s] 41%|████      | 36199/88651 [00:00<00:00, 179380.08it/s] 62%|██████▏   | 54524/88651 [00:00<00:00, 180521.80it/s] 82%|████████▏ | 73104/88651 [00:00<00:00, 182071.38it/s]100%|██████████| 88651/88651 [00:00<00:00, 185267.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17563/88651 [00:00<00:00, 175628.91it/s] 41%|████      | 36480/88651 [00:00<00:00, 179481.56it/s] 60%|██████    | 53223/88651 [00:00<00:00, 175684.27it/s] 78%|███████▊  | 69141/88651 [00:00<00:00, 170382.57it/s] 97%|█████████▋| 85619/88651 [00:00<00:00, 168659.78it/s]100%|██████████| 88651/88651 [00:00<00:00, 171371.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16107/88651 [00:00<00:00, 161069.77it/s] 38%|███▊      | 33728/88651 [00:00<00:00, 165330.36it/s] 50%|████▉     | 43972/88651 [00:00<00:00, 139610.31it/s] 60%|█████▉    | 53113/88651 [00:00<00:00, 120332.16it/s] 70%|███████   | 62242/88651 [00:00<00:00, 103682.72it/s] 80%|████████  | 70984/88651 [00:00<00:00, 94168.50it/s]  90%|████████▉ | 79430/88651 [00:00<00:00, 88912.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 111854.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17181/88651 [00:00<00:00, 171809.34it/s] 40%|████      | 35825/88651 [00:00<00:00, 175949.53it/s] 61%|██████    | 54092/88651 [00:00<00:00, 177912.85it/s] 82%|████████▏ | 73107/88651 [00:00<00:00, 181413.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 184192.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17862/88651 [00:00<00:00, 178613.78it/s] 41%|████▏     | 36631/88651 [00:00<00:00, 181241.04it/s] 62%|██████▏   | 55254/88651 [00:00<00:00, 182708.97it/s] 83%|████████▎ | 73817/88651 [00:00<00:00, 183573.82it/s] 99%|█████████▉| 87894/88651 [00:00<00:00, 138305.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 154334.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█▏        | 9975/88651 [00:00<00:00, 99747.24it/s] 21%|██▏       | 18928/88651 [00:00<00:00, 96309.40it/s] 43%|████▎     | 37884/88651 [00:00<00:00, 112982.93it/s] 57%|█████▋    | 50743/88651 [00:00<00:00, 117249.82it/s] 73%|███████▎  | 64759/88651 [00:00<00:00, 120748.73it/s] 85%|████████▌ | 75775/88651 [00:00<00:00, 86346.68it/s]  96%|█████████▌| 85043/88651 [00:00<00:00, 82872.22it/s]100%|██████████| 88651/88651 [00:00<00:00, 96539.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10831/88651 [00:00<00:00, 108306.23it/s] 26%|██▌       | 22633/88651 [00:00<00:00, 111045.78it/s] 39%|███▉      | 34780/88651 [00:00<00:00, 113978.72it/s] 50%|████▉     | 43948/88651 [00:00<00:00, 106227.47it/s] 59%|█████▉    | 52099/88651 [00:00<00:00, 67458.78it/s]  71%|███████▏  | 63301/88651 [00:00<00:00, 76598.92it/s] 85%|████████▍ | 75038/88651 [00:00<00:00, 85509.46it/s] 95%|█████████▌| 84243/88651 [00:01<00:00, 63988.72it/s]100%|██████████| 88651/88651 [00:01<00:00, 77246.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5314/88651 [00:00<00:01, 53135.24it/s] 13%|█▎        | 11178/88651 [00:00<00:01, 54674.65it/s] 19%|█▉        | 17258/88651 [00:00<00:01, 54746.39it/s] 26%|██▋       | 23306/88651 [00:00<00:01, 56347.80it/s] 34%|███▍      | 30122/88651 [00:00<00:00, 59437.68it/s] 47%|████▋     | 41493/88651 [00:00<00:00, 69370.36it/s] 60%|█████▉    | 52791/88651 [00:00<00:00, 78454.05it/s] 73%|███████▎  | 64500/88651 [00:00<00:00, 87072.58it/s] 83%|████████▎ | 73809/88651 [00:00<00:00, 77832.27it/s] 93%|█████████▎| 82197/88651 [00:01<00:00, 73418.50it/s]100%|██████████| 88651/88651 [00:01<00:00, 73550.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9897/88651 [00:00<00:00, 98965.38it/s] 24%|██▎       | 21034/88651 [00:00<00:00, 102385.94it/s] 37%|███▋      | 32953/88651 [00:00<00:00, 106905.64it/s] 49%|████▊     | 43051/88651 [00:00<00:00, 105055.36it/s] 60%|█████▉    | 52909/88651 [00:00<00:00, 103024.03it/s] 72%|███████▏  | 64265/88651 [00:00<00:00, 105973.13it/s] 86%|████████▌ | 76344/88651 [00:00<00:00, 110020.59it/s] 98%|█████████▊| 86610/88651 [00:00<00:00, 103596.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 106866.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11414/88651 [00:00<00:00, 114135.21it/s] 26%|██▌       | 22804/88651 [00:00<00:00, 114063.27it/s] 38%|███▊      | 33731/88651 [00:00<00:00, 112580.99it/s] 51%|█████▏    | 45548/88651 [00:00<00:00, 114199.37it/s] 63%|██████▎   | 56061/88651 [00:00<00:00, 111317.33it/s] 76%|███████▌  | 67473/88651 [00:00<00:00, 112143.05it/s] 90%|████████▉ | 79358/88651 [00:00<00:00, 114073.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 113901.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5581/88651 [00:00<00:01, 55808.06it/s] 13%|█▎        | 11600/88651 [00:00<00:01, 57053.63it/s] 20%|██        | 17759/88651 [00:00<00:01, 55950.92it/s] 30%|███       | 26704/88651 [00:00<00:00, 63032.56it/s] 40%|███▉      | 35239/88651 [00:00<00:00, 68396.73it/s] 52%|█████▏    | 46171/88651 [00:00<00:00, 77049.27it/s] 65%|██████▌   | 57751/88651 [00:00<00:00, 85647.25it/s] 78%|███████▊  | 69253/88651 [00:00<00:00, 92752.20it/s] 89%|████████▉ | 78885/88651 [00:00<00:00, 87387.71it/s]100%|██████████| 88651/88651 [00:01<00:00, 86121.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9150/88651 [00:00<00:00, 91497.69it/s] 19%|█▊        | 16494/88651 [00:00<00:00, 85210.07it/s] 26%|██▋       | 23292/88651 [00:00<00:00, 79187.67it/s] 36%|███▌      | 31594/88651 [00:00<00:00, 80297.88it/s] 44%|████▍     | 38791/88651 [00:00<00:00, 77603.37it/s] 51%|█████     | 45108/88651 [00:00<00:00, 60027.43it/s] 57%|█████▋    | 50754/88651 [00:00<00:00, 58909.58it/s] 69%|██████▉   | 61601/88651 [00:00<00:00, 68266.28it/s] 81%|████████  | 71720/88651 [00:00<00:00, 75649.29it/s] 92%|█████████▏| 81866/88651 [00:01<00:00, 80337.61it/s]100%|██████████| 88651/88651 [00:01<00:00, 78687.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10749/88651 [00:00<00:00, 107466.27it/s] 24%|██▍       | 21525/88651 [00:00<00:00, 107553.79it/s] 37%|███▋      | 32958/88651 [00:00<00:00, 109498.42it/s] 50%|████▉     | 43981/88651 [00:00<00:00, 109715.26it/s] 63%|██████▎   | 55784/88651 [00:00<00:00, 112082.07it/s] 75%|███████▍  | 66171/88651 [00:00<00:00, 109483.24it/s] 86%|████████▌ | 75881/88651 [00:00<00:00, 101944.35it/s] 99%|█████████▉| 87982/88651 [00:00<00:00, 107000.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 108377.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8755/88651 [00:00<00:00, 87548.41it/s] 19%|█▊        | 16431/88651 [00:00<00:00, 84005.66it/s] 28%|██▊       | 24682/88651 [00:00<00:00, 83549.99it/s] 40%|███▉      | 35213/88651 [00:00<00:00, 89069.47it/s] 52%|█████▏    | 46389/88651 [00:00<00:00, 94846.29it/s] 65%|██████▍   | 57504/88651 [00:00<00:00, 99210.71it/s] 76%|███████▌  | 67338/88651 [00:00<00:00, 98928.83it/s] 86%|████████▋ | 76638/88651 [00:00<00:00, 95639.08it/s] 99%|█████████▉| 87621/88651 [00:00<00:00, 99493.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 97048.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11826/88651 [00:00<00:00, 118255.88it/s] 22%|██▏       | 19855/88651 [00:00<00:00, 103561.63it/s] 35%|███▌      | 31080/88651 [00:00<00:00, 106022.87it/s] 47%|████▋     | 41716/88651 [00:00<00:00, 105899.05it/s] 56%|█████▌    | 49639/88651 [00:00<00:00, 92014.07it/s]  69%|██████▉   | 61575/88651 [00:00<00:00, 98803.41it/s] 83%|████████▎ | 73542/88651 [00:00<00:00, 104255.60it/s] 96%|█████████▋| 85530/88651 [00:00<00:00, 108497.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 105580.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5547/88651 [00:00<00:01, 53329.77it/s] 19%|█▉        | 17158/88651 [00:00<00:01, 63654.62it/s] 33%|███▎      | 28986/88651 [00:00<00:00, 73892.04it/s] 46%|████▌     | 40817/88651 [00:00<00:00, 83270.45it/s] 56%|█████▋    | 49974/88651 [00:00<00:00, 85596.52it/s] 70%|██████▉   | 61815/88651 [00:00<00:00, 93356.08it/s] 82%|████████▏ | 73005/88651 [00:00<00:00, 98238.63it/s] 96%|█████████▌| 85120/88651 [00:00<00:00, 104147.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 106328.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5499/88651 [00:00<00:01, 54986.91it/s] 19%|█▊        | 16598/88651 [00:00<00:01, 64794.37it/s] 31%|███▏      | 27820/88651 [00:00<00:00, 74201.54it/s] 44%|████▎     | 38624/88651 [00:00<00:00, 81895.93it/s] 56%|█████▋    | 50038/88651 [00:00<00:00, 89479.05it/s] 70%|██████▉   | 61621/88651 [00:00<00:00, 96032.96it/s] 82%|████████▏ | 73137/88651 [00:00<00:00, 101067.90it/s] 95%|█████████▌| 84358/88651 [00:00<00:00, 104170.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 105707.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11115/88651 [00:00<00:00, 111141.89it/s] 26%|██▌       | 22830/88651 [00:00<00:00, 112878.33it/s] 39%|███▉      | 34489/88651 [00:00<00:00, 113964.66it/s] 52%|█████▏    | 46412/88651 [00:00<00:00, 115493.44it/s] 66%|██████▌   | 58315/88651 [00:00<00:00, 116530.14it/s] 79%|███████▉  | 69865/88651 [00:00<00:00, 116217.37it/s] 92%|█████████▏| 81646/88651 [00:00<00:00, 116689.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 116739.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11733/88651 [00:00<00:00, 117324.80it/s] 27%|██▋       | 23521/88651 [00:00<00:00, 117490.26it/s] 37%|███▋      | 32557/88651 [00:00<00:00, 107779.29it/s] 45%|████▍     | 39468/88651 [00:00<00:00, 82904.69it/s]  58%|█████▊    | 51417/88651 [00:00<00:00, 91289.93it/s] 67%|██████▋   | 59520/88651 [00:00<00:00, 87776.48it/s] 76%|███████▋  | 67609/88651 [00:00<00:00, 82482.70it/s] 85%|████████▌ | 75627/88651 [00:00<00:00, 81775.94it/s] 94%|█████████▍| 83514/88651 [00:00<00:00, 78883.93it/s]100%|██████████| 88651/88651 [00:01<00:00, 85114.03it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6096/88651 [00:00<00:01, 59617.41it/s] 10%|▉         | 8749/88651 [00:00<00:01, 43368.29it/s] 16%|█▋        | 14478/88651 [00:00<00:01, 46777.64it/s] 25%|██▍       | 21889/88651 [00:00<00:01, 52596.59it/s] 31%|███       | 27240/88651 [00:00<00:01, 51775.55it/s] 36%|███▌      | 31840/88651 [00:00<00:01, 42404.71it/s] 41%|████      | 36484/88651 [00:00<00:01, 41422.04it/s] 49%|████▊     | 43115/88651 [00:00<00:00, 46677.43it/s] 61%|██████    | 53857/88651 [00:00<00:00, 56213.39it/s] 74%|███████▍  | 65937/88651 [00:01<00:00, 66951.98it/s] 84%|████████▎ | 74196/88651 [00:01<00:00, 70982.97it/s] 94%|█████████▍| 83304/88651 [00:01<00:00, 76013.57it/s]100%|██████████| 88651/88651 [00:01<00:00, 66829.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6500/88651 [00:00<00:01, 64996.19it/s] 20%|█▉        | 17549/88651 [00:00<00:00, 74155.62it/s] 25%|██▌       | 22229/88651 [00:00<00:01, 56026.95it/s] 39%|███▉      | 34434/88651 [00:00<00:00, 66880.55it/s] 48%|████▊     | 42948/88651 [00:00<00:00, 71479.20it/s] 57%|█████▋    | 50195/88651 [00:00<00:00, 57207.78it/s] 64%|██████▎   | 56439/88651 [00:00<00:00, 49778.95it/s] 76%|███████▌  | 66994/88651 [00:00<00:00, 59155.74it/s] 89%|████████▊ | 78627/88651 [00:01<00:00, 69386.05it/s]100%|██████████| 88651/88651 [00:01<00:00, 76217.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 11987/88651 [00:00<00:00, 119864.97it/s] 27%|██▋       | 23888/88651 [00:00<00:00, 119605.08it/s] 40%|████      | 35694/88651 [00:00<00:00, 119135.47it/s] 54%|█████▎    | 47587/88651 [00:00<00:00, 119072.42it/s] 67%|██████▋   | 59499/88651 [00:00<00:00, 119085.36it/s] 81%|████████  | 71429/88651 [00:00<00:00, 119148.94it/s] 94%|█████████▍| 83422/88651 [00:00<00:00, 119380.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 119220.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11271/88651 [00:00<00:00, 112705.00it/s] 26%|██▌       | 23087/88651 [00:00<00:00, 114287.51it/s] 39%|███▉      | 34740/88651 [00:00<00:00, 114948.09it/s] 52%|█████▏    | 46310/88651 [00:00<00:00, 115169.72it/s] 65%|██████▌   | 57765/88651 [00:00<00:00, 114982.55it/s] 79%|███████▊  | 69647/88651 [00:00<00:00, 116106.73it/s] 92%|█████████▏| 81599/88651 [00:00<00:00, 117107.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 116865.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 11002/88651 [00:00<00:00, 110017.74it/s] 25%|██▌       | 22265/88651 [00:00<00:00, 110788.25it/s] 34%|███▍      | 30122/88651 [00:00<00:00, 98651.19it/s]  42%|████▏     | 37601/88651 [00:00<00:00, 90031.97it/s] 55%|█████▌    | 49068/88651 [00:00<00:00, 96234.67it/s] 65%|██████▍   | 57185/88651 [00:00<00:00, 79821.38it/s] 73%|███████▎  | 64580/88651 [00:00<00:00, 64194.36it/s] 83%|████████▎ | 73357/88651 [00:00<00:00, 69819.56it/s] 94%|█████████▍| 83466/88651 [00:01<00:00, 75423.53it/s]100%|██████████| 88651/88651 [00:01<00:00, 82398.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6942/88651 [00:00<00:01, 67042.11it/s] 14%|█▍        | 12391/88651 [00:00<00:01, 62706.68it/s] 26%|██▋       | 23481/88651 [00:00<00:00, 71465.65it/s] 33%|███▎      | 29633/88651 [00:00<00:00, 68159.78it/s] 42%|████▏     | 36864/88651 [00:00<00:00, 69352.73it/s] 54%|█████▍    | 48099/88651 [00:00<00:00, 78347.69it/s] 68%|██████▊   | 59899/88651 [00:00<00:00, 87130.64it/s] 79%|███████▉  | 70406/88651 [00:00<00:00, 90682.80it/s] 90%|████████▉ | 79622/88651 [00:00<00:00, 91010.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 89635.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9879/88651 [00:00<00:00, 98782.79it/s] 19%|█▉        | 16718/88651 [00:00<00:00, 87161.85it/s] 27%|██▋       | 23809/88651 [00:00<00:00, 79883.28it/s] 38%|███▊      | 33392/88651 [00:00<00:00, 84080.40it/s] 47%|████▋     | 41823/88651 [00:00<00:00, 84149.05it/s] 58%|█████▊    | 51583/88651 [00:00<00:00, 87776.08it/s] 71%|███████   | 62724/88651 [00:00<00:00, 93740.40it/s] 83%|████████▎ | 74019/88651 [00:00<00:00, 98778.55it/s] 95%|█████████▍| 84166/88651 [00:00<00:00, 99570.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 91797.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11863/88651 [00:00<00:00, 118619.08it/s] 26%|██▌       | 23225/88651 [00:00<00:00, 117072.08it/s] 39%|███▉      | 34807/88651 [00:00<00:00, 116693.07it/s] 49%|████▊     | 43161/88651 [00:00<00:00, 104275.12it/s] 58%|█████▊    | 51149/88651 [00:00<00:00, 95520.61it/s]  67%|██████▋   | 59026/88651 [00:00<00:00, 86678.18it/s] 80%|███████▉  | 70656/88651 [00:00<00:00, 93847.48it/s] 90%|█████████ | 80101/88651 [00:00<00:00, 94025.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 100481.11it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7527/88651 [00:00<00:01, 75269.71it/s] 22%|██▏       | 19205/88651 [00:00<00:00, 84253.33it/s] 35%|███▍      | 30799/88651 [00:00<00:00, 91773.28it/s] 43%|████▎     | 37836/88651 [00:00<00:00, 78200.20it/s] 54%|█████▍    | 48143/88651 [00:00<00:00, 84301.46it/s] 66%|██████▌   | 58581/88651 [00:00<00:00, 89461.65it/s] 79%|███████▉  | 70092/88651 [00:00<00:00, 95869.63it/s] 90%|████████▉ | 79540/88651 [00:00<00:00, 91306.21it/s]100%|█████████▉| 88619/88651 [00:00<00:00, 79269.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 89852.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12190/88651 [00:00<00:00, 121894.59it/s] 26%|██▋       | 23362/88651 [00:00<00:00, 118650.31it/s] 37%|███▋      | 32389/88651 [00:00<00:00, 108423.36it/s] 50%|█████     | 44406/88651 [00:00<00:00, 111696.89it/s] 63%|██████▎   | 56087/88651 [00:00<00:00, 113183.07it/s] 77%|███████▋  | 68096/88651 [00:00<00:00, 115168.55it/s] 89%|████████▉ | 78766/88651 [00:00<00:00, 112489.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 112970.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11430/88651 [00:00<00:00, 114296.02it/s] 22%|██▏       | 19596/88651 [00:00<00:00, 102057.87it/s] 35%|███▍      | 30982/88651 [00:00<00:00, 105332.83it/s] 47%|████▋     | 42051/88651 [00:00<00:00, 106883.65it/s] 57%|█████▋    | 50140/88651 [00:00<00:00, 89798.13it/s]  70%|██████▉   | 61842/88651 [00:00<00:00, 96534.49it/s] 81%|████████▏ | 72206/88651 [00:00<00:00, 98560.51it/s] 95%|█████████▍| 83983/88651 [00:00<00:00, 103629.72it/s]100%|██████████| 88651/88651 [00:00<00:00, 102684.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11681/88651 [00:00<00:00, 116801.48it/s] 26%|██▌       | 23247/88651 [00:00<00:00, 116455.70it/s] 39%|███▉      | 34822/88651 [00:00<00:00, 116241.29it/s] 53%|█████▎    | 46558/88651 [00:00<00:00, 116571.87it/s] 66%|██████▌   | 58255/88651 [00:00<00:00, 116689.14it/s] 79%|███████▊  | 69636/88651 [00:00<00:00, 115807.56it/s] 92%|█████████▏| 81633/88651 [00:00<00:00, 117025.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 116666.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6464/88651 [00:00<00:01, 56884.21it/s] 16%|█▋        | 14445/88651 [00:00<00:01, 62247.54it/s] 28%|██▊       | 24713/88651 [00:00<00:00, 70584.79it/s] 37%|███▋      | 32988/88651 [00:00<00:00, 73804.26it/s] 45%|████▌     | 40222/88651 [00:00<00:00, 73357.44it/s] 53%|█████▎    | 46867/88651 [00:00<00:00, 70187.30it/s] 66%|██████▌   | 58330/88651 [00:00<00:00, 79424.20it/s] 79%|███████▊  | 69681/88651 [00:00<00:00, 87286.47it/s] 89%|████████▉ | 79186/88651 [00:00<00:00, 89478.81it/s]100%|█████████▉| 88358/88651 [00:01<00:00, 84799.43it/s]100%|██████████| 88651/88651 [00:01<00:00, 84729.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4310/88651 [00:00<00:02, 39028.57it/s]  9%|▊         | 7750/88651 [00:00<00:02, 36966.45it/s] 16%|█▌        | 13764/88651 [00:00<00:01, 41797.53it/s] 23%|██▎       | 20615/88651 [00:00<00:01, 47117.59it/s] 31%|███       | 27236/88651 [00:00<00:01, 51579.07it/s] 44%|████▍     | 39205/88651 [00:00<00:00, 62197.05it/s] 55%|█████▍    | 48435/88651 [00:00<00:00, 68941.56it/s] 68%|██████▊   | 60182/88651 [00:00<00:00, 78693.30it/s] 79%|███████▉  | 70128/88651 [00:00<00:00, 83934.24it/s] 89%|████████▉ | 79341/88651 [00:01<00:00, 75975.78it/s] 99%|█████████▉| 87656/88651 [00:01<00:00, 64280.87it/s]100%|██████████| 88651/88651 [00:01<00:00, 70682.39it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10816/88651 [00:00<00:00, 91661.92it/s] 21%|██        | 18220/88651 [00:00<00:00, 85551.75it/s] 29%|██▊       | 25365/88651 [00:00<00:00, 80768.80it/s] 34%|███▍      | 30411/88651 [00:00<00:00, 64018.97it/s] 47%|████▋     | 41842/88651 [00:00<00:00, 73752.09it/s] 55%|█████▍    | 48650/88651 [00:00<00:00, 66404.13it/s] 62%|██████▏   | 55032/88651 [00:00<00:00, 52509.61it/s] 73%|███████▎  | 64495/88651 [00:00<00:00, 60087.51it/s] 80%|████████  | 71292/88651 [00:01<00:00, 62253.14it/s] 93%|█████████▎| 82820/88651 [00:01<00:00, 72218.17it/s]100%|██████████| 88651/88651 [00:01<00:00, 72760.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7251/88651 [00:00<00:01, 70463.02it/s] 21%|██        | 18388/88651 [00:00<00:00, 79187.68it/s] 30%|███       | 26949/88651 [00:00<00:00, 80208.57it/s] 39%|███▉      | 34492/88651 [00:00<00:00, 77619.48it/s] 46%|████▌     | 40757/88651 [00:00<00:00, 57371.33it/s] 60%|█████▉    | 53059/88651 [00:00<00:00, 68305.82it/s] 69%|██████▉   | 61174/88651 [00:00<00:00, 71710.03it/s] 78%|███████▊  | 68865/88651 [00:00<00:00, 63834.75it/s] 86%|████████▋ | 76641/88651 [00:01<00:00, 67457.50it/s]100%|█████████▉| 88328/88651 [00:01<00:00, 77255.93it/s]100%|██████████| 88651/88651 [00:01<00:00, 77685.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9466/88651 [00:00<00:00, 94653.09it/s] 21%|██        | 18655/88651 [00:00<00:00, 93233.29it/s] 27%|██▋       | 24270/88651 [00:00<00:00, 75374.36it/s] 33%|███▎      | 29643/88651 [00:00<00:00, 67246.88it/s] 46%|████▌     | 40572/88651 [00:00<00:00, 76019.21it/s] 59%|█████▉    | 52295/88651 [00:00<00:00, 84981.45it/s] 72%|███████▏  | 64067/88651 [00:00<00:00, 92716.42it/s] 86%|████████▌ | 75841/88651 [00:00<00:00, 99029.95it/s] 99%|█████████▉| 87753/88651 [00:00<00:00, 104305.45it/s]100%|██████████| 88651/88651 [00:00<00:00, 96595.99it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11105/88651 [00:00<00:00, 111045.87it/s] 25%|██▍       | 22019/88651 [00:00<00:00, 110466.23it/s] 38%|███▊      | 33471/88651 [00:00<00:00, 111651.86it/s] 51%|█████     | 44867/88651 [00:00<00:00, 112332.47it/s] 63%|██████▎   | 56293/88651 [00:00<00:00, 112902.86it/s] 77%|███████▋  | 67850/88651 [00:00<00:00, 113688.42it/s] 90%|████████▉ | 79406/88651 [00:00<00:00, 114241.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 113589.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▌         | 4712/88651 [00:00<00:01, 47119.37it/s] 11%|█▏        | 10039/88651 [00:00<00:01, 48645.33it/s] 19%|█▉        | 17237/88651 [00:00<00:01, 53768.11it/s] 30%|██▉       | 26272/88651 [00:00<00:01, 61201.98it/s] 42%|████▏     | 37079/88651 [00:00<00:00, 70143.01it/s] 50%|█████     | 44535/88651 [00:00<00:00, 71410.77it/s] 63%|██████▎   | 56180/88651 [00:00<00:00, 80158.74it/s] 75%|███████▌  | 66775/88651 [00:00<00:00, 86472.46it/s] 88%|████████▊ | 78295/88651 [00:00<00:00, 93462.69it/s]100%|██████████| 88651/88651 [00:01<00:00, 88414.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7519/88651 [00:00<00:01, 67497.17it/s] 21%|██▏       | 18915/88651 [00:00<00:00, 76902.89it/s] 34%|███▍      | 30096/88651 [00:00<00:00, 84849.50it/s] 47%|████▋     | 41727/88651 [00:00<00:00, 92341.35it/s] 60%|██████    | 53551/88651 [00:00<00:00, 98834.08it/s] 74%|███████▍  | 65441/88651 [00:00<00:00, 104103.65it/s] 86%|████████▋ | 76578/88651 [00:00<00:00, 106179.86it/s]100%|█████████▉| 88341/88651 [00:00<00:00, 109373.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 108839.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8285/88651 [00:00<00:01, 79988.88it/s] 22%|██▏       | 19380/88651 [00:00<00:00, 87296.36it/s] 36%|███▌      | 31547/88651 [00:00<00:00, 95379.55it/s] 48%|████▊     | 42827/88651 [00:00<00:00, 100012.59it/s] 59%|█████▉    | 52289/88651 [00:00<00:00, 98328.90it/s]  72%|███████▏  | 63559/88651 [00:00<00:00, 102238.32it/s] 86%|████████▌ | 75978/88651 [00:00<00:00, 107962.65it/s] 97%|█████████▋| 86340/88651 [00:00<00:00, 104750.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 102439.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10309/88651 [00:00<00:00, 103088.13it/s] 25%|██▍       | 21844/88651 [00:00<00:00, 106483.91it/s] 38%|███▊      | 33723/88651 [00:00<00:00, 109898.08it/s] 51%|█████▏    | 45480/88651 [00:00<00:00, 112091.69it/s] 65%|██████▍   | 57355/88651 [00:00<00:00, 114007.44it/s] 78%|███████▊  | 69230/88651 [00:00<00:00, 115387.33it/s] 90%|████████▉ | 79588/88651 [00:00<00:00, 107633.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 107793.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12254/88651 [00:00<00:00, 122530.48it/s] 27%|██▋       | 24041/88651 [00:00<00:00, 121093.06it/s] 40%|███▉      | 35116/88651 [00:00<00:00, 117791.06it/s] 53%|█████▎    | 46879/88651 [00:00<00:00, 117742.56it/s] 63%|██████▎   | 55728/88651 [00:00<00:00, 106860.07it/s] 76%|███████▌  | 67464/88651 [00:00<00:00, 109807.29it/s] 89%|████████▊ | 78559/88651 [00:00<00:00, 110146.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 112114.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10227/88651 [00:00<00:00, 102269.61it/s] 25%|██▍       | 21891/88651 [00:00<00:00, 106192.40it/s] 36%|███▌      | 31833/88651 [00:00<00:00, 103681.30it/s] 44%|████▎     | 38734/88651 [00:00<00:00, 80221.73it/s]  52%|█████▏    | 45939/88651 [00:00<00:00, 77581.35it/s] 59%|█████▉    | 52585/88651 [00:00<00:00, 66575.74it/s] 66%|██████▋   | 58738/88651 [00:00<00:00, 63103.10it/s] 77%|███████▋  | 68635/88651 [00:00<00:00, 70800.12it/s] 91%|█████████ | 80538/88651 [00:00<00:00, 80596.35it/s]100%|██████████| 88651/88651 [00:01<00:00, 85053.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6637/88651 [00:00<00:01, 66368.16it/s] 18%|█▊        | 15531/88651 [00:00<00:01, 71836.42it/s] 31%|███       | 27339/88651 [00:00<00:00, 81399.14it/s] 44%|████▍     | 39134/88651 [00:00<00:00, 89741.42it/s] 58%|█████▊    | 51016/88651 [00:00<00:00, 96851.95it/s] 71%|███████   | 63051/88651 [00:00<00:00, 102876.02it/s] 85%|████████▍ | 75071/88651 [00:00<00:00, 107523.90it/s] 98%|█████████▊| 87241/88651 [00:00<00:00, 111415.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 109159.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6905/88651 [00:00<00:01, 69044.80it/s] 15%|█▍        | 12860/88651 [00:00<00:01, 63876.17it/s] 21%|██▏       | 18909/88651 [00:00<00:01, 62819.51it/s] 28%|██▊       | 25194/88651 [00:00<00:01, 62828.18it/s] 40%|████      | 35716/88651 [00:00<00:00, 71465.39it/s] 54%|█████▎    | 47560/88651 [00:00<00:00, 81116.81it/s] 67%|██████▋   | 59639/88651 [00:00<00:00, 89981.73it/s] 81%|████████  | 71672/88651 [00:00<00:00, 97346.97it/s] 94%|█████████▍| 83697/88651 [00:00<00:00, 103245.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 93225.61it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12235/88651 [00:00<00:00, 122346.91it/s] 21%|██        | 18235/88651 [00:00<00:00, 93270.71it/s]  26%|██▌       | 22855/88651 [00:00<00:00, 69886.36it/s] 39%|███▊      | 34151/88651 [00:00<00:00, 78913.38it/s] 49%|████▉     | 43315/88651 [00:00<00:00, 82343.77it/s] 61%|██████    | 53897/88651 [00:00<00:00, 88111.24it/s] 70%|███████   | 62145/88651 [00:00<00:00, 81123.28it/s] 80%|████████  | 70972/88651 [00:00<00:00, 83142.50it/s] 93%|█████████▎| 82302/88651 [00:00<00:00, 90356.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 90433.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3729/88651 [00:00<00:02, 31864.43it/s]  8%|▊         | 7034/88651 [00:00<00:02, 32210.54it/s] 18%|█▊        | 16006/88651 [00:00<00:01, 38334.17it/s] 22%|██▏       | 19699/88651 [00:00<00:01, 37901.07it/s] 32%|███▏      | 28777/88651 [00:00<00:01, 45926.05it/s] 46%|████▌     | 40671/88651 [00:00<00:00, 56292.46it/s] 57%|█████▋    | 50838/88651 [00:00<00:00, 64994.13it/s] 66%|██████▋   | 58876/88651 [00:00<00:00, 64664.61it/s] 80%|███████▉  | 70770/88651 [00:00<00:00, 74920.89it/s] 93%|█████████▎| 82119/88651 [00:01<00:00, 83425.64it/s]100%|██████████| 88651/88651 [00:01<00:00, 78469.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11289/88651 [00:00<00:00, 112884.46it/s] 26%|██▋       | 23412/88651 [00:00<00:00, 115264.65it/s] 40%|███▉      | 35174/88651 [00:00<00:00, 115958.62it/s] 48%|████▊     | 42908/88651 [00:00<00:00, 80074.00it/s]  56%|█████▌    | 49717/88651 [00:00<00:00, 73954.91it/s] 64%|██████▎   | 56366/88651 [00:00<00:00, 58331.93it/s] 70%|███████   | 62193/88651 [00:00<00:00, 58218.80it/s] 77%|███████▋  | 68011/88651 [00:00<00:00, 55545.99it/s] 90%|████████▉ | 79756/88651 [00:01<00:00, 65978.05it/s]100%|██████████| 88651/88651 [00:01<00:00, 77995.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11561/88651 [00:00<00:00, 115604.05it/s] 26%|██▋       | 23274/88651 [00:00<00:00, 116055.62it/s] 40%|███▉      | 35066/88651 [00:00<00:00, 116606.60it/s] 53%|█████▎    | 46989/88651 [00:00<00:00, 117380.05it/s] 66%|██████▌   | 58561/88651 [00:00<00:00, 116875.40it/s] 79%|███████▉  | 70248/88651 [00:00<00:00, 116872.64it/s] 93%|█████████▎| 82087/88651 [00:00<00:00, 117321.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 116831.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10917/88651 [00:00<00:00, 109166.20it/s] 25%|██▌       | 22461/88651 [00:00<00:00, 110972.83it/s] 38%|███▊      | 34049/88651 [00:00<00:00, 112398.48it/s] 51%|█████     | 45196/88651 [00:00<00:00, 110940.63it/s] 61%|██████    | 53680/88651 [00:00<00:00, 88036.09it/s]  70%|███████   | 62404/88651 [00:00<00:00, 87793.74it/s] 80%|███████▉  | 70870/88651 [00:00<00:00, 86394.46it/s] 90%|████████▉ | 79407/88651 [00:00<00:00, 86082.34it/s] 99%|█████████▉| 88064/88651 [00:00<00:00, 86226.43it/s]100%|██████████| 88651/88651 [00:00<00:00, 92785.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8591/88651 [00:00<00:00, 85907.21it/s] 23%|██▎       | 20460/88651 [00:00<00:00, 93668.72it/s] 36%|███▋      | 32254/88651 [00:00<00:00, 99831.04it/s] 50%|████▉     | 44177/88651 [00:00<00:00, 104953.07it/s] 63%|██████▎   | 56089/88651 [00:00<00:00, 108834.55it/s] 74%|███████▍  | 65740/88651 [00:00<00:00, 100292.08it/s] 88%|████████▊ | 77699/88651 [00:00<00:00, 105393.79it/s] 99%|█████████▉| 88099/88651 [00:00<00:00, 104969.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 108245.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7450/88651 [00:00<00:01, 74498.29it/s] 20%|██        | 17860/88651 [00:00<00:00, 81445.02it/s] 32%|███▏      | 27988/88651 [00:00<00:00, 86091.00it/s] 43%|████▎     | 38434/88651 [00:00<00:00, 90884.82it/s] 54%|█████▎    | 47528/88651 [00:00<00:00, 90899.70it/s] 63%|██████▎   | 55518/88651 [00:00<00:00, 79275.80it/s] 74%|███████▍  | 66025/88651 [00:00<00:00, 85576.96it/s] 88%|████████▊ | 77987/88651 [00:00<00:00, 93564.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 96161.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10324/88651 [00:00<00:00, 102153.37it/s] 21%|██        | 18805/88651 [00:00<00:00, 96245.75it/s]  34%|███▍      | 30531/88651 [00:00<00:00, 101712.24it/s] 47%|████▋     | 42057/88651 [00:00<00:00, 105429.07it/s] 59%|█████▉    | 52691/88651 [00:00<00:00, 105699.46it/s] 70%|██████▉   | 61888/88651 [00:00<00:00, 101168.53it/s] 83%|████████▎ | 73742/88651 [00:00<00:00, 105819.40it/s] 94%|█████████▍| 83612/88651 [00:00<00:00, 96788.34it/s] 100%|██████████| 88651/88651 [00:00<00:00, 102348.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6913/88651 [00:00<00:01, 67203.82it/s] 20%|██        | 18130/88651 [00:00<00:00, 76390.23it/s] 27%|██▋       | 23887/88651 [00:00<00:00, 69473.64it/s] 40%|████      | 35826/88651 [00:00<00:00, 79436.94it/s] 51%|█████     | 45001/88651 [00:00<00:00, 82764.19it/s] 64%|██████▎   | 56504/88651 [00:00<00:00, 90368.35it/s] 77%|███████▋  | 68419/88651 [00:00<00:00, 97426.79it/s] 91%|█████████ | 80336/88651 [00:00<00:00, 103065.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 101601.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8751/88651 [00:00<00:00, 87507.37it/s] 15%|█▍        | 13220/88651 [00:00<00:01, 67968.73it/s] 27%|██▋       | 23555/88651 [00:00<00:00, 75748.27it/s] 38%|███▊      | 33878/88651 [00:00<00:00, 82322.36it/s] 51%|█████     | 45347/88651 [00:00<00:00, 89936.48it/s] 64%|██████▍   | 56733/88651 [00:00<00:00, 95985.56it/s] 77%|███████▋  | 68467/88651 [00:00<00:00, 101527.73it/s] 91%|█████████ | 80364/88651 [00:00<00:00, 106198.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 101788.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11707/88651 [00:00<00:00, 117066.20it/s] 20%|██        | 18107/88651 [00:00<00:00, 93744.06it/s]  25%|██▌       | 22486/88651 [00:00<00:01, 63486.82it/s] 32%|███▏      | 28546/88651 [00:00<00:00, 62590.84it/s] 39%|███▉      | 34365/88651 [00:00<00:00, 60510.48it/s] 48%|████▊     | 42544/88651 [00:00<00:00, 65632.58it/s] 60%|██████    | 53536/88651 [00:00<00:00, 74656.30it/s] 71%|███████   | 62582/88651 [00:00<00:00, 78784.92it/s] 84%|████████▎ | 74073/88651 [00:00<00:00, 86989.02it/s] 94%|█████████▎| 83076/88651 [00:01<00:00, 85295.63it/s]100%|██████████| 88651/88651 [00:01<00:00, 81908.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14104/88651 [00:00<00:00, 141031.39it/s] 28%|██▊       | 24615/88651 [00:00<00:00, 127242.13it/s] 41%|████      | 36082/88651 [00:00<00:00, 123189.62it/s] 54%|█████▎    | 47493/88651 [00:00<00:00, 120315.78it/s] 66%|██████▋   | 58902/88651 [00:00<00:00, 118376.57it/s] 79%|███████▉  | 69952/88651 [00:00<00:00, 115895.76it/s] 92%|█████████▏| 81600/88651 [00:00<00:00, 116068.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 115605.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12003/88651 [00:00<00:00, 120021.53it/s] 27%|██▋       | 23578/88651 [00:00<00:00, 118706.15it/s] 39%|███▉      | 34947/88651 [00:00<00:00, 117153.74it/s] 52%|█████▏    | 46498/88651 [00:00<00:00, 116653.82it/s] 66%|██████▌   | 58230/88651 [00:00<00:00, 116850.25it/s] 78%|███████▊  | 69024/88651 [00:00<00:00, 114026.40it/s] 91%|█████████ | 80789/88651 [00:00<00:00, 115089.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 115606.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11525/88651 [00:00<00:00, 115244.89it/s] 23%|██▎       | 20655/88651 [00:00<00:00, 106838.51it/s] 33%|███▎      | 29279/88651 [00:00<00:00, 99694.63it/s]  44%|████▍     | 39329/88651 [00:00<00:00, 99934.41it/s] 53%|█████▎    | 46683/88651 [00:00<00:00, 82916.10it/s] 60%|██████    | 53611/88651 [00:00<00:00, 74685.57it/s] 73%|███████▎  | 64853/88651 [00:00<00:00, 83046.91it/s] 84%|████████▎ | 74197/88651 [00:00<00:00, 84618.17it/s] 95%|█████████▍| 83888/88651 [00:00<00:00, 86504.28it/s]100%|██████████| 88651/88651 [00:01<00:00, 86458.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10325/88651 [00:00<00:00, 103241.73it/s] 19%|█▉        | 16971/88651 [00:00<00:00, 88538.88it/s]  30%|███       | 26745/88651 [00:00<00:00, 91111.69it/s] 40%|████      | 35753/88651 [00:00<00:00, 90797.84it/s] 52%|█████▏    | 45819/88651 [00:00<00:00, 93545.22it/s] 65%|██████▍   | 57592/88651 [00:00<00:00, 99688.66it/s] 78%|███████▊  | 69144/88651 [00:00<00:00, 103960.53it/s] 90%|████████▉ | 79565/88651 [00:00<00:00, 104035.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 101188.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11685/88651 [00:00<00:00, 116842.31it/s] 26%|██▌       | 23085/88651 [00:00<00:00, 115972.26it/s] 39%|███▉      | 34630/88651 [00:00<00:00, 115814.96it/s] 52%|█████▏    | 46257/88651 [00:00<00:00, 115950.47it/s] 65%|██████▌   | 58005/88651 [00:00<00:00, 116405.00it/s] 79%|███████▊  | 69784/88651 [00:00<00:00, 116815.19it/s] 91%|█████████▏| 81091/88651 [00:00<00:00, 115665.37it/s]100%|██████████| 88651/88651 [00:00<00:00, 114314.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8199/88651 [00:00<00:01, 79688.33it/s] 16%|█▌        | 14168/88651 [00:00<00:01, 72410.20it/s] 27%|██▋       | 23526/88651 [00:00<00:00, 77680.94it/s] 37%|███▋      | 32388/88651 [00:00<00:00, 79628.89it/s] 44%|████▎     | 38588/88651 [00:00<00:00, 67587.53it/s] 50%|█████     | 44427/88651 [00:00<00:00, 60316.72it/s] 56%|█████▋    | 49961/88651 [00:00<00:00, 56125.68it/s] 63%|██████▎   | 55863/88651 [00:00<00:00, 56963.50it/s] 71%|███████   | 62542/88651 [00:00<00:00, 59554.96it/s] 79%|███████▊  | 69654/88651 [00:01<00:00, 62007.25it/s] 86%|████████▌ | 75805/88651 [00:01<00:00, 59790.05it/s] 99%|█████████▉| 87616/88651 [00:01<00:00, 70186.46it/s]100%|██████████| 88651/88651 [00:01<00:00, 68618.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9011/88651 [00:00<00:00, 90106.65it/s] 16%|█▌        | 13946/88651 [00:00<00:01, 72212.07it/s] 20%|█▉        | 17319/88651 [00:00<00:01, 51132.67it/s] 25%|██▌       | 22351/88651 [00:00<00:01, 50885.73it/s] 33%|███▎      | 29372/88651 [00:00<00:01, 53519.70it/s] 38%|███▊      | 33859/88651 [00:00<00:01, 46829.02it/s] 44%|████▍     | 38884/88651 [00:00<00:01, 47805.33it/s] 53%|█████▎    | 47280/88651 [00:00<00:00, 54896.57it/s] 60%|█████▉    | 52926/88651 [00:00<00:00, 54790.28it/s] 67%|██████▋   | 59297/88651 [00:01<00:00, 57191.73it/s] 73%|███████▎  | 65121/88651 [00:01<00:00, 57469.61it/s] 80%|████████  | 70942/88651 [00:01<00:00, 49901.05it/s] 86%|████████▌ | 76162/88651 [00:01<00:00, 47107.47it/s] 92%|█████████▏| 81262/88651 [00:01<00:00, 47927.99it/s] 97%|█████████▋| 86240/88651 [00:01<00:00, 47645.26it/s]100%|██████████| 88651/88651 [00:01<00:00, 51570.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4325/88651 [00:00<00:01, 43249.42it/s] 13%|█▎        | 11174/88651 [00:00<00:01, 48624.83it/s] 24%|██▍       | 21231/88651 [00:00<00:01, 57540.37it/s] 33%|███▎      | 28835/88651 [00:00<00:00, 62069.80it/s] 39%|███▉      | 34680/88651 [00:00<00:00, 55126.36it/s] 46%|████▌     | 40490/88651 [00:00<00:00, 53363.71it/s] 52%|█████▏    | 45762/88651 [00:00<00:00, 44927.75it/s] 57%|█████▋    | 50437/88651 [00:00<00:00, 44429.80it/s] 64%|██████▍   | 56693/88651 [00:01<00:00, 47415.85it/s] 76%|███████▋  | 67786/88651 [00:01<00:00, 57248.90it/s] 86%|████████▌ | 76345/88651 [00:01<00:00, 63562.77it/s] 99%|█████████▉| 88021/88651 [00:01<00:00, 73625.39it/s]100%|██████████| 88651/88651 [00:01<00:00, 65996.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11752/88651 [00:00<00:00, 117511.43it/s] 26%|██▌       | 22741/88651 [00:00<00:00, 115115.00it/s] 38%|███▊      | 34088/88651 [00:00<00:00, 114614.39it/s] 52%|█████▏    | 45828/88651 [00:00<00:00, 115433.94it/s] 65%|██████▌   | 57627/88651 [00:00<00:00, 116186.55it/s] 78%|███████▊  | 69487/88651 [00:00<00:00, 116899.00it/s] 92%|█████████▏| 81252/88651 [00:00<00:00, 117122.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 116286.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11818/88651 [00:00<00:00, 118178.70it/s] 27%|██▋       | 23643/88651 [00:00<00:00, 118197.50it/s] 40%|████      | 35534/88651 [00:00<00:00, 118408.87it/s] 54%|█████▎    | 47585/88651 [00:00<00:00, 119029.15it/s] 67%|██████▋   | 59708/88651 [00:00<00:00, 119680.83it/s] 79%|███████▊  | 69692/88651 [00:00<00:00, 92674.22it/s]  89%|████████▊ | 78502/88651 [00:00<00:00, 80028.14it/s] 98%|█████████▊| 86705/88651 [00:00<00:00, 80618.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 95729.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11495/88651 [00:00<00:00, 114949.29it/s] 26%|██▋       | 23423/88651 [00:00<00:00, 116214.66it/s] 40%|████      | 35497/88651 [00:00<00:00, 117533.33it/s] 53%|█████▎    | 47130/88651 [00:00<00:00, 117168.91it/s] 66%|██████▌   | 58514/88651 [00:00<00:00, 116147.55it/s] 80%|███████▉  | 70503/88651 [00:00<00:00, 117244.32it/s] 93%|█████████▎| 82564/88651 [00:00<00:00, 118232.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 117937.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7510/88651 [00:00<00:01, 75099.36it/s] 15%|█▌        | 13500/88651 [00:00<00:01, 67961.37it/s] 28%|██▊       | 25118/88651 [00:00<00:00, 77625.32it/s] 37%|███▋      | 32502/88651 [00:00<00:00, 76449.45it/s] 44%|████▎     | 38748/88651 [00:00<00:00, 70777.24it/s] 57%|█████▋    | 50436/88651 [00:00<00:00, 79171.97it/s] 65%|██████▌   | 58048/88651 [00:00<00:00, 77612.62it/s] 79%|███████▉  | 70036/88651 [00:00<00:00, 86792.80it/s] 89%|████████▉ | 78921/88651 [00:00<00:00, 87072.22it/s] 99%|█████████▉| 88017/88651 [00:01<00:00, 88202.00it/s]100%|██████████| 88651/88651 [00:01<00:00, 86278.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7071/88651 [00:00<00:01, 70709.22it/s] 17%|█▋        | 14900/88651 [00:00<00:01, 72824.52it/s] 28%|██▊       | 25170/88651 [00:00<00:00, 79786.82it/s] 35%|███▌      | 31440/88651 [00:00<00:00, 73755.17it/s] 42%|████▏     | 37496/88651 [00:00<00:00, 66862.80it/s] 49%|████▉     | 43693/88651 [00:00<00:00, 65313.86it/s] 56%|█████▋    | 49921/88651 [00:00<00:00, 64372.66it/s] 63%|██████▎   | 56061/88651 [00:00<00:00, 61180.43it/s] 70%|███████   | 62228/88651 [00:00<00:00, 61325.41it/s] 77%|███████▋  | 68348/88651 [00:01<00:00, 61287.27it/s] 84%|████████▍ | 74477/88651 [00:01<00:00, 61287.32it/s] 91%|█████████ | 80514/88651 [00:01<00:00, 59123.24it/s] 98%|█████████▊| 86814/88651 [00:01<00:00, 60234.01it/s]100%|██████████| 88651/88651 [00:01<00:00, 64738.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11686/88651 [00:00<00:00, 116859.55it/s] 26%|██▋       | 23363/88651 [00:00<00:00, 116831.29it/s] 39%|███▉      | 34906/88651 [00:00<00:00, 115334.69it/s] 50%|█████     | 44663/88651 [00:00<00:00, 109358.64it/s] 65%|██████▍   | 57209/88651 [00:00<00:00, 113736.94it/s] 77%|███████▋  | 68441/88651 [00:00<00:00, 113305.86it/s] 90%|████████▉ | 79712/88651 [00:00<00:00, 113125.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 109823.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7456/88651 [00:00<00:01, 64446.37it/s] 13%|█▎        | 11136/88651 [00:00<00:01, 52591.84it/s] 19%|█▉        | 16826/88651 [00:00<00:01, 53813.88it/s] 24%|██▍       | 21578/88651 [00:00<00:01, 51755.51it/s] 30%|██▉       | 26568/88651 [00:00<00:01, 51184.28it/s] 36%|███▌      | 31762/88651 [00:00<00:01, 50031.00it/s] 42%|████▏     | 37374/88651 [00:00<00:00, 51713.70it/s] 48%|████▊     | 42780/88651 [00:00<00:00, 52395.24it/s] 62%|██████▏   | 54602/88651 [00:00<00:00, 62902.03it/s] 75%|███████▍  | 66243/88651 [00:01<00:00, 72962.42it/s] 87%|████████▋ | 77484/88651 [00:01<00:00, 81547.37it/s]100%|██████████| 88651/88651 [00:01<00:00, 72180.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10959/88651 [00:00<00:00, 109584.10it/s] 25%|██▌       | 22514/88651 [00:00<00:00, 111305.59it/s] 38%|███▊      | 33434/88651 [00:00<00:00, 110665.15it/s] 52%|█████▏    | 45693/88651 [00:00<00:00, 113990.05it/s] 64%|██████▎   | 56456/88651 [00:00<00:00, 112002.27it/s] 76%|███████▌  | 67517/88651 [00:00<00:00, 111579.82it/s] 90%|████████▉ | 79431/88651 [00:00<00:00, 113742.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 114039.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7961/88651 [00:00<00:01, 79603.05it/s] 16%|█▌        | 14123/88651 [00:00<00:01, 73193.10it/s] 24%|██▎       | 20901/88651 [00:00<00:00, 71479.34it/s] 30%|███       | 26645/88651 [00:00<00:00, 65617.80it/s] 42%|████▏     | 37637/88651 [00:00<00:00, 74642.56it/s] 53%|█████▎    | 46608/88651 [00:00<00:00, 78596.22it/s] 64%|██████▍   | 56870/88651 [00:00<00:00, 83718.15it/s] 73%|███████▎  | 64978/88651 [00:00<00:00, 76559.61it/s] 82%|████████▏ | 72569/88651 [00:00<00:00, 69165.09it/s] 90%|████████▉ | 79576/88651 [00:01<00:00, 66143.68it/s] 97%|█████████▋| 86282/88651 [00:01<00:00, 64091.14it/s]100%|██████████| 88651/88651 [00:01<00:00, 71579.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6511/88651 [00:00<00:01, 65106.80it/s] 18%|█▊        | 16390/88651 [00:00<00:00, 72524.46it/s] 31%|███       | 27153/88651 [00:00<00:00, 80390.63it/s] 40%|████      | 35664/88651 [00:00<00:00, 81605.26it/s] 53%|█████▎    | 47190/88651 [00:00<00:00, 89439.10it/s] 67%|██████▋   | 59113/88651 [00:00<00:00, 96686.24it/s] 80%|████████  | 70965/88651 [00:00<00:00, 102340.55it/s] 94%|█████████▎| 82902/88651 [00:00<00:00, 106915.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 104468.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6779/88651 [00:00<00:01, 64025.73it/s] 14%|█▎        | 12008/88651 [00:00<00:01, 59985.23it/s] 26%|██▌       | 23203/88651 [00:00<00:00, 69689.35it/s] 39%|███▉      | 34900/88651 [00:00<00:00, 79305.18it/s] 52%|█████▏    | 46283/88651 [00:00<00:00, 85691.26it/s] 62%|██████▏   | 54550/88651 [00:00<00:00, 75850.46it/s] 73%|███████▎  | 64448/88651 [00:00<00:00, 81568.41it/s] 83%|████████▎ | 73822/88651 [00:00<00:00, 84873.08it/s] 93%|█████████▎| 82496/88651 [00:00<00:00, 85423.07it/s]100%|██████████| 88651/88651 [00:01<00:00, 84703.23it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11096/88651 [00:00<00:00, 110952.43it/s] 20%|██        | 18074/88651 [00:00<00:00, 90518.03it/s]  25%|██▌       | 22371/88651 [00:00<00:00, 67956.37it/s] 38%|███▊      | 33904/88651 [00:00<00:00, 77506.29it/s] 46%|████▌     | 40339/88651 [00:00<00:00, 64118.53it/s] 59%|█████▉    | 52493/88651 [00:00<00:00, 74706.15it/s] 68%|██████▊   | 60252/88651 [00:00<00:00, 70757.86it/s] 76%|███████▌  | 67573/88651 [00:00<00:00, 69813.33it/s] 84%|████████▍ | 74750/88651 [00:00<00:00, 69286.76it/s] 92%|█████████▏| 81802/88651 [00:01<00:00, 53769.04it/s]100%|██████████| 88651/88651 [00:01<00:00, 69950.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6007/88651 [00:00<00:01, 60067.34it/s] 20%|██        | 17913/88651 [00:00<00:01, 70554.63it/s] 27%|██▋       | 24247/88651 [00:00<00:00, 65900.52it/s] 33%|███▎      | 29452/88651 [00:00<00:00, 61027.34it/s] 45%|████▌     | 40308/88651 [00:00<00:00, 70255.57it/s] 53%|█████▎    | 47156/88651 [00:00<00:00, 63001.49it/s] 65%|██████▌   | 57787/88651 [00:00<00:00, 71772.42it/s] 79%|███████▊  | 69770/88651 [00:00<00:00, 81588.21it/s] 92%|█████████▏| 81652/88651 [00:00<00:00, 90053.13it/s]100%|██████████| 88651/88651 [00:01<00:00, 88313.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11120/88651 [00:00<00:00, 111197.99it/s] 19%|█▉        | 16911/88651 [00:00<00:00, 86789.07it/s]  32%|███▏      | 28669/88651 [00:00<00:00, 94188.60it/s] 43%|████▎     | 37966/88651 [00:00<00:00, 93819.10it/s] 51%|█████     | 45213/88651 [00:00<00:00, 79502.18it/s] 63%|██████▎   | 55749/88651 [00:00<00:00, 85819.49it/s] 76%|███████▋  | 67752/88651 [00:00<00:00, 93843.18it/s] 89%|████████▉ | 78901/88651 [00:00<00:00, 98520.45it/s]100%|██████████| 88651/88651 [00:00<00:00, 97313.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12002/88651 [00:00<00:00, 120015.82it/s] 26%|██▌       | 23056/88651 [00:00<00:00, 117006.10it/s] 36%|███▌      | 32015/88651 [00:00<00:00, 102714.13it/s] 46%|████▌     | 40864/88651 [00:00<00:00, 97987.62it/s]  59%|█████▉    | 52656/88651 [00:00<00:00, 103221.77it/s] 70%|██████▉   | 62029/88651 [00:00<00:00, 99958.06it/s]  80%|████████  | 71120/88651 [00:00<00:00, 97059.16it/s] 93%|█████████▎| 82392/88651 [00:00<00:00, 101278.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 102565.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10901/88651 [00:00<00:00, 109007.51it/s] 25%|██▌       | 22239/88651 [00:00<00:00, 110281.69it/s] 38%|███▊      | 33650/88651 [00:00<00:00, 111400.48it/s] 51%|█████     | 45122/88651 [00:00<00:00, 112375.94it/s] 64%|██████▍   | 56884/88651 [00:00<00:00, 112779.50it/s] 78%|███████▊  | 68977/88651 [00:00<00:00, 115106.23it/s] 92%|█████████▏| 81131/88651 [00:00<00:00, 116960.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 115744.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11737/88651 [00:00<00:00, 117361.16it/s] 26%|██▌       | 22628/88651 [00:00<00:00, 114691.09it/s] 38%|███▊      | 33932/88651 [00:00<00:00, 114189.43it/s] 52%|█████▏    | 45662/88651 [00:00<00:00, 115102.59it/s] 65%|██████▍   | 57480/88651 [00:00<00:00, 116008.15it/s] 78%|███████▊  | 69513/88651 [00:00<00:00, 117271.21it/s] 92%|█████████▏| 81544/88651 [00:00<00:00, 118164.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 114859.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9704/88651 [00:00<00:00, 97032.69it/s] 21%|██        | 18815/88651 [00:00<00:00, 94783.76it/s] 32%|███▏      | 27945/88651 [00:00<00:00, 93708.31it/s] 44%|████▍     | 39210/88651 [00:00<00:00, 98685.72it/s] 56%|█████▌    | 49595/88651 [00:00<00:00, 100179.32it/s] 69%|██████▊   | 60755/88651 [00:00<00:00, 103350.77it/s] 82%|████████▏ | 72530/88651 [00:00<00:00, 107284.82it/s] 95%|█████████▍| 84203/88651 [00:00<00:00, 109952.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 105628.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11474/88651 [00:00<00:00, 114733.00it/s] 26%|██▌       | 23142/88651 [00:00<00:00, 115304.57it/s] 39%|███▉      | 34760/88651 [00:00<00:00, 115564.03it/s] 48%|████▊     | 42382/88651 [00:00<00:00, 97472.58it/s]  56%|█████▌    | 49859/88651 [00:00<00:00, 86092.36it/s] 70%|██████▉   | 61767/88651 [00:00<00:00, 93894.85it/s] 79%|███████▉  | 70424/88651 [00:00<00:00, 87412.15it/s] 89%|████████▉ | 78743/88651 [00:00<00:00, 82400.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 95298.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9315/88651 [00:00<00:00, 93147.87it/s] 23%|██▎       | 20664/88651 [00:00<00:00, 98440.78it/s] 36%|███▌      | 31912/88651 [00:00<00:00, 102268.47it/s] 49%|████▊     | 43131/88651 [00:00<00:00, 105053.29it/s] 62%|██████▏   | 54873/88651 [00:00<00:00, 108479.96it/s] 75%|███████▌  | 66608/88651 [00:00<00:00, 110996.86it/s] 88%|████████▊ | 78331/88651 [00:00<00:00, 112795.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 112566.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5748/88651 [00:00<00:01, 57479.64it/s] 15%|█▌        | 13471/88651 [00:00<00:01, 61945.75it/s] 24%|██▍       | 21406/88651 [00:00<00:01, 66308.42it/s] 33%|███▎      | 29509/88651 [00:00<00:00, 70129.38it/s] 43%|████▎     | 38143/88651 [00:00<00:00, 74264.03it/s] 54%|█████▎    | 47466/88651 [00:00<00:00, 79090.22it/s] 64%|██████▍   | 56675/88651 [00:00<00:00, 82585.85it/s] 74%|███████▍  | 65472/88651 [00:00<00:00, 84129.88it/s] 84%|████████▎ | 74199/88651 [00:00<00:00, 84876.62it/s] 93%|█████████▎| 82555/88651 [00:01<00:00, 84212.06it/s]100%|██████████| 88651/88651 [00:01<00:00, 79436.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5607/88651 [00:00<00:01, 48528.74it/s] 15%|█▍        | 13155/88651 [00:00<00:01, 53658.85it/s] 28%|██▊       | 24597/88651 [00:00<00:01, 63827.12it/s] 37%|███▋      | 33151/88651 [00:00<00:00, 69087.56it/s] 50%|█████     | 44372/88651 [00:00<00:00, 78090.09it/s] 61%|██████    | 53803/88651 [00:00<00:00, 81977.71it/s] 71%|███████   | 63155/88651 [00:00<00:00, 84223.14it/s] 83%|████████▎ | 73470/88651 [00:00<00:00, 89127.84it/s] 97%|█████████▋| 85769/88651 [00:00<00:00, 97152.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 93262.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11620/88651 [00:00<00:00, 116199.56it/s] 26%|██▋       | 23299/88651 [00:00<00:00, 116374.27it/s] 40%|███▉      | 35052/88651 [00:00<00:00, 116717.88it/s] 53%|█████▎    | 47051/88651 [00:00<00:00, 117677.60it/s] 66%|██████▋   | 58939/88651 [00:00<00:00, 118035.29it/s] 80%|████████  | 71010/88651 [00:00<00:00, 118823.45it/s] 93%|█████████▎| 82877/88651 [00:00<00:00, 118777.24it/s]100%|██████████| 88651/88651 [00:00<00:00, 118569.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11221/88651 [00:00<00:00, 112201.55it/s] 26%|██▌       | 22877/88651 [00:00<00:00, 113473.87it/s] 39%|███▉      | 34728/88651 [00:00<00:00, 114936.83it/s] 52%|█████▏    | 45974/88651 [00:00<00:00, 114179.86it/s] 65%|██████▌   | 57882/88651 [00:00<00:00, 115606.26it/s] 78%|███████▊  | 69259/88651 [00:00<00:00, 115047.56it/s] 92%|█████████▏| 81451/88651 [00:00<00:00, 117025.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 116808.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7739/88651 [00:00<00:01, 75760.63it/s] 14%|█▍        | 12733/88651 [00:00<00:01, 63622.70it/s] 19%|█▊        | 16469/88651 [00:00<00:01, 52163.63it/s] 32%|███▏      | 28298/88651 [00:00<00:00, 62674.15it/s] 48%|████▊     | 42182/88651 [00:00<00:00, 75020.36it/s] 61%|██████    | 53728/88651 [00:00<00:00, 83828.45it/s] 75%|███████▍  | 66118/88651 [00:00<00:00, 92835.72it/s] 86%|████████▌ | 76284/88651 [00:00<00:00, 87539.55it/s] 97%|█████████▋| 85769/88651 [00:00<00:00, 89611.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 91390.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9825/88651 [00:00<00:01, 75665.67it/s] 17%|█▋        | 14856/88651 [00:00<00:01, 65726.95it/s] 24%|██▎       | 20846/88651 [00:00<00:01, 63862.69it/s] 29%|██▉       | 25839/88651 [00:00<00:01, 58929.37it/s] 40%|████      | 35501/88651 [00:00<00:00, 66739.27it/s] 47%|████▋     | 41392/88651 [00:00<00:00, 50748.83it/s] 60%|██████    | 53200/88651 [00:00<00:00, 61221.28it/s] 73%|███████▎  | 64819/88651 [00:00<00:00, 71346.78it/s] 84%|████████▍ | 74461/88651 [00:01<00:00, 77383.65it/s] 94%|█████████▍| 83279/88651 [00:01<00:00, 72348.22it/s]100%|██████████| 88651/88651 [00:01<00:00, 74107.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▎         | 3152/88651 [00:00<00:03, 26909.28it/s]  8%|▊         | 7262/88651 [00:00<00:02, 30018.41it/s] 21%|██        | 18678/88651 [00:00<00:01, 38540.00it/s] 27%|██▋       | 24021/88651 [00:00<00:01, 42055.26it/s] 33%|███▎      | 28903/88651 [00:00<00:01, 43516.61it/s] 44%|████▍     | 39291/88651 [00:00<00:00, 52703.67it/s] 53%|█████▎    | 46635/88651 [00:00<00:00, 57580.03it/s] 60%|██████    | 53390/88651 [00:00<00:00, 51083.04it/s] 67%|██████▋   | 59332/88651 [00:00<00:00, 53262.10it/s] 74%|███████▍  | 65601/88651 [00:01<00:00, 54739.98it/s] 81%|████████  | 71511/88651 [00:01<00:00, 55659.80it/s] 87%|████████▋ | 77449/88651 [00:01<00:00, 56724.83it/s] 94%|█████████▍| 83343/88651 [00:01<00:00, 57207.38it/s]100%|██████████| 88651/88651 [00:01<00:00, 59640.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6758/88651 [00:00<00:01, 67578.13it/s] 19%|█▊        | 16575/88651 [00:00<00:00, 74546.21it/s] 29%|██▉       | 25686/88651 [00:00<00:00, 77325.62it/s] 42%|████▏     | 37653/88651 [00:00<00:00, 86508.21it/s] 55%|█████▌    | 49186/88651 [00:00<00:00, 93518.18it/s] 69%|██████▉   | 61236/88651 [00:00<00:00, 100251.99it/s] 80%|████████  | 70952/88651 [00:00<00:00, 95931.28it/s]  94%|█████████▍| 83134/88651 [00:00<00:00, 102462.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 102096.62it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11837/88651 [00:00<00:00, 118368.98it/s] 27%|██▋       | 23660/88651 [00:00<00:00, 118325.42it/s] 40%|████      | 35577/88651 [00:00<00:00, 118576.81it/s] 49%|████▉     | 43375/88651 [00:00<00:00, 102351.34it/s] 58%|█████▊    | 51161/88651 [00:00<00:00, 82866.77it/s]  66%|██████▌   | 58333/88651 [00:00<00:00, 74453.25it/s] 74%|███████▎  | 65159/88651 [00:00<00:00, 71485.04it/s] 81%|████████  | 71900/88651 [00:00<00:00, 66077.35it/s] 88%|████████▊ | 78303/88651 [00:00<00:00, 61864.83it/s] 95%|█████████▌| 84401/88651 [00:01<00:00, 60612.49it/s]100%|██████████| 88651/88651 [00:01<00:00, 76000.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16061/88651 [00:00<00:00, 160608.62it/s] 39%|███▉      | 34890/88651 [00:00<00:00, 168018.93it/s] 61%|██████    | 53802/88651 [00:00<00:00, 173836.50it/s] 82%|████████▏ | 72684/88651 [00:00<00:00, 178074.50it/s]100%|██████████| 88651/88651 [00:00<00:00, 183838.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17192/88651 [00:00<00:00, 171917.29it/s] 32%|███▏      | 28575/88651 [00:00<00:00, 149091.27it/s] 45%|████▌     | 40294/88651 [00:00<00:00, 137833.45it/s] 68%|██████▊   | 60623/88651 [00:00<00:00, 152570.81it/s] 92%|█████████▏| 81321/88651 [00:00<00:00, 165631.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 166265.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13572/88651 [00:00<00:00, 135719.81it/s] 34%|███▍      | 30113/88651 [00:00<00:00, 143443.98it/s] 52%|█████▏    | 46142/88651 [00:00<00:00, 148113.33it/s] 71%|███████   | 62643/88651 [00:00<00:00, 152804.99it/s] 90%|████████▉ | 79776/88651 [00:00<00:00, 157927.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 159744.07it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12488/88651 [00:00<00:00, 124877.44it/s] 37%|███▋      | 32436/88651 [00:00<00:00, 140051.93it/s] 57%|█████▋    | 50722/88651 [00:00<00:00, 150630.11it/s] 79%|███████▉  | 70307/88651 [00:00<00:00, 161838.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 179655.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19432/88651 [00:00<00:00, 194319.72it/s] 44%|████▍     | 39340/88651 [00:00<00:00, 195723.51it/s] 67%|██████▋   | 58967/88651 [00:00<00:00, 195886.07it/s] 89%|████████▉ | 79021/88651 [00:00<00:00, 197258.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 198468.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14774/88651 [00:00<00:00, 145586.69it/s] 26%|██▌       | 22852/88651 [00:00<00:00, 117343.73it/s] 47%|████▋     | 41513/88651 [00:00<00:00, 132047.16it/s] 68%|██████▊   | 60494/88651 [00:00<00:00, 145312.45it/s] 91%|█████████ | 80330/88651 [00:00<00:00, 157986.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 163361.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19583/88651 [00:00<00:00, 195829.25it/s] 41%|████      | 36523/88651 [00:00<00:00, 187069.79it/s] 58%|█████▊    | 51068/88651 [00:00<00:00, 172279.80it/s] 80%|████████  | 71357/88651 [00:00<00:00, 180446.88it/s]100%|██████████| 88651/88651 [00:00<00:00, 182744.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13802/88651 [00:00<00:00, 138015.52it/s] 32%|███▏      | 28310/88651 [00:00<00:00, 140059.47it/s] 48%|████▊     | 42888/88651 [00:00<00:00, 141725.60it/s] 65%|██████▌   | 57653/88651 [00:00<00:00, 143450.64it/s] 81%|████████  | 71654/88651 [00:00<00:00, 142400.55it/s] 99%|█████████▉| 87627/88651 [00:00<00:00, 147190.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 146286.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19544/88651 [00:00<00:00, 195430.87it/s] 44%|████▎     | 38746/88651 [00:00<00:00, 194392.76it/s] 67%|██████▋   | 59054/88651 [00:00<00:00, 196919.52it/s] 90%|████████▉ | 79468/88651 [00:00<00:00, 199031.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 197536.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14696/88651 [00:00<00:00, 146955.23it/s] 33%|███▎      | 29334/88651 [00:00<00:00, 146781.81it/s] 50%|█████     | 44371/88651 [00:00<00:00, 147837.60it/s] 68%|██████▊   | 60595/88651 [00:00<00:00, 151878.05it/s] 92%|█████████▏| 81246/88651 [00:00<00:00, 164970.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 164605.24it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18227/88651 [00:00<00:00, 182263.22it/s] 42%|████▏     | 37319/88651 [00:00<00:00, 184774.82it/s] 64%|██████▎   | 56303/88651 [00:00<00:00, 186264.64it/s] 78%|███████▊  | 68993/88651 [00:00<00:00, 163337.19it/s] 95%|█████████▌| 84382/88651 [00:00<00:00, 160382.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 168311.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 11998/88651 [00:00<00:00, 119979.83it/s] 22%|██▏       | 19885/88651 [00:00<00:00, 98998.77it/s]  40%|████      | 35471/88651 [00:00<00:00, 111164.24it/s] 52%|█████▏    | 46095/88651 [00:00<00:00, 109637.14it/s] 62%|██████▏   | 54823/88651 [00:00<00:00, 96864.94it/s]  76%|███████▋  | 67637/88651 [00:00<00:00, 104517.54it/s] 96%|█████████▌| 85004/88651 [00:00<00:00, 118695.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 117204.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3812/88651 [00:00<00:02, 36702.03it/s] 15%|█▍        | 13170/88651 [00:00<00:01, 44886.43it/s] 29%|██▉       | 26145/88651 [00:00<00:01, 55843.68it/s] 45%|████▍     | 39758/88651 [00:00<00:00, 67848.08it/s] 59%|█████▉    | 52086/88651 [00:00<00:00, 78426.87it/s] 80%|████████  | 71187/88651 [00:00<00:00, 95273.34it/s] 96%|█████████▌| 84799/88651 [00:00<00:00, 104563.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 112092.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9778/88651 [00:00<00:00, 97777.76it/s] 23%|██▎       | 20220/88651 [00:00<00:00, 99679.67it/s] 46%|████▌     | 40540/88651 [00:00<00:00, 117662.62it/s] 68%|██████▊   | 60016/88651 [00:00<00:00, 133517.92it/s] 89%|████████▉ | 78840/88651 [00:00<00:00, 146273.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 160931.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18007/88651 [00:00<00:00, 180064.16it/s] 41%|████      | 36350/88651 [00:00<00:00, 181060.28it/s] 62%|██████▏   | 54923/88651 [00:00<00:00, 182435.12it/s] 82%|████████▏ | 73026/88651 [00:00<00:00, 182009.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 183010.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20056/88651 [00:00<00:00, 200557.32it/s] 45%|████▍     | 39829/88651 [00:00<00:00, 199699.00it/s] 68%|██████▊   | 59851/88651 [00:00<00:00, 199854.93it/s] 89%|████████▉ | 78706/88651 [00:00<00:00, 196323.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 195715.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15457/88651 [00:00<00:00, 154566.46it/s] 41%|████      | 36239/88651 [00:00<00:00, 167437.75it/s] 64%|██████▎   | 56399/88651 [00:00<00:00, 176405.45it/s] 85%|████████▍ | 75091/88651 [00:00<00:00, 179433.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 185241.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18119/88651 [00:00<00:00, 181181.97it/s] 42%|████▏     | 37487/88651 [00:00<00:00, 184758.09it/s] 64%|██████▍   | 56938/88651 [00:00<00:00, 187578.57it/s] 86%|████████▋ | 76487/88651 [00:00<00:00, 189882.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 192494.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20217/88651 [00:00<00:00, 202163.44it/s] 47%|████▋     | 41526/88651 [00:00<00:00, 205320.70it/s] 71%|███████▏  | 63258/88651 [00:00<00:00, 208777.92it/s] 95%|█████████▍| 84054/88651 [00:00<00:00, 208530.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 209334.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18642/88651 [00:00<00:00, 186414.84it/s] 43%|████▎     | 38389/88651 [00:00<00:00, 189598.34it/s] 68%|██████▊   | 59843/88651 [00:00<00:00, 196448.55it/s] 92%|█████████▏| 81913/88651 [00:00<00:00, 203143.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 203452.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21065/88651 [00:00<00:00, 210644.68it/s] 49%|████▊     | 43142/88651 [00:00<00:00, 213582.71it/s] 70%|██████▉   | 61861/88651 [00:00<00:00, 204912.49it/s] 91%|█████████ | 80805/88651 [00:00<00:00, 200010.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 201118.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17396/88651 [00:00<00:00, 173954.36it/s] 41%|████      | 36199/88651 [00:00<00:00, 177949.42it/s] 61%|██████    | 54077/88651 [00:00<00:00, 178195.29it/s] 81%|████████  | 71464/88651 [00:00<00:00, 176872.88it/s]100%|██████████| 88651/88651 [00:00<00:00, 179975.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14878/88651 [00:00<00:00, 148772.69it/s] 33%|███▎      | 29265/88651 [00:00<00:00, 147266.66it/s] 49%|████▉     | 43757/88651 [00:00<00:00, 146552.11it/s] 66%|██████▌   | 58324/88651 [00:00<00:00, 146285.25it/s] 83%|████████▎ | 73607/88651 [00:00<00:00, 148186.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 150527.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19436/88651 [00:00<00:00, 194356.01it/s] 36%|███▌      | 31538/88651 [00:00<00:00, 156986.15it/s] 44%|████▍     | 38871/88651 [00:00<00:00, 116002.07it/s] 55%|█████▌    | 49057/88651 [00:00<00:00, 111362.69it/s] 65%|██████▍   | 57220/88651 [00:00<00:00, 96808.06it/s]  75%|███████▌  | 66552/88651 [00:00<00:00, 95733.75it/s] 86%|████████▌ | 75943/88651 [00:00<00:00, 88213.95it/s] 95%|█████████▍| 84206/88651 [00:00<00:00, 86460.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 99301.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8050/88651 [00:00<00:01, 79323.55it/s] 12%|█▏        | 10684/88651 [00:00<00:01, 49468.82it/s] 26%|██▌       | 23046/88651 [00:00<00:01, 60323.30it/s] 32%|███▏      | 28474/88651 [00:00<00:01, 54447.98it/s] 53%|█████▎    | 47374/88651 [00:00<00:00, 69234.66it/s] 67%|██████▋   | 59646/88651 [00:00<00:00, 79647.31it/s] 83%|████████▎ | 73193/88651 [00:00<00:00, 90881.70it/s] 95%|█████████▌| 84372/88651 [00:00<00:00, 79839.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 94500.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5690/88651 [00:00<00:01, 56896.39it/s] 20%|██        | 17899/88651 [00:00<00:01, 67749.03it/s] 34%|███▎      | 29782/88651 [00:00<00:00, 77778.48it/s] 48%|████▊     | 42438/88651 [00:00<00:00, 87946.77it/s] 68%|██████▊   | 59998/88651 [00:00<00:00, 103435.63it/s] 89%|████████▉ | 79275/88651 [00:00<00:00, 120137.99it/s]100%|██████████| 88651/88651 [00:00<00:00, 136531.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20002/88651 [00:00<00:00, 200016.38it/s] 45%|████▌     | 40158/88651 [00:00<00:00, 200475.04it/s] 67%|██████▋   | 59787/88651 [00:00<00:00, 199199.23it/s] 89%|████████▉ | 79092/88651 [00:00<00:00, 197313.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 197944.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19502/88651 [00:00<00:00, 195017.86it/s] 43%|████▎     | 38197/88651 [00:00<00:00, 192524.10it/s] 65%|██████▍   | 57215/88651 [00:00<00:00, 191813.50it/s] 85%|████████▌ | 75510/88651 [00:00<00:00, 189065.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 188861.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18045/88651 [00:00<00:00, 180442.86it/s] 41%|████      | 36369/88651 [00:00<00:00, 181272.27it/s] 62%|██████▏   | 55268/88651 [00:00<00:00, 183519.36it/s] 83%|████████▎ | 73915/88651 [00:00<00:00, 184392.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 184749.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17546/88651 [00:00<00:00, 175200.77it/s] 42%|████▏     | 37265/88651 [00:00<00:00, 181262.56it/s] 65%|██████▌   | 57749/88651 [00:00<00:00, 187744.70it/s] 88%|████████▊ | 78160/88651 [00:00<00:00, 192369.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 196343.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18638/88651 [00:00<00:00, 186377.07it/s] 43%|████▎     | 37749/88651 [00:00<00:00, 187771.28it/s] 65%|██████▌   | 57792/88651 [00:00<00:00, 191395.59it/s] 87%|████████▋ | 77364/88651 [00:00<00:00, 192671.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 194731.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17648/88651 [00:00<00:00, 176473.86it/s] 41%|████      | 36539/88651 [00:00<00:00, 180027.52it/s] 64%|██████▎   | 56416/88651 [00:00<00:00, 185267.52it/s] 85%|████████▌ | 75796/88651 [00:00<00:00, 187747.11it/s]100%|██████████| 88651/88651 [00:00<00:00, 189064.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15043/88651 [00:00<00:00, 150427.27it/s] 37%|███▋      | 33178/88651 [00:00<00:00, 158535.17it/s] 58%|█████▊    | 51788/88651 [00:00<00:00, 165907.18it/s] 73%|███████▎  | 64818/88651 [00:00<00:00, 153335.23it/s] 92%|█████████▏| 81250/88651 [00:00<00:00, 156472.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 164339.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17325/88651 [00:00<00:00, 173247.27it/s] 40%|████      | 35749/88651 [00:00<00:00, 176403.93it/s] 61%|██████▏   | 54353/88651 [00:00<00:00, 179185.86it/s] 82%|████████▏ | 72807/88651 [00:00<00:00, 180757.98it/s]100%|██████████| 88651/88651 [00:00<00:00, 178834.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13836/88651 [00:00<00:00, 138349.91it/s] 32%|███▏      | 28140/88651 [00:00<00:00, 139722.70it/s] 50%|█████     | 44347/88651 [00:00<00:00, 145748.54it/s] 68%|██████▊   | 60042/88651 [00:00<00:00, 148936.04it/s] 82%|████████▏ | 72484/88651 [00:00<00:00, 140622.77it/s] 95%|█████████▌| 84363/88651 [00:00<00:00, 114031.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 125860.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13522/88651 [00:00<00:00, 135216.58it/s] 34%|███▍      | 30042/88651 [00:00<00:00, 143001.62it/s] 56%|█████▌    | 49611/88651 [00:00<00:00, 155565.47it/s] 78%|███████▊  | 69522/88651 [00:00<00:00, 166487.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 179047.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19139/88651 [00:00<00:00, 191380.60it/s] 43%|████▎     | 38519/88651 [00:00<00:00, 192099.97it/s] 65%|██████▌   | 58054/88651 [00:00<00:00, 193062.12it/s] 88%|████████▊ | 77705/88651 [00:00<00:00, 194082.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 194041.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17986/88651 [00:00<00:00, 179858.46it/s] 40%|███▉      | 35164/88651 [00:00<00:00, 177355.38it/s] 54%|█████▍    | 47993/88651 [00:00<00:00, 159099.43it/s] 69%|██████▉   | 61455/88651 [00:00<00:00, 150867.89it/s] 82%|████████▏ | 72564/88651 [00:00<00:00, 120447.73it/s] 93%|█████████▎| 82798/88651 [00:00<00:00, 98519.96it/s] 100%|██████████| 88651/88651 [00:00<00:00, 114529.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14139/88651 [00:00<00:00, 141384.74it/s] 23%|██▎       | 20457/88651 [00:00<00:00, 100944.61it/s] 28%|██▊       | 25243/88651 [00:00<00:01, 62078.30it/s]  39%|███▊      | 34188/88651 [00:00<00:00, 68328.41it/s] 52%|█████▏    | 46160/88651 [00:00<00:00, 78427.83it/s] 67%|██████▋   | 59419/88651 [00:00<00:00, 89380.54it/s] 82%|████████▏ | 72383/88651 [00:00<00:00, 98562.28it/s] 96%|█████████▌| 84683/88651 [00:00<00:00, 103704.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 94608.20it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17233/88651 [00:00<00:00, 172325.64it/s] 25%|██▌       | 22403/88651 [00:00<00:00, 95633.75it/s]  37%|███▋      | 33238/88651 [00:00<00:00, 99122.38it/s] 52%|█████▏    | 46186/88651 [00:00<00:00, 106621.09it/s] 64%|██████▍   | 56631/88651 [00:00<00:00, 105957.99it/s] 78%|███████▊  | 69590/88651 [00:00<00:00, 112089.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 124807.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16616/88651 [00:00<00:00, 166158.57it/s] 39%|███▉      | 34635/88651 [00:00<00:00, 170132.88it/s] 60%|██████    | 53514/88651 [00:00<00:00, 174672.80it/s] 82%|████████▏ | 72932/88651 [00:00<00:00, 180098.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 181691.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15405/88651 [00:00<00:00, 154048.68it/s] 39%|███▉      | 34466/88651 [00:00<00:00, 163452.78it/s] 61%|██████    | 54063/88651 [00:00<00:00, 172015.35it/s] 82%|████████▏ | 73066/88651 [00:00<00:00, 177049.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 181312.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17205/88651 [00:00<00:00, 172042.37it/s] 36%|███▋      | 32310/88651 [00:00<00:00, 165156.05it/s] 53%|█████▎    | 47248/88651 [00:00<00:00, 160081.94it/s] 70%|███████   | 62106/88651 [00:00<00:00, 156447.49it/s] 86%|████████▌ | 76218/88651 [00:00<00:00, 151507.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 148535.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 12919/88651 [00:00<00:00, 129187.04it/s] 30%|██▉       | 26550/88651 [00:00<00:00, 131239.22it/s] 51%|█████     | 44859/88651 [00:00<00:00, 143423.48it/s] 71%|███████   | 62588/88651 [00:00<00:00, 152139.63it/s] 92%|█████████▏| 81372/88651 [00:00<00:00, 161337.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 164511.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14307/88651 [00:00<00:00, 143062.63it/s] 33%|███▎      | 29118/88651 [00:00<00:00, 144538.77it/s] 50%|████▉     | 44178/88651 [00:00<00:00, 146303.29it/s] 67%|██████▋   | 59247/88651 [00:00<00:00, 147591.36it/s] 84%|████████▍ | 74258/88651 [00:00<00:00, 148335.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 148273.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14495/88651 [00:00<00:00, 144944.95it/s] 33%|███▎      | 29036/88651 [00:00<00:00, 145083.16it/s] 53%|█████▎    | 46610/88651 [00:00<00:00, 153093.45it/s] 75%|███████▍  | 66151/88651 [00:00<00:00, 163730.26it/s] 98%|█████████▊| 86540/88651 [00:00<00:00, 174010.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 173629.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17563/88651 [00:00<00:00, 175626.40it/s] 41%|████      | 35993/88651 [00:00<00:00, 178139.24it/s] 61%|██████    | 54144/88651 [00:00<00:00, 179137.05it/s] 81%|████████  | 71802/88651 [00:00<00:00, 178361.98it/s]100%|██████████| 88651/88651 [00:00<00:00, 180264.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18833/88651 [00:00<00:00, 188329.73it/s] 43%|████▎     | 38100/88651 [00:00<00:00, 189608.66it/s] 65%|██████▍   | 57381/88651 [00:00<00:00, 190557.09it/s] 86%|████████▌ | 75972/88651 [00:00<00:00, 189138.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 189887.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13743/88651 [00:00<00:00, 137427.84it/s] 32%|███▏      | 28388/88651 [00:00<00:00, 140015.03it/s] 49%|████▉     | 43429/88651 [00:00<00:00, 142976.68it/s] 66%|██████▌   | 58481/88651 [00:00<00:00, 145158.62it/s] 83%|████████▎ | 73713/88651 [00:00<00:00, 147234.74it/s]100%|█████████▉| 88255/88651 [00:00<00:00, 146684.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 147031.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14557/88651 [00:00<00:00, 145563.54it/s] 33%|███▎      | 29518/88651 [00:00<00:00, 146752.81it/s] 55%|█████▌    | 49135/88651 [00:00<00:00, 158749.88it/s] 72%|███████▏  | 63640/88651 [00:00<00:00, 154374.19it/s] 90%|████████▉ | 79501/88651 [00:00<00:00, 155620.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 159793.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12739/88651 [00:00<00:00, 127381.92it/s] 28%|██▊       | 25169/88651 [00:00<00:00, 126438.42it/s] 43%|████▎     | 37853/88651 [00:00<00:00, 126557.85it/s] 61%|██████    | 53965/88651 [00:00<00:00, 131990.96it/s] 72%|███████▏  | 64167/88651 [00:00<00:00, 107424.94it/s] 83%|████████▎ | 73556/88651 [00:00<00:00, 85008.00it/s]  97%|█████████▋| 86092/88651 [00:00<00:00, 94093.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 106679.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9776/88651 [00:00<00:00, 97757.53it/s] 23%|██▎       | 20198/88651 [00:00<00:00, 99608.51it/s] 39%|███▉      | 34483/88651 [00:00<00:00, 109557.52it/s] 55%|█████▌    | 48893/88651 [00:00<00:00, 118044.91it/s] 66%|██████▋   | 58754/88651 [00:00<00:00, 110661.20it/s] 82%|████████▏ | 72308/88651 [00:00<00:00, 117108.77it/s] 96%|█████████▌| 85130/88651 [00:00<00:00, 120232.80it/s]100%|██████████| 88651/88651 [00:00<00:00, 121350.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14619/88651 [00:00<00:00, 146178.99it/s] 31%|███       | 27158/88651 [00:00<00:00, 137626.24it/s] 38%|███▊      | 33861/88651 [00:00<00:00, 94036.19it/s]  59%|█████▉    | 52266/88651 [00:00<00:00, 110205.09it/s] 80%|████████  | 71025/88651 [00:00<00:00, 125768.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 142625.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17428/88651 [00:00<00:00, 174276.01it/s] 40%|████      | 35475/88651 [00:00<00:00, 176087.92it/s] 57%|█████▋    | 50227/88651 [00:00<00:00, 166418.13it/s] 72%|███████▏  | 63636/88651 [00:00<00:00, 155189.14it/s] 91%|█████████▏| 81073/88651 [00:00<00:00, 160483.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 164213.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16353/88651 [00:00<00:00, 163528.21it/s] 38%|███▊      | 33800/88651 [00:00<00:00, 166662.78it/s] 59%|█████▉    | 52305/88651 [00:00<00:00, 171782.39it/s] 80%|███████▉  | 70557/88651 [00:00<00:00, 174867.37it/s]100%|██████████| 88651/88651 [00:00<00:00, 177287.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18233/88651 [00:00<00:00, 182328.00it/s] 41%|████      | 36061/88651 [00:00<00:00, 181092.77it/s] 62%|██████▏   | 54568/88651 [00:00<00:00, 182267.41it/s] 84%|████████▍ | 74430/88651 [00:00<00:00, 186882.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 186887.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18783/88651 [00:00<00:00, 187829.73it/s] 42%|████▏     | 37155/88651 [00:00<00:00, 186577.01it/s] 64%|██████▎   | 56334/88651 [00:00<00:00, 187232.10it/s] 86%|████████▌ | 76020/88651 [00:00<00:00, 190019.12it/s]100%|██████████| 88651/88651 [00:00<00:00, 190727.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18569/88651 [00:00<00:00, 185682.21it/s] 43%|████▎     | 37760/88651 [00:00<00:00, 187505.77it/s] 65%|██████▍   | 57289/88651 [00:00<00:00, 189773.04it/s] 86%|████████▌ | 76019/88651 [00:00<00:00, 189024.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 189711.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14184/88651 [00:00<00:00, 141834.72it/s] 31%|███▏      | 27725/88651 [00:00<00:00, 139826.16it/s] 48%|████▊     | 42740/88651 [00:00<00:00, 142769.01it/s] 65%|██████▌   | 57768/88651 [00:00<00:00, 144940.51it/s] 84%|████████▎ | 74123/88651 [00:00<00:00, 150061.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 154799.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18560/88651 [00:00<00:00, 185593.10it/s] 42%|████▏     | 37163/88651 [00:00<00:00, 185723.87it/s] 63%|██████▎   | 56206/88651 [00:00<00:00, 187109.84it/s] 85%|████████▌ | 75567/88651 [00:00<00:00, 189012.86it/s]100%|██████████| 88651/88651 [00:00<00:00, 189914.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14460/88651 [00:00<00:00, 144596.35it/s] 36%|███▋      | 32160/88651 [00:00<00:00, 152997.62it/s] 58%|█████▊    | 51195/88651 [00:00<00:00, 162566.48it/s] 79%|███████▉  | 70172/88651 [00:00<00:00, 169871.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 177606.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14262/88651 [00:00<00:00, 142612.32it/s] 36%|███▌      | 32125/88651 [00:00<00:00, 151793.73it/s] 55%|█████▍    | 48448/88651 [00:00<00:00, 155051.72it/s] 69%|██████▉   | 61546/88651 [00:00<00:00, 146947.41it/s] 87%|████████▋ | 77183/88651 [00:00<00:00, 149651.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 154307.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7767/88651 [00:00<00:01, 77661.00it/s] 28%|██▊       | 24435/88651 [00:00<00:00, 92477.63it/s] 49%|████▉     | 43225/88651 [00:00<00:00, 109098.09it/s] 70%|███████   | 62201/88651 [00:00<00:00, 125043.73it/s] 91%|█████████ | 80562/88651 [00:00<00:00, 138274.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 163022.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18363/88651 [00:00<00:00, 183628.42it/s] 42%|████▏     | 37323/88651 [00:00<00:00, 185377.22it/s] 63%|██████▎   | 56255/88651 [00:00<00:00, 186542.49it/s] 77%|███████▋  | 68616/88651 [00:00<00:00, 137782.71it/s] 96%|█████████▌| 85243/88651 [00:00<00:00, 145246.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 155068.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17405/88651 [00:00<00:00, 174039.79it/s] 32%|███▏      | 28033/88651 [00:00<00:00, 141321.48it/s] 39%|███▉      | 34635/88651 [00:00<00:00, 100182.32it/s] 49%|████▉     | 43582/88651 [00:00<00:00, 96708.57it/s]  57%|█████▋    | 50793/88651 [00:00<00:00, 86954.73it/s] 68%|██████▊   | 59909/88651 [00:00<00:00, 87620.78it/s] 76%|███████▌  | 67578/88651 [00:00<00:00, 73584.60it/s] 84%|████████▍ | 74554/88651 [00:00<00:00, 67218.03it/s] 91%|█████████▏| 81115/88651 [00:01<00:00, 64231.14it/s]100%|██████████| 88651/88651 [00:01<00:00, 83871.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8729/88651 [00:00<00:00, 87286.34it/s] 21%|██        | 18393/88651 [00:00<00:00, 89895.52it/s] 34%|███▎      | 29708/88651 [00:00<00:00, 95801.08it/s] 49%|████▉     | 43806/88651 [00:00<00:00, 105990.68it/s] 63%|██████▎   | 55970/88651 [00:00<00:00, 107971.79it/s] 74%|███████▍  | 65604/88651 [00:00<00:00, 88082.43it/s]  84%|████████▎ | 74196/88651 [00:00<00:00, 73264.85it/s] 98%|█████████▊| 86840/88651 [00:00<00:00, 83843.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 94307.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12277/88651 [00:00<00:00, 122764.56it/s] 35%|███▍      | 30627/88651 [00:00<00:00, 136296.30it/s] 51%|█████▏    | 45528/88651 [00:00<00:00, 139874.50it/s] 73%|███████▎  | 64443/88651 [00:00<00:00, 151732.49it/s] 95%|█████████▍| 84125/88651 [00:00<00:00, 162929.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 169504.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18750/88651 [00:00<00:00, 187497.94it/s] 44%|████▍     | 38862/88651 [00:00<00:00, 191384.24it/s] 62%|██████▏   | 54654/88651 [00:00<00:00, 179942.96it/s] 75%|███████▍  | 66372/88651 [00:00<00:00, 134348.40it/s] 95%|█████████▍| 84066/88651 [00:00<00:00, 144803.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 157275.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16224/88651 [00:00<00:00, 162239.77it/s] 38%|███▊      | 34074/88651 [00:00<00:00, 166796.08it/s] 58%|█████▊    | 51706/88651 [00:00<00:00, 169542.44it/s] 78%|███████▊  | 69337/88651 [00:00<00:00, 171516.98it/s] 98%|█████████▊| 87116/88651 [00:00<00:00, 173350.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 174284.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16481/88651 [00:00<00:00, 164805.05it/s] 39%|███▉      | 34724/88651 [00:00<00:00, 169722.74it/s] 59%|█████▉    | 52521/88651 [00:00<00:00, 172113.91it/s] 79%|███████▉  | 70284/88651 [00:00<00:00, 173731.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 177444.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17889/88651 [00:00<00:00, 178881.21it/s] 41%|████▏     | 36585/88651 [00:00<00:00, 181229.37it/s] 62%|██████▏   | 55209/88651 [00:00<00:00, 182702.40it/s] 84%|████████▎ | 74146/88651 [00:00<00:00, 184650.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 185331.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14180/88651 [00:00<00:00, 141796.42it/s] 32%|███▏      | 28755/88651 [00:00<00:00, 142957.52it/s] 49%|████▊     | 43170/88651 [00:00<00:00, 143312.00it/s] 65%|██████▌   | 57975/88651 [00:00<00:00, 144698.87it/s] 82%|████████▏ | 72539/88651 [00:00<00:00, 144979.35it/s] 99%|█████████▉| 87834/88651 [00:00<00:00, 147280.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 145683.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19388/88651 [00:00<00:00, 193870.94it/s] 39%|███▊      | 34297/88651 [00:00<00:00, 175285.66it/s] 55%|█████▍    | 48489/88651 [00:00<00:00, 163736.16it/s] 74%|███████▍  | 65439/88651 [00:00<00:00, 165422.85it/s] 96%|█████████▌| 84890/88651 [00:00<00:00, 173192.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 169201.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14490/88651 [00:00<00:00, 144889.77it/s] 33%|███▎      | 29074/88651 [00:00<00:00, 145173.37it/s] 49%|████▉     | 43826/88651 [00:00<00:00, 145869.32it/s] 66%|██████▌   | 58686/88651 [00:00<00:00, 146677.04it/s] 83%|████████▎ | 73471/88651 [00:00<00:00, 147025.55it/s]100%|█████████▉| 88285/88651 [00:00<00:00, 147355.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 147018.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14360/88651 [00:00<00:00, 143598.43it/s] 35%|███▌      | 31207/88651 [00:00<00:00, 150251.49it/s] 57%|█████▋    | 50860/88651 [00:00<00:00, 161672.54it/s] 79%|███████▉  | 70301/88651 [00:00<00:00, 170274.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 178519.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19084/88651 [00:00<00:00, 190833.81it/s] 42%|████▏     | 37510/88651 [00:00<00:00, 188812.44it/s] 64%|██████▍   | 56942/88651 [00:00<00:00, 190431.17it/s] 87%|████████▋ | 76940/88651 [00:00<00:00, 193197.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 189689.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12176/88651 [00:00<00:00, 121757.50it/s] 26%|██▌       | 22959/88651 [00:00<00:00, 117213.42it/s] 41%|████      | 35924/88651 [00:00<00:00, 120686.32it/s] 63%|██████▎   | 55853/88651 [00:00<00:00, 136882.45it/s] 78%|███████▊  | 68943/88651 [00:00<00:00, 135028.52it/s] 91%|█████████▏| 80948/88651 [00:00<00:00, 108134.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 118246.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12426/88651 [00:00<00:00, 124257.75it/s] 19%|█▉        | 17014/88651 [00:00<00:00, 82152.66it/s]  32%|███▏      | 28339/88651 [00:00<00:00, 89526.34it/s] 46%|████▌     | 40846/88651 [00:00<00:00, 97869.42it/s] 63%|██████▎   | 56156/88651 [00:00<00:00, 109744.98it/s] 77%|███████▋  | 68359/88651 [00:00<00:00, 113074.51it/s] 89%|████████▉ | 79186/88651 [00:00<00:00, 106573.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 114859.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13119/88651 [00:00<00:00, 131185.12it/s] 20%|██        | 18131/88651 [00:00<00:00, 85429.72it/s]  30%|██▉       | 26493/88651 [00:00<00:00, 84877.17it/s] 40%|███▉      | 35400/88651 [00:00<00:00, 85535.60it/s] 54%|█████▍    | 48049/88651 [00:00<00:00, 94737.55it/s] 76%|███████▌  | 67286/88651 [00:00<00:00, 111752.69it/s] 97%|█████████▋| 86138/88651 [00:00<00:00, 127303.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 122756.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18186/88651 [00:00<00:00, 181852.80it/s] 42%|████▏     | 37209/88651 [00:00<00:00, 184285.21it/s] 63%|██████▎   | 55956/88651 [00:00<00:00, 185226.14it/s] 85%|████████▌ | 75428/88651 [00:00<00:00, 187972.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 188620.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19708/88651 [00:00<00:00, 197073.14it/s] 44%|████▎     | 38568/88651 [00:00<00:00, 194450.51it/s] 65%|██████▍   | 57577/88651 [00:00<00:00, 193119.73it/s] 85%|████████▍ | 75211/88651 [00:00<00:00, 187757.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 187427.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14717/88651 [00:00<00:00, 147162.42it/s] 33%|███▎      | 29040/88651 [00:00<00:00, 145958.33it/s] 50%|████▉     | 44060/88651 [00:00<00:00, 147203.44it/s] 66%|██████▌   | 58094/88651 [00:00<00:00, 145072.09it/s] 81%|████████  | 71940/88651 [00:00<00:00, 143021.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 148399.11it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15701/88651 [00:00<00:00, 157008.65it/s] 39%|███▉      | 34986/88651 [00:00<00:00, 166279.35it/s] 61%|██████    | 53964/88651 [00:00<00:00, 172694.44it/s] 82%|████████▏ | 72957/88651 [00:00<00:00, 177526.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 184344.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15469/88651 [00:00<00:00, 154682.40it/s] 40%|███▉      | 35032/88651 [00:00<00:00, 165046.16it/s] 61%|██████▏   | 54319/88651 [00:00<00:00, 172511.31it/s] 82%|████████▏ | 72457/88651 [00:00<00:00, 175079.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 184900.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19150/88651 [00:00<00:00, 191492.88it/s] 43%|████▎     | 38405/88651 [00:00<00:00, 191806.80it/s] 66%|██████▌   | 58122/88651 [00:00<00:00, 193384.65it/s] 88%|████████▊ | 77895/88651 [00:00<00:00, 194665.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 195805.23it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18270/88651 [00:00<00:00, 182671.43it/s] 42%|████▏     | 37295/88651 [00:00<00:00, 184878.32it/s] 64%|██████▎   | 56424/88651 [00:00<00:00, 186753.03it/s] 85%|████████▌ | 75694/88651 [00:00<00:00, 188496.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 188576.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12374/88651 [00:00<00:00, 123739.23it/s] 30%|██▉       | 26397/88651 [00:00<00:00, 128262.68it/s] 43%|████▎     | 38337/88651 [00:00<00:00, 125468.30it/s] 57%|█████▋    | 50632/88651 [00:00<00:00, 124701.54it/s] 73%|███████▎  | 64465/88651 [00:00<00:00, 128498.19it/s] 85%|████████▍ | 75287/88651 [00:00<00:00, 119096.49it/s] 98%|█████████▊| 87119/88651 [00:00<00:00, 118861.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 123087.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11397/88651 [00:00<00:00, 113960.87it/s] 27%|██▋       | 23686/88651 [00:00<00:00, 116498.86it/s] 43%|████▎     | 37847/88651 [00:00<00:00, 123043.75it/s] 59%|█████▉    | 52375/88651 [00:00<00:00, 128963.57it/s] 76%|███████▌  | 67312/88651 [00:00<00:00, 134474.63it/s] 93%|█████████▎| 82279/88651 [00:00<00:00, 138698.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 139296.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11861/88651 [00:00<00:00, 118606.44it/s] 29%|██▉       | 25961/88651 [00:00<00:00, 124539.98it/s] 46%|████▌     | 40593/88651 [00:00<00:00, 130359.30it/s] 63%|██████▎   | 55464/88651 [00:00<00:00, 135370.55it/s] 80%|███████▉  | 70791/88651 [00:00<00:00, 140285.33it/s] 97%|█████████▋| 86038/88651 [00:00<00:00, 143730.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 143585.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14789/88651 [00:00<00:00, 147889.08it/s] 34%|███▎      | 29820/88651 [00:00<00:00, 148606.86it/s] 51%|█████     | 44955/88651 [00:00<00:00, 149417.87it/s] 65%|██████▌   | 57730/88651 [00:00<00:00, 142181.56it/s] 80%|████████  | 71124/88651 [00:00<00:00, 139602.80it/s] 96%|█████████▌| 84942/88651 [00:00<00:00, 139171.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 143152.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9637/88651 [00:00<00:00, 96365.50it/s] 21%|██▏       | 19015/88651 [00:00<00:00, 95574.96it/s] 44%|████▍     | 38979/88651 [00:00<00:00, 113290.54it/s] 67%|██████▋   | 59177/88651 [00:00<00:00, 130476.76it/s] 81%|████████  | 71799/88651 [00:00<00:00, 93311.53it/s]  93%|█████████▎| 82812/88651 [00:00<00:00, 97790.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 105841.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12171/88651 [00:00<00:00, 121704.31it/s] 28%|██▊       | 24877/88651 [00:00<00:00, 123262.70it/s] 41%|████      | 36288/88651 [00:00<00:00, 120365.02it/s] 58%|█████▊    | 51524/88651 [00:00<00:00, 128457.49it/s] 72%|███████▏  | 64023/88651 [00:00<00:00, 126803.85it/s] 84%|████████▍ | 74778/88651 [00:00<00:00, 112291.56it/s] 96%|█████████▌| 84965/88651 [00:00<00:00, 97188.13it/s] 100%|██████████| 88651/88651 [00:00<00:00, 105175.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17292/88651 [00:00<00:00, 172919.34it/s] 40%|███▉      | 35310/88651 [00:00<00:00, 175034.30it/s] 60%|██████    | 53354/88651 [00:00<00:00, 176620.01it/s] 81%|████████▏ | 72061/88651 [00:00<00:00, 179628.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 177621.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18212/88651 [00:00<00:00, 182119.74it/s] 45%|████▍     | 39882/88651 [00:00<00:00, 191275.45it/s] 68%|██████▊   | 60661/88651 [00:00<00:00, 195945.26it/s] 92%|█████████▏| 81386/88651 [00:00<00:00, 199203.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 203427.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19916/88651 [00:00<00:00, 199153.07it/s] 45%|████▍     | 39474/88651 [00:00<00:00, 198067.43it/s] 66%|██████▋   | 58820/88651 [00:00<00:00, 196661.23it/s] 87%|████████▋ | 76956/88651 [00:00<00:00, 191805.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 192014.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13944/88651 [00:00<00:00, 139435.48it/s] 32%|███▏      | 28083/88651 [00:00<00:00, 140014.59it/s] 47%|████▋     | 41251/88651 [00:00<00:00, 137402.56it/s] 65%|██████▍   | 57203/88651 [00:00<00:00, 143365.53it/s] 83%|████████▎ | 74011/88651 [00:00<00:00, 149980.11it/s]100%|██████████| 88651/88651 [00:00<00:00, 153794.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15551/88651 [00:00<00:00, 155506.81it/s] 39%|███▉      | 34556/88651 [00:00<00:00, 164474.97it/s] 61%|██████    | 54017/88651 [00:00<00:00, 172485.66it/s] 82%|████████▏ | 73087/88651 [00:00<00:00, 177573.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 183908.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14497/88651 [00:00<00:00, 144967.03it/s] 33%|███▎      | 29071/88651 [00:00<00:00, 145197.48it/s] 50%|████▉     | 44202/88651 [00:00<00:00, 146977.46it/s] 67%|██████▋   | 59373/88651 [00:00<00:00, 148364.41it/s] 83%|████████▎ | 73940/88651 [00:00<00:00, 147543.58it/s]100%|█████████▉| 88477/88651 [00:00<00:00, 146883.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 147340.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13066/88651 [00:00<00:00, 130651.71it/s] 32%|███▏      | 28490/88651 [00:00<00:00, 136933.29it/s] 54%|█████▍    | 47740/88651 [00:00<00:00, 149915.14it/s] 76%|███████▋  | 67766/88651 [00:00<00:00, 162142.63it/s] 98%|█████████▊| 86985/88651 [00:00<00:00, 170120.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 174201.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14649/88651 [00:00<00:00, 146487.35it/s] 33%|███▎      | 29302/88651 [00:00<00:00, 146499.66it/s] 50%|████▉     | 44236/88651 [00:00<00:00, 147338.73it/s] 67%|██████▋   | 59290/88651 [00:00<00:00, 148283.09it/s] 84%|████████▎ | 74206/88651 [00:00<00:00, 148542.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 148756.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13635/88651 [00:00<00:00, 136348.18it/s] 32%|███▏      | 28289/88651 [00:00<00:00, 139252.60it/s] 48%|████▊     | 42953/88651 [00:00<00:00, 141388.04it/s] 69%|██████▉   | 61152/88651 [00:00<00:00, 151529.88it/s] 92%|█████████▏| 81984/88651 [00:00<00:00, 165025.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 166100.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20328/88651 [00:00<00:00, 203277.77it/s] 44%|████▍     | 39295/88651 [00:00<00:00, 198994.20it/s] 65%|██████▌   | 57927/88651 [00:00<00:00, 195013.11it/s] 87%|████████▋ | 77249/88651 [00:00<00:00, 194470.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 193774.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19374/88651 [00:00<00:00, 193738.34it/s] 45%|████▍     | 39679/88651 [00:00<00:00, 196440.15it/s] 67%|██████▋   | 59156/88651 [00:00<00:00, 195933.91it/s] 88%|████████▊ | 78247/88651 [00:00<00:00, 194398.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 182397.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9464/88651 [00:00<00:00, 94638.29it/s] 22%|██▏       | 19405/88651 [00:00<00:00, 96020.89it/s] 36%|███▌      | 31990/88651 [00:00<00:00, 103370.96it/s] 55%|█████▌    | 49098/88651 [00:00<00:00, 117296.78it/s] 74%|███████▍  | 65837/88651 [00:00<00:00, 128864.61it/s] 88%|████████▊ | 78006/88651 [00:00<00:00, 92331.02it/s]  99%|█████████▉| 88192/88651 [00:00<00:00, 83009.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 99909.03it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11559/88651 [00:00<00:00, 115582.95it/s] 27%|██▋       | 24308/88651 [00:00<00:00, 118913.24it/s] 46%|████▋     | 41069/88651 [00:00<00:00, 130266.04it/s] 67%|██████▋   | 59434/88651 [00:00<00:00, 142709.84it/s] 81%|████████  | 71527/88651 [00:00<00:00, 127961.85it/s] 94%|█████████▎| 83085/88651 [00:00<00:00, 109080.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 116773.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11915/88651 [00:00<00:00, 114216.86it/s] 23%|██▎       | 20046/88651 [00:00<00:00, 101850.10it/s] 45%|████▌     | 40097/88651 [00:00<00:00, 119488.02it/s] 67%|██████▋   | 59533/88651 [00:00<00:00, 135100.55it/s] 89%|████████▉ | 78940/88651 [00:00<00:00, 148651.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 159784.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18942/88651 [00:00<00:00, 189412.50it/s] 44%|████▍     | 39012/88651 [00:00<00:00, 192662.02it/s] 66%|██████▌   | 58427/88651 [00:00<00:00, 193103.73it/s] 89%|████████▉ | 78765/88651 [00:00<00:00, 196075.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 197108.62it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19597/88651 [00:00<00:00, 195965.98it/s] 43%|████▎     | 38203/88651 [00:00<00:00, 192884.23it/s] 64%|██████▍   | 56998/88651 [00:00<00:00, 191375.91it/s] 86%|████████▌ | 76208/88651 [00:00<00:00, 191590.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 189633.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19402/88651 [00:00<00:00, 194017.41it/s] 42%|████▏     | 37653/88651 [00:00<00:00, 190412.72it/s] 64%|██████▍   | 56841/88651 [00:00<00:00, 190847.88it/s] 85%|████████▌ | 75655/88651 [00:00<00:00, 190025.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 188842.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19293/88651 [00:00<00:00, 192921.44it/s] 43%|████▎     | 38491/88651 [00:00<00:00, 192637.82it/s] 66%|██████▌   | 58379/88651 [00:00<00:00, 194466.68it/s] 88%|████████▊ | 78311/88651 [00:00<00:00, 195895.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 196758.68it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16655/88651 [00:00<00:00, 166547.78it/s] 41%|████▏     | 36597/88651 [00:00<00:00, 175209.84it/s] 64%|██████▍   | 56579/88651 [00:00<00:00, 181931.05it/s] 87%|████████▋ | 76718/88651 [00:00<00:00, 187355.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 191997.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13843/88651 [00:00<00:00, 138429.47it/s] 30%|██▉       | 26238/88651 [00:00<00:00, 133739.19it/s] 49%|████▊     | 43114/88651 [00:00<00:00, 142617.29it/s] 71%|███████   | 62835/88651 [00:00<00:00, 155533.08it/s] 91%|█████████ | 80286/88651 [00:00<00:00, 160777.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 163349.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18759/88651 [00:00<00:00, 187587.94it/s] 42%|████▏     | 36793/88651 [00:00<00:00, 185351.13it/s] 63%|██████▎   | 56071/88651 [00:00<00:00, 187517.72it/s] 85%|████████▌ | 75426/88651 [00:00<00:00, 189287.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 190060.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7724/88651 [00:00<00:01, 77231.05it/s] 23%|██▎       | 20476/88651 [00:00<00:00, 87593.76it/s] 40%|███▉      | 35212/88651 [00:00<00:00, 99727.80it/s] 56%|█████▌    | 49312/88651 [00:00<00:00, 109326.89it/s] 73%|███████▎  | 64855/88651 [00:00<00:00, 120004.82it/s] 93%|█████████▎| 82178/88651 [00:00<00:00, 131491.45it/s]100%|██████████| 88651/88651 [00:00<00:00, 139199.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14152/88651 [00:00<00:00, 141516.42it/s] 29%|██▉       | 26106/88651 [00:00<00:00, 134117.40it/s] 45%|████▌     | 40078/88651 [00:00<00:00, 135747.26it/s] 63%|██████▎   | 56140/88651 [00:00<00:00, 142360.23it/s] 82%|████████▏ | 73004/88651 [00:00<00:00, 149340.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 150128.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16358/88651 [00:00<00:00, 163578.60it/s] 40%|████      | 35667/88651 [00:00<00:00, 171438.15it/s] 61%|██████▏   | 54347/88651 [00:00<00:00, 175774.51it/s] 82%|████████▏ | 72849/88651 [00:00<00:00, 178449.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 182829.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18605/88651 [00:00<00:00, 186047.96it/s] 43%|████▎     | 37894/88651 [00:00<00:00, 188047.54it/s] 64%|██████▍   | 56810/88651 [00:00<00:00, 188377.54it/s] 85%|████████▍ | 75347/88651 [00:00<00:00, 187463.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 176198.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 11997/88651 [00:00<00:00, 119964.11it/s] 21%|██        | 18196/88651 [00:00<00:00, 93678.41it/s]  34%|███▎      | 29864/88651 [00:00<00:00, 99055.72it/s] 46%|████▌     | 40715/88651 [00:00<00:00, 101713.58it/s] 63%|██████▎   | 55439/88651 [00:00<00:00, 110631.82it/s] 73%|███████▎  | 65074/88651 [00:00<00:00, 101112.59it/s] 88%|████████▊ | 77729/88651 [00:00<00:00, 107599.29it/s] 99%|█████████▉| 88015/88651 [00:00<00:00, 90416.74it/s] 100%|██████████| 88651/88651 [00:00<00:00, 100483.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3782/88651 [00:00<00:02, 37816.70it/s] 25%|██▍       | 22101/88651 [00:00<00:01, 49632.56it/s] 34%|███▍      | 30096/88651 [00:00<00:01, 55074.16it/s] 49%|████▉     | 43467/88651 [00:00<00:00, 66872.16it/s] 64%|██████▍   | 56658/88651 [00:00<00:00, 78479.89it/s] 76%|███████▋  | 67737/88651 [00:00<00:00, 86003.16it/s] 95%|█████████▌| 84504/88651 [00:00<00:00, 100719.96it/s]100%|██████████| 88651/88651 [00:00<00:00, 119575.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12322/88651 [00:00<00:00, 123213.36it/s] 18%|█▊        | 16019/88651 [00:00<00:01, 65629.65it/s]  30%|██▉       | 26427/88651 [00:00<00:00, 73809.52it/s] 50%|█████     | 44682/88651 [00:00<00:00, 89869.10it/s] 71%|███████▏  | 63346/88651 [00:00<00:00, 106422.38it/s] 93%|█████████▎| 82338/88651 [00:00<00:00, 122591.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 134285.24it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19098/88651 [00:00<00:00, 190976.08it/s] 43%|████▎     | 38024/88651 [00:00<00:00, 190457.92it/s] 65%|██████▌   | 57632/88651 [00:00<00:00, 192108.43it/s] 87%|████████▋ | 77071/88651 [00:00<00:00, 192785.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 191235.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18945/88651 [00:00<00:00, 189445.66it/s] 44%|████▍     | 38847/88651 [00:00<00:00, 192217.88it/s] 66%|██████▌   | 58130/88651 [00:00<00:00, 192399.79it/s] 87%|████████▋ | 77184/88651 [00:00<00:00, 191835.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 193166.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16386/88651 [00:00<00:00, 163855.47it/s] 39%|███▉      | 34531/88651 [00:00<00:00, 168764.08it/s] 60%|██████    | 53196/88651 [00:00<00:00, 173758.16it/s] 82%|████████▏ | 72915/88651 [00:00<00:00, 180179.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 182512.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16931/88651 [00:00<00:00, 169303.30it/s] 41%|████      | 36210/88651 [00:00<00:00, 175724.32it/s] 64%|██████▍   | 56542/88651 [00:00<00:00, 183181.85it/s] 86%|████████▌ | 76366/88651 [00:00<00:00, 187452.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 192209.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18277/88651 [00:00<00:00, 182763.20it/s] 43%|████▎     | 38416/88651 [00:00<00:00, 187978.80it/s] 65%|██████▌   | 57842/88651 [00:00<00:00, 189817.76it/s] 87%|████████▋ | 77223/88651 [00:00<00:00, 190997.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 192974.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11700/88651 [00:00<00:00, 116993.14it/s] 29%|██▉       | 25627/88651 [00:00<00:00, 122889.60it/s] 45%|████▍     | 39648/88651 [00:00<00:00, 126851.69it/s] 62%|██████▏   | 54543/88651 [00:00<00:00, 132759.90it/s] 78%|███████▊  | 68804/88651 [00:00<00:00, 135568.05it/s] 94%|█████████▍| 83698/88651 [00:00<00:00, 139319.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 139409.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14597/88651 [00:00<00:00, 145964.92it/s] 33%|███▎      | 29285/88651 [00:00<00:00, 146238.08it/s] 50%|████▉     | 44085/88651 [00:00<00:00, 146759.57it/s] 67%|██████▋   | 58997/88651 [00:00<00:00, 147457.25it/s] 84%|████████▎ | 74054/88651 [00:00<00:00, 148376.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 148491.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17723/88651 [00:00<00:00, 177226.79it/s] 43%|████▎     | 38325/88651 [00:00<00:00, 184980.50it/s] 66%|██████▋   | 58889/88651 [00:00<00:00, 190728.73it/s] 90%|████████▉ | 79474/88651 [00:00<00:00, 195024.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 199050.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18616/88651 [00:00<00:00, 186158.40it/s] 43%|████▎     | 38102/88651 [00:00<00:00, 188684.13it/s] 66%|██████▋   | 58747/88651 [00:00<00:00, 193683.08it/s] 90%|████████▉ | 79383/88651 [00:00<00:00, 197319.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 199700.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16887/88651 [00:00<00:00, 168861.30it/s] 33%|███▎      | 29695/88651 [00:00<00:00, 154136.03it/s] 54%|█████▍    | 47895/88651 [00:00<00:00, 161555.87it/s] 75%|███████▌  | 66519/88651 [00:00<00:00, 168245.12it/s] 96%|█████████▌| 85049/88651 [00:00<00:00, 173021.24it/s]100%|██████████| 88651/88651 [00:00<00:00, 170647.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11856/88651 [00:00<00:00, 118551.35it/s] 26%|██▋       | 23479/88651 [00:00<00:00, 117844.36it/s] 37%|███▋      | 33062/88651 [00:00<00:00, 110242.01it/s] 50%|████▉     | 44284/88651 [00:00<00:00, 110826.91it/s] 71%|███████▏  | 63271/88651 [00:00<00:00, 126642.81it/s] 93%|█████████▎| 82193/88651 [00:00<00:00, 140589.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 131084.25it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12550/88651 [00:00<00:00, 125491.14it/s] 26%|██▌       | 22680/88651 [00:00<00:00, 117098.87it/s] 36%|███▋      | 32250/88651 [00:00<00:00, 109735.16it/s] 48%|████▊     | 42694/88651 [00:00<00:00, 108072.79it/s] 57%|█████▋    | 50616/88651 [00:00<00:00, 95011.29it/s]  79%|███████▉  | 70210/88651 [00:00<00:00, 112375.99it/s]100%|██████████| 88651/88651 [00:00<00:00, 126780.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9528/88651 [00:00<00:00, 88059.09it/s] 14%|█▍        | 12767/88651 [00:00<00:01, 58101.23it/s] 31%|███▏      | 27763/88651 [00:00<00:00, 71181.84it/s] 50%|████▉     | 44058/88651 [00:00<00:00, 85652.56it/s] 71%|███████▏  | 63263/88651 [00:00<00:00, 102725.78it/s] 94%|█████████▍| 83364/88651 [00:00<00:00, 120383.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 139504.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15059/88651 [00:00<00:00, 150587.63it/s] 35%|███▍      | 30931/88651 [00:00<00:00, 152938.30it/s] 54%|█████▍    | 47961/88651 [00:00<00:00, 157761.86it/s] 75%|███████▍  | 66191/88651 [00:00<00:00, 164399.70it/s] 95%|█████████▌| 84317/88651 [00:00<00:00, 169118.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 169439.59it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18406/88651 [00:00<00:00, 184055.79it/s] 42%|████▏     | 37111/88651 [00:00<00:00, 184942.42it/s] 63%|██████▎   | 55789/88651 [00:00<00:00, 185487.57it/s] 84%|████████▍ | 74248/88651 [00:00<00:00, 185215.44it/s]100%|██████████| 88651/88651 [00:00<00:00, 183410.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13549/88651 [00:00<00:00, 135489.81it/s] 29%|██▉       | 25966/88651 [00:00<00:00, 131881.86it/s] 45%|████▍     | 39735/88651 [00:00<00:00, 133571.77it/s] 63%|██████▎   | 56243/88651 [00:00<00:00, 141683.17it/s] 84%|████████▍ | 74270/88651 [00:00<00:00, 151405.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 154416.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▎       | 20861/88651 [00:00<00:00, 208601.25it/s] 47%|████▋     | 41545/88651 [00:00<00:00, 208069.49it/s] 71%|███████   | 62906/88651 [00:00<00:00, 209701.14it/s] 95%|█████████▌| 84320/88651 [00:00<00:00, 211013.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 211371.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▎       | 20971/88651 [00:00<00:00, 209707.70it/s] 48%|████▊     | 42983/88651 [00:00<00:00, 212724.18it/s] 73%|███████▎  | 64517/88651 [00:00<00:00, 213501.98it/s] 97%|█████████▋| 85573/88651 [00:00<00:00, 212610.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 213280.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14665/88651 [00:00<00:00, 146643.15it/s] 33%|███▎      | 29402/88651 [00:00<00:00, 146860.18it/s] 49%|████▉     | 43273/88651 [00:00<00:00, 144313.98it/s] 68%|██████▊   | 60057/88651 [00:00<00:00, 150648.44it/s] 90%|████████▉ | 79773/88651 [00:00<00:00, 162121.86it/s]100%|██████████| 88651/88651 [00:00<00:00, 162738.68it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20692/88651 [00:00<00:00, 206913.29it/s] 46%|████▌     | 40794/88651 [00:00<00:00, 205107.45it/s] 70%|██████▉   | 61616/88651 [00:00<00:00, 206030.58it/s] 92%|█████████▏| 81898/88651 [00:00<00:00, 205056.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 204379.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▎       | 20903/88651 [00:00<00:00, 209028.70it/s] 47%|████▋     | 41788/88651 [00:00<00:00, 208972.73it/s] 71%|███████   | 62648/88651 [00:00<00:00, 208859.63it/s] 93%|█████████▎| 82343/88651 [00:00<00:00, 205135.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 206163.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14592/88651 [00:00<00:00, 145919.44it/s] 31%|███▏      | 27790/88651 [00:00<00:00, 141433.86it/s] 47%|████▋     | 41291/88651 [00:00<00:00, 139442.84it/s] 58%|█████▊    | 51241/88651 [00:00<00:00, 124452.83it/s] 68%|██████▊   | 60503/88651 [00:00<00:00, 106573.05it/s] 78%|███████▊  | 69381/88651 [00:00<00:00, 96147.08it/s]  97%|█████████▋| 86019/88651 [00:00<00:00, 110088.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 119038.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18271/88651 [00:00<00:00, 182708.87it/s] 43%|████▎     | 38173/88651 [00:00<00:00, 187314.20it/s] 65%|██████▍   | 57322/88651 [00:00<00:00, 188546.68it/s] 87%|████████▋ | 76685/88651 [00:00<00:00, 190042.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 193190.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17588/88651 [00:00<00:00, 175876.81it/s] 42%|████▏     | 37188/88651 [00:00<00:00, 181466.04it/s] 64%|██████▍   | 56654/88651 [00:00<00:00, 185229.94it/s] 86%|████████▌ | 76073/88651 [00:00<00:00, 187828.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 192139.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18329/88651 [00:00<00:00, 183280.56it/s] 31%|███▏      | 27812/88651 [00:00<00:00, 140259.36it/s] 41%|████      | 35904/88651 [00:00<00:00, 114963.92it/s] 56%|█████▌    | 49308/88651 [00:00<00:00, 120090.31it/s] 72%|███████▏  | 64116/88651 [00:00<00:00, 127308.74it/s] 90%|████████▉ | 79425/88651 [00:00<00:00, 134082.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 135846.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12280/88651 [00:00<00:00, 122791.92it/s] 33%|███▎      | 29250/88651 [00:00<00:00, 133893.89it/s] 42%|████▏     | 36920/88651 [00:00<00:00, 86829.56it/s]  52%|█████▏    | 46173/88651 [00:00<00:00, 87965.01it/s] 65%|██████▍   | 57244/88651 [00:00<00:00, 93741.75it/s] 82%|████████▏ | 72913/88651 [00:00<00:00, 106587.14it/s] 97%|█████████▋| 85815/88651 [00:00<00:00, 112451.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 113306.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5815/88651 [00:00<00:01, 58143.26it/s] 19%|█▉        | 17280/88651 [00:00<00:01, 68231.28it/s] 37%|███▋      | 32373/88651 [00:00<00:00, 81091.18it/s] 45%|████▌     | 39978/88651 [00:00<00:00, 75284.94it/s] 57%|█████▋    | 50925/88651 [00:00<00:00, 82209.11it/s] 71%|███████   | 62541/88651 [00:00<00:00, 90109.98it/s] 92%|█████████▏| 81376/88651 [00:00<00:00, 106825.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 115851.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18247/88651 [00:00<00:00, 182468.00it/s] 42%|████▏     | 37296/88651 [00:00<00:00, 184800.36it/s] 64%|██████▍   | 56724/88651 [00:00<00:00, 187543.53it/s] 86%|████████▌ | 76416/88651 [00:00<00:00, 190260.88it/s]100%|██████████| 88651/88651 [00:00<00:00, 191163.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15565/88651 [00:00<00:00, 155649.41it/s] 32%|███▏      | 28256/88651 [00:00<00:00, 145745.22it/s] 49%|████▉     | 43801/88651 [00:00<00:00, 148525.31it/s] 66%|██████▌   | 58226/88651 [00:00<00:00, 147214.99it/s] 85%|████████▌ | 75518/88651 [00:00<00:00, 154085.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 154718.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13350/88651 [00:00<00:00, 133497.26it/s] 35%|███▍      | 30867/88651 [00:00<00:00, 143756.77it/s] 55%|█████▍    | 48520/88651 [00:00<00:00, 152234.65it/s] 76%|███████▌  | 67024/88651 [00:00<00:00, 160786.03it/s] 95%|█████████▌| 84248/88651 [00:00<00:00, 164056.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 169159.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12417/88651 [00:00<00:00, 124162.42it/s] 30%|██▉       | 26194/88651 [00:00<00:00, 127953.02it/s] 47%|████▋     | 41296/88651 [00:00<00:00, 134097.21it/s] 64%|██████▎   | 56510/88651 [00:00<00:00, 139043.43it/s] 80%|████████  | 71235/88651 [00:00<00:00, 141405.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 147902.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14342/88651 [00:00<00:00, 143413.30it/s] 38%|███▊      | 33339/88651 [00:00<00:00, 154792.15it/s] 60%|█████▉    | 52867/88651 [00:00<00:00, 165057.20it/s] 80%|████████  | 71186/88651 [00:00<00:00, 170107.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 181171.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13862/88651 [00:00<00:00, 138618.48it/s] 32%|███▏      | 28494/88651 [00:00<00:00, 140840.64it/s] 49%|████▉     | 43478/88651 [00:00<00:00, 143423.92it/s] 66%|██████▌   | 58520/88651 [00:00<00:00, 145451.57it/s] 83%|████████▎ | 73682/88651 [00:00<00:00, 147247.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 148587.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11197/88651 [00:00<00:00, 111963.17it/s] 29%|██▉       | 25921/88651 [00:00<00:00, 120632.13it/s] 45%|████▍     | 39851/88651 [00:00<00:00, 125684.67it/s] 61%|██████    | 54057/88651 [00:00<00:00, 130185.60it/s] 78%|███████▊  | 68879/88651 [00:00<00:00, 135115.32it/s] 95%|█████████▍| 83887/88651 [00:00<00:00, 139279.62it/s]100%|██████████| 88651/88651 [00:00<00:00, 140147.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13845/88651 [00:00<00:00, 138446.17it/s] 32%|███▏      | 28176/88651 [00:00<00:00, 139867.70it/s] 48%|████▊     | 42824/88651 [00:00<00:00, 141786.41it/s] 65%|██████▍   | 57584/88651 [00:00<00:00, 143480.97it/s] 82%|████████▏ | 72517/88651 [00:00<00:00, 145184.41it/s] 99%|█████████▊| 87411/88651 [00:00<00:00, 146290.78it/s]100%|██████████| 88651/88651 [00:00<00:00, 145578.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14386/88651 [00:00<00:00, 143858.08it/s] 33%|███▎      | 29143/88651 [00:00<00:00, 144951.23it/s] 53%|█████▎    | 46792/88651 [00:00<00:00, 153161.54it/s] 76%|███████▌  | 67513/88651 [00:00<00:00, 166162.97it/s] 99%|█████████▉| 87852/88651 [00:00<00:00, 175816.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 175834.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19211/88651 [00:00<00:00, 192108.35it/s] 44%|████▎     | 38637/88651 [00:00<00:00, 192745.73it/s] 67%|██████▋   | 58964/88651 [00:00<00:00, 195786.70it/s] 89%|████████▊ | 78647/88651 [00:00<00:00, 196098.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 196102.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13284/88651 [00:00<00:00, 132830.63it/s] 34%|███▍      | 30216/88651 [00:00<00:00, 142010.26it/s] 43%|████▎     | 38085/88651 [00:00<00:00, 99976.35it/s]  51%|█████     | 45368/88651 [00:00<00:00, 82891.97it/s] 67%|██████▋   | 58979/88651 [00:00<00:00, 93906.25it/s] 81%|████████  | 71395/88651 [00:00<00:00, 101311.39it/s] 93%|█████████▎| 82781/88651 [00:00<00:00, 104773.78it/s]100%|██████████| 88651/88651 [00:00<00:00, 110251.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6714/88651 [00:00<00:01, 64031.68it/s] 11%|█▏        | 10015/88651 [00:00<00:01, 49948.27it/s] 24%|██▍       | 21377/88651 [00:00<00:01, 60042.16it/s] 30%|██▉       | 26420/88651 [00:00<00:01, 56563.27it/s] 50%|████▉     | 44184/88651 [00:00<00:00, 71101.76it/s] 60%|█████▉    | 53031/88651 [00:00<00:00, 71046.17it/s] 75%|███████▍  | 66120/88651 [00:00<00:00, 82339.13it/s] 92%|█████████▏| 81606/88651 [00:00<00:00, 95797.17it/s]100%|██████████| 88651/88651 [00:00<00:00, 101960.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7855/88651 [00:00<00:01, 74933.21it/s] 25%|██▍       | 21882/88651 [00:00<00:00, 87104.26it/s] 45%|████▌     | 40030/88651 [00:00<00:00, 103204.85it/s] 66%|██████▌   | 58246/88651 [00:00<00:00, 118630.09it/s] 87%|████████▋ | 76755/88651 [00:00<00:00, 132951.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 155967.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11944/88651 [00:00<00:00, 119435.56it/s] 35%|███▍      | 30736/88651 [00:00<00:00, 134095.61it/s] 56%|█████▋    | 49987/88651 [00:00<00:00, 147523.64it/s] 77%|███████▋  | 68661/88651 [00:00<00:00, 157441.39it/s] 98%|█████████▊| 87032/88651 [00:00<00:00, 164496.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 174175.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14459/88651 [00:00<00:00, 144587.38it/s] 33%|███▎      | 29440/88651 [00:00<00:00, 146115.06it/s] 50%|█████     | 44562/88651 [00:00<00:00, 147608.68it/s] 67%|██████▋   | 59813/88651 [00:00<00:00, 149043.53it/s] 90%|████████▉ | 79349/88651 [00:00<00:00, 160455.12it/s]100%|██████████| 88651/88651 [00:00<00:00, 160857.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14360/88651 [00:00<00:00, 143598.77it/s] 33%|███▎      | 29161/88651 [00:00<00:00, 144893.81it/s] 50%|████▉     | 44023/88651 [00:00<00:00, 145990.61it/s] 67%|██████▋   | 58976/88651 [00:00<00:00, 147034.65it/s] 82%|████████▏ | 72550/88651 [00:00<00:00, 143453.42it/s] 99%|█████████▉| 88091/88651 [00:00<00:00, 146841.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 145886.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14261/88651 [00:00<00:00, 142605.04it/s] 32%|███▏      | 28710/88651 [00:00<00:00, 141880.35it/s] 49%|████▉     | 43792/88651 [00:00<00:00, 144448.50it/s] 68%|██████▊   | 60146/88651 [00:00<00:00, 149690.48it/s] 90%|█████████ | 80076/88651 [00:00<00:00, 161770.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 162561.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18964/88651 [00:00<00:00, 189632.04it/s] 43%|████▎     | 38263/88651 [00:00<00:00, 190624.86it/s] 64%|██████▍   | 57004/88651 [00:00<00:00, 189646.46it/s] 86%|████████▌ | 76429/88651 [00:00<00:00, 191002.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 190619.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17968/88651 [00:00<00:00, 179672.03it/s] 42%|████▏     | 37626/88651 [00:00<00:00, 184429.01it/s] 64%|██████▎   | 56308/88651 [00:00<00:00, 185138.86it/s] 84%|████████▍ | 74692/88651 [00:00<00:00, 184745.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 187700.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14350/88651 [00:00<00:00, 143491.24it/s] 32%|███▏      | 28325/88651 [00:00<00:00, 142346.08it/s] 49%|████▊     | 43130/88651 [00:00<00:00, 144008.50it/s] 65%|██████▌   | 57891/88651 [00:00<00:00, 145069.48it/s] 81%|████████  | 71795/88651 [00:00<00:00, 143203.73it/s] 98%|█████████▊| 86968/88651 [00:00<00:00, 145658.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 143841.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14577/88651 [00:00<00:00, 145761.80it/s] 32%|███▏      | 28288/88651 [00:00<00:00, 143053.68it/s] 49%|████▉     | 43293/88651 [00:00<00:00, 145082.84it/s] 70%|███████   | 62129/88651 [00:00<00:00, 155822.43it/s] 91%|█████████ | 80236/88651 [00:00<00:00, 162623.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 163386.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8306/88651 [00:00<00:00, 83048.99it/s] 18%|█▊        | 15744/88651 [00:00<00:00, 80241.70it/s] 25%|██▍       | 21927/88651 [00:00<00:00, 72951.81it/s] 33%|███▎      | 29532/88651 [00:00<00:00, 73853.99it/s] 42%|████▏     | 37271/88651 [00:00<00:00, 74879.95it/s] 59%|█████▉    | 52237/88651 [00:00<00:00, 88083.51it/s] 75%|███████▍  | 66231/88651 [00:00<00:00, 99099.94it/s] 89%|████████▊ | 78533/88651 [00:00<00:00, 105237.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 103795.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14317/88651 [00:00<00:00, 143167.41it/s] 33%|███▎      | 29143/88651 [00:00<00:00, 144657.70it/s] 53%|█████▎    | 47150/88651 [00:00<00:00, 153725.77it/s] 74%|███████▍  | 65854/88651 [00:00<00:00, 162402.65it/s] 96%|█████████▋| 85510/88651 [00:00<00:00, 171334.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 171729.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7008/88651 [00:00<00:01, 67167.75it/s] 25%|██▌       | 22378/88651 [00:00<00:00, 80817.14it/s] 38%|███▊      | 33849/88651 [00:00<00:00, 88675.88it/s] 51%|█████     | 44900/88651 [00:00<00:00, 94261.93it/s] 67%|██████▋   | 58996/88651 [00:00<00:00, 104663.91it/s] 88%|████████▊ | 78238/88651 [00:00<00:00, 121252.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 132667.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13266/88651 [00:00<00:00, 132657.60it/s] 26%|██▌       | 22698/88651 [00:00<00:00, 118236.45it/s] 32%|███▏      | 28314/88651 [00:00<00:00, 75988.88it/s]  41%|████      | 36562/88651 [00:00<00:00, 75015.11it/s] 53%|█████▎    | 46870/88651 [00:00<00:00, 81686.98it/s] 74%|███████▍  | 65758/88651 [00:00<00:00, 98447.62it/s] 93%|█████████▎| 82660/88651 [00:00<00:00, 110726.50it/s]100%|██████████| 88651/88651 [00:00<00:00, 98076.05it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17572/88651 [00:00<00:00, 175712.63it/s] 26%|██▌       | 22844/88651 [00:00<00:00, 95089.19it/s]  32%|███▏      | 27943/88651 [00:00<00:00, 75344.77it/s] 47%|████▋     | 41279/88651 [00:00<00:00, 86653.01it/s] 65%|██████▍   | 57413/88651 [00:00<00:00, 100626.93it/s] 80%|███████▉  | 70590/88651 [00:00<00:00, 108304.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 124184.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18650/88651 [00:00<00:00, 186495.29it/s] 42%|████▏     | 37424/88651 [00:00<00:00, 186864.62it/s] 64%|██████▍   | 56568/88651 [00:00<00:00, 188213.89it/s] 86%|████████▌ | 76337/88651 [00:00<00:00, 190957.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 189731.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15689/88651 [00:00<00:00, 156886.78it/s] 38%|███▊      | 33721/88651 [00:00<00:00, 163249.76it/s] 59%|█████▉    | 52258/88651 [00:00<00:00, 169310.32it/s] 80%|███████▉  | 70688/88651 [00:00<00:00, 173544.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 178086.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9896/88651 [00:00<00:00, 98956.79it/s] 27%|██▋       | 24228/88651 [00:00<00:00, 109085.93it/s] 43%|████▎     | 38079/88651 [00:00<00:00, 116509.16it/s] 60%|██████    | 53334/88651 [00:00<00:00, 125396.55it/s] 77%|███████▋  | 68652/88651 [00:00<00:00, 132612.30it/s] 93%|█████████▎| 82710/88651 [00:00<00:00, 134903.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 137965.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21183/88651 [00:00<00:00, 211826.67it/s] 49%|████▉     | 43510/88651 [00:00<00:00, 215132.41it/s] 75%|███████▍  | 66300/88651 [00:00<00:00, 218809.52it/s]100%|█████████▉| 88444/88651 [00:00<00:00, 219590.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 220864.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20452/88651 [00:00<00:00, 204515.32it/s] 49%|████▊     | 43092/88651 [00:00<00:00, 210622.57it/s] 74%|███████▍  | 66037/88651 [00:00<00:00, 215936.35it/s] 99%|█████████▉| 88072/88651 [00:00<00:00, 217239.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 219976.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21582/88651 [00:00<00:00, 215817.63it/s] 47%|████▋     | 41968/88651 [00:00<00:00, 212084.56it/s] 71%|███████   | 62975/88651 [00:00<00:00, 211474.68it/s] 95%|█████████▍| 84211/88651 [00:00<00:00, 211738.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 210972.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11534/88651 [00:00<00:00, 115336.54it/s] 30%|██▉       | 26226/88651 [00:00<00:00, 123286.70it/s] 48%|████▊     | 42928/88651 [00:00<00:00, 133794.56it/s] 65%|██████▌   | 57713/88651 [00:00<00:00, 137722.02it/s] 85%|████████▍ | 75023/88651 [00:00<00:00, 146716.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 150713.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17144/88651 [00:00<00:00, 171439.35it/s] 41%|████      | 36150/88651 [00:00<00:00, 176629.47it/s] 63%|██████▎   | 55676/88651 [00:00<00:00, 181833.90it/s] 85%|████████▍ | 75174/88651 [00:00<00:00, 185587.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 188613.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20509/88651 [00:00<00:00, 205085.31it/s] 45%|████▌     | 40184/88651 [00:00<00:00, 202508.42it/s] 68%|██████▊   | 59849/88651 [00:00<00:00, 200714.18it/s] 88%|████████▊ | 77782/88651 [00:00<00:00, 193780.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 194763.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14286/88651 [00:00<00:00, 142851.62it/s] 33%|███▎      | 28874/88651 [00:00<00:00, 143745.68it/s] 49%|████▉     | 43720/88651 [00:00<00:00, 145127.06it/s] 66%|██████▌   | 58703/88651 [00:00<00:00, 146506.17it/s] 83%|████████▎ | 73850/88651 [00:00<00:00, 147959.31it/s]100%|█████████▉| 88612/88651 [00:00<00:00, 147855.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 147603.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14780/88651 [00:00<00:00, 147793.45it/s] 34%|███▎      | 29775/88651 [00:00<00:00, 148432.76it/s] 53%|█████▎    | 47300/88651 [00:00<00:00, 155574.24it/s] 72%|███████▏  | 64214/88651 [00:00<00:00, 159409.14it/s] 94%|█████████▎| 82960/88651 [00:00<00:00, 166898.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 139052.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20560/88651 [00:00<00:00, 205596.27it/s] 45%|████▌     | 39927/88651 [00:00<00:00, 201866.57it/s] 60%|█████▉    | 53048/88651 [00:00<00:00, 173785.32it/s] 72%|███████▏  | 64074/88651 [00:00<00:00, 125786.78it/s] 84%|████████▍ | 74385/88651 [00:00<00:00, 118000.32it/s] 95%|█████████▌| 84487/88651 [00:00<00:00, 95249.37it/s] 100%|██████████| 88651/88651 [00:00<00:00, 114997.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10299/88651 [00:00<00:00, 102984.94it/s] 31%|███▏      | 27766/88651 [00:00<00:00, 117444.08it/s] 49%|████▉     | 43533/88651 [00:00<00:00, 127176.77it/s] 63%|██████▎   | 55870/88651 [00:00<00:00, 126007.66it/s] 75%|███████▌  | 66510/88651 [00:00<00:00, 95906.44it/s]  86%|████████▌ | 75805/88651 [00:00<00:00, 76675.88it/s] 96%|█████████▌| 84977/88651 [00:00<00:00, 80643.37it/s]100%|██████████| 88651/88651 [00:00<00:00, 100448.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15936/88651 [00:00<00:00, 159355.59it/s] 36%|███▌      | 31915/88651 [00:00<00:00, 159484.57it/s] 54%|█████▍    | 48106/88651 [00:00<00:00, 160201.97it/s] 75%|███████▌  | 66830/88651 [00:00<00:00, 167455.95it/s] 97%|█████████▋| 86427/88651 [00:00<00:00, 175098.62it/s]100%|██████████| 88651/88651 [00:00<00:00, 173434.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19090/88651 [00:00<00:00, 190899.27it/s] 43%|████▎     | 37879/88651 [00:00<00:00, 189985.65it/s] 64%|██████▎   | 56402/88651 [00:00<00:00, 188530.41it/s] 84%|████████▍ | 74889/88651 [00:00<00:00, 187415.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 186927.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16298/88651 [00:00<00:00, 162977.44it/s] 38%|███▊      | 33616/88651 [00:00<00:00, 165907.82it/s] 59%|█████▊    | 51882/88651 [00:00<00:00, 170600.27it/s] 79%|███████▉  | 70135/88651 [00:00<00:00, 174010.33it/s] 98%|█████████▊| 86728/88651 [00:00<00:00, 171504.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 173609.12it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18234/88651 [00:00<00:00, 182339.30it/s] 41%|████      | 36351/88651 [00:00<00:00, 181986.72it/s] 61%|██████    | 53941/88651 [00:00<00:00, 180114.87it/s] 82%|████████▏ | 73097/88651 [00:00<00:00, 183400.86it/s]100%|██████████| 88651/88651 [00:00<00:00, 185873.73it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14351/88651 [00:00<00:00, 143509.79it/s] 31%|███▏      | 27918/88651 [00:00<00:00, 141064.17it/s] 48%|████▊     | 42739/88651 [00:00<00:00, 143132.97it/s] 64%|██████▍   | 57155/88651 [00:00<00:00, 143437.64it/s] 80%|███████▉  | 70604/88651 [00:00<00:00, 140629.98it/s] 96%|█████████▌| 84966/88651 [00:00<00:00, 141512.38it/s]100%|██████████| 88651/88651 [00:00<00:00, 141702.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18131/88651 [00:00<00:00, 181308.01it/s] 40%|███▉      | 35280/88651 [00:00<00:00, 178245.29it/s] 60%|██████    | 53295/88651 [00:00<00:00, 178811.75it/s] 80%|████████  | 71028/88651 [00:00<00:00, 178362.37it/s]100%|██████████| 88651/88651 [00:00<00:00, 180661.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17657/88651 [00:00<00:00, 176561.75it/s] 41%|████      | 36455/88651 [00:00<00:00, 179837.94it/s] 62%|██████▏   | 55335/88651 [00:00<00:00, 182435.22it/s] 84%|████████▍ | 74462/88651 [00:00<00:00, 184998.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 186870.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19562/88651 [00:00<00:00, 195616.92it/s] 43%|████▎     | 38527/88651 [00:00<00:00, 193787.42it/s] 65%|██████▍   | 57530/88651 [00:00<00:00, 192643.34it/s] 87%|████████▋ | 77001/88651 [00:00<00:00, 193256.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 192813.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14056/88651 [00:00<00:00, 140554.10it/s] 33%|███▎      | 28867/88651 [00:00<00:00, 142736.64it/s] 50%|████▉     | 43982/88651 [00:00<00:00, 145157.98it/s] 70%|██████▉   | 61840/88651 [00:00<00:00, 153791.97it/s] 92%|█████████▏| 81594/88651 [00:00<00:00, 164734.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 165272.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17794/88651 [00:00<00:00, 177933.81it/s] 28%|██▊       | 25160/88651 [00:00<00:00, 124892.92it/s] 38%|███▊      | 33919/88651 [00:00<00:00, 110743.36it/s] 48%|████▊     | 42689/88651 [00:00<00:00, 102650.17it/s] 62%|██████▏   | 55111/88651 [00:00<00:00, 108290.23it/s] 83%|████████▎ | 73243/88651 [00:00<00:00, 123172.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 130075.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18845/88651 [00:00<00:00, 188447.03it/s] 42%|████▏     | 36858/88651 [00:00<00:00, 185869.14it/s] 56%|█████▋    | 49935/88651 [00:00<00:00, 165008.73it/s] 79%|███████▉  | 69979/88651 [00:00<00:00, 174247.74it/s] 94%|█████████▍| 83325/88651 [00:00<00:00, 136175.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 144646.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14258/88651 [00:00<00:00, 142575.38it/s] 30%|██▉       | 26500/88651 [00:00<00:00, 135864.53it/s] 37%|███▋      | 33167/88651 [00:00<00:00, 89102.71it/s]  58%|█████▊    | 51844/88651 [00:00<00:00, 105681.81it/s] 70%|███████   | 62151/88651 [00:00<00:00, 104806.93it/s] 81%|████████▏ | 72171/88651 [00:00<00:00, 94402.38it/s]  96%|█████████▌| 85264/88651 [00:00<00:00, 102615.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 105649.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9647/88651 [00:00<00:00, 96468.71it/s] 17%|█▋        | 14641/88651 [00:00<00:00, 74592.96it/s] 23%|██▎       | 20116/88651 [00:00<00:01, 67277.24it/s] 34%|███▎      | 29866/88651 [00:00<00:00, 74174.01it/s] 49%|████▊     | 43162/88651 [00:00<00:00, 84251.86it/s] 57%|█████▋    | 50912/88651 [00:00<00:00, 66256.54it/s] 77%|███████▋  | 68146/88651 [00:00<00:00, 81262.58it/s] 99%|█████████▊| 87381/88651 [00:00<00:00, 98292.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 99363.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20195/88651 [00:00<00:00, 201940.08it/s] 45%|████▍     | 39468/88651 [00:00<00:00, 199083.94it/s] 61%|██████▏   | 54465/88651 [00:00<00:00, 181273.63it/s] 74%|███████▍  | 65980/88651 [00:00<00:00, 130034.91it/s] 98%|█████████▊| 86905/88651 [00:00<00:00, 146694.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 159414.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19219/88651 [00:00<00:00, 192183.77it/s] 44%|████▎     | 38765/88651 [00:00<00:00, 193153.87it/s] 66%|██████▌   | 58231/88651 [00:00<00:00, 193600.15it/s] 86%|████████▋ | 76518/88651 [00:00<00:00, 190250.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 191527.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17864/88651 [00:00<00:00, 178636.34it/s] 41%|████      | 36116/88651 [00:00<00:00, 179782.63it/s] 62%|██████▏   | 54620/88651 [00:00<00:00, 181326.98it/s] 82%|████████▏ | 72803/88651 [00:00<00:00, 180551.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 181660.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15613/88651 [00:00<00:00, 156127.17it/s] 39%|███▊      | 34219/88651 [00:00<00:00, 164043.38it/s] 59%|█████▉    | 52178/88651 [00:00<00:00, 168416.58it/s] 79%|███████▉  | 70373/88651 [00:00<00:00, 172260.09it/s]100%|█████████▉| 88513/88651 [00:00<00:00, 174903.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 176836.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11559/88651 [00:00<00:00, 115588.18it/s] 29%|██▉       | 25677/88651 [00:00<00:00, 122234.70it/s] 45%|████▌     | 39930/88651 [00:00<00:00, 127688.62it/s] 62%|██████▏   | 54965/88651 [00:00<00:00, 133734.63it/s] 79%|███████▉  | 69955/88651 [00:00<00:00, 138205.40it/s] 97%|█████████▋| 86250/88651 [00:00<00:00, 144800.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 144523.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14570/88651 [00:00<00:00, 145699.10it/s] 33%|███▎      | 29137/88651 [00:00<00:00, 145689.99it/s] 49%|████▉     | 43651/88651 [00:00<00:00, 145522.20it/s] 66%|██████▌   | 58567/88651 [00:00<00:00, 146594.30it/s] 83%|████████▎ | 73704/88651 [00:00<00:00, 147994.69it/s] 99%|█████████▉| 88085/88651 [00:00<00:00, 146711.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 146669.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18711/88651 [00:00<00:00, 187107.50it/s] 43%|████▎     | 37973/88651 [00:00<00:00, 188726.83it/s] 64%|██████▍   | 57033/88651 [00:00<00:00, 189283.21it/s] 87%|████████▋ | 76852/88651 [00:00<00:00, 191868.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 192994.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14988/88651 [00:00<00:00, 149876.93it/s] 37%|███▋      | 33006/88651 [00:00<00:00, 157839.09it/s] 58%|█████▊    | 51824/88651 [00:00<00:00, 165860.41it/s] 79%|███████▉  | 70140/88651 [00:00<00:00, 170692.07it/s]100%|█████████▉| 88499/88651 [00:00<00:00, 174366.88it/s]100%|██████████| 88651/88651 [00:00<00:00, 176900.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13930/88651 [00:00<00:00, 139294.15it/s] 30%|██▉       | 26202/88651 [00:00<00:00, 133868.61it/s] 50%|████▉     | 44102/88651 [00:00<00:00, 144821.51it/s] 71%|███████   | 62674/88651 [00:00<00:00, 155065.01it/s] 87%|████████▋ | 77480/88651 [00:00<00:00, 152892.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 149909.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12402/88651 [00:00<00:00, 124015.68it/s] 28%|██▊       | 25255/88651 [00:00<00:00, 125333.48it/s] 46%|████▌     | 40354/88651 [00:00<00:00, 132064.78it/s] 67%|██████▋   | 59749/88651 [00:00<00:00, 146043.22it/s] 90%|█████████ | 79799/88651 [00:00<00:00, 158997.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 163167.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17994/88651 [00:00<00:00, 179937.17it/s] 42%|████▏     | 36838/88651 [00:00<00:00, 182403.74it/s] 63%|██████▎   | 55603/88651 [00:00<00:00, 183944.93it/s] 84%|████████▎ | 74211/88651 [00:00<00:00, 184579.82it/s]100%|█████████▉| 88356/88651 [00:00<00:00, 133602.11it/s]100%|██████████| 88651/88651 [00:00<00:00, 153663.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11688/88651 [00:00<00:00, 116878.44it/s] 26%|██▋       | 23387/88651 [00:00<00:00, 116908.99it/s] 47%|████▋     | 41471/88651 [00:00<00:00, 130778.20it/s] 67%|██████▋   | 59490/88651 [00:00<00:00, 142499.81it/s] 81%|████████  | 71616/88651 [00:00<00:00, 110481.18it/s] 96%|█████████▌| 85295/88651 [00:00<00:00, 117245.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 120099.07it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9172/88651 [00:00<00:00, 83692.09it/s] 14%|█▎        | 12186/88651 [00:00<00:01, 53942.30it/s] 25%|██▌       | 22207/88651 [00:00<00:01, 62614.37it/s] 43%|████▎     | 38029/88651 [00:00<00:00, 76477.78it/s] 52%|█████▏    | 46175/88651 [00:00<00:00, 73026.75it/s] 67%|██████▋   | 59237/88651 [00:00<00:00, 84158.92it/s] 84%|████████▎ | 74077/88651 [00:00<00:00, 96718.50it/s] 98%|█████████▊| 86608/88651 [00:00<00:00, 103191.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 100994.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▌         | 4744/88651 [00:00<00:01, 47439.48it/s] 23%|██▎       | 20481/88651 [00:00<00:01, 60016.81it/s] 46%|████▌     | 40484/88651 [00:00<00:00, 75969.13it/s] 69%|██████▉   | 61569/88651 [00:00<00:00, 94010.41it/s] 94%|█████████▎| 83017/88651 [00:00<00:00, 113061.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 167142.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17871/88651 [00:00<00:00, 178707.19it/s] 42%|████▏     | 37488/88651 [00:00<00:00, 183610.06it/s] 63%|██████▎   | 55452/88651 [00:00<00:00, 182398.41it/s] 88%|████████▊ | 77924/88651 [00:00<00:00, 193319.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 197684.25it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18543/88651 [00:00<00:00, 185423.10it/s] 43%|████▎     | 38054/88651 [00:00<00:00, 188225.53it/s] 66%|██████▌   | 58666/88651 [00:00<00:00, 193256.37it/s] 90%|████████▉ | 79643/88651 [00:00<00:00, 197930.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 199179.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18158/88651 [00:00<00:00, 181579.31it/s] 42%|████▏     | 36885/88651 [00:00<00:00, 183249.02it/s] 64%|██████▎   | 56469/88651 [00:00<00:00, 186852.52it/s] 81%|████████▏ | 72032/88651 [00:00<00:00, 176244.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 181585.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19388/88651 [00:00<00:00, 193871.86it/s] 44%|████▍     | 38935/88651 [00:00<00:00, 194347.92it/s] 67%|██████▋   | 59002/88651 [00:00<00:00, 196200.04it/s] 89%|████████▉ | 78797/88651 [00:00<00:00, 196721.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 197502.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18577/88651 [00:00<00:00, 185767.96it/s] 43%|████▎     | 38496/88651 [00:00<00:00, 189599.62it/s] 66%|██████▌   | 58256/88651 [00:00<00:00, 191929.46it/s] 88%|████████▊ | 77890/88651 [00:00<00:00, 193231.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 196204.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14742/88651 [00:00<00:00, 147416.27it/s] 33%|███▎      | 29494/88651 [00:00<00:00, 147447.00it/s] 49%|████▉     | 43760/88651 [00:00<00:00, 145975.09it/s] 68%|██████▊   | 59951/88651 [00:00<00:00, 150416.04it/s] 89%|████████▉ | 78772/88651 [00:00<00:00, 160057.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 160883.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15940/88651 [00:00<00:00, 159392.55it/s] 33%|███▎      | 29472/88651 [00:00<00:00, 151314.08it/s] 49%|████▉     | 43693/88651 [00:00<00:00, 148461.15it/s] 66%|██████▌   | 58521/88651 [00:00<00:00, 148406.37it/s] 83%|████████▎ | 73230/88651 [00:00<00:00, 148007.23it/s] 99%|█████████▉| 88178/88651 [00:00<00:00, 148445.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 146811.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14495/88651 [00:00<00:00, 144948.41it/s] 35%|███▍      | 30996/88651 [00:00<00:00, 150434.45it/s] 57%|█████▋    | 50193/88651 [00:00<00:00, 160874.61it/s] 78%|███████▊  | 69443/88651 [00:00<00:00, 169213.02it/s] 99%|█████████▉| 87828/88651 [00:00<00:00, 173353.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 175333.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7034/88651 [00:00<00:01, 70331.35it/s] 18%|█▊        | 15990/88651 [00:00<00:00, 75172.95it/s] 38%|███▊      | 33341/88651 [00:00<00:00, 90572.06it/s] 57%|█████▋    | 50841/88651 [00:00<00:00, 105898.62it/s] 78%|███████▊  | 68948/88651 [00:00<00:00, 120962.83it/s] 99%|█████████▉| 87642/88651 [00:00<00:00, 135285.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 146411.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14464/88651 [00:00<00:00, 144635.31it/s] 33%|███▎      | 29059/88651 [00:00<00:00, 145024.28it/s] 50%|████▉     | 43977/88651 [00:00<00:00, 146245.80it/s] 67%|██████▋   | 59036/88651 [00:00<00:00, 147522.24it/s] 85%|████████▍ | 75347/88651 [00:00<00:00, 151874.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 155043.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18344/88651 [00:00<00:00, 183435.36it/s] 42%|████▏     | 36867/88651 [00:00<00:00, 183969.88it/s] 59%|█████▉    | 52533/88651 [00:00<00:00, 174825.77it/s] 72%|███████▏  | 63820/88651 [00:00<00:00, 134502.96it/s] 85%|████████▍ | 75324/88651 [00:00<00:00, 128003.99it/s] 97%|█████████▋| 86142/88651 [00:00<00:00, 109250.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 126945.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13847/88651 [00:00<00:00, 138465.18it/s] 31%|███▏      | 27903/88651 [00:00<00:00, 139085.01it/s] 46%|████▌     | 40724/88651 [00:00<00:00, 135632.82it/s] 57%|█████▋    | 50748/88651 [00:00<00:00, 114175.56it/s] 67%|██████▋   | 59434/88651 [00:00<00:00, 99379.19it/s]  78%|███████▊  | 69411/88651 [00:00<00:00, 97294.37it/s] 88%|████████▊ | 78052/88651 [00:00<00:00, 86587.30it/s] 97%|█████████▋| 86168/88651 [00:00<00:00, 76297.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 94929.59it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13773/88651 [00:00<00:00, 137724.55it/s] 33%|███▎      | 29235/88651 [00:00<00:00, 142392.10it/s] 52%|█████▏    | 45711/88651 [00:00<00:00, 148437.25it/s] 63%|██████▎   | 55926/88651 [00:00<00:00, 113746.30it/s] 74%|███████▎  | 65285/88651 [00:00<00:00, 83028.50it/s]  83%|████████▎ | 73364/88651 [00:00<00:00, 75032.75it/s]100%|█████████▉| 88252/88651 [00:00<00:00, 88149.45it/s]100%|██████████| 88651/88651 [00:00<00:00, 103464.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19121/88651 [00:00<00:00, 191202.89it/s] 44%|████▎     | 38647/88651 [00:00<00:00, 192400.23it/s] 64%|██████▍   | 57019/88651 [00:00<00:00, 189711.16it/s] 86%|████████▌ | 76315/88651 [00:00<00:00, 190673.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 190859.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18474/88651 [00:00<00:00, 184735.77it/s] 41%|████▏     | 36768/88651 [00:00<00:00, 184191.01it/s] 62%|██████▏   | 55168/88651 [00:00<00:00, 184132.93it/s] 82%|████████▏ | 72941/88651 [00:00<00:00, 182162.18it/s]100%|██████████| 88651/88651 [00:00<00:00, 182532.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18297/88651 [00:00<00:00, 182967.56it/s] 42%|████▏     | 37071/88651 [00:00<00:00, 184370.95it/s] 63%|██████▎   | 55506/88651 [00:00<00:00, 184363.40it/s] 83%|████████▎ | 73533/88651 [00:00<00:00, 183113.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 183022.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14136/88651 [00:00<00:00, 141357.44it/s] 33%|███▎      | 29162/88651 [00:00<00:00, 143912.42it/s] 50%|█████     | 44725/88651 [00:00<00:00, 147238.08it/s] 67%|██████▋   | 59467/88651 [00:00<00:00, 147289.81it/s] 87%|████████▋ | 76868/88651 [00:00<00:00, 154401.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 157522.73it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14475/88651 [00:00<00:00, 144740.48it/s] 33%|███▎      | 28851/88651 [00:00<00:00, 144442.38it/s] 49%|████▉     | 43483/88651 [00:00<00:00, 145000.11it/s] 66%|██████▌   | 58496/88651 [00:00<00:00, 146499.37it/s] 85%|████████▍ | 75176/88651 [00:00<00:00, 152049.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 154612.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15598/88651 [00:00<00:00, 155979.78it/s] 38%|███▊      | 33881/88651 [00:00<00:00, 163167.82it/s] 59%|█████▉    | 52656/88651 [00:00<00:00, 169838.44it/s] 81%|████████  | 71676/88651 [00:00<00:00, 175466.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 179502.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18443/88651 [00:00<00:00, 184424.02it/s] 42%|████▏     | 37254/88651 [00:00<00:00, 185514.09it/s] 63%|██████▎   | 56033/88651 [00:00<00:00, 186188.33it/s] 85%|████████▍ | 75170/88651 [00:00<00:00, 187711.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 189491.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19202/88651 [00:00<00:00, 192017.89it/s] 44%|████▍     | 38882/88651 [00:00<00:00, 193427.18it/s] 66%|██████▋   | 58883/88651 [00:00<00:00, 195355.18it/s] 89%|████████▉ | 78962/88651 [00:00<00:00, 196952.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 197707.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18458/88651 [00:00<00:00, 184579.30it/s] 43%|████▎     | 38288/88651 [00:00<00:00, 188489.40it/s] 66%|██████▌   | 58153/88651 [00:00<00:00, 191424.69it/s] 88%|████████▊ | 77893/88651 [00:00<00:00, 193178.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 195631.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14475/88651 [00:00<00:00, 144748.76it/s] 33%|███▎      | 29260/88651 [00:00<00:00, 145663.06it/s] 50%|█████     | 44340/88651 [00:00<00:00, 147166.44it/s] 67%|██████▋   | 59494/88651 [00:00<00:00, 148451.19it/s] 84%|████████▍ | 74749/88651 [00:00<00:00, 149656.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 153209.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17264/88651 [00:00<00:00, 172636.87it/s] 41%|████      | 36379/88651 [00:00<00:00, 177802.35it/s] 63%|██████▎   | 55510/88651 [00:00<00:00, 181647.24it/s] 84%|████████▍ | 74320/88651 [00:00<00:00, 183534.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 183744.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14382/88651 [00:00<00:00, 143811.22it/s] 21%|██        | 18697/88651 [00:00<00:00, 83203.97it/s]  33%|███▎      | 29602/88651 [00:00<00:00, 89571.49it/s] 48%|████▊     | 42330/88651 [00:00<00:00, 98308.72it/s] 57%|█████▋    | 50535/88651 [00:00<00:00, 76294.91it/s] 69%|██████▊   | 60757/88651 [00:00<00:00, 82577.16it/s] 78%|███████▊  | 68897/88651 [00:00<00:00, 70179.42it/s] 92%|█████████▏| 81150/88651 [00:00<00:00, 80496.31it/s]100%|██████████| 88651/88651 [00:01<00:00, 82849.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12786/88651 [00:00<00:00, 127858.90it/s] 33%|███▎      | 29408/88651 [00:00<00:00, 137369.40it/s] 46%|████▌     | 40405/88651 [00:00<00:00, 127810.20it/s] 55%|█████▌    | 49074/88651 [00:00<00:00, 85400.28it/s]  73%|███████▎  | 64875/88651 [00:00<00:00, 99055.54it/s] 84%|████████▍ | 74874/88651 [00:00<00:00, 86130.99it/s]100%|██████████| 88651/88651 [00:00<00:00, 107440.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14145/88651 [00:00<00:00, 141446.76it/s] 37%|███▋      | 32829/88651 [00:00<00:00, 152564.95it/s] 58%|█████▊    | 51388/88651 [00:00<00:00, 161167.10it/s] 80%|███████▉  | 70512/88651 [00:00<00:00, 169144.72it/s]100%|██████████| 88651/88651 [00:00<00:00, 178886.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19264/88651 [00:00<00:00, 192638.35it/s] 44%|████▍     | 39146/88651 [00:00<00:00, 194451.34it/s] 66%|██████▋   | 58808/88651 [00:00<00:00, 195095.43it/s] 87%|████████▋ | 77372/88651 [00:00<00:00, 192156.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 192279.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17208/88651 [00:00<00:00, 172074.42it/s] 40%|████      | 35507/88651 [00:00<00:00, 175209.79it/s] 62%|██████▏   | 54709/88651 [00:00<00:00, 179935.16it/s] 83%|████████▎ | 73437/88651 [00:00<00:00, 182076.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 183709.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16215/88651 [00:00<00:00, 162131.99it/s] 40%|███▉      | 35137/88651 [00:00<00:00, 169405.27it/s] 60%|██████    | 53441/88651 [00:00<00:00, 173275.46it/s] 80%|████████  | 70989/88651 [00:00<00:00, 173930.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 179787.03it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17396/88651 [00:00<00:00, 171253.54it/s] 40%|████      | 35865/88651 [00:00<00:00, 175074.19it/s] 61%|██████▏   | 54379/88651 [00:00<00:00, 177975.19it/s] 82%|████████▏ | 72850/88651 [00:00<00:00, 179941.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 182958.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18359/88651 [00:00<00:00, 183582.30it/s] 42%|████▏     | 37593/88651 [00:00<00:00, 186123.86it/s] 64%|██████▍   | 56533/88651 [00:00<00:00, 187091.88it/s] 85%|████████▌ | 75481/88651 [00:00<00:00, 187800.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 190062.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13903/88651 [00:00<00:00, 139020.85it/s] 36%|███▌      | 31904/88651 [00:00<00:00, 149212.31it/s] 56%|█████▋    | 49928/88651 [00:00<00:00, 157337.31it/s] 77%|███████▋  | 68656/88651 [00:00<00:00, 165263.55it/s] 98%|█████████▊| 86866/88651 [00:00<00:00, 169976.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 173883.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16896/88651 [00:00<00:00, 168959.76it/s] 39%|███▊      | 34272/88651 [00:00<00:00, 170370.96it/s] 55%|█████▌    | 49043/88651 [00:00<00:00, 162874.26it/s] 72%|███████▏  | 64226/88651 [00:00<00:00, 159393.05it/s] 92%|█████████▏| 81325/88651 [00:00<00:00, 162701.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 164127.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14737/88651 [00:00<00:00, 147362.41it/s] 33%|███▎      | 29557/88651 [00:00<00:00, 147611.37it/s] 52%|█████▏    | 46160/88651 [00:00<00:00, 152691.23it/s] 74%|███████▎  | 65266/88651 [00:00<00:00, 162478.88it/s] 94%|█████████▎| 82942/88651 [00:00<00:00, 166513.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 163238.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14185/88651 [00:00<00:00, 141849.46it/s] 30%|██▉       | 26404/88651 [00:00<00:00, 135316.51it/s] 40%|████      | 35568/88651 [00:00<00:00, 118387.76it/s] 49%|████▉     | 43752/88651 [00:00<00:00, 104400.45it/s] 65%|██████▍   | 57365/88651 [00:00<00:00, 112247.71it/s] 86%|████████▌ | 76422/88651 [00:00<00:00, 128033.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 134032.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11719/88651 [00:00<00:00, 117185.92it/s] 29%|██▉       | 25863/88651 [00:00<00:00, 123540.32it/s] 46%|████▌     | 40584/88651 [00:00<00:00, 129799.24it/s] 66%|██████▌   | 58561/88651 [00:00<00:00, 141606.86it/s] 88%|████████▊ | 78144/88651 [00:00<00:00, 154434.44it/s]100%|██████████| 88651/88651 [00:00<00:00, 160188.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15951/88651 [00:00<00:00, 159509.01it/s] 36%|███▌      | 31612/88651 [00:00<00:00, 158625.39it/s] 53%|█████▎    | 47082/88651 [00:00<00:00, 157423.74it/s] 70%|███████   | 62155/88651 [00:00<00:00, 155353.48it/s] 85%|████████▌ | 75705/88651 [00:00<00:00, 148811.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 156684.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9115/88651 [00:00<00:00, 91144.87it/s] 22%|██▏       | 19517/88651 [00:00<00:00, 94657.71it/s] 38%|███▊      | 33459/88651 [00:00<00:00, 104745.29it/s] 55%|█████▌    | 48958/88651 [00:00<00:00, 116028.99it/s] 77%|███████▋  | 68637/88651 [00:00<00:00, 132319.15it/s] 92%|█████████▏| 81572/88651 [00:00<00:00, 124410.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 116665.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11921/88651 [00:00<00:00, 119200.74it/s] 21%|██        | 18213/88651 [00:00<00:00, 92422.32it/s]  30%|███       | 26999/88651 [00:00<00:00, 91004.19it/s] 50%|████▉     | 43891/88651 [00:00<00:00, 105619.21it/s] 60%|█████▉    | 52922/88651 [00:00<00:00, 94198.89it/s]  76%|███████▌  | 67024/88651 [00:00<00:00, 104619.02it/s] 87%|████████▋ | 77260/88651 [00:00<00:00, 96633.44it/s]  98%|█████████▊| 86886/88651 [00:00<00:00, 76019.18it/s]100%|██████████| 88651/88651 [00:00<00:00, 93619.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14387/88651 [00:00<00:00, 143869.79it/s] 31%|███       | 27691/88651 [00:00<00:00, 140439.55it/s] 52%|█████▏    | 46140/88651 [00:00<00:00, 151275.45it/s] 72%|███████▏  | 64261/88651 [00:00<00:00, 159160.97it/s] 94%|█████████▍| 83583/88651 [00:00<00:00, 168047.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 168037.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▍       | 21795/88651 [00:00<00:00, 217948.65it/s] 48%|████▊     | 42327/88651 [00:00<00:00, 213998.20it/s] 64%|██████▍   | 56741/88651 [00:00<00:00, 186830.93it/s] 79%|███████▉  | 69933/88651 [00:00<00:00, 166089.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 178628.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19879/88651 [00:00<00:00, 198788.29it/s] 45%|████▍     | 39859/88651 [00:00<00:00, 199088.09it/s] 67%|██████▋   | 59522/88651 [00:00<00:00, 198343.43it/s] 88%|████████▊ | 78111/88651 [00:00<00:00, 194435.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 194865.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18923/88651 [00:00<00:00, 189229.28it/s] 41%|████      | 36273/88651 [00:00<00:00, 184215.94it/s] 61%|██████▏   | 54367/88651 [00:00<00:00, 183220.16it/s] 82%|████████▏ | 72629/88651 [00:00<00:00, 183037.13it/s]100%|█████████▉| 88340/88651 [00:00<00:00, 174401.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 176482.43it/s]
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
epoch 5: {'train_loss': '12.46190'}; time used = 3.9390478134155273s
epoch 10: {'train_loss': '12.10886'}; time used = 3.8107731342315674s
epoch 15: {'train_loss': '11.71760'}; time used = 3.2984440326690674s
epoch 20: {'train_loss': '11.38914'}; time used = 4.06275486946106s
epoch 25: {'train_loss': '11.02196'}; time used = 3.2766335010528564s
epoch 30: {'train_loss': '10.66906'}; time used = 3.5437495708465576s
epoch 35: {'train_loss': '10.30129'}; time used = 4.098387718200684s
epoch 40: {'train_loss': '10.04920'}; time used = 3.8834104537963867s
epoch 45: {'train_loss': '9.78645'}; time used = 4.940562963485718s
epoch 50: {'train_loss': '9.56099'}; time used = 6.702737331390381s
epoch 55: {'train_loss': '9.23801'}; time used = 5.207048177719116s
epoch 60: {'train_loss': '9.04011'}; time used = 5.135468244552612s
epoch 65: {'train_loss': '8.75816'}; time used = 6.824445009231567s
epoch 70: {'train_loss': '8.60716'}; time used = 5.521589756011963s
epoch 75: {'train_loss': '8.41084'}; time used = 6.763554573059082s
epoch 80: {'train_loss': '8.26706'}; time used = 6.5838704109191895s
epoch 85: {'train_loss': '8.03676'}; time used = 6.5674238204956055s
epoch 90: {'train_loss': '7.88934'}; time used = 6.2525200843811035s
epoch 95: {'train_loss': '7.77903'}; time used = 7.042823314666748s
epoch 100: {'train_loss': '7.63376'}; time used = 5.148860216140747s
epoch 105: {'train_loss': '7.50406'}; time used = 6.104694128036499s
epoch 110: {'train_loss': '7.34057'}; time used = 4.910296678543091s
epoch 115: {'train_loss': '7.27540'}; time used = 3.1977615356445312s
epoch 120: {'train_loss': '7.14606'}; time used = 3.9943950176239014s
epoch 125: {'train_loss': '7.06936'}; time used = 2.800253391265869s
epoch 130: {'train_loss': '6.97132'}; time used = 3.7915050983428955s
epoch 135: {'train_loss': '6.89649'}; time used = 3.3418219089508057s
epoch 140: {'train_loss': '6.83700'}; time used = 2.5974929332733154s
epoch 145: {'train_loss': '6.77848'}; time used = 3.7194466590881348s
epoch 150: {'train_loss': '6.69774'}; time used = 2.9793171882629395s
epoch 155: {'train_loss': '6.71977'}; time used = 3.093864679336548s
epoch 160: {'train_loss': '6.63348'}; time used = 5.527611494064331s
epoch 165: {'train_loss': '6.59572'}; time used = 5.4321184158325195s
epoch 170: {'train_loss': '6.50371'}; time used = 5.456835746765137s
epoch 175: {'train_loss': '6.46347'}; time used = 5.689448356628418s
epoch 180: {'train_loss': '6.50952'}; time used = 5.320453882217407s
epoch 185: {'train_loss': '6.41713'}; time used = 6.409318447113037s
epoch 190: {'train_loss': '6.37771'}; time used = 5.339877367019653s
epoch 195: {'train_loss': '6.39285'}; time used = 5.116069078445435s
epoch 200: {'train_loss': '6.38672'}; time used = 5.7438294887542725s
epoch 205: {'train_loss': '6.27392'}; time used = 5.089674949645996s
epoch 210: {'train_loss': '6.23475'}; time used = 5.253749847412109s
epoch 215: {'train_loss': '6.32100'}; time used = 6.820101976394653s
epoch 220: {'train_loss': '6.26505'}; time used = 5.7157838344573975s
epoch 225: {'train_loss': '6.28547'}; time used = 5.90801477432251s
epoch 230: {'train_loss': '6.21063'}; time used = 5.866340398788452s
epoch 235: {'train_loss': '6.25470'}; time used = 5.363308429718018s
epoch 240: {'train_loss': '6.22025'}; time used = 5.26807427406311s
epoch 245: {'train_loss': '6.18868'}; time used = 5.083170413970947s
epoch 250: {'train_loss': '6.26705'}; time used = 2.7356863021850586s
epoch 255: {'train_loss': '6.15417'}; time used = 3.2496533393859863s
epoch 260: {'train_loss': '6.18715'}; time used = 3.000786781311035s
epoch 265: {'train_loss': '6.14727'}; time used = 2.4424808025360107s
epoch 270: {'train_loss': '6.16883'}; time used = 3.774818181991577s
epoch 275: {'train_loss': '6.12171'}; time used = 2.54435133934021s
epoch 280: {'train_loss': '6.15132'}; time used = 2.9070146083831787s
epoch 285: {'train_loss': '6.10971'}; time used = 3.548902750015259s
epoch 290: {'train_loss': '6.05778'}; time used = 2.835763692855835s
epoch 295: {'train_loss': '6.04002'}; time used = 3.4733307361602783s
epoch 300: {'train_loss': '6.07738'}; time used = 2.6708195209503174s
epoch 305: {'train_loss': '6.05960'}; time used = 2.7053260803222656s
epoch 310: {'train_loss': '6.00625'}; time used = 3.79894757270813s
epoch 315: {'train_loss': '6.06971'}; time used = 2.8244073390960693s
epoch 320: {'train_loss': '6.02197'}; time used = 3.100227117538452s
epoch 325: {'train_loss': '6.06070'}; time used = 3.3259856700897217s
epoch 330: {'train_loss': '6.01281'}; time used = 2.7559707164764404s
epoch 335: {'train_loss': '6.02416'}; time used = 3.766503095626831s
epoch 340: {'train_loss': '6.05621'}; time used = 2.687905788421631s
epoch 345: {'train_loss': '5.94348'}; time used = 2.8696072101593018s
epoch 350: {'train_loss': '6.00727'}; time used = 3.4483327865600586s
epoch 355: {'train_loss': '5.99557'}; time used = 2.594194173812866s
epoch 360: {'train_loss': '5.99330'}; time used = 2.9123549461364746s
epoch 365: {'train_loss': '5.97380'}; time used = 3.516929864883423s
epoch 370: {'train_loss': '6.00478'}; time used = 2.7673001289367676s
epoch 375: {'train_loss': '5.95831'}; time used = 3.179159641265869s
epoch 380: {'train_loss': '5.92123'}; time used = 2.867124080657959s
epoch 385: {'train_loss': '5.96596'}; time used = 2.7514593601226807s
epoch 390: {'train_loss': '5.92300'}; time used = 3.3480803966522217s
epoch 395: {'train_loss': '5.91146'}; time used = 2.8700156211853027s
epoch 400: {'train_loss': '5.94007'}; time used = 2.9647183418273926s
epoch 405: {'train_loss': '5.95893'}; time used = 3.6071231365203857s
epoch 410: {'train_loss': '5.90678'}; time used = 2.8385045528411865s
epoch 415: {'train_loss': '5.92643'}; time used = 3.749948501586914s
epoch 420: {'train_loss': '5.88822'}; time used = 2.853970527648926s
epoch 425: {'train_loss': '5.88244'}; time used = 2.5413167476654053s
epoch 430: {'train_loss': '5.84726'}; time used = 3.7156753540039062s
epoch 435: {'train_loss': '5.84137'}; time used = 2.762655019760132s
epoch 440: {'train_loss': '5.87949'}; time used = 2.894869089126587s
epoch 445: {'train_loss': '5.92606'}; time used = 3.394926071166992s
epoch 450: {'train_loss': '5.85944'}; time used = 2.8477931022644043s
epoch 455: {'train_loss': '5.81852'}; time used = 3.7168452739715576s
epoch 460: {'train_loss': '5.82834'}; time used = 2.5453555583953857s
epoch 465: {'train_loss': '5.82357'}; time used = 2.922426462173462s
epoch 470: {'train_loss': '5.85528'}; time used = 3.71205997467041s
epoch 475: {'train_loss': '5.85335'}; time used = 2.82238507270813s
epoch 480: {'train_loss': '5.82269'}; time used = 2.6694438457489014s
epoch 485: {'train_loss': '5.83300'}; time used = 3.556429862976074s
epoch 490: {'train_loss': '5.80786'}; time used = 2.650289535522461s
epoch 495: {'train_loss': '5.84677'}; time used = 3.347811460494995s
epoch 500: {'train_loss': '5.79607'}; time used = 3.1485636234283447s
Finished training. Time used = 414.6202063560486.
Training classifier using 20.00% nodes...
{'micro': 0.3927982756434639, 'macro': 0.21225738472108902, 'samples': 0.3927982756434639, 'weighted': 0.2513890520838048}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3657/88651 [00:00<00:02, 36567.68it/s]  7%|▋         | 6619/88651 [00:00<00:02, 34162.84it/s] 13%|█▎        | 11458/88651 [00:00<00:02, 37467.11it/s] 18%|█▊        | 16320/88651 [00:00<00:01, 40235.46it/s] 22%|██▏       | 19607/88651 [00:00<00:01, 36006.00it/s] 28%|██▊       | 25230/88651 [00:00<00:01, 40360.44it/s] 34%|███▎      | 29883/88651 [00:00<00:01, 40488.81it/s] 38%|███▊      | 33840/88651 [00:00<00:01, 38426.40it/s] 43%|████▎     | 37867/88651 [00:00<00:01, 38297.58it/s] 48%|████▊     | 42192/88651 [00:01<00:01, 37887.24it/s] 53%|█████▎    | 47295/88651 [00:01<00:01, 41058.80it/s] 58%|█████▊    | 51465/88651 [00:01<00:00, 38442.06it/s] 64%|██████▎   | 56421/88651 [00:01<00:00, 40323.51it/s] 68%|██████▊   | 60533/88651 [00:01<00:00, 35337.44it/s] 72%|███████▏  | 64234/88651 [00:01<00:00, 30885.89it/s] 77%|███████▋  | 68143/88651 [00:01<00:00, 32960.53it/s] 81%|████████  | 71631/88651 [00:01<00:00, 32423.77it/s] 85%|████████▍ | 75279/88651 [00:02<00:00, 33112.57it/s] 89%|████████▉ | 78689/88651 [00:02<00:00, 31280.46it/s] 92%|█████████▏| 81908/88651 [00:02<00:00, 24859.25it/s] 98%|█████████▊| 86773/88651 [00:02<00:00, 28933.95it/s]100%|██████████| 88651/88651 [00:02<00:00, 35314.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3844/88651 [00:00<00:02, 35668.96it/s]  9%|▉         | 8385/88651 [00:00<00:02, 38049.97it/s] 14%|█▍        | 12542/88651 [00:00<00:02, 37467.67it/s] 20%|█▉        | 17362/88651 [00:00<00:01, 39357.56it/s] 25%|██▍       | 21811/88651 [00:00<00:01, 38758.59it/s] 30%|██▉       | 26579/88651 [00:00<00:01, 40435.12it/s] 34%|███▍      | 30293/88651 [00:00<00:01, 38176.16it/s] 39%|███▉      | 34783/88651 [00:00<00:01, 39971.01it/s] 44%|████▍     | 38977/88651 [00:00<00:01, 40541.75it/s] 49%|████▉     | 43437/88651 [00:01<00:01, 41415.31it/s] 54%|█████▎    | 47515/88651 [00:01<00:01, 38966.71it/s] 58%|█████▊    | 51397/88651 [00:01<00:00, 37624.81it/s] 62%|██████▏   | 55159/88651 [00:01<00:01, 31962.30it/s] 66%|██████▋   | 58758/88651 [00:01<00:00, 33072.48it/s] 70%|███████   | 62353/88651 [00:01<00:00, 33309.05it/s] 74%|███████▍  | 66016/88651 [00:01<00:00, 33596.86it/s] 79%|███████▊  | 69630/88651 [00:01<00:00, 34121.74it/s] 83%|████████▎ | 73200/88651 [00:01<00:00, 33396.77it/s] 87%|████████▋ | 77560/88651 [00:02<00:00, 35918.42it/s] 92%|█████████▏| 81636/88651 [00:02<00:00, 36621.93it/s] 97%|█████████▋| 86352/88651 [00:02<00:00, 38323.95it/s]100%|██████████| 88651/88651 [00:02<00:00, 37142.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7975/88651 [00:00<00:01, 79745.32it/s] 13%|█▎        | 11726/88651 [00:00<00:01, 58845.80it/s] 20%|██        | 17805/88651 [00:00<00:01, 59415.65it/s] 33%|███▎      | 29658/88651 [00:00<00:00, 69868.13it/s] 40%|████      | 35848/88651 [00:00<00:00, 66271.28it/s] 47%|████▋     | 41956/88651 [00:00<00:00, 61846.14it/s] 54%|█████▍    | 47837/88651 [00:00<00:00, 58817.87it/s] 60%|██████    | 53538/88651 [00:00<00:00, 56739.82it/s] 67%|██████▋   | 59398/88651 [00:00<00:00, 57284.93it/s] 73%|███████▎  | 65050/88651 [00:01<00:00, 55802.11it/s] 80%|████████  | 71054/88651 [00:01<00:00, 56772.92it/s] 87%|████████▋ | 77093/88651 [00:01<00:00, 57683.13it/s] 94%|█████████▎| 83076/88651 [00:01<00:00, 58310.33it/s]100%|██████████| 88651/88651 [00:01<00:00, 61120.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4309/88651 [00:00<00:01, 43086.65it/s]  9%|▉         | 8372/88651 [00:00<00:02, 39951.83it/s] 14%|█▍        | 12600/88651 [00:00<00:01, 40622.86it/s] 19%|█▉        | 16898/88651 [00:00<00:01, 40106.22it/s] 24%|██▍       | 21118/88651 [00:00<00:01, 39782.84it/s] 29%|██▉       | 25709/88651 [00:00<00:01, 39424.89it/s] 35%|███▌      | 31264/88651 [00:00<00:01, 42982.09it/s] 40%|███▉      | 35312/88651 [00:00<00:01, 41364.81it/s] 44%|████▍     | 39287/88651 [00:01<00:01, 33508.00it/s] 48%|████▊     | 42766/88651 [00:01<00:01, 31096.86it/s] 53%|█████▎    | 47003/88651 [00:01<00:01, 33139.71it/s] 58%|█████▊    | 51263/88651 [00:01<00:01, 35266.37it/s] 62%|██████▏   | 54914/88651 [00:01<00:00, 35445.48it/s] 72%|███████▏  | 63969/88651 [00:01<00:00, 43356.72it/s] 84%|████████▍ | 74687/88651 [00:01<00:00, 52526.20it/s] 92%|█████████▏| 81478/88651 [00:01<00:00, 50644.37it/s]100%|██████████| 88651/88651 [00:01<00:00, 46880.39it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13231/88651 [00:00<00:00, 132309.50it/s] 27%|██▋       | 23591/88651 [00:00<00:00, 119842.81it/s] 36%|███▌      | 31480/88651 [00:00<00:00, 103692.51it/s] 46%|████▌     | 40664/88651 [00:00<00:00, 99824.90it/s]  56%|█████▋    | 49962/88651 [00:00<00:00, 96473.35it/s] 65%|██████▌   | 57699/88651 [00:00<00:00, 82043.92it/s] 73%|███████▎  | 64939/88651 [00:00<00:00, 77294.53it/s] 84%|████████▍ | 74895/88651 [00:00<00:00, 82852.86it/s] 98%|█████████▊| 86484/88651 [00:00<00:00, 90601.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 92256.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6283/88651 [00:00<00:01, 62441.36it/s]  9%|▉         | 8157/88651 [00:00<00:02, 33609.79it/s] 12%|█▏        | 10299/88651 [00:00<00:02, 28358.81it/s] 19%|█▉        | 17206/88651 [00:00<00:02, 34450.34it/s] 25%|██▍       | 22051/88651 [00:00<00:01, 35751.17it/s] 32%|███▏      | 28739/88651 [00:00<00:01, 41553.25it/s] 40%|████      | 35609/88651 [00:00<00:01, 45087.79it/s] 48%|████▊     | 42529/88651 [00:00<00:00, 48292.32it/s] 58%|█████▊    | 51272/88651 [00:00<00:00, 55783.26it/s] 66%|██████▌   | 58286/88651 [00:01<00:00, 59432.19it/s] 76%|███████▌  | 66945/88651 [00:01<00:00, 65604.06it/s] 85%|████████▍ | 75054/88651 [00:01<00:00, 69590.72it/s] 97%|█████████▋| 85610/88651 [00:01<00:00, 77513.38it/s]100%|██████████| 88651/88651 [00:01<00:00, 62433.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8795/88651 [00:00<00:00, 87946.73it/s] 20%|██        | 17947/88651 [00:00<00:00, 88987.85it/s] 32%|███▏      | 28581/88651 [00:00<00:00, 93567.31it/s] 39%|███▉      | 34986/88651 [00:00<00:00, 77619.82it/s] 52%|█████▏    | 45715/88651 [00:00<00:00, 84640.52it/s] 60%|██████    | 53239/88651 [00:00<00:00, 78402.07it/s] 68%|██████▊   | 60513/88651 [00:00<00:00, 61377.71it/s] 75%|███████▌  | 66827/88651 [00:00<00:00, 56603.99it/s] 82%|████████▏ | 72684/88651 [00:01<00:00, 56212.37it/s] 88%|████████▊ | 78444/88651 [00:01<00:00, 55023.73it/s] 95%|█████████▍| 84049/88651 [00:01<00:00, 51695.16it/s]100%|██████████| 88651/88651 [00:01<00:00, 62276.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6879/88651 [00:00<00:01, 68785.15it/s] 15%|█▍        | 13131/88651 [00:00<00:01, 65234.57it/s] 20%|██        | 18090/88651 [00:00<00:01, 59593.09it/s] 26%|██▌       | 23217/88651 [00:00<00:01, 56825.48it/s] 31%|███       | 27361/88651 [00:00<00:01, 44633.19it/s] 35%|███▌      | 31154/88651 [00:00<00:01, 34809.82it/s] 39%|███▉      | 34499/88651 [00:00<00:01, 30714.89it/s] 44%|████▍     | 39386/88651 [00:00<00:01, 34566.87it/s] 53%|█████▎    | 46593/88651 [00:01<00:01, 40960.90it/s] 61%|██████    | 54199/88651 [00:01<00:00, 47542.48it/s] 67%|██████▋   | 59764/88651 [00:01<00:00, 43739.38it/s] 73%|███████▎  | 64765/88651 [00:01<00:00, 40436.10it/s] 78%|███████▊  | 69297/88651 [00:01<00:00, 40956.69it/s] 83%|████████▎ | 73737/88651 [00:01<00:00, 41584.97it/s] 88%|████████▊ | 78430/88651 [00:01<00:00, 42463.82it/s] 94%|█████████▎| 83011/88651 [00:01<00:00, 43164.86it/s]100%|██████████| 88651/88651 [00:01<00:00, 45020.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4126/88651 [00:00<00:02, 41258.47it/s] 11%|█         | 9540/88651 [00:00<00:01, 41927.11it/s] 15%|█▍        | 13114/88651 [00:00<00:01, 39780.92it/s] 20%|█▉        | 17697/88651 [00:00<00:01, 41284.06it/s] 25%|██▌       | 22486/88651 [00:00<00:01, 42852.76it/s] 31%|███▏      | 27899/88651 [00:00<00:01, 45709.03it/s] 38%|███▊      | 33609/88651 [00:00<00:01, 47556.29it/s] 44%|████▍     | 38807/88651 [00:00<00:01, 47701.19it/s] 49%|████▉     | 43392/88651 [00:00<00:00, 46020.40it/s] 54%|█████▍    | 47877/88651 [00:01<00:00, 42207.06it/s] 59%|█████▊    | 52078/88651 [00:01<00:00, 39383.65it/s] 64%|██████▎   | 56333/88651 [00:01<00:00, 38901.14it/s] 70%|██████▉   | 61835/88651 [00:01<00:00, 42648.87it/s] 75%|███████▍  | 66340/88651 [00:01<00:00, 42889.93it/s] 82%|████████▏ | 72974/88651 [00:01<00:00, 47977.69it/s] 88%|████████▊ | 78027/88651 [00:01<00:00, 46639.95it/s] 94%|█████████▎| 82943/88651 [00:01<00:00, 47367.38it/s] 99%|█████████▉| 87813/88651 [00:01<00:00, 43355.36it/s]100%|██████████| 88651/88651 [00:01<00:00, 44681.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▎         | 3183/88651 [00:00<00:02, 30866.28it/s]  9%|▉         | 7808/88651 [00:00<00:02, 34283.92it/s] 13%|█▎        | 11734/88651 [00:00<00:02, 35631.57it/s] 18%|█▊        | 15608/88651 [00:00<00:02, 36510.02it/s] 21%|██        | 18592/88651 [00:00<00:02, 32164.24it/s] 26%|██▌       | 23140/88651 [00:00<00:01, 35072.40it/s] 33%|███▎      | 29021/88651 [00:00<00:01, 37491.03it/s] 39%|███▊      | 34260/88651 [00:00<00:01, 40985.92it/s] 43%|████▎     | 38399/88651 [00:00<00:01, 39823.76it/s] 48%|████▊     | 42993/88651 [00:01<00:01, 41479.72it/s] 53%|█████▎    | 47316/88651 [00:01<00:01, 41324.95it/s] 59%|█████▉    | 52311/88651 [00:01<00:00, 42925.37it/s] 64%|██████▍   | 56641/88651 [00:01<00:00, 41053.02it/s] 69%|██████▊   | 60792/88651 [00:01<00:00, 41188.69it/s] 73%|███████▎  | 64942/88651 [00:01<00:00, 36291.00it/s] 80%|███████▉  | 70757/88651 [00:01<00:00, 40903.14it/s] 85%|████████▍ | 75131/88651 [00:01<00:00, 36782.79it/s] 91%|█████████ | 80537/88651 [00:02<00:00, 39117.64it/s] 96%|█████████▋| 85376/88651 [00:02<00:00, 41502.90it/s]100%|██████████| 88651/88651 [00:02<00:00, 40673.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8534/88651 [00:00<00:00, 85338.66it/s] 13%|█▎        | 11095/88651 [00:00<00:01, 48592.45it/s] 17%|█▋        | 14756/88651 [00:00<00:01, 42136.77it/s] 23%|██▎       | 20238/88651 [00:00<00:01, 45098.12it/s] 28%|██▊       | 24609/88651 [00:00<00:01, 44672.10it/s] 32%|███▏      | 28391/88651 [00:00<00:01, 41452.70it/s] 38%|███▊      | 33370/88651 [00:00<00:01, 43645.14it/s] 43%|████▎     | 37992/88651 [00:00<00:01, 42995.40it/s] 49%|████▉     | 43646/88651 [00:00<00:00, 45286.56it/s] 55%|█████▍    | 48547/88651 [00:01<00:00, 45188.48it/s] 61%|██████▏   | 54495/88651 [00:01<00:00, 48144.82it/s] 67%|██████▋   | 59813/88651 [00:01<00:00, 47209.30it/s] 73%|███████▎  | 64945/88651 [00:01<00:00, 47551.96it/s] 79%|███████▊  | 69706/88651 [00:01<00:00, 44916.12it/s] 84%|████████▎ | 74232/88651 [00:01<00:00, 43000.07it/s] 89%|████████▊ | 78574/88651 [00:01<00:00, 42745.35it/s] 93%|█████████▎| 82878/88651 [00:01<00:00, 42052.89it/s] 99%|█████████▊| 87358/88651 [00:01<00:00, 42454.85it/s]100%|██████████| 88651/88651 [00:01<00:00, 45282.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6097/88651 [00:00<00:01, 60334.68it/s] 12%|█▏        | 10627/88651 [00:00<00:01, 54461.88it/s] 16%|█▌        | 14294/88651 [00:00<00:01, 47541.78it/s] 22%|██▏       | 19060/88651 [00:00<00:01, 47340.05it/s] 26%|██▋       | 23280/88651 [00:00<00:01, 44038.41it/s] 32%|███▏      | 28419/88651 [00:00<00:01, 44549.18it/s] 36%|███▋      | 32279/88651 [00:00<00:01, 39894.03it/s] 42%|████▏     | 37407/88651 [00:00<00:01, 42740.79it/s] 47%|████▋     | 41570/88651 [00:00<00:01, 42401.08it/s] 52%|█████▏    | 45691/88651 [00:01<00:01, 40164.57it/s] 57%|█████▋    | 50239/88651 [00:01<00:00, 41623.63it/s] 65%|██████▌   | 57706/88651 [00:01<00:00, 47996.01it/s] 78%|███████▊  | 69514/88651 [00:01<00:00, 58392.78it/s] 88%|████████▊ | 78435/88651 [00:01<00:00, 65143.66it/s] 97%|█████████▋| 86107/88651 [00:01<00:00, 64559.96it/s]100%|██████████| 88651/88651 [00:01<00:00, 54325.72it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3337/88651 [00:00<00:02, 33367.49it/s]  8%|▊         | 7361/88651 [00:00<00:02, 34008.73it/s] 14%|█▍        | 12521/88651 [00:00<00:02, 37883.18it/s] 17%|█▋        | 15308/88651 [00:00<00:02, 32786.44it/s] 22%|██▏       | 19443/88651 [00:00<00:02, 34019.32it/s] 27%|██▋       | 24249/88651 [00:00<00:01, 37286.62it/s] 32%|███▏      | 28274/88651 [00:00<00:01, 38128.67it/s] 36%|███▌      | 32034/88651 [00:00<00:01, 37709.53it/s] 40%|████      | 35721/88651 [00:00<00:01, 36140.64it/s] 45%|████▌     | 40055/88651 [00:01<00:01, 36805.50it/s] 49%|████▉     | 43707/88651 [00:01<00:01, 36391.42it/s] 55%|█████▌    | 48992/88651 [00:01<00:00, 40141.56it/s] 61%|██████    | 53642/88651 [00:01<00:00, 41836.46it/s] 66%|██████▌   | 58630/88651 [00:01<00:00, 42387.26it/s] 72%|███████▏  | 63516/88651 [00:01<00:00, 42771.20it/s] 77%|███████▋  | 68378/88651 [00:01<00:00, 44061.42it/s] 82%|████████▏ | 72828/88651 [00:01<00:00, 43576.17it/s] 87%|████████▋ | 77217/88651 [00:01<00:00, 42863.05it/s] 92%|█████████▏| 81528/88651 [00:02<00:00, 41931.42it/s] 97%|█████████▋| 85749/88651 [00:02<00:00, 41757.16it/s]100%|██████████| 88651/88651 [00:02<00:00, 40425.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7125/88651 [00:00<00:01, 69315.36it/s] 12%|█▏        | 10863/88651 [00:00<00:01, 55173.92it/s] 17%|█▋        | 15357/88651 [00:00<00:01, 49688.26it/s] 24%|██▎       | 20961/88651 [00:00<00:01, 51436.61it/s] 29%|██▉       | 25990/88651 [00:00<00:01, 50111.60it/s] 35%|███▌      | 31356/88651 [00:00<00:01, 49136.98it/s] 40%|████      | 35617/88651 [00:00<00:01, 41341.44it/s] 45%|████▍     | 39505/88651 [00:00<00:01, 38423.32it/s] 49%|████▊     | 43216/88651 [00:01<00:01, 36049.75it/s] 53%|█████▎    | 47403/88651 [00:01<00:01, 35743.75it/s] 58%|█████▊    | 51735/88651 [00:01<00:01, 36618.07it/s] 63%|██████▎   | 55542/88651 [00:01<00:00, 36726.85it/s] 67%|██████▋   | 59279/88651 [00:01<00:00, 36905.71it/s] 73%|███████▎  | 64347/88651 [00:01<00:00, 39833.32it/s] 80%|███████▉  | 70491/88651 [00:01<00:00, 44531.00it/s] 85%|████████▍ | 75164/88651 [00:01<00:00, 41192.36it/s] 90%|████████▉ | 79487/88651 [00:01<00:00, 40047.04it/s] 96%|█████████▌| 84958/88651 [00:01<00:00, 43548.31it/s]100%|██████████| 88651/88651 [00:02<00:00, 42553.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4384/88651 [00:00<00:01, 43104.32it/s] 10%|▉         | 8532/88651 [00:00<00:01, 41371.05it/s] 14%|█▎        | 12166/88651 [00:00<00:02, 38195.65it/s] 19%|█▊        | 16427/88651 [00:00<00:01, 39420.30it/s] 23%|██▎       | 20335/88651 [00:00<00:01, 38577.86it/s] 27%|██▋       | 23880/88651 [00:00<00:01, 36200.50it/s] 31%|███▏      | 27717/88651 [00:00<00:01, 36824.88it/s] 36%|███▌      | 31980/88651 [00:00<00:01, 36611.72it/s] 40%|████      | 35900/88651 [00:00<00:01, 37174.71it/s] 45%|████▌     | 39919/88651 [00:01<00:01, 37405.97it/s] 50%|█████     | 44450/88651 [00:01<00:01, 37857.79it/s] 55%|█████▍    | 48607/88651 [00:01<00:01, 38553.38it/s] 60%|█████▉    | 52859/88651 [00:01<00:00, 39662.82it/s] 65%|██████▌   | 57966/88651 [00:01<00:00, 42511.16it/s] 70%|███████   | 62409/88651 [00:01<00:00, 42055.99it/s] 75%|███████▌  | 66644/88651 [00:01<00:00, 41546.46it/s] 80%|███████▉  | 70821/88651 [00:01<00:00, 40590.74it/s] 84%|████████▍ | 74901/88651 [00:01<00:00, 40063.55it/s] 89%|████████▉ | 78946/88651 [00:02<00:00, 40167.04it/s] 94%|█████████▎| 82974/88651 [00:02<00:00, 39523.91it/s] 98%|█████████▊| 86937/88651 [00:02<00:00, 36866.24it/s]100%|██████████| 88651/88651 [00:02<00:00, 38172.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3813/88651 [00:00<00:02, 35699.11it/s] 16%|█▌        | 14001/88651 [00:00<00:01, 44219.64it/s] 25%|██▌       | 22434/88651 [00:00<00:01, 51578.83it/s] 34%|███▎      | 29857/88651 [00:00<00:01, 56775.95it/s] 43%|████▎     | 38140/88651 [00:00<00:00, 62690.80it/s] 53%|█████▎    | 46826/88651 [00:00<00:00, 68400.42it/s] 63%|██████▎   | 55652/88651 [00:00<00:00, 73351.57it/s] 73%|███████▎  | 64435/88651 [00:00<00:00, 77167.01it/s] 83%|████████▎ | 73986/88651 [00:00<00:00, 80420.38it/s] 95%|█████████▍| 83807/88651 [00:01<00:00, 84716.97it/s]100%|██████████| 88651/88651 [00:01<00:00, 84064.05it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▌         | 4847/88651 [00:00<00:01, 48466.58it/s] 10%|▉         | 8748/88651 [00:00<00:01, 43072.82it/s] 15%|█▍        | 13149/88651 [00:00<00:01, 43349.07it/s] 19%|█▉        | 16761/88651 [00:00<00:01, 40892.84it/s] 24%|██▎       | 20956/88651 [00:00<00:01, 39244.07it/s] 28%|██▊       | 24410/88651 [00:00<00:01, 36614.31it/s] 32%|███▏      | 28743/88651 [00:00<00:01, 37051.26it/s] 37%|███▋      | 32468/88651 [00:00<00:01, 32804.99it/s] 40%|████      | 35602/88651 [00:01<00:01, 27453.93it/s] 44%|████▍     | 38967/88651 [00:01<00:01, 28291.88it/s] 49%|████▊     | 43114/88651 [00:01<00:01, 30716.99it/s] 54%|█████▎    | 47634/88651 [00:01<00:01, 32798.83it/s] 60%|█████▉    | 53154/88651 [00:01<00:00, 37336.12it/s] 64%|██████▍   | 57174/88651 [00:01<00:00, 37724.58it/s] 69%|██████▉   | 61148/88651 [00:01<00:00, 30106.66it/s] 74%|███████▍  | 65530/88651 [00:01<00:00, 33225.99it/s] 80%|███████▉  | 70707/88651 [00:01<00:00, 37226.05it/s] 84%|████████▍ | 74845/88651 [00:02<00:00, 33292.88it/s] 89%|████████▊ | 78543/88651 [00:02<00:00, 33413.01it/s] 93%|█████████▎| 82142/88651 [00:02<00:00, 33910.37it/s] 99%|█████████▉| 88145/88651 [00:02<00:00, 38347.55it/s]100%|██████████| 88651/88651 [00:02<00:00, 35844.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6810/88651 [00:00<00:01, 64439.97it/s] 15%|█▌        | 13486/88651 [00:00<00:01, 63173.91it/s] 20%|█▉        | 17705/88651 [00:00<00:01, 49859.61it/s] 26%|██▌       | 23022/88651 [00:00<00:01, 50601.12it/s] 33%|███▎      | 28900/88651 [00:00<00:01, 51427.65it/s] 38%|███▊      | 33802/88651 [00:00<00:01, 50680.71it/s] 45%|████▌     | 40108/88651 [00:00<00:00, 53851.45it/s] 52%|█████▏    | 45927/88651 [00:00<00:00, 54919.15it/s] 59%|█████▉    | 52230/88651 [00:00<00:00, 57124.40it/s] 66%|██████▌   | 58561/88651 [00:01<00:00, 58849.00it/s] 73%|███████▎  | 64573/88651 [00:01<00:00, 58126.52it/s] 79%|███████▉  | 70389/88651 [00:01<00:00, 58135.87it/s] 89%|████████▉ | 78851/88651 [00:01<00:00, 63303.83it/s] 96%|█████████▋| 85367/88651 [00:01<00:00, 62072.46it/s]100%|██████████| 88651/88651 [00:01<00:00, 57852.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12023/88651 [00:00<00:00, 120227.25it/s] 21%|██        | 18711/88651 [00:00<00:00, 95550.18it/s]  28%|██▊       | 25147/88651 [00:00<00:00, 83419.20it/s] 35%|███▌      | 31053/88651 [00:00<00:00, 74025.50it/s] 41%|████      | 36350/88651 [00:00<00:00, 61150.01it/s] 48%|████▊     | 42159/88651 [00:00<00:00, 60197.90it/s] 53%|█████▎    | 47411/88651 [00:00<00:00, 55247.24it/s] 63%|██████▎   | 56191/88651 [00:00<00:00, 61466.20it/s] 75%|███████▍  | 66131/88651 [00:00<00:00, 69412.00it/s] 83%|████████▎ | 73347/88651 [00:01<00:00, 58723.95it/s] 90%|████████▉ | 79694/88651 [00:01<00:00, 53485.78it/s] 96%|█████████▋| 85465/88651 [00:01<00:00, 49116.10it/s]100%|██████████| 88651/88651 [00:01<00:00, 59329.40it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6987/88651 [00:00<00:01, 59255.19it/s] 13%|█▎        | 11937/88651 [00:00<00:01, 55682.24it/s] 20%|██        | 18062/88651 [00:00<00:01, 57242.05it/s] 26%|██▌       | 22817/88651 [00:00<00:01, 53941.88it/s] 32%|███▏      | 28222/88651 [00:00<00:01, 52612.33it/s] 37%|███▋      | 32635/88651 [00:00<00:01, 47694.25it/s] 42%|████▏     | 36834/88651 [00:00<00:01, 45549.79it/s] 47%|████▋     | 41269/88651 [00:00<00:01, 45182.21it/s] 51%|█████▏    | 45609/88651 [00:00<00:00, 44228.19it/s] 58%|█████▊    | 51296/88651 [00:01<00:00, 45865.49it/s] 65%|██████▍   | 57193/88651 [00:01<00:00, 49141.54it/s] 71%|███████▏  | 63228/88651 [00:01<00:00, 49157.44it/s] 78%|███████▊  | 69087/88651 [00:01<00:00, 50517.80it/s] 84%|████████▍ | 74706/88651 [00:01<00:00, 51490.12it/s] 90%|█████████ | 79862/88651 [00:01<00:00, 49808.53it/s] 96%|█████████▌| 84860/88651 [00:01<00:00, 49749.92it/s]100%|██████████| 88651/88651 [00:01<00:00, 49284.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3974/88651 [00:00<00:02, 37512.61it/s] 11%|█         | 9322/88651 [00:00<00:01, 40447.55it/s] 16%|█▌        | 14055/88651 [00:00<00:01, 41995.90it/s] 20%|██        | 17981/88651 [00:00<00:02, 35069.33it/s] 23%|██▎       | 20823/88651 [00:00<00:02, 24458.54it/s] 26%|██▌       | 23243/88651 [00:00<00:02, 22887.88it/s] 32%|███▏      | 28319/88651 [00:00<00:02, 27401.70it/s] 42%|████▏     | 36987/88651 [00:00<00:01, 34474.52it/s] 52%|█████▏    | 46091/88651 [00:01<00:01, 42372.64it/s] 62%|██████▏   | 54879/88651 [00:01<00:00, 50165.83it/s] 72%|███████▏  | 64050/88651 [00:01<00:00, 56632.29it/s] 80%|████████  | 71307/88651 [00:01<00:00, 58446.51it/s] 88%|████████▊ | 78282/88651 [00:01<00:00, 46255.53it/s] 95%|█████████▍| 84098/88651 [00:01<00:00, 43419.23it/s]100%|██████████| 88651/88651 [00:01<00:00, 45855.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4323/88651 [00:00<00:02, 37035.85it/s]  8%|▊         | 7401/88651 [00:00<00:02, 34714.36it/s] 16%|█▌        | 14365/88651 [00:00<00:01, 40314.59it/s] 23%|██▎       | 20470/88651 [00:00<00:01, 44888.01it/s] 31%|███▏      | 27833/88651 [00:00<00:01, 50841.60it/s] 38%|███▊      | 34001/88651 [00:00<00:01, 53670.86it/s] 44%|████▍     | 39366/88651 [00:00<00:01, 48961.58it/s] 51%|█████▏    | 45634/88651 [00:00<00:00, 52402.16it/s] 58%|█████▊    | 51040/88651 [00:00<00:00, 51818.17it/s] 65%|██████▍   | 57385/88651 [00:01<00:00, 54214.08it/s] 72%|███████▏  | 63390/88651 [00:01<00:00, 55841.75it/s] 78%|███████▊  | 69050/88651 [00:01<00:00, 50195.59it/s] 84%|████████▎ | 74230/88651 [00:01<00:00, 44943.07it/s] 90%|████████▉ | 79376/88651 [00:01<00:00, 45952.04it/s] 95%|█████████▍| 84129/88651 [00:01<00:00, 46227.99it/s]100%|██████████| 88651/88651 [00:01<00:00, 50380.23it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7000/88651 [00:00<00:01, 64956.18it/s] 14%|█▍        | 12639/88651 [00:00<00:01, 59783.56it/s] 23%|██▎       | 20613/88651 [00:00<00:01, 64635.81it/s] 34%|███▎      | 29869/88651 [00:00<00:00, 71064.99it/s] 42%|████▏     | 37426/88651 [00:00<00:00, 71451.50it/s] 51%|█████▏    | 45559/88651 [00:00<00:00, 74152.12it/s] 61%|██████▏   | 54502/88651 [00:00<00:00, 78156.86it/s] 70%|██████▉   | 61967/88651 [00:00<00:00, 72446.70it/s] 78%|███████▊  | 69050/88651 [00:00<00:00, 69641.45it/s] 87%|████████▋ | 77147/88651 [00:01<00:00, 72691.81it/s] 99%|█████████▉| 88099/88651 [00:01<00:00, 80847.39it/s]100%|██████████| 88651/88651 [00:01<00:00, 75150.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6734/88651 [00:00<00:01, 67338.62it/s] 14%|█▍        | 12619/88651 [00:00<00:01, 64544.07it/s] 19%|█▉        | 17051/88651 [00:00<00:01, 56071.84it/s] 26%|██▌       | 22670/88651 [00:00<00:01, 54213.52it/s] 32%|███▏      | 28536/88651 [00:00<00:01, 53533.17it/s] 39%|███▉      | 34514/88651 [00:00<00:00, 55264.95it/s] 46%|████▌     | 40496/88651 [00:00<00:00, 56556.36it/s] 53%|█████▎    | 46654/88651 [00:00<00:00, 57380.47it/s] 60%|█████▉    | 52921/88651 [00:00<00:00, 58343.67it/s] 67%|██████▋   | 59052/88651 [00:01<00:00, 59202.22it/s] 73%|███████▎  | 64815/88651 [00:01<00:00, 56622.52it/s] 79%|███████▉  | 70391/88651 [00:01<00:00, 51132.59it/s] 85%|████████▌ | 75546/88651 [00:01<00:00, 51007.54it/s] 91%|█████████ | 80676/88651 [00:01<00:00, 38965.41it/s] 96%|█████████▌| 85021/88651 [00:01<00:00, 37119.53it/s]100%|██████████| 88651/88651 [00:01<00:00, 47145.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  2%|▏         | 2205/88651 [00:00<00:03, 22049.92it/s]  7%|▋         | 6100/88651 [00:00<00:03, 24502.06it/s] 10%|▉         | 8673/88651 [00:00<00:03, 23939.55it/s] 12%|█▏        | 10608/88651 [00:00<00:03, 22285.47it/s] 16%|█▋        | 14423/88651 [00:00<00:02, 25356.99it/s] 21%|██        | 18356/88651 [00:00<00:02, 28381.77it/s] 25%|██▌       | 22578/88651 [00:00<00:02, 31476.42it/s] 29%|██▉       | 25842/88651 [00:00<00:01, 31816.26it/s] 34%|███▎      | 29826/88651 [00:00<00:01, 33861.94it/s] 38%|███▊      | 33298/88651 [00:01<00:01, 33989.00it/s] 42%|████▏     | 37092/88651 [00:01<00:01, 34839.54it/s] 48%|████▊     | 42118/88651 [00:01<00:01, 37830.74it/s] 53%|█████▎    | 47341/88651 [00:01<00:01, 40392.07it/s] 60%|██████    | 53434/88651 [00:01<00:00, 44241.84it/s] 67%|██████▋   | 59217/88651 [00:01<00:00, 47596.25it/s] 73%|███████▎  | 65105/88651 [00:01<00:00, 49979.37it/s] 80%|████████  | 71094/88651 [00:01<00:00, 52589.58it/s] 86%|████████▋ | 76515/88651 [00:01<00:00, 53029.11it/s] 93%|█████████▎| 82458/88651 [00:01<00:00, 54798.59it/s] 99%|█████████▉| 88033/88651 [00:02<00:00, 55076.16it/s]100%|██████████| 88651/88651 [00:02<00:00, 42706.07it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5329/88651 [00:00<00:01, 53068.51it/s] 11%|█         | 9408/88651 [00:00<00:01, 48672.38it/s] 15%|█▍        | 13171/88651 [00:00<00:01, 44646.50it/s] 21%|██        | 18418/88651 [00:00<00:01, 45253.04it/s] 25%|██▍       | 21752/88651 [00:00<00:01, 40472.74it/s] 30%|██▉       | 26386/88651 [00:00<00:01, 40856.16it/s] 34%|███▍      | 29986/88651 [00:00<00:01, 39266.28it/s] 38%|███▊      | 33627/88651 [00:00<00:01, 36674.45it/s] 42%|████▏     | 37093/88651 [00:00<00:01, 35676.70it/s] 48%|████▊     | 42132/88651 [00:01<00:01, 38184.44it/s] 52%|█████▏    | 46149/88651 [00:01<00:01, 38614.39it/s] 58%|█████▊    | 51103/88651 [00:01<00:00, 41349.51it/s] 64%|██████▎   | 56395/88651 [00:01<00:00, 44251.96it/s] 70%|██████▉   | 61647/88651 [00:01<00:00, 45927.10it/s] 75%|███████▌  | 66583/88651 [00:01<00:00, 46905.36it/s] 81%|████████  | 71919/88651 [00:01<00:00, 48671.53it/s] 87%|████████▋ | 77106/88651 [00:01<00:00, 49588.04it/s] 93%|█████████▎| 82365/88651 [00:01<00:00, 50451.58it/s] 99%|█████████▊| 87476/88651 [00:01<00:00, 50112.74it/s]100%|██████████| 88651/88651 [00:01<00:00, 44482.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6354/88651 [00:00<00:01, 63537.18it/s] 14%|█▍        | 12388/88651 [00:00<00:01, 61186.53it/s] 19%|█▉        | 16749/88651 [00:00<00:01, 53172.01it/s] 24%|██▍       | 21181/88651 [00:00<00:01, 50165.32it/s] 28%|██▊       | 24848/88651 [00:00<00:01, 43821.52it/s] 35%|███▍      | 30708/88651 [00:00<00:01, 46903.04it/s] 40%|████      | 35686/88651 [00:00<00:01, 47729.53it/s] 47%|████▋     | 41268/88651 [00:00<00:00, 49898.89it/s] 53%|█████▎    | 47385/88651 [00:00<00:00, 52817.48it/s] 60%|██████    | 53429/88651 [00:01<00:00, 54894.07it/s] 67%|██████▋   | 59108/88651 [00:01<00:00, 54840.52it/s] 74%|███████▎  | 65292/88651 [00:01<00:00, 56767.38it/s] 80%|████████  | 71280/88651 [00:01<00:00, 57665.83it/s] 87%|████████▋ | 77044/88651 [00:01<00:00, 57498.56it/s] 93%|█████████▎| 82793/88651 [00:01<00:00, 57221.23it/s]100%|██████████| 88651/88651 [00:01<00:00, 54277.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  3%|▎         | 2345/88651 [00:00<00:03, 21994.62it/s]  7%|▋         | 5865/88651 [00:00<00:03, 24783.73it/s] 11%|█         | 9367/88651 [00:00<00:02, 27113.56it/s] 15%|█▌        | 13476/88651 [00:00<00:02, 30194.70it/s] 19%|█▉        | 16857/88651 [00:00<00:02, 30628.84it/s] 23%|██▎       | 20291/88651 [00:00<00:02, 29629.13it/s] 28%|██▊       | 24698/88651 [00:00<00:01, 32859.03it/s] 38%|███▊      | 33887/88651 [00:00<00:01, 40703.34it/s] 47%|████▋     | 41371/88651 [00:00<00:01, 47155.62it/s] 58%|█████▊    | 51489/88651 [00:01<00:00, 56149.37it/s] 68%|██████▊   | 60382/88651 [00:01<00:00, 63130.07it/s] 77%|███████▋  | 68012/88651 [00:01<00:00, 63155.15it/s] 85%|████████▍ | 75249/88651 [00:01<00:00, 54002.41it/s] 92%|█████████▏| 81526/88651 [00:01<00:00, 44938.12it/s]100%|██████████| 88651/88651 [00:01<00:00, 51312.72it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 8950/88651 [00:00<00:00, 89494.11it/s] 18%|█▊        | 16149/88651 [00:00<00:00, 82500.44it/s] 24%|██▍       | 21294/88651 [00:00<00:00, 69852.35it/s] 31%|███       | 27337/88651 [00:00<00:00, 66730.67it/s] 38%|███▊      | 33529/88651 [00:00<00:00, 63875.63it/s] 46%|████▌     | 40353/88651 [00:00<00:00, 64127.33it/s] 53%|█████▎    | 46887/88651 [00:00<00:00, 64349.48it/s] 60%|██████    | 53565/88651 [00:00<00:00, 63753.19it/s] 70%|██████▉   | 61729/88651 [00:00<00:00, 68237.82it/s] 77%|███████▋  | 68341/88651 [00:01<00:00, 66224.74it/s] 84%|████████▍ | 74828/88651 [00:01<00:00, 64105.19it/s] 94%|█████████▍| 83477/88651 [00:01<00:00, 69501.56it/s]100%|██████████| 88651/88651 [00:01<00:00, 66364.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10648/88651 [00:00<00:00, 103391.40it/s] 18%|█▊        | 16123/88651 [00:00<00:00, 78240.86it/s]  25%|██▍       | 21812/88651 [00:00<00:00, 70321.57it/s] 30%|███       | 26651/88651 [00:00<00:01, 61902.94it/s] 37%|███▋      | 32499/88651 [00:00<00:00, 58939.82it/s] 44%|████▍     | 38915/88651 [00:00<00:00, 59451.45it/s] 50%|████▉     | 44027/88651 [00:00<00:00, 56478.04it/s] 55%|█████▌    | 49123/88651 [00:00<00:00, 54015.19it/s] 62%|██████▏   | 54699/88651 [00:00<00:00, 54380.52it/s] 69%|██████▉   | 61039/88651 [00:01<00:00, 56804.47it/s] 77%|███████▋  | 68655/88651 [00:01<00:00, 61492.10it/s] 84%|████████▍ | 74812/88651 [00:01<00:00, 59442.94it/s] 91%|█████████ | 80776/88651 [00:01<00:00, 55751.59it/s]100%|█████████▉| 88474/88651 [00:01<00:00, 60779.25it/s]100%|██████████| 88651/88651 [00:01<00:00, 60280.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12722/88651 [00:00<00:00, 127212.54it/s] 29%|██▉       | 25695/88651 [00:00<00:00, 127956.41it/s] 44%|████▍     | 39208/88651 [00:00<00:00, 130025.82it/s] 59%|█████▉    | 52626/88651 [00:00<00:00, 131242.56it/s] 75%|███████▍  | 66120/88651 [00:00<00:00, 132327.68it/s] 88%|████████▊ | 77857/88651 [00:00<00:00, 127453.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 125698.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 8974/88651 [00:00<00:01, 64514.92it/s] 13%|█▎        | 11319/88651 [00:00<00:01, 42294.34it/s] 16%|█▌        | 14082/88651 [00:00<00:02, 31747.71it/s] 18%|█▊        | 16125/88651 [00:00<00:02, 26971.68it/s] 26%|██▌       | 22869/88651 [00:00<00:01, 32892.58it/s] 37%|███▋      | 33223/88651 [00:00<00:01, 41358.38it/s] 46%|████▌     | 40737/88651 [00:00<00:01, 47805.55it/s] 53%|█████▎    | 46853/88651 [00:00<00:00, 47116.47it/s] 59%|█████▉    | 52502/88651 [00:01<00:00, 48414.36it/s] 66%|██████▌   | 58278/88651 [00:01<00:00, 50883.93it/s] 75%|███████▍  | 66066/88651 [00:01<00:00, 56788.95it/s] 82%|████████▏ | 72314/88651 [00:01<00:00, 55509.00it/s] 88%|████████▊ | 78270/88651 [00:01<00:00, 53861.73it/s] 97%|█████████▋| 86367/88651 [00:01<00:00, 59875.41it/s]100%|██████████| 88651/88651 [00:01<00:00, 55858.03it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7047/88651 [00:00<00:01, 70468.89it/s] 20%|██        | 18074/88651 [00:00<00:00, 79025.01it/s] 34%|███▍      | 30576/88651 [00:00<00:00, 88827.63it/s] 49%|████▉     | 43809/88651 [00:00<00:00, 98546.50it/s] 60%|█████▉    | 52751/88651 [00:00<00:00, 89971.71it/s] 69%|██████▉   | 61463/88651 [00:00<00:00, 83970.38it/s] 80%|███████▉  | 70906/88651 [00:00<00:00, 85908.58it/s] 89%|████████▉ | 79323/88651 [00:00<00:00, 75469.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 91144.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8033/88651 [00:00<00:01, 80324.52it/s] 22%|██▏       | 19762/88651 [00:00<00:00, 88712.13it/s] 30%|██▉       | 26195/88651 [00:00<00:00, 78944.02it/s] 38%|███▊      | 33849/88651 [00:00<00:00, 76354.70it/s] 45%|████▌     | 40201/88651 [00:00<00:00, 70066.22it/s] 52%|█████▏    | 46163/88651 [00:00<00:00, 55115.09it/s] 58%|█████▊    | 51440/88651 [00:00<00:00, 51620.14it/s] 64%|██████▎   | 56483/88651 [00:00<00:00, 43064.35it/s] 69%|██████▊   | 60945/88651 [00:01<00:00, 36948.51it/s] 74%|███████▍  | 65383/88651 [00:01<00:00, 38902.40it/s] 82%|████████▏ | 72541/88651 [00:01<00:00, 45075.16it/s] 90%|████████▉ | 79776/88651 [00:01<00:00, 50648.68it/s] 96%|█████████▋| 85424/88651 [00:01<00:00, 51494.17it/s]100%|██████████| 88651/88651 [00:01<00:00, 56510.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9707/88651 [00:00<00:00, 97065.93it/s] 22%|██▏       | 19861/88651 [00:00<00:00, 97842.51it/s] 30%|██▉       | 26301/88651 [00:00<00:00, 84652.96it/s] 37%|███▋      | 32925/88651 [00:00<00:00, 78135.01it/s] 44%|████▎     | 38729/88651 [00:00<00:00, 61825.64it/s] 50%|████▉     | 44039/88651 [00:00<00:00, 58439.71it/s] 56%|█████▌    | 49474/88651 [00:00<00:00, 57149.44it/s] 67%|██████▋   | 59749/88651 [00:00<00:00, 65926.66it/s] 81%|████████▏ | 72218/88651 [00:00<00:00, 76781.89it/s] 92%|█████████▏| 81668/88651 [00:01<00:00, 81356.49it/s]100%|██████████| 88651/88651 [00:01<00:00, 73531.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8548/88651 [00:00<00:01, 72689.45it/s] 17%|█▋        | 14784/88651 [00:00<00:01, 69247.90it/s] 24%|██▍       | 21146/88651 [00:00<00:01, 66689.69it/s] 29%|██▉       | 26005/88651 [00:00<00:01, 58589.63it/s] 37%|███▋      | 32810/88651 [00:00<00:00, 61139.27it/s] 45%|████▌     | 40309/88651 [00:00<00:00, 64725.64it/s] 52%|█████▏    | 46107/88651 [00:00<00:00, 52022.76it/s] 58%|█████▊    | 51257/88651 [00:00<00:00, 49559.75it/s] 63%|██████▎   | 56186/88651 [00:01<00:00, 49160.09it/s] 77%|███████▋  | 68569/88651 [00:01<00:00, 60016.55it/s] 87%|████████▋ | 77173/88651 [00:01<00:00, 66004.84it/s] 96%|█████████▌| 84755/88651 [00:01<00:00, 55087.24it/s]100%|██████████| 88651/88651 [00:01<00:00, 60573.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3339/88651 [00:00<00:02, 32177.96it/s] 10%|█         | 8914/88651 [00:00<00:02, 36852.25it/s] 13%|█▎        | 11341/88651 [00:00<00:02, 31676.64it/s] 24%|██▎       | 21041/88651 [00:00<00:01, 39696.55it/s] 33%|███▎      | 29391/88651 [00:00<00:01, 47110.60it/s] 46%|████▋     | 41119/88651 [00:00<00:00, 57416.30it/s] 55%|█████▍    | 48627/88651 [00:00<00:00, 55704.12it/s] 69%|██████▊   | 60729/88651 [00:00<00:00, 66465.19it/s] 78%|███████▊  | 69132/88651 [00:01<00:00, 61736.56it/s] 87%|████████▋ | 77322/88651 [00:01<00:00, 66659.65it/s]100%|██████████| 88651/88651 [00:01<00:00, 73777.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6772/88651 [00:00<00:01, 67452.14it/s] 15%|█▌        | 13307/88651 [00:00<00:01, 66804.67it/s] 22%|██▏       | 19675/88651 [00:00<00:01, 64853.21it/s] 30%|██▉       | 26313/88651 [00:00<00:00, 65303.79it/s] 38%|███▊      | 33747/88651 [00:00<00:00, 67773.96it/s] 52%|█████▏    | 46082/88651 [00:00<00:00, 78366.09it/s] 62%|██████▏   | 54525/88651 [00:00<00:00, 80091.54it/s] 70%|███████   | 62429/88651 [00:00<00:00, 77232.82it/s] 84%|████████▍ | 74794/88651 [00:00<00:00, 87033.16it/s] 95%|█████████▍| 83874/88651 [00:01<00:00, 87175.44it/s]100%|██████████| 88651/88651 [00:01<00:00, 80771.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6669/88651 [00:00<00:01, 62413.12it/s] 15%|█▌        | 13434/88651 [00:00<00:01, 63896.96it/s] 19%|█▉        | 16926/88651 [00:00<00:01, 50702.80it/s] 24%|██▎       | 20958/88651 [00:00<00:01, 45510.91it/s] 37%|███▋      | 32420/88651 [00:00<00:01, 55560.76it/s] 46%|████▌     | 40747/88651 [00:00<00:00, 61722.01it/s] 59%|█████▉    | 52606/88651 [00:00<00:00, 72093.15it/s] 73%|███████▎  | 64972/88651 [00:00<00:00, 82401.28it/s] 87%|████████▋ | 77263/88651 [00:00<00:00, 91441.00it/s] 99%|█████████▉| 87554/88651 [00:01<00:00, 84368.87it/s]100%|██████████| 88651/88651 [00:01<00:00, 82159.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5121/88651 [00:00<00:01, 51206.63it/s] 17%|█▋        | 14902/88651 [00:00<00:01, 59746.63it/s] 24%|██▍       | 21299/88651 [00:00<00:01, 59242.12it/s] 34%|███▍      | 30203/88651 [00:00<00:00, 65852.54it/s] 48%|████▊     | 42245/88651 [00:00<00:00, 76211.98it/s] 61%|██████    | 53940/88651 [00:00<00:00, 85105.06it/s] 74%|███████▍  | 66043/88651 [00:00<00:00, 93423.81it/s] 88%|████████▊ | 78199/88651 [00:00<00:00, 100393.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 98849.69it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11509/88651 [00:00<00:00, 115082.43it/s] 23%|██▎       | 20115/88651 [00:00<00:00, 101672.05it/s] 30%|██▉       | 26229/88651 [00:00<00:00, 84095.69it/s]  44%|████▎     | 38613/88651 [00:00<00:00, 93054.83it/s] 52%|█████▏    | 46531/88651 [00:00<00:00, 88406.21it/s] 66%|██████▌   | 58407/88651 [00:00<00:00, 95747.09it/s] 77%|███████▋  | 67873/88651 [00:00<00:00, 95417.62it/s] 91%|█████████ | 80315/88651 [00:00<00:00, 102591.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 100621.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12482/88651 [00:00<00:00, 124814.76it/s] 28%|██▊       | 24957/88651 [00:00<00:00, 124793.67it/s] 42%|████▏     | 37532/88651 [00:00<00:00, 125078.63it/s] 56%|█████▋    | 49964/88651 [00:00<00:00, 124847.41it/s] 71%|███████   | 62624/88651 [00:00<00:00, 125365.62it/s] 85%|████████▍ | 75203/88651 [00:00<00:00, 125492.31it/s] 99%|█████████▉| 87705/88651 [00:00<00:00, 125347.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 125149.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6603/88651 [00:00<00:01, 63394.70it/s] 20%|█▉        | 17650/88651 [00:00<00:00, 72687.03it/s] 32%|███▏      | 28666/88651 [00:00<00:00, 80237.86it/s] 44%|████▎     | 38627/88651 [00:00<00:00, 84346.14it/s] 54%|█████▍    | 48176/88651 [00:00<00:00, 87404.93it/s] 67%|██████▋   | 59071/88651 [00:00<00:00, 92915.85it/s] 77%|███████▋  | 68042/88651 [00:00<00:00, 91928.50it/s] 88%|████████▊ | 77930/88651 [00:00<00:00, 93907.48it/s] 98%|█████████▊| 87135/88651 [00:00<00:00, 83851.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 89710.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5876/88651 [00:00<00:01, 55774.84it/s] 14%|█▍        | 12258/88651 [00:00<00:01, 57966.26it/s] 21%|██        | 18225/88651 [00:00<00:01, 58311.72it/s] 28%|██▊       | 24714/88651 [00:00<00:01, 60140.50it/s] 35%|███▌      | 31269/88651 [00:00<00:00, 61666.12it/s] 42%|████▏     | 37456/88651 [00:00<00:00, 60582.64it/s] 49%|████▉     | 43867/88651 [00:00<00:00, 61305.85it/s] 57%|█████▋    | 50521/88651 [00:00<00:00, 62786.33it/s] 64%|██████▍   | 57028/88651 [00:00<00:00, 63453.55it/s] 71%|███████▏  | 63300/88651 [00:01<00:00, 61719.50it/s] 78%|███████▊  | 69337/88651 [00:01<00:00, 55123.23it/s] 84%|████████▍ | 74887/88651 [00:01<00:00, 53000.12it/s] 91%|█████████ | 80231/88651 [00:01<00:00, 52772.42it/s]100%|██████████| 88651/88651 [00:01<00:00, 60223.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7953/88651 [00:00<00:01, 79527.04it/s] 17%|█▋        | 15247/88651 [00:00<00:00, 77428.74it/s] 24%|██▍       | 21579/88651 [00:00<00:00, 72576.50it/s] 35%|███▍      | 30937/88651 [00:00<00:00, 77814.93it/s] 49%|████▊     | 43068/88651 [00:00<00:00, 87192.34it/s] 58%|█████▊    | 51715/88651 [00:00<00:00, 86972.33it/s] 67%|██████▋   | 59810/88651 [00:00<00:00, 73741.22it/s] 76%|███████▌  | 67256/88651 [00:00<00:00, 73088.05it/s] 84%|████████▍ | 74514/88651 [00:01<00:00, 62063.50it/s] 91%|█████████▏| 80972/88651 [00:01<00:00, 60800.06it/s] 98%|█████████▊| 87234/88651 [00:01<00:00, 61262.96it/s]100%|██████████| 88651/88651 [00:01<00:00, 70782.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8721/88651 [00:00<00:00, 87208.00it/s] 16%|█▌        | 14045/88651 [00:00<00:01, 72969.24it/s] 22%|██▏       | 19587/88651 [00:00<00:01, 66186.48it/s] 27%|██▋       | 23611/88651 [00:00<00:01, 46172.42it/s] 33%|███▎      | 28835/88651 [00:00<00:01, 47328.76it/s] 40%|███▉      | 35165/88651 [00:00<00:01, 51203.33it/s] 47%|████▋     | 41347/88651 [00:00<00:00, 52981.21it/s] 54%|█████▍    | 48089/88651 [00:00<00:00, 56618.70it/s] 62%|██████▏   | 55174/88651 [00:00<00:00, 60248.36it/s] 72%|███████▏  | 64226/88651 [00:01<00:00, 66966.28it/s] 80%|████████  | 71150/88651 [00:01<00:00, 60301.17it/s] 91%|█████████ | 80478/88651 [00:01<00:00, 67455.22it/s]100%|█████████▉| 88625/88651 [00:01<00:00, 71125.48it/s]100%|██████████| 88651/88651 [00:01<00:00, 63115.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5809/88651 [00:00<00:01, 58083.55it/s] 10%|█         | 9261/88651 [00:00<00:01, 48210.82it/s] 22%|██▏       | 19074/88651 [00:00<00:01, 56891.97it/s] 28%|██▊       | 24520/88651 [00:00<00:01, 56139.14it/s] 38%|███▊      | 33441/88651 [00:00<00:00, 63163.59it/s] 45%|████▍     | 39477/88651 [00:00<00:00, 62128.80it/s] 52%|█████▏    | 46313/88651 [00:00<00:00, 63831.73it/s] 61%|██████    | 54097/88651 [00:00<00:00, 67473.99it/s] 72%|███████▏  | 64083/88651 [00:00<00:00, 74746.08it/s] 81%|████████  | 71781/88651 [00:01<00:00, 64488.07it/s] 91%|█████████ | 80670/88651 [00:01<00:00, 70275.28it/s]100%|█████████▉| 88416/88651 [00:01<00:00, 72285.22it/s]100%|██████████| 88651/88651 [00:01<00:00, 70289.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11877/88651 [00:00<00:00, 118767.00it/s] 27%|██▋       | 24079/88651 [00:00<00:00, 119723.57it/s] 35%|███▍      | 30837/88651 [00:00<00:00, 96830.53it/s]  42%|████▏     | 37154/88651 [00:00<00:00, 65863.96it/s] 49%|████▉     | 43827/88651 [00:00<00:00, 66121.00it/s] 56%|█████▌    | 49822/88651 [00:00<00:00, 64139.44it/s] 67%|██████▋   | 59472/88651 [00:00<00:00, 71312.58it/s] 77%|███████▋  | 68304/88651 [00:00<00:00, 75684.20it/s] 90%|████████▉ | 79646/88651 [00:00<00:00, 84075.21it/s]100%|█████████▉| 88353/88651 [00:01<00:00, 77548.47it/s]100%|██████████| 88651/88651 [00:01<00:00, 79708.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7425/88651 [00:00<00:01, 70653.63it/s] 22%|██▏       | 19425/88651 [00:00<00:00, 78853.39it/s] 31%|███       | 27337/88651 [00:00<00:00, 78932.20it/s] 44%|████▍     | 39354/88651 [00:00<00:00, 87989.22it/s] 54%|█████▍    | 47849/88651 [00:00<00:00, 87054.25it/s] 63%|██████▎   | 55706/88651 [00:00<00:00, 80164.69it/s] 75%|███████▌  | 66627/88651 [00:00<00:00, 87110.31it/s] 85%|████████▍ | 75174/88651 [00:01<00:00, 53687.43it/s] 93%|█████████▎| 82007/88651 [00:01<00:00, 48800.68it/s]100%|██████████| 88651/88651 [00:01<00:00, 69056.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6800/88651 [00:00<00:01, 67997.31it/s] 20%|██        | 17762/88651 [00:00<00:00, 76738.42it/s] 28%|██▊       | 24450/88651 [00:00<00:00, 73058.32it/s] 37%|███▋      | 32774/88651 [00:00<00:00, 74287.33it/s] 47%|████▋     | 41488/88651 [00:00<00:00, 77725.54it/s] 60%|██████    | 53381/88651 [00:00<00:00, 86740.40it/s] 74%|███████▍  | 65706/88651 [00:00<00:00, 95199.00it/s] 88%|████████▊ | 77954/88651 [00:00<00:00, 102015.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 97052.44it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7937/88651 [00:00<00:01, 71199.83it/s] 16%|█▌        | 13954/88651 [00:00<00:01, 67487.89it/s] 28%|██▊       | 25125/88651 [00:00<00:00, 76581.99it/s] 42%|████▏     | 37293/88651 [00:00<00:00, 86162.03it/s] 51%|█████     | 44907/88651 [00:00<00:00, 77569.98it/s] 59%|█████▉    | 52125/88651 [00:00<00:00, 68225.17it/s] 68%|██████▊   | 60274/88651 [00:00<00:00, 71727.69it/s] 81%|████████▏ | 72138/88651 [00:00<00:00, 81380.85it/s] 95%|█████████▍| 84194/88651 [00:00<00:00, 90170.51it/s]100%|██████████| 88651/88651 [00:01<00:00, 88258.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9358/88651 [00:00<00:00, 91413.69it/s] 22%|██▏       | 19397/88651 [00:00<00:00, 93932.79it/s] 37%|███▋      | 32404/88651 [00:00<00:00, 102471.85it/s] 50%|█████     | 44328/88651 [00:00<00:00, 106984.71it/s] 60%|█████▉    | 53053/88651 [00:00<00:00, 93947.53it/s]  75%|███████▍  | 66407/88651 [00:00<00:00, 103117.83it/s] 90%|████████▉ | 79631/88651 [00:00<00:00, 110411.38it/s]100%|██████████| 88651/88651 [00:00<00:00, 111593.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7361/88651 [00:00<00:01, 71969.01it/s] 17%|█▋        | 15300/88651 [00:00<00:00, 74045.25it/s] 26%|██▌       | 22882/88651 [00:00<00:00, 74567.34it/s] 35%|███▌      | 31453/88651 [00:00<00:00, 77001.12it/s] 42%|████▏     | 37454/88651 [00:00<00:00, 53079.98it/s] 48%|████▊     | 42649/88651 [00:00<00:00, 49950.23it/s] 54%|█████▎    | 47553/88651 [00:00<00:00, 46409.94it/s] 59%|█████▉    | 52181/88651 [00:00<00:00, 43308.49it/s] 64%|██████▍   | 56545/88651 [00:01<00:00, 39930.06it/s] 68%|██████▊   | 60626/88651 [00:01<00:00, 37465.14it/s] 73%|███████▎  | 64456/88651 [00:01<00:00, 36293.39it/s] 78%|███████▊  | 68766/88651 [00:01<00:00, 38098.37it/s] 82%|████████▏ | 72646/88651 [00:01<00:00, 34809.29it/s] 86%|████████▌ | 76232/88651 [00:01<00:00, 34651.58it/s] 91%|█████████ | 80340/88651 [00:01<00:00, 34842.91it/s] 95%|█████████▍| 83876/88651 [00:01<00:00, 34190.90it/s] 99%|█████████▉| 88005/88651 [00:01<00:00, 36050.16it/s]100%|██████████| 88651/88651 [00:02<00:00, 43975.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6931/88651 [00:00<00:01, 69203.48it/s] 12%|█▏        | 10689/88651 [00:00<00:01, 54291.45it/s] 17%|█▋        | 15445/88651 [00:00<00:01, 51186.71it/s] 21%|██▏       | 19040/88651 [00:00<00:01, 43776.80it/s] 25%|██▌       | 22214/88651 [00:00<00:01, 38919.01it/s] 29%|██▉       | 25897/88651 [00:00<00:01, 38266.54it/s] 35%|███▌      | 31054/88651 [00:00<00:01, 40591.50it/s] 39%|███▉      | 34790/88651 [00:00<00:01, 39492.24it/s] 45%|████▍     | 39715/88651 [00:00<00:01, 41986.58it/s] 51%|█████     | 45046/88651 [00:01<00:00, 44843.37it/s] 56%|█████▌    | 49507/88651 [00:01<00:00, 44424.14it/s] 61%|██████    | 53934/88651 [00:01<00:00, 38223.40it/s] 65%|██████▌   | 57898/88651 [00:01<00:00, 36884.84it/s] 70%|██████▉   | 61696/88651 [00:01<00:00, 35635.14it/s] 74%|███████▎  | 65345/88651 [00:01<00:00, 35544.42it/s] 78%|███████▊  | 69463/88651 [00:01<00:00, 37066.05it/s] 83%|████████▎ | 73229/88651 [00:01<00:00, 35442.71it/s] 87%|████████▋ | 77016/88651 [00:01<00:00, 36137.35it/s] 91%|█████████ | 80673/88651 [00:02<00:00, 32710.75it/s] 95%|█████████▍| 84037/88651 [00:02<00:00, 29569.09it/s] 98%|█████████▊| 87232/88651 [00:02<00:00, 30082.72it/s]100%|██████████| 88651/88651 [00:02<00:00, 37663.92it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▌         | 4837/88651 [00:00<00:01, 48369.93it/s] 12%|█▏        | 10215/88651 [00:00<00:01, 48954.07it/s] 18%|█▊        | 16109/88651 [00:00<00:01, 51575.00it/s] 25%|██▌       | 22382/88651 [00:00<00:01, 54480.83it/s] 37%|███▋      | 33179/88651 [00:00<00:00, 63990.46it/s] 48%|████▊     | 42314/88651 [00:00<00:00, 70306.70it/s] 56%|█████▌    | 49457/88651 [00:00<00:00, 62871.35it/s] 63%|██████▎   | 55970/88651 [00:00<00:00, 51618.57it/s] 70%|██████▉   | 61622/88651 [00:01<00:00, 47069.71it/s] 75%|███████▌  | 66760/88651 [00:01<00:00, 48284.68it/s] 81%|████████  | 71891/88651 [00:01<00:00, 45436.48it/s] 86%|████████▋ | 76681/88651 [00:01<00:00, 40091.78it/s] 91%|█████████▏| 80978/88651 [00:01<00:00, 39668.71it/s] 96%|█████████▌| 85147/88651 [00:01<00:00, 35540.45it/s]100%|██████████| 88651/88651 [00:01<00:00, 49432.33it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▎         | 3311/88651 [00:00<00:02, 30345.09it/s]  7%|▋         | 6297/88651 [00:00<00:02, 29462.38it/s] 10%|█         | 8930/88651 [00:00<00:02, 28118.74it/s] 13%|█▎        | 11580/88651 [00:00<00:02, 27612.04it/s] 16%|█▌        | 14206/88651 [00:00<00:02, 27191.92it/s] 19%|█▊        | 16427/88651 [00:00<00:02, 24393.32it/s] 22%|██▏       | 19540/88651 [00:00<00:02, 26086.66it/s] 25%|██▍       | 22075/88651 [00:00<00:02, 25768.27it/s] 28%|██▊       | 25139/88651 [00:00<00:02, 26318.23it/s] 31%|███▏      | 27771/88651 [00:01<00:02, 26174.41it/s] 34%|███▍      | 30528/88651 [00:01<00:02, 25599.54it/s] 37%|███▋      | 33051/88651 [00:01<00:02, 24927.79it/s] 40%|████      | 35550/88651 [00:01<00:02, 24519.65it/s] 44%|████▎     | 38652/88651 [00:01<00:01, 26164.25it/s] 47%|████▋     | 41506/88651 [00:01<00:01, 26719.22it/s] 51%|█████     | 45095/88651 [00:01<00:01, 27635.49it/s] 54%|█████▍    | 48237/88651 [00:01<00:01, 28398.47it/s] 59%|█████▉    | 52452/88651 [00:01<00:01, 30518.38it/s] 63%|██████▎   | 55563/88651 [00:02<00:01, 30310.01it/s] 66%|██████▌   | 58641/88651 [00:02<00:00, 30448.79it/s] 70%|██████▉   | 61996/88651 [00:02<00:00, 30780.78it/s] 74%|███████▍  | 65869/88651 [00:02<00:00, 32800.05it/s] 78%|███████▊  | 69201/88651 [00:02<00:00, 28878.43it/s] 81%|████████▏ | 72211/88651 [00:02<00:00, 28388.78it/s] 89%|████████▉ | 79113/88651 [00:02<00:00, 34185.73it/s] 94%|█████████▍| 83265/88651 [00:02<00:00, 35235.28it/s]100%|██████████| 88651/88651 [00:02<00:00, 31171.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11622/88651 [00:00<00:00, 116211.52it/s] 26%|██▋       | 23411/88651 [00:00<00:00, 116707.58it/s] 39%|███▉      | 34821/88651 [00:00<00:00, 115912.57it/s] 53%|█████▎    | 47027/88651 [00:00<00:00, 117689.11it/s] 66%|██████▌   | 58585/88651 [00:00<00:00, 117046.93it/s] 80%|███████▉  | 70742/88651 [00:00<00:00, 118366.09it/s] 93%|█████████▎| 82381/88651 [00:00<00:00, 117765.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 106426.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5581/88651 [00:00<00:01, 55657.72it/s] 18%|█▊        | 15666/88651 [00:00<00:01, 63966.25it/s] 25%|██▍       | 21951/88651 [00:00<00:01, 63626.83it/s] 37%|███▋      | 33203/88651 [00:00<00:00, 73164.33it/s] 51%|█████     | 44906/88651 [00:00<00:00, 82433.71it/s] 61%|██████    | 54274/88651 [00:00<00:00, 85193.73it/s] 71%|███████   | 62793/88651 [00:00<00:00, 66134.82it/s] 79%|███████▉  | 70060/88651 [00:00<00:00, 65572.54it/s] 89%|████████▉ | 79249/88651 [00:01<00:00, 71731.96it/s] 98%|█████████▊| 86916/88651 [00:01<00:00, 70922.85it/s]100%|██████████| 88651/88651 [00:01<00:00, 77542.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5584/88651 [00:00<00:01, 55837.39it/s] 13%|█▎        | 11836/88651 [00:00<00:01, 57686.27it/s] 18%|█▊        | 16210/88651 [00:00<00:01, 51767.82it/s] 24%|██▍       | 21182/88651 [00:00<00:01, 49889.94it/s] 29%|██▉       | 25896/88651 [00:00<00:01, 48676.83it/s] 37%|███▋      | 32607/88651 [00:00<00:01, 53047.68it/s] 45%|████▌     | 40266/88651 [00:00<00:00, 58436.17it/s] 56%|█████▌    | 49246/88651 [00:00<00:00, 65275.02it/s] 69%|██████▉   | 61010/88651 [00:00<00:00, 75334.99it/s] 78%|███████▊  | 69204/88651 [00:01<00:00, 74640.51it/s] 87%|████████▋ | 77132/88651 [00:01<00:00, 68774.17it/s] 98%|█████████▊| 86622/88651 [00:01<00:00, 73642.56it/s]100%|██████████| 88651/88651 [00:01<00:00, 68760.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10370/88651 [00:00<00:00, 103699.60it/s] 25%|██▍       | 21725/88651 [00:00<00:00, 106470.08it/s] 34%|███▍      | 30241/88651 [00:00<00:00, 99033.97it/s]  47%|████▋     | 41528/88651 [00:00<00:00, 102813.96it/s] 56%|█████▌    | 49585/88651 [00:00<00:00, 94949.24it/s]  69%|██████▉   | 61223/88651 [00:00<00:00, 100500.93it/s] 82%|████████▏ | 72883/88651 [00:00<00:00, 104842.97it/s] 95%|█████████▌| 84509/88651 [00:00<00:00, 108023.50it/s]100%|██████████| 88651/88651 [00:00<00:00, 106170.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9230/88651 [00:00<00:00, 92297.89it/s] 21%|██▏       | 18946/88651 [00:00<00:00, 93702.86it/s] 34%|███▍      | 30418/88651 [00:00<00:00, 99151.92it/s] 44%|████▍     | 38880/88651 [00:00<00:00, 94292.78it/s] 52%|█████▏    | 46206/88651 [00:00<00:00, 83924.00it/s] 63%|██████▎   | 55865/88651 [00:00<00:00, 86016.64it/s] 74%|███████▍  | 65981/88651 [00:00<00:00, 90061.00it/s] 87%|████████▋ | 76918/88651 [00:00<00:00, 95095.56it/s] 97%|█████████▋| 86112/88651 [00:00<00:00, 86017.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 91643.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5855/88651 [00:00<00:01, 57110.68it/s] 16%|█▋        | 14453/88651 [00:00<00:01, 63507.29it/s] 27%|██▋       | 23639/88651 [00:00<00:00, 69987.48it/s] 36%|███▌      | 31912/88651 [00:00<00:00, 73376.91it/s] 50%|████▉     | 43996/88651 [00:00<00:00, 83177.87it/s] 63%|██████▎   | 56126/88651 [00:00<00:00, 91835.36it/s] 74%|███████▍  | 65554/88651 [00:00<00:00, 92554.91it/s] 87%|████████▋ | 77206/88651 [00:00<00:00, 98640.71it/s]100%|█████████▉| 88343/88651 [00:00<00:00, 102142.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 97917.24it/s] 
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7667/88651 [00:00<00:01, 76668.98it/s] 17%|█▋        | 15507/88651 [00:00<00:00, 77178.38it/s] 23%|██▎       | 20006/88651 [00:00<00:01, 62713.45it/s] 27%|██▋       | 24364/88651 [00:00<00:01, 54030.96it/s] 33%|███▎      | 28953/88651 [00:00<00:01, 50801.95it/s] 38%|███▊      | 33431/88651 [00:00<00:01, 48830.81it/s] 43%|████▎     | 38191/88651 [00:00<00:01, 47254.82it/s] 52%|█████▏    | 46464/88651 [00:00<00:00, 54230.38it/s] 65%|██████▌   | 57808/88651 [00:00<00:00, 64298.43it/s] 73%|███████▎  | 65063/88651 [00:01<00:00, 58763.83it/s] 81%|████████  | 71610/88651 [00:01<00:00, 57763.83it/s] 94%|█████████▍| 83136/88651 [00:01<00:00, 67929.16it/s]100%|██████████| 88651/88651 [00:01<00:00, 66395.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9035/88651 [00:00<00:00, 90343.41it/s] 16%|█▋        | 14483/88651 [00:00<00:00, 74883.10it/s] 25%|██▌       | 22444/88651 [00:00<00:00, 75902.09it/s] 34%|███▍      | 30489/88651 [00:00<00:00, 76888.65it/s] 47%|████▋     | 41559/88651 [00:00<00:00, 84643.84it/s] 60%|██████    | 53339/88651 [00:00<00:00, 92449.01it/s] 71%|███████   | 63031/88651 [00:00<00:00, 93608.21it/s] 81%|████████  | 71995/88651 [00:00<00:00, 79777.11it/s] 92%|█████████▏| 81297/88651 [00:00<00:00, 83334.92it/s]100%|██████████| 88651/88651 [00:01<00:00, 87107.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12431/88651 [00:00<00:00, 124308.93it/s] 26%|██▋       | 23411/88651 [00:00<00:00, 119567.07it/s] 40%|███▉      | 35289/88651 [00:00<00:00, 119328.18it/s] 52%|█████▏    | 46530/88651 [00:00<00:00, 117163.92it/s] 66%|██████▌   | 58551/88651 [00:00<00:00, 118060.70it/s] 79%|███████▉  | 70088/88651 [00:00<00:00, 117238.48it/s] 92%|█████████▏| 81734/88651 [00:00<00:00, 117003.37it/s]100%|██████████| 88651/88651 [00:00<00:00, 116709.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11270/88651 [00:00<00:00, 112696.08it/s] 25%|██▍       | 22127/88651 [00:00<00:00, 111424.67it/s] 38%|███▊      | 33621/88651 [00:00<00:00, 112456.12it/s] 50%|█████     | 44632/88651 [00:00<00:00, 111741.15it/s] 65%|██████▍   | 57348/88651 [00:00<00:00, 115958.79it/s] 78%|███████▊  | 68896/88651 [00:00<00:00, 115667.74it/s] 91%|█████████ | 80690/88651 [00:00<00:00, 116338.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 115388.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10397/88651 [00:00<00:00, 103960.68it/s] 25%|██▍       | 21847/88651 [00:00<00:00, 106911.78it/s] 38%|███▊      | 33292/88651 [00:00<00:00, 109064.90it/s] 51%|█████     | 45325/88651 [00:00<00:00, 112214.12it/s] 65%|██████▍   | 57383/88651 [00:00<00:00, 114597.64it/s] 78%|███████▊  | 68706/88651 [00:00<00:00, 114180.72it/s] 91%|█████████ | 80873/88651 [00:00<00:00, 116328.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 116031.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6310/88651 [00:00<00:01, 63099.61it/s] 12%|█▏        | 10382/88651 [00:00<00:01, 53852.40it/s] 25%|██▍       | 21742/88651 [00:00<00:01, 63941.31it/s] 35%|███▌      | 31091/88651 [00:00<00:00, 70638.75it/s] 42%|████▏     | 37521/88651 [00:00<00:00, 64308.38it/s] 49%|████▉     | 43618/88651 [00:00<00:00, 52484.28it/s] 55%|█████▌    | 48988/88651 [00:00<00:00, 47425.53it/s] 62%|██████▏   | 55354/88651 [00:00<00:00, 51353.84it/s] 73%|███████▎  | 64284/88651 [00:01<00:00, 57556.35it/s] 79%|███████▉  | 70436/88651 [00:01<00:00, 51173.82it/s] 92%|█████████▏| 81913/88651 [00:01<00:00, 61376.70it/s]100%|██████████| 88651/88651 [00:01<00:00, 61883.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  4%|▍         | 3731/88651 [00:00<00:02, 36230.62it/s]  7%|▋         | 6419/88651 [00:00<00:02, 31340.83it/s] 12%|█▏        | 10226/88651 [00:00<00:02, 31635.85it/s] 15%|█▌        | 13622/88651 [00:00<00:02, 31674.20it/s] 22%|██▏       | 19184/88651 [00:00<00:01, 36371.50it/s] 26%|██▌       | 22790/88651 [00:00<00:01, 36277.18it/s] 31%|███       | 27597/88651 [00:00<00:01, 38921.31it/s] 38%|███▊      | 33966/88651 [00:00<00:01, 44061.80it/s] 49%|████▊     | 43057/88651 [00:00<00:00, 52119.07it/s] 57%|█████▋    | 50295/88651 [00:01<00:00, 56896.54it/s] 71%|███████   | 62812/88651 [00:01<00:00, 68027.45it/s] 85%|████████▍ | 75297/88651 [00:01<00:00, 78784.44it/s] 98%|█████████▊| 86794/88651 [00:01<00:00, 86999.01it/s]100%|██████████| 88651/88651 [00:01<00:00, 63949.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6283/88651 [00:00<00:01, 62825.12it/s] 19%|█▉        | 17100/88651 [00:00<00:00, 71861.78it/s] 26%|██▌       | 22843/88651 [00:00<00:00, 66822.40it/s] 36%|███▌      | 32115/88651 [00:00<00:00, 72933.59it/s] 44%|████▍     | 39284/88651 [00:00<00:00, 72366.07it/s] 56%|█████▌    | 49357/88651 [00:00<00:00, 76815.92it/s] 66%|██████▌   | 58378/88651 [00:00<00:00, 80395.58it/s] 78%|███████▊  | 69247/88651 [00:00<00:00, 87205.76it/s] 92%|█████████▏| 81510/88651 [00:00<00:00, 95479.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 91375.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12051/88651 [00:00<00:00, 120500.35it/s] 27%|██▋       | 23993/88651 [00:00<00:00, 120172.24it/s] 34%|███▍      | 30106/88651 [00:00<00:00, 92206.34it/s]  41%|████      | 36522/88651 [00:00<00:00, 81515.25it/s] 48%|████▊     | 42697/88651 [00:00<00:00, 70781.17it/s] 58%|█████▊    | 51140/88651 [00:00<00:00, 74388.59it/s] 69%|██████▉   | 61232/88651 [00:00<00:00, 77623.52it/s] 77%|███████▋  | 68511/88651 [00:00<00:00, 70855.75it/s] 89%|████████▊ | 78461/88651 [00:00<00:00, 76647.34it/s]100%|█████████▉| 88600/88651 [00:01<00:00, 82534.86it/s]100%|██████████| 88651/88651 [00:01<00:00, 83305.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9364/88651 [00:00<00:00, 93633.17it/s] 24%|██▎       | 20948/88651 [00:00<00:00, 99346.39it/s] 34%|███▍      | 30286/88651 [00:00<00:00, 97476.57it/s] 43%|████▎     | 38234/88651 [00:00<00:00, 91274.37it/s] 53%|█████▎    | 47182/88651 [00:00<00:00, 90727.39it/s] 66%|██████▋   | 58849/88651 [00:00<00:00, 95331.93it/s] 76%|███████▌  | 67408/88651 [00:00<00:00, 73597.59it/s] 89%|████████▉ | 79112/88651 [00:00<00:00, 82818.47it/s] 99%|█████████▉| 87826/88651 [00:00<00:00, 81434.34it/s]100%|██████████| 88651/88651 [00:01<00:00, 88228.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10424/88651 [00:00<00:00, 104238.86it/s] 18%|█▊        | 16370/88651 [00:00<00:00, 85028.42it/s]  32%|███▏      | 28314/88651 [00:00<00:00, 93071.39it/s] 45%|████▌     | 39976/88651 [00:00<00:00, 99072.08it/s] 55%|█████▍    | 48328/88651 [00:00<00:00, 93829.76it/s] 64%|██████▎   | 56401/88651 [00:00<00:00, 87889.97it/s] 77%|███████▋  | 67951/88651 [00:00<00:00, 94679.02it/s] 89%|████████▉ | 79200/88651 [00:00<00:00, 99398.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 100671.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11295/88651 [00:00<00:00, 112949.03it/s] 26%|██▌       | 22758/88651 [00:00<00:00, 113446.95it/s] 39%|███▊      | 34281/88651 [00:00<00:00, 113974.14it/s] 52%|█████▏    | 45869/88651 [00:00<00:00, 114538.75it/s] 65%|██████▍   | 57461/88651 [00:00<00:00, 114947.08it/s] 78%|███████▊  | 69381/88651 [00:00<00:00, 116188.35it/s] 92%|█████████▏| 81341/88651 [00:00<00:00, 117189.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 116397.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11565/88651 [00:00<00:00, 115643.49it/s] 21%|██        | 18186/88651 [00:00<00:00, 94478.47it/s]  34%|███▍      | 30358/88651 [00:00<00:00, 101277.15it/s] 47%|████▋     | 42062/88651 [00:00<00:00, 105539.61it/s] 61%|██████    | 53960/88651 [00:00<00:00, 109241.31it/s] 72%|███████▏  | 63771/88651 [00:00<00:00, 104560.46it/s] 85%|████████▍ | 75146/88651 [00:00<00:00, 107156.71it/s] 98%|█████████▊| 87071/88651 [00:00<00:00, 110518.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 108603.05it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9970/88651 [00:00<00:00, 99694.39it/s] 16%|█▌        | 13886/88651 [00:00<00:01, 66693.74it/s] 29%|██▉       | 25954/88651 [00:00<00:00, 77030.87it/s] 44%|████▎     | 38629/88651 [00:00<00:00, 87304.13it/s] 55%|█████▍    | 48637/88651 [00:00<00:00, 90011.55it/s] 69%|██████▉   | 61099/88651 [00:00<00:00, 98191.60it/s] 83%|████████▎ | 73543/88651 [00:00<00:00, 104823.64it/s] 96%|█████████▋| 85453/88651 [00:00<00:00, 108733.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 106157.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8151/88651 [00:00<00:00, 81505.41it/s] 21%|██▏       | 18935/88651 [00:00<00:00, 87946.87it/s] 35%|███▍      | 31022/88651 [00:00<00:00, 95772.53it/s] 46%|████▌     | 40853/88651 [00:00<00:00, 96517.43it/s] 58%|█████▊    | 51118/88651 [00:00<00:00, 98277.74it/s] 71%|███████▏  | 63196/88651 [00:00<00:00, 104094.26it/s] 85%|████████▍ | 75292/88651 [00:00<00:00, 108636.66it/s] 99%|█████████▊| 87513/88651 [00:00<00:00, 112380.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 109496.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 8945/88651 [00:00<00:00, 89442.83it/s] 24%|██▎       | 20894/88651 [00:00<00:00, 96740.34it/s] 37%|███▋      | 32936/88651 [00:00<00:00, 102803.86it/s] 51%|█████     | 45038/88651 [00:00<00:00, 107663.36it/s] 64%|██████▍   | 57003/88651 [00:00<00:00, 110997.04it/s] 78%|███████▊  | 69113/88651 [00:00<00:00, 113843.89it/s] 92%|█████████▏| 81273/88651 [00:00<00:00, 116062.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 116549.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12147/88651 [00:00<00:00, 121462.30it/s] 27%|██▋       | 24134/88651 [00:00<00:00, 120979.43it/s] 41%|████      | 36157/88651 [00:00<00:00, 120752.62it/s] 54%|█████▍    | 48219/88651 [00:00<00:00, 120712.23it/s] 68%|██████▊   | 60324/88651 [00:00<00:00, 120812.71it/s] 82%|████████▏ | 72393/88651 [00:00<00:00, 120773.57it/s] 95%|█████████▌| 84510/88651 [00:00<00:00, 120891.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 120681.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10248/88651 [00:00<00:00, 102472.04it/s] 23%|██▎       | 20249/88651 [00:00<00:00, 100550.64it/s] 34%|███▍      | 30577/88651 [00:00<00:00, 101352.08it/s] 48%|████▊     | 42429/88651 [00:00<00:00, 105954.29it/s] 59%|█████▉    | 52669/88651 [00:00<00:00, 102502.74it/s] 69%|██████▉   | 61264/88651 [00:00<00:00, 71060.37it/s]  77%|███████▋  | 68523/88651 [00:00<00:00, 60154.35it/s] 85%|████████▍ | 74933/88651 [00:01<00:00, 47088.26it/s] 95%|█████████▍| 83861/88651 [00:01<00:00, 54866.10it/s]100%|██████████| 88651/88651 [00:01<00:00, 71872.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11744/88651 [00:00<00:00, 117439.27it/s] 21%|██        | 18612/88651 [00:00<00:00, 90860.85it/s]  26%|██▌       | 22863/88651 [00:00<00:01, 57136.06it/s] 30%|███       | 26891/88651 [00:00<00:01, 50761.31it/s] 35%|███▍      | 30825/88651 [00:00<00:01, 42323.68it/s] 42%|████▏     | 37211/88651 [00:00<00:01, 46556.92it/s] 50%|█████     | 44382/88651 [00:00<00:00, 52031.33it/s] 60%|█████▉    | 52832/88651 [00:00<00:00, 58809.73it/s] 69%|██████▉   | 61345/88651 [00:01<00:00, 62437.52it/s] 77%|███████▋  | 67868/88651 [00:01<00:00, 60967.59it/s] 90%|████████▉ | 79632/88651 [00:01<00:00, 71259.53it/s]100%|██████████| 88651/88651 [00:01<00:00, 68200.05it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6318/88651 [00:00<00:01, 57802.12it/s] 13%|█▎        | 11464/88651 [00:00<00:01, 55740.48it/s] 19%|█▉        | 16663/88651 [00:00<00:01, 54287.74it/s] 23%|██▎       | 20321/88651 [00:00<00:01, 47402.75it/s] 28%|██▊       | 25136/88651 [00:00<00:01, 46007.35it/s] 33%|███▎      | 28894/88651 [00:00<00:01, 39264.12it/s] 37%|███▋      | 32403/88651 [00:00<00:01, 37103.13it/s] 44%|████▍     | 39300/88651 [00:00<00:01, 43073.50it/s] 54%|█████▍    | 47953/88651 [00:00<00:00, 49850.20it/s] 63%|██████▎   | 55583/88651 [00:01<00:00, 55635.75it/s] 70%|██████▉   | 61908/88651 [00:01<00:00, 57719.02it/s] 77%|███████▋  | 68102/88651 [00:01<00:00, 57934.80it/s] 91%|█████████ | 80351/88651 [00:01<00:00, 68814.90it/s]100%|██████████| 88651/88651 [00:01<00:00, 61504.12it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12391/88651 [00:00<00:00, 123905.39it/s] 27%|██▋       | 23821/88651 [00:00<00:00, 119785.57it/s] 40%|████      | 35764/88651 [00:00<00:00, 119677.42it/s] 54%|█████▎    | 47535/88651 [00:00<00:00, 119080.01it/s] 66%|██████▋   | 58805/88651 [00:00<00:00, 117089.81it/s] 80%|███████▉  | 70558/88651 [00:00<00:00, 117220.72it/s] 92%|█████████▏| 81768/88651 [00:00<00:00, 115635.99it/s]100%|██████████| 88651/88651 [00:00<00:00, 116675.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7159/88651 [00:00<00:01, 71587.68it/s] 15%|█▍        | 13260/88651 [00:00<00:01, 67986.43it/s] 22%|██▏       | 19701/88651 [00:00<00:01, 66871.66it/s] 28%|██▊       | 25190/88651 [00:00<00:01, 62761.49it/s] 40%|███▉      | 35069/88651 [00:00<00:00, 70471.31it/s] 53%|█████▎    | 46829/88651 [00:00<00:00, 80100.67it/s] 67%|██████▋   | 59229/88651 [00:00<00:00, 89617.09it/s] 77%|███████▋  | 68459/88651 [00:00<00:00, 75735.25it/s] 91%|█████████ | 80360/88651 [00:00<00:00, 85007.89it/s]100%|██████████| 88651/88651 [00:01<00:00, 85689.59it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11851/88651 [00:00<00:00, 118506.16it/s] 27%|██▋       | 23992/88651 [00:00<00:00, 119360.81it/s] 40%|███▉      | 35356/88651 [00:00<00:00, 117583.72it/s] 50%|████▉     | 44173/88651 [00:00<00:00, 106883.42it/s] 62%|██████▏   | 55273/88651 [00:00<00:00, 108084.88it/s] 73%|███████▎  | 65110/88651 [00:00<00:00, 104972.84it/s] 87%|████████▋ | 77511/88651 [00:00<00:00, 110040.11it/s] 99%|█████████▉| 87685/88651 [00:00<00:00, 93495.02it/s] 100%|██████████| 88651/88651 [00:00<00:00, 102332.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12212/88651 [00:00<00:00, 122103.52it/s] 27%|██▋       | 23823/88651 [00:00<00:00, 120240.63it/s] 34%|███▎      | 29871/88651 [00:00<00:00, 92447.06it/s]  43%|████▎     | 37736/88651 [00:00<00:00, 87824.34it/s] 56%|█████▌    | 49363/88651 [00:00<00:00, 94780.52it/s] 65%|██████▍   | 57460/88651 [00:00<00:00, 87148.77it/s] 76%|███████▋  | 67791/88651 [00:00<00:00, 91438.94it/s] 86%|████████▋ | 76644/88651 [00:00<00:00, 90544.62it/s] 96%|█████████▌| 85325/88651 [00:00<00:00, 79964.38it/s]100%|██████████| 88651/88651 [00:00<00:00, 90794.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12055/88651 [00:00<00:00, 120543.22it/s] 27%|██▋       | 24155/88651 [00:00<00:00, 120679.67it/s] 41%|████      | 35906/88651 [00:00<00:00, 119709.51it/s] 54%|█████▍    | 48178/88651 [00:00<00:00, 120594.69it/s] 68%|██████▊   | 60018/88651 [00:00<00:00, 119926.69it/s] 82%|████████▏ | 72369/88651 [00:00<00:00, 120979.02it/s] 96%|█████████▌| 84727/88651 [00:00<00:00, 121744.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 121103.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11769/88651 [00:00<00:00, 117684.78it/s] 26%|██▌       | 23155/88651 [00:00<00:00, 116508.71it/s] 37%|███▋      | 32887/88651 [00:00<00:00, 107836.47it/s] 45%|████▍     | 39765/88651 [00:00<00:00, 87396.38it/s]  52%|█████▏    | 46397/88651 [00:00<00:00, 76677.53it/s] 60%|█████▉    | 52828/88651 [00:00<00:00, 68244.41it/s] 69%|██████▉   | 61145/88651 [00:00<00:00, 72126.53it/s] 77%|███████▋  | 68067/88651 [00:00<00:00, 71228.55it/s] 88%|████████▊ | 78048/88651 [00:00<00:00, 77922.11it/s] 97%|█████████▋| 85997/88651 [00:01<00:00, 78384.91it/s]100%|██████████| 88651/88651 [00:01<00:00, 81923.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11192/88651 [00:00<00:00, 111912.37it/s] 25%|██▍       | 21918/88651 [00:00<00:00, 110474.21it/s] 31%|███       | 27486/88651 [00:00<00:00, 83386.30it/s]  49%|████▉     | 43753/88651 [00:00<00:00, 97666.61it/s] 71%|███████   | 62834/88651 [00:00<00:00, 114422.27it/s] 85%|████████▌ | 75576/88651 [00:00<00:00, 118034.17it/s]100%|██████████| 88651/88651 [00:00<00:00, 129166.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19187/88651 [00:00<00:00, 191860.12it/s] 47%|████▋     | 41574/88651 [00:00<00:00, 200458.52it/s] 68%|██████▊   | 60529/88651 [00:00<00:00, 197053.79it/s] 92%|█████████▏| 81982/88651 [00:00<00:00, 201988.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 204662.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14252/88651 [00:00<00:00, 142508.58it/s] 30%|██▉       | 26570/88651 [00:00<00:00, 136100.16it/s] 53%|█████▎    | 46864/88651 [00:00<00:00, 151021.57it/s] 75%|███████▍  | 66432/88651 [00:00<00:00, 162119.58it/s] 97%|█████████▋| 86278/88651 [00:00<00:00, 171542.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 172845.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▍       | 21901/88651 [00:00<00:00, 219007.60it/s] 50%|█████     | 44510/88651 [00:00<00:00, 221084.88it/s] 71%|███████   | 62991/88651 [00:00<00:00, 208789.74it/s] 87%|████████▋ | 76972/88651 [00:00<00:00, 181868.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 190883.12it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20618/88651 [00:00<00:00, 206173.81it/s] 46%|████▌     | 40575/88651 [00:00<00:00, 204145.19it/s] 67%|██████▋   | 59453/88651 [00:00<00:00, 199276.17it/s] 90%|████████▉ | 79451/88651 [00:00<00:00, 199485.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 198485.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17149/88651 [00:00<00:00, 171487.71it/s] 39%|███▊      | 34189/88651 [00:00<00:00, 171156.06it/s] 54%|█████▍    | 48041/88651 [00:00<00:00, 159854.78it/s] 77%|███████▋  | 68205/88651 [00:00<00:00, 170449.90it/s] 99%|█████████▉| 88103/88651 [00:00<00:00, 178109.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 176226.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15328/88651 [00:00<00:00, 153278.32it/s] 39%|███▉      | 34898/88651 [00:00<00:00, 163939.25it/s] 61%|██████▏   | 54498/88651 [00:00<00:00, 172396.88it/s] 83%|████████▎ | 73940/88651 [00:00<00:00, 178460.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 187284.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11555/88651 [00:00<00:00, 106856.71it/s] 19%|█▉        | 17001/88651 [00:00<00:00, 82921.32it/s]  27%|██▋       | 23706/88651 [00:00<00:00, 75153.53it/s] 33%|███▎      | 29316/88651 [00:00<00:00, 68202.71it/s] 39%|███▊      | 34195/88651 [00:00<00:00, 59178.81it/s] 55%|█████▌    | 49004/88651 [00:00<00:00, 72178.81it/s] 72%|███████▏  | 64101/88651 [00:00<00:00, 85576.54it/s] 87%|████████▋ | 76753/88651 [00:00<00:00, 94777.09it/s] 99%|█████████▊| 87532/88651 [00:00<00:00, 91117.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 90033.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13567/88651 [00:00<00:00, 135665.60it/s] 24%|██▍       | 21689/88651 [00:00<00:00, 112944.15it/s] 34%|███▍      | 29991/88651 [00:00<00:00, 101921.48it/s] 50%|████▉     | 44100/88651 [00:00<00:00, 111179.43it/s] 64%|██████▍   | 56747/88651 [00:00<00:00, 115361.77it/s] 78%|███████▊  | 69554/88651 [00:00<00:00, 118899.20it/s] 99%|█████████▉| 87594/88651 [00:00<00:00, 132443.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 125629.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7508/88651 [00:00<00:01, 75076.13it/s] 17%|█▋        | 14665/88651 [00:00<00:01, 71035.41it/s] 26%|██▌       | 22715/88651 [00:00<00:00, 73631.28it/s] 47%|████▋     | 41725/88651 [00:00<00:00, 90212.42it/s] 68%|██████▊   | 60279/88651 [00:00<00:00, 106650.40it/s] 83%|████████▎ | 73154/88651 [00:00<00:00, 112438.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 128320.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19445/88651 [00:00<00:00, 194441.38it/s] 43%|████▎     | 38135/88651 [00:00<00:00, 192113.76it/s] 64%|██████▍   | 56654/88651 [00:00<00:00, 189981.26it/s] 85%|████████▍ | 74932/88651 [00:00<00:00, 187760.12it/s]100%|██████████| 88651/88651 [00:00<00:00, 188152.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18533/88651 [00:00<00:00, 185322.67it/s] 43%|████▎     | 38143/88651 [00:00<00:00, 188428.67it/s] 66%|██████▌   | 58679/88651 [00:00<00:00, 193206.37it/s] 88%|████████▊ | 78213/88651 [00:00<00:00, 193841.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 195562.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19934/88651 [00:00<00:00, 199337.34it/s] 46%|████▌     | 40853/88651 [00:00<00:00, 202191.69it/s] 70%|███████   | 62217/88651 [00:00<00:00, 205492.48it/s] 93%|█████████▎| 82539/88651 [00:00<00:00, 204802.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 204865.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12371/88651 [00:00<00:00, 123705.10it/s] 27%|██▋       | 24238/88651 [00:00<00:00, 122147.88it/s] 48%|████▊     | 42705/88651 [00:00<00:00, 135955.68it/s] 69%|██████▉   | 61284/88651 [00:00<00:00, 147852.95it/s] 90%|████████▉ | 79772/88651 [00:00<00:00, 157302.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 161175.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20022/88651 [00:00<00:00, 200213.99it/s] 44%|████▎     | 38777/88651 [00:00<00:00, 196234.87it/s] 55%|█████▍    | 48608/88651 [00:00<00:00, 137766.99it/s] 76%|███████▌  | 67223/88651 [00:00<00:00, 149416.55it/s] 98%|█████████▊| 86958/88651 [00:00<00:00, 161159.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 167403.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18975/88651 [00:00<00:00, 189741.13it/s] 44%|████▎     | 38782/88651 [00:00<00:00, 192164.03it/s] 65%|██████▌   | 57836/88651 [00:00<00:00, 191673.01it/s] 86%|████████▋ | 76595/88651 [00:00<00:00, 190427.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 189158.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16037/88651 [00:00<00:00, 160364.04it/s] 36%|███▌      | 31802/88651 [00:00<00:00, 159538.49it/s] 50%|████▉     | 44150/88651 [00:00<00:00, 146687.61it/s] 67%|██████▋   | 59142/88651 [00:00<00:00, 147641.39it/s] 88%|████████▊ | 77718/88651 [00:00<00:00, 157326.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 157058.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 5973/88651 [00:00<00:01, 59727.64it/s] 28%|██▊       | 24722/88651 [00:00<00:00, 75075.33it/s] 49%|████▉     | 43786/88651 [00:00<00:00, 91762.67it/s] 71%|███████▏  | 63334/88651 [00:00<00:00, 109133.41it/s] 93%|█████████▎| 82821/88651 [00:00<00:00, 125728.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 167148.07it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19468/88651 [00:00<00:00, 194668.12it/s] 29%|██▊       | 25309/88651 [00:00<00:00, 100194.91it/s] 41%|████      | 36431/88651 [00:00<00:00, 103263.80it/s] 55%|█████▌    | 48842/88651 [00:00<00:00, 108742.14it/s] 65%|██████▍   | 57595/88651 [00:00<00:00, 98084.94it/s]  81%|████████  | 71681/88651 [00:00<00:00, 107916.09it/s] 98%|█████████▊| 87071/88651 [00:00<00:00, 118540.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 119431.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6590/88651 [00:00<00:01, 65897.86it/s] 22%|██▏       | 19091/88651 [00:00<00:00, 76301.26it/s] 31%|███       | 27337/88651 [00:00<00:00, 78049.25it/s] 45%|████▍     | 39756/88651 [00:00<00:00, 87839.55it/s] 54%|█████▍    | 47668/88651 [00:00<00:00, 78083.70it/s] 62%|██████▏   | 55115/88651 [00:00<00:00, 76961.61it/s] 78%|███████▊  | 69102/88651 [00:00<00:00, 88964.38it/s] 93%|█████████▎| 82296/88651 [00:00<00:00, 98598.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 100734.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5328/88651 [00:00<00:01, 46746.00it/s] 19%|█▉        | 17243/88651 [00:00<00:01, 57167.33it/s] 27%|██▋       | 23620/88651 [00:00<00:01, 58999.47it/s] 40%|████      | 35749/88651 [00:00<00:00, 69744.69it/s] 60%|█████▉    | 53059/88651 [00:00<00:00, 84963.73it/s] 82%|████████▏ | 72315/88651 [00:00<00:00, 102073.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 125741.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19335/88651 [00:00<00:00, 193345.11it/s] 44%|████▍     | 38859/88651 [00:00<00:00, 193909.07it/s] 65%|██████▌   | 57643/88651 [00:00<00:00, 192047.34it/s] 86%|████████▌ | 76270/88651 [00:00<00:00, 190276.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 189390.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17997/88651 [00:00<00:00, 179968.88it/s] 42%|████▏     | 36810/88651 [00:00<00:00, 182339.16it/s] 62%|██████▏   | 54961/88651 [00:00<00:00, 182085.49it/s] 80%|███████▉  | 70876/88651 [00:00<00:00, 174538.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 178113.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17365/88651 [00:00<00:00, 173635.68it/s] 35%|███▍      | 30970/88651 [00:00<00:00, 160344.21it/s] 51%|█████     | 45230/88651 [00:00<00:00, 154571.97it/s] 68%|██████▊   | 60099/88651 [00:00<00:00, 152757.34it/s] 85%|████████▌ | 75459/88651 [00:00<00:00, 153006.04it/s] 99%|█████████▉| 87936/88651 [00:00<00:00, 135665.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 141996.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18210/88651 [00:00<00:00, 182093.66it/s] 43%|████▎     | 38278/88651 [00:00<00:00, 187296.91it/s] 66%|██████▌   | 58610/88651 [00:00<00:00, 191831.78it/s] 89%|████████▉ | 78807/88651 [00:00<00:00, 194761.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 195969.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15867/88651 [00:00<00:00, 158659.18it/s] 35%|███▍      | 30656/88651 [00:00<00:00, 155264.98it/s] 57%|█████▋    | 50598/88651 [00:00<00:00, 166312.04it/s] 79%|███████▉  | 70375/88651 [00:00<00:00, 174645.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 180038.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19414/88651 [00:00<00:00, 194133.71it/s] 44%|████▍     | 39063/88651 [00:00<00:00, 194832.62it/s] 66%|██████▌   | 58067/88651 [00:00<00:00, 193368.57it/s] 87%|████████▋ | 77038/88651 [00:00<00:00, 192253.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 190351.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16977/88651 [00:00<00:00, 169762.88it/s] 39%|███▉      | 34672/88651 [00:00<00:00, 171854.85it/s] 61%|██████    | 53832/88651 [00:00<00:00, 177335.97it/s] 77%|███████▋  | 68187/88651 [00:00<00:00, 165638.01it/s] 91%|█████████▏| 81016/88651 [00:00<00:00, 152332.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 159128.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17773/88651 [00:00<00:00, 177729.32it/s] 40%|███▉      | 35126/88651 [00:00<00:00, 176447.49it/s] 60%|██████    | 53526/88651 [00:00<00:00, 178645.89it/s] 82%|████████▏ | 72328/88651 [00:00<00:00, 181358.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 183492.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14669/88651 [00:00<00:00, 146681.75it/s] 34%|███▎      | 29899/88651 [00:00<00:00, 148322.12it/s] 54%|█████▍    | 48171/88651 [00:00<00:00, 157199.77it/s] 71%|███████   | 62772/88651 [00:00<00:00, 153663.15it/s] 84%|████████▍ | 74738/88651 [00:00<00:00, 135786.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 146746.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14396/88651 [00:00<00:00, 143958.08it/s] 27%|██▋       | 23678/88651 [00:00<00:00, 123537.96it/s] 39%|███▊      | 34152/88651 [00:00<00:00, 117225.76it/s] 60%|█████▉    | 52801/88651 [00:00<00:00, 131925.16it/s] 81%|████████  | 71754/88651 [00:00<00:00, 145160.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 150282.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17314/88651 [00:00<00:00, 173133.15it/s] 42%|████▏     | 37391/88651 [00:00<00:00, 180589.07it/s] 65%|██████▍   | 57614/88651 [00:00<00:00, 186578.57it/s] 86%|████████▌ | 76257/88651 [00:00<00:00, 185356.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 160629.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9595/88651 [00:00<00:00, 95948.26it/s] 15%|█▍        | 13198/88651 [00:00<00:01, 64011.13it/s] 30%|███       | 26599/88651 [00:00<00:00, 75905.71it/s] 48%|████▊     | 42667/88651 [00:00<00:00, 90178.51it/s] 58%|█████▊    | 51819/88651 [00:00<00:00, 82617.08it/s] 72%|███████▏  | 63535/88651 [00:00<00:00, 89401.67it/s] 82%|████████▏ | 72788/88651 [00:00<00:00, 81974.99it/s]100%|█████████▉| 88247/88651 [00:00<00:00, 95420.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 101115.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12568/88651 [00:00<00:00, 125675.92it/s] 24%|██▍       | 21183/88651 [00:00<00:00, 110468.64it/s] 37%|███▋      | 32945/88651 [00:00<00:00, 112520.92it/s] 45%|████▌     | 40131/88651 [00:00<00:00, 93446.96it/s]  57%|█████▋    | 50134/88651 [00:00<00:00, 95327.53it/s] 66%|██████▋   | 58850/88651 [00:00<00:00, 92719.98it/s] 80%|███████▉  | 70919/88651 [00:00<00:00, 99647.06it/s] 93%|█████████▎| 82180/88651 [00:00<00:00, 103210.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 103755.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16701/88651 [00:00<00:00, 167006.58it/s] 41%|████      | 36280/88651 [00:00<00:00, 174711.25it/s] 56%|█████▌    | 49541/88651 [00:00<00:00, 159511.09it/s] 68%|██████▊   | 60086/88651 [00:00<00:00, 114816.12it/s] 89%|████████▉ | 79269/88651 [00:00<00:00, 130537.45it/s]100%|██████████| 88651/88651 [00:00<00:00, 147971.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18327/88651 [00:00<00:00, 183267.55it/s] 41%|████      | 36423/88651 [00:00<00:00, 182566.94it/s] 60%|██████    | 53444/88651 [00:00<00:00, 178675.27it/s] 75%|███████▌  | 66867/88651 [00:00<00:00, 162528.02it/s] 97%|█████████▋| 86222/88651 [00:00<00:00, 170737.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 172913.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19121/88651 [00:00<00:00, 191207.45it/s] 43%|████▎     | 38197/88651 [00:00<00:00, 191070.99it/s] 65%|██████▍   | 57209/88651 [00:00<00:00, 190784.34it/s] 86%|████████▌ | 75847/88651 [00:00<00:00, 189438.50it/s]100%|██████████| 88651/88651 [00:00<00:00, 188578.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19184/88651 [00:00<00:00, 191838.81it/s] 38%|███▊      | 33490/88651 [00:00<00:00, 174036.02it/s] 51%|█████     | 45409/88651 [00:00<00:00, 152923.97it/s] 70%|███████   | 62189/88651 [00:00<00:00, 157100.52it/s] 92%|█████████▏| 81137/88651 [00:00<00:00, 165588.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 163236.72it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18760/88651 [00:00<00:00, 187599.28it/s] 43%|████▎     | 38453/88651 [00:00<00:00, 190303.32it/s] 64%|██████▎   | 56418/88651 [00:00<00:00, 186976.34it/s] 78%|███████▊  | 69406/88651 [00:00<00:00, 165187.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 178633.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19064/88651 [00:00<00:00, 190633.82it/s] 44%|████▎     | 38675/88651 [00:00<00:00, 192242.59it/s] 64%|██████▎   | 56318/88651 [00:00<00:00, 187206.78it/s] 77%|███████▋  | 68532/88651 [00:00<00:00, 160239.89it/s] 98%|█████████▊| 86824/88651 [00:00<00:00, 166430.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 173145.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15038/88651 [00:00<00:00, 150379.78it/s] 37%|███▋      | 32425/88651 [00:00<00:00, 156730.26it/s] 58%|█████▊    | 51500/88651 [00:00<00:00, 165588.21it/s] 79%|███████▉  | 70475/88651 [00:00<00:00, 172162.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 179233.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12305/88651 [00:00<00:00, 123045.72it/s] 31%|███       | 27242/88651 [00:00<00:00, 129913.35it/s] 47%|████▋     | 41659/88651 [00:00<00:00, 133884.56it/s] 67%|██████▋   | 59763/88651 [00:00<00:00, 145232.50it/s] 89%|████████▉ | 78984/88651 [00:00<00:00, 156722.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 160570.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15338/88651 [00:00<00:00, 153370.64it/s] 33%|███▎      | 29690/88651 [00:00<00:00, 150275.81it/s] 56%|█████▌    | 49792/88651 [00:00<00:00, 162587.00it/s] 79%|███████▉  | 70123/88651 [00:00<00:00, 172981.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 180662.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14768/88651 [00:00<00:00, 147670.99it/s] 34%|███▍      | 30129/88651 [00:00<00:00, 149402.60it/s] 51%|█████▏    | 45531/88651 [00:00<00:00, 150755.89it/s] 70%|███████   | 62101/88651 [00:00<00:00, 154946.39it/s] 91%|█████████ | 80876/88651 [00:00<00:00, 163516.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 163694.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17699/88651 [00:00<00:00, 176981.31it/s] 32%|███▏      | 28427/88651 [00:00<00:00, 148111.33it/s] 41%|████      | 36255/88651 [00:00<00:00, 116841.61it/s] 49%|████▉     | 43458/88651 [00:00<00:00, 94763.59it/s]  59%|█████▉    | 52094/88651 [00:00<00:00, 92075.26it/s] 81%|████████▏ | 72050/88651 [00:00<00:00, 109819.81it/s] 97%|█████████▋| 85731/88651 [00:00<00:00, 113947.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 110791.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9092/88651 [00:00<00:00, 83005.27it/s] 17%|█▋        | 15457/88651 [00:00<00:00, 76063.90it/s] 22%|██▏       | 19110/88651 [00:00<00:01, 55056.61it/s] 27%|██▋       | 23687/88651 [00:00<00:01, 51100.62it/s] 37%|███▋      | 33201/88651 [00:00<00:00, 59340.84it/s] 60%|██████    | 53618/88651 [00:00<00:00, 75382.80it/s] 84%|████████▍ | 74385/88651 [00:00<00:00, 93191.42it/s] 99%|█████████▉| 87607/88651 [00:00<00:00, 86066.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 97128.72it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 12863/88651 [00:00<00:00, 128628.28it/s] 25%|██▌       | 22182/88651 [00:00<00:00, 113598.29it/s] 31%|███       | 27562/88651 [00:00<00:00, 76418.99it/s]  53%|█████▎    | 46865/88651 [00:00<00:00, 93333.99it/s] 74%|███████▍  | 65972/88651 [00:00<00:00, 110252.37it/s] 96%|█████████▋| 85518/88651 [00:00<00:00, 126839.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 137594.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13732/88651 [00:00<00:00, 137318.17it/s] 33%|███▎      | 29607/88651 [00:00<00:00, 143113.11it/s] 55%|█████▍    | 48604/88651 [00:00<00:00, 154547.14it/s] 77%|███████▋  | 68452/88651 [00:00<00:00, 165538.78it/s]100%|█████████▉| 88479/88651 [00:00<00:00, 174623.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 176894.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16582/88651 [00:00<00:00, 165819.37it/s] 35%|███▍      | 30628/88651 [00:00<00:00, 157298.77it/s] 56%|█████▌    | 49721/88651 [00:00<00:00, 166073.30it/s] 77%|███████▋  | 68653/88651 [00:00<00:00, 172422.85it/s] 95%|█████████▍| 84080/88651 [00:00<00:00, 166543.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 166939.07it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15382/88651 [00:00<00:00, 153745.74it/s] 37%|███▋      | 32814/88651 [00:00<00:00, 159389.19it/s] 53%|█████▎    | 47175/88651 [00:00<00:00, 154301.47it/s] 71%|███████   | 62803/88651 [00:00<00:00, 154887.93it/s] 88%|████████▊ | 78300/88651 [00:00<00:00, 154909.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 156348.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15052/88651 [00:00<00:00, 150518.71it/s] 34%|███▍      | 30538/88651 [00:00<00:00, 151794.19it/s] 52%|█████▏    | 45972/88651 [00:00<00:00, 152546.74it/s] 71%|███████▏  | 63233/88651 [00:00<00:00, 158058.23it/s] 86%|████████▌ | 76173/88651 [00:00<00:00, 148208.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 156306.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15376/88651 [00:00<00:00, 153752.45it/s] 34%|███▍      | 30401/88651 [00:00<00:00, 152682.73it/s] 51%|█████▏    | 45525/88651 [00:00<00:00, 152244.88it/s] 69%|██████▉   | 61014/88651 [00:00<00:00, 153028.06it/s] 84%|████████▍ | 74418/88651 [00:00<00:00, 146786.86it/s]100%|██████████| 88651/88651 [00:00<00:00, 150883.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17901/88651 [00:00<00:00, 179004.62it/s] 41%|████      | 36483/88651 [00:00<00:00, 180995.45it/s] 62%|██████▏   | 55118/88651 [00:00<00:00, 182568.00it/s] 83%|████████▎ | 73694/88651 [00:00<00:00, 183513.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 185794.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17768/88651 [00:00<00:00, 177678.90it/s] 42%|████▏     | 36798/88651 [00:00<00:00, 181283.46it/s] 62%|██████▏   | 55269/88651 [00:00<00:00, 182294.96it/s] 83%|████████▎ | 73868/88651 [00:00<00:00, 183386.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 184960.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18560/88651 [00:00<00:00, 185593.10it/s] 43%|████▎     | 38073/88651 [00:00<00:00, 188354.75it/s] 59%|█████▊    | 51878/88651 [00:00<00:00, 169790.58it/s] 71%|███████   | 62846/88651 [00:00<00:00, 135499.28it/s] 83%|████████▎ | 73994/88651 [00:00<00:00, 127272.11it/s] 96%|█████████▋| 85454/88651 [00:00<00:00, 123184.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 135335.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14705/88651 [00:00<00:00, 147044.18it/s] 36%|███▌      | 31602/88651 [00:00<00:00, 152998.31it/s] 58%|█████▊    | 51297/88651 [00:00<00:00, 163975.63it/s] 81%|████████  | 71395/88651 [00:00<00:00, 173562.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 180374.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19159/88651 [00:00<00:00, 191581.50it/s] 43%|████▎     | 38096/88651 [00:00<00:00, 190911.46it/s] 65%|██████▌   | 57829/88651 [00:00<00:00, 192791.32it/s] 87%|████████▋ | 77435/88651 [00:00<00:00, 193755.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 193385.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18463/88651 [00:00<00:00, 184623.13it/s] 41%|████      | 36467/88651 [00:00<00:00, 183221.26it/s] 61%|██████    | 53861/88651 [00:00<00:00, 180333.51it/s] 81%|████████  | 71745/88651 [00:00<00:00, 179880.82it/s] 96%|█████████▌| 85309/88651 [00:00<00:00, 156899.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 164487.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12570/88651 [00:00<00:00, 125698.32it/s] 28%|██▊       | 24518/88651 [00:00<00:00, 123763.38it/s] 35%|███▍      | 30742/88651 [00:00<00:00, 91983.09it/s]  55%|█████▍    | 48589/88651 [00:00<00:00, 107629.74it/s] 66%|██████▌   | 58201/88651 [00:00<00:00, 85926.73it/s]  77%|███████▋  | 68595/88651 [00:00<00:00, 90638.42it/s] 88%|████████▊ | 77650/88651 [00:00<00:00, 89687.64it/s] 99%|█████████▉| 88000/88651 [00:00<00:00, 92206.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 99149.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12727/88651 [00:00<00:00, 123280.69it/s] 19%|█▊        | 16426/88651 [00:00<00:01, 70091.02it/s]  32%|███▏      | 28060/88651 [00:00<00:00, 79581.50it/s] 53%|█████▎    | 47387/88651 [00:00<00:00, 96634.33it/s] 65%|██████▍   | 57483/88651 [00:00<00:00, 97800.18it/s] 76%|███████▌  | 67519/88651 [00:00<00:00, 80991.27it/s] 91%|█████████ | 80519/88651 [00:00<00:00, 90176.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 102257.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18657/88651 [00:00<00:00, 186566.17it/s] 43%|████▎     | 38046/88651 [00:00<00:00, 188700.94it/s] 57%|█████▋    | 50243/88651 [00:00<00:00, 162095.62it/s] 79%|███████▊  | 69709/88651 [00:00<00:00, 170659.24it/s]100%|██████████| 88651/88651 [00:00<00:00, 178530.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19747/88651 [00:00<00:00, 197466.89it/s] 44%|████▍     | 39256/88651 [00:00<00:00, 196746.12it/s] 66%|██████▋   | 58804/88651 [00:00<00:00, 196361.80it/s] 88%|████████▊ | 77621/88651 [00:00<00:00, 193827.96it/s]100%|██████████| 88651/88651 [00:00<00:00, 193400.68it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18654/88651 [00:00<00:00, 186532.17it/s] 44%|████▎     | 38723/88651 [00:00<00:00, 190563.09it/s] 66%|██████▌   | 58318/88651 [00:00<00:00, 192145.44it/s] 87%|████████▋ | 77071/88651 [00:00<00:00, 190737.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 191933.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20445/88651 [00:00<00:00, 204445.81it/s] 45%|████▌     | 40108/88651 [00:00<00:00, 202033.98it/s] 68%|██████▊   | 60265/88651 [00:00<00:00, 201894.19it/s] 83%|████████▎ | 73889/88651 [00:00<00:00, 176388.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 178104.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13910/88651 [00:00<00:00, 139093.17it/s] 32%|███▏      | 27946/88651 [00:00<00:00, 139470.35it/s] 48%|████▊     | 42685/88651 [00:00<00:00, 141753.12it/s] 66%|██████▌   | 58250/88651 [00:00<00:00, 145652.25it/s] 81%|████████▏ | 72178/88651 [00:00<00:00, 143678.53it/s] 97%|█████████▋| 85779/88651 [00:00<00:00, 141287.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 144346.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19839/88651 [00:00<00:00, 198389.24it/s] 45%|████▌     | 40014/88651 [00:00<00:00, 199382.89it/s] 67%|██████▋   | 59781/88651 [00:00<00:00, 198865.40it/s] 89%|████████▉ | 79341/88651 [00:00<00:00, 197872.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 198659.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19199/88651 [00:00<00:00, 191981.94it/s] 43%|████▎     | 38195/88651 [00:00<00:00, 191367.46it/s] 65%|██████▌   | 57654/88651 [00:00<00:00, 192322.34it/s] 88%|████████▊ | 78004/88651 [00:00<00:00, 195544.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 195524.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7002/88651 [00:00<00:01, 70018.90it/s] 28%|██▊       | 25110/88651 [00:00<00:00, 85807.06it/s] 50%|████▉     | 44285/88651 [00:00<00:00, 102855.07it/s] 71%|███████   | 63077/88651 [00:00<00:00, 119017.28it/s] 92%|█████████▏| 81983/88651 [00:00<00:00, 133898.96it/s]100%|██████████| 88651/88651 [00:00<00:00, 166073.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18763/88651 [00:00<00:00, 187620.34it/s] 37%|███▋      | 32816/88651 [00:00<00:00, 170480.65it/s] 55%|█████▌    | 49001/88651 [00:00<00:00, 167795.38it/s] 77%|███████▋  | 68143/88651 [00:00<00:00, 174246.07it/s] 98%|█████████▊| 86809/88651 [00:00<00:00, 177792.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 173640.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17517/88651 [00:00<00:00, 175169.75it/s] 40%|████      | 35551/88651 [00:00<00:00, 176689.23it/s] 61%|██████    | 54244/88651 [00:00<00:00, 179639.01it/s] 82%|████████▏ | 73058/88651 [00:00<00:00, 182106.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 182382.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18583/88651 [00:00<00:00, 185826.63it/s] 42%|████▏     | 37068/88651 [00:00<00:00, 185529.68it/s] 63%|██████▎   | 55914/88651 [00:00<00:00, 186397.90it/s] 84%|████████▍ | 74872/88651 [00:00<00:00, 187339.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 188367.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14156/88651 [00:00<00:00, 141550.01it/s] 29%|██▉       | 26022/88651 [00:00<00:00, 133803.27it/s] 43%|████▎     | 37874/88651 [00:00<00:00, 128818.07it/s] 57%|█████▋    | 50227/88651 [00:00<00:00, 127183.25it/s] 67%|██████▋   | 59623/88651 [00:00<00:00, 102280.66it/s] 81%|████████  | 71687/88651 [00:00<00:00, 107172.05it/s] 97%|█████████▋| 85755/88651 [00:00<00:00, 115418.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 117572.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7885/88651 [00:00<00:01, 69991.46it/s] 15%|█▌        | 13385/88651 [00:00<00:01, 64700.25it/s] 21%|██▏       | 18917/88651 [00:00<00:01, 59042.28it/s] 37%|███▋      | 32411/88651 [00:00<00:00, 71027.12it/s] 44%|████▍     | 39018/88651 [00:00<00:00, 62397.63it/s] 55%|█████▌    | 49163/88651 [00:00<00:00, 70543.65it/s] 64%|██████▎   | 56465/88651 [00:00<00:00, 70241.65it/s] 84%|████████▍ | 74909/88651 [00:00<00:00, 86264.97it/s]100%|█████████▉| 88367/88651 [00:00<00:00, 96402.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 90316.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9397/88651 [00:00<00:00, 93968.52it/s] 23%|██▎       | 20827/88651 [00:00<00:00, 99264.78it/s] 46%|████▌     | 40632/88651 [00:00<00:00, 116731.50it/s] 68%|██████▊   | 60677/88651 [00:00<00:00, 133452.32it/s] 91%|█████████ | 80711/88651 [00:00<00:00, 148305.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 164579.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19640/88651 [00:00<00:00, 196392.70it/s] 45%|████▍     | 39610/88651 [00:00<00:00, 197371.15it/s] 67%|██████▋   | 58963/88651 [00:00<00:00, 196200.96it/s] 89%|████████▉ | 78745/88651 [00:00<00:00, 196683.80it/s]100%|██████████| 88651/88651 [00:00<00:00, 197160.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18260/88651 [00:00<00:00, 182594.51it/s] 37%|███▋      | 32943/88651 [00:00<00:00, 170158.56it/s] 55%|█████▍    | 48365/88651 [00:00<00:00, 165040.77it/s] 76%|███████▌  | 67136/88651 [00:00<00:00, 171244.04it/s] 96%|█████████▋| 85462/88651 [00:00<00:00, 174678.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 171412.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19127/88651 [00:00<00:00, 191261.06it/s] 37%|███▋      | 33220/88651 [00:00<00:00, 172750.68it/s] 51%|█████     | 45342/88651 [00:00<00:00, 153210.12it/s] 71%|███████   | 62700/88651 [00:00<00:00, 158799.36it/s] 91%|█████████ | 80815/88651 [00:00<00:00, 164900.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 163825.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14396/88651 [00:00<00:00, 143956.71it/s] 33%|███▎      | 28869/88651 [00:00<00:00, 143112.50it/s] 50%|████▉     | 44285/88651 [00:00<00:00, 146255.79it/s] 68%|██████▊   | 59910/88651 [00:00<00:00, 149116.41it/s] 85%|████████▌ | 75356/88651 [00:00<00:00, 150679.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 150285.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11704/88651 [00:00<00:00, 117036.21it/s] 31%|███▏      | 27852/88651 [00:00<00:00, 127568.06it/s] 49%|████▉     | 43452/88651 [00:00<00:00, 134945.03it/s] 63%|██████▎   | 55913/88651 [00:00<00:00, 131667.63it/s] 85%|████████▍ | 75124/88651 [00:00<00:00, 145389.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 156015.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19420/88651 [00:00<00:00, 194195.56it/s] 45%|████▌     | 40073/88651 [00:00<00:00, 197737.21it/s] 67%|██████▋   | 59491/88651 [00:00<00:00, 196655.78it/s] 89%|████████▉ | 78700/88651 [00:00<00:00, 195263.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 185421.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15018/88651 [00:00<00:00, 150174.41it/s] 34%|███▎      | 29718/88651 [00:00<00:00, 149205.88it/s] 50%|█████     | 44700/88651 [00:00<00:00, 149388.24it/s] 67%|██████▋   | 59377/88651 [00:00<00:00, 148590.69it/s] 85%|████████▌ | 75442/88651 [00:00<00:00, 152013.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 156540.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13988/88651 [00:00<00:00, 139872.46it/s] 33%|███▎      | 29280/88651 [00:00<00:00, 143545.10it/s] 50%|████▉     | 44058/88651 [00:00<00:00, 144787.78it/s] 67%|██████▋   | 59400/88651 [00:00<00:00, 147271.01it/s] 84%|████████▍ | 74687/88651 [00:00<00:00, 148904.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 149973.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14067/88651 [00:00<00:00, 140668.79it/s] 32%|███▏      | 28382/88651 [00:00<00:00, 141403.22it/s] 48%|████▊     | 42272/88651 [00:00<00:00, 140641.14it/s] 59%|█████▉    | 52181/88651 [00:00<00:00, 119447.36it/s] 69%|██████▉   | 61301/88651 [00:00<00:00, 99025.12it/s]  80%|████████  | 71348/88651 [00:00<00:00, 99454.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 121319.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15647/88651 [00:00<00:00, 156469.78it/s] 42%|████▏     | 37501/88651 [00:00<00:00, 171043.80it/s] 67%|██████▋   | 59030/88651 [00:00<00:00, 182280.84it/s] 92%|█████████▏| 81595/88651 [00:00<00:00, 193431.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 203427.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20496/88651 [00:00<00:00, 204956.77it/s] 46%|████▌     | 40357/88651 [00:00<00:00, 203008.69it/s] 68%|██████▊   | 60373/88651 [00:00<00:00, 202143.91it/s] 91%|█████████ | 80382/88651 [00:00<00:00, 201522.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 200117.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19835/88651 [00:00<00:00, 198348.77it/s] 35%|███▍      | 30795/88651 [00:00<00:00, 159581.76it/s] 54%|█████▍    | 47712/88651 [00:00<00:00, 162340.06it/s] 65%|██████▌   | 58005/88651 [00:00<00:00, 114340.61it/s] 80%|███████▉  | 70521/88651 [00:00<00:00, 117384.27it/s] 91%|█████████ | 80740/88651 [00:00<00:00, 93663.86it/s] 100%|██████████| 88651/88651 [00:00<00:00, 106228.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5120/88651 [00:00<00:01, 51197.85it/s] 16%|█▋        | 14477/88651 [00:00<00:01, 59246.37it/s] 32%|███▏      | 28489/88651 [00:00<00:00, 71653.05it/s] 42%|████▏     | 36970/88651 [00:00<00:00, 74876.83it/s] 50%|████▉     | 44325/88651 [00:00<00:00, 64848.73it/s] 67%|██████▋   | 59800/88651 [00:00<00:00, 78536.07it/s] 78%|███████▊  | 69084/88651 [00:00<00:00, 77324.28it/s] 91%|█████████ | 80605/88651 [00:00<00:00, 85785.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 89895.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18368/88651 [00:00<00:00, 183675.36it/s] 43%|████▎     | 38356/88651 [00:00<00:00, 188251.63it/s] 65%|██████▌   | 57913/88651 [00:00<00:00, 190386.51it/s] 86%|████████▌ | 76316/88651 [00:00<00:00, 188433.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 178411.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20793/88651 [00:00<00:00, 207925.74it/s] 50%|████▉     | 44273/88651 [00:00<00:00, 215317.32it/s] 71%|███████   | 62989/88651 [00:00<00:00, 206015.13it/s] 91%|█████████ | 80273/88651 [00:00<00:00, 194794.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 199522.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19831/88651 [00:00<00:00, 198305.93it/s] 46%|████▌     | 40702/88651 [00:00<00:00, 201314.14it/s] 68%|██████▊   | 60375/88651 [00:00<00:00, 199915.23it/s] 90%|████████▉ | 79760/88651 [00:00<00:00, 198054.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 199234.33it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16318/88651 [00:00<00:00, 163149.43it/s] 36%|███▋      | 32291/88651 [00:00<00:00, 162107.43it/s] 54%|█████▍    | 47896/88651 [00:00<00:00, 160240.73it/s] 72%|███████▏  | 64167/88651 [00:00<00:00, 160972.06it/s] 91%|█████████ | 80622/88651 [00:00<00:00, 162028.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 161245.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17949/88651 [00:00<00:00, 179486.32it/s] 43%|████▎     | 38232/88651 [00:00<00:00, 185904.86it/s] 66%|██████▌   | 58203/88651 [00:00<00:00, 189839.36it/s] 84%|████████▍ | 74282/88651 [00:00<00:00, 180077.84it/s] 99%|█████████▉| 88128/88651 [00:00<00:00, 158081.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 171979.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17522/88651 [00:00<00:00, 175217.24it/s] 42%|████▏     | 36960/88651 [00:00<00:00, 180555.87it/s] 65%|██████▍   | 57337/88651 [00:00<00:00, 186944.15it/s] 88%|████████▊ | 77721/88651 [00:00<00:00, 191709.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 195297.39it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 11968/88651 [00:00<00:00, 119676.69it/s] 27%|██▋       | 24267/88651 [00:00<00:00, 120649.87it/s] 45%|████▍     | 39480/88651 [00:00<00:00, 128634.49it/s] 62%|██████▏   | 54782/88651 [00:00<00:00, 135092.69it/s] 79%|███████▉  | 70075/88651 [00:00<00:00, 139989.16it/s] 96%|█████████▌| 85264/88651 [00:00<00:00, 143357.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 142405.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14846/88651 [00:00<00:00, 148453.42it/s] 34%|███▎      | 29906/88651 [00:00<00:00, 149090.14it/s] 51%|█████     | 44994/88651 [00:00<00:00, 149621.81it/s] 70%|███████   | 62263/88651 [00:00<00:00, 155866.07it/s] 92%|█████████▏| 81267/88651 [00:00<00:00, 164751.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 164909.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18903/88651 [00:00<00:00, 189023.42it/s] 40%|███▉      | 35425/88651 [00:00<00:00, 177562.07it/s] 51%|█████     | 45315/88651 [00:00<00:00, 143354.97it/s] 66%|██████▌   | 58314/88651 [00:00<00:00, 139064.32it/s] 80%|████████  | 71048/88651 [00:00<00:00, 135324.51it/s] 94%|█████████▍| 83694/88651 [00:00<00:00, 132535.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 137697.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19149/88651 [00:00<00:00, 191482.88it/s] 39%|███▉      | 34597/88651 [00:00<00:00, 178641.56it/s] 56%|█████▌    | 49659/88651 [00:00<00:00, 169196.35it/s] 77%|███████▋  | 68347/88651 [00:00<00:00, 174139.59it/s] 98%|█████████▊| 86940/88651 [00:00<00:00, 177515.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 173903.86it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14326/88651 [00:00<00:00, 143254.67it/s] 33%|███▎      | 29441/88651 [00:00<00:00, 145533.22it/s] 50%|█████     | 44667/88651 [00:00<00:00, 147485.29it/s] 68%|██████▊   | 59995/88651 [00:00<00:00, 149175.65it/s] 85%|████████▍ | 75110/88651 [00:00<00:00, 149761.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 150616.33it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14862/88651 [00:00<00:00, 148611.28it/s] 34%|███▍      | 29928/88651 [00:00<00:00, 149219.75it/s] 51%|█████     | 45173/88651 [00:00<00:00, 150173.45it/s] 70%|███████   | 62416/88651 [00:00<00:00, 156220.44it/s] 84%|████████▍ | 74534/88651 [00:00<00:00, 137799.11it/s] 97%|█████████▋| 86259/88651 [00:00<00:00, 113307.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 131971.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7972/88651 [00:00<00:01, 73969.26it/s] 22%|██▏       | 19843/88651 [00:00<00:00, 83398.47it/s] 32%|███▏      | 28376/88651 [00:00<00:00, 83968.47it/s] 49%|████▉     | 43569/88651 [00:00<00:00, 96982.99it/s] 65%|██████▍   | 57295/88651 [00:00<00:00, 106343.96it/s] 76%|███████▋  | 67612/88651 [00:00<00:00, 83258.58it/s]  86%|████████▋ | 76492/88651 [00:00<00:00, 65853.62it/s]100%|██████████| 88651/88651 [00:00<00:00, 89615.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12555/88651 [00:00<00:00, 125543.83it/s] 28%|██▊       | 24440/88651 [00:00<00:00, 123457.04it/s] 38%|███▊      | 33760/88651 [00:00<00:00, 112497.91it/s] 49%|████▊     | 43124/88651 [00:00<00:00, 106087.97it/s] 57%|█████▋    | 50930/88651 [00:00<00:00, 86090.19it/s]  71%|███████   | 63107/88651 [00:00<00:00, 94386.69it/s] 90%|████████▉ | 79765/88651 [00:00<00:00, 108491.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 113986.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18926/88651 [00:00<00:00, 189251.61it/s] 44%|████▍     | 38988/88651 [00:00<00:00, 192523.63it/s] 65%|██████▌   | 57828/88651 [00:00<00:00, 191267.63it/s] 86%|████████▋ | 76670/88651 [00:00<00:00, 190401.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 191426.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18731/88651 [00:00<00:00, 187301.25it/s] 40%|████      | 35837/88651 [00:00<00:00, 182112.41it/s] 55%|█████▌    | 49172/88651 [00:00<00:00, 164106.36it/s] 77%|███████▋  | 68033/88651 [00:00<00:00, 170761.20it/s] 98%|█████████▊| 86814/88651 [00:00<00:00, 175540.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 173796.73it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17952/88651 [00:00<00:00, 179514.61it/s] 41%|████      | 36459/88651 [00:00<00:00, 181144.80it/s] 59%|█████▊    | 51974/88651 [00:00<00:00, 172473.37it/s] 71%|███████   | 63154/88651 [00:00<00:00, 148270.27it/s] 90%|████████▉ | 79590/88651 [00:00<00:00, 152756.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 161335.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18583/88651 [00:00<00:00, 185826.63it/s] 42%|████▏     | 37431/88651 [00:00<00:00, 186612.84it/s] 64%|██████▎   | 56410/88651 [00:00<00:00, 187552.16it/s] 85%|████████▍ | 75104/88651 [00:00<00:00, 187367.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 187644.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19192/88651 [00:00<00:00, 191911.49it/s] 44%|████▍     | 39377/88651 [00:00<00:00, 194788.52it/s] 67%|██████▋   | 59680/88651 [00:00<00:00, 197188.53it/s] 90%|█████████ | 79868/88651 [00:00<00:00, 198570.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 192001.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14626/88651 [00:00<00:00, 146255.26it/s] 34%|███▎      | 29718/88651 [00:00<00:00, 147623.23it/s] 54%|█████▍    | 47865/88651 [00:00<00:00, 156370.99it/s] 76%|███████▌  | 67585/88651 [00:00<00:00, 166726.85it/s] 98%|█████████▊| 87269/88651 [00:00<00:00, 174744.88it/s]100%|██████████| 88651/88651 [00:00<00:00, 174762.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14346/88651 [00:00<00:00, 143459.45it/s] 26%|██▌       | 22827/88651 [00:00<00:00, 118807.59it/s] 42%|████▏     | 37338/88651 [00:00<00:00, 125639.05it/s] 59%|█████▉    | 52621/88651 [00:00<00:00, 132722.17it/s] 80%|████████  | 71260/88651 [00:00<00:00, 145269.21it/s]100%|██████████| 88651/88651 [00:00<00:00, 149819.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16632/88651 [00:00<00:00, 166319.76it/s] 41%|████      | 36459/88651 [00:00<00:00, 174768.63it/s] 64%|██████▎   | 56479/88651 [00:00<00:00, 181691.74it/s] 86%|████████▌ | 76188/88651 [00:00<00:00, 186049.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 190144.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12139/88651 [00:00<00:00, 121360.89it/s] 19%|█▉        | 17006/88651 [00:00<00:00, 83803.96it/s]  26%|██▋       | 23283/88651 [00:00<00:00, 76146.20it/s] 35%|███▌      | 31161/88651 [00:00<00:00, 76916.88it/s] 44%|████▍     | 39147/88651 [00:00<00:00, 77775.61it/s] 53%|█████▎    | 47121/88651 [00:00<00:00, 78352.29it/s] 72%|███████▏  | 63517/88651 [00:00<00:00, 92904.56it/s] 94%|█████████▎| 82930/88651 [00:00<00:00, 110132.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 106973.92it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10386/88651 [00:00<00:00, 103855.39it/s] 29%|██▉       | 25545/88651 [00:00<00:00, 114689.00it/s] 46%|████▌     | 40366/88651 [00:00<00:00, 123037.24it/s] 62%|██████▏   | 55171/88651 [00:00<00:00, 129604.26it/s] 81%|████████▏ | 72205/88651 [00:00<00:00, 139619.76it/s]100%|██████████| 88651/88651 [00:00<00:00, 151800.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15256/88651 [00:00<00:00, 152559.42it/s] 33%|███▎      | 28924/88651 [00:00<00:00, 147420.81it/s] 54%|█████▍    | 47723/88651 [00:00<00:00, 157625.49it/s] 76%|███████▌  | 67330/88651 [00:00<00:00, 167475.53it/s] 97%|█████████▋| 86371/88651 [00:00<00:00, 173751.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 173146.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17725/88651 [00:00<00:00, 177244.68it/s] 26%|██▋       | 23447/88651 [00:00<00:00, 106428.42it/s] 41%|████      | 35929/88651 [00:00<00:00, 110331.28it/s] 49%|████▉     | 43311/88651 [00:00<00:00, 92411.24it/s]  57%|█████▋    | 50489/88651 [00:00<00:00, 80164.90it/s] 78%|███████▊  | 69212/88651 [00:00<00:00, 96764.53it/s] 94%|█████████▎| 83032/88651 [00:00<00:00, 106327.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 114060.39it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5043/88651 [00:00<00:01, 49281.87it/s] 12%|█▏        | 10244/88651 [00:00<00:01, 50069.68it/s] 18%|█▊        | 16223/88651 [00:00<00:01, 52636.16it/s] 32%|███▏      | 28779/88651 [00:00<00:00, 63741.83it/s] 40%|███▉      | 35073/88651 [00:00<00:00, 62738.49it/s] 51%|█████▏    | 45588/88651 [00:00<00:00, 71374.47it/s] 65%|██████▌   | 57933/88651 [00:00<00:00, 81714.59it/s] 79%|███████▉  | 70364/88651 [00:00<00:00, 90837.42it/s] 91%|█████████ | 80321/88651 [00:00<00:00, 87390.84it/s]100%|██████████| 88651/88651 [00:01<00:00, 88337.25it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12352/88651 [00:00<00:00, 123516.29it/s] 29%|██▊       | 25383/88651 [00:00<00:00, 125478.18it/s] 47%|████▋     | 41596/88651 [00:00<00:00, 134606.22it/s] 69%|██████▉   | 60991/88651 [00:00<00:00, 148209.50it/s] 85%|████████▌ | 75714/88651 [00:00<00:00, 147912.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 152106.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9855/88651 [00:00<00:00, 98532.71it/s] 19%|█▉        | 17129/88651 [00:00<00:00, 89057.73it/s] 39%|███▉      | 34770/88651 [00:00<00:00, 104594.62it/s] 60%|█████▉    | 53169/88651 [00:00<00:00, 120147.65it/s] 82%|████████▏ | 72308/88651 [00:00<00:00, 135250.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 151868.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14519/88651 [00:00<00:00, 145182.87it/s] 34%|███▎      | 29821/88651 [00:00<00:00, 147445.70it/s] 49%|████▉     | 43855/88651 [00:00<00:00, 145236.81it/s] 64%|██████▍   | 56921/88651 [00:00<00:00, 140530.34it/s] 80%|████████  | 71197/88651 [00:00<00:00, 141191.73it/s]100%|█████████▉| 88485/88651 [00:00<00:00, 149407.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 147447.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16981/88651 [00:00<00:00, 169807.73it/s] 40%|███▉      | 35330/88651 [00:00<00:00, 173688.84it/s] 60%|██████    | 53481/88651 [00:00<00:00, 175960.97it/s] 74%|███████▍  | 66030/88651 [00:00<00:00, 157013.94it/s] 96%|█████████▌| 85215/88651 [00:00<00:00, 166058.78it/s]100%|██████████| 88651/88651 [00:00<00:00, 171339.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14350/88651 [00:00<00:00, 143494.32it/s] 33%|███▎      | 29577/88651 [00:00<00:00, 146016.78it/s] 51%|█████     | 44919/88651 [00:00<00:00, 148158.80it/s] 68%|██████▊   | 60423/88651 [00:00<00:00, 150156.33it/s] 83%|████████▎ | 73640/88651 [00:00<00:00, 144262.57it/s] 97%|█████████▋| 85957/88651 [00:00<00:00, 137213.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 144521.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20436/88651 [00:00<00:00, 204350.94it/s] 46%|████▌     | 40743/88651 [00:00<00:00, 203963.41it/s] 69%|██████▉   | 61214/88651 [00:00<00:00, 204186.73it/s] 91%|█████████ | 80768/88651 [00:00<00:00, 201510.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 201320.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19292/88651 [00:00<00:00, 192919.72it/s] 43%|████▎     | 38219/88651 [00:00<00:00, 191807.25it/s] 65%|██████▌   | 57745/88651 [00:00<00:00, 192828.20it/s] 87%|████████▋ | 77481/88651 [00:00<00:00, 194163.60it/s]100%|██████████| 88651/88651 [00:00<00:00, 193576.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15084/88651 [00:00<00:00, 150837.63it/s] 34%|███▍      | 30475/88651 [00:00<00:00, 151744.07it/s] 52%|█████▏    | 46039/88651 [00:00<00:00, 152890.11it/s] 63%|██████▎   | 56158/88651 [00:00<00:00, 130644.45it/s] 77%|███████▋  | 68696/88651 [00:00<00:00, 129016.84it/s] 95%|█████████▍| 83912/88651 [00:00<00:00, 135184.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 140453.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18909/88651 [00:00<00:00, 189089.28it/s] 44%|████▍     | 38821/88651 [00:00<00:00, 191989.22it/s] 66%|██████▌   | 58677/88651 [00:00<00:00, 193913.03it/s] 89%|████████▉ | 79317/88651 [00:00<00:00, 197494.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 199165.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12345/88651 [00:00<00:00, 123440.11it/s] 31%|███▏      | 27794/88651 [00:00<00:00, 131359.32it/s] 55%|█████▍    | 48383/88651 [00:00<00:00, 147362.30it/s] 78%|███████▊  | 68860/88651 [00:00<00:00, 160893.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 178954.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18835/88651 [00:00<00:00, 188347.49it/s] 43%|████▎     | 37929/88651 [00:00<00:00, 189114.66it/s] 66%|██████▌   | 58717/88651 [00:00<00:00, 194377.25it/s] 85%|████████▌ | 75469/88651 [00:00<00:00, 185454.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 180689.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█▏        | 10033/88651 [00:00<00:00, 100324.36it/s] 25%|██▍       | 22049/88651 [00:00<00:00, 105549.30it/s] 31%|███▏      | 27761/88651 [00:00<00:00, 69069.79it/s]  44%|████▍     | 39106/88651 [00:00<00:00, 78253.28it/s] 59%|█████▉    | 52161/88651 [00:00<00:00, 88941.63it/s] 78%|███████▊  | 69134/88651 [00:00<00:00, 103756.58it/s] 91%|█████████ | 80400/88651 [00:00<00:00, 81836.08it/s] 100%|██████████| 88651/88651 [00:00<00:00, 95037.83it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18442/88651 [00:00<00:00, 184417.54it/s] 27%|██▋       | 24018/88651 [00:00<00:00, 103515.98it/s] 33%|███▎      | 29426/88651 [00:00<00:00, 70213.65it/s]  41%|████      | 36326/88651 [00:00<00:00, 69843.85it/s] 59%|█████▉    | 52371/88651 [00:00<00:00, 84089.02it/s] 80%|███████▉  | 70700/88651 [00:00<00:00, 100388.63it/s] 93%|█████████▎| 82294/88651 [00:00<00:00, 89032.72it/s] 100%|██████████| 88651/88651 [00:00<00:00, 97631.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16586/88651 [00:00<00:00, 165859.76it/s] 33%|███▎      | 29456/88651 [00:00<00:00, 152636.94it/s] 53%|█████▎    | 47389/88651 [00:00<00:00, 159770.50it/s] 75%|███████▌  | 66875/88651 [00:00<00:00, 168893.21it/s] 98%|█████████▊| 87209/88651 [00:00<00:00, 177934.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 174717.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17927/88651 [00:00<00:00, 179268.46it/s] 41%|████      | 36138/88651 [00:00<00:00, 180109.33it/s] 62%|██████▏   | 54942/88651 [00:00<00:00, 182416.05it/s] 83%|████████▎ | 73682/88651 [00:00<00:00, 183880.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 184869.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16053/88651 [00:00<00:00, 160525.56it/s] 40%|███▉      | 35098/88651 [00:00<00:00, 168465.95it/s] 62%|██████▏   | 55203/88651 [00:00<00:00, 177073.76it/s] 84%|████████▍ | 74499/88651 [00:00<00:00, 181556.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 186963.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19438/88651 [00:00<00:00, 194375.55it/s] 44%|████▍     | 38807/88651 [00:00<00:00, 194168.46it/s] 66%|██████▌   | 58111/88651 [00:00<00:00, 193818.85it/s] 88%|████████▊ | 78413/88651 [00:00<00:00, 196488.43it/s]100%|██████████| 88651/88651 [00:00<00:00, 178436.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17947/88651 [00:00<00:00, 179466.32it/s] 41%|████      | 36343/88651 [00:00<00:00, 180790.24it/s] 63%|██████▎   | 55932/88651 [00:00<00:00, 185067.75it/s] 87%|████████▋ | 76710/88651 [00:00<00:00, 191341.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 193689.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18812/88651 [00:00<00:00, 188114.35it/s] 35%|███▌      | 31456/88651 [00:00<00:00, 164099.39it/s] 56%|█████▌    | 49690/88651 [00:00<00:00, 169175.56it/s] 79%|███████▉  | 69968/88651 [00:00<00:00, 178025.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 179430.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18672/88651 [00:00<00:00, 186713.95it/s] 43%|████▎     | 38525/88651 [00:00<00:00, 190107.40it/s] 66%|██████▌   | 58624/88651 [00:00<00:00, 193245.79it/s] 88%|████████▊ | 78286/88651 [00:00<00:00, 194243.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 196422.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12047/88651 [00:00<00:00, 120466.67it/s] 29%|██▉       | 25968/88651 [00:00<00:00, 125537.35it/s] 46%|████▌     | 40923/88651 [00:00<00:00, 131890.11it/s] 60%|██████    | 53534/88651 [00:00<00:00, 130099.22it/s] 74%|███████▍  | 65433/88651 [00:00<00:00, 126552.79it/s] 95%|█████████▍| 83936/88651 [00:00<00:00, 139807.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 141252.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16457/88651 [00:00<00:00, 164563.09it/s] 41%|████      | 36303/88651 [00:00<00:00, 173449.98it/s] 64%|██████▍   | 56645/88651 [00:00<00:00, 181470.43it/s] 84%|████████▍ | 74338/88651 [00:00<00:00, 180083.81it/s]100%|█████████▉| 88529/88651 [00:00<00:00, 163521.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 175022.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14733/88651 [00:00<00:00, 147324.17it/s] 34%|███▎      | 29772/88651 [00:00<00:00, 148230.02it/s] 47%|████▋     | 41333/88651 [00:00<00:00, 136657.22it/s] 60%|█████▉    | 52748/88651 [00:00<00:00, 129022.50it/s] 73%|███████▎  | 64391/88651 [00:00<00:00, 124966.23it/s] 87%|████████▋ | 76756/88651 [00:00<00:00, 124566.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 127814.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17482/88651 [00:00<00:00, 174818.92it/s] 42%|████▏     | 37443/88651 [00:00<00:00, 181583.97it/s] 65%|██████▍   | 57520/88651 [00:00<00:00, 186940.57it/s] 87%|████████▋ | 77470/88651 [00:00<00:00, 190536.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 191272.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19458/88651 [00:00<00:00, 194570.91it/s] 45%|████▍     | 39712/88651 [00:00<00:00, 196892.59it/s] 67%|██████▋   | 59754/88651 [00:00<00:00, 197937.35it/s] 85%|████████▌ | 75532/88651 [00:00<00:00, 183891.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 181610.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18200/88651 [00:00<00:00, 181998.00it/s] 35%|███▍      | 30904/88651 [00:00<00:00, 161091.29it/s] 57%|█████▋    | 50508/88651 [00:00<00:00, 170193.10it/s] 70%|██████▉   | 61733/88651 [00:00<00:00, 117278.07it/s] 81%|████████  | 71630/88651 [00:00<00:00, 92769.36it/s]  95%|█████████▍| 84094/88651 [00:00<00:00, 100475.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 116440.40it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17828/88651 [00:00<00:00, 178279.32it/s] 26%|██▌       | 23177/88651 [00:00<00:00, 83072.47it/s]  40%|████      | 35750/88651 [00:00<00:00, 92484.74it/s] 52%|█████▏    | 45917/88651 [00:00<00:00, 95059.64it/s] 62%|██████▏   | 54734/88651 [00:00<00:00, 92871.32it/s] 71%|███████   | 63026/88651 [00:00<00:00, 82722.30it/s] 89%|████████▊ | 78673/88651 [00:00<00:00, 96344.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 105210.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17597/88651 [00:00<00:00, 175967.23it/s] 27%|██▋       | 24021/88651 [00:00<00:00, 114202.50it/s] 33%|███▎      | 29600/88651 [00:00<00:00, 70668.14it/s]  47%|████▋     | 41757/88651 [00:00<00:00, 80819.41it/s] 61%|██████    | 53887/88651 [00:00<00:00, 89810.88it/s] 79%|███████▉  | 69931/88651 [00:00<00:00, 103476.12it/s]100%|██████████| 88651/88651 [00:00<00:00, 118439.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16821/88651 [00:00<00:00, 168203.34it/s] 38%|███▊      | 33633/88651 [00:00<00:00, 168176.94it/s] 53%|█████▎    | 46791/88651 [00:00<00:00, 155222.09it/s] 74%|███████▍  | 65829/88651 [00:00<00:00, 164325.36it/s] 96%|█████████▌| 84790/88651 [00:00<00:00, 171170.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 170353.98it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18954/88651 [00:00<00:00, 189536.11it/s] 44%|████▍     | 38850/88651 [00:00<00:00, 192266.65it/s] 67%|██████▋   | 59080/88651 [00:00<00:00, 195169.82it/s] 88%|████████▊ | 78338/88651 [00:00<00:00, 194382.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 195599.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18731/88651 [00:00<00:00, 187306.61it/s] 40%|████      | 35797/88651 [00:00<00:00, 181979.72it/s] 57%|█████▋    | 50362/88651 [00:00<00:00, 169310.23it/s] 74%|███████▍  | 65786/88651 [00:00<00:00, 164488.17it/s] 92%|█████████▏| 81159/88651 [00:00<00:00, 161103.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 160204.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7055/88651 [00:00<00:01, 70544.35it/s] 20%|█▉        | 17639/88651 [00:00<00:00, 78386.20it/s] 35%|███▌      | 31250/88651 [00:00<00:00, 89812.06it/s] 54%|█████▍    | 47701/88651 [00:00<00:00, 103975.14it/s] 75%|███████▌  | 66859/88651 [00:00<00:00, 120505.76it/s] 98%|█████████▊| 86772/88651 [00:00<00:00, 136697.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 145458.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15450/88651 [00:00<00:00, 154489.83it/s] 32%|███▏      | 28110/88651 [00:00<00:00, 144911.59it/s] 53%|█████▎    | 47086/88651 [00:00<00:00, 155969.91it/s] 74%|███████▍  | 65748/88651 [00:00<00:00, 164052.55it/s] 95%|█████████▍| 83976/88651 [00:00<00:00, 169125.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 168654.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17980/88651 [00:00<00:00, 179797.17it/s] 42%|████▏     | 37155/88651 [00:00<00:00, 183221.87it/s] 65%|██████▍   | 57194/88651 [00:00<00:00, 188054.70it/s] 87%|████████▋ | 77392/88651 [00:00<00:00, 192025.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 194379.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14071/88651 [00:00<00:00, 140705.10it/s] 33%|███▎      | 29220/88651 [00:00<00:00, 143774.78it/s] 49%|████▊     | 43136/88651 [00:00<00:00, 142357.73it/s] 60%|██████    | 53340/88651 [00:00<00:00, 127268.34it/s] 74%|███████▍  | 65871/88651 [00:00<00:00, 126672.28it/s] 93%|█████████▎| 82623/88651 [00:00<00:00, 136668.78it/s]100%|██████████| 88651/88651 [00:00<00:00, 139974.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18083/88651 [00:00<00:00, 180828.45it/s] 41%|████      | 36353/88651 [00:00<00:00, 181385.41it/s] 63%|██████▎   | 55883/88651 [00:00<00:00, 185346.60it/s] 85%|████████▍ | 75043/88651 [00:00<00:00, 187177.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 176059.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 19953/88651 [00:00<00:00, 199527.81it/s] 45%|████▍     | 39825/88651 [00:00<00:00, 199282.26it/s] 68%|██████▊   | 60076/88651 [00:00<00:00, 200236.81it/s] 91%|█████████ | 80472/88651 [00:00<00:00, 201336.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 201825.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11913/88651 [00:00<00:00, 119122.73it/s] 28%|██▊       | 24898/88651 [00:00<00:00, 122148.71it/s] 45%|████▌     | 40125/88651 [00:00<00:00, 129854.36it/s] 63%|██████▎   | 55690/88651 [00:00<00:00, 136647.84it/s] 82%|████████▏ | 73067/88651 [00:00<00:00, 146004.58it/s] 97%|█████████▋| 85982/88651 [00:00<00:00, 139900.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 136735.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11136/88651 [00:00<00:00, 111348.96it/s] 27%|██▋       | 23999/88651 [00:00<00:00, 116023.33it/s] 34%|███▍      | 30196/88651 [00:00<00:00, 83449.44it/s]  49%|████▉     | 43413/88651 [00:00<00:00, 93824.42it/s] 60%|██████    | 53264/88651 [00:00<00:00, 95182.57it/s] 74%|███████▍  | 65536/88651 [00:00<00:00, 102050.72it/s] 88%|████████▊ | 77979/88651 [00:00<00:00, 107134.61it/s]100%|█████████▉| 88406/88651 [00:00<00:00, 97017.63it/s] 100%|██████████| 88651/88651 [00:00<00:00, 103179.40it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6142/88651 [00:00<00:01, 58077.84it/s] 14%|█▍        | 12278/88651 [00:00<00:01, 58634.36it/s] 19%|█▉        | 16806/88651 [00:00<00:01, 53868.06it/s] 33%|███▎      | 29125/88651 [00:00<00:00, 64808.46it/s] 50%|████▉     | 43912/88651 [00:00<00:00, 77616.48it/s] 59%|█████▉    | 52522/88651 [00:00<00:00, 78711.57it/s] 71%|███████   | 62510/88651 [00:00<00:00, 84055.50it/s] 83%|████████▎ | 73504/88651 [00:00<00:00, 90442.20it/s] 96%|█████████▋| 85494/88651 [00:00<00:00, 97636.62it/s]100%|██████████| 88651/88651 [00:00<00:00, 93812.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19922/88651 [00:00<00:00, 199219.72it/s] 45%|████▌     | 40214/88651 [00:00<00:00, 200312.50it/s] 61%|██████    | 54183/88651 [00:00<00:00, 177235.30it/s] 78%|███████▊  | 69101/88651 [00:00<00:00, 167769.40it/s]100%|█████████▉| 88262/88651 [00:00<00:00, 174273.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 176431.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19195/88651 [00:00<00:00, 191948.35it/s] 43%|████▎     | 38496/88651 [00:00<00:00, 192264.03it/s] 65%|██████▍   | 57578/88651 [00:00<00:00, 191827.62it/s] 87%|████████▋ | 77167/88651 [00:00<00:00, 193025.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 193755.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17508/88651 [00:00<00:00, 175072.24it/s] 38%|███▊      | 34130/88651 [00:00<00:00, 172317.51it/s] 60%|█████▉    | 53173/88651 [00:00<00:00, 177376.89it/s] 82%|████████▏ | 72419/88651 [00:00<00:00, 181645.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 182977.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17773/88651 [00:00<00:00, 177726.36it/s] 41%|████      | 36083/88651 [00:00<00:00, 179302.95it/s] 61%|██████    | 53884/88651 [00:00<00:00, 178910.96it/s] 81%|████████▏ | 72160/88651 [00:00<00:00, 180046.94it/s] 97%|█████████▋| 85995/88651 [00:00<00:00, 165114.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 169491.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12593/88651 [00:00<00:00, 125920.81it/s] 33%|███▎      | 29359/88651 [00:00<00:00, 136083.41it/s] 54%|█████▍    | 48124/88651 [00:00<00:00, 148309.30it/s] 75%|███████▍  | 66366/88651 [00:00<00:00, 157122.91it/s] 96%|█████████▌| 84732/88651 [00:00<00:00, 164241.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 169873.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17815/88651 [00:00<00:00, 178147.62it/s] 36%|███▌      | 32077/88651 [00:00<00:00, 165757.33it/s] 55%|█████▍    | 48420/88651 [00:00<00:00, 165050.82it/s] 76%|███████▌  | 67293/88651 [00:00<00:00, 171505.76it/s] 97%|█████████▋| 86361/88651 [00:00<00:00, 176839.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 172962.58it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14393/88651 [00:00<00:00, 143929.45it/s] 32%|███▏      | 28569/88651 [00:00<00:00, 143271.41it/s] 49%|████▉     | 43615/88651 [00:00<00:00, 145353.14it/s] 66%|██████▋   | 58743/88651 [00:00<00:00, 147079.34it/s] 83%|████████▎ | 73153/88651 [00:00<00:00, 146172.41it/s] 99%|█████████▉| 88120/88651 [00:00<00:00, 147201.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 146811.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10725/88651 [00:00<00:00, 107246.78it/s] 24%|██▍       | 21444/88651 [00:00<00:00, 107226.78it/s] 43%|████▎     | 38194/88651 [00:00<00:00, 120202.15it/s] 65%|██████▌   | 57885/88651 [00:00<00:00, 136107.78it/s] 84%|████████▎ | 74103/88651 [00:00<00:00, 143001.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 152152.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14486/88651 [00:00<00:00, 144853.58it/s] 30%|███       | 26657/88651 [00:00<00:00, 137034.37it/s] 48%|████▊     | 42394/88651 [00:00<00:00, 142560.45it/s] 65%|██████▍   | 57486/88651 [00:00<00:00, 144968.97it/s] 85%|████████▌ | 75621/88651 [00:00<00:00, 154252.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 155248.08it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17894/88651 [00:00<00:00, 178935.05it/s] 36%|███▌      | 31676/88651 [00:00<00:00, 164228.84it/s] 45%|████▍     | 39568/88651 [00:00<00:00, 112487.99it/s] 55%|█████▍    | 48478/88651 [00:00<00:00, 104274.16it/s] 65%|██████▍   | 57470/88651 [00:00<00:00, 99507.72it/s]  82%|████████▏ | 73033/88651 [00:00<00:00, 111577.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 125611.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7472/88651 [00:00<00:01, 74714.73it/s] 23%|██▎       | 20633/88651 [00:00<00:00, 85847.20it/s] 37%|███▋      | 32990/88651 [00:00<00:00, 94500.44it/s] 51%|█████     | 45202/88651 [00:00<00:00, 100846.89it/s] 61%|██████    | 54088/88651 [00:00<00:00, 91694.28it/s]  79%|███████▉  | 70144/88651 [00:00<00:00, 105234.97it/s] 92%|█████████▏| 81591/88651 [00:00<00:00, 107843.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 113133.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9021/88651 [00:00<00:00, 90207.08it/s] 21%|██        | 18835/88651 [00:00<00:00, 92250.69it/s] 32%|███▏      | 28500/88651 [00:00<00:00, 93526.71it/s] 39%|███▉      | 34771/88651 [00:00<00:00, 73883.76it/s] 53%|█████▎    | 46838/88651 [00:00<00:00, 82978.22it/s] 66%|██████▌   | 58408/88651 [00:00<00:00, 90670.60it/s] 81%|████████  | 71938/88651 [00:00<00:00, 100627.56it/s] 93%|█████████▎| 82154/88651 [00:00<00:00, 90271.63it/s] 100%|██████████| 88651/88651 [00:00<00:00, 97029.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 11988/88651 [00:00<00:00, 119872.68it/s] 22%|██▏       | 19735/88651 [00:00<00:00, 102963.53it/s] 30%|██▉       | 26205/88651 [00:00<00:00, 86300.65it/s]  41%|████▏     | 36658/88651 [00:00<00:00, 91064.62it/s] 63%|██████▎   | 56055/88651 [00:00<00:00, 108301.45it/s] 85%|████████▌ | 75391/88651 [00:00<00:00, 124765.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 131993.40it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12239/88651 [00:00<00:00, 122380.49it/s] 34%|███▍      | 30533/88651 [00:00<00:00, 135873.67it/s] 56%|█████▌    | 49231/88651 [00:00<00:00, 148008.49it/s] 75%|███████▌  | 66904/88651 [00:00<00:00, 155593.25it/s] 96%|█████████▋| 85406/88651 [00:00<00:00, 163387.99it/s]100%|██████████| 88651/88651 [00:00<00:00, 171287.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15886/88651 [00:00<00:00, 158856.36it/s] 32%|███▏      | 28536/88651 [00:00<00:00, 147532.91it/s] 47%|████▋     | 41656/88651 [00:00<00:00, 142221.03it/s] 66%|██████▌   | 58675/88651 [00:00<00:00, 149594.48it/s] 88%|████████▊ | 77658/88651 [00:00<00:00, 159750.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 160062.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19417/88651 [00:00<00:00, 194164.17it/s] 44%|████▎     | 38736/88651 [00:00<00:00, 193869.41it/s] 65%|██████▌   | 57909/88651 [00:00<00:00, 193221.81it/s] 88%|████████▊ | 78128/88651 [00:00<00:00, 195825.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 196614.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18962/88651 [00:00<00:00, 189618.37it/s] 43%|████▎     | 38552/88651 [00:00<00:00, 191458.87it/s] 66%|██████▌   | 58251/88651 [00:00<00:00, 193082.53it/s] 87%|████████▋ | 77239/88651 [00:00<00:00, 192107.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 192459.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18407/88651 [00:00<00:00, 184061.40it/s] 41%|████      | 35913/88651 [00:00<00:00, 181261.82it/s] 55%|█████▌    | 48949/88651 [00:00<00:00, 162254.53it/s] 77%|███████▋  | 68667/88651 [00:00<00:00, 171358.93it/s] 99%|█████████▊| 87413/88651 [00:00<00:00, 175891.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 174371.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19410/88651 [00:00<00:00, 194096.02it/s] 46%|████▌     | 40656/88651 [00:00<00:00, 199262.26it/s] 70%|██████▉   | 61706/88651 [00:00<00:00, 202502.81it/s] 90%|█████████ | 80132/88651 [00:00<00:00, 196659.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 196452.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19157/88651 [00:00<00:00, 191567.90it/s] 45%|████▍     | 39523/88651 [00:00<00:00, 195041.01it/s] 67%|██████▋   | 59588/88651 [00:00<00:00, 196687.80it/s] 89%|████████▉ | 79195/88651 [00:00<00:00, 196499.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 197741.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19308/88651 [00:00<00:00, 193078.80it/s] 45%|████▍     | 39494/88651 [00:00<00:00, 195629.50it/s] 67%|██████▋   | 59148/88651 [00:00<00:00, 195899.16it/s] 89%|████████▉ | 79143/88651 [00:00<00:00, 197096.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 198624.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14816/88651 [00:00<00:00, 148153.08it/s] 34%|███▎      | 29806/88651 [00:00<00:00, 148670.59it/s] 51%|█████     | 44858/88651 [00:00<00:00, 149218.02it/s] 68%|██████▊   | 60150/88651 [00:00<00:00, 150307.58it/s] 85%|████████▌ | 75440/88651 [00:00<00:00, 151073.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 151198.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 4890/88651 [00:00<00:01, 48215.83it/s] 22%|██▏       | 19569/88651 [00:00<00:01, 60379.83it/s] 43%|████▎     | 38377/88651 [00:00<00:00, 75824.27it/s] 65%|██████▌   | 57824/88651 [00:00<00:00, 92811.39it/s] 88%|████████▊ | 77721/88651 [00:00<00:00, 110497.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 159184.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11886/88651 [00:00<00:00, 118852.75it/s] 25%|██▍       | 22039/88651 [00:00<00:00, 105648.04it/s] 38%|███▊      | 33546/88651 [00:00<00:00, 108306.52it/s] 50%|████▉     | 44302/88651 [00:00<00:00, 108079.88it/s] 62%|██████▏   | 55370/88651 [00:00<00:00, 108844.20it/s] 77%|███████▋  | 68185/88651 [00:00<00:00, 113995.92it/s] 93%|█████████▎| 82743/88651 [00:00<00:00, 121931.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 114337.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10892/88651 [00:00<00:00, 108919.58it/s] 28%|██▊       | 24587/88651 [00:00<00:00, 111744.67it/s] 34%|███▍      | 30443/88651 [00:00<00:00, 86424.33it/s]  51%|█████     | 44852/88651 [00:00<00:00, 98121.61it/s] 60%|██████    | 53211/88651 [00:00<00:00, 85600.90it/s] 80%|████████  | 71177/88651 [00:00<00:00, 101549.70it/s] 95%|█████████▍| 83863/88651 [00:00<00:00, 108014.72it/s]100%|██████████| 88651/88651 [00:00<00:00, 113295.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9824/88651 [00:00<00:00, 92427.33it/s] 17%|█▋        | 14943/88651 [00:00<00:00, 74436.81it/s] 32%|███▏      | 28307/88651 [00:00<00:00, 85845.48it/s] 52%|█████▏    | 46469/88651 [00:00<00:00, 101977.92it/s] 73%|███████▎  | 64929/88651 [00:00<00:00, 117793.04it/s] 93%|█████████▎| 82324/88651 [00:00<00:00, 130423.68it/s]100%|██████████| 88651/88651 [00:00<00:00, 139155.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13698/88651 [00:00<00:00, 136972.95it/s] 29%|██▉       | 25569/88651 [00:00<00:00, 130927.42it/s] 50%|████▉     | 44029/88651 [00:00<00:00, 143438.06it/s] 70%|██████▉   | 61710/88651 [00:00<00:00, 152046.80it/s] 91%|█████████ | 80603/88651 [00:00<00:00, 161504.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 163328.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18652/88651 [00:00<00:00, 186512.17it/s] 42%|████▏     | 37118/88651 [00:00<00:00, 185949.74it/s] 64%|██████▍   | 56908/88651 [00:00<00:00, 189379.63it/s] 86%|████████▌ | 75805/88651 [00:00<00:00, 189253.49it/s]100%|██████████| 88651/88651 [00:00<00:00, 189735.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18801/88651 [00:00<00:00, 188002.11it/s] 37%|███▋      | 32894/88651 [00:00<00:00, 170876.40it/s] 52%|█████▏    | 45936/88651 [00:00<00:00, 156326.74it/s] 65%|██████▍   | 57430/88651 [00:00<00:00, 141081.56it/s] 76%|███████▋  | 67623/88651 [00:00<00:00, 124939.17it/s] 97%|█████████▋| 85832/88651 [00:00<00:00, 137924.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 143373.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19274/88651 [00:00<00:00, 192733.75it/s] 44%|████▍     | 38791/88651 [00:00<00:00, 193455.25it/s] 65%|██████▌   | 57975/88651 [00:00<00:00, 192965.80it/s] 80%|███████▉  | 70662/88651 [00:00<00:00, 166350.46it/s] 94%|█████████▍| 83319/88651 [00:00<00:00, 145952.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 164029.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18565/88651 [00:00<00:00, 185644.42it/s] 42%|████▏     | 36955/88651 [00:00<00:00, 185114.89it/s] 63%|██████▎   | 55528/88651 [00:00<00:00, 185296.80it/s] 83%|████████▎ | 73265/88651 [00:00<00:00, 182843.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 182991.43it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13844/88651 [00:00<00:00, 138433.53it/s] 37%|███▋      | 32765/88651 [00:00<00:00, 150552.27it/s] 57%|█████▋    | 50740/88651 [00:00<00:00, 158262.64it/s] 79%|███████▉  | 69986/88651 [00:00<00:00, 167173.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 177491.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12165/88651 [00:00<00:00, 121644.32it/s] 30%|██▉       | 26320/88651 [00:00<00:00, 127001.26it/s] 50%|█████     | 44616/88651 [00:00<00:00, 139831.48it/s] 71%|███████   | 62894/88651 [00:00<00:00, 150435.10it/s] 92%|█████████▏| 81877/88651 [00:00<00:00, 160421.89it/s]100%|██████████| 88651/88651 [00:00<00:00, 165663.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13066/88651 [00:00<00:00, 130658.26it/s] 37%|███▋      | 32912/88651 [00:00<00:00, 145578.09it/s] 54%|█████▍    | 48013/88651 [00:00<00:00, 147164.99it/s] 72%|███████▏  | 63916/88651 [00:00<00:00, 150533.77it/s] 94%|█████████▍| 83187/88651 [00:00<00:00, 161110.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 167616.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19079/88651 [00:00<00:00, 190788.36it/s] 28%|██▊       | 25064/88651 [00:00<00:00, 115166.20it/s] 35%|███▍      | 30866/88651 [00:00<00:00, 84415.34it/s]  45%|████▌     | 39971/88651 [00:00<00:00, 86298.51it/s] 54%|█████▍    | 48005/88651 [00:00<00:00, 84418.81it/s] 63%|██████▎   | 56043/88651 [00:00<00:00, 83163.42it/s] 75%|███████▌  | 66692/88651 [00:00<00:00, 89011.37it/s] 91%|█████████ | 80533/88651 [00:00<00:00, 99684.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 103525.33it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17197/88651 [00:00<00:00, 171963.60it/s] 35%|███▍      | 30947/88651 [00:00<00:00, 159934.51it/s] 56%|█████▋    | 50003/88651 [00:00<00:00, 168034.43it/s] 78%|███████▊  | 68759/88651 [00:00<00:00, 173444.42it/s] 93%|█████████▎| 82178/88651 [00:00<00:00, 125203.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 132042.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7652/88651 [00:00<00:01, 76518.07it/s] 19%|█▉        | 16755/88651 [00:00<00:00, 80361.18it/s] 33%|███▎      | 29448/88651 [00:00<00:00, 90299.92it/s] 54%|█████▍    | 47770/88651 [00:00<00:00, 106503.24it/s] 65%|██████▌   | 58058/88651 [00:00<00:00, 82094.31it/s]  76%|███████▌  | 67543/88651 [00:00<00:00, 84825.27it/s] 86%|████████▋ | 76467/88651 [00:00<00:00, 77872.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 95534.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10243/88651 [00:00<00:00, 102429.12it/s] 24%|██▎       | 20869/88651 [00:00<00:00, 103548.59it/s] 42%|████▏     | 37026/88651 [00:00<00:00, 116050.43it/s] 51%|█████▏    | 45611/88651 [00:00<00:00, 75183.40it/s]  68%|██████▊   | 60335/88651 [00:00<00:00, 88120.05it/s] 90%|█████████ | 79971/88651 [00:00<00:00, 105578.98it/s]100%|██████████| 88651/88651 [00:00<00:00, 118097.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16899/88651 [00:00<00:00, 168982.51it/s] 41%|████      | 36001/88651 [00:00<00:00, 175038.80it/s] 58%|█████▊    | 51028/88651 [00:00<00:00, 166787.69it/s] 70%|██████▉   | 62032/88651 [00:00<00:00, 111309.42it/s] 92%|█████████▏| 81397/88651 [00:00<00:00, 127583.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 144534.25it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20529/88651 [00:00<00:00, 205287.26it/s] 44%|████▎     | 38568/88651 [00:00<00:00, 197122.13it/s] 58%|█████▊    | 51351/88651 [00:00<00:00, 169549.11it/s] 80%|████████  | 71065/88651 [00:00<00:00, 176977.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 180853.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18667/88651 [00:00<00:00, 186663.50it/s] 42%|████▏     | 37206/88651 [00:00<00:00, 186278.73it/s] 63%|██████▎   | 56093/88651 [00:00<00:00, 187047.48it/s] 84%|████████▍ | 74275/88651 [00:00<00:00, 185445.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 183378.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13604/88651 [00:00<00:00, 136039.48it/s] 30%|██▉       | 26162/88651 [00:00<00:00, 132644.58it/s] 42%|████▏     | 37307/88651 [00:00<00:00, 125481.97it/s] 56%|█████▋    | 50024/88651 [00:00<00:00, 125982.35it/s] 73%|███████▎  | 65136/88651 [00:00<00:00, 132598.62it/s] 92%|█████████▏| 81430/88651 [00:00<00:00, 140442.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 139630.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14784/88651 [00:00<00:00, 147838.03it/s] 31%|███▏      | 27743/88651 [00:00<00:00, 141845.04it/s] 44%|████▍     | 38912/88651 [00:00<00:00, 131215.19it/s] 61%|██████    | 53785/88651 [00:00<00:00, 136018.35it/s] 78%|███████▊  | 68928/88651 [00:00<00:00, 140299.71it/s] 95%|█████████▍| 84053/88651 [00:00<00:00, 143412.12it/s]100%|██████████| 88651/88651 [00:00<00:00, 141744.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19285/88651 [00:00<00:00, 192840.99it/s] 44%|████▍     | 38989/88651 [00:00<00:00, 194080.19it/s] 66%|██████▌   | 58184/88651 [00:00<00:00, 192445.00it/s] 87%|████████▋ | 77463/88651 [00:00<00:00, 192547.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 192530.45it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14076/88651 [00:00<00:00, 140751.07it/s] 33%|███▎      | 29253/88651 [00:00<00:00, 143882.80it/s] 49%|████▉     | 43881/88651 [00:00<00:00, 144593.30it/s] 66%|██████▌   | 58239/88651 [00:00<00:00, 144285.37it/s] 82%|████████▏ | 72875/88651 [00:00<00:00, 144898.72it/s] 98%|█████████▊| 86582/88651 [00:00<00:00, 142456.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 143752.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18584/88651 [00:00<00:00, 185830.87it/s] 42%|████▏     | 37615/88651 [00:00<00:00, 187151.71it/s] 64%|██████▍   | 56711/88651 [00:00<00:00, 188276.21it/s] 86%|████████▋ | 76493/88651 [00:00<00:00, 191039.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 191826.23it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20551/88651 [00:00<00:00, 205501.38it/s] 34%|███▎      | 29799/88651 [00:00<00:00, 149781.98it/s] 50%|█████     | 44458/88651 [00:00<00:00, 148809.38it/s] 72%|███████▏  | 64131/88651 [00:00<00:00, 160540.88it/s] 95%|█████████▍| 84157/88651 [00:00<00:00, 170695.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 169310.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20083/88651 [00:00<00:00, 200821.57it/s] 45%|████▌     | 40285/88651 [00:00<00:00, 201178.95it/s] 68%|██████▊   | 59931/88651 [00:00<00:00, 199737.36it/s] 90%|████████▉ | 79510/88651 [00:00<00:00, 198536.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 199263.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18032/88651 [00:00<00:00, 180318.88it/s] 37%|███▋      | 32507/88651 [00:00<00:00, 159489.20it/s] 51%|█████     | 45310/88651 [00:00<00:00, 148538.27it/s] 61%|██████▏   | 54440/88651 [00:00<00:00, 114682.03it/s] 76%|███████▋  | 67695/88651 [00:00<00:00, 119513.17it/s] 90%|█████████ | 79936/88651 [00:00<00:00, 120365.30it/s]100%|██████████| 88651/88651 [00:00<00:00, 127489.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12657/88651 [00:00<00:00, 117795.88it/s] 18%|█▊        | 16191/88651 [00:00<00:01, 67613.63it/s]  27%|██▋       | 24070/88651 [00:00<00:00, 68607.63it/s] 34%|███▍      | 30333/88651 [00:00<00:00, 66697.79it/s] 44%|████▍     | 39043/88651 [00:00<00:00, 71023.30it/s] 53%|█████▎    | 46982/88651 [00:00<00:00, 73342.07it/s] 67%|██████▋   | 59645/88651 [00:00<00:00, 80501.36it/s] 76%|███████▌  | 67489/88651 [00:00<00:00, 78636.96it/s] 85%|████████▌ | 75365/88651 [00:00<00:00, 78673.57it/s]100%|██████████| 88651/88651 [00:01<00:00, 86372.73it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6893/88651 [00:00<00:01, 66015.16it/s] 18%|█▊        | 15645/88651 [00:00<00:01, 71268.63it/s] 26%|██▌       | 22983/88651 [00:00<00:00, 69871.67it/s] 38%|███▊      | 33962/88651 [00:00<00:00, 78425.88it/s] 58%|█████▊    | 51047/88651 [00:00<00:00, 93618.28it/s] 72%|███████▏  | 63970/88651 [00:00<00:00, 102054.23it/s] 91%|█████████ | 80888/88651 [00:00<00:00, 115842.43it/s]100%|██████████| 88651/88651 [00:00<00:00, 117495.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16841/88651 [00:00<00:00, 168406.55it/s] 39%|███▉      | 34672/88651 [00:00<00:00, 171259.81it/s] 61%|██████    | 53711/88651 [00:00<00:00, 176014.65it/s] 84%|████████▍ | 74356/88651 [00:00<00:00, 184157.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 185661.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19656/88651 [00:00<00:00, 196556.44it/s] 45%|████▍     | 39513/88651 [00:00<00:00, 197153.18it/s] 68%|██████▊   | 59868/88651 [00:00<00:00, 199029.11it/s] 89%|████████▉ | 78858/88651 [00:00<00:00, 196198.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 196240.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18877/88651 [00:00<00:00, 188767.48it/s] 43%|████▎     | 38176/88651 [00:00<00:00, 190013.56it/s] 64%|██████▍   | 57016/88651 [00:00<00:00, 189518.33it/s] 87%|████████▋ | 76836/88651 [00:00<00:00, 192041.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 192089.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12043/88651 [00:00<00:00, 120420.64it/s] 23%|██▎       | 20736/88651 [00:00<00:00, 107942.84it/s] 39%|███▉      | 34764/88651 [00:00<00:00, 115961.69it/s] 61%|██████    | 53717/88651 [00:00<00:00, 131243.44it/s] 83%|████████▎ | 73247/88651 [00:00<00:00, 145565.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 152449.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17577/88651 [00:00<00:00, 175763.04it/s] 35%|███▍      | 30951/88651 [00:00<00:00, 160619.54it/s] 54%|█████▍    | 48227/88651 [00:00<00:00, 164076.25it/s] 76%|███████▌  | 67121/88651 [00:00<00:00, 170817.85it/s] 97%|█████████▋| 85563/88651 [00:00<00:00, 174680.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 171280.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17148/88651 [00:00<00:00, 171479.75it/s] 41%|████      | 35977/88651 [00:00<00:00, 176197.74it/s] 61%|██████    | 54095/88651 [00:00<00:00, 177661.21it/s] 82%|████████▏ | 73070/88651 [00:00<00:00, 181121.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 183509.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19124/88651 [00:00<00:00, 191234.26it/s] 45%|████▍     | 39479/88651 [00:00<00:00, 194768.72it/s] 67%|██████▋   | 59370/88651 [00:00<00:00, 195990.04it/s] 90%|████████▉ | 79589/88651 [00:00<00:00, 197808.13it/s]100%|██████████| 88651/88651 [00:00<00:00, 199370.32it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20147/88651 [00:00<00:00, 201459.14it/s] 46%|████▌     | 40427/88651 [00:00<00:00, 201856.72it/s] 68%|██████▊   | 60588/88651 [00:00<00:00, 201780.39it/s] 85%|████████▌ | 75578/88651 [00:00<00:00, 182796.48it/s]100%|██████████| 88651/88651 [00:00<00:00, 183615.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18082/88651 [00:00<00:00, 180811.55it/s] 30%|███       | 26724/88651 [00:00<00:00, 136182.00it/s] 47%|████▋     | 41535/88651 [00:00<00:00, 139553.43it/s] 64%|██████▎   | 56300/88651 [00:00<00:00, 141885.21it/s] 80%|████████  | 70977/88651 [00:00<00:00, 143315.90it/s] 97%|█████████▋| 85891/88651 [00:00<00:00, 145012.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 143149.66it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14690/88651 [00:00<00:00, 146897.69it/s] 34%|███▎      | 29770/88651 [00:00<00:00, 148046.01it/s] 45%|████▍     | 39853/88651 [00:00<00:00, 126784.01it/s] 55%|█████▌    | 49146/88651 [00:00<00:00, 114291.19it/s] 76%|███████▋  | 67766/88651 [00:00<00:00, 129267.01it/s] 98%|█████████▊| 86992/88651 [00:00<00:00, 143356.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 144189.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19424/88651 [00:00<00:00, 194230.46it/s] 44%|████▍     | 39249/88651 [00:00<00:00, 195416.95it/s] 67%|██████▋   | 59178/88651 [00:00<00:00, 196560.39it/s] 90%|████████▉ | 79661/88651 [00:00<00:00, 198968.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 199283.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13458/88651 [00:00<00:00, 134570.82it/s] 26%|██▌       | 22870/88651 [00:00<00:00, 119200.45it/s] 35%|███▍      | 30794/88651 [00:00<00:00, 101310.04it/s] 44%|████▍     | 39310/88651 [00:00<00:00, 95856.27it/s]  52%|█████▏    | 46209/88651 [00:00<00:00, 83383.10it/s] 64%|██████▎   | 56438/88651 [00:00<00:00, 88276.81it/s] 82%|████████▏ | 72719/88651 [00:00<00:00, 102329.54it/s] 96%|█████████▌| 85054/88651 [00:00<00:00, 107842.72it/s]100%|██████████| 88651/88651 [00:00<00:00, 105216.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9479/88651 [00:00<00:00, 92012.37it/s] 19%|█▉        | 17069/88651 [00:00<00:00, 84779.85it/s] 26%|██▌       | 23084/88651 [00:00<00:00, 74911.57it/s] 31%|███▏      | 27753/88651 [00:00<00:00, 63411.31it/s] 50%|████▉     | 43989/88651 [00:00<00:00, 77598.54it/s] 59%|█████▉    | 52107/88651 [00:00<00:00, 73295.11it/s] 72%|███████▏  | 63464/88651 [00:00<00:00, 82021.14it/s] 90%|█████████ | 79823/88651 [00:00<00:00, 96447.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 91947.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▌         | 4793/88651 [00:00<00:01, 46614.72it/s] 18%|█▊        | 16273/88651 [00:00<00:01, 56721.51it/s] 40%|████      | 35678/88651 [00:00<00:00, 72009.54it/s] 63%|██████▎   | 55604/88651 [00:00<00:00, 89074.62it/s] 84%|████████▍ | 74588/88651 [00:00<00:00, 105945.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 153971.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17591/88651 [00:00<00:00, 175903.46it/s] 31%|███       | 27611/88651 [00:00<00:00, 143397.36it/s] 50%|████▉     | 44109/88651 [00:00<00:00, 149252.83it/s] 66%|██████▌   | 58498/88651 [00:00<00:00, 147600.89it/s] 84%|████████▍ | 74630/88651 [00:00<00:00, 151463.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 154821.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19822/88651 [00:00<00:00, 198216.88it/s] 38%|███▊      | 33696/88651 [00:00<00:00, 175625.30it/s] 56%|█████▌    | 49370/88651 [00:00<00:00, 169496.75it/s] 77%|███████▋  | 67841/88651 [00:00<00:00, 173790.16it/s] 98%|█████████▊| 86622/88651 [00:00<00:00, 177771.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 173455.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16327/88651 [00:00<00:00, 163268.99it/s] 36%|███▌      | 31716/88651 [00:00<00:00, 160335.19it/s] 56%|█████▌    | 49330/88651 [00:00<00:00, 164769.96it/s] 76%|███████▌  | 67229/88651 [00:00<00:00, 168791.73it/s] 98%|█████████▊| 86740/88651 [00:00<00:00, 175909.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 173999.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14942/88651 [00:00<00:00, 149410.88it/s] 34%|███▍      | 30207/88651 [00:00<00:00, 150365.17it/s] 51%|█████     | 45351/88651 [00:00<00:00, 150684.23it/s] 70%|██████▉   | 61694/88651 [00:00<00:00, 154292.80it/s] 90%|█████████ | 80126/88651 [00:00<00:00, 162218.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 156421.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14840/88651 [00:00<00:00, 148397.66it/s] 33%|███▎      | 29357/88651 [00:00<00:00, 147413.58it/s] 50%|████▉     | 44085/88651 [00:00<00:00, 147372.89it/s] 66%|██████▌   | 58645/88651 [00:00<00:00, 146836.34it/s] 85%|████████▌ | 75493/88651 [00:00<00:00, 152720.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 153913.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17669/88651 [00:00<00:00, 176683.85it/s] 42%|████▏     | 37447/88651 [00:00<00:00, 182524.34it/s] 64%|██████▍   | 56786/88651 [00:00<00:00, 185652.79it/s] 83%|████████▎ | 73462/88651 [00:00<00:00, 179547.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 185832.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20098/88651 [00:00<00:00, 200973.00it/s] 46%|████▌     | 40919/88651 [00:00<00:00, 203088.51it/s] 70%|██████▉   | 61634/88651 [00:00<00:00, 204289.04it/s] 93%|█████████▎| 82762/88651 [00:00<00:00, 206336.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 206722.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19164/88651 [00:00<00:00, 191636.98it/s] 44%|████▍     | 39240/88651 [00:00<00:00, 194283.66it/s] 67%|██████▋   | 59291/88651 [00:00<00:00, 196109.54it/s] 90%|█████████ | 80199/88651 [00:00<00:00, 199827.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 201351.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12843/88651 [00:00<00:00, 128429.20it/s] 26%|██▋       | 23425/88651 [00:00<00:00, 120690.50it/s] 44%|████▍     | 38835/88651 [00:00<00:00, 129085.46it/s] 64%|██████▍   | 56714/88651 [00:00<00:00, 140830.86it/s] 86%|████████▌ | 75921/88651 [00:00<00:00, 153082.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 156468.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13102/88651 [00:00<00:00, 131015.75it/s] 27%|██▋       | 23657/88651 [00:00<00:00, 122172.60it/s] 43%|████▎     | 37922/88651 [00:00<00:00, 127669.46it/s] 58%|█████▊    | 51170/88651 [00:00<00:00, 129074.58it/s] 69%|██████▉   | 61040/88651 [00:00<00:00, 97657.55it/s]  79%|███████▉  | 70290/88651 [00:00<00:00, 96050.35it/s] 94%|█████████▎| 82958/88651 [00:00<00:00, 103560.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 111859.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15492/88651 [00:00<00:00, 154917.19it/s] 31%|███▏      | 27763/88651 [00:00<00:00, 137404.59it/s] 39%|███▊      | 34279/88651 [00:00<00:00, 74686.73it/s]  48%|████▊     | 42700/88651 [00:00<00:00, 74894.58it/s] 57%|█████▋    | 50481/88651 [00:00<00:00, 75745.24it/s] 64%|██████▍   | 57165/88651 [00:00<00:00, 68329.91it/s] 79%|███████▉  | 70208/88651 [00:00<00:00, 79715.04it/s] 91%|█████████ | 80812/88651 [00:00<00:00, 86128.89it/s]100%|██████████| 88651/88651 [00:01<00:00, 85837.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6738/88651 [00:00<00:01, 67375.25it/s] 13%|█▎        | 11521/88651 [00:00<00:01, 56326.90it/s] 19%|█▉        | 17198/88651 [00:00<00:01, 56458.11it/s] 34%|███▎      | 29842/88651 [00:00<00:00, 67699.06it/s] 54%|█████▎    | 47544/88651 [00:00<00:00, 83093.16it/s] 75%|███████▍  | 66265/88651 [00:00<00:00, 99732.70it/s] 91%|█████████ | 80639/88651 [00:00<00:00, 109817.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 114582.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20216/88651 [00:00<00:00, 202155.37it/s] 47%|████▋     | 41671/88651 [00:00<00:00, 205718.82it/s] 70%|███████   | 62199/88651 [00:00<00:00, 205586.45it/s] 93%|█████████▎| 82279/88651 [00:00<00:00, 204124.11it/s]100%|██████████| 88651/88651 [00:00<00:00, 204713.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18010/88651 [00:00<00:00, 180099.31it/s] 41%|████▏     | 36721/88651 [00:00<00:00, 182146.02it/s] 62%|██████▏   | 55389/88651 [00:00<00:00, 183480.65it/s] 83%|████████▎ | 73834/88651 [00:00<00:00, 183768.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 184864.04it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16398/88651 [00:00<00:00, 163972.73it/s] 39%|███▉      | 34795/88651 [00:00<00:00, 169499.43it/s] 58%|█████▊    | 51116/88651 [00:00<00:00, 167559.38it/s] 78%|███████▊  | 69342/88651 [00:00<00:00, 171712.59it/s] 96%|█████████▌| 85222/88651 [00:00<00:00, 167622.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 169983.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 12978/88651 [00:00<00:00, 125949.65it/s] 34%|███▍      | 30534/88651 [00:00<00:00, 137615.09it/s] 55%|█████▍    | 48624/88651 [00:00<00:00, 148257.25it/s] 76%|███████▌  | 67201/88651 [00:00<00:00, 157816.06it/s] 97%|█████████▋| 85816/88651 [00:00<00:00, 165365.91it/s]100%|██████████| 88651/88651 [00:00<00:00, 170872.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18326/88651 [00:00<00:00, 183253.62it/s] 35%|███▌      | 31182/88651 [00:00<00:00, 160734.76it/s] 54%|█████▍    | 47703/88651 [00:00<00:00, 162049.78it/s] 76%|███████▌  | 67147/88651 [00:00<00:00, 170572.38it/s] 99%|█████████▊| 87493/88651 [00:00<00:00, 179262.86it/s]100%|██████████| 88651/88651 [00:00<00:00, 174136.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14190/88651 [00:00<00:00, 141899.12it/s] 30%|███       | 26904/88651 [00:00<00:00, 137118.77it/s] 45%|████▍     | 39672/88651 [00:00<00:00, 134141.10it/s] 67%|██████▋   | 59707/88651 [00:00<00:00, 148902.68it/s] 90%|█████████ | 79797/88651 [00:00<00:00, 161436.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 161191.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18455/88651 [00:00<00:00, 184548.42it/s] 38%|███▊      | 33735/88651 [00:00<00:00, 173718.53it/s] 54%|█████▍    | 48177/88651 [00:00<00:00, 163750.84it/s] 77%|███████▋  | 68558/88651 [00:00<00:00, 174010.59it/s] 99%|█████████▉| 87829/88651 [00:00<00:00, 179227.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 175713.40it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14519/88651 [00:00<00:00, 145189.79it/s] 38%|███▊      | 33256/88651 [00:00<00:00, 155704.49it/s] 59%|█████▊    | 51974/88651 [00:00<00:00, 163976.54it/s] 78%|███████▊  | 69386/88651 [00:00<00:00, 163574.05it/s] 93%|█████████▎| 82445/88651 [00:00<00:00, 139302.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 156723.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19454/88651 [00:00<00:00, 194532.30it/s] 45%|████▍     | 39452/88651 [00:00<00:00, 196133.46it/s] 67%|██████▋   | 59248/88651 [00:00<00:00, 196674.99it/s] 88%|████████▊ | 78351/88651 [00:00<00:00, 194945.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 195940.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14441/88651 [00:00<00:00, 144397.40it/s] 28%|██▊       | 24781/88651 [00:00<00:00, 129046.94it/s] 41%|████▏     | 36572/88651 [00:00<00:00, 125490.12it/s] 61%|██████    | 53982/88651 [00:00<00:00, 136961.55it/s] 81%|████████  | 71906/88651 [00:00<00:00, 147391.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 150585.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14897/88651 [00:00<00:00, 148963.04it/s] 34%|███▍      | 30313/88651 [00:00<00:00, 150483.53it/s] 44%|████▎     | 38671/88651 [00:00<00:00, 121342.72it/s] 58%|█████▊    | 51678/88651 [00:00<00:00, 123834.76it/s] 80%|████████  | 71345/88651 [00:00<00:00, 139312.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 149930.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14042/88651 [00:00<00:00, 140410.09it/s] 28%|██▊       | 24599/88651 [00:00<00:00, 127757.09it/s] 35%|███▍      | 30864/88651 [00:00<00:00, 97390.34it/s]  46%|████▌     | 40362/88651 [00:00<00:00, 96652.55it/s] 59%|█████▉    | 52143/88651 [00:00<00:00, 101230.18it/s] 76%|███████▌  | 67050/88651 [00:00<00:00, 112013.61it/s] 98%|█████████▊| 86659/88651 [00:00<00:00, 128547.81it/s]100%|██████████| 88651/88651 [00:00<00:00, 123192.22it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▋         | 5577/88651 [00:00<00:01, 55766.33it/s] 13%|█▎        | 11786/88651 [00:00<00:01, 57523.17it/s] 22%|██▏       | 19389/88651 [00:00<00:01, 62054.04it/s] 36%|███▌      | 31840/88651 [00:00<00:00, 73045.86it/s] 49%|████▉     | 43815/88651 [00:00<00:00, 82723.82it/s] 66%|██████▌   | 58148/88651 [00:00<00:00, 94741.59it/s] 79%|███████▉  | 70297/88651 [00:00<00:00, 101439.94it/s] 93%|█████████▎| 82599/88651 [00:00<00:00, 107073.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 103966.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5015/88651 [00:00<00:01, 44592.26it/s] 20%|█▉        | 17428/88651 [00:00<00:01, 55203.93it/s] 33%|███▎      | 28971/88651 [00:00<00:00, 65448.08it/s] 55%|█████▍    | 48490/88651 [00:00<00:00, 81749.21it/s] 77%|███████▋  | 68247/88651 [00:00<00:00, 99194.08it/s] 92%|█████████▏| 81569/88651 [00:00<00:00, 106356.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 134597.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 19057/88651 [00:00<00:00, 190560.64it/s] 44%|████▍     | 39339/88651 [00:00<00:00, 194078.29it/s] 66%|██████▌   | 58160/88651 [00:00<00:00, 192278.25it/s] 87%|████████▋ | 77425/88651 [00:00<00:00, 192388.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 193819.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17964/88651 [00:00<00:00, 179636.75it/s] 40%|████      | 35710/88651 [00:00<00:00, 178976.51it/s] 54%|█████▍    | 48039/88651 [00:00<00:00, 157617.56it/s] 73%|███████▎  | 64305/88651 [00:00<00:00, 159097.09it/s] 94%|█████████▎| 83061/88651 [00:00<00:00, 166683.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 167362.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17706/88651 [00:00<00:00, 177052.99it/s] 41%|████      | 36521/88651 [00:00<00:00, 180238.52it/s] 56%|█████▌    | 49220/88651 [00:00<00:00, 160094.63it/s] 73%|███████▎  | 64413/88651 [00:00<00:00, 157552.51it/s] 90%|█████████ | 79826/88651 [00:00<00:00, 156507.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 159780.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16908/88651 [00:00<00:00, 169073.31it/s] 40%|███▉      | 35158/88651 [00:00<00:00, 172887.60it/s] 56%|█████▌    | 49408/88651 [00:00<00:00, 162490.66it/s] 74%|███████▎  | 65347/88651 [00:00<00:00, 161546.63it/s] 95%|█████████▌| 84478/88651 [00:00<00:00, 169454.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 169661.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15751/88651 [00:00<00:00, 157504.89it/s] 37%|███▋      | 32555/88651 [00:00<00:00, 160521.58it/s] 59%|█████▊    | 51908/88651 [00:00<00:00, 169176.21it/s] 81%|████████  | 71441/88651 [00:00<00:00, 176254.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 181157.34it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14419/88651 [00:00<00:00, 144189.11it/s] 31%|███▏      | 27778/88651 [00:00<00:00, 140836.18it/s] 39%|███▉      | 34814/88651 [00:00<00:00, 101562.23it/s] 61%|██████    | 54037/88651 [00:00<00:00, 118300.83it/s] 81%|████████  | 71507/88651 [00:00<00:00, 130986.43it/s]100%|██████████| 88651/88651 [00:00<00:00, 146070.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20232/88651 [00:00<00:00, 202306.69it/s] 45%|████▌     | 39937/88651 [00:00<00:00, 200692.78it/s] 60%|██████    | 53246/88651 [00:00<00:00, 174152.16it/s] 76%|███████▌  | 67526/88651 [00:00<00:00, 163388.49it/s] 98%|█████████▊| 87301/88651 [00:00<00:00, 172372.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 174756.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14002/88651 [00:00<00:00, 140015.46it/s] 37%|███▋      | 32376/88651 [00:00<00:00, 150779.00it/s] 58%|█████▊    | 51110/88651 [00:00<00:00, 160155.08it/s] 80%|████████  | 71272/88651 [00:00<00:00, 170684.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 180823.62it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19731/88651 [00:00<00:00, 197306.42it/s] 45%|████▌     | 40295/88651 [00:00<00:00, 199732.26it/s] 69%|██████▉   | 61119/88651 [00:00<00:00, 202210.18it/s] 92%|█████████▏| 81366/88651 [00:00<00:00, 202285.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 203107.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14825/88651 [00:00<00:00, 148245.19it/s] 29%|██▉       | 25755/88651 [00:00<00:00, 133927.70it/s] 48%|████▊     | 42420/88651 [00:00<00:00, 142309.82it/s] 69%|██████▉   | 61382/88651 [00:00<00:00, 153822.92it/s] 91%|█████████ | 80654/88651 [00:00<00:00, 163735.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 163834.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19617/88651 [00:00<00:00, 196161.77it/s] 38%|███▊      | 33469/88651 [00:00<00:00, 174390.44it/s] 49%|████▉     | 43713/88651 [00:00<00:00, 142152.45it/s] 59%|█████▉    | 52485/88651 [00:00<00:00, 109765.11it/s] 71%|███████   | 63155/88651 [00:00<00:00, 108283.16it/s] 81%|████████▏ | 72108/88651 [00:00<00:00, 83357.18it/s] 100%|██████████| 88651/88651 [00:00<00:00, 112278.20it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13758/88651 [00:00<00:00, 137059.25it/s] 21%|██        | 18247/88651 [00:00<00:00, 84814.39it/s]  27%|██▋       | 24367/88651 [00:00<00:00, 76015.01it/s] 33%|███▎      | 29161/88651 [00:00<00:01, 59061.20it/s] 46%|████▌     | 40765/88651 [00:00<00:00, 69263.78it/s] 53%|█████▎    | 47411/88651 [00:00<00:00, 59704.13it/s] 66%|██████▋   | 58890/88651 [00:00<00:00, 69744.53it/s] 85%|████████▌ | 75423/88651 [00:00<00:00, 84379.51it/s] 97%|█████████▋| 85737/88651 [00:00<00:00, 83358.75it/s]100%|██████████| 88651/88651 [00:01<00:00, 87244.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 6743/88651 [00:00<00:01, 67428.30it/s] 15%|█▍        | 13183/88651 [00:00<00:01, 66489.95it/s] 26%|██▌       | 23161/88651 [00:00<00:00, 72376.37it/s] 38%|███▊      | 33631/88651 [00:00<00:00, 79763.30it/s] 58%|█████▊    | 51337/88651 [00:00<00:00, 95507.46it/s] 79%|███████▉  | 70076/88651 [00:00<00:00, 111978.80it/s] 94%|█████████▍| 83678/88651 [00:00<00:00, 118246.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 118836.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18447/88651 [00:00<00:00, 184467.10it/s] 43%|████▎     | 37741/88651 [00:00<00:00, 186928.67it/s] 65%|██████▌   | 57722/88651 [00:00<00:00, 190614.51it/s] 87%|████████▋ | 77088/88651 [00:00<00:00, 191516.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 194244.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20509/88651 [00:00<00:00, 205086.77it/s] 45%|████▍     | 39530/88651 [00:00<00:00, 200384.15it/s] 67%|██████▋   | 59630/88651 [00:00<00:00, 200567.99it/s] 90%|████████▉ | 79360/88651 [00:00<00:00, 199573.89it/s]100%|██████████| 88651/88651 [00:00<00:00, 198378.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19886/88651 [00:00<00:00, 198854.97it/s] 45%|████▍     | 39625/88651 [00:00<00:00, 198411.55it/s] 65%|██████▌   | 58007/88651 [00:00<00:00, 193794.66it/s] 84%|████████▍ | 74767/88651 [00:00<00:00, 185114.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 178070.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19498/88651 [00:00<00:00, 194974.61it/s] 44%|████▍     | 38956/88651 [00:00<00:00, 194855.69it/s] 67%|██████▋   | 59421/88651 [00:00<00:00, 197694.03it/s] 89%|████████▉ | 79266/88651 [00:00<00:00, 197919.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 197463.05it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10639/88651 [00:00<00:00, 106387.06it/s] 28%|██▊       | 24757/88651 [00:00<00:00, 114878.09it/s] 45%|████▍     | 39744/88651 [00:00<00:00, 123530.48it/s] 62%|██████▏   | 54560/88651 [00:00<00:00, 130014.27it/s] 79%|███████▉  | 69977/88651 [00:00<00:00, 136426.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 148848.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16923/88651 [00:00<00:00, 169227.34it/s] 42%|████▏     | 37069/88651 [00:00<00:00, 177758.92it/s] 64%|██████▍   | 56713/88651 [00:00<00:00, 182976.83it/s] 86%|████████▋ | 76577/88651 [00:00<00:00, 187407.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 190680.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13473/88651 [00:00<00:00, 134727.56it/s] 33%|███▎      | 28896/88651 [00:00<00:00, 140039.48it/s] 48%|████▊     | 42519/88651 [00:00<00:00, 138872.77it/s] 58%|█████▊    | 51826/88651 [00:00<00:00, 109997.06it/s] 80%|███████▉  | 70516/88651 [00:00<00:00, 125486.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 143649.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14126/88651 [00:00<00:00, 141254.07it/s] 33%|███▎      | 29186/88651 [00:00<00:00, 143933.49it/s] 50%|████▉     | 44274/88651 [00:00<00:00, 145949.18it/s] 65%|██████▌   | 57626/88651 [00:00<00:00, 141982.37it/s] 77%|███████▋  | 68468/88651 [00:00<00:00, 126562.33it/s] 89%|████████▉ | 79087/88651 [00:00<00:00, 96026.79it/s] 100%|█████████▉| 88363/88651 [00:00<00:00, 90607.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 110514.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12421/88651 [00:00<00:00, 124207.75it/s] 34%|███▎      | 29761/88651 [00:00<00:00, 135761.65it/s] 57%|█████▋    | 50713/88651 [00:00<00:00, 151791.78it/s] 77%|███████▋  | 68350/88651 [00:00<00:00, 158414.12it/s]100%|█████████▉| 88626/88651 [00:00<00:00, 169535.79it/s]100%|██████████| 88651/88651 [00:00<00:00, 177098.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18860/88651 [00:00<00:00, 188594.33it/s] 43%|████▎     | 38017/88651 [00:00<00:00, 189476.13it/s] 65%|██████▌   | 58047/88651 [00:00<00:00, 192596.24it/s] 89%|████████▉ | 78939/88651 [00:00<00:00, 197216.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 198656.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13690/88651 [00:00<00:00, 136893.60it/s] 32%|███▏      | 28481/88651 [00:00<00:00, 140020.70it/s] 49%|████▉     | 43475/88651 [00:00<00:00, 142853.60it/s] 66%|██████▋   | 58930/88651 [00:00<00:00, 146168.69it/s] 79%|███████▉  | 70298/88651 [00:00<00:00, 127029.60it/s] 96%|█████████▌| 84769/88651 [00:00<00:00, 131862.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 136910.92it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5411/88651 [00:00<00:01, 54109.02it/s] 24%|██▍       | 21587/88651 [00:00<00:00, 67606.62it/s] 39%|███▉      | 34517/88651 [00:00<00:00, 78900.27it/s] 54%|█████▍    | 47792/88651 [00:00<00:00, 89832.16it/s] 65%|██████▍   | 57425/88651 [00:00<00:00, 87484.34it/s] 75%|███████▌  | 66642/88651 [00:00<00:00, 75454.91it/s] 84%|████████▍ | 74808/88651 [00:00<00:00, 68215.53it/s] 98%|█████████▊| 86723/88651 [00:00<00:00, 78145.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 94228.95it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12531/88651 [00:00<00:00, 125309.52it/s] 32%|███▏      | 28469/88651 [00:00<00:00, 133893.84it/s] 48%|████▊     | 42752/88651 [00:00<00:00, 136454.51it/s] 61%|██████    | 54204/88651 [00:00<00:00, 125213.11it/s] 72%|███████▏  | 63987/88651 [00:00<00:00, 101677.38it/s] 82%|████████▏ | 72955/88651 [00:00<00:00, 90890.11it/s]  92%|█████████▏| 81419/88651 [00:00<00:00, 80656.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 104068.18it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19244/88651 [00:00<00:00, 192430.55it/s] 40%|████      | 35696/88651 [00:00<00:00, 183107.61it/s] 56%|█████▌    | 49652/88651 [00:00<00:00, 167431.35it/s] 78%|███████▊  | 69286/88651 [00:00<00:00, 175167.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 177855.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17055/88651 [00:00<00:00, 170547.72it/s] 37%|███▋      | 33021/88651 [00:00<00:00, 167126.79it/s] 58%|█████▊    | 51771/88651 [00:00<00:00, 172758.14it/s] 74%|███████▍  | 65740/88651 [00:00<00:00, 161300.47it/s] 93%|█████████▎| 82239/88651 [00:00<00:00, 162389.36it/s]100%|██████████| 88651/88651 [00:00<00:00, 165988.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17132/88651 [00:00<00:00, 171318.94it/s] 40%|███▉      | 35040/88651 [00:00<00:00, 173574.66it/s] 61%|██████    | 53790/88651 [00:00<00:00, 177528.25it/s] 79%|███████▉  | 69940/88651 [00:00<00:00, 172393.98it/s] 96%|█████████▌| 85040/88651 [00:00<00:00, 165363.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 170797.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13533/88651 [00:00<00:00, 135326.26it/s] 36%|███▌      | 32075/88651 [00:00<00:00, 147259.96it/s] 58%|█████▊    | 51277/88651 [00:00<00:00, 158330.53it/s] 80%|████████  | 71194/88651 [00:00<00:00, 168707.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 182580.70it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16082/88651 [00:00<00:00, 160814.79it/s] 40%|███▉      | 35220/88651 [00:00<00:00, 168905.97it/s] 54%|█████▍    | 48051/88651 [00:00<00:00, 154260.20it/s] 76%|███████▌  | 67321/88651 [00:00<00:00, 164078.51it/s] 98%|█████████▊| 86987/88651 [00:00<00:00, 172657.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 174164.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18743/88651 [00:00<00:00, 187422.58it/s] 44%|████▎     | 38674/88651 [00:00<00:00, 190835.04it/s] 66%|██████▌   | 58724/88651 [00:00<00:00, 193633.57it/s] 86%|████████▌ | 75820/88651 [00:00<00:00, 186220.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 179605.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20062/88651 [00:00<00:00, 200610.15it/s] 46%|████▌     | 40753/88651 [00:00<00:00, 202456.67it/s] 69%|██████▉   | 61371/88651 [00:00<00:00, 203559.39it/s] 93%|█████████▎| 82166/88651 [00:00<00:00, 204856.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 206025.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18544/88651 [00:00<00:00, 185431.33it/s] 45%|████▍     | 39468/88651 [00:00<00:00, 191983.58it/s] 68%|██████▊   | 60101/88651 [00:00<00:00, 196070.95it/s] 90%|█████████ | 80071/88651 [00:00<00:00, 197145.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 198704.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10434/88651 [00:00<00:00, 104333.88it/s] 23%|██▎       | 20793/88651 [00:00<00:00, 104108.95it/s] 35%|███▌      | 31168/88651 [00:00<00:00, 104000.37it/s] 48%|████▊     | 42938/88651 [00:00<00:00, 107762.75it/s] 62%|██████▏   | 55195/88651 [00:00<00:00, 111813.35it/s] 77%|███████▋  | 67903/88651 [00:00<00:00, 115992.92it/s] 90%|█████████ | 80013/88651 [00:00<00:00, 117477.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 113792.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12667/88651 [00:00<00:00, 126664.68it/s] 27%|██▋       | 24279/88651 [00:00<00:00, 123304.91it/s] 41%|████      | 36069/88651 [00:00<00:00, 121629.18it/s] 54%|█████▍    | 48001/88651 [00:00<00:00, 120924.33it/s] 68%|██████▊   | 60095/88651 [00:00<00:00, 120927.59it/s] 81%|████████  | 71966/88651 [00:00<00:00, 120250.91it/s] 95%|█████████▍| 83968/88651 [00:00<00:00, 120179.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 119924.68it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8142/88651 [00:00<00:00, 81418.52it/s] 22%|██▏       | 19130/88651 [00:00<00:00, 88277.98it/s] 35%|███▍      | 30631/88651 [00:00<00:00, 94894.72it/s] 48%|████▊     | 42515/88651 [00:00<00:00, 100999.57it/s] 61%|██████▏   | 54496/88651 [00:00<00:00, 105991.61it/s] 75%|███████▍  | 66432/88651 [00:00<00:00, 109675.43it/s] 88%|████████▊ | 78298/88651 [00:00<00:00, 112223.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 112545.93it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 7985/88651 [00:00<00:01, 79844.94it/s] 15%|█▍        | 13276/88651 [00:00<00:01, 66196.30it/s] 23%|██▎       | 20332/88651 [00:00<00:01, 67446.63it/s] 36%|███▋      | 32332/88651 [00:00<00:00, 77647.41it/s] 50%|█████     | 44630/88651 [00:00<00:00, 87300.78it/s] 64%|██████▍   | 56678/88651 [00:00<00:00, 95162.45it/s] 76%|███████▌  | 67407/88651 [00:00<00:00, 98500.88it/s] 87%|████████▋ | 77227/88651 [00:00<00:00, 90145.33it/s] 97%|█████████▋| 86359/88651 [00:01<00:00, 75582.58it/s]100%|██████████| 88651/88651 [00:01<00:00, 86280.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12797/88651 [00:00<00:00, 127959.75it/s] 27%|██▋       | 24340/88651 [00:00<00:00, 123922.73it/s] 36%|███▌      | 31765/88651 [00:00<00:00, 101555.20it/s] 43%|████▎     | 38214/88651 [00:00<00:00, 78200.41it/s]  51%|█████     | 45237/88651 [00:00<00:00, 75623.97it/s] 58%|█████▊    | 51573/88651 [00:00<00:00, 57975.13it/s] 65%|██████▌   | 57632/88651 [00:00<00:00, 58735.31it/s] 71%|███████▏  | 63343/88651 [00:00<00:00, 50487.96it/s] 77%|███████▋  | 68482/88651 [00:01<00:00, 47533.66it/s] 84%|████████▍ | 74407/88651 [00:01<00:00, 50530.06it/s] 90%|████████▉ | 79581/88651 [00:01<00:00, 48038.24it/s] 97%|█████████▋| 86063/88651 [00:01<00:00, 52082.86it/s]100%|██████████| 88651/88651 [00:01<00:00, 60948.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11606/88651 [00:00<00:00, 116057.62it/s] 19%|█▊        | 16503/88651 [00:00<00:00, 80264.57it/s]  23%|██▎       | 20688/88651 [00:00<00:01, 60223.06it/s] 29%|██▉       | 25869/88651 [00:00<00:01, 57184.82it/s] 39%|███▉      | 34465/88651 [00:00<00:00, 63341.42it/s] 45%|████▌     | 39953/88651 [00:00<00:00, 50030.03it/s] 52%|█████▏    | 46492/88651 [00:00<00:00, 52917.54it/s] 61%|██████    | 54060/88651 [00:00<00:00, 58165.29it/s] 71%|███████   | 63158/88651 [00:00<00:00, 65222.37it/s] 79%|███████▉  | 70039/88651 [00:01<00:00, 58471.51it/s] 86%|████████▌ | 76269/88651 [00:01<00:00, 58351.61it/s] 95%|█████████▍| 83994/88651 [00:01<00:00, 62972.80it/s]100%|██████████| 88651/88651 [00:01<00:00, 64165.35it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7041/88651 [00:00<00:01, 70404.19it/s] 14%|█▍        | 12623/88651 [00:00<00:01, 65285.83it/s] 21%|██        | 18265/88651 [00:00<00:01, 62241.53it/s] 27%|██▋       | 23906/88651 [00:00<00:01, 60356.64it/s] 38%|███▊      | 33553/88651 [00:00<00:00, 67991.89it/s] 52%|█████▏    | 45727/88651 [00:00<00:00, 78371.61it/s] 64%|██████▎   | 56480/88651 [00:00<00:00, 85311.26it/s] 74%|███████▎  | 65195/88651 [00:00<00:00, 85259.30it/s] 85%|████████▍ | 75299/88651 [00:00<00:00, 89450.11it/s] 95%|█████████▌| 84389/88651 [00:01<00:00, 84878.00it/s]100%|██████████| 88651/88651 [00:01<00:00, 82096.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8521/88651 [00:00<00:00, 85208.46it/s] 23%|██▎       | 19958/88651 [00:00<00:00, 92265.63it/s] 29%|██▉       | 26022/88651 [00:00<00:00, 77883.24it/s] 36%|███▋      | 32338/88651 [00:00<00:00, 72792.47it/s] 44%|████▍     | 39094/88651 [00:00<00:00, 69167.93it/s] 51%|█████     | 45109/88651 [00:00<00:00, 64488.94it/s] 58%|█████▊    | 51522/88651 [00:00<00:00, 62658.03it/s] 67%|██████▋   | 59229/88651 [00:00<00:00, 66381.14it/s] 78%|███████▊  | 69149/88651 [00:00<00:00, 72596.40it/s] 88%|████████▊ | 77755/88651 [00:01<00:00, 76169.90it/s]100%|██████████| 88651/88651 [00:01<00:00, 78502.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7605/88651 [00:00<00:01, 76047.53it/s] 20%|██        | 18096/88651 [00:00<00:00, 82045.89it/s] 27%|██▋       | 24235/88651 [00:00<00:00, 74522.93it/s] 40%|███▉      | 35299/88651 [00:00<00:00, 82612.02it/s] 50%|████▉     | 43910/88651 [00:00<00:00, 83629.37it/s] 61%|██████▏   | 54315/88651 [00:00<00:00, 88774.00it/s] 71%|███████   | 62599/88651 [00:00<00:00, 83094.71it/s] 83%|████████▎ | 73213/88651 [00:00<00:00, 88622.65it/s] 92%|█████████▏| 81938/88651 [00:00<00:00, 81898.99it/s]100%|██████████| 88651/88651 [00:01<00:00, 88413.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11142/88651 [00:00<00:00, 111294.86it/s] 19%|█▉        | 17227/88651 [00:00<00:00, 80697.42it/s]  29%|██▊       | 25341/88651 [00:00<00:00, 80828.21it/s] 38%|███▊      | 33957/88651 [00:00<00:00, 79659.92it/s] 45%|████▌     | 40306/88651 [00:00<00:00, 74003.86it/s] 55%|█████▍    | 48323/88651 [00:00<00:00, 75751.32it/s] 67%|██████▋   | 59641/88651 [00:00<00:00, 84094.03it/s] 81%|████████  | 71496/88651 [00:00<00:00, 92126.87it/s] 94%|█████████▍| 83296/88651 [00:00<00:00, 98612.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 89752.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11349/88651 [00:00<00:00, 113486.59it/s] 21%|██▏       | 19024/88651 [00:00<00:00, 99235.66it/s]  34%|███▎      | 29861/88651 [00:00<00:00, 101809.49it/s] 45%|████▍     | 39466/88651 [00:00<00:00, 100008.12it/s] 57%|█████▋    | 50617/88651 [00:00<00:00, 103201.48it/s] 67%|██████▋   | 59511/88651 [00:00<00:00, 98464.64it/s]  80%|████████  | 71021/88651 [00:00<00:00, 102924.86it/s] 94%|█████████▍| 83193/88651 [00:00<00:00, 107924.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 103627.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11497/88651 [00:00<00:00, 105405.62it/s] 25%|██▍       | 22086/88651 [00:00<00:00, 105549.30it/s] 38%|███▊      | 33787/88651 [00:00<00:00, 108743.01it/s] 51%|█████     | 45087/88651 [00:00<00:00, 109984.92it/s] 64%|██████▍   | 56735/88651 [00:00<00:00, 111854.90it/s] 77%|███████▋  | 68364/88651 [00:00<00:00, 113148.58it/s] 90%|████████▉ | 79675/88651 [00:00<00:00, 113136.96it/s]100%|██████████| 88651/88651 [00:00<00:00, 111626.51it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 9098/88651 [00:00<00:00, 90977.92it/s] 23%|██▎       | 20647/88651 [00:00<00:00, 97162.92it/s] 35%|███▌      | 31192/88651 [00:00<00:00, 98846.44it/s] 47%|████▋     | 41268/88651 [00:00<00:00, 99412.30it/s] 60%|█████▉    | 52992/88651 [00:00<00:00, 104163.20it/s] 73%|███████▎  | 64875/88651 [00:00<00:00, 108166.52it/s] 84%|████████▍ | 74734/88651 [00:00<00:00, 103821.39it/s] 97%|█████████▋| 85972/88651 [00:00<00:00, 106247.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 106987.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9477/88651 [00:00<00:00, 82336.99it/s] 14%|█▍        | 12766/88651 [00:00<00:01, 54413.97it/s] 21%|██        | 18196/88651 [00:00<00:01, 54379.28it/s] 25%|██▌       | 22233/88651 [00:00<00:01, 49250.43it/s] 31%|███       | 27360/88651 [00:00<00:01, 48156.19it/s] 36%|███▌      | 31998/88651 [00:00<00:01, 47609.16it/s] 43%|████▎     | 38115/88651 [00:00<00:00, 51000.54it/s] 54%|█████▎    | 47574/88651 [00:00<00:00, 59181.65it/s] 67%|██████▋   | 59068/88651 [00:00<00:00, 69248.50it/s] 79%|███████▉  | 70416/88651 [00:01<00:00, 78416.67it/s] 93%|█████████▎| 82254/88651 [00:01<00:00, 87252.21it/s]100%|██████████| 88651/88651 [00:01<00:00, 74458.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6581/88651 [00:00<00:01, 65808.02it/s] 16%|█▌        | 13766/88651 [00:00<00:01, 67217.81it/s] 25%|██▌       | 22510/88651 [00:00<00:00, 72228.89it/s] 37%|███▋      | 32415/88651 [00:00<00:00, 78614.23it/s] 49%|████▉     | 43686/88651 [00:00<00:00, 86460.37it/s] 63%|██████▎   | 55483/88651 [00:00<00:00, 93990.64it/s] 76%|███████▌  | 67130/88651 [00:00<00:00, 99767.24it/s] 88%|████████▊ | 77851/88651 [00:00<00:00, 101412.59it/s] 99%|█████████▉| 87922/88651 [00:00<00:00, 84846.53it/s] 100%|██████████| 88651/88651 [00:00<00:00, 90988.19it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11947/88651 [00:00<00:00, 119466.98it/s] 27%|██▋       | 23811/88651 [00:00<00:00, 119216.34it/s] 40%|████      | 35698/88651 [00:00<00:00, 119110.30it/s] 54%|█████▎    | 47601/88651 [00:00<00:00, 119085.63it/s] 67%|██████▋   | 59101/88651 [00:00<00:00, 117828.78it/s] 80%|████████  | 71176/88651 [00:00<00:00, 118689.23it/s] 94%|█████████▍| 83242/88651 [00:00<00:00, 119272.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 119025.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11422/88651 [00:00<00:00, 114215.75it/s] 26%|██▌       | 22932/88651 [00:00<00:00, 114477.92it/s] 39%|███▊      | 34304/88651 [00:00<00:00, 114248.37it/s] 52%|█████▏    | 45811/88651 [00:00<00:00, 114491.29it/s] 65%|██████▍   | 57573/88651 [00:00<00:00, 115405.68it/s] 78%|███████▊  | 69495/88651 [00:00<00:00, 116522.18it/s] 91%|█████████ | 80655/88651 [00:00<00:00, 115000.31it/s]100%|██████████| 88651/88651 [00:00<00:00, 115468.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9652/88651 [00:00<00:00, 94263.02it/s] 24%|██▍       | 21373/88651 [00:00<00:00, 100143.81it/s] 31%|███▏      | 27797/88651 [00:00<00:00, 83124.47it/s]  38%|███▊      | 34103/88651 [00:00<00:00, 74796.39it/s] 46%|████▌     | 40495/88651 [00:00<00:00, 71163.50it/s] 59%|█████▊    | 51911/88651 [00:00<00:00, 80227.54it/s] 67%|██████▋   | 59502/88651 [00:00<00:00, 78379.08it/s] 76%|███████▌  | 67047/88651 [00:00<00:00, 74877.75it/s] 88%|████████▊ | 78271/88651 [00:00<00:00, 83183.93it/s]100%|██████████| 88651/88651 [00:01<00:00, 87439.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6573/88651 [00:00<00:01, 65727.09it/s] 19%|█▊        | 16402/88651 [00:00<00:00, 72980.31it/s] 26%|██▋       | 23420/88651 [00:00<00:00, 72116.52it/s] 32%|███▏      | 28773/88651 [00:00<00:00, 64518.89it/s] 42%|████▏     | 37622/88651 [00:00<00:00, 70225.17it/s] 56%|█████▋    | 49906/88651 [00:00<00:00, 80579.00it/s] 69%|██████▉   | 61316/88651 [00:00<00:00, 88366.08it/s] 82%|████████▏ | 72692/88651 [00:00<00:00, 94707.26it/s] 93%|█████████▎| 82453/88651 [00:01<00:00, 65228.70it/s]100%|██████████| 88651/88651 [00:01<00:00, 72482.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7587/88651 [00:00<00:01, 73219.76it/s] 12%|█▏        | 10894/88651 [00:00<00:01, 48981.31it/s] 22%|██▏       | 19294/88651 [00:00<00:01, 55982.90it/s] 30%|██▉       | 26474/88651 [00:00<00:01, 59943.68it/s] 41%|████      | 36432/88651 [00:00<00:00, 68071.89it/s] 54%|█████▍    | 48260/88651 [00:00<00:00, 78004.36it/s] 64%|██████▎   | 56388/88651 [00:00<00:00, 72605.19it/s] 72%|███████▏  | 63953/88651 [00:01<00:00, 50472.44it/s] 79%|███████▉  | 70390/88651 [00:01<00:00, 53967.27it/s] 92%|█████████▏| 81434/88651 [00:01<00:00, 63594.55it/s]100%|██████████| 88651/88651 [00:01<00:00, 63930.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11247/88651 [00:00<00:00, 112467.96it/s] 26%|██▋       | 23297/88651 [00:00<00:00, 114760.14it/s] 39%|███▉      | 34926/88651 [00:00<00:00, 115212.77it/s] 53%|█████▎    | 46556/88651 [00:00<00:00, 115534.78it/s] 66%|██████▌   | 58347/88651 [00:00<00:00, 116236.53it/s] 77%|███████▋  | 68086/88651 [00:00<00:00, 94604.35it/s]  89%|████████▉ | 79101/88651 [00:00<00:00, 98786.65it/s]100%|██████████| 88651/88651 [00:00<00:00, 106483.27it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11515/88651 [00:00<00:00, 115147.91it/s] 26%|██▌       | 22867/88651 [00:00<00:00, 114653.12it/s] 38%|███▊      | 33502/88651 [00:00<00:00, 112027.51it/s] 51%|█████     | 44980/88651 [00:00<00:00, 112838.14it/s] 64%|██████▍   | 56757/88651 [00:00<00:00, 114272.93it/s] 75%|███████▌  | 66795/88651 [00:00<00:00, 108580.33it/s] 86%|████████▌ | 76367/88651 [00:00<00:00, 79916.00it/s]  95%|█████████▌| 84551/88651 [00:00<00:00, 78375.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 94092.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7006/88651 [00:00<00:01, 70059.57it/s] 21%|██        | 18408/88651 [00:00<00:00, 79222.15it/s] 33%|███▎      | 29014/88651 [00:00<00:00, 85730.03it/s] 46%|████▌     | 40623/88651 [00:00<00:00, 92033.23it/s] 55%|█████▍    | 48601/88651 [00:00<00:00, 87978.17it/s] 68%|██████▊   | 60642/88651 [00:00<00:00, 95711.40it/s] 81%|████████  | 71694/88651 [00:00<00:00, 99716.85it/s] 93%|█████████▎| 82120/88651 [00:00<00:00, 98748.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 99652.25it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10939/88651 [00:00<00:00, 109387.76it/s] 26%|██▌       | 22686/88651 [00:00<00:00, 111691.70it/s] 39%|███▊      | 34287/88651 [00:00<00:00, 112950.49it/s] 52%|█████▏    | 45818/88651 [00:00<00:00, 113646.65it/s] 65%|██████▍   | 57427/88651 [00:00<00:00, 114368.10it/s] 78%|███████▊  | 68809/88651 [00:00<00:00, 114202.16it/s] 91%|█████████ | 80432/88651 [00:00<00:00, 114801.29it/s]100%|██████████| 88651/88651 [00:00<00:00, 115078.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10789/88651 [00:00<00:00, 102918.99it/s] 24%|██▍       | 21249/88651 [00:00<00:00, 103414.84it/s] 37%|███▋      | 32872/88651 [00:00<00:00, 106951.14it/s] 50%|█████     | 44686/88651 [00:00<00:00, 110076.44it/s] 64%|██████▍   | 56520/88651 [00:00<00:00, 112430.39it/s] 77%|███████▋  | 68417/88651 [00:00<00:00, 114313.66it/s] 91%|█████████ | 80305/88651 [00:00<00:00, 115646.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 114225.11it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7193/88651 [00:00<00:01, 67000.14it/s] 19%|█▉        | 16956/88651 [00:00<00:00, 73960.54it/s] 32%|███▏      | 28608/88651 [00:00<00:00, 83061.41it/s] 43%|████▎     | 38236/88651 [00:00<00:00, 86627.46it/s] 52%|█████▏    | 45696/88651 [00:00<00:00, 78632.95it/s] 64%|██████▍   | 56610/88651 [00:00<00:00, 85257.72it/s] 76%|███████▌  | 67249/88651 [00:00<00:00, 90658.60it/s] 88%|████████▊ | 78136/88651 [00:00<00:00, 95447.08it/s] 99%|█████████▉| 87734/88651 [00:00<00:00, 95604.59it/s]100%|██████████| 88651/88651 [00:00<00:00, 94918.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11082/88651 [00:00<00:00, 110816.14it/s] 25%|██▍       | 22013/88651 [00:00<00:00, 110357.60it/s] 35%|███▌      | 31378/88651 [00:00<00:00, 104749.02it/s] 48%|████▊     | 42685/88651 [00:00<00:00, 107112.54it/s] 61%|██████▏   | 54318/88651 [00:00<00:00, 109719.00it/s] 72%|███████▏  | 63482/88651 [00:00<00:00, 97053.97it/s]  81%|████████▏ | 72191/88651 [00:00<00:00, 90248.59it/s] 95%|█████████▍| 83855/88651 [00:00<00:00, 96819.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 101601.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11196/88651 [00:00<00:00, 111957.44it/s] 20%|█▉        | 17458/88651 [00:00<00:00, 90553.21it/s]  29%|██▉       | 25513/88651 [00:00<00:00, 87054.99it/s] 36%|███▋      | 32234/88651 [00:00<00:00, 79969.09it/s] 44%|████▍     | 39447/88651 [00:00<00:00, 77443.71it/s] 51%|█████▏    | 45647/88651 [00:00<00:00, 69977.54it/s] 59%|█████▉    | 52420/88651 [00:00<00:00, 69287.13it/s] 73%|███████▎  | 64385/88651 [00:00<00:00, 79300.45it/s] 83%|████████▎ | 73890/88651 [00:00<00:00, 82755.15it/s] 93%|█████████▎| 82239/88651 [00:01<00:00, 62644.71it/s]100%|██████████| 88651/88651 [00:01<00:00, 74492.59it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8404/88651 [00:00<00:00, 84038.28it/s] 22%|██▏       | 19151/88651 [00:00<00:00, 89919.77it/s] 34%|███▍      | 29939/88651 [00:00<00:00, 94645.57it/s] 43%|████▎     | 38305/88651 [00:00<00:00, 91056.06it/s] 55%|█████▌    | 48955/88651 [00:00<00:00, 95196.65it/s] 69%|██████▉   | 61165/88651 [00:00<00:00, 101933.93it/s] 83%|████████▎ | 73147/88651 [00:00<00:00, 106710.97it/s] 96%|█████████▋| 85340/88651 [00:00<00:00, 110860.18it/s]100%|██████████| 88651/88651 [00:00<00:00, 107007.10it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8133/88651 [00:00<00:01, 78583.78it/s] 22%|██▏       | 19698/88651 [00:00<00:00, 86942.01it/s] 35%|███▌      | 31136/88651 [00:00<00:00, 93683.15it/s] 48%|████▊     | 42334/88651 [00:00<00:00, 98511.68it/s] 58%|█████▊    | 51195/88651 [00:00<00:00, 95315.14it/s] 70%|██████▉   | 61878/88651 [00:00<00:00, 98499.88it/s] 80%|████████  | 70996/88651 [00:00<00:00, 82436.74it/s] 90%|████████▉ | 79591/88651 [00:00<00:00, 83460.03it/s] 99%|█████████▉| 87892/88651 [00:00<00:00, 82650.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 91768.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11588/88651 [00:00<00:00, 115875.69it/s] 26%|██▋       | 23409/88651 [00:00<00:00, 116564.06it/s] 40%|███▉      | 35306/88651 [00:00<00:00, 117275.35it/s] 53%|█████▎    | 47359/88651 [00:00<00:00, 118232.92it/s] 67%|██████▋   | 59339/88651 [00:00<00:00, 118698.42it/s] 81%|████████  | 71365/88651 [00:00<00:00, 119160.71it/s] 94%|█████████▍| 83279/88651 [00:00<00:00, 119152.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 118977.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11343/88651 [00:00<00:00, 113428.49it/s] 25%|██▌       | 22468/88651 [00:00<00:00, 108819.38it/s] 32%|███▏      | 28528/88651 [00:00<00:00, 86499.63it/s]  41%|████      | 36111/88651 [00:00<00:00, 82993.48it/s] 49%|████▉     | 43806/88651 [00:00<00:00, 79408.47it/s] 61%|██████    | 54182/88651 [00:00<00:00, 85421.67it/s] 75%|███████▌  | 66747/88651 [00:00<00:00, 94497.64it/s] 96%|█████████▌| 85052/88651 [00:00<00:00, 110539.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 105259.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12226/88651 [00:00<00:00, 122255.74it/s] 34%|███▍      | 30402/88651 [00:00<00:00, 135569.98it/s] 53%|█████▎    | 47335/88651 [00:00<00:00, 144193.12it/s] 69%|██████▊   | 60745/88651 [00:00<00:00, 141006.68it/s] 90%|████████▉ | 79371/88651 [00:00<00:00, 152090.89it/s]100%|██████████| 88651/88651 [00:00<00:00, 161288.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18187/88651 [00:00<00:00, 181865.84it/s] 42%|████▏     | 37654/88651 [00:00<00:00, 185523.18it/s] 57%|█████▋    | 50693/88651 [00:00<00:00, 164636.01it/s] 72%|███████▏  | 63500/88651 [00:00<00:00, 151643.33it/s] 91%|█████████ | 80683/88651 [00:00<00:00, 157182.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 159091.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14529/88651 [00:00<00:00, 145287.71it/s] 22%|██▏       | 19378/88651 [00:00<00:00, 90868.31it/s]  34%|███▍      | 30308/88651 [00:00<00:00, 95709.92it/s] 41%|████▏     | 36741/88651 [00:00<00:00, 78938.23it/s] 52%|█████▏    | 45684/88651 [00:00<00:00, 81816.47it/s] 59%|█████▉    | 52696/88651 [00:00<00:00, 77836.38it/s] 75%|███████▌  | 66825/88651 [00:00<00:00, 89954.91it/s] 90%|████████▉ | 79365/88651 [00:00<00:00, 98287.98it/s]100%|██████████| 88651/88651 [00:00<00:00, 100871.92it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13364/88651 [00:00<00:00, 122823.96it/s] 20%|█▉        | 17611/88651 [00:00<00:00, 78007.48it/s]  24%|██▍       | 21455/88651 [00:00<00:01, 57716.02it/s] 33%|███▎      | 28818/88651 [00:00<00:00, 60886.21it/s] 43%|████▎     | 37696/88651 [00:00<00:00, 67221.86it/s] 56%|█████▋    | 49940/88651 [00:00<00:00, 76991.68it/s] 65%|██████▍   | 57619/88651 [00:00<00:00, 76537.47it/s] 84%|████████▍ | 74811/88651 [00:00<00:00, 91819.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 97684.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 19026/88651 [00:00<00:00, 190250.66it/s] 37%|███▋      | 33211/88651 [00:00<00:00, 172580.85it/s] 56%|█████▌    | 49311/88651 [00:00<00:00, 168933.76it/s] 76%|███████▋  | 67781/88651 [00:00<00:00, 173373.04it/s] 97%|█████████▋| 86218/88651 [00:00<00:00, 176531.44it/s]100%|██████████| 88651/88651 [00:00<00:00, 172197.46it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18224/88651 [00:00<00:00, 182233.66it/s] 42%|████▏     | 37576/88651 [00:00<00:00, 185478.67it/s] 64%|██████▍   | 56782/88651 [00:00<00:00, 187402.91it/s] 83%|████████▎ | 73197/88651 [00:00<00:00, 179762.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 182750.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14413/88651 [00:00<00:00, 144122.58it/s] 33%|███▎      | 29060/88651 [00:00<00:00, 144818.19it/s] 50%|████▉     | 44257/88651 [00:00<00:00, 146889.75it/s] 67%|██████▋   | 59760/88651 [00:00<00:00, 149238.51it/s] 85%|████████▍ | 75137/88651 [00:00<00:00, 150569.07it/s]100%|██████████| 88651/88651 [00:00<00:00, 151733.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20235/88651 [00:00<00:00, 202341.51it/s] 45%|████▍     | 39627/88651 [00:00<00:00, 199736.80it/s] 66%|██████▌   | 58087/88651 [00:00<00:00, 194941.13it/s] 80%|███████▉  | 70672/88651 [00:00<00:00, 140055.09it/s] 95%|█████████▌| 84230/88651 [00:00<00:00, 138680.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 154353.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18930/88651 [00:00<00:00, 189293.41it/s] 45%|████▌     | 40329/88651 [00:00<00:00, 196080.62it/s] 67%|██████▋   | 59679/88651 [00:00<00:00, 195296.90it/s] 86%|████████▌ | 76001/88651 [00:00<00:00, 184422.72it/s]100%|██████████| 88651/88651 [00:00<00:00, 182612.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14523/88651 [00:00<00:00, 145222.87it/s] 33%|███▎      | 29588/88651 [00:00<00:00, 146806.78it/s] 51%|█████     | 44809/88651 [00:00<00:00, 148386.97it/s] 68%|██████▊   | 60261/88651 [00:00<00:00, 150172.89it/s] 89%|████████▉ | 79014/88651 [00:00<00:00, 159716.89it/s]100%|██████████| 88651/88651 [00:00<00:00, 162020.28it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18999/88651 [00:00<00:00, 189989.73it/s] 44%|████▎     | 38760/88651 [00:00<00:00, 192211.16it/s] 66%|██████▌   | 58179/88651 [00:00<00:00, 192800.34it/s] 87%|████████▋ | 77265/88651 [00:00<00:00, 192210.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 193449.38it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16375/88651 [00:00<00:00, 163742.74it/s] 34%|███▍      | 29963/88651 [00:00<00:00, 154251.69it/s] 56%|█████▌    | 49774/88651 [00:00<00:00, 165223.89it/s] 76%|███████▋  | 67795/88651 [00:00<00:00, 169450.11it/s] 98%|█████████▊| 87094/88651 [00:00<00:00, 175884.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 174591.00it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19595/88651 [00:00<00:00, 195946.92it/s] 45%|████▌     | 40194/88651 [00:00<00:00, 198853.21it/s] 64%|██████▍   | 56954/88651 [00:00<00:00, 188316.76it/s] 78%|███████▊  | 69188/88651 [00:00<00:00, 161033.30it/s] 98%|█████████▊| 86851/88651 [00:00<00:00, 165413.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 173633.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19408/88651 [00:00<00:00, 194073.71it/s] 44%|████▍     | 39044/88651 [00:00<00:00, 194753.07it/s] 64%|██████▍   | 56595/88651 [00:00<00:00, 188548.65it/s] 86%|████████▌ | 76066/88651 [00:00<00:00, 190353.24it/s]100%|██████████| 88651/88651 [00:00<00:00, 191586.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19129/88651 [00:00<00:00, 191286.99it/s] 43%|████▎     | 38518/88651 [00:00<00:00, 192059.35it/s] 66%|██████▌   | 58564/88651 [00:00<00:00, 194502.98it/s] 89%|████████▉ | 79061/88651 [00:00<00:00, 197528.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 199250.88it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14902/88651 [00:00<00:00, 149014.46it/s] 34%|███▍      | 30238/88651 [00:00<00:00, 150289.45it/s] 52%|█████▏    | 45670/88651 [00:00<00:00, 151474.04it/s] 64%|██████▍   | 56724/88651 [00:00<00:00, 136326.63it/s] 80%|███████▉  | 70803/88651 [00:00<00:00, 137635.58it/s] 98%|█████████▊| 87094/88651 [00:00<00:00, 144354.12it/s]100%|██████████| 88651/88651 [00:00<00:00, 145816.99it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21150/88651 [00:00<00:00, 211491.13it/s] 49%|████▊     | 43092/88651 [00:00<00:00, 213806.93it/s] 72%|███████▏  | 64042/88651 [00:00<00:00, 212495.51it/s] 88%|████████▊ | 78044/88651 [00:00<00:00, 163924.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 180085.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13140/88651 [00:00<00:00, 131393.55it/s] 22%|██▏       | 19468/88651 [00:00<00:00, 98590.56it/s]  27%|██▋       | 24097/88651 [00:00<00:00, 72625.16it/s] 39%|███▉      | 34989/88651 [00:00<00:00, 80690.48it/s] 52%|█████▏    | 46347/88651 [00:00<00:00, 86673.73it/s] 61%|██████    | 54028/88651 [00:00<00:00, 82433.16it/s] 70%|███████   | 62060/88651 [00:00<00:00, 78220.37it/s] 81%|████████▏ | 72204/88651 [00:00<00:00, 83986.59it/s] 95%|█████████▍| 83941/88651 [00:00<00:00, 91820.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 91403.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▉         | 8415/88651 [00:00<00:00, 84146.67it/s] 26%|██▋       | 23476/88651 [00:00<00:00, 96985.99it/s] 36%|███▌      | 31896/88651 [00:00<00:00, 92562.67it/s] 44%|████▍     | 39108/88651 [00:00<00:00, 85306.46it/s] 56%|█████▌    | 49495/88651 [00:00<00:00, 90137.97it/s] 65%|██████▍   | 57511/88651 [00:00<00:00, 84269.81it/s] 74%|███████▎  | 65317/88651 [00:00<00:00, 79079.72it/s] 83%|████████▎ | 74009/88651 [00:00<00:00, 81278.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 97956.42it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18031/88651 [00:00<00:00, 180309.74it/s] 40%|████      | 35847/88651 [00:00<00:00, 179656.33it/s] 55%|█████▍    | 48685/88651 [00:00<00:00, 160430.68it/s] 77%|███████▋  | 67933/88651 [00:00<00:00, 168864.46it/s] 96%|█████████▋| 85437/88651 [00:00<00:00, 170669.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 171815.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17378/88651 [00:00<00:00, 173772.29it/s] 41%|████      | 36474/88651 [00:00<00:00, 178594.29it/s] 62%|██████▏   | 54664/88651 [00:00<00:00, 179571.34it/s] 83%|████████▎ | 73351/88651 [00:00<00:00, 181698.14it/s]100%|██████████| 88651/88651 [00:00<00:00, 184399.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14708/88651 [00:00<00:00, 147079.09it/s] 31%|███       | 27597/88651 [00:00<00:00, 141102.94it/s] 48%|████▊     | 42930/88651 [00:00<00:00, 144560.15it/s] 65%|██████▌   | 57942/88651 [00:00<00:00, 146182.28it/s] 84%|████████▍ | 74349/88651 [00:00<00:00, 151125.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 153740.63it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14113/88651 [00:00<00:00, 141123.07it/s] 33%|███▎      | 29352/88651 [00:00<00:00, 144322.92it/s] 50%|████▉     | 44285/88651 [00:00<00:00, 145787.43it/s] 61%|██████    | 54040/88651 [00:00<00:00, 112570.67it/s] 79%|███████▉  | 69844/88651 [00:00<00:00, 123203.55it/s] 99%|█████████▊| 87392/88651 [00:00<00:00, 135294.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 138575.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18083/88651 [00:00<00:00, 180824.57it/s] 41%|████      | 36425/88651 [00:00<00:00, 181592.80it/s] 63%|██████▎   | 55513/88651 [00:00<00:00, 184280.55it/s] 77%|███████▋  | 68429/88651 [00:00<00:00, 163361.96it/s] 91%|█████████ | 80869/88651 [00:00<00:00, 148482.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 162379.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14286/88651 [00:00<00:00, 142856.39it/s] 37%|███▋      | 32483/88651 [00:00<00:00, 152701.82it/s] 56%|█████▋    | 49987/88651 [00:00<00:00, 158780.00it/s] 77%|███████▋  | 67993/88651 [00:00<00:00, 164615.53it/s] 97%|█████████▋| 85815/88651 [00:00<00:00, 168471.10it/s]100%|██████████| 88651/88651 [00:00<00:00, 171811.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11756/88651 [00:00<00:00, 117555.07it/s] 33%|███▎      | 29303/88651 [00:00<00:00, 130473.06it/s] 54%|█████▎    | 47530/88651 [00:00<00:00, 142631.07it/s] 74%|███████▍  | 65725/88651 [00:00<00:00, 152516.68it/s] 94%|█████████▍| 83525/88651 [00:00<00:00, 159358.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 163891.53it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 12893/88651 [00:00<00:00, 128927.97it/s] 35%|███▌      | 31315/88651 [00:00<00:00, 141685.02it/s] 56%|█████▌    | 49585/88651 [00:00<00:00, 151915.06it/s] 76%|███████▌  | 67178/88651 [00:00<00:00, 158400.05it/s] 91%|█████████ | 80753/88651 [00:00<00:00, 150848.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 159421.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17599/88651 [00:00<00:00, 175989.33it/s] 40%|███▉      | 35367/88651 [00:00<00:00, 176490.81it/s] 60%|██████    | 53587/88651 [00:00<00:00, 178162.70it/s] 81%|████████  | 71714/88651 [00:00<00:00, 179081.93it/s]100%|██████████| 88651/88651 [00:00<00:00, 180701.21it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18029/88651 [00:00<00:00, 180285.87it/s] 41%|████      | 36404/88651 [00:00<00:00, 181310.09it/s] 62%|██████▏   | 55130/88651 [00:00<00:00, 183054.78it/s] 80%|████████  | 71258/88651 [00:00<00:00, 175925.63it/s] 95%|█████████▌| 84585/88651 [00:00<00:00, 152828.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 159637.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9746/88651 [00:00<00:00, 97459.40it/s] 29%|██▉       | 26098/88651 [00:00<00:00, 110899.15it/s] 49%|████▉     | 43868/88651 [00:00<00:00, 124994.33it/s] 70%|██████▉   | 61737/88651 [00:00<00:00, 137378.31it/s] 90%|█████████ | 80109/88651 [00:00<00:00, 148623.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 162533.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9873/88651 [00:00<00:00, 98726.56it/s] 20%|██        | 17859/88651 [00:00<00:00, 92191.35it/s] 41%|████▏     | 36660/88651 [00:00<00:00, 108830.25it/s] 63%|██████▎   | 55411/88651 [00:00<00:00, 124501.49it/s] 80%|████████  | 71230/88651 [00:00<00:00, 132907.19it/s] 95%|█████████▍| 84197/88651 [00:00<00:00, 124424.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 137929.81it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13323/88651 [00:00<00:00, 133222.82it/s] 22%|██▏       | 19844/88651 [00:00<00:00, 101470.51it/s] 28%|██▊       | 24989/88651 [00:00<00:00, 78404.69it/s]  48%|████▊     | 42171/88651 [00:00<00:00, 93684.65it/s] 57%|█████▋    | 50731/88651 [00:00<00:00, 80388.37it/s] 72%|███████▏  | 63970/88651 [00:00<00:00, 91125.01it/s] 83%|████████▎ | 73404/88651 [00:00<00:00, 86788.45it/s] 96%|█████████▌| 84944/88651 [00:00<00:00, 93762.05it/s]100%|██████████| 88651/88651 [00:00<00:00, 98389.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 11%|█         | 9694/88651 [00:00<00:00, 96933.85it/s] 24%|██▍       | 21115/88651 [00:00<00:00, 101540.36it/s] 30%|███       | 26775/88651 [00:00<00:00, 82004.10it/s]  36%|███▋      | 32297/88651 [00:00<00:00, 64333.37it/s] 43%|████▎     | 37689/88651 [00:00<00:00, 59813.78it/s] 55%|█████▌    | 49023/88651 [00:00<00:00, 69686.65it/s] 69%|██████▉   | 60983/88651 [00:00<00:00, 79659.56it/s] 81%|████████▏ | 72109/88651 [00:00<00:00, 87078.08it/s] 95%|█████████▍| 83973/88651 [00:00<00:00, 94629.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 91083.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▊        | 16407/88651 [00:00<00:00, 164052.16it/s] 24%|██▍       | 21329/88651 [00:00<00:00, 77692.36it/s]  39%|███▉      | 34438/88651 [00:00<00:00, 88507.83it/s] 59%|█████▉    | 52218/88651 [00:00<00:00, 104207.39it/s] 78%|███████▊  | 69146/88651 [00:00<00:00, 117790.82it/s] 92%|█████████▏| 81819/88651 [00:00<00:00, 120336.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 129203.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17453/88651 [00:00<00:00, 174523.51it/s] 42%|████▏     | 37174/88651 [00:00<00:00, 180761.74it/s] 65%|██████▍   | 57333/88651 [00:00<00:00, 186541.55it/s] 87%|████████▋ | 76907/88651 [00:00<00:00, 189208.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 193422.91it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18088/88651 [00:00<00:00, 180872.41it/s] 42%|████▏     | 37259/88651 [00:00<00:00, 183992.35it/s] 63%|██████▎   | 56171/88651 [00:00<00:00, 185499.70it/s] 86%|████████▌ | 75891/88651 [00:00<00:00, 188860.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 190365.85it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17592/88651 [00:00<00:00, 175911.78it/s] 40%|████      | 35517/88651 [00:00<00:00, 176898.67it/s] 61%|██████▏   | 54333/88651 [00:00<00:00, 180131.51it/s] 82%|████████▏ | 72387/88651 [00:00<00:00, 180250.31it/s] 97%|█████████▋| 86200/88651 [00:00<00:00, 160527.08it/s]100%|██████████| 88651/88651 [00:00<00:00, 169985.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17517/88651 [00:00<00:00, 175168.50it/s] 39%|███▉      | 34840/88651 [00:00<00:00, 174581.83it/s] 60%|██████    | 53399/88651 [00:00<00:00, 177743.63it/s] 80%|███████▉  | 70594/88651 [00:00<00:00, 175961.15it/s] 95%|█████████▍| 84187/88651 [00:00<00:00, 161676.98it/s]100%|██████████| 88651/88651 [00:00<00:00, 169092.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17945/88651 [00:00<00:00, 179443.33it/s] 41%|████      | 36279/88651 [00:00<00:00, 180592.46it/s] 62%|██████▏   | 54910/88651 [00:00<00:00, 182269.69it/s] 83%|████████▎ | 73398/88651 [00:00<00:00, 183042.47it/s]100%|██████████| 88651/88651 [00:00<00:00, 183792.01it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 17213/88651 [00:00<00:00, 172125.24it/s] 40%|████      | 35830/88651 [00:00<00:00, 176109.51it/s] 60%|██████    | 53440/88651 [00:00<00:00, 176104.19it/s] 81%|████████  | 71560/88651 [00:00<00:00, 177599.89it/s]100%|██████████| 88651/88651 [00:00<00:00, 180082.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11877/88651 [00:00<00:00, 118766.43it/s] 28%|██▊       | 25198/88651 [00:00<00:00, 122758.15it/s] 44%|████▍     | 38906/88651 [00:00<00:00, 126728.16it/s] 62%|██████▏   | 55291/88651 [00:00<00:00, 135968.17it/s] 82%|████████▏ | 72986/88651 [00:00<00:00, 146119.94it/s]100%|██████████| 88651/88651 [00:00<00:00, 150889.05it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14621/88651 [00:00<00:00, 146203.17it/s] 32%|███▏      | 28532/88651 [00:00<00:00, 143997.89it/s] 47%|████▋     | 41982/88651 [00:00<00:00, 139318.72it/s] 59%|█████▉    | 52256/88651 [00:00<00:00, 125870.89it/s] 76%|███████▌  | 67142/88651 [00:00<00:00, 131985.53it/s] 96%|█████████▌| 84796/88651 [00:00<00:00, 142796.97it/s]100%|██████████| 88651/88651 [00:00<00:00, 141885.87it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12693/88651 [00:00<00:00, 126916.81it/s] 28%|██▊       | 24714/88651 [00:00<00:00, 124826.22it/s] 44%|████▍     | 39153/88651 [00:00<00:00, 130114.56it/s] 64%|██████▎   | 56305/88651 [00:00<00:00, 140271.91it/s] 84%|████████▍ | 74692/88651 [00:00<00:00, 151013.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 153011.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17301/88651 [00:00<00:00, 173009.75it/s] 40%|████      | 35785/88651 [00:00<00:00, 176394.95it/s] 62%|██████▏   | 54976/88651 [00:00<00:00, 180777.37it/s] 76%|███████▌  | 67158/88651 [00:00<00:00, 147401.57it/s] 89%|████████▉ | 78776/88651 [00:00<00:00, 123565.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 136352.82it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17802/88651 [00:00<00:00, 178008.29it/s] 34%|███▍      | 30137/88651 [00:00<00:00, 157116.46it/s] 55%|█████▍    | 48404/88651 [00:00<00:00, 163997.42it/s] 67%|██████▋   | 59175/88651 [00:00<00:00, 138103.28it/s] 79%|███████▊  | 69684/88651 [00:00<00:00, 84600.08it/s]  93%|█████████▎| 82709/88651 [00:00<00:00, 94538.82it/s]100%|██████████| 88651/88651 [00:00<00:00, 113309.96it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  9%|▊         | 7751/88651 [00:00<00:01, 77508.04it/s] 20%|█▉        | 17569/88651 [00:00<00:00, 82733.64it/s] 33%|███▎      | 29253/88651 [00:00<00:00, 90673.77it/s] 41%|████      | 35960/88651 [00:00<00:00, 75581.34it/s] 57%|█████▋    | 50218/88651 [00:00<00:00, 87983.32it/s] 66%|██████▋   | 58925/88651 [00:00<00:00, 70537.34it/s] 77%|███████▋  | 67819/88651 [00:00<00:00, 75202.88it/s] 89%|████████▉ | 78907/88651 [00:00<00:00, 83237.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 91196.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12147/88651 [00:00<00:00, 121460.27it/s] 34%|███▍      | 30158/88651 [00:00<00:00, 134608.99it/s] 55%|█████▌    | 48873/88651 [00:00<00:00, 146987.02it/s] 76%|███████▋  | 67801/88651 [00:00<00:00, 157545.81it/s] 98%|█████████▊| 86959/88651 [00:00<00:00, 166413.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 174117.55it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15828/88651 [00:00<00:00, 158276.00it/s] 39%|███▉      | 34667/88651 [00:00<00:00, 166246.14it/s] 60%|█████▉    | 53189/88651 [00:00<00:00, 171515.52it/s] 80%|████████  | 70953/88651 [00:00<00:00, 173307.51it/s]100%|██████████| 88651/88651 [00:00<00:00, 179219.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14472/88651 [00:00<00:00, 144710.48it/s] 34%|███▍      | 30213/88651 [00:00<00:00, 148299.38it/s] 55%|█████▌    | 49195/88651 [00:00<00:00, 158713.38it/s] 77%|███████▋  | 67862/88651 [00:00<00:00, 166177.88it/s] 97%|█████████▋| 86121/88651 [00:00<00:00, 170782.16it/s]100%|██████████| 88651/88651 [00:00<00:00, 172634.94it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15831/88651 [00:00<00:00, 158306.75it/s] 33%|███▎      | 29162/88651 [00:00<00:00, 149875.42it/s] 55%|█████▍    | 48419/88651 [00:00<00:00, 160553.81it/s] 73%|███████▎  | 64878/88651 [00:00<00:00, 161741.95it/s] 92%|█████████▏| 81930/88651 [00:00<00:00, 164276.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 165739.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15820/88651 [00:00<00:00, 158196.76it/s] 38%|███▊      | 33578/88651 [00:00<00:00, 163552.11it/s] 58%|█████▊    | 51524/88651 [00:00<00:00, 168019.18it/s] 79%|███████▉  | 69949/88651 [00:00<00:00, 172578.79it/s]100%|█████████▉| 88341/88651 [00:00<00:00, 175829.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 176568.33it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 14328/88651 [00:00<00:00, 143278.43it/s] 33%|███▎      | 29234/88651 [00:00<00:00, 144962.77it/s] 46%|████▋     | 41019/88651 [00:00<00:00, 135599.53it/s] 58%|█████▊    | 51339/88651 [00:00<00:00, 123924.95it/s] 75%|███████▌  | 66768/88651 [00:00<00:00, 131700.63it/s] 98%|█████████▊| 86662/88651 [00:00<00:00, 146560.86it/s]100%|██████████| 88651/88651 [00:00<00:00, 145087.79it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19079/88651 [00:00<00:00, 190781.99it/s] 43%|████▎     | 37934/88651 [00:00<00:00, 190105.69it/s] 61%|██████▏   | 54520/88651 [00:00<00:00, 182117.87it/s] 77%|███████▋  | 68006/88651 [00:00<00:00, 164792.44it/s]100%|█████████▉| 88585/88651 [00:00<00:00, 175266.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 177088.02it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15082/88651 [00:00<00:00, 150819.78it/s] 39%|███▉      | 34565/88651 [00:00<00:00, 161781.97it/s] 61%|██████    | 53880/88651 [00:00<00:00, 170065.81it/s] 82%|████████▏ | 73026/88651 [00:00<00:00, 175963.85it/s]100%|██████████| 88651/88651 [00:00<00:00, 184564.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19236/88651 [00:00<00:00, 192357.89it/s] 44%|████▎     | 38727/88651 [00:00<00:00, 193113.93it/s] 67%|██████▋   | 59166/88651 [00:00<00:00, 196356.41it/s] 88%|████████▊ | 78449/88651 [00:00<00:00, 195283.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 196746.71it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18538/88651 [00:00<00:00, 185374.43it/s] 34%|███▍      | 30350/88651 [00:00<00:00, 158326.20it/s] 52%|█████▏    | 45854/88651 [00:00<00:00, 157325.74it/s] 73%|███████▎  | 64890/88651 [00:00<00:00, 165964.85it/s] 94%|█████████▎| 83014/88651 [00:00<00:00, 170265.61it/s]100%|██████████| 88651/88651 [00:00<00:00, 154814.29it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8684/88651 [00:00<00:00, 86833.46it/s] 20%|██        | 17893/88651 [00:00<00:00, 88344.94it/s] 28%|██▊       | 25021/88651 [00:00<00:00, 82423.46it/s] 38%|███▊      | 34026/88651 [00:00<00:00, 84571.30it/s] 51%|█████     | 45217/88651 [00:00<00:00, 91259.35it/s] 63%|██████▎   | 55758/88651 [00:00<00:00, 95087.49it/s] 78%|███████▊  | 68751/88651 [00:00<00:00, 103405.71it/s] 91%|█████████ | 80793/88651 [00:00<00:00, 107982.57it/s]100%|██████████| 88651/88651 [00:00<00:00, 100793.67it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13454/88651 [00:00<00:00, 134531.47it/s] 30%|███       | 26824/88651 [00:00<00:00, 134280.21it/s] 47%|████▋     | 41465/88651 [00:00<00:00, 137700.83it/s] 68%|██████▊   | 60343/88651 [00:00<00:00, 149864.83it/s] 89%|████████▉ | 78800/88651 [00:00<00:00, 158823.02it/s]100%|██████████| 88651/88651 [00:00<00:00, 162322.65it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21289/88651 [00:00<00:00, 212883.60it/s] 49%|████▊     | 43071/88651 [00:00<00:00, 214337.76it/s] 72%|███████▏  | 63407/88651 [00:00<00:00, 210918.90it/s] 87%|████████▋ | 77211/88651 [00:00<00:00, 181579.40it/s]100%|██████████| 88651/88651 [00:00<00:00, 179600.24it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 15017/88651 [00:00<00:00, 150163.70it/s] 31%|███       | 27399/88651 [00:00<00:00, 141154.12it/s] 45%|████▍     | 39834/88651 [00:00<00:00, 135654.53it/s] 56%|█████▌    | 49538/88651 [00:00<00:00, 121185.60it/s] 69%|██████▉   | 61554/88651 [00:00<00:00, 120150.46it/s] 80%|████████  | 71310/88651 [00:00<00:00, 97057.55it/s]  93%|█████████▎| 82263/88651 [00:00<00:00, 100489.58it/s]100%|██████████| 88651/88651 [00:00<00:00, 102542.52it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  5%|▍         | 4321/88651 [00:00<00:01, 43055.34it/s] 24%|██▍       | 21612/88651 [00:00<00:01, 55576.48it/s] 34%|███▎      | 29810/88651 [00:00<00:00, 61187.94it/s] 42%|████▏     | 37026/88651 [00:00<00:00, 64111.54it/s] 51%|█████▏    | 45587/88651 [00:00<00:00, 69334.11it/s] 72%|███████▏  | 63560/88651 [00:00<00:00, 84995.99it/s] 85%|████████▍ | 75084/88651 [00:00<00:00, 91354.19it/s] 97%|█████████▋| 85780/88651 [00:00<00:00, 92633.90it/s]100%|██████████| 88651/88651 [00:00<00:00, 101090.06it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10352/88651 [00:00<00:00, 103517.38it/s] 30%|██▉       | 26196/88651 [00:00<00:00, 115531.90it/s] 50%|█████     | 44421/88651 [00:00<00:00, 129784.90it/s] 72%|███████▏  | 63655/88651 [00:00<00:00, 143816.25it/s] 88%|████████▊ | 78199/88651 [00:00<00:00, 144299.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 154765.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17753/88651 [00:00<00:00, 177528.05it/s] 41%|████      | 36030/88651 [00:00<00:00, 179066.21it/s] 61%|██████▏   | 54449/88651 [00:00<00:00, 180570.68it/s] 79%|███████▉  | 69855/88651 [00:00<00:00, 171703.12it/s] 95%|█████████▍| 84169/88651 [00:00<00:00, 162004.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 169136.07it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15607/88651 [00:00<00:00, 156068.66it/s] 37%|███▋      | 32658/88651 [00:00<00:00, 160136.59it/s] 57%|█████▋    | 50397/88651 [00:00<00:00, 164947.90it/s] 78%|███████▊  | 69314/88651 [00:00<00:00, 171537.13it/s] 99%|█████████▉| 87857/88651 [00:00<00:00, 175479.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 175583.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12557/88651 [00:00<00:00, 125564.13it/s] 28%|██▊       | 24593/88651 [00:00<00:00, 123956.01it/s] 44%|████▍     | 39271/88651 [00:00<00:00, 130020.80it/s] 64%|██████▍   | 56540/88651 [00:00<00:00, 140429.34it/s] 86%|████████▌ | 75855/88651 [00:00<00:00, 152952.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 156762.78it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19253/88651 [00:00<00:00, 192529.27it/s] 44%|████▎     | 38660/88651 [00:00<00:00, 192988.55it/s] 55%|█████▌    | 49152/88651 [00:00<00:00, 149044.83it/s] 72%|███████▏  | 63939/88651 [00:00<00:00, 148688.75it/s] 94%|█████████▍| 83668/88651 [00:00<00:00, 160552.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 166176.36it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19407/88651 [00:00<00:00, 194068.33it/s] 45%|████▍     | 39521/88651 [00:00<00:00, 196134.25it/s] 63%|██████▎   | 55705/88651 [00:00<00:00, 184410.87it/s] 80%|███████▉  | 70777/88651 [00:00<00:00, 172820.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 179789.64it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14635/88651 [00:00<00:00, 146347.70it/s] 33%|███▎      | 29034/88651 [00:00<00:00, 145631.94it/s] 49%|████▉     | 43693/88651 [00:00<00:00, 145916.84it/s] 66%|██████▋   | 58935/88651 [00:00<00:00, 147806.96it/s] 87%|████████▋ | 77249/88651 [00:00<00:00, 156887.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 158425.50it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13834/88651 [00:00<00:00, 138339.14it/s] 33%|███▎      | 28849/88651 [00:00<00:00, 141682.05it/s] 50%|████▉     | 44072/88651 [00:00<00:00, 144687.18it/s] 67%|██████▋   | 59257/88651 [00:00<00:00, 146761.25it/s] 84%|████████▍ | 74691/88651 [00:00<00:00, 148955.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 155810.54it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14653/88651 [00:00<00:00, 146525.95it/s] 34%|███▎      | 29713/88651 [00:00<00:00, 147722.59it/s] 51%|█████     | 44932/88651 [00:00<00:00, 149034.76it/s] 71%|███████   | 62580/88651 [00:00<00:00, 156326.42it/s] 88%|████████▊ | 77742/88651 [00:00<00:00, 154882.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 154007.31it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20106/88651 [00:00<00:00, 201056.36it/s] 46%|████▌     | 40425/88651 [00:00<00:00, 201690.64it/s] 68%|██████▊   | 60595/88651 [00:00<00:00, 201693.07it/s] 90%|█████████ | 79972/88651 [00:00<00:00, 199248.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 198842.57it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 17954/88651 [00:00<00:00, 179537.17it/s] 39%|███▉      | 35016/88651 [00:00<00:00, 176762.70it/s] 54%|█████▍    | 47706/88651 [00:00<00:00, 158122.68it/s] 77%|███████▋  | 67848/88651 [00:00<00:00, 169021.76it/s] 99%|█████████▉| 88147/88651 [00:00<00:00, 177954.27it/s]100%|██████████| 88651/88651 [00:00<00:00, 176302.44it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18786/88651 [00:00<00:00, 187853.46it/s] 44%|████▍     | 38920/88651 [00:00<00:00, 191704.18it/s] 66%|██████▋   | 58745/88651 [00:00<00:00, 193621.19it/s] 88%|████████▊ | 78245/88651 [00:00<00:00, 194029.66it/s]100%|██████████| 88651/88651 [00:00<00:00, 195770.49it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19070/88651 [00:00<00:00, 190696.54it/s] 37%|███▋      | 32814/88651 [00:00<00:00, 170832.76it/s] 55%|█████▌    | 48798/88651 [00:00<00:00, 167376.67it/s] 69%|██████▉   | 61043/88651 [00:00<00:00, 150775.90it/s] 91%|█████████ | 80624/88651 [00:00<00:00, 161948.69it/s]100%|██████████| 88651/88651 [00:00<00:00, 157424.76it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10405/88651 [00:00<00:00, 104038.69it/s] 15%|█▌        | 13527/88651 [00:00<00:01, 58664.62it/s]  32%|███▏      | 28188/88651 [00:00<00:00, 71537.85it/s] 50%|████▉     | 44257/88651 [00:00<00:00, 85822.25it/s] 62%|██████▏   | 55347/88651 [00:00<00:00, 92067.19it/s] 74%|███████▎  | 65252/88651 [00:00<00:00, 73976.97it/s] 83%|████████▎ | 73708/88651 [00:00<00:00, 66833.95it/s] 92%|█████████▏| 81263/88651 [00:00<00:00, 67989.40it/s]100%|██████████| 88651/88651 [00:01<00:00, 86711.60it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6474/88651 [00:00<00:01, 58427.58it/s] 20%|██        | 18127/88651 [00:00<00:01, 68704.48it/s] 42%|████▏     | 37636/88651 [00:00<00:00, 85278.07it/s] 62%|██████▏   | 55014/88651 [00:00<00:00, 98369.68it/s] 74%|███████▍  | 66024/88651 [00:00<00:00, 88122.55it/s] 86%|████████▌ | 75858/88651 [00:00<00:00, 74502.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 103221.56it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14431/88651 [00:00<00:00, 144304.29it/s] 37%|███▋      | 32749/88651 [00:00<00:00, 154115.33it/s] 58%|█████▊    | 51146/88651 [00:00<00:00, 162000.87it/s] 80%|████████  | 71088/88651 [00:00<00:00, 171662.84it/s]100%|██████████| 88651/88651 [00:00<00:00, 182466.37it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14814/88651 [00:00<00:00, 148133.43it/s] 34%|███▎      | 29898/88651 [00:00<00:00, 148934.24it/s] 51%|█████     | 45175/88651 [00:00<00:00, 150064.32it/s] 68%|██████▊   | 60621/88651 [00:00<00:00, 151354.66it/s] 86%|████████▌ | 76087/88651 [00:00<00:00, 152330.73it/s]100%|██████████| 88651/88651 [00:00<00:00, 152500.41it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▌        | 13994/88651 [00:00<00:00, 139938.47it/s] 31%|███       | 27184/88651 [00:00<00:00, 137422.66it/s] 46%|████▌     | 40543/88651 [00:00<00:00, 136248.42it/s] 66%|██████▋   | 58947/88651 [00:00<00:00, 147757.83it/s] 87%|████████▋ | 77164/88651 [00:00<00:00, 156634.11it/s]100%|██████████| 88651/88651 [00:00<00:00, 158044.97it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|█▉        | 17527/88651 [00:00<00:00, 175269.33it/s] 37%|███▋      | 33189/88651 [00:00<00:00, 169221.72it/s] 47%|████▋     | 41569/88651 [00:00<00:00, 128255.65it/s] 63%|██████▎   | 55905/88651 [00:00<00:00, 132440.32it/s] 85%|████████▍ | 75033/88651 [00:00<00:00, 145903.38it/s]100%|██████████| 88651/88651 [00:00<00:00, 155324.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 20%|██        | 18121/88651 [00:00<00:00, 181209.74it/s] 42%|████▏     | 37642/88651 [00:00<00:00, 185193.37it/s] 65%|██████▍   | 57587/88651 [00:00<00:00, 189251.20it/s] 88%|████████▊ | 77793/88651 [00:00<00:00, 192919.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 195010.09it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13434/88651 [00:00<00:00, 134333.08it/s] 25%|██▌       | 22305/88651 [00:00<00:00, 116372.53it/s] 35%|███▌      | 31149/88651 [00:00<00:00, 106297.04it/s] 45%|████▌     | 39955/88651 [00:00<00:00, 100077.02it/s] 55%|█████▌    | 49107/88651 [00:00<00:00, 94884.35it/s]  71%|███████   | 62909/88651 [00:00<00:00, 104700.08it/s] 92%|█████████▏| 81625/88651 [00:00<00:00, 120646.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 119196.40it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12804/88651 [00:00<00:00, 128036.76it/s] 36%|███▌      | 31853/88651 [00:00<00:00, 142003.67it/s] 56%|█████▌    | 49626/88651 [00:00<00:00, 151116.25it/s] 71%|███████   | 62519/88651 [00:00<00:00, 143696.66it/s] 93%|█████████▎| 82516/88651 [00:00<00:00, 156945.75it/s]100%|██████████| 88651/88651 [00:00<00:00, 167078.75it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19170/88651 [00:00<00:00, 191697.90it/s] 43%|████▎     | 38545/88651 [00:00<00:00, 192306.68it/s] 65%|██████▌   | 58041/88651 [00:00<00:00, 193094.16it/s] 88%|████████▊ | 77583/88651 [00:00<00:00, 193783.80it/s]100%|██████████| 88651/88651 [00:00<00:00, 194430.48it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19124/88651 [00:00<00:00, 191239.73it/s] 44%|████▍     | 38944/88651 [00:00<00:00, 193275.58it/s] 67%|██████▋   | 59100/88651 [00:00<00:00, 195686.66it/s] 89%|████████▉ | 78947/88651 [00:00<00:00, 196512.23it/s]100%|██████████| 88651/88651 [00:00<00:00, 197908.47it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19089/88651 [00:00<00:00, 190885.63it/s] 43%|████▎     | 38154/88651 [00:00<00:00, 190810.70it/s] 57%|█████▋    | 50936/88651 [00:00<00:00, 166230.59it/s] 78%|███████▊  | 69541/88651 [00:00<00:00, 171716.52it/s]100%|██████████| 88651/88651 [00:00<00:00, 177940.15it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16790/88651 [00:00<00:00, 167899.36it/s] 41%|████▏     | 36742/88651 [00:00<00:00, 176278.67it/s] 63%|██████▎   | 56235/88651 [00:00<00:00, 181487.19it/s] 86%|████████▌ | 76303/88651 [00:00<00:00, 186846.98it/s]100%|██████████| 88651/88651 [00:00<00:00, 191314.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10680/88651 [00:00<00:00, 106788.90it/s] 26%|██▌       | 23007/88651 [00:00<00:00, 111249.75it/s] 42%|████▏     | 37245/88651 [00:00<00:00, 119056.90it/s] 52%|█████▏    | 45675/88651 [00:00<00:00, 100168.70it/s] 63%|██████▎   | 55546/88651 [00:00<00:00, 99725.89it/s]  84%|████████▍ | 74859/88651 [00:00<00:00, 116650.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 128931.80it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 16148/88651 [00:00<00:00, 161477.46it/s] 36%|███▋      | 32232/88651 [00:00<00:00, 161284.81it/s] 55%|█████▍    | 48479/88651 [00:00<00:00, 161637.21it/s] 73%|███████▎  | 64990/88651 [00:00<00:00, 162661.94it/s] 87%|████████▋ | 77381/88651 [00:00<00:00, 141470.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 143077.17it/s]
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 4965/88651 [00:00<00:01, 49648.15it/s] 20%|█▉        | 17296/88651 [00:00<00:01, 60487.66it/s] 29%|██▉       | 25568/88651 [00:00<00:00, 65548.34it/s] 46%|████▌     | 40668/88651 [00:00<00:00, 78952.16it/s] 60%|█████▉    | 52918/88651 [00:00<00:00, 88376.33it/s] 71%|███████   | 62588/88651 [00:00<00:00, 86020.07it/s] 81%|████████  | 71787/88651 [00:00<00:00, 71742.09it/s] 90%|████████▉ | 79778/88651 [00:00<00:00, 62884.04it/s]100%|█████████▉| 88622/88651 [00:01<00:00, 68852.77it/s]100%|██████████| 88651/88651 [00:01<00:00, 83387.30it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13262/88651 [00:00<00:00, 132610.01it/s] 30%|██▉       | 26219/88651 [00:00<00:00, 131682.79it/s] 48%|████▊     | 42889/88651 [00:00<00:00, 140538.88it/s] 63%|██████▎   | 55956/88651 [00:00<00:00, 137423.75it/s] 75%|███████▌  | 66646/88651 [00:00<00:00, 92859.74it/s]  85%|████████▌ | 75718/88651 [00:00<00:00, 89579.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 109551.16it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██▏       | 18952/88651 [00:00<00:00, 189512.05it/s] 44%|████▍     | 39221/88651 [00:00<00:00, 193281.46it/s] 67%|██████▋   | 59007/88651 [00:00<00:00, 194631.16it/s] 89%|████████▉ | 78767/88651 [00:00<00:00, 195509.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 197435.89it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10533/88651 [00:00<00:00, 105322.57it/s] 30%|██▉       | 26581/88651 [00:00<00:00, 117430.88it/s] 53%|█████▎    | 46888/88651 [00:00<00:00, 134438.43it/s] 75%|███████▌  | 66740/88651 [00:00<00:00, 148852.14it/s] 98%|█████████▊| 86954/88651 [00:00<00:00, 161635.00it/s]100%|██████████| 88651/88651 [00:00<00:00, 174344.84it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12138/88651 [00:00<00:00, 121370.28it/s] 27%|██▋       | 23919/88651 [00:00<00:00, 120279.22it/s] 46%|████▌     | 40778/88651 [00:00<00:00, 131591.63it/s] 67%|██████▋   | 59283/88651 [00:00<00:00, 144078.25it/s] 88%|████████▊ | 77736/88651 [00:00<00:00, 154219.04it/s]100%|██████████| 88651/88651 [00:00<00:00, 158099.61it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11905/88651 [00:00<00:00, 119046.71it/s] 29%|██▉       | 26040/88651 [00:00<00:00, 124961.50it/s] 45%|████▌     | 40196/88651 [00:00<00:00, 129517.13it/s] 63%|██████▎   | 55570/88651 [00:00<00:00, 135940.48it/s] 80%|███████▉  | 70732/88651 [00:00<00:00, 140292.69it/s] 97%|█████████▋| 86187/88651 [00:00<00:00, 144283.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 143755.74it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14643/88651 [00:00<00:00, 146425.60it/s] 34%|███▍      | 30208/88651 [00:00<00:00, 149075.16it/s] 43%|████▎     | 37953/88651 [00:00<00:00, 112138.22it/s] 64%|██████▍   | 57141/88651 [00:00<00:00, 128109.35it/s] 87%|████████▋ | 77231/88651 [00:00<00:00, 143731.26it/s]100%|██████████| 88651/88651 [00:00<00:00, 156652.68it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19805/88651 [00:00<00:00, 198043.58it/s] 45%|████▌     | 40178/88651 [00:00<00:00, 199713.71it/s] 69%|██████▊   | 60828/88651 [00:00<00:00, 201702.07it/s] 87%|████████▋ | 77484/88651 [00:00<00:00, 189692.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 181777.90it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14785/88651 [00:00<00:00, 147844.50it/s] 34%|███▎      | 29898/88651 [00:00<00:00, 148814.05it/s] 51%|█████     | 45135/88651 [00:00<00:00, 149861.85it/s] 70%|██████▉   | 61952/88651 [00:00<00:00, 154920.21it/s] 93%|█████████▎| 82254/88651 [00:00<00:00, 166772.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 167229.26it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14667/88651 [00:00<00:00, 146661.75it/s] 33%|███▎      | 29632/88651 [00:00<00:00, 147545.24it/s] 50%|████▉     | 44259/88651 [00:00<00:00, 147159.64it/s] 68%|██████▊   | 60511/88651 [00:00<00:00, 151452.61it/s] 88%|████████▊ | 78130/88651 [00:00<00:00, 158111.01it/s]100%|██████████| 88651/88651 [00:00<00:00, 158160.13it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 13%|█▎        | 11738/88651 [00:00<00:00, 117376.47it/s] 35%|███▌      | 31423/88651 [00:00<00:00, 133551.39it/s] 58%|█████▊    | 51807/88651 [00:00<00:00, 148959.93it/s] 81%|████████  | 72012/88651 [00:00<00:00, 161705.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 184681.14it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 13194/88651 [00:00<00:00, 131938.87it/s] 36%|███▋      | 32158/88651 [00:00<00:00, 145191.15it/s] 60%|██████    | 53433/88651 [00:00<00:00, 160478.48it/s] 84%|████████▍ | 74718/88651 [00:00<00:00, 173267.96it/s]100%|██████████| 88651/88651 [00:00<00:00, 190219.77it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▎       | 20866/88651 [00:00<00:00, 208659.70it/s] 48%|████▊     | 42554/88651 [00:00<00:00, 211057.32it/s] 72%|███████▏  | 63840/88651 [00:00<00:00, 211594.52it/s] 88%|████████▊ | 77848/88651 [00:00<00:00, 179436.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 191304.63it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
epoch 5: {'train_loss': '17.54565'}; time used = 9.73500943183899s
epoch 10: {'train_loss': '16.71245'}; time used = 10.975402116775513s
epoch 15: {'train_loss': '15.98848'}; time used = 10.618711233139038s
epoch 20: {'train_loss': '15.34091'}; time used = 10.62447714805603s
epoch 25: {'train_loss': '14.72311'}; time used = 10.176677942276001s
epoch 30: {'train_loss': '14.13397'}; time used = 8.187074899673462s
epoch 35: {'train_loss': '13.59080'}; time used = 7.940341472625732s
epoch 40: {'train_loss': '13.08206'}; time used = 5.9201319217681885s
epoch 45: {'train_loss': '12.56480'}; time used = 6.623347997665405s
epoch 50: {'train_loss': '12.14923'}; time used = 6.4528968334198s
epoch 55: {'train_loss': '11.87297'}; time used = 10.890308856964111s
epoch 60: {'train_loss': '11.44655'}; time used = 5.785589218139648s
epoch 65: {'train_loss': '11.22350'}; time used = 5.5984532833099365s
epoch 70: {'train_loss': '10.92937'}; time used = 6.470386505126953s
epoch 75: {'train_loss': '10.64343'}; time used = 5.062630891799927s
epoch 80: {'train_loss': '10.41904'}; time used = 5.534238815307617s
epoch 85: {'train_loss': '10.24114'}; time used = 5.810649633407593s
epoch 90: {'train_loss': '10.09344'}; time used = 3.9092934131622314s
epoch 95: {'train_loss': '9.89328'}; time used = 3.2758736610412598s
epoch 100: {'train_loss': '9.80641'}; time used = 3.040109395980835s
epoch 105: {'train_loss': '9.57418'}; time used = 2.8988983631134033s
epoch 110: {'train_loss': '9.50557'}; time used = 3.6259777545928955s
epoch 115: {'train_loss': '9.44852'}; time used = 2.8210866451263428s
epoch 120: {'train_loss': '9.26508'}; time used = 3.4675452709198s
epoch 125: {'train_loss': '9.24411'}; time used = 3.186631441116333s
epoch 130: {'train_loss': '9.17559'}; time used = 2.7635390758514404s
epoch 135: {'train_loss': '9.21563'}; time used = 3.656231164932251s
epoch 140: {'train_loss': '9.10816'}; time used = 2.9583306312561035s
epoch 145: {'train_loss': '9.08718'}; time used = 3.0076916217803955s
epoch 150: {'train_loss': '9.09749'}; time used = 3.3484621047973633s
epoch 155: {'train_loss': '8.94336'}; time used = 2.6836133003234863s
epoch 160: {'train_loss': '9.02629'}; time used = 3.549733877182007s
epoch 165: {'train_loss': '9.00712'}; time used = 2.7722835540771484s
epoch 170: {'train_loss': '8.92512'}; time used = 3.177295446395874s
epoch 175: {'train_loss': '8.87319'}; time used = 3.666151762008667s
epoch 180: {'train_loss': '8.93841'}; time used = 2.560645341873169s
epoch 185: {'train_loss': '8.93796'}; time used = 3.058594226837158s
epoch 190: {'train_loss': '8.87374'}; time used = 3.619020462036133s
epoch 195: {'train_loss': '8.91836'}; time used = 2.804259777069092s
epoch 200: {'train_loss': '8.82947'}; time used = 3.3586859703063965s
epoch 205: {'train_loss': '8.84691'}; time used = 3.622588872909546s
epoch 210: {'train_loss': '8.83052'}; time used = 2.8573200702667236s
epoch 215: {'train_loss': '8.82850'}; time used = 3.604130268096924s
epoch 220: {'train_loss': '8.85441'}; time used = 2.60825252532959s
epoch 225: {'train_loss': '8.84379'}; time used = 2.9412739276885986s
epoch 230: {'train_loss': '8.84410'}; time used = 3.5147275924682617s
epoch 235: {'train_loss': '8.78754'}; time used = 2.732351303100586s
epoch 240: {'train_loss': '8.77294'}; time used = 3.388002872467041s
epoch 245: {'train_loss': '8.79484'}; time used = 3.081075429916382s
epoch 250: {'train_loss': '8.73847'}; time used = 2.9280788898468018s
epoch 255: {'train_loss': '8.76799'}; time used = 3.919785261154175s
epoch 260: {'train_loss': '8.72339'}; time used = 2.6506717205047607s
epoch 265: {'train_loss': '8.65687'}; time used = 3.112553358078003s
epoch 270: {'train_loss': '8.75639'}; time used = 3.3827431201934814s
epoch 275: {'train_loss': '8.69196'}; time used = 2.8429672718048096s
epoch 280: {'train_loss': '8.73442'}; time used = 4.152599096298218s
epoch 285: {'train_loss': '8.73785'}; time used = 2.9640469551086426s
epoch 290: {'train_loss': '8.68531'}; time used = 2.9195830821990967s
epoch 295: {'train_loss': '8.60498'}; time used = 3.4135186672210693s
epoch 300: {'train_loss': '8.61689'}; time used = 2.7867517471313477s
epoch 305: {'train_loss': '8.65688'}; time used = 3.817744731903076s
epoch 310: {'train_loss': '8.65772'}; time used = 3.0537402629852295s
epoch 315: {'train_loss': '8.55781'}; time used = 2.8132331371307373s
epoch 320: {'train_loss': '8.69696'}; time used = 3.7346301078796387s
epoch 325: {'train_loss': '8.57171'}; time used = 2.8913304805755615s
epoch 330: {'train_loss': '8.60183'}; time used = 3.2889633178710938s
epoch 335: {'train_loss': '8.61436'}; time used = 3.384385585784912s
epoch 340: {'train_loss': '8.61406'}; time used = 2.8735263347625732s
epoch 345: {'train_loss': '8.59027'}; time used = 3.761937141418457s
epoch 350: {'train_loss': '8.65780'}; time used = 2.7299301624298096s
epoch 355: {'train_loss': '8.47264'}; time used = 3.119462728500366s
epoch 360: {'train_loss': '8.62172'}; time used = 3.750792980194092s
epoch 365: {'train_loss': '8.55080'}; time used = 2.6535818576812744s
epoch 370: {'train_loss': '8.55435'}; time used = 4.429835319519043s
epoch 375: {'train_loss': '8.57682'}; time used = 6.994199991226196s
epoch 380: {'train_loss': '8.51848'}; time used = 5.559355974197388s
epoch 385: {'train_loss': '8.53584'}; time used = 5.437546014785767s
epoch 390: {'train_loss': '8.53931'}; time used = 5.51814603805542s
epoch 395: {'train_loss': '8.51644'}; time used = 5.387068271636963s
epoch 400: {'train_loss': '8.52253'}; time used = 4.195369720458984s
epoch 405: {'train_loss': '8.48845'}; time used = 3.682516574859619s
epoch 410: {'train_loss': '8.56072'}; time used = 2.8332722187042236s
epoch 415: {'train_loss': '8.43525'}; time used = 2.7662789821624756s
epoch 420: {'train_loss': '8.49949'}; time used = 3.672086715698242s
epoch 425: {'train_loss': '8.49446'}; time used = 3.046060085296631s
epoch 430: {'train_loss': '8.51030'}; time used = 3.280245780944824s
epoch 435: {'train_loss': '8.43045'}; time used = 3.229182720184326s
epoch 440: {'train_loss': '8.42653'}; time used = 2.8794684410095215s
epoch 445: {'train_loss': '8.47398'}; time used = 3.69706654548645s
epoch 450: {'train_loss': '8.46769'}; time used = 2.844452381134033s
epoch 455: {'train_loss': '8.46631'}; time used = 3.122973918914795s
epoch 460: {'train_loss': '8.48184'}; time used = 3.7435271739959717s
epoch 465: {'train_loss': '8.35675'}; time used = 2.8656160831451416s
epoch 470: {'train_loss': '8.44604'}; time used = 2.856663227081299s
epoch 475: {'train_loss': '8.39776'}; time used = 3.5320029258728027s
epoch 480: {'train_loss': '8.41047'}; time used = 3.035616397857666s
epoch 485: {'train_loss': '8.33862'}; time used = 2.573838233947754s
epoch 490: {'train_loss': '8.38379'}; time used = 3.8458237648010254s
epoch 495: {'train_loss': '8.35191'}; time used = 2.9847426414489746s
epoch 500: {'train_loss': '8.36051'}; time used = 2.7507216930389404s
Finished training. Time used = 431.39268827438354.
Training classifier using 20.00% nodes...
{'micro': 0.39387599847850896, 'macro': 0.24056849299567742, 'samples': 0.39387599847850896, 'weighted': 0.2848492561477306}

  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18504/88651 [00:00<00:00, 185033.12it/s] 41%|████      | 36160/88651 [00:00<00:00, 182404.63it/s] 62%|██████▏   | 55317/88651 [00:00<00:00, 185058.82it/s] 82%|████████▏ | 73109/88651 [00:00<00:00, 182857.25it/s]100%|██████████| 88651/88651 [00:00<00:00, 184316.69it/s]
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18558/88651 [00:00<00:00, 185575.75it/s] 43%|████▎     | 37883/88651 [00:00<00:00, 187812.92it/s] 58%|█████▊    | 50991/88651 [00:00<00:00, 166228.91it/s] 77%|███████▋  | 68308/88651 [00:00<00:00, 168250.63it/s] 99%|█████████▊| 87421/88651 [00:00<00:00, 174516.89it/s]100%|██████████| 88651/88651 [00:00<00:00, 174944.06it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 174.00 MiB (GPU 0; 10.76 GiB total capacity; 1.04 GiB already allocated; 27.44 MiB free; 1.14 GiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7fdac7f181e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7fdac816e64b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7fdac816f464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7fdac816faa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7fd86df4d90e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7fd86c387949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7fd86c3a1777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7fd8a713dc7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7fd8a713df97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7fd8a7248a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7fd8a6ed84f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7fd8a6eda166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7fd8a6eda65d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7fd8a6eda80a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7fd8a6c17eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7fd86c376b40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7fd8a6aaa530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fd8a729281c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7fd8a71e382b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0x2f16968 (0x7fd8a8f6a968 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: <unknown function> + 0xa56530 (0x7fd8a6aaa530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fd8a729281c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: at::Tensor::mul(at::Tensor const&) const + 0x4b (0x7fd8a7378d6b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: torch::autograd::generated::MulBackward0::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x235 (0x7fd8a8d81da5 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x3375bb7 (0x7fd8a93c9bb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7fd8a93c5400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7fd8a93c5fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7fd8a93be119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7fda843124ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #29: <unknown function> + 0xbd6df (0x7fdad0c936df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #30: <unknown function> + 0x76db (0x7fdad4cee6db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #31: clone + 0x3f (0x7fdad502771f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 26%|██▌       | 10325/39434 [00:00<00:00, 92897.85it/s] 48%|████▊     | 18892/39434 [00:00<00:00, 90298.74it/s] 90%|█████████ | 35607/39434 [00:00<00:00, 104745.68it/s]100%|██████████| 39434/39434 [00:00<00:00, 117575.77it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 196.00 MiB (GPU 0; 10.76 GiB total capacity; 1.04 GiB already allocated; 88.44 MiB free; 1.23 GiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7f1a515861e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7f1a517dc64b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7f1a517dd464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7f1a517ddaa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7f1810ad090e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7f180ef0a949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7f180ef24777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7f1a52ad8c7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7f1a52ad8f97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7f1a52be3a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7f1a528734f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7f1a52875166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7f1a5287565d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7f1a5287580a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7f1a525b2eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7f180eef9b40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7f1a52445530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f1a52c2d81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7f1a52b7e82b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0x2f16968 (0x7f1a54905968 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: <unknown function> + 0xa56530 (0x7f1a52445530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f1a52c2d81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: at::Tensor::mul(at::Tensor const&) const + 0x4b (0x7f1a52d13d6b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: torch::autograd::generated::MulBackward0::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x235 (0x7f1a5471cda5 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x3375bb7 (0x7f1a54d64bb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7f1a54d60400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7f1a54d60fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7f1a54d59119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7f1a624f94ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #29: <unknown function> + 0xbd6df (0x7f1a636556df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #30: <unknown function> + 0x76db (0x7f1a676b06db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #31: clone + 0x3f (0x7f1a679e971f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.18520116806030273 seconds.
Run epoch 1
Epoch 1 ends in 0.23713016510009766 seconds.
39434 sentences created
mode 1: time used = 0.39058971405029297
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 38%|███▊      | 14927/39434 [00:00<00:00, 148308.36it/s] 63%|██████▎   | 24797/39434 [00:00<00:00, 128873.79it/s] 82%|████████▏ | 32150/39434 [00:00<00:00, 105132.36it/s]100%|██████████| 39434/39434 [00:00<00:00, 111094.89it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 13.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2120800018310547 seconds.
Run epoch 1
Epoch 1 ends in 0.3077657222747803 seconds.
39434 sentences created
mode 1: time used = 0.43529438972473145
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 131.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 27%|██▋       | 10518/39434 [00:00<00:00, 105173.58it/s] 49%|████▊     | 19192/39434 [00:00<00:00, 98867.12it/s]  66%|██████▌   | 25838/39434 [00:00<00:00, 86246.27it/s] 93%|█████████▎| 36754/39434 [00:00<00:00, 92040.63it/s]100%|██████████| 39434/39434 [00:00<00:00, 92454.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12992/552076 [00:00<00:04, 129912.38it/s]  5%|▌         | 29254/552076 [00:00<00:03, 138254.43it/s]  7%|▋         | 36861/552076 [00:00<00:04, 105296.20it/s] 10%|█         | 55343/552076 [00:00<00:04, 120900.91it/s] 12%|█▏        | 66036/552076 [00:00<00:05, 91460.46it/s]  15%|█▍        | 81565/552076 [00:00<00:04, 104324.70it/s] 17%|█▋        | 92688/552076 [00:00<00:05, 90778.03it/s]  19%|█▉        | 107061/552076 [00:00<00:04, 102056.89it/s] 22%|██▏       | 120305/552076 [00:01<00:03, 109599.60it/s] 25%|██▍       | 137106/552076 [00:01<00:03, 122361.52it/s] 28%|██▊       | 156566/552076 [00:01<00:02, 137694.89it/s] 31%|███       | 171729/552076 [00:01<00:02, 135418.55it/s] 34%|███▍      | 188783/552076 [00:01<00:02, 144335.54it/s] 38%|███▊      | 207671/552076 [00:01<00:02, 155324.14it/s] 41%|████      | 226305/552076 [00:01<00:01, 163485.88it/s] 44%|████▍     | 245367/552076 [00:01<00:01, 170778.32it/s] 48%|████▊     | 263345/552076 [00:01<00:01, 173381.46it/s] 51%|█████▏    | 283647/552076 [00:01<00:01, 181321.88it/s] 55%|█████▍    | 302162/552076 [00:02<00:01, 177560.46it/s] 58%|█████▊    | 321965/552076 [00:02<00:01, 183240.28it/s] 62%|██████▏   | 340535/552076 [00:02<00:01, 183916.51it/s] 65%|██████▌   | 359099/552076 [00:02<00:01, 155232.90it/s] 68%|██████▊   | 375509/552076 [00:02<00:01, 157579.90it/s] 71%|███████▏  | 394056/552076 [00:02<00:00, 165023.05it/s] 75%|███████▍  | 412145/552076 [00:02<00:00, 168563.38it/s] 78%|███████▊  | 429393/552076 [00:02<00:00, 154638.93it/s] 81%|████████▏ | 448881/552076 [00:02<00:00, 164849.08it/s] 85%|████████▍ | 466547/552076 [00:03<00:00, 168221.01it/s] 88%|████████▊ | 486884/552076 [00:03<00:00, 177419.48it/s] 92%|█████████▏| 506192/552076 [00:03<00:00, 181843.19it/s] 95%|█████████▌| 525942/552076 [00:03<00:00, 186272.40it/s] 99%|█████████▊| 544816/552076 [00:03<00:00, 167121.21it/s]100%|██████████| 552076/552076 [00:03<00:00, 154637.76it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 870.25 MiB already allocated; 118.44 MiB free; 884.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2495131492614746 seconds.
Run epoch 1
Epoch 1 ends in 0.3169107437133789 seconds.
39434 sentences created
mode 1: time used = 0.5719592571258545
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 44%|████▍     | 17332/39434 [00:00<00:00, 173318.10it/s] 84%|████████▍ | 33093/39434 [00:00<00:00, 168284.06it/s]100%|██████████| 39434/39434 [00:00<00:00, 160141.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5730/552076 [00:00<00:10, 53329.25it/s]  3%|▎         | 14381/552076 [00:00<00:08, 60263.26it/s]  5%|▍         | 27438/552076 [00:00<00:07, 71353.86it/s]  6%|▌         | 33791/552076 [00:00<00:08, 64731.07it/s]  9%|▊         | 47265/552076 [00:00<00:06, 76684.04it/s] 11%|█▏        | 63306/552076 [00:00<00:05, 90920.86it/s] 14%|█▍        | 78587/552076 [00:00<00:04, 103494.39it/s] 16%|█▋        | 90781/552076 [00:00<00:04, 108412.85it/s] 19%|█▊        | 102844/552076 [00:00<00:04, 100395.88it/s] 21%|██        | 113857/552076 [00:01<00:04, 99395.95it/s]  23%|██▎       | 124480/552076 [00:01<00:04, 93664.35it/s] 24%|██▍       | 134393/552076 [00:01<00:04, 93056.38it/s] 26%|██▌       | 144082/552076 [00:01<00:04, 86630.94it/s] 30%|██▉       | 162986/552076 [00:01<00:03, 103441.85it/s] 32%|███▏      | 178098/552076 [00:01<00:03, 114254.44it/s] 35%|███▍      | 191022/552076 [00:01<00:03, 114657.81it/s] 38%|███▊      | 209342/552076 [00:01<00:02, 129153.21it/s] 41%|████▏     | 228670/552076 [00:01<00:02, 143429.27it/s] 45%|████▍     | 247664/552076 [00:02<00:01, 154800.82it/s] 48%|████▊     | 266463/552076 [00:02<00:01, 163456.68it/s] 51%|█████▏    | 283823/552076 [00:02<00:01, 148170.73it/s] 56%|█████▌    | 307203/552076 [00:02<00:01, 166459.87it/s] 59%|█████▉    | 326859/552076 [00:02<00:01, 174473.71it/s] 63%|██████▎   | 346687/552076 [00:02<00:01, 180992.86it/s] 66%|██████▋   | 366664/552076 [00:02<00:00, 186243.79it/s] 70%|██████▉   | 386437/552076 [00:02<00:00, 189544.76it/s] 74%|███████▍  | 407557/552076 [00:02<00:00, 195559.65it/s] 78%|███████▊  | 428067/552076 [00:03<00:00, 198324.56it/s] 81%|████████  | 448163/552076 [00:03<00:00, 179072.97it/s] 85%|████████▍ | 466611/552076 [00:03<00:00, 173860.46it/s] 88%|████████▊ | 484409/552076 [00:03<00:00, 130808.12it/s] 91%|█████████ | 503158/552076 [00:03<00:00, 143854.04it/s] 95%|█████████▍| 523261/552076 [00:03<00:00, 157272.90it/s] 98%|█████████▊| 543334/552076 [00:03<00:00, 168195.19it/s]100%|██████████| 552076/552076 [00:03<00:00, 144661.24it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 870.25 MiB already allocated; 387.44 MiB free; 884.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.17647504806518555 seconds.
Run epoch 1
Epoch 1 ends in 0.2898855209350586 seconds.
39434 sentences created
mode 1: time used = 0.36086153984069824
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 174.00 MiB (GPU 0; 10.76 GiB total capacity; 120.03 MiB already allocated; 130.44 MiB free; 124.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
