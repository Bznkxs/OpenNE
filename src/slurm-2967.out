[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3048.44it/s]100%|██████████| 1000/1000 [00:00<00:00, 4275.53it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68424; Allocated: 489472; Reserved: 6291456; time used = 35.40777945518494s
epoch 10: train_loss: 0.64612; Allocated: 489472; Reserved: 6291456; time used = 35.67070960998535s
epoch 15: train_loss: 0.51726; Allocated: 489472; Reserved: 6291456; time used = 35.113327741622925s
epoch 20: train_loss: 0.69620; Allocated: 489472; Reserved: 6291456; time used = 34.95535922050476s
epoch 25: train_loss: 0.68995; Allocated: 489472; Reserved: 6291456; time used = 35.219780683517456s
epoch 30: train_loss: 0.66783; Allocated: 489472; Reserved: 8388608; time used = 35.07603716850281s
epoch 35: train_loss: 0.55271; Allocated: 489472; Reserved: 6291456; time used = 35.407461643218994s
epoch 40: train_loss: 0.30180; Allocated: 489472; Reserved: 8388608; time used = 35.00636076927185s
epoch 45: train_loss: 0.20948; Allocated: 489472; Reserved: 6291456; time used = 35.13440299034119s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 334.4528076648712.
Training classifier using 80.00% nodes...
{'micro': 0.62, 'macro': 0.6175523349436393, 'samples': 0.62, 'weighted': 0.6169404186795491, 'accuracy': 0.62}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2454.15it/s] 83%|████████▎ | 1653/2000 [00:00<00:00, 3191.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 5404.46it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.6025428771972656s
epoch 10: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.509296417236328s
epoch 15: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.524731159210205s
epoch 20: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.549980640411377s
epoch 25: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5093417167663574s
epoch 30: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5464298725128174s
epoch 35: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.549638271331787s
epoch 40: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5579798221588135s
epoch 45: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4956822395324707s
epoch 50: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.454246759414673s
epoch 55: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.493734836578369s
epoch 60: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5194060802459717s
epoch 65: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4732463359832764s
epoch 70: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.519676923751831s
epoch 75: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.548051357269287s
epoch 80: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.531764030456543s
epoch 85: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4615938663482666s
epoch 90: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4893887042999268s
epoch 95: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5299174785614014s
epoch 100: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.552737236022949s
epoch 105: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5630998611450195s
epoch 110: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5578160285949707s
epoch 115: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5581588745117188s
epoch 120: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5348150730133057s
epoch 125: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.560910224914551s
epoch 130: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.532451629638672s
epoch 135: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4956400394439697s
epoch 140: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.525975227355957s
epoch 145: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.530181407928467s
epoch 150: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.50950026512146s
epoch 155: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5354936122894287s
epoch 160: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.528834342956543s
epoch 165: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.489739418029785s
epoch 170: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.492619037628174s
epoch 175: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5193734169006348s
epoch 180: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5444095134735107s
epoch 185: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5159223079681396s
epoch 190: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5504486560821533s
epoch 195: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5444459915161133s
epoch 200: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.514483690261841s
epoch 205: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5153393745422363s
epoch 210: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.550891876220703s
epoch 215: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5151712894439697s
epoch 220: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5260322093963623s
epoch 225: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5181541442871094s
epoch 230: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5071537494659424s
epoch 235: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.539942741394043s
epoch 240: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5099384784698486s
epoch 245: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5652525424957275s
epoch 250: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.464254379272461s
epoch 255: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5450706481933594s
epoch 260: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5244719982147217s
epoch 265: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5053305625915527s
epoch 270: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5102851390838623s
epoch 275: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5848426818847656s
epoch 280: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5128281116485596s
epoch 285: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.57121205329895s
epoch 290: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4896323680877686s
epoch 295: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.535531997680664s
epoch 300: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.527575731277466s
epoch 305: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5000782012939453s
epoch 310: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5190482139587402s
epoch 315: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.525820255279541s
epoch 320: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5626108646392822s
epoch 325: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5009632110595703s
epoch 330: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5582120418548584s
epoch 335: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5167505741119385s
epoch 340: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4905319213867188s
epoch 345: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5369937419891357s
epoch 350: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.553307294845581s
epoch 355: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5243308544158936s
epoch 360: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4897844791412354s
epoch 365: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.513343095779419s
epoch 370: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5320684909820557s
epoch 375: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5134546756744385s
epoch 380: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5409603118896484s
epoch 385: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.461995840072632s
epoch 390: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5293538570404053s
epoch 395: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.53544282913208s
epoch 400: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4946067333221436s
epoch 405: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4978833198547363s
epoch 410: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5244030952453613s
epoch 415: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.551255464553833s
epoch 420: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.535662889480591s
epoch 425: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5200672149658203s
epoch 430: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5061821937561035s
epoch 435: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5385453701019287s
epoch 440: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5242233276367188s
epoch 445: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5153512954711914s
epoch 450: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.499204158782959s
epoch 455: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.477323055267334s
epoch 460: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5002689361572266s
epoch 465: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5166878700256348s
epoch 470: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.548677682876587s
epoch 475: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.550459623336792s
epoch 480: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.4937069416046143s
epoch 485: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.515691041946411s
epoch 490: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.5221192836761475s
epoch 495: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.515516757965088s
epoch 500: train_loss: 0.69315; Allocated: 17670144; Reserved: 297795584; time used = 3.513758659362793s
Finished training. Time used = 361.48580741882324.
Training classifier using 20.00% nodes...
{'micro': 0.6982002768804799, 'macro': 0.6822382958117101, 'samples': 0.6982002768804799, 'weighted': 0.695123364658601, 'accuracy': 0.6982002768804799}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.39758; Allocated: 40902144; Reserved: 62914560; time used = 2.5977373123168945s
epoch 10: train_loss: 0.30506; Allocated: 40902144; Reserved: 62914560; time used = 2.7904858589172363s
epoch 15: train_loss: 0.11055; Allocated: 40902144; Reserved: 62914560; time used = 2.5497894287109375s
epoch 20: train_loss: 0.09740; Allocated: 40902144; Reserved: 62914560; time used = 2.508164405822754s
epoch 25: train_loss: 0.04117; Allocated: 40902144; Reserved: 62914560; time used = 2.5065996646881104s
epoch 30: train_loss: 0.03308; Allocated: 40902144; Reserved: 62914560; time used = 2.558241128921509s
epoch 35: train_loss: 0.04379; Allocated: 40902144; Reserved: 62914560; time used = 2.661545515060425s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.313218355178833.
Training classifier using 20.00% nodes...
{'micro': 0.7057816660327121, 'macro': 0.6908575931673774, 'samples': 0.7057816660327121, 'weighted': 0.7004190560497454, 'accuracy': 0.7057816660327121}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3051.29it/s]100%|██████████| 1500/1500 [00:00<00:00, 5528.90it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69312; Allocated: 641536; Reserved: 8388608; time used = 35.80451416969299s
epoch 10: train_loss: 0.69276; Allocated: 641536; Reserved: 8388608; time used = 35.89376640319824s
epoch 15: train_loss: 0.69306; Allocated: 641536; Reserved: 8388608; time used = 35.86168050765991s
epoch 20: train_loss: 0.69311; Allocated: 641536; Reserved: 8388608; time used = 35.44601345062256s
epoch 25: train_loss: 0.69301; Allocated: 641536; Reserved: 8388608; time used = 35.34862780570984s
epoch 30: train_loss: 0.68993; Allocated: 641536; Reserved: 8388608; time used = 35.64578676223755s
epoch 35: train_loss: 0.56917; Allocated: 641536; Reserved: 8388608; time used = 36.54756021499634s
epoch 40: train_loss: 0.69070; Allocated: 641536; Reserved: 8388608; time used = 35.595391035079956s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 296.9862973690033.
Training classifier using 80.00% nodes...
{'micro': 0.3433333333333333, 'macro': 0.2536280866024031, 'samples': 0.3433333333333333, 'weighted': 0.25078114876623575, 'accuracy': 0.3433333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.47465; Allocated: 782336; Reserved: 4194304; time used = 1.0234951972961426s
epoch 10: train_loss: 0.44049; Allocated: 782336; Reserved: 4194304; time used = 1.002289056777954s
epoch 15: train_loss: 0.42721; Allocated: 782336; Reserved: 4194304; time used = 1.0088775157928467s
epoch 20: train_loss: 0.43087; Allocated: 782336; Reserved: 4194304; time used = 0.9913020133972168s
epoch 25: train_loss: 0.42177; Allocated: 782336; Reserved: 4194304; time used = 0.9760808944702148s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.445425987243652.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.3034870624542236s
epoch 10: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2134783267974854s
epoch 15: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.227745294570923s
epoch 20: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.210801839828491s
epoch 25: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.198869228363037s
epoch 30: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.156313896179199s
epoch 35: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2052395343780518s
epoch 40: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2370753288269043s
epoch 45: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2451364994049072s
epoch 50: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2689597606658936s
epoch 55: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.254318952560425s
epoch 60: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.169260263442993s
epoch 65: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1805896759033203s
epoch 70: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.215200424194336s
epoch 75: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2011430263519287s
epoch 80: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.187415599822998s
epoch 85: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.171679735183716s
epoch 90: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2608962059020996s
epoch 95: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1960020065307617s
epoch 100: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.199667453765869s
epoch 105: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.188889741897583s
epoch 110: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2033474445343018s
epoch 115: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1844358444213867s
epoch 120: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.189033269882202s
epoch 125: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2217211723327637s
epoch 130: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2255215644836426s
epoch 135: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2598907947540283s
epoch 140: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.213249683380127s
epoch 145: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1980066299438477s
epoch 150: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2518608570098877s
epoch 155: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.207749128341675s
epoch 160: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.245755910873413s
epoch 165: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1760780811309814s
epoch 170: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.222086191177368s
epoch 175: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2181568145751953s
epoch 180: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.205305337905884s
epoch 185: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.202423334121704s
epoch 190: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.243375539779663s
epoch 195: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.242708444595337s
epoch 200: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2151942253112793s
epoch 205: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1730990409851074s
epoch 210: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2217159271240234s
epoch 215: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2254114151000977s
epoch 220: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2068357467651367s
epoch 225: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.218956470489502s
epoch 230: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.247904062271118s
epoch 235: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1997931003570557s
epoch 240: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1933507919311523s
epoch 245: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2126169204711914s
epoch 250: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2416279315948486s
epoch 255: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.237886667251587s
epoch 260: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.182868719100952s
epoch 265: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2363226413726807s
epoch 270: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.260145425796509s
epoch 275: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.268650770187378s
epoch 280: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.206266164779663s
epoch 285: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2336044311523438s
epoch 290: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.211285352706909s
epoch 295: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.259122848510742s
epoch 300: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2475857734680176s
epoch 305: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.282783269882202s
epoch 310: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2491395473480225s
epoch 315: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1751582622528076s
epoch 320: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2133471965789795s
epoch 325: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2574005126953125s
epoch 330: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.221083641052246s
epoch 335: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2378556728363037s
epoch 340: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.23768949508667s
epoch 345: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.241025686264038s
epoch 350: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2223384380340576s
epoch 355: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.24526309967041s
epoch 360: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2316110134124756s
epoch 365: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.244753360748291s
epoch 370: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.20890212059021s
epoch 375: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.184067487716675s
epoch 380: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.271148920059204s
epoch 385: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.196465015411377s
epoch 390: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1806108951568604s
epoch 395: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.223773241043091s
epoch 400: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.231792688369751s
epoch 405: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2199952602386475s
epoch 410: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1972789764404297s
epoch 415: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1926589012145996s
epoch 420: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1921396255493164s
epoch 425: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2569355964660645s
epoch 430: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2689242362976074s
epoch 435: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2076141834259033s
epoch 440: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.17191219329834s
epoch 445: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2221946716308594s
epoch 450: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2670071125030518s
epoch 455: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.261993408203125s
epoch 460: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2744216918945312s
epoch 465: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.223182439804077s
epoch 470: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2360641956329346s
epoch 475: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.235645055770874s
epoch 480: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.1293888092041016s
epoch 485: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.226651191711426s
epoch 490: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.214765787124634s
epoch 495: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.217541217803955s
epoch 500: train_loss: 0.69315; Allocated: 17610240; Reserved: 293601280; time used = 3.2483696937561035s
Finished training. Time used = 331.2565059661865.
Training classifier using 20.00% nodes...
{'micro': 0.7037378864790033, 'macro': 0.6822867385910784, 'samples': 0.7037378864790033, 'weighted': 0.7016830285784894, 'accuracy': 0.7037378864790033}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.38089; Allocated: 53480960; Reserved: 109051904; time used = 0.9096059799194336s
epoch 10: train_loss: 0.17877; Allocated: 53480960; Reserved: 109051904; time used = 0.9650073051452637s
epoch 15: train_loss: 0.07372; Allocated: 53480960; Reserved: 109051904; time used = 0.9565415382385254s
epoch 20: train_loss: 0.03300; Allocated: 53480960; Reserved: 109051904; time used = 0.9669694900512695s
epoch 25: train_loss: 0.02468; Allocated: 53480960; Reserved: 109051904; time used = 0.9014661312103271s
epoch 30: train_loss: 0.00497; Allocated: 53480960; Reserved: 109051904; time used = 0.8863554000854492s
epoch 35: train_loss: 0.01298; Allocated: 53480960; Reserved: 109051904; time used = 0.9498922824859619s
epoch 40: train_loss: 0.00700; Allocated: 53480960; Reserved: 109051904; time used = 0.9514949321746826s
epoch 45: train_loss: 0.00642; Allocated: 53480960; Reserved: 109051904; time used = 0.9436581134796143s
epoch 50: train_loss: 0.00036; Allocated: 53480960; Reserved: 109051904; time used = 1.1076359748840332s
epoch 55: train_loss: 0.00052; Allocated: 53480960; Reserved: 109051904; time used = 0.952193021774292s
epoch 60: train_loss: 0.00157; Allocated: 53480960; Reserved: 109051904; time used = 0.9463725090026855s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.554289817810059.
Training classifier using 20.00% nodes...
{'micro': 0.6386617100371748, 'macro': 0.5556597599004015, 'samples': 0.6453794139744553, 'weighted': 0.6154774558371983, 'accuracy': 0.6453794139744553}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.44744; Allocated: 17401344; Reserved: 41943040; time used = 4.7863709926605225s
epoch 10: train_loss: 0.27578; Allocated: 17401344; Reserved: 41943040; time used = 5.042501211166382s
epoch 15: train_loss: 0.20203; Allocated: 17401344; Reserved: 41943040; time used = 5.1449620723724365s
epoch 20: train_loss: 0.11976; Allocated: 17401344; Reserved: 41943040; time used = 5.074841499328613s
epoch 25: train_loss: 0.09852; Allocated: 17401344; Reserved: 41943040; time used = 4.963867902755737s
epoch 30: train_loss: 0.05130; Allocated: 17401344; Reserved: 41943040; time used = 5.061100244522095s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.57393455505371.
Training classifier using 20.00% nodes...
{'micro': 0.6788186432856483, 'macro': 0.6017324972097156, 'samples': 0.6788186432856483, 'weighted': 0.6539035988054464, 'accuracy': 0.6788186432856483}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3047.28it/s]100%|██████████| 1500/1500 [00:00<00:00, 5529.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 6.53845; Allocated: 427008; Reserved: 4194304; time used = 214.7737808227539s
epoch 10: train_loss: 2.95075; Allocated: 427008; Reserved: 6291456; time used = 216.08727025985718s
epoch 15: train_loss: 1.88105; Allocated: 427008; Reserved: 6291456; time used = 213.08474254608154s
epoch 20: train_loss: 1.55228; Allocated: 427008; Reserved: 8388608; time used = 212.47400999069214s
epoch 25: train_loss: 1.31513; Allocated: 427008; Reserved: 6291456; time used = 212.23697972297668s
epoch 30: train_loss: 1.28499; Allocated: 427008; Reserved: 6291456; time used = 211.93389463424683s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1454.3012228012085.
Training classifier using 80.00% nodes...
{'micro': 0.5066666666666667, 'macro': 0.44062727286437714, 'samples': 0.5066666666666667, 'weighted': 0.43096777671234404, 'accuracy': 0.5066666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2463.89it/s]100%|██████████| 1500/1500 [00:00<00:00, 4724.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.39039; Allocated: 551424; Reserved: 4194304; time used = 13.09392499923706s
epoch 10: train_loss: 1.38841; Allocated: 551424; Reserved: 6291456; time used = 12.819967985153198s
epoch 15: train_loss: 1.38661; Allocated: 551424; Reserved: 8388608; time used = 12.716205596923828s
epoch 20: train_loss: 1.38900; Allocated: 551424; Reserved: 8388608; time used = 12.944015502929688s
epoch 25: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 12.74312949180603s
epoch 30: train_loss: 1.38641; Allocated: 551424; Reserved: 6291456; time used = 12.793362379074097s
epoch 35: train_loss: 1.38630; Allocated: 551424; Reserved: 4194304; time used = 12.928433895111084s
epoch 40: train_loss: 1.38631; Allocated: 551424; Reserved: 6291456; time used = 12.76220703125s
epoch 45: train_loss: 1.38635; Allocated: 551424; Reserved: 6291456; time used = 12.811163425445557s
epoch 50: train_loss: 1.38630; Allocated: 551424; Reserved: 4194304; time used = 12.636282444000244s
epoch 55: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 12.64412260055542s
epoch 60: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 12.921961784362793s
epoch 65: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 12.860841035842896s
epoch 70: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 12.75287938117981s
epoch 75: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 12.65019702911377s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 198.23602604866028.
Training classifier using 80.00% nodes...
{'micro': 0.33666666666666667, 'macro': 0.2696989358221453, 'samples': 0.33666666666666667, 'weighted': 0.2616079677474809, 'accuracy': 0.33666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2458.56it/s]100%|██████████| 1500/1500 [00:00<00:00, 4709.27it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68981; Allocated: 491008; Reserved: 8388608; time used = 12.648729801177979s
epoch 10: train_loss: 0.67550; Allocated: 491008; Reserved: 8388608; time used = 12.732707500457764s
epoch 15: train_loss: 0.60560; Allocated: 491008; Reserved: 8388608; time used = 12.695472478866577s
epoch 20: train_loss: 0.50157; Allocated: 491008; Reserved: 10485760; time used = 12.76525354385376s
epoch 25: train_loss: 0.35024; Allocated: 491008; Reserved: 8388608; time used = 12.648085832595825s
epoch 30: train_loss: 0.22630; Allocated: 491008; Reserved: 10485760; time used = 12.653374671936035s
epoch 35: train_loss: 0.26389; Allocated: 491008; Reserved: 8388608; time used = 12.244598388671875s
epoch 40: train_loss: 0.29527; Allocated: 491008; Reserved: 8388608; time used = 12.55819320678711s
epoch 45: train_loss: 0.23708; Allocated: 491008; Reserved: 8388608; time used = 12.498213768005371s
epoch 50: train_loss: 0.34077; Allocated: 491008; Reserved: 8388608; time used = 12.405461072921753s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 129.36788368225098.
Training classifier using 80.00% nodes...
{'micro': 0.4933333333333334, 'macro': 0.3993900939452068, 'samples': 0.49333333333333335, 'weighted': 0.3874083911268506, 'accuracy': 0.49333333333333335}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.34767; Allocated: 40914432; Reserved: 65011712; time used = 3.742687702178955s
epoch 10: train_loss: 0.21049; Allocated: 40914432; Reserved: 65011712; time used = 3.963151454925537s
epoch 15: train_loss: 0.15154; Allocated: 40914432; Reserved: 65011712; time used = 3.797179698944092s
epoch 20: train_loss: 0.10188; Allocated: 40914432; Reserved: 65011712; time used = 3.6594481468200684s
epoch 25: train_loss: 0.06402; Allocated: 40914432; Reserved: 65011712; time used = 3.879533290863037s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.4888916015625.
Training classifier using 20.00% nodes...
{'micro': 0.7686065677697478, 'macro': 0.7609896032874565, 'samples': 0.7686065677697477, 'weighted': 0.7676371488565897, 'accuracy': 0.7686065677697477}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 168.22528; Allocated: 17754624; Reserved: 65011712; time used = 0.38340330123901367s
epoch 10: train_loss: 43.43901; Allocated: 17754624; Reserved: 65011712; time used = 0.3737318515777588s
epoch 15: train_loss: 165.82347; Allocated: 17754624; Reserved: 65011712; time used = 0.37762999534606934s
epoch 20: train_loss: 21.49021; Allocated: 17754624; Reserved: 65011712; time used = 0.39469170570373535s
epoch 25: train_loss: 13.51024; Allocated: 17754624; Reserved: 65011712; time used = 0.3876986503601074s
epoch 30: train_loss: 5.66025; Allocated: 17754624; Reserved: 65011712; time used = 0.3964226245880127s
epoch 35: train_loss: 12.55967; Allocated: 17754624; Reserved: 65011712; time used = 0.396817684173584s
epoch 40: train_loss: 1.89233; Allocated: 17754624; Reserved: 65011712; time used = 0.4140598773956299s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.840458869934082.
Training classifier using 20.00% nodes...
{'micro': 0.6248269497000462, 'macro': 0.588877619295496, 'samples': 0.6248269497000462, 'weighted': 0.6100718585802715, 'accuracy': 0.6248269497000462}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3019.85it/s]100%|██████████| 1500/1500 [00:00<00:00, 5491.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1071.47874; Allocated: 772096; Reserved: 14680064; time used = 7.867594957351685s
epoch 10: train_loss: 1841.23383; Allocated: 772096; Reserved: 14680064; time used = 7.489680051803589s
epoch 15: train_loss: 436.09891; Allocated: 772096; Reserved: 14680064; time used = 7.53593373298645s
epoch 20: train_loss: 56.51915; Allocated: 772096; Reserved: 14680064; time used = 7.5211334228515625s
epoch 25: train_loss: 210.37202; Allocated: 772096; Reserved: 14680064; time used = 7.728450775146484s
epoch 30: train_loss: 21.01312; Allocated: 772096; Reserved: 14680064; time used = 7.749310731887817s
epoch 35: train_loss: 22.60839; Allocated: 772096; Reserved: 14680064; time used = 7.683600902557373s
epoch 40: train_loss: 162.68300; Allocated: 772096; Reserved: 14680064; time used = 7.621991395950317s
epoch 45: train_loss: 208.76760; Allocated: 772096; Reserved: 14680064; time used = 7.824617385864258s
epoch 50: train_loss: 139.93126; Allocated: 772096; Reserved: 14680064; time used = 7.478747367858887s
epoch 55: train_loss: 378.66433; Allocated: 772096; Reserved: 14680064; time used = 7.582837343215942s
epoch 60: train_loss: 41.20117; Allocated: 772096; Reserved: 14680064; time used = 7.636022329330444s
epoch 65: train_loss: 102.60509; Allocated: 772096; Reserved: 14680064; time used = 7.584876775741577s
epoch 70: train_loss: 40.03335; Allocated: 772096; Reserved: 14680064; time used = 7.489992618560791s
epoch 75: train_loss: 45.01392; Allocated: 772096; Reserved: 14680064; time used = 7.3894829750061035s
epoch 80: train_loss: 1.41839; Allocated: 772096; Reserved: 14680064; time used = 7.984497308731079s
epoch 85: train_loss: 1.39965; Allocated: 772096; Reserved: 14680064; time used = 7.408717632293701s
epoch 90: train_loss: 1.39131; Allocated: 772096; Reserved: 14680064; time used = 7.4996702671051025s
epoch 95: train_loss: 1.39071; Allocated: 772096; Reserved: 14680064; time used = 7.800747394561768s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 149.98367476463318.
Training classifier using 80.00% nodes...
{'micro': 0.44333333333333336, 'macro': 0.4200640831583806, 'samples': 0.44333333333333336, 'weighted': 0.41551585193879703, 'accuracy': 0.44333333333333336}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2499.31it/s]100%|██████████| 1500/1500 [00:00<00:00, 4779.18it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69298; Allocated: 971264; Reserved: 20971520; time used = 12.813092947006226s
epoch 10: train_loss: 0.69376; Allocated: 971264; Reserved: 20971520; time used = 12.56056809425354s
epoch 15: train_loss: 0.69893; Allocated: 971264; Reserved: 20971520; time used = 12.526521682739258s
epoch 20: train_loss: 0.69218; Allocated: 971264; Reserved: 20971520; time used = 12.529014348983765s
epoch 25: train_loss: 0.69415; Allocated: 971264; Reserved: 20971520; time used = 12.803154468536377s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 71.83959722518921.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 15.53602; Allocated: 17479680; Reserved: 41943040; time used = 4.93766713142395s
epoch 10: train_loss: 3.79121; Allocated: 17479680; Reserved: 41943040; time used = 5.044694662094116s
epoch 15: train_loss: 1.49763; Allocated: 17479680; Reserved: 41943040; time used = 4.875384569168091s
epoch 20: train_loss: 1.47630; Allocated: 17479680; Reserved: 41943040; time used = 5.0893943309783936s
epoch 25: train_loss: 1.39772; Allocated: 17479680; Reserved: 41943040; time used = 4.9231579303741455s
epoch 30: train_loss: 1.39167; Allocated: 17479680; Reserved: 41943040; time used = 4.954868316650391s
epoch 35: train_loss: 1.38702; Allocated: 17479680; Reserved: 41943040; time used = 4.881735563278198s
epoch 40: train_loss: 1.38249; Allocated: 17479680; Reserved: 41943040; time used = 5.028496980667114s
epoch 45: train_loss: 1.37801; Allocated: 17479680; Reserved: 41943040; time used = 4.904997110366821s
epoch 50: train_loss: 1.36429; Allocated: 17479680; Reserved: 41943040; time used = 5.13821268081665s
epoch 55: train_loss: 1.35911; Allocated: 17479680; Reserved: 41943040; time used = 4.945525884628296s
epoch 60: train_loss: 1.34993; Allocated: 17479680; Reserved: 41943040; time used = 4.874968767166138s
epoch 65: train_loss: 1.34123; Allocated: 17479680; Reserved: 41943040; time used = 5.071029901504517s
epoch 70: train_loss: 1.32503; Allocated: 17479680; Reserved: 41943040; time used = 4.909399509429932s
epoch 75: train_loss: 1.32676; Allocated: 17479680; Reserved: 41943040; time used = 5.132963418960571s
epoch 80: train_loss: 1.31306; Allocated: 17479680; Reserved: 41943040; time used = 5.022246360778809s
epoch 85: train_loss: 1.30952; Allocated: 17479680; Reserved: 41943040; time used = 5.101840257644653s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 88.22041249275208.
Training classifier using 20.00% nodes...
{'micro': 0.3133364097831103, 'macro': 0.10839599734500635, 'samples': 0.3133364097831103, 'weighted': 0.18451090134450876, 'accuracy': 0.3133364097831103}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.31634; Allocated: 40828928; Reserved: 62914560; time used = 2.6040291786193848s
epoch 10: train_loss: 1.21188; Allocated: 40828928; Reserved: 62914560; time used = 2.744680881500244s
epoch 15: train_loss: 1.13392; Allocated: 40828928; Reserved: 62914560; time used = 2.4254016876220703s
epoch 20: train_loss: 1.09946; Allocated: 40828928; Reserved: 62914560; time used = 2.7903940677642822s
epoch 25: train_loss: 1.05572; Allocated: 40828928; Reserved: 62914560; time used = 2.743967294692993s
epoch 30: train_loss: 1.06197; Allocated: 40828928; Reserved: 62914560; time used = 2.9364004135131836s
epoch 35: train_loss: 1.06501; Allocated: 40828928; Reserved: 62914560; time used = 2.5651936531066895s
epoch 40: train_loss: 1.24385; Allocated: 40828928; Reserved: 62914560; time used = 2.447324752807617s
epoch 45: train_loss: 1.16004; Allocated: 40828928; Reserved: 62914560; time used = 2.8116087913513184s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.052114725112915.
Training classifier using 20.00% nodes...
{'micro': 0.7450868517814123, 'macro': 0.7506775930599209, 'samples': 0.7450868517814124, 'weighted': 0.7450377245127788, 'accuracy': 0.7450868517814124}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42905; Allocated: 874496; Reserved: 6291456; time used = 6.783276796340942s
epoch 10: train_loss: 1.39575; Allocated: 874496; Reserved: 6291456; time used = 6.629270792007446s
epoch 15: train_loss: 1.36649; Allocated: 874496; Reserved: 6291456; time used = 6.502732753753662s
epoch 20: train_loss: 1.37010; Allocated: 874496; Reserved: 6291456; time used = 6.586718559265137s
epoch 25: train_loss: 1.36310; Allocated: 874496; Reserved: 6291456; time used = 6.5460264682769775s
epoch 30: train_loss: 1.36859; Allocated: 874496; Reserved: 6291456; time used = 6.679380416870117s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 43.29959011077881.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.5777233782129743, 'samples': 0.6376811594202898, 'weighted': 0.5892537207528425, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.47610; Allocated: 41216000; Reserved: 62914560; time used = 4.211988687515259s
epoch 10: train_loss: 0.40374; Allocated: 41216000; Reserved: 62914560; time used = 3.9438912868499756s
epoch 15: train_loss: 0.37528; Allocated: 41216000; Reserved: 62914560; time used = 4.007399559020996s
epoch 20: train_loss: 0.37838; Allocated: 41216000; Reserved: 62914560; time used = 3.857198715209961s
epoch 25: train_loss: 0.38542; Allocated: 41216000; Reserved: 62914560; time used = 3.9344377517700195s
epoch 30: train_loss: 0.15249; Allocated: 41216000; Reserved: 65011712; time used = 3.970932960510254s
epoch 35: train_loss: 0.09078; Allocated: 41216000; Reserved: 62914560; time used = 3.8095996379852295s
epoch 40: train_loss: 0.09777; Allocated: 41216000; Reserved: 62914560; time used = 3.9430782794952393s
epoch 45: train_loss: 0.01809; Allocated: 41216000; Reserved: 62914560; time used = 3.911661148071289s
epoch 50: train_loss: 0.00834; Allocated: 41216000; Reserved: 62914560; time used = 3.972430944442749s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.815290212631226.
Training classifier using 20.00% nodes...
{'micro': 0.7295549638645873, 'macro': 0.7296287113970771, 'samples': 0.7295549638645873, 'weighted': 0.7284116220258999, 'accuracy': 0.7295549638645873}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3054.14it/s]100%|██████████| 1000/1000 [00:00<00:00, 4387.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.303478956222534s
epoch 10: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.261029481887817s
epoch 15: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.368819952011108s
epoch 20: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.11702013015747s
epoch 25: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.220801830291748s
epoch 30: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.384251594543457s
epoch 35: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.212469816207886s
epoch 40: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.678730964660645s
epoch 45: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.509172201156616s
epoch 50: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.14716100692749s
epoch 55: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.918245792388916s
epoch 60: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.069027423858643s
epoch 65: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.161641597747803s
epoch 70: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.135428190231323s
epoch 75: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.197164535522461s
epoch 80: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.350114345550537s
epoch 85: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.909627676010132s
epoch 90: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.865217447280884s
epoch 95: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.837558031082153s
epoch 100: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.132320165634155s
epoch 105: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.24161434173584s
epoch 110: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.73536205291748s
epoch 115: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.94942021369934s
epoch 120: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.43794059753418s
epoch 125: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.86594533920288s
epoch 130: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.991395950317383s
epoch 135: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.320960998535156s
epoch 140: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.292558193206787s
epoch 145: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.202062606811523s
epoch 150: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.323375463485718s
epoch 155: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.042530059814453s
epoch 160: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.109647750854492s
epoch 165: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.00245976448059s
epoch 170: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.885591745376587s
epoch 175: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.99159049987793s
epoch 180: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.020885467529297s
epoch 185: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.072723388671875s
epoch 190: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.076468229293823s
epoch 195: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.215524196624756s
epoch 200: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.43842101097107s
epoch 205: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.379753589630127s
epoch 210: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.245125770568848s
epoch 215: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.314995765686035s
epoch 220: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.273446321487427s
epoch 225: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.824065208435059s
epoch 230: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.974732637405396s
epoch 235: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.296900749206543s
epoch 240: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.280069351196289s
epoch 245: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.056360960006714s
epoch 250: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.738539218902588s
epoch 255: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.211098432540894s
epoch 260: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.47293472290039s
epoch 265: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.869944095611572s
epoch 270: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.273514986038208s
epoch 275: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.97724986076355s
epoch 280: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.881197690963745s
epoch 285: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.292265892028809s
epoch 290: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.402414560317993s
epoch 295: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.060162544250488s
epoch 300: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.168532848358154s
epoch 305: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.177378177642822s
epoch 310: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.194374084472656s
epoch 315: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.2238028049469s
epoch 320: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.755093574523926s
epoch 325: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.364813804626465s
epoch 330: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.24167513847351s
epoch 335: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.727327108383179s
epoch 340: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.010085582733154s
epoch 345: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.220866203308105s
epoch 350: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.902066230773926s
epoch 355: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.155446529388428s
epoch 360: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.171331405639648s
epoch 365: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.386790037155151s
epoch 370: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.234740257263184s
epoch 375: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.019432306289673s
epoch 380: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.54682183265686s
epoch 385: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.901744604110718s
epoch 390: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 11.913012981414795s
epoch 395: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.068031787872314s
epoch 400: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.915661334991455s
epoch 405: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.995267391204834s
epoch 410: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.342758178710938s
epoch 415: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.73229169845581s
epoch 420: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.230762004852295s
epoch 425: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.0481698513031s
epoch 430: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.195467948913574s
epoch 435: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.169147968292236s
epoch 440: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.107118368148804s
epoch 445: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.101266622543335s
epoch 450: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.033563375473022s
epoch 455: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.240893602371216s
epoch 460: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.054704189300537s
epoch 465: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.388893127441406s
epoch 470: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.166141033172607s
epoch 475: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 11.829738855361938s
epoch 480: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.233836889266968s
epoch 485: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.212665557861328s
epoch 490: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.197945833206177s
epoch 495: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 12.33366060256958s
epoch 500: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 12.275410413742065s
Finished training. Time used = 1217.4013528823853.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3009.31it/s]100%|██████████| 1000/1000 [00:00<00:00, 4329.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.68858; Allocated: 429568; Reserved: 10485760; time used = 209.37847447395325s
epoch 10: train_loss: 0.68145; Allocated: 429568; Reserved: 8388608; time used = 213.71191453933716s
epoch 15: train_loss: 0.68081; Allocated: 429568; Reserved: 8388608; time used = 208.25900149345398s
epoch 20: train_loss: 0.66903; Allocated: 429568; Reserved: 8388608; time used = 208.7277638912201s
epoch 25: train_loss: 0.65314; Allocated: 429568; Reserved: 8388608; time used = 206.24911379814148s
epoch 30: train_loss: 0.63381; Allocated: 429568; Reserved: 8388608; time used = 208.4771294593811s
epoch 35: train_loss: 0.66172; Allocated: 429568; Reserved: 8388608; time used = 210.07401847839355s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1468.1710789203644.
Training classifier using 80.00% nodes...
{'micro': 0.52, 'macro': 0.5195676108497647, 'samples': 0.52, 'weighted': 0.5192793514162746, 'accuracy': 0.52}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2749.19it/s]100%|██████████| 1500/1500 [00:00<00:00, 5123.40it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.49053; Allocated: 420352; Reserved: 6291456; time used = 35.86016488075256s
epoch 10: train_loss: 1.41083; Allocated: 420352; Reserved: 6291456; time used = 35.36786460876465s
epoch 15: train_loss: 1.38901; Allocated: 420352; Reserved: 4194304; time used = 36.794286012649536s
epoch 20: train_loss: 1.38694; Allocated: 420352; Reserved: 4194304; time used = 35.88964033126831s
epoch 25: train_loss: 1.38755; Allocated: 420352; Reserved: 6291456; time used = 36.15606689453125s
epoch 30: train_loss: 1.38686; Allocated: 420352; Reserved: 6291456; time used = 36.23998689651489s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 227.09112572669983.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.48746; Allocated: 849408; Reserved: 4194304; time used = 4.262085914611816s
epoch 10: train_loss: 1.38632; Allocated: 849408; Reserved: 6291456; time used = 4.33472204208374s
epoch 15: train_loss: 1.37440; Allocated: 849408; Reserved: 4194304; time used = 4.248570442199707s
epoch 20: train_loss: 1.35992; Allocated: 849408; Reserved: 4194304; time used = 4.397036075592041s
epoch 25: train_loss: 1.34945; Allocated: 849408; Reserved: 4194304; time used = 4.335083961486816s
epoch 30: train_loss: 1.32826; Allocated: 849408; Reserved: 4194304; time used = 4.414458513259888s
epoch 35: train_loss: 1.32187; Allocated: 849408; Reserved: 4194304; time used = 4.395892143249512s
epoch 40: train_loss: 1.31401; Allocated: 849408; Reserved: 4194304; time used = 4.455552339553833s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.73359775543213.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.4645437516724646, 'samples': 0.5797101449275363, 'weighted': 0.4825385006185695, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3006.36it/s] 82%|████████▏ | 1647/2000 [00:00<00:00, 3830.66it/s]100%|██████████| 2000/2000 [00:00<00:00, 6128.80it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69234; Allocated: 3855872; Reserved: 29360128; time used = 966.262357711792s
epoch 10: train_loss: 0.68620; Allocated: 3855872; Reserved: 31457280; time used = 974.0848081111908s
epoch 15: train_loss: 0.63221; Allocated: 3855872; Reserved: 29360128; time used = 966.3623118400574s
epoch 20: train_loss: 0.66511; Allocated: 3855872; Reserved: 29360128; time used = 962.4803948402405s
epoch 25: train_loss: 0.59480; Allocated: 3855872; Reserved: 29360128; time used = 966.650796175003s
epoch 30: train_loss: 0.59379; Allocated: 3855872; Reserved: 29360128; time used = 963.288774728775s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6573.56240105629.
Training classifier using 80.00% nodes...
{'micro': 0.6925, 'macro': 0.6892350254865176, 'samples': 0.6925, 'weighted': 0.6882794231898888, 'accuracy': 0.6925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.30525; Allocated: 53413376; Reserved: 111149056; time used = 5.261408090591431s
epoch 10: train_loss: 1.25811; Allocated: 53413376; Reserved: 111149056; time used = 5.103563547134399s
epoch 15: train_loss: 1.16743; Allocated: 53413376; Reserved: 111149056; time used = 4.963951349258423s
epoch 20: train_loss: 1.12638; Allocated: 53413376; Reserved: 111149056; time used = 4.810293197631836s
epoch 25: train_loss: 1.05734; Allocated: 53413376; Reserved: 111149056; time used = 5.11912727355957s
epoch 30: train_loss: 1.04343; Allocated: 53413376; Reserved: 111149056; time used = 5.056164741516113s
epoch 35: train_loss: 1.03751; Allocated: 53413376; Reserved: 111149056; time used = 5.128441572189331s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.103318214416504.
Training classifier using 20.00% nodes...
{'micro': 0.6661710037174721, 'macro': 0.6076743220877279, 'samples': 0.6731780616078137, 'weighted': 0.653916008683572, 'accuracy': 0.6731780616078137}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.58676; Allocated: 784896; Reserved: 6291456; time used = 0.9302093982696533s
epoch 10: train_loss: 1.34508; Allocated: 784896; Reserved: 8388608; time used = 0.919987678527832s
epoch 15: train_loss: 1.23227; Allocated: 784896; Reserved: 6291456; time used = 0.8944427967071533s
epoch 20: train_loss: 1.17954; Allocated: 784896; Reserved: 6291456; time used = 0.9114720821380615s
epoch 25: train_loss: 1.11930; Allocated: 784896; Reserved: 6291456; time used = 0.9331669807434082s
epoch 30: train_loss: 1.08377; Allocated: 784896; Reserved: 6291456; time used = 0.9315938949584961s
epoch 35: train_loss: 1.06931; Allocated: 784896; Reserved: 6291456; time used = 1.2064051628112793s
epoch 40: train_loss: 1.07343; Allocated: 784896; Reserved: 6291456; time used = 0.8780426979064941s
epoch 45: train_loss: 1.09114; Allocated: 784896; Reserved: 6291456; time used = 0.8983042240142822s
epoch 50: train_loss: 1.05766; Allocated: 784896; Reserved: 6291456; time used = 0.9279580116271973s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.240059614181519.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.5191637630662022, 'samples': 0.5362318840579711, 'weighted': 0.5257284249861133, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3017.28it/s] 82%|████████▏ | 1646/2000 [00:00<00:00, 3842.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 6130.31it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.66492; Allocated: 3785216; Reserved: 29360128; time used = 985.0381808280945s
epoch 10: train_loss: 0.66404; Allocated: 3785216; Reserved: 31457280; time used = 985.7053899765015s
epoch 15: train_loss: 0.66434; Allocated: 3785216; Reserved: 29360128; time used = 992.7659468650818s
epoch 20: train_loss: 0.66408; Allocated: 3785216; Reserved: 29360128; time used = 990.2438638210297s
epoch 25: train_loss: 0.66402; Allocated: 3785216; Reserved: 29360128; time used = 997.0556721687317s
epoch 30: train_loss: 0.66408; Allocated: 3785216; Reserved: 29360128; time used = 993.7517559528351s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6745.166725158691.
Training classifier using 80.00% nodes...
{'micro': 0.68, 'macro': 0.6749206349206349, 'samples': 0.68, 'weighted': 0.6737015873015872, 'accuracy': 0.68}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2405.15it/s] 78%|███████▊  | 1568/2000 [00:00<00:00, 3110.36it/s]100%|██████████| 2000/2000 [00:00<00:00, 5221.51it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3057.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4377.71it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.41720; Allocated: 495104; Reserved: 8388608; time used = 12.493169069290161s
epoch 10: train_loss: 1.40628; Allocated: 495104; Reserved: 8388608; time used = 12.320282936096191s
epoch 15: train_loss: 1.39076; Allocated: 495104; Reserved: 8388608; time used = 12.7768235206604s
epoch 20: train_loss: 1.38962; Allocated: 495104; Reserved: 8388608; time used = 12.737716913223267s
epoch 25: train_loss: 1.38692; Allocated: 495104; Reserved: 8388608; time used = 12.227460861206055s
epoch 30: train_loss: 1.38629; Allocated: 495104; Reserved: 8388608; time used = 12.543439149856567s
epoch 35: train_loss: 1.38474; Allocated: 495104; Reserved: 10485760; time used = 12.343557596206665s
epoch 40: train_loss: 1.38159; Allocated: 495104; Reserved: 8388608; time used = 12.086187362670898s
epoch 45: train_loss: 1.37893; Allocated: 495104; Reserved: 8388608; time used = 12.534695386886597s
epoch 50: train_loss: 1.37433; Allocated: 495104; Reserved: 8388608; time used = 12.499015092849731s
epoch 55: train_loss: 1.37080; Allocated: 495104; Reserved: 8388608; time used = 12.539474248886108s
epoch 60: train_loss: 1.36666; Allocated: 495104; Reserved: 8388608; time used = 12.56550908088684s
epoch 65: train_loss: 1.36529; Allocated: 495104; Reserved: 8388608; time used = 12.596770524978638s
epoch 70: train_loss: 1.36300; Allocated: 495104; Reserved: 8388608; time used = 12.378812789916992s
epoch 75: train_loss: 1.36114; Allocated: 495104; Reserved: 8388608; time used = 12.61293911933899s
epoch 80: train_loss: 1.35896; Allocated: 495104; Reserved: 8388608; time used = 12.318703889846802s
epoch 85: train_loss: 1.35984; Allocated: 495104; Reserved: 8388608; time used = 12.452341556549072s
epoch 90: train_loss: 1.36146; Allocated: 495104; Reserved: 8388608; time used = 12.66930365562439s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 230.6226930618286.
Training classifier using 80.00% nodes...
{'micro': 0.56, 'macro': 0.551203590371277, 'samples': 0.56, 'weighted': 0.5499469604243166, 'accuracy': 0.56}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.97025; Allocated: 719360; Reserved: 6291456; time used = 4.387650489807129s
epoch 10: train_loss: 1.50751; Allocated: 719360; Reserved: 8388608; time used = 4.639935255050659s
epoch 15: train_loss: 1.37006; Allocated: 719360; Reserved: 6291456; time used = 4.303171396255493s
epoch 20: train_loss: 1.38796; Allocated: 719360; Reserved: 6291456; time used = 4.374612092971802s
epoch 25: train_loss: 1.36547; Allocated: 719360; Reserved: 6291456; time used = 4.30987024307251s
epoch 30: train_loss: 1.36837; Allocated: 719360; Reserved: 6291456; time used = 4.624650716781616s
epoch 35: train_loss: 1.36218; Allocated: 719360; Reserved: 6291456; time used = 4.4528419971466064s
epoch 40: train_loss: 1.36531; Allocated: 719360; Reserved: 6291456; time used = 4.574492692947388s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.066900968551636.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5410856039476507, 'samples': 0.5507246376811594, 'weighted': 0.545905120814405, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3015.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 4346.45it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 458391.62500; Allocated: 625664; Reserved: 6291456; time used = 36.11904525756836s
epoch 10: train_loss: 8523.14917; Allocated: 625664; Reserved: 6291456; time used = 37.40828824043274s
epoch 15: train_loss: 51309.42334; Allocated: 625664; Reserved: 6291456; time used = 37.68395471572876s
epoch 20: train_loss: 2926.00229; Allocated: 625664; Reserved: 6291456; time used = 37.3679473400116s
epoch 25: train_loss: 7894.55402; Allocated: 625664; Reserved: 6291456; time used = 36.08732223510742s
epoch 30: train_loss: 375.18355; Allocated: 625664; Reserved: 6291456; time used = 37.427555084228516s
epoch 35: train_loss: 1.39292; Allocated: 625664; Reserved: 6291456; time used = 37.67382597923279s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 263.32294845581055.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2443.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 3628.80it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68176; Allocated: 835072; Reserved: 29360128; time used = 10.06054949760437s
epoch 10: train_loss: 0.69605; Allocated: 835072; Reserved: 29360128; time used = 10.300884246826172s
epoch 15: train_loss: 0.69375; Allocated: 835072; Reserved: 29360128; time used = 9.986990213394165s
epoch 20: train_loss: 0.69843; Allocated: 835072; Reserved: 29360128; time used = 9.761993408203125s
epoch 25: train_loss: 0.69431; Allocated: 835072; Reserved: 29360128; time used = 10.094935655593872s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 62.8481228351593.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.40766; Allocated: 714240; Reserved: 4194304; time used = 1.0245869159698486s
epoch 10: train_loss: 1.46216; Allocated: 714240; Reserved: 4194304; time used = 0.977006196975708s
epoch 15: train_loss: 1.22200; Allocated: 714240; Reserved: 4194304; time used = 0.9776251316070557s
epoch 20: train_loss: 1.07871; Allocated: 714240; Reserved: 4194304; time used = 0.9834742546081543s
epoch 25: train_loss: 1.01049; Allocated: 714240; Reserved: 4194304; time used = 0.976318359375s
epoch 30: train_loss: 0.97239; Allocated: 714240; Reserved: 4194304; time used = 0.9831874370574951s
epoch 35: train_loss: 0.97503; Allocated: 714240; Reserved: 4194304; time used = 0.9303336143493652s
epoch 40: train_loss: 0.95821; Allocated: 714240; Reserved: 4194304; time used = 0.9117677211761475s
epoch 45: train_loss: 0.93834; Allocated: 714240; Reserved: 4194304; time used = 0.953477144241333s
epoch 50: train_loss: 0.90926; Allocated: 714240; Reserved: 4194304; time used = 0.9424684047698975s
epoch 55: train_loss: 0.91589; Allocated: 714240; Reserved: 4194304; time used = 0.9437050819396973s
epoch 60: train_loss: 0.89723; Allocated: 714240; Reserved: 4194304; time used = 0.938605785369873s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.278623580932617.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.889855072463768, 'samples': 0.8947368421052632, 'weighted': 0.8935163996948893, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2924.08it/s]100%|██████████| 1000/1000 [00:00<00:00, 4230.15it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 774659.53906; Allocated: 558080; Reserved: 8388608; time used = 12.289536476135254s
epoch 10: train_loss: 123335.32324; Allocated: 558080; Reserved: 6291456; time used = 12.054996728897095s
epoch 15: train_loss: 24680.41748; Allocated: 558080; Reserved: 8388608; time used = 12.250467777252197s
epoch 20: train_loss: 9848.46606; Allocated: 558080; Reserved: 6291456; time used = 12.271225452423096s
epoch 25: train_loss: 4163.15143; Allocated: 558080; Reserved: 8388608; time used = 12.253116607666016s
epoch 30: train_loss: 523.43155; Allocated: 558080; Reserved: 8388608; time used = 12.167064189910889s
epoch 35: train_loss: 1.42808; Allocated: 558080; Reserved: 6291456; time used = 11.936279058456421s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 93.7512845993042.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2430.87it/s]100%|██████████| 1500/1500 [00:00<00:00, 4652.00it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.66558; Allocated: 488448; Reserved: 6291456; time used = 221.52218985557556s
epoch 10: train_loss: 0.56729; Allocated: 488448; Reserved: 8388608; time used = 223.643616437912s
epoch 15: train_loss: 0.48380; Allocated: 488448; Reserved: 8388608; time used = 227.50155973434448s
epoch 20: train_loss: 0.27345; Allocated: 488448; Reserved: 6291456; time used = 222.44762253761292s
epoch 25: train_loss: 0.12077; Allocated: 488448; Reserved: 6291456; time used = 217.26525449752808s
epoch 30: train_loss: 0.46951; Allocated: 488448; Reserved: 8388608; time used = 216.831773519516s
epoch 35: train_loss: 0.22685; Allocated: 488448; Reserved: 6291456; time used = 221.0440056324005s
epoch 40: train_loss: 0.19865; Allocated: 488448; Reserved: 6291456; time used = 215.61906170845032s
epoch 45: train_loss: 0.13129; Allocated: 488448; Reserved: 8388608; time used = 225.47502756118774s
epoch 50: train_loss: 0.08423; Allocated: 488448; Reserved: 8388608; time used = 216.3346688747406s
epoch 55: train_loss: 0.06123; Allocated: 488448; Reserved: 6291456; time used = 216.47717213630676s
epoch 60: train_loss: 0.22807; Allocated: 488448; Reserved: 8388608; time used = 217.19463896751404s
epoch 65: train_loss: 0.36812; Allocated: 488448; Reserved: 8388608; time used = 219.96437859535217s
epoch 70: train_loss: 0.15712; Allocated: 488448; Reserved: 8388608; time used = 220.66110706329346s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3174.450519800186.
Training classifier using 80.00% nodes...
{'micro': 0.4166666666666667, 'macro': 0.33714110644257705, 'samples': 0.4166666666666667, 'weighted': 0.3270268732492997, 'accuracy': 0.4166666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2556.02it/s]100%|██████████| 1000/1000 [00:00<00:00, 3771.83it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.58929; Allocated: 429568; Reserved: 6291456; time used = 55.68136167526245s
epoch 10: train_loss: 1.41829; Allocated: 429568; Reserved: 8388608; time used = 56.653778314590454s
epoch 15: train_loss: 1.38639; Allocated: 429568; Reserved: 6291456; time used = 55.37535119056702s
epoch 20: train_loss: 1.39232; Allocated: 429568; Reserved: 8388608; time used = 56.50871539115906s
epoch 25: train_loss: 1.38719; Allocated: 429568; Reserved: 6291456; time used = 56.079752683639526s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 295.02962350845337.
Training classifier using 80.00% nodes...
{'micro': 0.525, 'macro': 0.5099935525467441, 'samples': 0.525, 'weighted': 0.5082785299806577, 'accuracy': 0.525}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2435.61it/s] 82%|████████▏ | 1635/2000 [00:00<00:00, 3165.34it/s]100%|██████████| 2000/2000 [00:00<00:00, 5358.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 93.40030; Allocated: 3849728; Reserved: 29360128; time used = 984.1940820217133s
epoch 10: train_loss: 42.74298; Allocated: 3849728; Reserved: 31457280; time used = 985.7682456970215s
epoch 15: train_loss: 18.90112; Allocated: 3849728; Reserved: 29360128; time used = 984.254588842392s
epoch 20: train_loss: 9.28496; Allocated: 3849728; Reserved: 29360128; time used = 978.982931137085s
epoch 25: train_loss: 9.65914; Allocated: 3849728; Reserved: 29360128; time used = 963.4056711196899s
epoch 30: train_loss: 7.05631; Allocated: 3849728; Reserved: 31457280; time used = 968.2864534854889s
epoch 35: train_loss: 5.84940; Allocated: 3849728; Reserved: 29360128; time used = 962.6853632926941s
epoch 40: train_loss: 2.60451; Allocated: 3849728; Reserved: 29360128; time used = 964.991762638092s
epoch 45: train_loss: 3.06495; Allocated: 3849728; Reserved: 29360128; time used = 960.7432408332825s
epoch 50: train_loss: 1.73219; Allocated: 3849728; Reserved: 31457280; time used = 967.1923515796661s
epoch 55: train_loss: 1.45493; Allocated: 3849728; Reserved: 29360128; time used = 963.5271866321564s
epoch 60: train_loss: 1.51043; Allocated: 3849728; Reserved: 31457280; time used = 966.9069027900696s
epoch 65: train_loss: 1.48562; Allocated: 3849728; Reserved: 31457280; time used = 962.9552202224731s
epoch 70: train_loss: 1.39550; Allocated: 3849728; Reserved: 31457280; time used = 961.9188003540039s
epoch 75: train_loss: 1.36312; Allocated: 3849728; Reserved: 29360128; time used = 965.7763495445251s
epoch 80: train_loss: 1.36087; Allocated: 3849728; Reserved: 29360128; time used = 967.0874075889587s
epoch 85: train_loss: 1.35701; Allocated: 3849728; Reserved: 29360128; time used = 968.0035648345947s
epoch 90: train_loss: 1.35327; Allocated: 3849728; Reserved: 29360128; time used = 964.9822797775269s
epoch 95: train_loss: 1.34939; Allocated: 3849728; Reserved: 31457280; time used = 968.0828945636749s
epoch 100: train_loss: 1.34907; Allocated: 3849728; Reserved: 31457280; time used = 961.4507310390472s
epoch 105: train_loss: 1.34847; Allocated: 3849728; Reserved: 29360128; time used = 963.3218472003937s
epoch 110: train_loss: 1.34528; Allocated: 3849728; Reserved: 31457280; time used = 964.3798930644989s
epoch 115: train_loss: 1.34521; Allocated: 3849728; Reserved: 31457280; time used = 964.7976515293121s
epoch 120: train_loss: 1.34356; Allocated: 3849728; Reserved: 29360128; time used = 1000.5283026695251s
epoch 125: train_loss: 1.34392; Allocated: 3849728; Reserved: 29360128; time used = 1051.3812589645386s
epoch 130: train_loss: 1.34282; Allocated: 3849728; Reserved: 29360128; time used = 1052.0268466472626s
epoch 135: train_loss: 1.34344; Allocated: 3849728; Reserved: 31457280; time used = 1053.306747674942s
epoch 140: train_loss: 1.34282; Allocated: 3849728; Reserved: 29360128; time used = 1050.3016517162323s
epoch 145: train_loss: 1.34243; Allocated: 3849728; Reserved: 31457280; time used = 1052.4022564888s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 29156.547543525696.
Training classifier using 80.00% nodes...
{'micro': 0.7075, 'macro': 0.7026664718327309, 'samples': 0.7075, 'weighted': 0.7015291710874911, 'accuracy': 0.7075}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 5264.87941; Allocated: 1119744; Reserved: 8388608; time used = 2.279900312423706s
epoch 10: train_loss: 414.88738; Allocated: 1119744; Reserved: 8388608; time used = 2.2120046615600586s
epoch 15: train_loss: 34.27696; Allocated: 1119744; Reserved: 8388608; time used = 2.246168375015259s
epoch 20: train_loss: 73.07736; Allocated: 1119744; Reserved: 8388608; time used = 2.2395529747009277s
epoch 25: train_loss: 15.68439; Allocated: 1119744; Reserved: 8388608; time used = 2.2610936164855957s
epoch 30: train_loss: 5.04614; Allocated: 1119744; Reserved: 8388608; time used = 2.2892909049987793s
epoch 35: train_loss: 4.69420; Allocated: 1119744; Reserved: 8388608; time used = 2.2266273498535156s
epoch 40: train_loss: 3.00236; Allocated: 1119744; Reserved: 10485760; time used = 2.2806177139282227s
epoch 45: train_loss: 6.86879; Allocated: 1119744; Reserved: 10485760; time used = 2.282083511352539s
epoch 50: train_loss: 2.46710; Allocated: 1119744; Reserved: 8388608; time used = 2.3688502311706543s
epoch 55: train_loss: 1.86723; Allocated: 1119744; Reserved: 8388608; time used = 2.238917589187622s
epoch 60: train_loss: 1.67871; Allocated: 1119744; Reserved: 8388608; time used = 2.2565865516662598s
epoch 65: train_loss: 1.70205; Allocated: 1119744; Reserved: 8388608; time used = 2.279322862625122s
epoch 70: train_loss: 1.48175; Allocated: 1119744; Reserved: 8388608; time used = 2.225489377975464s
epoch 75: train_loss: 1.38947; Allocated: 1119744; Reserved: 8388608; time used = 2.2662487030029297s
epoch 80: train_loss: 1.40959; Allocated: 1119744; Reserved: 8388608; time used = 2.1905295848846436s
epoch 85: train_loss: 1.37092; Allocated: 1119744; Reserved: 8388608; time used = 2.2552602291107178s
epoch 90: train_loss: 1.46295; Allocated: 1119744; Reserved: 10485760; time used = 2.242598295211792s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.58754277229309.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5434782608695652, 'samples': 0.5942028985507246, 'weighted': 0.5545053560176434, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.37310; Allocated: 19216896; Reserved: 48234496; time used = 5.635946035385132s
epoch 10: train_loss: 1.34457; Allocated: 19216896; Reserved: 48234496; time used = 5.744564533233643s
epoch 15: train_loss: 1.30421; Allocated: 19216896; Reserved: 48234496; time used = 5.627193927764893s
epoch 20: train_loss: 1.29583; Allocated: 19216896; Reserved: 48234496; time used = 5.774186134338379s
epoch 25: train_loss: 1.27921; Allocated: 19216896; Reserved: 48234496; time used = 5.579583406448364s
epoch 30: train_loss: 1.25977; Allocated: 19216896; Reserved: 48234496; time used = 5.595032453536987s
epoch 35: train_loss: 1.24236; Allocated: 19216896; Reserved: 48234496; time used = 5.784730672836304s
epoch 40: train_loss: 1.24326; Allocated: 19216896; Reserved: 48234496; time used = 5.601892709732056s
epoch 45: train_loss: 1.24482; Allocated: 19216896; Reserved: 48234496; time used = 5.756449222564697s
epoch 50: train_loss: 1.23234; Allocated: 19216896; Reserved: 48234496; time used = 5.5405707359313965s
epoch 55: train_loss: 1.24352; Allocated: 19216896; Reserved: 48234496; time used = 5.835993528366089s
epoch 60: train_loss: 1.23000; Allocated: 19216896; Reserved: 48234496; time used = 5.534857749938965s
epoch 65: train_loss: 1.22969; Allocated: 19216896; Reserved: 48234496; time used = 5.561277627944946s
epoch 70: train_loss: 1.23180; Allocated: 19216896; Reserved: 48234496; time used = 5.744964838027954s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 87.49966096878052.
Training classifier using 20.00% nodes...
{'micro': 0.29441624365482233, 'macro': 0.09661592482993862, 'samples': 0.29441624365482233, 'weighted': 0.1752141756902802, 'accuracy': 0.29441624365482233}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38988; Allocated: 40905216; Reserved: 62914560; time used = 0.20541977882385254s
epoch 10: train_loss: 1.36027; Allocated: 40905216; Reserved: 62914560; time used = 0.19805383682250977s
epoch 15: train_loss: 1.29925; Allocated: 40905216; Reserved: 62914560; time used = 0.19150972366333008s
epoch 20: train_loss: 1.23554; Allocated: 40905216; Reserved: 62914560; time used = 0.19501471519470215s
epoch 25: train_loss: 1.19662; Allocated: 40905216; Reserved: 62914560; time used = 0.19556689262390137s
epoch 30: train_loss: 1.17160; Allocated: 40905216; Reserved: 62914560; time used = 0.19584894180297852s
epoch 35: train_loss: 1.14017; Allocated: 40905216; Reserved: 62914560; time used = 0.1945786476135254s
epoch 40: train_loss: 1.12861; Allocated: 40905216; Reserved: 62914560; time used = 0.1985187530517578s
epoch 45: train_loss: 1.10478; Allocated: 40905216; Reserved: 62914560; time used = 0.19580721855163574s
epoch 50: train_loss: 1.07566; Allocated: 40905216; Reserved: 62914560; time used = 0.19208645820617676s
epoch 55: train_loss: 1.02869; Allocated: 40905216; Reserved: 62914560; time used = 0.19829225540161133s
epoch 60: train_loss: 1.06656; Allocated: 40905216; Reserved: 62914560; time used = 0.19841504096984863s
epoch 65: train_loss: 1.06905; Allocated: 40905216; Reserved: 62914560; time used = 0.21350836753845215s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.503014326095581.
Training classifier using 20.00% nodes...
{'micro': 0.8010016482819831, 'macro': 0.798916058202554, 'samples': 0.8010016482819831, 'weighted': 0.8008062952035436, 'accuracy': 0.8010016482819831}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2930.79it/s]100%|██████████| 1000/1000 [00:00<00:00, 4222.48it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.38535; Allocated: 40700416; Reserved: 65011712; time used = 3.1554524898529053s
epoch 10: train_loss: 0.29692; Allocated: 40700416; Reserved: 65011712; time used = 3.365147352218628s
epoch 15: train_loss: 0.18559; Allocated: 40700416; Reserved: 65011712; time used = 3.185340404510498s
epoch 20: train_loss: 0.13168; Allocated: 40700416; Reserved: 65011712; time used = 3.441481113433838s
epoch 25: train_loss: 0.05547; Allocated: 40700416; Reserved: 65011712; time used = 3.2024106979370117s
epoch 30: train_loss: 0.05393; Allocated: 40700416; Reserved: 65011712; time used = 3.351224899291992s
epoch 35: train_loss: 0.05196; Allocated: 40700416; Reserved: 65011712; time used = 3.07259202003479s
epoch 40: train_loss: 0.04468; Allocated: 40700416; Reserved: 65011712; time used = 3.357787609100342s
epoch 45: train_loss: 0.01491; Allocated: 40700416; Reserved: 65011712; time used = 3.154203176498413s
epoch 50: train_loss: 0.03726; Allocated: 40700416; Reserved: 65011712; time used = 3.3688955307006836s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.071317195892334.
Training classifier using 20.00% nodes...
{'micro': 0.6589958158995816, 'macro': 0.6421041717458158, 'samples': 0.6589958158995816, 'weighted': 0.6549618208485443, 'accuracy': 0.6589958158995816}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2900.42it/s] 82%|████████▏ | 1630/2000 [00:00<00:00, 3703.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 5951.02it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 407.50885; Allocated: 4054016; Reserved: 1214251008; time used = 1991.473533153534s
epoch 10: train_loss: 632.24991; Allocated: 4054016; Reserved: 1604321280; time used = 2372.3100361824036s
epoch 15: train_loss: 38.20546; Allocated: 4054016; Reserved: 792723456; time used = 2560.370549917221s
epoch 20: train_loss: 364.35228; Allocated: 4054016; Reserved: 1725956096; time used = 3398.2816257476807s
epoch 25: train_loss: 224.44408; Allocated: 4054016; Reserved: 922746880; time used = 3846.105897426605s
epoch 30: train_loss: 141.57345; Allocated: 4054016; Reserved: 656408576; time used = 3592.813461303711s
epoch 35: train_loss: 17.31109; Allocated: 4054016; Reserved: 817889280; time used = 3733.130241394043s
epoch 40: train_loss: 46.27853; Allocated: 4054016; Reserved: 1199570944; time used = 4071.8944704532623s
epoch 45: train_loss: 42.89256; Allocated: 4054016; Reserved: 1323302912; time used = 3519.364292383194s
epoch 50: train_loss: 4.02177; Allocated: 4054016; Reserved: 769654784; time used = 3523.470948934555s
epoch 55: train_loss: 13.02173; Allocated: 4054016; Reserved: 597688320; time used = 3390.6758930683136s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39185.20954656601.
Training classifier using 80.00% nodes...
{'micro': 0.4925, 'macro': 0.34261125818699956, 'samples': 0.4925, 'weighted': 0.33319416446052835, 'accuracy': 0.4925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.31620; Allocated: 40848896; Reserved: 62914560; time used = 0.49579954147338867s
epoch 10: train_loss: 0.20112; Allocated: 40848896; Reserved: 62914560; time used = 0.503065824508667s
epoch 15: train_loss: 0.17394; Allocated: 40848896; Reserved: 62914560; time used = 0.5020315647125244s
epoch 20: train_loss: 0.11627; Allocated: 40848896; Reserved: 62914560; time used = 0.7464170455932617s
epoch 25: train_loss: 0.09698; Allocated: 40848896; Reserved: 62914560; time used = 0.4926290512084961s
epoch 30: train_loss: 0.26488; Allocated: 40848896; Reserved: 62914560; time used = 0.49535441398620605s
epoch 35: train_loss: 0.09106; Allocated: 40848896; Reserved: 62914560; time used = 0.4936981201171875s
epoch 40: train_loss: 0.10313; Allocated: 40848896; Reserved: 62914560; time used = 0.4916346073150635s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.91477084159851.
Training classifier using 20.00% nodes...
{'micro': 0.7492709521998225, 'macro': 0.7409626501876087, 'samples': 0.7492709521998225, 'weighted': 0.7478132851238968, 'accuracy': 0.7492709521998225}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2411.72it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3130.62it/s]100%|██████████| 2000/2000 [00:00<00:00, 5286.25it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.65694; Allocated: 3990016; Reserved: 35651584; time used = 1184.8813829421997s
epoch 10: train_loss: 1.42368; Allocated: 3990016; Reserved: 35651584; time used = 1186.0319805145264s
epoch 15: train_loss: 1.41005; Allocated: 3990016; Reserved: 35651584; time used = 1184.9378595352173s
epoch 20: train_loss: 1.38751; Allocated: 3990016; Reserved: 35651584; time used = 1189.047387599945s
epoch 25: train_loss: 1.37666; Allocated: 3990016; Reserved: 35651584; time used = 1188.0224030017853s
epoch 30: train_loss: 1.36060; Allocated: 3990016; Reserved: 33554432; time used = 1186.7980003356934s
epoch 35: train_loss: 1.32586; Allocated: 3990016; Reserved: 35651584; time used = 1190.4471690654755s
epoch 40: train_loss: 1.29787; Allocated: 3990016; Reserved: 35651584; time used = 1190.0216691493988s
epoch 45: train_loss: 1.24559; Allocated: 3990016; Reserved: 35651584; time used = 1187.7997951507568s
epoch 50: train_loss: 1.22452; Allocated: 3990016; Reserved: 33554432; time used = 1176.5981013774872s
epoch 55: train_loss: 1.20477; Allocated: 3990016; Reserved: 35651584; time used = 1187.2134606838226s
epoch 60: train_loss: 1.17779; Allocated: 3990016; Reserved: 33554432; time used = 1173.7570986747742s
epoch 65: train_loss: 1.16065; Allocated: 3990016; Reserved: 35651584; time used = 1181.0811166763306s
epoch 70: train_loss: 1.14991; Allocated: 3990016; Reserved: 35651584; time used = 1191.131103515625s
epoch 75: train_loss: 1.15561; Allocated: 3990016; Reserved: 33554432; time used = 1192.884113073349s
epoch 80: train_loss: 1.14215; Allocated: 3990016; Reserved: 37748736; time used = 1193.8123860359192s
epoch 85: train_loss: 1.14288; Allocated: 3990016; Reserved: 33554432; time used = 1196.0447607040405s
epoch 90: train_loss: 1.13311; Allocated: 3990016; Reserved: 35651584; time used = 1192.7192256450653s
epoch 95: train_loss: 1.16152; Allocated: 3990016; Reserved: 37748736; time used = 1191.5299990177155s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22569.387350320816.
Training classifier using 80.00% nodes...
{'micro': 0.7075, 'macro': 0.7014373114047119, 'samples': 0.7075, 'weighted': 0.700160955910967, 'accuracy': 0.7075}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2317.70it/s]100%|██████████| 1000/1000 [00:00<00:00, 3447.30it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.68231; Allocated: 632320; Reserved: 31457280; time used = 7.876863956451416s
epoch 10: train_loss: 0.69586; Allocated: 632320; Reserved: 31457280; time used = 8.023199319839478s
epoch 15: train_loss: 0.69374; Allocated: 632320; Reserved: 33554432; time used = 7.880773067474365s
epoch 20: train_loss: 0.69894; Allocated: 632320; Reserved: 31457280; time used = 7.858740568161011s
epoch 25: train_loss: 0.69429; Allocated: 632320; Reserved: 31457280; time used = 7.778364419937134s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.962088108062744.
Training classifier using 80.00% nodes...
{'micro': 0.44, 'macro': 0.43314100617471407, 'samples': 0.44, 'weighted': 0.43189391638829844, 'accuracy': 0.44}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2371.43it/s]100%|██████████| 1000/1000 [00:00<00:00, 3526.78it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.47271; Allocated: 486912; Reserved: 8388608; time used = 190.04190230369568s
epoch 10: train_loss: 1.39124; Allocated: 486912; Reserved: 8388608; time used = 192.42263340950012s
epoch 15: train_loss: 1.38727; Allocated: 486912; Reserved: 8388608; time used = 188.2777419090271s
epoch 20: train_loss: 1.38635; Allocated: 486912; Reserved: 8388608; time used = 189.67130255699158s
epoch 25: train_loss: 1.38654; Allocated: 486912; Reserved: 8388608; time used = 188.48334550857544s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1102.6699776649475.
Training classifier using 80.00% nodes...
{'micro': 0.47, 'macro': 0.468671679197995, 'samples': 0.47, 'weighted': 0.468140350877193, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2356.57it/s]100%|██████████| 1000/1000 [00:00<00:00, 3500.88it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.64570808410645s
epoch 10: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 191.14414143562317s
epoch 15: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 190.7806053161621s
epoch 20: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 191.32798981666565s
epoch 25: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.40556168556213s
epoch 30: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.24473810195923s
epoch 35: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.11965489387512s
epoch 40: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 183.0283284187317s
epoch 45: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.68169617652893s
epoch 50: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.2906322479248s
epoch 55: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.66433548927307s
epoch 60: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.44717645645142s
epoch 65: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.1274540424347s
epoch 70: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.69326519966125s
epoch 75: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.5304844379425s
epoch 80: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.5952775478363s
epoch 85: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.98512864112854s
epoch 90: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 185.56311917304993s
epoch 95: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 184.39023113250732s
epoch 100: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.093195438385s
epoch 105: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 189.4879593849182s
epoch 110: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.46330857276917s
epoch 115: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.0880777835846s
epoch 120: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 191.6128990650177s
epoch 125: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 185.7518265247345s
epoch 130: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.58645701408386s
epoch 135: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.81733894348145s
epoch 140: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.91798520088196s
epoch 145: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.81528520584106s
epoch 150: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.92061853408813s
epoch 155: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.65127539634705s
epoch 160: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.67857313156128s
epoch 165: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 185.31251692771912s
epoch 170: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.34903359413147s
epoch 175: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 186.6799759864807s
epoch 180: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 192.69690132141113s
epoch 185: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.1756727695465s
epoch 190: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.42247438430786s
epoch 195: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.1794559955597s
epoch 200: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.33253836631775s
epoch 205: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.97338938713074s
epoch 210: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.60641980171204s
epoch 215: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 190.1301155090332s
epoch 220: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.635155916214s
epoch 225: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.41692090034485s
epoch 230: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.24457097053528s
epoch 235: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.64312028884888s
epoch 240: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.68420839309692s
epoch 245: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 189.46020793914795s
epoch 250: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.79580283164978s
epoch 255: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.57723999023438s
epoch 260: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 190.2277843952179s
epoch 265: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.42577266693115s
epoch 270: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.05944681167603s
epoch 275: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.99807500839233s
epoch 280: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.19608211517334s
epoch 285: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.93792581558228s
epoch 290: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 190.48238444328308s
epoch 295: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 193.3487367630005s
epoch 300: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 192.8461091518402s
epoch 305: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 192.78314471244812s
epoch 310: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.24370908737183s
epoch 315: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.92915654182434s
epoch 320: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 185.6659390926361s
epoch 325: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 189.73583698272705s
epoch 330: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 185.99804663658142s
epoch 335: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 185.6343972682953s
epoch 340: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.57904887199402s
epoch 345: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.6447639465332s
epoch 350: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 186.30040335655212s
epoch 355: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 187.1256365776062s
epoch 360: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.65423727035522s
epoch 365: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.7185835838318s
epoch 370: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.85334086418152s
epoch 375: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 189.3946237564087s
epoch 380: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 192.18620252609253s
epoch 385: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.13049268722534s
epoch 390: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.12915515899658s
epoch 395: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 184.2947781085968s
epoch 400: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 185.7493233680725s
epoch 405: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.99787521362305s
epoch 410: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.3856155872345s
epoch 415: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 188.24076628684998s
epoch 420: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.23710227012634s
epoch 425: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.22565865516663s
epoch 430: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.2941358089447s
epoch 435: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 185.67329668998718s
epoch 440: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 186.96715188026428s
epoch 445: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.29646611213684s
epoch 450: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 190.16306018829346s
epoch 455: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 187.64295959472656s
epoch 460: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.7397735118866s
epoch 465: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 189.30135774612427s
epoch 470: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 187.6419551372528s
epoch 475: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 186.54587173461914s
epoch 480: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 188.11739587783813s
epoch 485: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 186.5843424797058s
epoch 490: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 194.47763895988464s
epoch 495: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 193.673645734787s
epoch 500: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 187.68689227104187s
Finished training. Time used = 18842.577396392822.
Training classifier using 80.00% nodes...
{'micro': 0.47500000000000003, 'macro': 0.4743560862056018, 'samples': 0.475, 'weighted': 0.47398813546594576, 'accuracy': 0.475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2400.33it/s]100%|██████████| 1000/1000 [00:00<00:00, 3564.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.67728; Allocated: 632320; Reserved: 31457280; time used = 7.5214691162109375s
epoch 10: train_loss: 0.68973; Allocated: 632320; Reserved: 31457280; time used = 7.799570560455322s
epoch 15: train_loss: 0.68312; Allocated: 632320; Reserved: 33554432; time used = 7.5677125453948975s
epoch 20: train_loss: 0.68300; Allocated: 632320; Reserved: 31457280; time used = 7.539930820465088s
epoch 25: train_loss: 0.67204; Allocated: 632320; Reserved: 31457280; time used = 7.605051040649414s
epoch 30: train_loss: 0.65339; Allocated: 632320; Reserved: 33554432; time used = 7.515808343887329s
epoch 35: train_loss: 0.65118; Allocated: 632320; Reserved: 31457280; time used = 7.510701656341553s
epoch 40: train_loss: 0.64947; Allocated: 632320; Reserved: 31457280; time used = 7.547209739685059s
epoch 45: train_loss: 0.64250; Allocated: 632320; Reserved: 31457280; time used = 7.71287989616394s
epoch 50: train_loss: 0.64017; Allocated: 632320; Reserved: 31457280; time used = 7.584049701690674s
epoch 55: train_loss: 0.63998; Allocated: 632320; Reserved: 31457280; time used = 7.529124021530151s
epoch 60: train_loss: 0.60661; Allocated: 632320; Reserved: 31457280; time used = 7.446694374084473s
epoch 65: train_loss: 0.59815; Allocated: 632320; Reserved: 31457280; time used = 7.506069183349609s
epoch 70: train_loss: 0.58312; Allocated: 632320; Reserved: 31457280; time used = 7.516977310180664s
epoch 75: train_loss: 0.56392; Allocated: 632320; Reserved: 31457280; time used = 7.718914985656738s
epoch 80: train_loss: 0.54167; Allocated: 632320; Reserved: 31457280; time used = 7.535218954086304s
epoch 85: train_loss: 0.51911; Allocated: 632320; Reserved: 31457280; time used = 7.520008087158203s
epoch 90: train_loss: 0.50308; Allocated: 632320; Reserved: 31457280; time used = 7.424146413803101s
epoch 95: train_loss: 0.48369; Allocated: 632320; Reserved: 31457280; time used = 7.524104356765747s
epoch 100: train_loss: 0.45677; Allocated: 632320; Reserved: 31457280; time used = 7.495627403259277s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 156.83484482765198.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.484677923702314, 'samples': 0.485, 'weighted': 0.48493558474046283, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2365.47it/s]100%|██████████| 1000/1000 [00:00<00:00, 3520.21it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.44368; Allocated: 41353216; Reserved: 62914560; time used = 0.7023656368255615s
epoch 10: train_loss: 0.40994; Allocated: 41353216; Reserved: 62914560; time used = 0.683142900466919s
epoch 15: train_loss: 0.38575; Allocated: 41353216; Reserved: 62914560; time used = 0.6681513786315918s
epoch 20: train_loss: 0.38975; Allocated: 41353216; Reserved: 62914560; time used = 0.9000470638275146s
epoch 25: train_loss: 0.38680; Allocated: 41353216; Reserved: 62914560; time used = 0.6678948402404785s
epoch 30: train_loss: 0.37027; Allocated: 41353216; Reserved: 62914560; time used = 0.6594047546386719s
epoch 35: train_loss: 0.36656; Allocated: 41353216; Reserved: 62914560; time used = 0.6624782085418701s
epoch 40: train_loss: 0.31897; Allocated: 41353216; Reserved: 62914560; time used = 0.6730854511260986s
epoch 45: train_loss: 0.26912; Allocated: 41353216; Reserved: 62914560; time used = 0.8592982292175293s
epoch 50: train_loss: 0.17981; Allocated: 41353216; Reserved: 62914560; time used = 0.6739006042480469s
epoch 55: train_loss: 0.11134; Allocated: 41353216; Reserved: 62914560; time used = 0.6605546474456787s
epoch 60: train_loss: 0.06483; Allocated: 41353216; Reserved: 62914560; time used = 0.6844470500946045s
epoch 65: train_loss: 0.04734; Allocated: 41353216; Reserved: 62914560; time used = 0.6758592128753662s
epoch 70: train_loss: 0.04846; Allocated: 41353216; Reserved: 62914560; time used = 0.6734933853149414s
epoch 75: train_loss: 0.04979; Allocated: 41353216; Reserved: 62914560; time used = 0.8522429466247559s
epoch 80: train_loss: 0.00448; Allocated: 41353216; Reserved: 62914560; time used = 0.6655871868133545s
epoch 85: train_loss: 0.16994; Allocated: 41353216; Reserved: 62914560; time used = 0.671100378036499s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.046985387802124.
Training classifier using 20.00% nodes...
{'micro': 0.6641942436921516, 'macro': 0.6492965985257616, 'samples': 0.6641942436921516, 'weighted': 0.6608498055121143, 'accuracy': 0.6641942436921516}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.95203; Allocated: 719360; Reserved: 6291456; time used = 4.597634553909302s
epoch 10: train_loss: 1.52675; Allocated: 719360; Reserved: 6291456; time used = 4.7345287799835205s
epoch 15: train_loss: 1.38867; Allocated: 719360; Reserved: 4194304; time used = 4.729864120483398s
epoch 20: train_loss: 1.39653; Allocated: 719360; Reserved: 4194304; time used = 4.732468605041504s
epoch 25: train_loss: 1.36463; Allocated: 719360; Reserved: 6291456; time used = 4.618498086929321s
epoch 30: train_loss: 1.37026; Allocated: 719360; Reserved: 4194304; time used = 4.73474907875061s
epoch 35: train_loss: 1.36497; Allocated: 719360; Reserved: 4194304; time used = 4.747457981109619s
epoch 40: train_loss: 1.36579; Allocated: 719360; Reserved: 6291456; time used = 4.5772528648376465s
epoch 45: train_loss: 1.36265; Allocated: 719360; Reserved: 4194304; time used = 4.741594076156616s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.63658261299133.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5410856039476507, 'samples': 0.5507246376811594, 'weighted': 0.545905120814405, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 3.11619; Allocated: 713728; Reserved: 4194304; time used = 0.8608498573303223s
epoch 10: train_loss: 1.36644; Allocated: 713728; Reserved: 4194304; time used = 0.8665733337402344s
epoch 15: train_loss: 1.34111; Allocated: 713728; Reserved: 4194304; time used = 0.8615949153900146s
epoch 20: train_loss: 1.29525; Allocated: 713728; Reserved: 4194304; time used = 0.8692071437835693s
epoch 25: train_loss: 1.22658; Allocated: 713728; Reserved: 4194304; time used = 0.8696820735931396s
epoch 30: train_loss: 1.16478; Allocated: 713728; Reserved: 4194304; time used = 0.8591814041137695s
epoch 35: train_loss: 1.12820; Allocated: 713728; Reserved: 4194304; time used = 0.8553726673126221s
epoch 40: train_loss: 1.13416; Allocated: 713728; Reserved: 4194304; time used = 0.8265199661254883s
epoch 45: train_loss: 1.10031; Allocated: 713728; Reserved: 4194304; time used = 0.8306751251220703s
epoch 50: train_loss: 1.08781; Allocated: 713728; Reserved: 4194304; time used = 0.838383674621582s
epoch 55: train_loss: 1.09432; Allocated: 713728; Reserved: 4194304; time used = 0.8339798450469971s
epoch 60: train_loss: 1.05530; Allocated: 713728; Reserved: 4194304; time used = 0.8299012184143066s
epoch 65: train_loss: 1.05661; Allocated: 713728; Reserved: 4194304; time used = 0.8276550769805908s
epoch 70: train_loss: 1.07203; Allocated: 713728; Reserved: 4194304; time used = 0.8380036354064941s
epoch 75: train_loss: 1.05496; Allocated: 713728; Reserved: 4194304; time used = 0.8341338634490967s
epoch 80: train_loss: 1.07924; Allocated: 713728; Reserved: 4194304; time used = 0.9089527130126953s
epoch 85: train_loss: 1.04074; Allocated: 713728; Reserved: 4194304; time used = 0.8899991512298584s
epoch 90: train_loss: 1.05579; Allocated: 713728; Reserved: 4194304; time used = 0.8580572605133057s
epoch 95: train_loss: 1.06248; Allocated: 713728; Reserved: 4194304; time used = 0.8458535671234131s
epoch 100: train_loss: 1.06311; Allocated: 713728; Reserved: 4194304; time used = 0.8495666980743408s
epoch 105: train_loss: 1.03169; Allocated: 713728; Reserved: 4194304; time used = 0.8328983783721924s
epoch 110: train_loss: 1.01224; Allocated: 713728; Reserved: 4194304; time used = 0.8646867275238037s
epoch 115: train_loss: 1.02292; Allocated: 713728; Reserved: 4194304; time used = 0.845674991607666s
epoch 120: train_loss: 1.01926; Allocated: 713728; Reserved: 4194304; time used = 0.8475043773651123s
epoch 125: train_loss: 1.02440; Allocated: 713728; Reserved: 4194304; time used = 0.8672006130218506s
epoch 130: train_loss: 1.02067; Allocated: 713728; Reserved: 4194304; time used = 0.849041223526001s
epoch 135: train_loss: 1.02595; Allocated: 713728; Reserved: 4194304; time used = 0.8535728454589844s
epoch 140: train_loss: 1.01540; Allocated: 713728; Reserved: 4194304; time used = 0.8511965274810791s
epoch 145: train_loss: 1.02114; Allocated: 713728; Reserved: 4194304; time used = 0.8375060558319092s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.329431295394897.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7661538461538462, 'samples': 0.7894736842105263, 'weighted': 0.7778137651821863, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2781.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 5167.93it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.49053; Allocated: 420352; Reserved: 4194304; time used = 196.8330156803131s
epoch 10: train_loss: 1.41083; Allocated: 420352; Reserved: 6291456; time used = 194.8755979537964s
epoch 15: train_loss: 1.38901; Allocated: 420352; Reserved: 6291456; time used = 195.30354952812195s
epoch 20: train_loss: 1.38694; Allocated: 420352; Reserved: 6291456; time used = 195.25880193710327s
epoch 25: train_loss: 1.38755; Allocated: 420352; Reserved: 6291456; time used = 194.17405319213867s
epoch 30: train_loss: 1.38686; Allocated: 420352; Reserved: 4194304; time used = 193.7221908569336s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1213.3534481525421.
Training classifier using 80.00% nodes...
{'micro': 0.32, 'macro': 0.25866071037533395, 'samples': 0.32, 'weighted': 0.25090088906407393, 'accuracy': 0.32}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2277.24it/s] 82%|████████▏ | 1642/2000 [00:00<00:00, 2978.57it/s]100%|██████████| 2000/2000 [00:00<00:00, 5131.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.43333; Allocated: 4061696; Reserved: 31457280; time used = 857.0933036804199s
epoch 10: train_loss: 1.36439; Allocated: 4061696; Reserved: 33554432; time used = 856.6703321933746s
epoch 15: train_loss: 1.31768; Allocated: 4061696; Reserved: 33554432; time used = 858.4410746097565s
epoch 20: train_loss: 1.26147; Allocated: 4061696; Reserved: 33554432; time used = 857.2982723712921s
epoch 25: train_loss: 1.23309; Allocated: 4061696; Reserved: 31457280; time used = 858.262490272522s
epoch 30: train_loss: 1.21358; Allocated: 4061696; Reserved: 33554432; time used = 860.8406894207001s
epoch 35: train_loss: 1.19460; Allocated: 4061696; Reserved: 31457280; time used = 858.1109237670898s
epoch 40: train_loss: 1.18585; Allocated: 4061696; Reserved: 33554432; time used = 856.8891799449921s
epoch 45: train_loss: 1.16606; Allocated: 4061696; Reserved: 31457280; time used = 859.0002369880676s
epoch 50: train_loss: 1.16070; Allocated: 4061696; Reserved: 33554432; time used = 857.5130767822266s
epoch 55: train_loss: 1.15452; Allocated: 4061696; Reserved: 33554432; time used = 859.3035736083984s
epoch 60: train_loss: 1.14606; Allocated: 4061696; Reserved: 31457280; time used = 870.8616905212402s
epoch 65: train_loss: 1.14427; Allocated: 4061696; Reserved: 33554432; time used = 986.4432322978973s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11656.81647324562.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.63, 'samples': 0.63, 'weighted': 0.63, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2780.12it/s]100%|██████████| 1000/1000 [00:00<00:00, 4045.32it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69273; Allocated: 572416; Reserved: 6291456; time used = 52.8245313167572s
epoch 10: train_loss: 0.68915; Allocated: 572416; Reserved: 8388608; time used = 52.5050733089447s
epoch 15: train_loss: 0.69193; Allocated: 572416; Reserved: 8388608; time used = 52.845701932907104s
epoch 20: train_loss: 0.68668; Allocated: 572416; Reserved: 6291456; time used = 52.95094347000122s
epoch 25: train_loss: 0.36182; Allocated: 572416; Reserved: 6291456; time used = 52.76205778121948s
epoch 30: train_loss: 0.43990; Allocated: 572416; Reserved: 6291456; time used = 52.94050359725952s
epoch 35: train_loss: 0.62674; Allocated: 572416; Reserved: 6291456; time used = 52.85784888267517s
epoch 40: train_loss: 0.65025; Allocated: 572416; Reserved: 8388608; time used = 52.44055795669556s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 426.37890219688416.
Training classifier using 80.00% nodes...
{'micro': 0.705, 'macro': 0.7049926248156204, 'samples': 0.705, 'weighted': 0.7049631240781019, 'accuracy': 0.705}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2190.93it/s]100%|██████████| 1500/1500 [00:00<00:00, 4321.51it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.8069658279418945s
epoch 10: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.490236520767212s
epoch 15: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.428169250488281s
epoch 20: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.3993635177612305s
epoch 25: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.696432590484619s
epoch 30: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.4980857372283936s
epoch 35: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.432392120361328s
epoch 40: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.329471588134766s
epoch 45: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.5665624141693115s
epoch 50: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.492812871932983s
epoch 55: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.445553541183472s
epoch 60: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.645108699798584s
epoch 65: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.43070650100708s
epoch 70: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.467512845993042s
epoch 75: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.435506582260132s
epoch 80: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.61666202545166s
epoch 85: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.456766366958618s
epoch 90: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.526320219039917s
epoch 95: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.636257648468018s
epoch 100: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.455273628234863s
epoch 105: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.393517255783081s
epoch 110: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.309226989746094s
epoch 115: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.595483303070068s
epoch 120: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.329800844192505s
epoch 125: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.327467679977417s
epoch 130: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.420259714126587s
epoch 135: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.586992979049683s
epoch 140: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.457479000091553s
epoch 145: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.416317701339722s
epoch 150: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.606725454330444s
epoch 155: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.490898609161377s
epoch 160: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.410396575927734s
epoch 165: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.31301212310791s
epoch 170: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.643367767333984s
epoch 175: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.320005416870117s
epoch 180: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.335312843322754s
epoch 185: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.559866428375244s
epoch 190: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.4466392993927s
epoch 195: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.495909214019775s
epoch 200: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.450402021408081s
epoch 205: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.620510101318359s
epoch 210: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.473651885986328s
epoch 215: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.494847536087036s
epoch 220: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.4602015018463135s
epoch 225: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.700290679931641s
epoch 230: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.442896604537964s
epoch 235: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.442727088928223s
epoch 240: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.632446050643921s
epoch 245: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.423753976821899s
epoch 250: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.45721960067749s
epoch 255: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.424179553985596s
epoch 260: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.67706823348999s
epoch 265: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.448346376419067s
epoch 270: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.378113508224487s
epoch 275: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.5642759799957275s
epoch 280: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.495428562164307s
epoch 285: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.356021404266357s
epoch 290: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.404784440994263s
epoch 295: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.622450351715088s
epoch 300: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.45053243637085s
epoch 305: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.355921030044556s
epoch 310: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.647660970687866s
epoch 315: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.412073850631714s
epoch 320: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.369226694107056s
epoch 325: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.471970796585083s
epoch 330: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.565410375595093s
epoch 335: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.3853888511657715s
epoch 340: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.365583419799805s
epoch 345: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.442789793014526s
epoch 350: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.62015700340271s
epoch 355: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.487738609313965s
epoch 360: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.4285502433776855s
epoch 365: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.630312204360962s
epoch 370: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.337895393371582s
epoch 375: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.3726091384887695s
epoch 380: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.399104118347168s
epoch 385: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.504511117935181s
epoch 390: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.364773511886597s
epoch 395: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.446038246154785s
epoch 400: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.620798349380493s
epoch 405: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.4877238273620605s
epoch 410: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.476620674133301s
epoch 415: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.342528820037842s
epoch 420: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.489360332489014s
epoch 425: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.37875771522522s
epoch 430: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.375377655029297s
epoch 435: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.402059316635132s
epoch 440: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.650857448577881s
epoch 445: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.452897071838379s
epoch 450: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.394069671630859s
epoch 455: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.61482048034668s
epoch 460: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.519510746002197s
epoch 465: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.505865812301636s
epoch 470: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.394004821777344s
epoch 475: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.520372629165649s
epoch 480: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.431499004364014s
epoch 485: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.420196056365967s
epoch 490: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.646997451782227s
epoch 495: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.456217050552368s
epoch 500: train_loss: 0.69315; Allocated: 767488; Reserved: 12582912; time used = 7.425235986709595s
Finished training. Time used = 751.6670498847961.
Training classifier using 80.00% nodes...
{'micro': 0.39666666666666667, 'macro': 0.31629266012155216, 'samples': 0.39666666666666667, 'weighted': 0.30680388031790556, 'accuracy': 0.39666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.61609; Allocated: 19008000; Reserved: 46137344; time used = 3.521017074584961s
epoch 10: train_loss: 0.41135; Allocated: 19008000; Reserved: 46137344; time used = 3.3949036598205566s
epoch 15: train_loss: 0.23413; Allocated: 19008000; Reserved: 46137344; time used = 3.549368143081665s
epoch 20: train_loss: 0.14782; Allocated: 19008000; Reserved: 46137344; time used = 3.3943986892700195s
epoch 25: train_loss: 0.09023; Allocated: 19008000; Reserved: 46137344; time used = 3.3917386531829834s
epoch 30: train_loss: 0.05375; Allocated: 19008000; Reserved: 46137344; time used = 3.406863212585449s
epoch 35: train_loss: 0.03271; Allocated: 19008000; Reserved: 46137344; time used = 3.3926093578338623s
epoch 40: train_loss: 0.02730; Allocated: 19008000; Reserved: 46137344; time used = 3.4023900032043457s
epoch 45: train_loss: 0.13005; Allocated: 19008000; Reserved: 46137344; time used = 3.559786558151245s
epoch 50: train_loss: 0.02484; Allocated: 19008000; Reserved: 46137344; time used = 3.392346143722534s
epoch 55: train_loss: 0.02028; Allocated: 19008000; Reserved: 46137344; time used = 3.3942155838012695s
epoch 60: train_loss: 0.02914; Allocated: 19008000; Reserved: 46137344; time used = 3.363821268081665s
epoch 65: train_loss: 0.00108; Allocated: 19008000; Reserved: 46137344; time used = 3.5071377754211426s
epoch 70: train_loss: 0.00111; Allocated: 19008000; Reserved: 46137344; time used = 3.41321063041687s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 53.06916785240173.
Training classifier using 20.00% nodes...
{'micro': 0.7069681587448085, 'macro': 0.6406456962673498, 'samples': 0.7069681587448085, 'weighted': 0.6914158241038167, 'accuracy': 0.7069681587448085}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2702.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 5033.42it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.48467; Allocated: 418304; Reserved: 4194304; time used = 36.440900564193726s
epoch 10: train_loss: 1.41952; Allocated: 418304; Reserved: 6291456; time used = 35.396703004837036s
epoch 15: train_loss: 1.39854; Allocated: 418304; Reserved: 6291456; time used = 35.55895686149597s
epoch 20: train_loss: 1.39127; Allocated: 418304; Reserved: 6291456; time used = 35.65788197517395s
epoch 25: train_loss: 1.38807; Allocated: 418304; Reserved: 8388608; time used = 35.57349610328674s
epoch 30: train_loss: 1.38760; Allocated: 418304; Reserved: 4194304; time used = 35.39221525192261s
epoch 35: train_loss: 1.38720; Allocated: 418304; Reserved: 6291456; time used = 35.75487971305847s
epoch 40: train_loss: 1.38685; Allocated: 418304; Reserved: 6291456; time used = 35.37785816192627s
epoch 45: train_loss: 1.38658; Allocated: 418304; Reserved: 4194304; time used = 35.68751120567322s
epoch 50: train_loss: 1.38644; Allocated: 418304; Reserved: 6291456; time used = 35.57604217529297s
epoch 55: train_loss: 1.38637; Allocated: 418304; Reserved: 4194304; time used = 35.635329246520996s
epoch 60: train_loss: 1.38634; Allocated: 418304; Reserved: 4194304; time used = 35.382503509521484s
epoch 65: train_loss: 1.38633; Allocated: 418304; Reserved: 4194304; time used = 35.49841022491455s
epoch 70: train_loss: 1.38632; Allocated: 418304; Reserved: 4194304; time used = 35.37998580932617s
epoch 75: train_loss: 1.38631; Allocated: 418304; Reserved: 4194304; time used = 35.285155296325684s
epoch 80: train_loss: 1.38631; Allocated: 418304; Reserved: 4194304; time used = 35.50772023200989s
epoch 85: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.47605037689209s
epoch 90: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.50314784049988s
epoch 95: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.49445414543152s
epoch 100: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.47248601913452s
epoch 105: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.708677768707275s
epoch 110: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.39177489280701s
epoch 115: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.74974274635315s
epoch 120: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.351147174835205s
epoch 125: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.56524848937988s
epoch 130: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 35.48862552642822s
epoch 135: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 35.43834924697876s
epoch 140: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 35.31755495071411s
epoch 145: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 35.40383958816528s
epoch 150: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 35.45299172401428s
epoch 155: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 35.36986565589905s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1112.7007746696472.
Training classifier using 80.00% nodes...
{'micro': 0.32, 'macro': 0.25866071037533395, 'samples': 0.32, 'weighted': 0.25090088906407393, 'accuracy': 0.32}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 1971.01it/s] 78%|███████▊  | 1564/2000 [00:00<00:00, 2592.44it/s]100%|██████████| 2000/2000 [00:00<00:00, 4577.95it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 87852152461.91772; Allocated: 4067840; Reserved: 31457280; time used = 935.6700270175934s
epoch 10: train_loss: 13094295660.08423; Allocated: 4067840; Reserved: 31457280; time used = 936.4928946495056s
epoch 15: train_loss: 9930108742.05615; Allocated: 4067840; Reserved: 31457280; time used = 934.714017868042s
epoch 20: train_loss: 3813572199.38782; Allocated: 4067840; Reserved: 33554432; time used = 937.9680304527283s
epoch 25: train_loss: 594634500.55652; Allocated: 4067840; Reserved: 31457280; time used = 935.5561053752899s
epoch 30: train_loss: 238652689.74836; Allocated: 4067840; Reserved: 31457280; time used = 936.2870781421661s
epoch 35: train_loss: 155421128.76083; Allocated: 4067840; Reserved: 31457280; time used = 934.3290205001831s
epoch 40: train_loss: 390820657.12383; Allocated: 4067840; Reserved: 31457280; time used = 937.4586520195007s
epoch 45: train_loss: 345185301.14967; Allocated: 4067840; Reserved: 31457280; time used = 936.3989744186401s
epoch 50: train_loss: 44311197.86149; Allocated: 4067840; Reserved: 31457280; time used = 936.7943975925446s
epoch 55: train_loss: 43240105.01390; Allocated: 4067840; Reserved: 31457280; time used = 935.5560534000397s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10676.771761417389.
Training classifier using 80.00% nodes...
{'micro': 0.7425, 'macro': 0.735949907390198, 'samples': 0.7425, 'weighted': 0.7347022707026167, 'accuracy': 0.7425}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38741; Allocated: 934400; Reserved: 4194304; time used = 4.53997015953064s
epoch 10: train_loss: 1.38546; Allocated: 934400; Reserved: 4194304; time used = 4.503768444061279s
epoch 15: train_loss: 1.38586; Allocated: 934400; Reserved: 4194304; time used = 4.671715974807739s
epoch 20: train_loss: 1.36186; Allocated: 934400; Reserved: 4194304; time used = 4.560657739639282s
epoch 25: train_loss: 1.39623; Allocated: 934400; Reserved: 4194304; time used = 4.55029034614563s
epoch 30: train_loss: 1.34690; Allocated: 934400; Reserved: 4194304; time used = 4.643279314041138s
epoch 35: train_loss: 1.25165; Allocated: 934400; Reserved: 4194304; time used = 4.571965456008911s
epoch 40: train_loss: 1.20732; Allocated: 934400; Reserved: 4194304; time used = 4.501677751541138s
epoch 45: train_loss: 1.21578; Allocated: 934400; Reserved: 4194304; time used = 4.520050525665283s
epoch 50: train_loss: 1.19805; Allocated: 934400; Reserved: 4194304; time used = 4.675804376602173s
epoch 55: train_loss: 1.16761; Allocated: 934400; Reserved: 4194304; time used = 4.482609033584595s
epoch 60: train_loss: 1.17180; Allocated: 934400; Reserved: 4194304; time used = 4.49723744392395s
epoch 65: train_loss: 1.20326; Allocated: 934400; Reserved: 4194304; time used = 4.476002216339111s
epoch 70: train_loss: 1.20703; Allocated: 934400; Reserved: 4194304; time used = 4.623246192932129s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 70.39419174194336.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2049.85it/s]100%|██████████| 1500/1500 [00:00<00:00, 4094.54it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68374; Allocated: 772096; Reserved: 16777216; time used = 8.341807842254639s
epoch 10: train_loss: 0.70588; Allocated: 772096; Reserved: 37748736; time used = 7.9384355545043945s
epoch 15: train_loss: 0.70166; Allocated: 772096; Reserved: 16777216; time used = 8.001785516738892s
epoch 20: train_loss: 0.69341; Allocated: 772096; Reserved: 16777216; time used = 7.999943971633911s
epoch 25: train_loss: 0.69168; Allocated: 772096; Reserved: 16777216; time used = 8.2537100315094s
epoch 30: train_loss: 0.69651; Allocated: 772096; Reserved: 39845888; time used = 8.074222803115845s
epoch 35: train_loss: 0.68796; Allocated: 772096; Reserved: 16777216; time used = 8.023728370666504s
epoch 40: train_loss: 0.69427; Allocated: 772096; Reserved: 16777216; time used = 8.228995561599731s
epoch 45: train_loss: 0.69198; Allocated: 772096; Reserved: 16777216; time used = 7.968161344528198s
epoch 50: train_loss: 0.68335; Allocated: 772096; Reserved: 16777216; time used = 7.980139493942261s
epoch 55: train_loss: 0.69447; Allocated: 772096; Reserved: 16777216; time used = 7.989343643188477s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 100.50667548179626.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 12471581.04403; Allocated: 17684480; Reserved: 297795584; time used = 3.976614475250244s
epoch 10: train_loss: 13580817.89447; Allocated: 17684480; Reserved: 297795584; time used = 4.031624794006348s
epoch 15: train_loss: 8517733.78567; Allocated: 17684480; Reserved: 297795584; time used = 3.836010217666626s
epoch 20: train_loss: 737460.51716; Allocated: 17684480; Reserved: 297795584; time used = 3.8675003051757812s
epoch 25: train_loss: 415958.62053; Allocated: 17684480; Reserved: 297795584; time used = 3.9910430908203125s
epoch 30: train_loss: 1.38883; Allocated: 17684480; Reserved: 297795584; time used = 3.8100311756134033s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.285412073135376.
Training classifier using 20.00% nodes...
{'micro': 0.3031841255191509, 'macro': 0.08299031064605426, 'samples': 0.3031841255191509, 'weighted': 0.15420720390916107, 'accuracy': 0.3031841255191509}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2753.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 4004.97it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.54763; Allocated: 624640; Reserved: 10485760; time used = 5.357039213180542s
epoch 10: train_loss: 2.90005; Allocated: 624640; Reserved: 10485760; time used = 5.333519458770752s
epoch 15: train_loss: 3.55542; Allocated: 624640; Reserved: 10485760; time used = 5.542850971221924s
epoch 20: train_loss: 2.15858; Allocated: 624640; Reserved: 10485760; time used = 5.321239948272705s
epoch 25: train_loss: 1.74279; Allocated: 624640; Reserved: 10485760; time used = 5.312226057052612s
epoch 30: train_loss: 1.55486; Allocated: 624640; Reserved: 10485760; time used = 5.308587074279785s
epoch 35: train_loss: 1.47589; Allocated: 624640; Reserved: 10485760; time used = 5.315237045288086s
epoch 40: train_loss: 1.44478; Allocated: 624640; Reserved: 10485760; time used = 5.296463489532471s
epoch 45: train_loss: 1.42416; Allocated: 624640; Reserved: 10485760; time used = 5.318732023239136s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 52.240676403045654.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.719747772995696, 'samples': 0.72, 'weighted': 0.7195796216594934, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.26197; Allocated: 40842240; Reserved: 62914560; time used = 2.355908155441284s
epoch 10: train_loss: 1.13666; Allocated: 40842240; Reserved: 62914560; time used = 2.628208875656128s
epoch 15: train_loss: 1.05263; Allocated: 40842240; Reserved: 62914560; time used = 2.4015262126922607s
epoch 20: train_loss: 0.93920; Allocated: 40842240; Reserved: 62914560; time used = 2.4341304302215576s
epoch 25: train_loss: 0.79690; Allocated: 40842240; Reserved: 62914560; time used = 2.3376338481903076s
epoch 30: train_loss: 0.74239; Allocated: 40842240; Reserved: 62914560; time used = 2.5705065727233887s
epoch 35: train_loss: 0.74145; Allocated: 40842240; Reserved: 62914560; time used = 2.333449125289917s
epoch 40: train_loss: 0.78238; Allocated: 40842240; Reserved: 62914560; time used = 2.3708889484405518s
epoch 45: train_loss: 0.72630; Allocated: 40842240; Reserved: 62914560; time used = 2.445688247680664s
epoch 50: train_loss: 0.64837; Allocated: 40842240; Reserved: 62914560; time used = 2.679790496826172s
epoch 55: train_loss: 1.01853; Allocated: 40842240; Reserved: 62914560; time used = 2.3466296195983887s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.542702436447144.
Training classifier using 20.00% nodes...
{'micro': 0.7327247369088372, 'macro': 0.7279336388912595, 'samples': 0.7327247369088373, 'weighted': 0.731416682739864, 'accuracy': 0.7327247369088373}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.53569; Allocated: 731648; Reserved: 2097152; time used = 3.0248517990112305s
epoch 10: train_loss: 0.42422; Allocated: 731648; Reserved: 2097152; time used = 3.0218207836151123s
epoch 15: train_loss: 0.29411; Allocated: 731648; Reserved: 2097152; time used = 3.1673643589019775s
epoch 20: train_loss: 0.23292; Allocated: 731648; Reserved: 2097152; time used = 3.019916534423828s
epoch 25: train_loss: 0.12777; Allocated: 731648; Reserved: 2097152; time used = 3.008453130722046s
epoch 30: train_loss: 0.07790; Allocated: 731648; Reserved: 2097152; time used = 3.144442558288574s
epoch 35: train_loss: 0.08658; Allocated: 731648; Reserved: 2097152; time used = 3.0005311965942383s
epoch 40: train_loss: 0.08547; Allocated: 731648; Reserved: 2097152; time used = 2.9991748332977295s
epoch 45: train_loss: 0.07265; Allocated: 731648; Reserved: 2097152; time used = 3.2195537090301514s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 32.983747482299805.
Training classifier using 80.00% nodes...
{'micro': 0.6578947368421053, 'macro': 0.6518675123326286, 'samples': 0.6578947368421053, 'weighted': 0.6591001817440006, 'accuracy': 0.6578947368421053}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2605.34it/s] 82%|████████▏ | 1632/2000 [00:00<00:00, 3363.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 5563.95it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2669.62it/s]100%|██████████| 1500/1500 [00:00<00:00, 5001.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 2.81705; Allocated: 834048; Reserved: 16777216; time used = 10.717994451522827s
epoch 10: train_loss: 1.54014; Allocated: 834048; Reserved: 16777216; time used = 10.366222381591797s
epoch 15: train_loss: 1.39623; Allocated: 834048; Reserved: 16777216; time used = 10.263191938400269s
epoch 20: train_loss: 1.38765; Allocated: 834048; Reserved: 16777216; time used = 10.306249618530273s
epoch 25: train_loss: 1.39717; Allocated: 834048; Reserved: 16777216; time used = 10.495893239974976s
epoch 30: train_loss: 1.39405; Allocated: 834048; Reserved: 16777216; time used = 10.377581596374512s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 66.4962956905365.
Training classifier using 80.00% nodes...
{'micro': 0.43666666666666665, 'macro': 0.43073490611952153, 'samples': 0.43666666666666665, 'weighted': 0.43041285893593584, 'accuracy': 0.43666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.41617; Allocated: 18940416; Reserved: 41943040; time used = 4.798828840255737s
epoch 10: train_loss: 0.38908; Allocated: 18940416; Reserved: 41943040; time used = 4.956470727920532s
epoch 15: train_loss: 0.37789; Allocated: 18940416; Reserved: 41943040; time used = 4.783832311630249s
epoch 20: train_loss: 0.36774; Allocated: 18940416; Reserved: 41943040; time used = 4.942692041397095s
epoch 25: train_loss: 0.36427; Allocated: 18940416; Reserved: 41943040; time used = 4.7738683223724365s
epoch 30: train_loss: 0.36202; Allocated: 18940416; Reserved: 41943040; time used = 4.946404218673706s
epoch 35: train_loss: 0.36313; Allocated: 18940416; Reserved: 41943040; time used = 4.758327007293701s
epoch 40: train_loss: 0.35664; Allocated: 18940416; Reserved: 41943040; time used = 4.933146953582764s
epoch 45: train_loss: 0.35504; Allocated: 18940416; Reserved: 41943040; time used = 4.761031150817871s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 48.45099449157715.
Training classifier using 20.00% nodes...
{'micro': 0.8071065989847716, 'macro': 0.7877822509886376, 'samples': 0.8071065989847716, 'weighted': 0.806123802474825, 'accuracy': 0.8071065989847716}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2439.08it/s]100%|██████████| 1500/1500 [00:00<00:00, 4687.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.66558; Allocated: 488448; Reserved: 6291456; time used = 196.32310700416565s
epoch 10: train_loss: 0.56729; Allocated: 488448; Reserved: 8388608; time used = 194.37090682983398s
epoch 15: train_loss: 0.48380; Allocated: 488448; Reserved: 8388608; time used = 197.06955933570862s
epoch 20: train_loss: 0.27345; Allocated: 488448; Reserved: 6291456; time used = 196.13638973236084s
epoch 25: train_loss: 0.12077; Allocated: 488448; Reserved: 6291456; time used = 193.23214173316956s
epoch 30: train_loss: 0.46951; Allocated: 488448; Reserved: 8388608; time used = 193.66363048553467s
epoch 35: train_loss: 0.22685; Allocated: 488448; Reserved: 6291456; time used = 195.51890635490417s
epoch 40: train_loss: 0.19865; Allocated: 488448; Reserved: 6291456; time used = 192.30232548713684s
epoch 45: train_loss: 0.13129; Allocated: 488448; Reserved: 8388608; time used = 200.47274351119995s
epoch 50: train_loss: 0.08423; Allocated: 488448; Reserved: 8388608; time used = 196.99079871177673s
epoch 55: train_loss: 0.06123; Allocated: 488448; Reserved: 6291456; time used = 194.77984166145325s
epoch 60: train_loss: 0.22807; Allocated: 488448; Reserved: 8388608; time used = 193.4316210746765s
epoch 65: train_loss: 0.36812; Allocated: 488448; Reserved: 8388608; time used = 194.3740212917328s
epoch 70: train_loss: 0.15712; Allocated: 488448; Reserved: 8388608; time used = 195.1871600151062s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2817.006067276001.
Training classifier using 80.00% nodes...
{'micro': 0.49666666666666665, 'macro': 0.4020533363980145, 'samples': 0.49666666666666665, 'weighted': 0.38999173630607403, 'accuracy': 0.49666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64240; Allocated: 843776; Reserved: 4194304; time used = 0.9075098037719727s
epoch 10: train_loss: 0.63236; Allocated: 843776; Reserved: 6291456; time used = 0.9109065532684326s
epoch 15: train_loss: 0.63292; Allocated: 843776; Reserved: 6291456; time used = 0.9091289043426514s
epoch 20: train_loss: 0.61582; Allocated: 843776; Reserved: 4194304; time used = 0.9082291126251221s
epoch 25: train_loss: 0.61901; Allocated: 843776; Reserved: 4194304; time used = 0.9050314426422119s
epoch 30: train_loss: 0.58901; Allocated: 843776; Reserved: 4194304; time used = 0.9073901176452637s
epoch 35: train_loss: 0.57354; Allocated: 843776; Reserved: 4194304; time used = 1.0652306079864502s
epoch 40: train_loss: 0.57594; Allocated: 843776; Reserved: 4194304; time used = 0.9004192352294922s
epoch 45: train_loss: 0.53123; Allocated: 843776; Reserved: 4194304; time used = 0.9093501567840576s
epoch 50: train_loss: 0.50617; Allocated: 843776; Reserved: 4194304; time used = 0.9076330661773682s
epoch 55: train_loss: 0.53476; Allocated: 843776; Reserved: 4194304; time used = 0.9050259590148926s
epoch 60: train_loss: 0.55140; Allocated: 843776; Reserved: 4194304; time used = 0.9043326377868652s
epoch 65: train_loss: 0.55211; Allocated: 843776; Reserved: 4194304; time used = 0.9021263122558594s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.939465999603271.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.43673469387755104, 'samples': 0.5362318840579711, 'weighted': 0.45388938183969235, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.60461; Allocated: 994304; Reserved: 4194304; time used = 1.738304615020752s
epoch 10: train_loss: 0.54042; Allocated: 994304; Reserved: 4194304; time used = 1.7224531173706055s
epoch 15: train_loss: 0.45200; Allocated: 994304; Reserved: 4194304; time used = 1.6817545890808105s
epoch 20: train_loss: 0.23015; Allocated: 994304; Reserved: 4194304; time used = 1.6901860237121582s
epoch 25: train_loss: 0.18864; Allocated: 994304; Reserved: 4194304; time used = 1.7106537818908691s
epoch 30: train_loss: 0.09899; Allocated: 994304; Reserved: 4194304; time used = 1.7141079902648926s
epoch 35: train_loss: 0.04761; Allocated: 994304; Reserved: 4194304; time used = 1.71311616897583s
epoch 40: train_loss: 0.06294; Allocated: 994304; Reserved: 4194304; time used = 1.7134637832641602s
epoch 45: train_loss: 0.11662; Allocated: 994304; Reserved: 4194304; time used = 1.710911750793457s
epoch 50: train_loss: 0.19233; Allocated: 994304; Reserved: 4194304; time used = 1.7248427867889404s
epoch 55: train_loss: 0.17998; Allocated: 994304; Reserved: 4194304; time used = 1.6997337341308594s
epoch 60: train_loss: 0.07491; Allocated: 994304; Reserved: 4194304; time used = 1.7259173393249512s
epoch 65: train_loss: 0.03897; Allocated: 994304; Reserved: 4194304; time used = 1.7247309684753418s
epoch 70: train_loss: 0.02914; Allocated: 994304; Reserved: 4194304; time used = 1.719752550125122s
epoch 75: train_loss: 0.01536; Allocated: 994304; Reserved: 4194304; time used = 1.7435455322265625s
epoch 80: train_loss: 0.10357; Allocated: 994304; Reserved: 4194304; time used = 1.7411396503448486s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.55480670928955.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.61639; Allocated: 776192; Reserved: 4194304; time used = 6.42325758934021s
epoch 10: train_loss: 0.61756; Allocated: 776192; Reserved: 4194304; time used = 6.2375569343566895s
epoch 15: train_loss: 0.61379; Allocated: 776192; Reserved: 4194304; time used = 6.421520471572876s
epoch 20: train_loss: 0.61477; Allocated: 776192; Reserved: 4194304; time used = 6.473015069961548s
epoch 25: train_loss: 0.60868; Allocated: 776192; Reserved: 4194304; time used = 6.4021477699279785s
epoch 30: train_loss: 0.60666; Allocated: 776192; Reserved: 4194304; time used = 6.18203330039978s
epoch 35: train_loss: 0.61224; Allocated: 776192; Reserved: 4194304; time used = 6.338033437728882s
epoch 40: train_loss: 0.61463; Allocated: 776192; Reserved: 4194304; time used = 6.377582788467407s
epoch 45: train_loss: 0.61456; Allocated: 776192; Reserved: 4194304; time used = 6.225865840911865s
epoch 50: train_loss: 0.58738; Allocated: 776192; Reserved: 4194304; time used = 6.298358917236328s
epoch 55: train_loss: 0.62453; Allocated: 776192; Reserved: 4194304; time used = 6.303616762161255s
epoch 60: train_loss: 0.59510; Allocated: 776192; Reserved: 4194304; time used = 6.301305055618286s
epoch 65: train_loss: 0.61918; Allocated: 776192; Reserved: 4194304; time used = 6.311933517456055s
epoch 70: train_loss: 0.62801; Allocated: 776192; Reserved: 4194304; time used = 6.3265979290008545s
epoch 75: train_loss: 0.63482; Allocated: 776192; Reserved: 4194304; time used = 6.316003084182739s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 98.98753094673157.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.4817404817404818, 'samples': 0.5797101449275363, 'weighted': 0.4980687589383242, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.37986; Allocated: 843776; Reserved: 4194304; time used = 0.9088022708892822s
epoch 10: train_loss: 1.35996; Allocated: 843776; Reserved: 6291456; time used = 0.9082083702087402s
epoch 15: train_loss: 1.34857; Allocated: 843776; Reserved: 4194304; time used = 0.9131100177764893s
epoch 20: train_loss: 1.33091; Allocated: 843776; Reserved: 4194304; time used = 1.0067741870880127s
epoch 25: train_loss: 1.32996; Allocated: 843776; Reserved: 4194304; time used = 0.9357912540435791s
epoch 30: train_loss: 1.31467; Allocated: 843776; Reserved: 4194304; time used = 0.8678967952728271s
epoch 35: train_loss: 1.32927; Allocated: 843776; Reserved: 4194304; time used = 1.0295591354370117s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.259754657745361.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6376811594202898, 'samples': 0.6376811594202898, 'weighted': 0.6376811594202898, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2698.36it/s] 82%|████████▏ | 1641/2000 [00:00<00:00, 3474.77it/s]100%|██████████| 2000/2000 [00:00<00:00, 5719.41it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68574; Allocated: 3849728; Reserved: 29360128; time used = 821.3495764732361s
epoch 10: train_loss: 0.63784; Allocated: 3849728; Reserved: 31457280; time used = 821.1053328514099s
epoch 15: train_loss: 0.58108; Allocated: 3849728; Reserved: 29360128; time used = 822.6310119628906s
epoch 20: train_loss: 0.54464; Allocated: 3849728; Reserved: 29360128; time used = 813.589245557785s
epoch 25: train_loss: 0.50416; Allocated: 3849728; Reserved: 31457280; time used = 812.6125385761261s
epoch 30: train_loss: 0.50840; Allocated: 3849728; Reserved: 27262976; time used = 815.3321025371552s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 4911.083260536194.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.6975501562657527, 'samples': 0.7, 'weighted': 0.6967335416876702, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.52061; Allocated: 53489664; Reserved: 109051904; time used = 4.146391153335571s
epoch 10: train_loss: 0.39104; Allocated: 53489664; Reserved: 109051904; time used = 4.2992353439331055s
epoch 15: train_loss: 0.36571; Allocated: 53489664; Reserved: 109051904; time used = 4.139626741409302s
epoch 20: train_loss: 0.36179; Allocated: 53489664; Reserved: 109051904; time used = 4.308310031890869s
epoch 25: train_loss: 0.35839; Allocated: 53489664; Reserved: 109051904; time used = 4.142868995666504s
epoch 30: train_loss: 0.34941; Allocated: 53489664; Reserved: 109051904; time used = 4.147611141204834s
epoch 35: train_loss: 0.35096; Allocated: 53489664; Reserved: 109051904; time used = 4.344586133956909s
epoch 40: train_loss: 0.34832; Allocated: 53489664; Reserved: 109051904; time used = 4.101281642913818s
epoch 45: train_loss: 0.34482; Allocated: 53489664; Reserved: 109051904; time used = 4.2996251583099365s
epoch 50: train_loss: 0.34306; Allocated: 53489664; Reserved: 109051904; time used = 4.117494344711304s
epoch 55: train_loss: 0.34167; Allocated: 53489664; Reserved: 109051904; time used = 4.182220697402954s
epoch 60: train_loss: 0.33779; Allocated: 53489664; Reserved: 109051904; time used = 4.057830333709717s
epoch 65: train_loss: 0.34080; Allocated: 53489664; Reserved: 109051904; time used = 4.090436935424805s
epoch 70: train_loss: 0.33866; Allocated: 53489664; Reserved: 109051904; time used = 4.2565412521362305s
epoch 75: train_loss: 0.33670; Allocated: 53489664; Reserved: 109051904; time used = 4.112743377685547s
epoch 80: train_loss: 0.33485; Allocated: 53489664; Reserved: 109051904; time used = 4.296322584152222s
epoch 85: train_loss: 0.33587; Allocated: 53489664; Reserved: 109051904; time used = 4.129060745239258s
epoch 90: train_loss: 0.33431; Allocated: 53489664; Reserved: 109051904; time used = 4.124083518981934s
epoch 95: train_loss: 0.33566; Allocated: 53489664; Reserved: 109051904; time used = 4.17217755317688s
epoch 100: train_loss: 0.33456; Allocated: 53489664; Reserved: 109051904; time used = 4.070895671844482s
epoch 105: train_loss: 0.33391; Allocated: 53489664; Reserved: 109051904; time used = 4.292592525482178s
epoch 110: train_loss: 0.33252; Allocated: 53489664; Reserved: 109051904; time used = 4.1351704597473145s
epoch 115: train_loss: 0.33318; Allocated: 53489664; Reserved: 109051904; time used = 4.300997018814087s
epoch 120: train_loss: 0.33292; Allocated: 53489664; Reserved: 109051904; time used = 4.050132513046265s
epoch 125: train_loss: 0.33284; Allocated: 53489664; Reserved: 109051904; time used = 4.044133186340332s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 107.97279524803162.
Training classifier using 20.00% nodes...
{'micro': 0.625278810408922, 'macro': 0.5421303407834125, 'samples': 0.6318557475582269, 'weighted': 0.601642362232191, 'accuracy': 0.6318557475582269}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.62536; Allocated: 449536; Reserved: 4194304; time used = 3.1477861404418945s
epoch 10: train_loss: 0.59308; Allocated: 449536; Reserved: 4194304; time used = 3.1394166946411133s
epoch 15: train_loss: 0.54991; Allocated: 449536; Reserved: 4194304; time used = 3.2532224655151367s
epoch 20: train_loss: 0.55220; Allocated: 449536; Reserved: 4194304; time used = 3.127553939819336s
epoch 25: train_loss: 0.52291; Allocated: 449536; Reserved: 4194304; time used = 3.1839284896850586s
epoch 30: train_loss: 0.38966; Allocated: 449536; Reserved: 4194304; time used = 3.1736042499542236s
epoch 35: train_loss: 0.43961; Allocated: 449536; Reserved: 4194304; time used = 3.298459053039551s
epoch 40: train_loss: 0.29746; Allocated: 449536; Reserved: 4194304; time used = 3.151458501815796s
epoch 45: train_loss: 0.37359; Allocated: 449536; Reserved: 4194304; time used = 3.1635582447052s
epoch 50: train_loss: 0.29140; Allocated: 449536; Reserved: 4194304; time used = 3.343360662460327s
epoch 55: train_loss: 0.33011; Allocated: 449536; Reserved: 4194304; time used = 3.1627988815307617s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.20706057548523.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.45660; Allocated: 17677824; Reserved: 62914560; time used = 0.3079092502593994s
epoch 10: train_loss: 0.00276; Allocated: 17677824; Reserved: 62914560; time used = 0.2980525493621826s
epoch 15: train_loss: 0.00066; Allocated: 17677824; Reserved: 62914560; time used = 0.29575467109680176s
epoch 20: train_loss: 0.00004; Allocated: 17677824; Reserved: 62914560; time used = 0.2893381118774414s
epoch 25: train_loss: 0.00002; Allocated: 17677824; Reserved: 62914560; time used = 0.29606056213378906s
epoch 30: train_loss: 0.00001; Allocated: 17677824; Reserved: 62914560; time used = 0.30623435974121094s
epoch 35: train_loss: 0.00001; Allocated: 17677824; Reserved: 62914560; time used = 0.2928197383880615s
epoch 40: train_loss: 0.00001; Allocated: 17677824; Reserved: 62914560; time used = 0.29129505157470703s
epoch 45: train_loss: 0.00001; Allocated: 17677824; Reserved: 62914560; time used = 0.2870018482208252s
epoch 50: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.29262638092041016s
epoch 55: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.2845332622528076s
epoch 60: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.28935980796813965s
epoch 65: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.2897477149963379s
epoch 70: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.28254079818725586s
epoch 75: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.2829766273498535s
epoch 80: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.28541135787963867s
epoch 85: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.2958214282989502s
epoch 90: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.3006770610809326s
epoch 95: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.30679798126220703s
epoch 100: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.28772473335266113s
epoch 105: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.28974127769470215s
epoch 110: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.295107364654541s
epoch 115: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.28835320472717285s
epoch 120: train_loss: 0.00000; Allocated: 17677824; Reserved: 62914560; time used = 0.2830221652984619s
epoch 125: train_loss: 0.00017; Allocated: 17677824; Reserved: 62914560; time used = 0.29724884033203125s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.101732730865479.
Training classifier using 20.00% nodes...
{'micro': 0.6963544070143055, 'macro': 0.6449798250481396, 'samples': 0.6963544070143055, 'weighted': 0.682254830333604, 'accuracy': 0.6963544070143055}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2861.49it/s]100%|██████████| 1000/1000 [00:00<00:00, 4143.76it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2850.66it/s]100%|██████████| 1500/1500 [00:00<00:00, 5251.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.67402; Allocated: 768512; Reserved: 16777216; time used = 11.007044553756714s
epoch 10: train_loss: 1.40675; Allocated: 768512; Reserved: 37748736; time used = 10.748319625854492s
epoch 15: train_loss: 1.38545; Allocated: 768512; Reserved: 16777216; time used = 10.72972297668457s
epoch 20: train_loss: 1.36897; Allocated: 768512; Reserved: 16777216; time used = 10.765497922897339s
epoch 25: train_loss: 1.37044; Allocated: 768512; Reserved: 16777216; time used = 10.924223184585571s
epoch 30: train_loss: 1.36439; Allocated: 768512; Reserved: 37748736; time used = 10.737995624542236s
epoch 35: train_loss: 1.35834; Allocated: 768512; Reserved: 16777216; time used = 10.649876117706299s
epoch 40: train_loss: 1.35567; Allocated: 768512; Reserved: 16777216; time used = 10.936164140701294s
epoch 45: train_loss: 1.34754; Allocated: 768512; Reserved: 16777216; time used = 10.636346817016602s
epoch 50: train_loss: 1.33981; Allocated: 768512; Reserved: 16777216; time used = 10.57323145866394s
epoch 55: train_loss: 1.33570; Allocated: 768512; Reserved: 16777216; time used = 10.529676675796509s
epoch 60: train_loss: 1.33027; Allocated: 768512; Reserved: 37748736; time used = 10.742608547210693s
epoch 65: train_loss: 1.32637; Allocated: 768512; Reserved: 16777216; time used = 10.63624906539917s
epoch 70: train_loss: 1.33346; Allocated: 768512; Reserved: 37748736; time used = 10.724045038223267s
epoch 75: train_loss: 1.31945; Allocated: 768512; Reserved: 16777216; time used = 10.900739192962646s
epoch 80: train_loss: 1.32385; Allocated: 768512; Reserved: 37748736; time used = 10.711206436157227s
epoch 85: train_loss: 1.31940; Allocated: 768512; Reserved: 37748736; time used = 10.50627326965332s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 189.35118579864502.
Training classifier using 80.00% nodes...
{'micro': 0.4000000000000001, 'macro': 0.39360996992504077, 'samples': 0.4, 'weighted': 0.39212425147245084, 'accuracy': 0.4}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.55040; Allocated: 511488; Reserved: 8388608; time used = 4.244024038314819s
epoch 10: train_loss: 0.51044; Allocated: 511488; Reserved: 8388608; time used = 4.217350482940674s
epoch 15: train_loss: 0.50916; Allocated: 511488; Reserved: 8388608; time used = 4.301990509033203s
epoch 20: train_loss: 0.50720; Allocated: 511488; Reserved: 8388608; time used = 4.156040668487549s
epoch 25: train_loss: 0.50804; Allocated: 511488; Reserved: 8388608; time used = 4.325334072113037s
epoch 30: train_loss: 0.49681; Allocated: 511488; Reserved: 8388608; time used = 4.155885457992554s
epoch 35: train_loss: 0.49384; Allocated: 511488; Reserved: 8388608; time used = 4.1280388832092285s
epoch 40: train_loss: 0.48803; Allocated: 511488; Reserved: 8388608; time used = 4.173092842102051s
epoch 45: train_loss: 0.48977; Allocated: 511488; Reserved: 8388608; time used = 4.32239556312561s
epoch 50: train_loss: 0.49411; Allocated: 511488; Reserved: 8388608; time used = 4.231380939483643s
epoch 55: train_loss: 0.50059; Allocated: 511488; Reserved: 8388608; time used = 4.2159788608551025s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 50.89206671714783.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.8869047619047619, 'samples': 0.8947368421052632, 'weighted': 0.8916040100250626, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2848.28it/s] 82%|████████▏ | 1634/2000 [00:00<00:00, 3645.21it/s]100%|██████████| 2000/2000 [00:00<00:00, 5901.91it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2850.07it/s] 82%|████████▏ | 1649/2000 [00:00<00:00, 3652.91it/s]100%|██████████| 2000/2000 [00:00<00:00, 5918.33it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 78, in forward
    neg_score = get_score(hxn, neg)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 73, in get_score
    h = self.embed(sample)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 50, in embed
    return F.normalize(self.encoder(x), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 60, in forward
    hx = layer([hx, adj])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 124, in forward
    c = masked_softmax(torch.nn.functional.leaky_relu(c, 0.2), adj)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 97, in masked_softmax
    masked_exps = exps * mask.float()
RuntimeError: CUDA out of memory. Tried to allocate 494.00 MiB (GPU 0; 10.76 GiB total capacity; 9.34 GiB already allocated; 331.12 MiB free; 9.43 GiB reserved in total by PyTorch)
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.01505; Allocated: 719360; Reserved: 4194304; time used = 6.133181810379028s
epoch 10: train_loss: 1.51003; Allocated: 719360; Reserved: 4194304; time used = 6.052317380905151s
epoch 15: train_loss: 1.37038; Allocated: 719360; Reserved: 4194304; time used = 6.759960412979126s
epoch 20: train_loss: 1.38152; Allocated: 719360; Reserved: 4194304; time used = 6.208725690841675s
epoch 25: train_loss: 1.36965; Allocated: 719360; Reserved: 4194304; time used = 6.066465139389038s
epoch 30: train_loss: 1.38031; Allocated: 719360; Reserved: 4194304; time used = 6.119545936584473s
epoch 35: train_loss: 1.35599; Allocated: 719360; Reserved: 6291456; time used = 6.2085840702056885s
epoch 40: train_loss: 1.36767; Allocated: 719360; Reserved: 4194304; time used = 6.233389854431152s
epoch 45: train_loss: 1.37424; Allocated: 719360; Reserved: 6291456; time used = 6.083354711532593s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.27495360374451.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.5337837837837838, 'samples': 0.5362318840579711, 'weighted': 0.5362318840579711, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.46610; Allocated: 17603072; Reserved: 48234496; time used = 3.2083938121795654s
epoch 10: train_loss: 0.36934; Allocated: 17603072; Reserved: 48234496; time used = 3.1806650161743164s
epoch 15: train_loss: 0.20307; Allocated: 17603072; Reserved: 48234496; time used = 3.3670918941497803s
epoch 20: train_loss: 0.13516; Allocated: 17603072; Reserved: 48234496; time used = 3.1984975337982178s
epoch 25: train_loss: 0.07457; Allocated: 17603072; Reserved: 48234496; time used = 3.2157838344573975s
epoch 30: train_loss: 0.03584; Allocated: 17603072; Reserved: 48234496; time used = 3.1871659755706787s
epoch 35: train_loss: 0.00033; Allocated: 17603072; Reserved: 48234496; time used = 3.2267868518829346s
epoch 40: train_loss: 0.00062; Allocated: 17603072; Reserved: 48234496; time used = 3.177496910095215s
epoch 45: train_loss: 0.00141; Allocated: 17603072; Reserved: 48234496; time used = 3.3318982124328613s
epoch 50: train_loss: 0.69519; Allocated: 17603072; Reserved: 48234496; time used = 3.2102866172790527s
epoch 55: train_loss: 0.05153; Allocated: 17603072; Reserved: 48234496; time used = 3.1850361824035645s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.35309958457947.
Training classifier using 20.00% nodes...
{'micro': 0.4863867097369635, 'macro': 0.26590791523919527, 'samples': 0.4863867097369635, 'weighted': 0.37303772437638566, 'accuracy': 0.4863867097369635}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.39309; Allocated: 713728; Reserved: 4194304; time used = 0.833075761795044s
epoch 10: train_loss: 1.50833; Allocated: 713728; Reserved: 4194304; time used = 0.8312385082244873s
epoch 15: train_loss: 1.40163; Allocated: 713728; Reserved: 4194304; time used = 0.8171470165252686s
epoch 20: train_loss: 1.29275; Allocated: 713728; Reserved: 4194304; time used = 0.8237018585205078s
epoch 25: train_loss: 1.22918; Allocated: 713728; Reserved: 4194304; time used = 0.8328492641448975s
epoch 30: train_loss: 1.17843; Allocated: 713728; Reserved: 4194304; time used = 0.8310301303863525s
epoch 35: train_loss: 1.13087; Allocated: 713728; Reserved: 4194304; time used = 0.8100104331970215s
epoch 40: train_loss: 1.10897; Allocated: 713728; Reserved: 4194304; time used = 0.8233559131622314s
epoch 45: train_loss: 1.09519; Allocated: 713728; Reserved: 4194304; time used = 0.8098556995391846s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.475687026977539.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8403361344537816, 'samples': 0.8421052631578947, 'weighted': 0.8429898275099513, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.36257; Allocated: 40846848; Reserved: 62914560; time used = 3.754270315170288s
epoch 10: train_loss: 1.26595; Allocated: 40846848; Reserved: 62914560; time used = 3.452756881713867s
epoch 15: train_loss: 1.24739; Allocated: 40846848; Reserved: 62914560; time used = 3.6312410831451416s
epoch 20: train_loss: 1.22334; Allocated: 40846848; Reserved: 62914560; time used = 3.576303720474243s
epoch 25: train_loss: 1.28003; Allocated: 40846848; Reserved: 62914560; time used = 3.5910661220550537s
epoch 30: train_loss: 1.17902; Allocated: 40846848; Reserved: 62914560; time used = 3.8531293869018555s
epoch 35: train_loss: 1.16393; Allocated: 40846848; Reserved: 62914560; time used = 3.484598398208618s
epoch 40: train_loss: 1.25402; Allocated: 40846848; Reserved: 62914560; time used = 3.7202463150024414s
epoch 45: train_loss: 1.19597; Allocated: 40846848; Reserved: 62914560; time used = 3.4719316959381104s
epoch 50: train_loss: 1.18299; Allocated: 40846848; Reserved: 62914560; time used = 3.739753484725952s
epoch 55: train_loss: 1.16614; Allocated: 40846848; Reserved: 62914560; time used = 3.495812177658081s
epoch 60: train_loss: 1.16479; Allocated: 40846848; Reserved: 62914560; time used = 3.6879870891571045s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 47.32986283302307.
Training classifier using 20.00% nodes...
{'micro': 0.6813744135919868, 'macro': 0.6750889538261537, 'samples': 0.6813744135919868, 'weighted': 0.6794834600236633, 'accuracy': 0.6813744135919868}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3052.25it/s]100%|██████████| 1500/1500 [00:00<00:00, 5527.22it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69226; Allocated: 564736; Reserved: 6291456; time used = 51.051549434661865s
epoch 10: train_loss: 0.69206; Allocated: 564736; Reserved: 6291456; time used = 50.931310415267944s
epoch 15: train_loss: 0.68344; Allocated: 564736; Reserved: 6291456; time used = 51.24290227890015s
epoch 20: train_loss: 0.68903; Allocated: 564736; Reserved: 8388608; time used = 51.102420806884766s
epoch 25: train_loss: 0.56851; Allocated: 564736; Reserved: 6291456; time used = 50.9823362827301s
epoch 30: train_loss: 0.13837; Allocated: 564736; Reserved: 6291456; time used = 51.08452773094177s
epoch 35: train_loss: 0.04417; Allocated: 564736; Reserved: 6291456; time used = 50.95076012611389s
epoch 40: train_loss: 0.02209; Allocated: 564736; Reserved: 6291456; time used = 50.85424852371216s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 442.54863119125366.
Training classifier using 80.00% nodes...
{'micro': 0.5266666666666666, 'macro': 0.5168059872110885, 'samples': 0.5266666666666666, 'weighted': 0.5130875218804701, 'accuracy': 0.5266666666666666}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2452.43it/s] 79%|███████▉  | 1583/2000 [00:00<00:00, 3170.08it/s]100%|██████████| 2000/2000 [00:00<00:00, 5311.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 86.95174407958984s
epoch 10: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 87.54559254646301s
epoch 15: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.16673374176025s
epoch 20: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.29506516456604s
epoch 25: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.17644166946411s
epoch 30: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.56510972976685s
epoch 35: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.31451964378357s
epoch 40: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.31398296356201s
epoch 45: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.70683670043945s
epoch 50: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.08217883110046s
epoch 55: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.92827939987183s
epoch 60: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.24829077720642s
epoch 65: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.5732855796814s
epoch 70: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.35055232048035s
epoch 75: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 86.14900350570679s
epoch 80: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.673020362854s
epoch 85: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.29692244529724s
epoch 90: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.20147633552551s
epoch 95: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.23706221580505s
epoch 100: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.44259452819824s
epoch 105: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.32510900497437s
epoch 110: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.94813919067383s
epoch 115: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.9122679233551s
epoch 120: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.19727373123169s
epoch 125: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.38949728012085s
epoch 130: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.53111433982849s
epoch 135: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 85.27325510978699s
epoch 140: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 87.01931667327881s
epoch 145: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.93027997016907s
epoch 150: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.62410950660706s
epoch 155: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.15410876274109s
epoch 160: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.90060758590698s
epoch 165: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.23823165893555s
epoch 170: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.4550518989563s
epoch 175: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.70363068580627s
epoch 180: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.80423188209534s
epoch 185: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.48301768302917s
epoch 190: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.97768473625183s
epoch 195: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.7177062034607s
epoch 200: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.50513005256653s
epoch 205: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.15922975540161s
epoch 210: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 86.60489201545715s
epoch 215: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.18875336647034s
epoch 220: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.50989389419556s
epoch 225: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.98725128173828s
epoch 230: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 94.21707653999329s
epoch 235: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.39151763916016s
epoch 240: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 87.80518555641174s
epoch 245: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.24058508872986s
epoch 250: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.39721441268921s
epoch 255: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.93726372718811s
epoch 260: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 86.42345714569092s
epoch 265: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.79456639289856s
epoch 270: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.18529915809631s
epoch 275: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 84.44399285316467s
epoch 280: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.73825001716614s
epoch 285: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.24892997741699s
epoch 290: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.98935794830322s
epoch 295: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.16411352157593s
epoch 300: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.87751126289368s
epoch 305: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.94924068450928s
epoch 310: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.08422470092773s
epoch 315: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.00135707855225s
epoch 320: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.60604047775269s
epoch 325: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.92557978630066s
epoch 330: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.62411546707153s
epoch 335: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.763423204422s
epoch 340: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.20590734481812s
epoch 345: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.25323867797852s
epoch 350: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 86.47492289543152s
epoch 355: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.0677809715271s
epoch 360: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.71917009353638s
epoch 365: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.78757500648499s
epoch 370: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.51574611663818s
epoch 375: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.3970844745636s
epoch 380: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.07093262672424s
epoch 385: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.26834750175476s
epoch 390: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.0181782245636s
epoch 395: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 87.19862222671509s
epoch 400: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.14116215705872s
epoch 405: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 87.25355124473572s
epoch 410: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.78794550895691s
epoch 415: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.57848691940308s
epoch 420: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.02057003974915s
epoch 425: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 89.83354377746582s
epoch 430: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.32850790023804s
epoch 435: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.8156418800354s
epoch 440: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.94158053398132s
epoch 445: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.54762840270996s
epoch 450: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.07393789291382s
epoch 455: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.35499477386475s
epoch 460: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.01557111740112s
epoch 465: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 88.5161554813385s
epoch 470: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 93.40603613853455s
epoch 475: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 94.03359699249268s
epoch 480: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 92.96515417098999s
epoch 485: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.45215225219727s
epoch 490: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 90.82784700393677s
epoch 495: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.67743134498596s
epoch 500: train_loss: 0.69315; Allocated: 4186112; Reserved: 33554432; time used = 91.5948166847229s
Finished training. Time used = 9047.460693597794.
Training classifier using 80.00% nodes...
{'micro': 0.7025, 'macro': 0.692250001616334, 'samples': 0.7025, 'weighted': 0.6905650703751834, 'accuracy': 0.7025}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.56695; Allocated: 935936; Reserved: 8388608; time used = 0.9466803073883057s
epoch 10: train_loss: 0.69286; Allocated: 935936; Reserved: 8388608; time used = 0.944450855255127s
epoch 15: train_loss: 0.69257; Allocated: 935936; Reserved: 8388608; time used = 0.9382181167602539s
epoch 20: train_loss: 0.69157; Allocated: 935936; Reserved: 8388608; time used = 0.9411499500274658s
epoch 25: train_loss: 0.67619; Allocated: 935936; Reserved: 8388608; time used = 0.8983030319213867s
epoch 30: train_loss: 0.54177; Allocated: 935936; Reserved: 8388608; time used = 0.8808958530426025s
epoch 35: train_loss: 0.37527; Allocated: 935936; Reserved: 8388608; time used = 0.8799083232879639s
epoch 40: train_loss: 0.19996; Allocated: 935936; Reserved: 8388608; time used = 0.8822891712188721s
epoch 45: train_loss: 0.06553; Allocated: 935936; Reserved: 8388608; time used = 1.0312421321868896s
epoch 50: train_loss: 0.69315; Allocated: 935936; Reserved: 8388608; time used = 0.8842720985412598s
epoch 55: train_loss: 0.69315; Allocated: 935936; Reserved: 8388608; time used = 0.8781895637512207s
epoch 60: train_loss: 0.69315; Allocated: 935936; Reserved: 8388608; time used = 0.8839809894561768s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.112941265106201.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2785.70it/s]100%|██████████| 1500/1500 [00:00<00:00, 5166.77it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.989689588546753s
epoch 10: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.00376272201538s
epoch 15: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.876293897628784s
epoch 20: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 12.128777265548706s
epoch 25: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.9411940574646s
epoch 30: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 11.993595838546753s
epoch 35: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.899584293365479s
epoch 40: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.104654788970947s
epoch 45: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 12.128291368484497s
epoch 50: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.080217123031616s
epoch 55: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.966214656829834s
epoch 60: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.12074089050293s
epoch 65: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.077374935150146s
epoch 70: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 12.15535283088684s
epoch 75: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.048942565917969s
epoch 80: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.107023000717163s
epoch 85: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.039369583129883s
epoch 90: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.1619131565094s
epoch 95: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.03025197982788s
epoch 100: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.195778608322144s
epoch 105: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.122620820999146s
epoch 110: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.17288088798523s
epoch 115: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.926963806152344s
epoch 120: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.10318398475647s
epoch 125: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.160456895828247s
epoch 130: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.189658880233765s
epoch 135: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.027064561843872s
epoch 140: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.168159246444702s
epoch 145: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.115190029144287s
epoch 150: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.131672859191895s
epoch 155: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.016180515289307s
epoch 160: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.09845781326294s
epoch 165: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.982853412628174s
epoch 170: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.00057578086853s
epoch 175: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.079914093017578s
epoch 180: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.051953315734863s
epoch 185: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.141199827194214s
epoch 190: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.008717775344849s
epoch 195: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.177226781845093s
epoch 200: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.08567476272583s
epoch 205: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.932932376861572s
epoch 210: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.142207145690918s
epoch 215: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.1495840549469s
epoch 220: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.13232707977295s
epoch 225: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.000684261322021s
epoch 230: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.188609838485718s
epoch 235: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.099322319030762s
epoch 240: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.107595205307007s
epoch 245: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.066673755645752s
epoch 250: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.973657846450806s
epoch 255: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.129749536514282s
epoch 260: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.029127359390259s
epoch 265: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.178433179855347s
epoch 270: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.992743492126465s
epoch 275: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.051522970199585s
epoch 280: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.965572357177734s
epoch 285: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.11265754699707s
epoch 290: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.973507642745972s
epoch 295: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.060975313186646s
epoch 300: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.0920729637146s
epoch 305: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.165690183639526s
epoch 310: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.9747633934021s
epoch 315: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.111265897750854s
epoch 320: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.181625843048096s
epoch 325: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.956230401992798s
epoch 330: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.1544668674469s
epoch 335: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.111433982849121s
epoch 340: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.053487062454224s
epoch 345: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 12.131951093673706s
epoch 350: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.022912979125977s
epoch 355: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.122777223587036s
epoch 360: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.060322761535645s
epoch 365: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.984333992004395s
epoch 370: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.08929705619812s
epoch 375: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.052148580551147s
epoch 380: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.03727650642395s
epoch 385: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.15470290184021s
epoch 390: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.996033430099487s
epoch 395: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.09521770477295s
epoch 400: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.005609035491943s
epoch 405: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.92604684829712s
epoch 410: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.238106966018677s
epoch 415: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.133517503738403s
epoch 420: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.055675268173218s
epoch 425: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.246464252471924s
epoch 430: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.874714374542236s
epoch 435: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.070608377456665s
epoch 440: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.117787599563599s
epoch 445: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.13780426979065s
epoch 450: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.098249912261963s
epoch 455: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.128534078598022s
epoch 460: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.06144642829895s
epoch 465: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.949735641479492s
epoch 470: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.191882610321045s
epoch 475: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.050554275512695s
epoch 480: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 12.150036334991455s
epoch 485: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 11.969005584716797s
epoch 490: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.073201656341553s
epoch 495: train_loss: 0.69315; Allocated: 549376; Reserved: 10485760; time used = 12.157536506652832s
epoch 500: train_loss: 0.69315; Allocated: 549376; Reserved: 8388608; time used = 12.17430305480957s
Finished training. Time used = 1211.1571056842804.
Training classifier using 80.00% nodes...
{'micro': 0.33, 'macro': 0.2658320084790673, 'samples': 0.33, 'weighted': 0.2578570482246953, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2319.07it/s] 81%|████████▏ | 1627/2000 [00:00<00:00, 3024.63it/s]100%|██████████| 2000/2000 [00:00<00:00, 5163.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 186.27144; Allocated: 3988480; Reserved: 1214251008; time used = 1928.9346487522125s
epoch 10: train_loss: 144.39620; Allocated: 3988480; Reserved: 1602224128; time used = 2710.445612668991s
epoch 15: train_loss: 34.50691; Allocated: 3988480; Reserved: 792723456; time used = 2649.2198498249054s
epoch 20: train_loss: 30.66014; Allocated: 3988480; Reserved: 1723858944; time used = 2839.1562900543213s
epoch 25: train_loss: 5.55946; Allocated: 3988480; Reserved: 920649728; time used = 2750.1669001579285s
epoch 30: train_loss: 12.82683; Allocated: 3988480; Reserved: 652214272; time used = 2827.818772315979s
epoch 35: train_loss: 1.90477; Allocated: 3988480; Reserved: 815792128; time used = 2775.749552965164s
epoch 40: train_loss: 1.37845; Allocated: 3988480; Reserved: 1197473792; time used = 4134.196661472321s
epoch 45: train_loss: 4.75145; Allocated: 3988480; Reserved: 1321205760; time used = 7115.529277086258s
epoch 50: train_loss: 2.47875; Allocated: 3988480; Reserved: 771751936; time used = 6967.701692819595s
epoch 55: train_loss: 2.12651; Allocated: 3988480; Reserved: 595591168; time used = 7111.689669132233s
epoch 60: train_loss: 4.22129; Allocated: 3988480; Reserved: 331350016; time used = 6434.183024406433s
epoch 65: train_loss: 2.06195; Allocated: 3988480; Reserved: 677380096; time used = 5085.087847948074s
epoch 70: train_loss: 2.04866; Allocated: 3988480; Reserved: 964689920; time used = 6813.7901566028595s
epoch 75: train_loss: 4.69396; Allocated: 3988480; Reserved: 706740224; time used = 6841.685562849045s
epoch 80: train_loss: 2.89839; Allocated: 3988480; Reserved: 612368384; time used = 6868.52304983139s
epoch 85: train_loss: 2.71466; Allocated: 3988480; Reserved: 725614592; time used = 6717.937226295471s
epoch 90: train_loss: 2.93307; Allocated: 3988480; Reserved: 568328192; time used = 6836.649149656296s
epoch 95: train_loss: 1.93635; Allocated: 3988480; Reserved: 1212153856; time used = 6851.513324022293s
epoch 100: train_loss: 6.04585; Allocated: 3988480; Reserved: 624951296; time used = 6788.366559505463s
epoch 105: train_loss: 1.79804; Allocated: 3988480; Reserved: 195035136; time used = 6843.9449236392975s
epoch 110: train_loss: 4.01959; Allocated: 3988480; Reserved: 727711744; time used = 6844.843023300171s
epoch 115: train_loss: 1.40972; Allocated: 3988480; Reserved: 689963008; time used = 6700.117827415466s
epoch 120: train_loss: 2.96810; Allocated: 3988480; Reserved: 1247805440; time used = 6636.2625069618225s
epoch 125: train_loss: 5.32361; Allocated: 3988480; Reserved: 339738624; time used = 6667.841476917267s
epoch 130: train_loss: 1.71435; Allocated: 3988480; Reserved: 803209216; time used = 6653.723233222961s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 148136.68617510796.
Training classifier using 80.00% nodes...
{'micro': 0.53, 'macro': 0.41716269841269843, 'samples': 0.53, 'weighted': 0.40946924603174606, 'accuracy': 0.53}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2758.04it/s] 82%|████████▏ | 1642/2000 [00:00<00:00, 3544.19it/s]100%|██████████| 2000/2000 [00:00<00:00, 5800.99it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.62690; Allocated: 3922432; Reserved: 33554432; time used = 837.279812335968s
epoch 10: train_loss: 0.61486; Allocated: 3922432; Reserved: 33554432; time used = 839.0756158828735s
epoch 15: train_loss: 0.59234; Allocated: 3922432; Reserved: 31457280; time used = 837.3902063369751s
epoch 20: train_loss: 0.57961; Allocated: 3922432; Reserved: 33554432; time used = 838.9587526321411s
epoch 25: train_loss: 0.55834; Allocated: 3922432; Reserved: 33554432; time used = 836.1354575157166s
epoch 30: train_loss: 0.57679; Allocated: 3922432; Reserved: 33554432; time used = 837.0425937175751s
epoch 35: train_loss: 0.56256; Allocated: 3922432; Reserved: 33554432; time used = 838.2871778011322s
epoch 40: train_loss: 0.55074; Allocated: 3922432; Reserved: 35651584; time used = 837.578439950943s
epoch 45: train_loss: 0.54818; Allocated: 3922432; Reserved: 33554432; time used = 837.5778183937073s
epoch 50: train_loss: 0.54580; Allocated: 3922432; Reserved: 33554432; time used = 839.0976822376251s
epoch 55: train_loss: 0.54054; Allocated: 3922432; Reserved: 33554432; time used = 838.6507086753845s
epoch 60: train_loss: 0.53863; Allocated: 3922432; Reserved: 31457280; time used = 838.153981924057s
epoch 65: train_loss: 0.53477; Allocated: 3922432; Reserved: 33554432; time used = 837.7499921321869s
epoch 70: train_loss: 0.53588; Allocated: 3922432; Reserved: 31457280; time used = 832.8668050765991s
epoch 75: train_loss: 0.53177; Allocated: 3922432; Reserved: 33554432; time used = 830.7569150924683s
epoch 80: train_loss: 0.53044; Allocated: 3922432; Reserved: 33554432; time used = 834.7769246101379s
epoch 85: train_loss: 0.52596; Allocated: 3922432; Reserved: 31457280; time used = 834.4612367153168s
epoch 90: train_loss: 0.52608; Allocated: 3922432; Reserved: 33554432; time used = 832.9161002635956s
epoch 95: train_loss: 0.52296; Allocated: 3922432; Reserved: 33554432; time used = 830.5797691345215s
epoch 100: train_loss: 0.52361; Allocated: 3922432; Reserved: 35651584; time used = 829.8688387870789s
epoch 105: train_loss: 0.52011; Allocated: 3922432; Reserved: 33554432; time used = 830.0915710926056s
epoch 110: train_loss: 0.52130; Allocated: 3922432; Reserved: 33554432; time used = 829.9229061603546s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18551.003701210022.
Training classifier using 80.00% nodes...
{'micro': 0.6, 'macro': 0.5970889677922994, 'samples': 0.6, 'weighted': 0.5960615446601697, 'accuracy': 0.6}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69292; Allocated: 17682432; Reserved: 62914560; time used = 0.3405928611755371s
epoch 10: train_loss: 0.64743; Allocated: 17682432; Reserved: 62914560; time used = 0.3341519832611084s
epoch 15: train_loss: 0.26487; Allocated: 17682432; Reserved: 62914560; time used = 0.3332951068878174s
epoch 20: train_loss: 0.16938; Allocated: 17682432; Reserved: 62914560; time used = 0.3347136974334717s
epoch 25: train_loss: 0.15804; Allocated: 17682432; Reserved: 62914560; time used = 0.33367371559143066s
epoch 30: train_loss: 0.15524; Allocated: 17682432; Reserved: 62914560; time used = 0.33117079734802246s
epoch 35: train_loss: 0.14467; Allocated: 17682432; Reserved: 62914560; time used = 0.34778881072998047s
epoch 40: train_loss: 0.14307; Allocated: 17682432; Reserved: 62914560; time used = 0.3439159393310547s
epoch 45: train_loss: 0.14214; Allocated: 17682432; Reserved: 62914560; time used = 0.33657336235046387s
epoch 50: train_loss: 0.14004; Allocated: 17682432; Reserved: 62914560; time used = 0.3206310272216797s
epoch 55: train_loss: 0.13790; Allocated: 17682432; Reserved: 62914560; time used = 0.31404709815979004s
epoch 60: train_loss: 0.13676; Allocated: 17682432; Reserved: 62914560; time used = 0.3192622661590576s
epoch 65: train_loss: 0.13608; Allocated: 17682432; Reserved: 62914560; time used = 0.31696557998657227s
epoch 70: train_loss: 0.13836; Allocated: 17682432; Reserved: 62914560; time used = 0.31466150283813477s
epoch 75: train_loss: 0.13556; Allocated: 17682432; Reserved: 62914560; time used = 0.32226037979125977s
epoch 80: train_loss: 0.13622; Allocated: 17682432; Reserved: 62914560; time used = 0.31819891929626465s
epoch 85: train_loss: 0.13522; Allocated: 17682432; Reserved: 62914560; time used = 0.32114315032958984s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.294463872909546.
Training classifier using 20.00% nodes...
{'micro': 0.7572681125980619, 'macro': 0.7378917076550005, 'samples': 0.7572681125980618, 'weighted': 0.7562456678760094, 'accuracy': 0.7572681125980618}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2756.63it/s]100%|██████████| 1500/1500 [00:00<00:00, 5120.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 7097.37384; Allocated: 627200; Reserved: 8388608; time used = 53.20755481719971s
epoch 10: train_loss: 1311.42649; Allocated: 627200; Reserved: 8388608; time used = 52.64777398109436s
epoch 15: train_loss: 890.57448; Allocated: 627200; Reserved: 8388608; time used = 52.928231716156006s
epoch 20: train_loss: 462.99825; Allocated: 627200; Reserved: 6291456; time used = 53.12498998641968s
epoch 25: train_loss: 247.73359; Allocated: 627200; Reserved: 6291456; time used = 52.67872500419617s
epoch 30: train_loss: 73.70810; Allocated: 627200; Reserved: 6291456; time used = 52.93803143501282s
epoch 35: train_loss: 189.84196; Allocated: 627200; Reserved: 6291456; time used = 52.975887060165405s
epoch 40: train_loss: 111.90867; Allocated: 627200; Reserved: 10485760; time used = 52.877211570739746s
epoch 45: train_loss: 43.19241; Allocated: 627200; Reserved: 6291456; time used = 52.93483591079712s
epoch 50: train_loss: 13.17325; Allocated: 627200; Reserved: 6291456; time used = 52.890525579452515s
epoch 55: train_loss: 5.63884; Allocated: 627200; Reserved: 8388608; time used = 53.20196056365967s
epoch 60: train_loss: 22.00699; Allocated: 627200; Reserved: 8388608; time used = 52.90538668632507s
epoch 65: train_loss: 24.01658; Allocated: 627200; Reserved: 6291456; time used = 52.8184335231781s
epoch 70: train_loss: 16.83805; Allocated: 627200; Reserved: 8388608; time used = 53.02480721473694s
epoch 75: train_loss: 3.14148; Allocated: 627200; Reserved: 8388608; time used = 52.38409757614136s
epoch 80: train_loss: 1.96931; Allocated: 627200; Reserved: 6291456; time used = 53.02844595909119s
epoch 85: train_loss: 2.53331; Allocated: 627200; Reserved: 8388608; time used = 52.75766110420227s
epoch 90: train_loss: 1.39024; Allocated: 627200; Reserved: 8388608; time used = 53.265541315078735s
epoch 95: train_loss: 1.38658; Allocated: 627200; Reserved: 8388608; time used = 53.04817247390747s
epoch 100: train_loss: 1.38641; Allocated: 627200; Reserved: 10485760; time used = 52.656893491744995s
epoch 105: train_loss: 1.38632; Allocated: 627200; Reserved: 6291456; time used = 52.81231093406677s
epoch 110: train_loss: 1.38630; Allocated: 627200; Reserved: 8388608; time used = 52.64756989479065s
epoch 115: train_loss: 1.38629; Allocated: 627200; Reserved: 8388608; time used = 52.76878213882446s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1252.1573045253754.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2280.55it/s]100%|██████████| 1500/1500 [00:00<00:00, 4436.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.58963108062744s
epoch 10: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.140445947647095s
epoch 15: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.33705735206604s
epoch 20: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.021939754486084s
epoch 25: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.33273482322693s
epoch 30: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.89138579368591s
epoch 35: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.01794385910034s
epoch 40: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.18354415893555s
epoch 45: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.955198526382446s
epoch 50: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.150256395339966s
epoch 55: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.08716583251953s
epoch 60: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.011820554733276s
epoch 65: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.265676975250244s
epoch 70: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.86165928840637s
epoch 75: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.25719738006592s
epoch 80: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.9001202583313s
epoch 85: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.97514271736145s
epoch 90: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.95034456253052s
epoch 95: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.12092328071594s
epoch 100: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.93132400512695s
epoch 105: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.257888317108154s
epoch 110: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.108964681625366s
epoch 115: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.96481108665466s
epoch 120: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.333609104156494s
epoch 125: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.205708265304565s
epoch 130: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.976423263549805s
epoch 135: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.354095220565796s
epoch 140: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.08343291282654s
epoch 145: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.28567838668823s
epoch 150: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.031638383865356s
epoch 155: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.107884883880615s
epoch 160: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.228095054626465s
epoch 165: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.95927286148071s
epoch 170: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.18933892250061s
epoch 175: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.16321277618408s
epoch 180: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.016480922698975s
epoch 185: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.159831523895264s
epoch 190: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.80833125114441s
epoch 195: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.16063714027405s
epoch 200: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.29416537284851s
epoch 205: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.96077585220337s
epoch 210: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.92233061790466s
epoch 215: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.15916419029236s
epoch 220: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.09972286224365s
epoch 225: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.30546283721924s
epoch 230: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.909477949142456s
epoch 235: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.00757646560669s
epoch 240: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.15623331069946s
epoch 245: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.129915714263916s
epoch 250: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.89934158325195s
epoch 255: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.18316698074341s
epoch 260: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.16031241416931s
epoch 265: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.7063090801239s
epoch 270: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.03557229042053s
epoch 275: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.16889476776123s
epoch 280: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.01779794692993s
epoch 285: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.22139549255371s
epoch 290: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.99046564102173s
epoch 295: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.16983389854431s
epoch 300: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.229377031326294s
epoch 305: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.250839948654175s
epoch 310: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.92030382156372s
epoch 315: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.16547393798828s
epoch 320: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.18600010871887s
epoch 325: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.2248637676239s
epoch 330: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.080695152282715s
epoch 335: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.00355529785156s
epoch 340: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.98895025253296s
epoch 345: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.34192228317261s
epoch 350: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.36878967285156s
epoch 355: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.801888942718506s
epoch 360: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.199702501297s
epoch 365: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.01426601409912s
epoch 370: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.9520378112793s
epoch 375: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.10854411125183s
epoch 380: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.08874988555908s
epoch 385: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.248072385787964s
epoch 390: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.84547662734985s
epoch 395: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.124709129333496s
epoch 400: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.14337205886841s
epoch 405: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.14308500289917s
epoch 410: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.0417685508728s
epoch 415: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.069591760635376s
epoch 420: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.05137014389038s
epoch 425: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.25571608543396s
epoch 430: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.956056118011475s
epoch 435: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.07876372337341s
epoch 440: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.966785192489624s
epoch 445: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.20864772796631s
epoch 450: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.884406089782715s
epoch 455: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.12409472465515s
epoch 460: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.888235569000244s
epoch 465: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.1337103843689s
epoch 470: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.31562161445618s
epoch 475: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.087169885635376s
epoch 480: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 35.07288360595703s
epoch 485: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.06536507606506s
epoch 490: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.03114199638367s
epoch 495: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.22842001914978s
epoch 500: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.01162815093994s
Finished training. Time used = 3514.3544433116913.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.2614670868347339, 'samples': 0.3233333333333333, 'weighted': 0.2536230742296919, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.32878; Allocated: 872448; Reserved: 4194304; time used = 4.217959403991699s
epoch 10: train_loss: 1.27617; Allocated: 872448; Reserved: 6291456; time used = 4.37296199798584s
epoch 15: train_loss: 1.21837; Allocated: 872448; Reserved: 4194304; time used = 4.217174530029297s
epoch 20: train_loss: 1.19598; Allocated: 872448; Reserved: 4194304; time used = 4.3945252895355225s
epoch 25: train_loss: 1.14023; Allocated: 872448; Reserved: 4194304; time used = 4.209916353225708s
epoch 30: train_loss: 1.12461; Allocated: 872448; Reserved: 4194304; time used = 4.372529745101929s
epoch 35: train_loss: 1.10468; Allocated: 872448; Reserved: 4194304; time used = 4.219022035598755s
epoch 40: train_loss: 1.09878; Allocated: 872448; Reserved: 4194304; time used = 4.3948681354522705s
epoch 45: train_loss: 1.09052; Allocated: 872448; Reserved: 4194304; time used = 4.216106176376343s
epoch 50: train_loss: 1.07892; Allocated: 872448; Reserved: 4194304; time used = 4.377209186553955s
epoch 55: train_loss: 1.06474; Allocated: 872448; Reserved: 4194304; time used = 4.210590124130249s
epoch 60: train_loss: 1.05017; Allocated: 872448; Reserved: 4194304; time used = 4.393667936325073s
epoch 65: train_loss: 1.05804; Allocated: 872448; Reserved: 4194304; time used = 4.21036958694458s
epoch 70: train_loss: 1.05256; Allocated: 872448; Reserved: 6291456; time used = 4.199841260910034s
epoch 75: train_loss: 1.04645; Allocated: 872448; Reserved: 4194304; time used = 4.396500587463379s
epoch 80: train_loss: 1.03636; Allocated: 872448; Reserved: 4194304; time used = 4.204498052597046s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 73.9493510723114.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5739833936555248, 'samples': 0.5797101449275363, 'weighted': 0.5775626132005319, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2316.69it/s]100%|██████████| 1500/1500 [00:00<00:00, 4473.42it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 109.84372; Allocated: 759296; Reserved: 18874368; time used = 8.18764615058899s
epoch 10: train_loss: 374.91820; Allocated: 759296; Reserved: 39845888; time used = 8.007123947143555s
epoch 15: train_loss: 78.26481; Allocated: 759296; Reserved: 18874368; time used = 8.000373363494873s
epoch 20: train_loss: 7.85729; Allocated: 759296; Reserved: 18874368; time used = 8.000866889953613s
epoch 25: train_loss: 52.34948; Allocated: 759296; Reserved: 18874368; time used = 8.171277284622192s
epoch 30: train_loss: 39.50304; Allocated: 759296; Reserved: 41943040; time used = 8.009445428848267s
epoch 35: train_loss: 5.76268; Allocated: 759296; Reserved: 18874368; time used = 8.035073518753052s
epoch 40: train_loss: 5.23682; Allocated: 759296; Reserved: 20971520; time used = 8.217998266220093s
epoch 45: train_loss: 17.14641; Allocated: 759296; Reserved: 18874368; time used = 7.948775053024292s
epoch 50: train_loss: 10.34606; Allocated: 759296; Reserved: 18874368; time used = 7.912493944168091s
epoch 55: train_loss: 23.11415; Allocated: 759296; Reserved: 18874368; time used = 7.969879388809204s
epoch 60: train_loss: 1.53044; Allocated: 759296; Reserved: 39845888; time used = 8.245178699493408s
epoch 65: train_loss: 9.81419; Allocated: 759296; Reserved: 18874368; time used = 8.000353336334229s
epoch 70: train_loss: 2.65730; Allocated: 759296; Reserved: 39845888; time used = 7.904480695724487s
epoch 75: train_loss: 2.32350; Allocated: 759296; Reserved: 18874368; time used = 8.09570050239563s
epoch 80: train_loss: 1.29877; Allocated: 759296; Reserved: 39845888; time used = 8.016095638275146s
epoch 85: train_loss: 1.39896; Allocated: 759296; Reserved: 39845888; time used = 7.927550792694092s
epoch 90: train_loss: 1.31526; Allocated: 759296; Reserved: 18874368; time used = 7.9772632122039795s
epoch 95: train_loss: 1.44357; Allocated: 759296; Reserved: 18874368; time used = 8.236565351486206s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 159.07336711883545.
Training classifier using 80.00% nodes...
{'micro': 0.45, 'macro': 0.3637027206370272, 'samples': 0.45, 'weighted': 0.35279163901791644, 'accuracy': 0.45}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.51568; Allocated: 940032; Reserved: 6291456; time used = 4.767465353012085s
epoch 10: train_loss: 0.39041; Allocated: 940032; Reserved: 6291456; time used = 4.886591196060181s
epoch 15: train_loss: 0.13955; Allocated: 940032; Reserved: 8388608; time used = 4.932237386703491s
epoch 20: train_loss: 0.05956; Allocated: 940032; Reserved: 6291456; time used = 4.913328409194946s
epoch 25: train_loss: 0.04549; Allocated: 940032; Reserved: 8388608; time used = 4.71405029296875s
epoch 30: train_loss: 0.05391; Allocated: 940032; Reserved: 6291456; time used = 4.889997482299805s
epoch 35: train_loss: 0.53796; Allocated: 940032; Reserved: 6291456; time used = 4.893521308898926s
epoch 40: train_loss: 0.10409; Allocated: 940032; Reserved: 6291456; time used = 4.733569860458374s
epoch 45: train_loss: 0.12886; Allocated: 940032; Reserved: 8388608; time used = 4.862971305847168s
epoch 50: train_loss: 0.10389; Allocated: 940032; Reserved: 6291456; time used = 4.802749872207642s
epoch 55: train_loss: 0.04944; Allocated: 940032; Reserved: 6291456; time used = 4.664164304733276s
epoch 60: train_loss: 0.08500; Allocated: 940032; Reserved: 6291456; time used = 4.835778474807739s
epoch 65: train_loss: 0.02181; Allocated: 940032; Reserved: 6291456; time used = 4.809374570846558s
epoch 70: train_loss: 0.11868; Allocated: 940032; Reserved: 6291456; time used = 4.808151960372925s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 70.9761815071106.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6166666666666667, 'samples': 0.6231884057971014, 'weighted': 0.6202898550724637, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2354.76it/s]100%|██████████| 1500/1500 [00:00<00:00, 4555.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 2.53000; Allocated: 629248; Reserved: 14680064; time used = 9.551502466201782s
epoch 10: train_loss: 1.53571; Allocated: 629248; Reserved: 35651584; time used = 9.174482345581055s
epoch 15: train_loss: 1.41838; Allocated: 629248; Reserved: 14680064; time used = 9.121942281723022s
epoch 20: train_loss: 1.33556; Allocated: 629248; Reserved: 14680064; time used = 9.253551483154297s
epoch 25: train_loss: 1.34712; Allocated: 629248; Reserved: 14680064; time used = 9.511906862258911s
epoch 30: train_loss: 1.33263; Allocated: 629248; Reserved: 35651584; time used = 9.27819299697876s
epoch 35: train_loss: 1.32015; Allocated: 629248; Reserved: 14680064; time used = 9.302927017211914s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 73.51514101028442.
Training classifier using 80.00% nodes...
{'micro': 0.37, 'macro': 0.3696734962223827, 'samples': 0.37, 'weighted': 0.3691532395222397, 'accuracy': 0.37}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2259.91it/s]100%|██████████| 1500/1500 [00:00<00:00, 4431.95it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40148; Allocated: 971264; Reserved: 20971520; time used = 12.352673292160034s
epoch 10: train_loss: 1.39210; Allocated: 971264; Reserved: 20971520; time used = 12.060224771499634s
epoch 15: train_loss: 1.39554; Allocated: 971264; Reserved: 20971520; time used = 12.094640254974365s
epoch 20: train_loss: 1.39034; Allocated: 971264; Reserved: 20971520; time used = 12.030114889144897s
epoch 25: train_loss: 1.38848; Allocated: 971264; Reserved: 20971520; time used = 12.189853191375732s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 66.80282926559448.
Training classifier using 80.00% nodes...
{'micro': 0.3433333333333333, 'macro': 0.32744454619454616, 'samples': 0.3433333333333333, 'weighted': 0.32793370980870973, 'accuracy': 0.3433333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56750; Allocated: 868864; Reserved: 2097152; time used = 0.8261070251464844s
epoch 10: train_loss: 0.39742; Allocated: 868864; Reserved: 2097152; time used = 0.8266890048980713s
epoch 15: train_loss: 0.25516; Allocated: 868864; Reserved: 2097152; time used = 0.8197054862976074s
epoch 20: train_loss: 0.17752; Allocated: 868864; Reserved: 2097152; time used = 0.8128800392150879s
epoch 25: train_loss: 0.11319; Allocated: 868864; Reserved: 2097152; time used = 0.8147902488708496s
epoch 30: train_loss: 0.11456; Allocated: 868864; Reserved: 2097152; time used = 0.8105216026306152s
epoch 35: train_loss: 0.07466; Allocated: 868864; Reserved: 2097152; time used = 0.821131706237793s
epoch 40: train_loss: 0.07571; Allocated: 868864; Reserved: 2097152; time used = 0.9738976955413818s
epoch 45: train_loss: 0.06770; Allocated: 868864; Reserved: 2097152; time used = 0.8158245086669922s
epoch 50: train_loss: 0.03479; Allocated: 868864; Reserved: 2097152; time used = 0.8080103397369385s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.020949363708496.
Training classifier using 80.00% nodes...
{'micro': 0.5526315789473685, 'macro': 0.4700574241181296, 'samples': 0.5526315789473685, 'weighted': 0.5030870860498251, 'accuracy': 0.5526315789473685}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2678.42it/s] 82%|████████▏ | 1633/2000 [00:00<00:00, 3449.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 5670.02it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1141.228232383728s
epoch 10: train_loss: 0.69315; Allocated: 3908096; Reserved: 31457280; time used = 1140.1188941001892s
epoch 15: train_loss: 0.69315; Allocated: 3908096; Reserved: 33554432; time used = 1137.8695561885834s
epoch 20: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1134.6278321743011s
epoch 25: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1137.0881924629211s
epoch 30: train_loss: 0.69315; Allocated: 3908096; Reserved: 33554432; time used = 1133.487272977829s
epoch 35: train_loss: 0.69315; Allocated: 3908096; Reserved: 33554432; time used = 1136.799985408783s
epoch 40: train_loss: 0.69315; Allocated: 3908096; Reserved: 33554432; time used = 1136.926926612854s
epoch 45: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1138.5528817176819s
epoch 50: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1137.544603586197s
epoch 55: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1134.8678979873657s
epoch 60: train_loss: 0.69315; Allocated: 3908096; Reserved: 31457280; time used = 1133.7272989749908s
epoch 65: train_loss: 0.69315; Allocated: 3908096; Reserved: 33554432; time used = 1138.6811230182648s
epoch 70: train_loss: 0.69315; Allocated: 3908096; Reserved: 31457280; time used = 1140.4137513637543s
epoch 75: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1138.6821043491364s
epoch 80: train_loss: 0.69315; Allocated: 3908096; Reserved: 33554432; time used = 1139.2875323295593s
epoch 85: train_loss: 0.69315; Allocated: 3908096; Reserved: 35651584; time used = 1136.1777577400208s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19339.875456094742.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.29644; Allocated: 53417472; Reserved: 109051904; time used = 4.113592624664307s
epoch 10: train_loss: 1.20292; Allocated: 53417472; Reserved: 109051904; time used = 4.272365093231201s
epoch 15: train_loss: 1.09438; Allocated: 53417472; Reserved: 109051904; time used = 4.125103712081909s
epoch 20: train_loss: 1.02090; Allocated: 53417472; Reserved: 109051904; time used = 4.290537595748901s
epoch 25: train_loss: 0.98257; Allocated: 53417472; Reserved: 109051904; time used = 4.096501588821411s
epoch 30: train_loss: 0.94325; Allocated: 53417472; Reserved: 109051904; time used = 4.1094818115234375s
epoch 35: train_loss: 0.90983; Allocated: 53417472; Reserved: 109051904; time used = 4.288999557495117s
epoch 40: train_loss: 0.91124; Allocated: 53417472; Reserved: 109051904; time used = 4.116729021072388s
epoch 45: train_loss: 0.86853; Allocated: 53417472; Reserved: 109051904; time used = 4.264147758483887s
epoch 50: train_loss: 0.85826; Allocated: 53417472; Reserved: 109051904; time used = 4.111834764480591s
epoch 55: train_loss: 0.84626; Allocated: 53417472; Reserved: 109051904; time used = 4.2622246742248535s
epoch 60: train_loss: 0.84852; Allocated: 53417472; Reserved: 109051904; time used = 4.107442855834961s
epoch 65: train_loss: 0.83852; Allocated: 53417472; Reserved: 109051904; time used = 4.116281747817993s
epoch 70: train_loss: 0.82253; Allocated: 53417472; Reserved: 109051904; time used = 4.249037504196167s
epoch 75: train_loss: 0.82188; Allocated: 53417472; Reserved: 109051904; time used = 4.113688707351685s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 66.14307379722595.
Training classifier using 20.00% nodes...
{'micro': 0.6624535315985131, 'macro': 0.6015399023448877, 'samples': 0.6694214876033058, 'weighted': 0.6505787935332067, 'accuracy': 0.6694214876033058}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2755.51it/s] 82%|████████▏ | 1637/2000 [00:00<00:00, 3539.79it/s]100%|██████████| 2000/2000 [00:00<00:00, 5787.12it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1148.4490139484406s
epoch 10: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1148.7245862483978s
epoch 15: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1152.5276505947113s
epoch 20: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1148.7358877658844s
epoch 25: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1152.7456421852112s
epoch 30: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1148.9532551765442s
epoch 35: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 1148.1654908657074s
epoch 40: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1150.028629541397s
epoch 45: train_loss: 0.69315; Allocated: 3910144; Reserved: 35651584; time used = 1147.7158660888672s
epoch 50: train_loss: 0.69315; Allocated: 3910144; Reserved: 35651584; time used = 1147.2030653953552s
epoch 55: train_loss: 0.69315; Allocated: 3910144; Reserved: 35651584; time used = 1148.7775297164917s
epoch 60: train_loss: 0.69315; Allocated: 3910144; Reserved: 31457280; time used = 1145.734311580658s
epoch 65: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1147.7159004211426s
epoch 70: train_loss: 0.69315; Allocated: 3910144; Reserved: 35651584; time used = 1148.395673274994s
epoch 75: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1151.3866424560547s
epoch 80: train_loss: 0.69315; Allocated: 3910144; Reserved: 33554432; time used = 1150.4818167686462s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18847.801171064377.
Training classifier using 80.00% nodes...
{'micro': 0.735, 'macro': 0.7341959427267485, 'samples': 0.735, 'weighted': 0.7337573660322476, 'accuracy': 0.735}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2316.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 3449.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69262; Allocated: 637952; Reserved: 10485760; time used = 53.140209436416626s
epoch 10: train_loss: 0.69232; Allocated: 637952; Reserved: 6291456; time used = 53.23197531700134s
epoch 15: train_loss: 0.50293; Allocated: 637952; Reserved: 6291456; time used = 53.02516484260559s
epoch 20: train_loss: 0.69252; Allocated: 637952; Reserved: 8388608; time used = 53.05641531944275s
epoch 25: train_loss: 0.69110; Allocated: 637952; Reserved: 6291456; time used = 52.78231239318848s
epoch 30: train_loss: 0.68486; Allocated: 637952; Reserved: 6291456; time used = 52.58384132385254s
epoch 35: train_loss: 0.55111; Allocated: 637952; Reserved: 6291456; time used = 52.87172722816467s
epoch 40: train_loss: 0.67696; Allocated: 637952; Reserved: 10485760; time used = 52.70303559303284s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 437.6405653953552.
Training classifier using 80.00% nodes...
{'micro': 0.665, 'macro': 0.6649246080368083, 'samples': 0.665, 'weighted': 0.6648240854192192, 'accuracy': 0.665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.35778; Allocated: 841728; Reserved: 4194304; time used = 4.556151390075684s
epoch 10: train_loss: 1.35716; Allocated: 841728; Reserved: 4194304; time used = 4.701149225234985s
epoch 15: train_loss: 1.36484; Allocated: 841728; Reserved: 6291456; time used = 4.677187442779541s
epoch 20: train_loss: 1.36206; Allocated: 841728; Reserved: 4194304; time used = 4.720367193222046s
epoch 25: train_loss: 1.35108; Allocated: 841728; Reserved: 4194304; time used = 4.528007507324219s
epoch 30: train_loss: 1.36229; Allocated: 841728; Reserved: 4194304; time used = 4.670231819152832s
epoch 35: train_loss: 1.35662; Allocated: 841728; Reserved: 4194304; time used = 4.728196382522583s
epoch 40: train_loss: 1.35349; Allocated: 841728; Reserved: 4194304; time used = 4.527159214019775s
epoch 45: train_loss: 1.35868; Allocated: 841728; Reserved: 4194304; time used = 4.675081014633179s
epoch 50: train_loss: 1.34784; Allocated: 841728; Reserved: 4194304; time used = 4.531530141830444s
epoch 55: train_loss: 1.35453; Allocated: 841728; Reserved: 4194304; time used = 4.678524017333984s
epoch 60: train_loss: 1.35089; Allocated: 841728; Reserved: 4194304; time used = 4.710649251937866s
epoch 65: train_loss: 1.35188; Allocated: 841728; Reserved: 4194304; time used = 4.698304891586304s
epoch 70: train_loss: 1.35040; Allocated: 841728; Reserved: 4194304; time used = 4.523530960083008s
epoch 75: train_loss: 1.36840; Allocated: 841728; Reserved: 4194304; time used = 4.69138240814209s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 73.05464625358582.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5871794871794872, 'samples': 0.5942028985507246, 'weighted': 0.5910813823857303, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.40783; Allocated: 17337344; Reserved: 44040192; time used = 4.140816688537598s
epoch 10: train_loss: 0.28923; Allocated: 17337344; Reserved: 44040192; time used = 4.125167369842529s
epoch 15: train_loss: 0.21220; Allocated: 17337344; Reserved: 44040192; time used = 4.303844928741455s
epoch 20: train_loss: 0.14833; Allocated: 17337344; Reserved: 44040192; time used = 4.139981746673584s
epoch 25: train_loss: 0.09230; Allocated: 17337344; Reserved: 44040192; time used = 4.127197504043579s
epoch 30: train_loss: 0.08041; Allocated: 17337344; Reserved: 44040192; time used = 4.143783807754517s
epoch 35: train_loss: 0.05606; Allocated: 17337344; Reserved: 44040192; time used = 4.283381462097168s
epoch 40: train_loss: 0.03242; Allocated: 17337344; Reserved: 44040192; time used = 4.160914659500122s
epoch 45: train_loss: 0.09141; Allocated: 17337344; Reserved: 44040192; time used = 4.147808074951172s
epoch 50: train_loss: 0.02277; Allocated: 17337344; Reserved: 44040192; time used = 4.149436950683594s
epoch 55: train_loss: 0.00805; Allocated: 17337344; Reserved: 44040192; time used = 4.290088653564453s
epoch 60: train_loss: 0.00791; Allocated: 17337344; Reserved: 44040192; time used = 4.132647514343262s
epoch 65: train_loss: 0.06090; Allocated: 17337344; Reserved: 44040192; time used = 4.157537937164307s
epoch 70: train_loss: 0.01057; Allocated: 17337344; Reserved: 44040192; time used = 4.141693830490112s
epoch 75: train_loss: 0.01110; Allocated: 17337344; Reserved: 44040192; time used = 4.332500696182251s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 66.40518474578857.
Training classifier using 20.00% nodes...
{'micro': 0.7166589755422241, 'macro': 0.7013810170400363, 'samples': 0.7166589755422242, 'weighted': 0.7142256655250163, 'accuracy': 0.7166589755422242}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2839.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 5232.75it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69329; Allocated: 636928; Reserved: 8388608; time used = 53.47876691818237s
epoch 10: train_loss: 0.62411; Allocated: 636928; Reserved: 8388608; time used = 53.132972955703735s
epoch 15: train_loss: 0.69319; Allocated: 636928; Reserved: 6291456; time used = 52.92786741256714s
epoch 20: train_loss: 0.69315; Allocated: 636928; Reserved: 8388608; time used = 53.373024463653564s
epoch 25: train_loss: 0.69300; Allocated: 636928; Reserved: 8388608; time used = 53.025229692459106s
epoch 30: train_loss: 0.69284; Allocated: 636928; Reserved: 6291456; time used = 52.98651456832886s
epoch 35: train_loss: 0.69285; Allocated: 636928; Reserved: 8388608; time used = 53.23262643814087s
epoch 40: train_loss: 0.69239; Allocated: 636928; Reserved: 8388608; time used = 53.32190489768982s
epoch 45: train_loss: 0.69282; Allocated: 636928; Reserved: 8388608; time used = 52.580812215805054s
epoch 50: train_loss: 0.68607; Allocated: 636928; Reserved: 8388608; time used = 52.92950367927551s
epoch 55: train_loss: 0.62548; Allocated: 636928; Reserved: 8388608; time used = 53.067030906677246s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 619.4695954322815.
Training classifier using 80.00% nodes...
{'micro': 0.4766666666666667, 'macro': 0.47012261519722826, 'samples': 0.4766666666666667, 'weighted': 0.46722772795010264, 'accuracy': 0.4766666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2258.61it/s] 82%|████████▏ | 1646/2000 [00:00<00:00, 2957.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 5118.30it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 78, in forward
    neg_score = get_score(hxn, neg)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 73, in get_score
    h = self.embed(sample)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 51, in embed
    return self.encoder(x)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 60, in forward
    hx = layer([hx, adj])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 124, in forward
    c = masked_softmax(torch.nn.functional.leaky_relu(c, 0.2), adj)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 99, in masked_softmax
    return (masked_exps/masked_sums)
RuntimeError: CUDA out of memory. Tried to allocate 724.00 MiB (GPU 0; 10.76 GiB total capacity; 9.16 GiB already allocated; 501.12 MiB free; 9.26 GiB reserved in total by PyTorch)
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.51326; Allocated: 1280000; Reserved: 8388608; time used = 2.9544129371643066s
epoch 10: train_loss: 0.28158; Allocated: 1280000; Reserved: 8388608; time used = 2.9118216037750244s
epoch 15: train_loss: 0.15922; Allocated: 1280000; Reserved: 8388608; time used = 2.8991875648498535s
epoch 20: train_loss: 0.11278; Allocated: 1280000; Reserved: 8388608; time used = 2.919070243835449s
epoch 25: train_loss: 0.19924; Allocated: 1280000; Reserved: 8388608; time used = 2.9008233547210693s
epoch 30: train_loss: 0.09354; Allocated: 1280000; Reserved: 8388608; time used = 2.9153733253479004s
epoch 35: train_loss: 0.17259; Allocated: 1280000; Reserved: 8388608; time used = 2.912757158279419s
epoch 40: train_loss: 0.05089; Allocated: 1280000; Reserved: 8388608; time used = 2.9074912071228027s
epoch 45: train_loss: 0.00669; Allocated: 1280000; Reserved: 8388608; time used = 2.898963689804077s
epoch 50: train_loss: 0.02656; Allocated: 1280000; Reserved: 8388608; time used = 2.921285629272461s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35.724127769470215.
Training classifier using 80.00% nodes...
{'micro': 0.4782608695652174, 'macro': 0.44454382826475847, 'samples': 0.4782608695652174, 'weighted': 0.4544606051178346, 'accuracy': 0.4782608695652174}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2377.59it/s]100%|██████████| 1500/1500 [00:00<00:00, 4586.46it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69275; Allocated: 420864; Reserved: 4194304; time used = 35.476195335388184s
epoch 10: train_loss: 0.66643; Allocated: 420864; Reserved: 6291456; time used = 34.948354721069336s
epoch 15: train_loss: 0.63964; Allocated: 420864; Reserved: 6291456; time used = 35.14769244194031s
epoch 20: train_loss: 0.56701; Allocated: 420864; Reserved: 6291456; time used = 35.103456258773804s
epoch 25: train_loss: 0.51324; Allocated: 420864; Reserved: 8388608; time used = 35.056681632995605s
epoch 30: train_loss: 0.48079; Allocated: 420864; Reserved: 6291456; time used = 34.82526659965515s
epoch 35: train_loss: 0.46634; Allocated: 420864; Reserved: 6291456; time used = 35.2144730091095s
epoch 40: train_loss: 0.46330; Allocated: 420864; Reserved: 6291456; time used = 34.72266483306885s
epoch 45: train_loss: 0.45272; Allocated: 420864; Reserved: 6291456; time used = 34.98925757408142s
epoch 50: train_loss: 0.44485; Allocated: 420864; Reserved: 4194304; time used = 35.04421806335449s
epoch 55: train_loss: 0.43592; Allocated: 420864; Reserved: 6291456; time used = 35.25405192375183s
epoch 60: train_loss: 0.43704; Allocated: 420864; Reserved: 6291456; time used = 34.77220702171326s
epoch 65: train_loss: 0.43858; Allocated: 420864; Reserved: 6291456; time used = 34.953320264816284s
epoch 70: train_loss: 0.43823; Allocated: 420864; Reserved: 6291456; time used = 34.82182455062866s
epoch 75: train_loss: 0.43703; Allocated: 420864; Reserved: 8388608; time used = 34.91447949409485s
epoch 80: train_loss: 0.42921; Allocated: 420864; Reserved: 4194304; time used = 35.04287266731262s
epoch 85: train_loss: 0.43293; Allocated: 420864; Reserved: 6291456; time used = 34.979432821273804s
epoch 90: train_loss: 0.43901; Allocated: 420864; Reserved: 4194304; time used = 35.03652906417847s
epoch 95: train_loss: 0.42785; Allocated: 420864; Reserved: 6291456; time used = 35.09299087524414s
epoch 100: train_loss: 0.43706; Allocated: 420864; Reserved: 6291456; time used = 34.84806227684021s
epoch 105: train_loss: 0.42606; Allocated: 420864; Reserved: 6291456; time used = 35.07970070838928s
epoch 110: train_loss: 0.43538; Allocated: 420864; Reserved: 6291456; time used = 34.803536891937256s
epoch 115: train_loss: 0.43086; Allocated: 420864; Reserved: 6291456; time used = 35.19188380241394s
epoch 120: train_loss: 0.43243; Allocated: 420864; Reserved: 6291456; time used = 34.660528898239136s
epoch 125: train_loss: 0.42843; Allocated: 420864; Reserved: 6291456; time used = 35.10166645050049s
epoch 130: train_loss: 0.43570; Allocated: 420864; Reserved: 4194304; time used = 34.91205978393555s
epoch 135: train_loss: 0.42693; Allocated: 420864; Reserved: 4194304; time used = 34.88728475570679s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 976.5363767147064.
Training classifier using 80.00% nodes...
{'micro': 0.4166666666666667, 'macro': 0.33712189548379334, 'samples': 0.4166666666666667, 'weighted': 0.3270082386192795, 'accuracy': 0.4166666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.59468; Allocated: 57689088; Reserved: 113246208; time used = 5.014646291732788s
epoch 10: train_loss: 0.43174; Allocated: 57689088; Reserved: 113246208; time used = 5.13042688369751s
epoch 15: train_loss: 0.32165; Allocated: 57689088; Reserved: 113246208; time used = 5.032967567443848s
epoch 20: train_loss: 0.17170; Allocated: 57689088; Reserved: 113246208; time used = 4.980716943740845s
epoch 25: train_loss: 0.21658; Allocated: 57689088; Reserved: 113246208; time used = 5.134338617324829s
epoch 30: train_loss: 0.01259; Allocated: 57689088; Reserved: 113246208; time used = 4.984676361083984s
epoch 35: train_loss: 0.00479; Allocated: 57689088; Reserved: 113246208; time used = 5.125535726547241s
epoch 40: train_loss: 0.20957; Allocated: 57689088; Reserved: 113246208; time used = 4.965290784835815s
epoch 45: train_loss: 0.03871; Allocated: 57689088; Reserved: 113246208; time used = 4.972203493118286s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 52.88504886627197.
Training classifier using 20.00% nodes...
{'micro': 0.2940520446096654, 'macro': 0.19150150130250307, 'samples': 0.297145003756574, 'weighted': 0.22652133045984493, 'accuracy': 0.297145003756574}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 9550.91669; Allocated: 868864; Reserved: 29360128; time used = 1.2448420524597168s
epoch 10: train_loss: 1837.52793; Allocated: 868864; Reserved: 29360128; time used = 1.2220780849456787s
epoch 15: train_loss: 936.20623; Allocated: 868864; Reserved: 8388608; time used = 1.2069659233093262s
epoch 20: train_loss: 241.52488; Allocated: 868864; Reserved: 8388608; time used = 1.2099452018737793s
epoch 25: train_loss: 1.43894; Allocated: 868864; Reserved: 8388608; time used = 1.219733476638794s
epoch 30: train_loss: 1.39786; Allocated: 868864; Reserved: 8388608; time used = 1.2234644889831543s
epoch 35: train_loss: 1.39323; Allocated: 868864; Reserved: 8388608; time used = 1.2205474376678467s
epoch 40: train_loss: 1.38708; Allocated: 868864; Reserved: 8388608; time used = 1.2254726886749268s
epoch 45: train_loss: 1.38146; Allocated: 868864; Reserved: 8388608; time used = 1.1942837238311768s
epoch 50: train_loss: 1.37835; Allocated: 868864; Reserved: 29360128; time used = 1.220240592956543s
epoch 55: train_loss: 1.37407; Allocated: 868864; Reserved: 8388608; time used = 1.2234714031219482s
epoch 60: train_loss: 1.37577; Allocated: 868864; Reserved: 8388608; time used = 1.2132833003997803s
epoch 65: train_loss: 1.37133; Allocated: 868864; Reserved: 8388608; time used = 1.215256929397583s
epoch 70: train_loss: 1.36979; Allocated: 868864; Reserved: 8388608; time used = 1.2145307064056396s
epoch 75: train_loss: 1.37103; Allocated: 868864; Reserved: 29360128; time used = 1.2250232696533203s
epoch 80: train_loss: 1.37179; Allocated: 868864; Reserved: 8388608; time used = 1.2037169933319092s
epoch 85: train_loss: 1.37043; Allocated: 868864; Reserved: 8388608; time used = 1.2155015468597412s
epoch 90: train_loss: 1.37208; Allocated: 868864; Reserved: 8388608; time used = 1.2129864692687988s
epoch 95: train_loss: 1.36900; Allocated: 868864; Reserved: 8388608; time used = 1.2148828506469727s
epoch 100: train_loss: 1.36885; Allocated: 868864; Reserved: 8388608; time used = 1.2133474349975586s
epoch 105: train_loss: 1.36716; Allocated: 868864; Reserved: 8388608; time used = 1.2172775268554688s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.176233053207397.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.47169; Allocated: 17330688; Reserved: 39845888; time used = 0.7942101955413818s
epoch 10: train_loss: 0.30317; Allocated: 17330688; Reserved: 39845888; time used = 0.8054258823394775s
epoch 15: train_loss: 0.19875; Allocated: 17330688; Reserved: 39845888; time used = 0.7988088130950928s
epoch 20: train_loss: 0.11584; Allocated: 17330688; Reserved: 39845888; time used = 0.8004636764526367s
epoch 25: train_loss: 0.08443; Allocated: 17330688; Reserved: 39845888; time used = 0.7990093231201172s
epoch 30: train_loss: 0.04414; Allocated: 17330688; Reserved: 39845888; time used = 0.801947832107544s
epoch 35: train_loss: 0.03022; Allocated: 17330688; Reserved: 39845888; time used = 0.7945411205291748s
epoch 40: train_loss: 0.03985; Allocated: 17330688; Reserved: 39845888; time used = 0.7947278022766113s
epoch 45: train_loss: 0.01896; Allocated: 17330688; Reserved: 39845888; time used = 0.7984881401062012s
epoch 50: train_loss: 0.00744; Allocated: 17330688; Reserved: 39845888; time used = 0.7996349334716797s
epoch 55: train_loss: 0.02989; Allocated: 17330688; Reserved: 39845888; time used = 0.7979087829589844s
epoch 60: train_loss: 0.00585; Allocated: 17330688; Reserved: 39845888; time used = 0.7968347072601318s
epoch 65: train_loss: 0.04034; Allocated: 17330688; Reserved: 39845888; time used = 0.7972228527069092s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 14.048372745513916.
Training classifier using 20.00% nodes...
{'micro': 0.3977849561605907, 'macro': 0.2938307076706393, 'samples': 0.3977849561605907, 'weighted': 0.3387631798428633, 'accuracy': 0.3977849561605907}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.63899; Allocated: 778240; Reserved: 6291456; time used = 6.295752048492432s
epoch 10: train_loss: 0.60873; Allocated: 778240; Reserved: 4194304; time used = 6.176451683044434s
epoch 15: train_loss: 0.46465; Allocated: 778240; Reserved: 4194304; time used = 6.292433023452759s
epoch 20: train_loss: 0.22070; Allocated: 778240; Reserved: 4194304; time used = 6.370236158370972s
epoch 25: train_loss: 0.05607; Allocated: 778240; Reserved: 4194304; time used = 6.132534027099609s
epoch 30: train_loss: 0.04165; Allocated: 778240; Reserved: 4194304; time used = 6.292121410369873s
epoch 35: train_loss: 0.18545; Allocated: 778240; Reserved: 4194304; time used = 6.279734373092651s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 47.48288607597351.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.45526315789473687, 'samples': 0.5652173913043478, 'weighted': 0.47299771167048055, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.45831; Allocated: 57414656; Reserved: 115343360; time used = 1.0100016593933105s
epoch 10: train_loss: 0.19219; Allocated: 57414656; Reserved: 115343360; time used = 0.9974267482757568s
epoch 15: train_loss: 0.05231; Allocated: 57414656; Reserved: 115343360; time used = 1.007256269454956s
epoch 20: train_loss: 0.03528; Allocated: 57414656; Reserved: 115343360; time used = 0.9955759048461914s
epoch 25: train_loss: 0.01941; Allocated: 57414656; Reserved: 115343360; time used = 0.9946548938751221s
epoch 30: train_loss: 0.02483; Allocated: 57414656; Reserved: 115343360; time used = 0.9895861148834229s
epoch 35: train_loss: 0.01623; Allocated: 57414656; Reserved: 115343360; time used = 0.9976861476898193s
epoch 40: train_loss: 0.01055; Allocated: 57414656; Reserved: 115343360; time used = 1.0028409957885742s
epoch 45: train_loss: 0.02048; Allocated: 57414656; Reserved: 115343360; time used = 0.9972758293151855s
epoch 50: train_loss: 0.00027; Allocated: 57414656; Reserved: 115343360; time used = 1.1963529586791992s
epoch 55: train_loss: 0.00026; Allocated: 57414656; Reserved: 115343360; time used = 0.9995739459991455s
epoch 60: train_loss: 0.00022; Allocated: 57414656; Reserved: 115343360; time used = 1.001556396484375s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.340120553970337.
Training classifier using 20.00% nodes...
{'micro': 0.5810408921933086, 'macro': 0.4994210380261897, 'samples': 0.587152516904583, 'weighted': 0.5558365477537454, 'accuracy': 0.587152516904583}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 136918.23249; Allocated: 40979456; Reserved: 1065353216; time used = 362.9487147331238s
epoch 10: train_loss: 59043.16160; Allocated: 40979456; Reserved: 1065353216; time used = 350.42027711868286s
epoch 15: train_loss: 3556.05625; Allocated: 40979456; Reserved: 1065353216; time used = 351.3104553222656s
epoch 20: train_loss: 1.39210; Allocated: 40979456; Reserved: 1065353216; time used = 352.13524413108826s
epoch 25: train_loss: 1.39971; Allocated: 40979456; Reserved: 1065353216; time used = 351.4543397426605s
epoch 30: train_loss: 1.38720; Allocated: 40979456; Reserved: 1065353216; time used = 352.49223470687866s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 4035.5428795814514.
Training classifier using 20.00% nodes...
{'micro': 0.4688728287054647, 'macro': 0.37090038883987736, 'samples': 0.4688728287054647, 'weighted': 0.4186871085381698, 'accuracy': 0.4688728287054647}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2402.13it/s]100%|██████████| 1500/1500 [00:00<00:00, 4634.24it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.43128; Allocated: 768512; Reserved: 8388608; time used = 53.48957824707031s
epoch 10: train_loss: 1.38669; Allocated: 768512; Reserved: 6291456; time used = 53.92456817626953s
epoch 15: train_loss: 1.38632; Allocated: 768512; Reserved: 8388608; time used = 53.74523162841797s
epoch 20: train_loss: 1.38572; Allocated: 768512; Reserved: 8388608; time used = 54.00426650047302s
epoch 25: train_loss: 1.38454; Allocated: 768512; Reserved: 6291456; time used = 53.54443717002869s
epoch 30: train_loss: 1.36852; Allocated: 768512; Reserved: 8388608; time used = 53.10631561279297s
epoch 35: train_loss: 1.37766; Allocated: 768512; Reserved: 8388608; time used = 53.24869441986084s
epoch 40: train_loss: 1.37262; Allocated: 768512; Reserved: 8388608; time used = 53.19516062736511s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 442.32654428482056.
Training classifier using 80.00% nodes...
{'micro': 0.34, 'macro': 0.3270965205460804, 'samples': 0.34, 'weighted': 0.3283736723230629, 'accuracy': 0.34}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.56938; Allocated: 447488; Reserved: 4194304; time used = 3.1971545219421387s
epoch 10: train_loss: 0.53258; Allocated: 447488; Reserved: 4194304; time used = 3.1770436763763428s
epoch 15: train_loss: 0.54516; Allocated: 447488; Reserved: 4194304; time used = 3.2875311374664307s
epoch 20: train_loss: 0.53886; Allocated: 447488; Reserved: 4194304; time used = 3.1964635848999023s
epoch 25: train_loss: 0.52328; Allocated: 447488; Reserved: 4194304; time used = 3.1712846755981445s
epoch 30: train_loss: 0.54156; Allocated: 447488; Reserved: 4194304; time used = 3.1881866455078125s
epoch 35: train_loss: 0.53151; Allocated: 447488; Reserved: 4194304; time used = 3.306809902191162s
epoch 40: train_loss: 0.52118; Allocated: 447488; Reserved: 4194304; time used = 3.140162467956543s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.070048570632935.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.48663; Allocated: 53563904; Reserved: 109051904; time used = 3.661543607711792s
epoch 10: train_loss: 0.34726; Allocated: 53563904; Reserved: 109051904; time used = 3.7676427364349365s
epoch 15: train_loss: 0.23285; Allocated: 53563904; Reserved: 109051904; time used = 3.6623363494873047s
epoch 20: train_loss: 0.15786; Allocated: 53563904; Reserved: 109051904; time used = 3.652949571609497s
epoch 25: train_loss: 0.11105; Allocated: 53563904; Reserved: 109051904; time used = 3.821106195449829s
epoch 30: train_loss: 0.08712; Allocated: 53563904; Reserved: 109051904; time used = 3.710496187210083s
epoch 35: train_loss: 0.02872; Allocated: 53563904; Reserved: 109051904; time used = 3.7207956314086914s
epoch 40: train_loss: 0.02490; Allocated: 53563904; Reserved: 109051904; time used = 3.8992159366607666s
epoch 45: train_loss: 0.07466; Allocated: 53563904; Reserved: 109051904; time used = 3.719163656234741s
epoch 50: train_loss: 0.43173; Allocated: 53563904; Reserved: 109051904; time used = 3.691202163696289s
epoch 55: train_loss: 0.09371; Allocated: 53563904; Reserved: 109051904; time used = 3.6796443462371826s
epoch 60: train_loss: 0.16327; Allocated: 53563904; Reserved: 109051904; time used = 3.8876442909240723s
epoch 65: train_loss: 0.14692; Allocated: 53563904; Reserved: 109051904; time used = 3.7133195400238037s
epoch 70: train_loss: 0.10325; Allocated: 53563904; Reserved: 109051904; time used = 3.6964383125305176s
epoch 75: train_loss: 0.47719; Allocated: 53563904; Reserved: 109051904; time used = 3.682915449142456s
epoch 80: train_loss: 0.10525; Allocated: 53563904; Reserved: 109051904; time used = 3.794231653213501s
epoch 85: train_loss: 0.10935; Allocated: 53563904; Reserved: 109051904; time used = 3.6405158042907715s
epoch 90: train_loss: 0.11253; Allocated: 53563904; Reserved: 109051904; time used = 3.6503236293792725s
epoch 95: train_loss: 0.10079; Allocated: 53563904; Reserved: 109051904; time used = 3.6500163078308105s
epoch 100: train_loss: 0.08997; Allocated: 53563904; Reserved: 109051904; time used = 3.8570027351379395s
epoch 105: train_loss: 0.07373; Allocated: 53563904; Reserved: 109051904; time used = 3.698880672454834s
epoch 110: train_loss: 0.05665; Allocated: 53563904; Reserved: 109051904; time used = 3.648341178894043s
epoch 115: train_loss: 0.07584; Allocated: 53563904; Reserved: 109051904; time used = 3.6711766719818115s
epoch 120: train_loss: 0.05631; Allocated: 53563904; Reserved: 109051904; time used = 3.7803897857666016s
epoch 125: train_loss: 0.05200; Allocated: 53563904; Reserved: 109051904; time used = 3.653174638748169s
epoch 130: train_loss: 0.07004; Allocated: 53563904; Reserved: 109051904; time used = 3.6472599506378174s
epoch 135: train_loss: 0.05139; Allocated: 53563904; Reserved: 109051904; time used = 3.6731767654418945s
epoch 140: train_loss: 0.00621; Allocated: 53563904; Reserved: 109051904; time used = 3.833202838897705s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 109.90888118743896.
Training classifier using 20.00% nodes...
{'micro': 0.4301115241635688, 'macro': 0.2915323707211375, 'samples': 0.4346356123215627, 'weighted': 0.34226942356582635, 'accuracy': 0.4346356123215627}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.37868; Allocated: 40986624; Reserved: 62914560; time used = 2.4882235527038574s
epoch 10: train_loss: 0.20419; Allocated: 40986624; Reserved: 62914560; time used = 2.7243268489837646s
epoch 15: train_loss: 0.11862; Allocated: 40986624; Reserved: 62914560; time used = 2.3870508670806885s
epoch 20: train_loss: 0.06282; Allocated: 40986624; Reserved: 62914560; time used = 2.457185983657837s
epoch 25: train_loss: 0.07498; Allocated: 40986624; Reserved: 62914560; time used = 2.6004998683929443s
epoch 30: train_loss: 0.03969; Allocated: 40986624; Reserved: 62914560; time used = 2.55905818939209s
epoch 35: train_loss: 0.04525; Allocated: 40986624; Reserved: 62914560; time used = 2.482388734817505s
epoch 40: train_loss: 0.07100; Allocated: 40986624; Reserved: 62914560; time used = 2.5470306873321533s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.346697330474854.
Training classifier using 20.00% nodes...
{'micro': 0.7079371117028019, 'macro': 0.7063672965353963, 'samples': 0.707937111702802, 'weighted': 0.7071188315865303, 'accuracy': 0.707937111702802}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.345379114151001s
epoch 10: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.2931721210479736s
epoch 15: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3208935260772705s
epoch 20: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.314154624938965s
epoch 25: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.316530704498291s
epoch 30: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3604695796966553s
epoch 35: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.326489210128784s
epoch 40: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.305518388748169s
epoch 45: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3169045448303223s
epoch 50: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.307053565979004s
epoch 55: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3205385208129883s
epoch 60: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3517632484436035s
epoch 65: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3311514854431152s
epoch 70: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.345088243484497s
epoch 75: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3499975204467773s
epoch 80: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3139758110046387s
epoch 85: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.322906017303467s
epoch 90: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3149302005767822s
epoch 95: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.2975411415100098s
epoch 100: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.373680830001831s
epoch 105: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3254427909851074s
epoch 110: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.347271680831909s
epoch 115: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.356724500656128s
epoch 120: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.33009672164917s
epoch 125: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3042590618133545s
epoch 130: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3123221397399902s
epoch 135: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.362572431564331s
epoch 140: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.442662000656128s
epoch 145: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4013471603393555s
epoch 150: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.337754487991333s
epoch 155: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.332012891769409s
epoch 160: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.307833194732666s
epoch 165: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3198235034942627s
epoch 170: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3276946544647217s
epoch 175: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3039193153381348s
epoch 180: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3470194339752197s
epoch 185: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.349755048751831s
epoch 190: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3232996463775635s
epoch 195: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.302093267440796s
epoch 200: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.331770420074463s
epoch 205: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3351480960845947s
epoch 210: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3233397006988525s
epoch 215: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3518292903900146s
epoch 220: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4038612842559814s
epoch 225: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3929474353790283s
epoch 230: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4074532985687256s
epoch 235: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.434056043624878s
epoch 240: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4017670154571533s
epoch 245: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.347001552581787s
epoch 250: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.408745765686035s
epoch 255: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4313199520111084s
epoch 260: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.40604567527771s
epoch 265: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.408295154571533s
epoch 270: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.436563730239868s
epoch 275: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3395087718963623s
epoch 280: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.321211338043213s
epoch 285: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3086531162261963s
epoch 290: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3309621810913086s
epoch 295: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4598281383514404s
epoch 300: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3670878410339355s
epoch 305: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.374724864959717s
epoch 310: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.388700485229492s
epoch 315: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.363386631011963s
epoch 320: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.345003128051758s
epoch 325: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.302661895751953s
epoch 330: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.302631139755249s
epoch 335: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3051586151123047s
epoch 340: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3192179203033447s
epoch 345: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.347450017929077s
epoch 350: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4029581546783447s
epoch 355: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.306020498275757s
epoch 360: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3401412963867188s
epoch 365: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.325470447540283s
epoch 370: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.329847812652588s
epoch 375: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.476364850997925s
epoch 380: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4083826541900635s
epoch 385: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.385605573654175s
epoch 390: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.44659161567688s
epoch 395: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4497053623199463s
epoch 400: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3721461296081543s
epoch 405: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.402782917022705s
epoch 410: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4706766605377197s
epoch 415: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.317453622817993s
epoch 420: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.2971158027648926s
epoch 425: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3316121101379395s
epoch 430: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3880984783172607s
epoch 435: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.453317165374756s
epoch 440: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3263750076293945s
epoch 445: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3473527431488037s
epoch 450: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.37399959564209s
epoch 455: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.364210367202759s
epoch 460: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.385951280593872s
epoch 465: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4257302284240723s
epoch 470: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.3691928386688232s
epoch 475: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.442495822906494s
epoch 480: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4562950134277344s
epoch 485: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.374189615249634s
epoch 490: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.417623519897461s
epoch 495: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.4341986179351807s
epoch 500: train_loss: 0.69315; Allocated: 53751808; Reserved: 293601280; time used = 2.369272232055664s
Finished training. Time used = 248.4114429950714.
Training classifier using 20.00% nodes...
{'micro': 0.4765799256505576, 'macro': 0.39297946111013554, 'samples': 0.48159278737791134, 'weighted': 0.43874577502200046, 'accuracy': 0.48159278737791134}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56603; Allocated: 41555968; Reserved: 65011712; time used = 1.324110507965088s
epoch 10: train_loss: 0.38637; Allocated: 41555968; Reserved: 65011712; time used = 1.31996488571167s
epoch 15: train_loss: 0.22789; Allocated: 41555968; Reserved: 65011712; time used = 1.3368189334869385s
epoch 20: train_loss: 0.14530; Allocated: 41555968; Reserved: 65011712; time used = 1.3390765190124512s
epoch 25: train_loss: 0.08802; Allocated: 41555968; Reserved: 65011712; time used = 1.3155338764190674s
epoch 30: train_loss: 0.06695; Allocated: 41555968; Reserved: 65011712; time used = 1.3175806999206543s
epoch 35: train_loss: 0.04826; Allocated: 41555968; Reserved: 65011712; time used = 1.321213960647583s
epoch 40: train_loss: 0.02937; Allocated: 41555968; Reserved: 65011712; time used = 1.3082263469696045s
epoch 45: train_loss: 0.01633; Allocated: 41555968; Reserved: 65011712; time used = 1.3118300437927246s
epoch 50: train_loss: 0.02221; Allocated: 41555968; Reserved: 65011712; time used = 1.318249225616455s
epoch 55: train_loss: 0.02195; Allocated: 41555968; Reserved: 65011712; time used = 1.3260366916656494s
epoch 60: train_loss: 0.01242; Allocated: 41555968; Reserved: 65011712; time used = 1.315251350402832s
epoch 65: train_loss: 0.01045; Allocated: 41555968; Reserved: 65011712; time used = 1.3233256340026855s
epoch 70: train_loss: 0.01221; Allocated: 41555968; Reserved: 65011712; time used = 1.3075580596923828s
epoch 75: train_loss: 0.00482; Allocated: 41555968; Reserved: 65011712; time used = 1.314119815826416s
epoch 80: train_loss: 0.00695; Allocated: 41555968; Reserved: 65011712; time used = 1.319061040878296s
epoch 85: train_loss: 0.00901; Allocated: 41555968; Reserved: 65011712; time used = 1.3141460418701172s
epoch 90: train_loss: 0.01125; Allocated: 41555968; Reserved: 65011712; time used = 1.3182034492492676s
epoch 95: train_loss: 0.00573; Allocated: 41555968; Reserved: 65011712; time used = 1.3192059993743896s
epoch 100: train_loss: 0.00369; Allocated: 41555968; Reserved: 65011712; time used = 1.3198506832122803s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.242292404174805.
Training classifier using 20.00% nodes...
{'micro': 0.6756054266514517, 'macro': 0.6719349518861608, 'samples': 0.6756054266514517, 'weighted': 0.6724615182958322, 'accuracy': 0.6756054266514517}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2711.68it/s]100%|██████████| 1500/1500 [00:00<00:00, 5053.71it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 3.14529; Allocated: 766464; Reserved: 16777216; time used = 10.558465480804443s
epoch 10: train_loss: 1.45049; Allocated: 766464; Reserved: 16777216; time used = 10.202960014343262s
epoch 15: train_loss: 1.41011; Allocated: 766464; Reserved: 16777216; time used = 10.34471583366394s
epoch 20: train_loss: 1.41763; Allocated: 766464; Reserved: 16777216; time used = 10.305704116821289s
epoch 25: train_loss: 1.39964; Allocated: 766464; Reserved: 16777216; time used = 10.538957834243774s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.629520654678345.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2743.30it/s] 82%|████████▏ | 1640/2000 [00:00<00:00, 3526.63it/s]100%|██████████| 2000/2000 [00:00<00:00, 5771.80it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 2.10349; Allocated: 4262400; Reserved: 31457280; time used = 319.85007548332214s
epoch 10: train_loss: 1.46355; Allocated: 4262400; Reserved: 31457280; time used = 328.0008819103241s
epoch 15: train_loss: 1.40118; Allocated: 4262400; Reserved: 31457280; time used = 328.1515016555786s
epoch 20: train_loss: 1.38704; Allocated: 4262400; Reserved: 31457280; time used = 328.08749175071716s
epoch 25: train_loss: 1.38690; Allocated: 4262400; Reserved: 31457280; time used = 322.10265731811523s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1631.1784856319427.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2713.21it/s] 81%|████████▏ | 1627/2000 [00:00<00:00, 3486.97it/s]100%|██████████| 2000/2000 [00:00<00:00, 5712.12it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.50930; Allocated: 3988480; Reserved: 1212153856; time used = 1984.9873509407043s
epoch 10: train_loss: 0.54243; Allocated: 3988480; Reserved: 1604321280; time used = 2919.905040502548s
epoch 15: train_loss: 0.50248; Allocated: 3988480; Reserved: 790626304; time used = 3315.0805735588074s
epoch 20: train_loss: 0.50804; Allocated: 3988480; Reserved: 1723858944; time used = 3411.607637643814s
epoch 25: train_loss: 0.52027; Allocated: 3988480; Reserved: 922746880; time used = 3373.871138572693s
epoch 30: train_loss: 0.52753; Allocated: 3988480; Reserved: 652214272; time used = 3411.7223241329193s
epoch 35: train_loss: 0.53409; Allocated: 3988480; Reserved: 815792128; time used = 3409.7293684482574s
epoch 40: train_loss: 0.53083; Allocated: 3988480; Reserved: 1197473792; time used = 3373.797262907028s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26470.333869218826.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.48937448374258463, 'samples': 0.49, 'weighted': 0.4888383269505144, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2912.23it/s]100%|██████████| 1500/1500 [00:00<00:00, 5337.15it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 196.17227435112s
epoch 10: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.9421374797821s
epoch 15: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.63026809692383s
epoch 20: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 195.85289072990417s
epoch 25: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.98379158973694s
epoch 30: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 192.8593099117279s
epoch 35: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.16679167747498s
epoch 40: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.79375624656677s
epoch 45: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 193.25956559181213s
epoch 50: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.25370144844055s
epoch 55: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.90617680549622s
epoch 60: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 194.33910083770752s
epoch 65: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 195.43810081481934s
epoch 70: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 194.68142247200012s
epoch 75: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.65268063545227s
epoch 80: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.47113156318665s
epoch 85: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.01498222351074s
epoch 90: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.55852627754211s
epoch 95: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.93326210975647s
epoch 100: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.8135120868683s
epoch 105: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.02016592025757s
epoch 110: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.67426228523254s
epoch 115: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.60308957099915s
epoch 120: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 195.15405297279358s
epoch 125: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 198.21682977676392s
epoch 130: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 195.00187969207764s
epoch 135: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 197.5942804813385s
epoch 140: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.92660427093506s
epoch 145: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.92465949058533s
epoch 150: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.00337934494019s
epoch 155: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.11378359794617s
epoch 160: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.29307198524475s
epoch 165: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 189.82545280456543s
epoch 170: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.56103491783142s
epoch 175: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 189.62508273124695s
epoch 180: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 188.66744470596313s
epoch 185: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.8502233028412s
epoch 190: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.00648975372314s
epoch 195: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.59536337852478s
epoch 200: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.52168822288513s
epoch 205: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.5596694946289s
epoch 210: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.8475902080536s
epoch 215: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.622052192688s
epoch 220: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.1357262134552s
epoch 225: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.95725679397583s
epoch 230: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.6867470741272s
epoch 235: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.05070662498474s
epoch 240: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.59305500984192s
epoch 245: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.99918961524963s
epoch 250: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.87588667869568s
epoch 255: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.92817449569702s
epoch 260: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 194.1751983165741s
epoch 265: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 195.565682888031s
epoch 270: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.15907049179077s
epoch 275: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 190.6365692615509s
epoch 280: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 189.30119729042053s
epoch 285: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.59232807159424s
epoch 290: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.4557604789734s
epoch 295: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.09477591514587s
epoch 300: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.0613567829132s
epoch 305: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.55561518669128s
epoch 310: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.014874458313s
epoch 315: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.6573417186737s
epoch 320: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.39111924171448s
epoch 325: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.79296684265137s
epoch 330: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.58824491500854s
epoch 335: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.4855215549469s
epoch 340: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.18712282180786s
epoch 345: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 191.10370588302612s
epoch 350: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.90247058868408s
epoch 355: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.5382833480835s
epoch 360: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.2064380645752s
epoch 365: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 191.30182766914368s
epoch 370: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.9241383075714s
epoch 375: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.69553399085999s
epoch 380: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.66547989845276s
epoch 385: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.23548674583435s
epoch 390: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.66000604629517s
epoch 395: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.49886107444763s
epoch 400: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 188.8491404056549s
epoch 405: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.7948169708252s
epoch 410: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 194.13872003555298s
epoch 415: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.34182929992676s
epoch 420: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.12458682060242s
epoch 425: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.35435700416565s
epoch 430: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.2715995311737s
epoch 435: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.58068180084229s
epoch 440: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.84932851791382s
epoch 445: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 193.30865049362183s
epoch 450: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 195.2340567111969s
epoch 455: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.83670616149902s
epoch 460: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 189.93248462677002s
epoch 465: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.89121985435486s
epoch 470: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 191.62002539634705s
epoch 475: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 190.41907954216003s
epoch 480: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 189.0438735485077s
epoch 485: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.7851047515869s
epoch 490: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 189.96108222007751s
epoch 495: train_loss: 0.69315; Allocated: 551424; Reserved: 10485760; time used = 197.85452699661255s
epoch 500: train_loss: 0.69315; Allocated: 551424; Reserved: 8388608; time used = 192.934650182724s
Finished training. Time used = 19219.69702553749.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.54776; Allocated: 455168; Reserved: 6291456; time used = 4.354705095291138s
epoch 10: train_loss: 0.53763; Allocated: 455168; Reserved: 6291456; time used = 4.369439125061035s
epoch 15: train_loss: 0.54873; Allocated: 455168; Reserved: 6291456; time used = 4.403492450714111s
epoch 20: train_loss: 0.55055; Allocated: 455168; Reserved: 6291456; time used = 4.263300657272339s
epoch 25: train_loss: 0.52145; Allocated: 455168; Reserved: 6291456; time used = 4.4079484939575195s
epoch 30: train_loss: 0.51912; Allocated: 455168; Reserved: 6291456; time used = 4.2727720737457275s
epoch 35: train_loss: 0.52563; Allocated: 455168; Reserved: 6291456; time used = 4.251155376434326s
epoch 40: train_loss: 0.52487; Allocated: 455168; Reserved: 6291456; time used = 4.213184356689453s
epoch 45: train_loss: 0.52778; Allocated: 455168; Reserved: 6291456; time used = 4.408068418502808s
epoch 50: train_loss: 0.53765; Allocated: 455168; Reserved: 6291456; time used = 4.256671190261841s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.7779586315155.
Training classifier using 80.00% nodes...
{'micro': 0.6578947368421053, 'macro': 0.5722943722943723, 'samples': 0.6578947368421053, 'weighted': 0.6025062656641604, 'accuracy': 0.6578947368421053}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2839.10it/s]100%|██████████| 1000/1000 [00:00<00:00, 4121.79it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68114; Allocated: 423936; Reserved: 8388608; time used = 34.54210066795349s
epoch 10: train_loss: 0.67434; Allocated: 423936; Reserved: 6291456; time used = 34.43180203437805s
epoch 15: train_loss: 0.55018; Allocated: 423936; Reserved: 6291456; time used = 34.350616693496704s
epoch 20: train_loss: 0.39877; Allocated: 423936; Reserved: 6291456; time used = 34.4351589679718s
epoch 25: train_loss: 0.27220; Allocated: 423936; Reserved: 8388608; time used = 34.331231117248535s
epoch 30: train_loss: 0.24084; Allocated: 423936; Reserved: 6291456; time used = 34.93422794342041s
epoch 35: train_loss: 0.17635; Allocated: 423936; Reserved: 6291456; time used = 34.70211148262024s
epoch 40: train_loss: 0.15633; Allocated: 423936; Reserved: 6291456; time used = 34.367191553115845s
epoch 45: train_loss: 0.12742; Allocated: 423936; Reserved: 8388608; time used = 33.8725643157959s
epoch 50: train_loss: 0.16424; Allocated: 423936; Reserved: 8388608; time used = 34.68477177619934s
epoch 55: train_loss: 0.04516; Allocated: 423936; Reserved: 8388608; time used = 34.305843353271484s
epoch 60: train_loss: 0.37151; Allocated: 423936; Reserved: 6291456; time used = 34.87663769721985s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 417.375031709671.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.71997199719972, 'samples': 0.72, 'weighted': 0.72002800280028, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.67470; Allocated: 934400; Reserved: 29360128; time used = 1.991523027420044s
epoch 10: train_loss: 0.53445; Allocated: 934400; Reserved: 29360128; time used = 1.9798858165740967s
epoch 15: train_loss: 0.46650; Allocated: 934400; Reserved: 8388608; time used = 1.956955909729004s
epoch 20: train_loss: 0.29757; Allocated: 934400; Reserved: 8388608; time used = 1.9412562847137451s
epoch 25: train_loss: 0.44760; Allocated: 934400; Reserved: 8388608; time used = 1.9299335479736328s
epoch 30: train_loss: 0.30826; Allocated: 934400; Reserved: 8388608; time used = 1.939507246017456s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.46424698829651.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.672156862745098, 'samples': 0.7105263157894737, 'weighted': 0.6898658410732714, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 22.74466; Allocated: 929280; Reserved: 6291456; time used = 0.96628737449646s
epoch 10: train_loss: 4.51572; Allocated: 929280; Reserved: 6291456; time used = 0.9618880748748779s
epoch 15: train_loss: 1.54023; Allocated: 929280; Reserved: 8388608; time used = 0.9601666927337646s
epoch 20: train_loss: 1.37813; Allocated: 929280; Reserved: 6291456; time used = 0.960951566696167s
epoch 25: train_loss: 1.36149; Allocated: 929280; Reserved: 6291456; time used = 0.9689209461212158s
epoch 30: train_loss: 1.33511; Allocated: 929280; Reserved: 6291456; time used = 0.9608604907989502s
epoch 35: train_loss: 1.23186; Allocated: 929280; Reserved: 6291456; time used = 0.9570114612579346s
epoch 40: train_loss: 1.13003; Allocated: 929280; Reserved: 6291456; time used = 0.9606049060821533s
epoch 45: train_loss: 1.12112; Allocated: 929280; Reserved: 6291456; time used = 1.1219689846038818s
epoch 50: train_loss: 1.02921; Allocated: 929280; Reserved: 6291456; time used = 0.9566624164581299s
epoch 55: train_loss: 1.00050; Allocated: 929280; Reserved: 6291456; time used = 0.9612867832183838s
epoch 60: train_loss: 0.93204; Allocated: 929280; Reserved: 6291456; time used = 0.9665777683258057s
epoch 65: train_loss: 0.93122; Allocated: 929280; Reserved: 6291456; time used = 0.9644603729248047s
epoch 70: train_loss: 0.88417; Allocated: 929280; Reserved: 6291456; time used = 0.9625849723815918s
epoch 75: train_loss: 0.89149; Allocated: 929280; Reserved: 6291456; time used = 0.9541358947753906s
epoch 80: train_loss: 0.84295; Allocated: 929280; Reserved: 6291456; time used = 0.9661262035369873s
epoch 85: train_loss: 0.89713; Allocated: 929280; Reserved: 6291456; time used = 0.9501705169677734s
epoch 90: train_loss: 0.84628; Allocated: 929280; Reserved: 6291456; time used = 1.1084303855895996s
epoch 95: train_loss: 0.94462; Allocated: 929280; Reserved: 6291456; time used = 0.9636118412017822s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.04339361190796.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6133620689655173, 'samples': 0.6231884057971014, 'weighted': 0.6178285857071465, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.55432; Allocated: 1011712; Reserved: 6291456; time used = 1.1726584434509277s
epoch 10: train_loss: 0.45058; Allocated: 1011712; Reserved: 8388608; time used = 1.1673948764801025s
epoch 15: train_loss: 0.29113; Allocated: 1011712; Reserved: 8388608; time used = 1.163651943206787s
epoch 20: train_loss: 0.19887; Allocated: 1011712; Reserved: 6291456; time used = 1.3936753273010254s
epoch 25: train_loss: 0.12001; Allocated: 1011712; Reserved: 6291456; time used = 1.186506748199463s
epoch 30: train_loss: 0.11240; Allocated: 1011712; Reserved: 6291456; time used = 1.1597304344177246s
epoch 35: train_loss: 0.06068; Allocated: 1011712; Reserved: 6291456; time used = 1.3270039558410645s
epoch 40: train_loss: 0.09779; Allocated: 1011712; Reserved: 6291456; time used = 1.1562957763671875s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.206167936325073.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.4661508704061895, 'samples': 0.5362318840579711, 'weighted': 0.48016707313654583, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2748.54it/s] 81%|████████  | 1624/2000 [00:00<00:00, 3526.91it/s]100%|██████████| 2000/2000 [00:00<00:00, 5712.14it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.35155; Allocated: 40828928; Reserved: 65011712; time used = 2.845072031021118s
epoch 10: train_loss: 1.26952; Allocated: 40828928; Reserved: 65011712; time used = 2.9783382415771484s
epoch 15: train_loss: 1.21068; Allocated: 40828928; Reserved: 65011712; time used = 2.7093379497528076s
epoch 20: train_loss: 1.19763; Allocated: 40828928; Reserved: 65011712; time used = 2.9141929149627686s
epoch 25: train_loss: 1.17361; Allocated: 40828928; Reserved: 65011712; time used = 2.7500178813934326s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.846705198287964.
Training classifier using 20.00% nodes...
{'micro': 0.7149106124001523, 'macro': 0.7146696594454869, 'samples': 0.7149106124001522, 'weighted': 0.7147104108408179, 'accuracy': 0.7149106124001522}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.46491; Allocated: 579072; Reserved: 4194304; time used = 0.6114985942840576s
epoch 10: train_loss: 0.30321; Allocated: 579072; Reserved: 4194304; time used = 0.6169853210449219s
epoch 15: train_loss: 0.13502; Allocated: 579072; Reserved: 4194304; time used = 0.6081221103668213s
epoch 20: train_loss: 0.08606; Allocated: 579072; Reserved: 4194304; time used = 0.614492654800415s
epoch 25: train_loss: 0.09697; Allocated: 579072; Reserved: 4194304; time used = 0.6087605953216553s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.741541624069214.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2799.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4057.31it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.6325743198394775s
epoch 10: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.544352293014526s
epoch 15: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.7330591678619385s
epoch 20: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.546279668807983s
epoch 25: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.577545404434204s
epoch 30: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.562044620513916s
epoch 35: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.549724817276001s
epoch 40: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.552001953125s
epoch 45: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.560537815093994s
epoch 50: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.7326436042785645s
epoch 55: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.543226003646851s
epoch 60: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.482112884521484s
epoch 65: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.5022783279418945s
epoch 70: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.591856479644775s
epoch 75: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.53614068031311s
epoch 80: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.557533502578735s
epoch 85: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.699408769607544s
epoch 90: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.510620355606079s
epoch 95: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.52764105796814s
epoch 100: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.495489120483398s
epoch 105: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.430652856826782s
epoch 110: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.438871622085571s
epoch 115: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.406919956207275s
epoch 120: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.7895307540893555s
epoch 125: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.4629738330841064s
epoch 130: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.484590768814087s
epoch 135: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.537213563919067s
epoch 140: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.735371112823486s
epoch 145: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.613025188446045s
epoch 150: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.58234715461731s
epoch 155: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.741993188858032s
epoch 160: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.574707984924316s
epoch 165: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.648422479629517s
epoch 170: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.740472078323364s
epoch 175: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.715909719467163s
epoch 180: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.693194150924683s
epoch 185: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.667494297027588s
epoch 190: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.9321746826171875s
epoch 195: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.722745656967163s
epoch 200: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.67463493347168s
epoch 205: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.765988349914551s
epoch 210: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.731576204299927s
epoch 215: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.743354082107544s
epoch 220: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.686156988143921s
epoch 225: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.794956207275391s
epoch 230: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.529600381851196s
epoch 235: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.54697847366333s
epoch 240: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.5519914627075195s
epoch 245: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.74617862701416s
epoch 250: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.574331998825073s
epoch 255: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.509117603302002s
epoch 260: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.64508581161499s
epoch 265: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.450559854507446s
epoch 270: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.423372983932495s
epoch 275: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.658749580383301s
epoch 280: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.62364649772644s
epoch 285: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.682403326034546s
epoch 290: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.74214506149292s
epoch 295: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.975180149078369s
epoch 300: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.637415885925293s
epoch 305: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.628803968429565s
epoch 310: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.734860420227051s
epoch 315: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.672994375228882s
epoch 320: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.558041334152222s
epoch 325: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.49102783203125s
epoch 330: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.848039865493774s
epoch 335: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.73780083656311s
epoch 340: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.710313081741333s
epoch 345: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.622998952865601s
epoch 350: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.604966163635254s
epoch 355: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.526636838912964s
epoch 360: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.4850990772247314s
epoch 365: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.688403367996216s
epoch 370: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.606919527053833s
epoch 375: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.752819776535034s
epoch 380: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.758550405502319s
epoch 385: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.550820350646973s
epoch 390: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.4832987785339355s
epoch 395: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.480227947235107s
epoch 400: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.782894134521484s
epoch 405: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.726294040679932s
epoch 410: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.765432834625244s
epoch 415: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.7667505741119385s
epoch 420: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.651098966598511s
epoch 425: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.647862195968628s
epoch 430: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.542759418487549s
epoch 435: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.6349897384643555s
epoch 440: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.386693954467773s
epoch 445: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.46265172958374s
epoch 450: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.4459850788116455s
epoch 455: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.398859262466431s
epoch 460: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.482537269592285s
epoch 465: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.476171016693115s
epoch 470: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.675572633743286s
epoch 475: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.547162294387817s
epoch 480: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.506200790405273s
epoch 485: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.6838219165802s
epoch 490: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.712047815322876s
epoch 495: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.752591371536255s
epoch 500: train_loss: 0.69315; Allocated: 760832; Reserved: 10485760; time used = 5.777358770370483s
Finished training. Time used = 565.2405138015747.
Training classifier using 80.00% nodes...
{'micro': 0.65, 'macro': 0.6477455716586151, 'samples': 0.65, 'weighted': 0.6471819645732689, 'accuracy': 0.65}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2266.91it/s] 82%|████████▏ | 1630/2000 [00:00<00:00, 2963.36it/s]100%|██████████| 2000/2000 [00:00<00:00, 5107.78it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2841.44it/s] 82%|████████▏ | 1639/2000 [00:00<00:00, 3639.35it/s]100%|██████████| 2000/2000 [00:00<00:00, 5899.48it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.64064; Allocated: 3990016; Reserved: 29360128; time used = 142.62700629234314s
epoch 10: train_loss: 0.30660; Allocated: 3990016; Reserved: 29360128; time used = 142.94797587394714s
epoch 15: train_loss: 0.09321; Allocated: 3990016; Reserved: 29360128; time used = 145.24697971343994s
epoch 20: train_loss: 0.01868; Allocated: 3990016; Reserved: 29360128; time used = 144.92863273620605s
epoch 25: train_loss: 0.00943; Allocated: 3990016; Reserved: 29360128; time used = 144.3559021949768s
epoch 30: train_loss: 0.00875; Allocated: 3990016; Reserved: 31457280; time used = 141.24476146697998s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 923.4378941059113.
Training classifier using 80.00% nodes...
{'micro': 0.7125, 'macro': 0.7084751348302503, 'samples': 0.7125, 'weighted': 0.7074475096805267, 'accuracy': 0.7125}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2475.65it/s]100%|██████████| 1500/1500 [00:00<00:00, 4719.50it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 40786.57568; Allocated: 829952; Reserved: 18874368; time used = 8.49007248878479s
epoch 10: train_loss: 36707.92307; Allocated: 829952; Reserved: 41943040; time used = 8.412256002426147s
epoch 15: train_loss: 8418.34392; Allocated: 829952; Reserved: 18874368; time used = 8.336985111236572s
epoch 20: train_loss: 474.83731; Allocated: 829952; Reserved: 20971520; time used = 8.06304121017456s
epoch 25: train_loss: 499.49246; Allocated: 829952; Reserved: 18874368; time used = 8.288848876953125s
epoch 30: train_loss: 99.05872; Allocated: 829952; Reserved: 39845888; time used = 8.253113508224487s
epoch 35: train_loss: 478.33527; Allocated: 829952; Reserved: 18874368; time used = 8.318691492080688s
epoch 40: train_loss: 1.38695; Allocated: 829952; Reserved: 18874368; time used = 8.518972873687744s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.77798795700073.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.51504; Allocated: 40828928; Reserved: 65011712; time used = 3.8363635540008545s
epoch 10: train_loss: 0.25862; Allocated: 40828928; Reserved: 65011712; time used = 3.65278697013855s
epoch 15: train_loss: 0.09787; Allocated: 40828928; Reserved: 65011712; time used = 3.8025457859039307s
epoch 20: train_loss: 0.08210; Allocated: 40828928; Reserved: 65011712; time used = 3.575468063354492s
epoch 25: train_loss: 0.10929; Allocated: 40828928; Reserved: 65011712; time used = 3.689976692199707s
epoch 30: train_loss: 0.06944; Allocated: 40828928; Reserved: 65011712; time used = 3.6202995777130127s
epoch 35: train_loss: 0.01768; Allocated: 40828928; Reserved: 65011712; time used = 3.6137616634368896s
epoch 40: train_loss: 0.00075; Allocated: 40828928; Reserved: 65011712; time used = 3.743105173110962s
epoch 45: train_loss: 0.11866; Allocated: 40828928; Reserved: 65011712; time used = 3.657372236251831s
epoch 50: train_loss: 0.06941; Allocated: 40828928; Reserved: 65011712; time used = 3.907748222351074s
epoch 55: train_loss: 0.08192; Allocated: 40828928; Reserved: 65011712; time used = 3.7133607864379883s
epoch 60: train_loss: 0.01358; Allocated: 40828928; Reserved: 65011712; time used = 3.776740789413452s
epoch 65: train_loss: 0.06254; Allocated: 40828928; Reserved: 65011712; time used = 3.7050857543945312s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 52.10796308517456.
Training classifier using 20.00% nodes...
{'micro': 0.703626220362622, 'macro': 0.7088658291805715, 'samples': 0.703626220362622, 'weighted': 0.7031483314979448, 'accuracy': 0.703626220362622}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.37336; Allocated: 737280; Reserved: 6291456; time used = 4.239978075027466s
epoch 10: train_loss: 1.37358; Allocated: 737280; Reserved: 8388608; time used = 4.4060280323028564s
epoch 15: train_loss: 1.37361; Allocated: 737280; Reserved: 6291456; time used = 4.116389751434326s
epoch 20: train_loss: 1.37038; Allocated: 737280; Reserved: 6291456; time used = 4.286796569824219s
epoch 25: train_loss: 1.36472; Allocated: 737280; Reserved: 6291456; time used = 4.1438751220703125s
epoch 30: train_loss: 1.36151; Allocated: 737280; Reserved: 6291456; time used = 4.342697620391846s
epoch 35: train_loss: 1.36532; Allocated: 737280; Reserved: 6291456; time used = 4.230102777481079s
epoch 40: train_loss: 1.35910; Allocated: 737280; Reserved: 6291456; time used = 4.330188035964966s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.003262758255005.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.6033638492654886, 'samples': 0.6086956521739131, 'weighted': 0.6066962260832539, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2812.83it/s] 82%|████████▏ | 1632/2000 [00:00<00:00, 3603.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 5836.80it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.48467; Allocated: 3777024; Reserved: 29360128; time used = 1145.2274386882782s
epoch 10: train_loss: 1.41952; Allocated: 3777024; Reserved: 31457280; time used = 1152.6405727863312s
epoch 15: train_loss: 1.39854; Allocated: 3777024; Reserved: 29360128; time used = 1151.6257390975952s
epoch 20: train_loss: 1.39127; Allocated: 3777024; Reserved: 31457280; time used = 1151.6545932292938s
epoch 25: train_loss: 1.38807; Allocated: 3777024; Reserved: 31457280; time used = 1150.6155927181244s
epoch 30: train_loss: 1.38760; Allocated: 3777024; Reserved: 29360128; time used = 1147.0956733226776s
epoch 35: train_loss: 1.38720; Allocated: 3777024; Reserved: 29360128; time used = 1151.3124282360077s
epoch 40: train_loss: 1.38685; Allocated: 3777024; Reserved: 29360128; time used = 1152.3250634670258s
epoch 45: train_loss: 1.38658; Allocated: 3777024; Reserved: 31457280; time used = 1151.9783358573914s
epoch 50: train_loss: 1.38644; Allocated: 3777024; Reserved: 29360128; time used = 1148.3506000041962s
epoch 55: train_loss: 1.38637; Allocated: 3777024; Reserved: 31457280; time used = 1149.7965672016144s
epoch 60: train_loss: 1.38634; Allocated: 3777024; Reserved: 31457280; time used = 1147.8502371311188s
epoch 65: train_loss: 1.38632; Allocated: 3777024; Reserved: 31457280; time used = 1146.909167289734s
epoch 70: train_loss: 1.38632; Allocated: 3777024; Reserved: 31457280; time used = 1148.2387866973877s
epoch 75: train_loss: 1.38631; Allocated: 3777024; Reserved: 31457280; time used = 1151.256949186325s
epoch 80: train_loss: 1.38631; Allocated: 3777024; Reserved: 31457280; time used = 1154.0105073451996s
epoch 85: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1149.5049018859863s
epoch 90: train_loss: 1.38630; Allocated: 3777024; Reserved: 33554432; time used = 1147.2247068881989s
epoch 95: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1148.1273746490479s
epoch 100: train_loss: 1.38630; Allocated: 3777024; Reserved: 33554432; time used = 1148.3436391353607s
epoch 105: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1147.2703638076782s
epoch 110: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1149.328848361969s
epoch 115: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1148.464247226715s
epoch 120: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1149.7344863414764s
epoch 125: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1152.820962190628s
epoch 130: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1151.1791291236877s
epoch 135: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1149.6246693134308s
epoch 140: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1148.7570128440857s
epoch 145: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1149.0798354148865s
epoch 150: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1148.2689759731293s
epoch 155: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1149.4195079803467s
epoch 160: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1148.9597594738007s
epoch 165: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1151.6612002849579s
epoch 170: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1159.825498342514s
epoch 175: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1166.7806680202484s
epoch 180: train_loss: 1.38630; Allocated: 3777024; Reserved: 29360128; time used = 1122.5237498283386s
epoch 185: train_loss: 1.38630; Allocated: 3777024; Reserved: 31457280; time used = 1111.7714295387268s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 43389.13518333435.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 3, in <module>
    from .ss_modelc import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelc.py", line 4, in <module>
    from .ss_readout import BaseReadOut
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_readout.py", line 45
    readout_dict = {
    ^
IndentationError: expected an indented block
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 579/1000 [00:00<00:00, 3072.24it/s]100%|██████████| 1000/1000 [00:00<00:00, 4428.07it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3046.28it/s]100%|██████████| 1500/1500 [00:00<00:00, 5519.20it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3036.46it/s]100%|██████████| 1000/1000 [00:00<00:00, 4369.87it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3047.37it/s]100%|██████████| 1500/1500 [00:00<00:00, 5524.67it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3057.29it/s]100%|██████████| 1500/1500 [00:00<00:00, 5532.43it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3071.33it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3904.60it/s]100%|██████████| 2000/2000 [00:00<00:00, 6201.50it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3062.27it/s] 84%|████████▎ | 1670/2000 [00:00<00:00, 3903.18it/s]100%|██████████| 2000/2000 [00:00<00:00, 6243.52it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 32, in __init__
    self.readout = BaseReadOut(self.readout_name, self.enc_dims)
TypeError: __init__() takes 2 positional arguments but 3 were given
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38435; Allocated: 19216896; Reserved: 52428800; time used = 4.26044487953186s
epoch 10: train_loss: 1.36590; Allocated: 19216896; Reserved: 52428800; time used = 4.239283084869385s
epoch 15: train_loss: 1.36477; Allocated: 19216896; Reserved: 52428800; time used = 4.38753604888916s
epoch 20: train_loss: 1.34280; Allocated: 19216896; Reserved: 52428800; time used = 4.343418598175049s
epoch 25: train_loss: 1.35137; Allocated: 19216896; Reserved: 52428800; time used = 4.255627393722534s
epoch 30: train_loss: 1.33819; Allocated: 19216896; Reserved: 52428800; time used = 4.247628688812256s
epoch 35: train_loss: 1.34391; Allocated: 19216896; Reserved: 52428800; time used = 4.385265827178955s
epoch 40: train_loss: 1.31796; Allocated: 19216896; Reserved: 52428800; time used = 4.27541708946228s
epoch 45: train_loss: 1.31279; Allocated: 19216896; Reserved: 52428800; time used = 4.274834871292114s
epoch 50: train_loss: 1.33877; Allocated: 19216896; Reserved: 52428800; time used = 4.264994382858276s
epoch 55: train_loss: 1.28657; Allocated: 19216896; Reserved: 52428800; time used = 4.382585287094116s
epoch 60: train_loss: 1.30967; Allocated: 19216896; Reserved: 52428800; time used = 4.262246608734131s
epoch 65: train_loss: 1.31383; Allocated: 19216896; Reserved: 52428800; time used = 4.259979724884033s
epoch 70: train_loss: 1.31876; Allocated: 19216896; Reserved: 52428800; time used = 4.247069358825684s
epoch 75: train_loss: 1.30121; Allocated: 19216896; Reserved: 52428800; time used = 4.415445327758789s
epoch 80: train_loss: 1.30072; Allocated: 19216896; Reserved: 52428800; time used = 4.28099250793457s
epoch 85: train_loss: 1.31889; Allocated: 19216896; Reserved: 52428800; time used = 4.286200046539307s
epoch 90: train_loss: 1.29249; Allocated: 19216896; Reserved: 52428800; time used = 4.266648769378662s
epoch 95: train_loss: 1.29277; Allocated: 19216896; Reserved: 52428800; time used = 4.391371965408325s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 86.79606652259827.
Training classifier using 20.00% nodes...
{'micro': 0.3197969543147208, 'macro': 0.11760319319295394, 'samples': 0.3197969543147208, 'weighted': 0.19285992397097657, 'accuracy': 0.3197969543147208}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 419.763787984848s
epoch 10: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 404.5866117477417s
epoch 15: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 393.2569251060486s
epoch 20: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 398.85544323921204s
epoch 25: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.8158197402954s
epoch 30: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.47016501426697s
epoch 35: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 405.73692178726196s
epoch 40: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.17313408851624s
epoch 45: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.23621249198914s
epoch 50: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 407.3222062587738s
epoch 55: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 408.8461027145386s
epoch 60: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 389.44584107398987s
epoch 65: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 404.1063838005066s
epoch 70: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 422.0227587223053s
epoch 75: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 455.1543824672699s
epoch 80: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 597.7903785705566s
epoch 85: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 636.8819222450256s
epoch 90: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 518.4559645652771s
epoch 95: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.7080430984497s
epoch 100: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 408.2767491340637s
epoch 105: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 393.6834077835083s
epoch 110: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.5685966014862s
epoch 115: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 408.42814779281616s
epoch 120: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 389.6747169494629s
epoch 125: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.05750799179077s
epoch 130: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 407.8066689968109s
epoch 135: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 410.1837522983551s
epoch 140: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 403.0105640888214s
epoch 145: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 408.9577419757843s
epoch 150: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.99279403686523s
epoch 155: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 406.0184631347656s
epoch 160: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 412.8984799385071s
epoch 165: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 414.41608357429504s
epoch 170: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 404.26886081695557s
epoch 175: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 446.3781201839447s
epoch 180: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 427.4888722896576s
epoch 185: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 432.4625360965729s
epoch 190: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 426.7723376750946s
epoch 195: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 426.31937050819397s
epoch 200: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.59340929985046s
epoch 205: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 404.3406009674072s
epoch 210: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 409.97650837898254s
epoch 215: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 409.225031375885s
epoch 220: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 403.01660203933716s
epoch 225: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 404.86552262306213s
epoch 230: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 415.6856005191803s
epoch 235: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 410.3787772655487s
epoch 240: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 412.2295472621918s
epoch 245: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 415.52309370040894s
epoch 250: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 409.7525796890259s
epoch 255: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.147216796875s
epoch 260: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 410.0256435871124s
epoch 265: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 403.43073558807373s
epoch 270: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 411.7267179489136s
epoch 275: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 405.32533025741577s
epoch 280: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 400.3219952583313s
epoch 285: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 409.35738134384155s
epoch 290: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.0533289909363s
epoch 295: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 400.5362856388092s
epoch 300: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 398.9755609035492s
epoch 305: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 388.03540992736816s
epoch 310: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 389.0646502971649s
epoch 315: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 393.48452711105347s
epoch 320: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 382.841845035553s
epoch 325: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 383.1065697669983s
epoch 330: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 394.95784854888916s
epoch 335: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.16408681869507s
epoch 340: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.4398431777954s
epoch 345: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 407.9159252643585s
epoch 350: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 401.4059603214264s
epoch 355: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.1210849285126s
epoch 360: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 412.15335869789124s
epoch 365: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 407.0300314426422s
epoch 370: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 405.39640951156616s
epoch 375: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 409.67943835258484s
epoch 380: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 404.0846736431122s
epoch 385: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 405.5920743942261s
epoch 390: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 408.666659116745s
epoch 395: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 402.75165581703186s
epoch 400: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 405.9908483028412s
epoch 405: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 407.20472383499146s
epoch 410: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 403.4572446346283s
epoch 415: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 407.7958905696869s
epoch 420: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 403.5513069629669s
epoch 425: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 403.0084903240204s
epoch 430: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 420.87990856170654s
epoch 435: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 432.8209021091461s
epoch 440: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 433.9154152870178s
epoch 445: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 427.85191559791565s
epoch 450: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 393.13488507270813s
epoch 455: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 396.70411229133606s
epoch 460: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 406.86274218559265s
epoch 465: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 394.0486264228821s
epoch 470: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 396.6481873989105s
epoch 475: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 399.5673131942749s
epoch 480: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 392.0220754146576s
epoch 485: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 396.4815835952759s
epoch 490: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 400.27996802330017s
epoch 495: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 391.5708260536194s
epoch 500: train_loss: 0.69315; Allocated: 41104896; Reserved: 1065353216; time used = 388.5505704879761s
Finished training. Time used = 42836.10318827629.
Training classifier using 20.00% nodes...
{'micro': 0.7344364143527324, 'macro': 0.7217520084876744, 'samples': 0.7344364143527323, 'weighted': 0.7327348157468364, 'accuracy': 0.7344364143527323}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f65c4f8d780>
total iter: 500
epoch 5: train_loss: 1.66272; Allocated: 581632; Reserved: 4194304; time used = 0.5955314636230469s
epoch 10: train_loss: 1.39661; Allocated: 581632; Reserved: 4194304; time used = 0.5816528797149658s
epoch 15: train_loss: 1.37615; Allocated: 581632; Reserved: 4194304; time used = 0.5826711654663086s
epoch 20: train_loss: 1.37010; Allocated: 581632; Reserved: 4194304; time used = 0.5846700668334961s
epoch 25: train_loss: 1.36707; Allocated: 581632; Reserved: 4194304; time used = 0.5822780132293701s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.250107526779175.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8048422597212033, 'samples': 0.8157894736842105, 'weighted': 0.8121404023632082, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3026.35it/s]100%|██████████| 1500/1500 [00:00<00:00, 5494.10it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3606271050>
total iter: 500
epoch 5: train_loss: 1.38650; Allocated: 682496; Reserved: 6291456; time used = 34.45584678649902s
epoch 10: train_loss: 1.38634; Allocated: 682496; Reserved: 6291456; time used = 34.238739013671875s
epoch 15: train_loss: 1.38632; Allocated: 682496; Reserved: 8388608; time used = 34.28267288208008s
epoch 20: train_loss: 1.38630; Allocated: 682496; Reserved: 6291456; time used = 34.16995573043823s
epoch 25: train_loss: 1.38630; Allocated: 682496; Reserved: 6291456; time used = 34.492658853530884s
epoch 30: train_loss: 1.38629; Allocated: 682496; Reserved: 6291456; time used = 34.25673222541809s
epoch 35: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.2633581161499s
epoch 40: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.32156038284302s
epoch 45: train_loss: 1.38629; Allocated: 682496; Reserved: 6291456; time used = 34.247825145721436s
epoch 50: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.36974859237671s
epoch 55: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.41681957244873s
epoch 60: train_loss: 1.38629; Allocated: 682496; Reserved: 6291456; time used = 34.500630617141724s
epoch 65: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.355952739715576s
epoch 70: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.36982202529907s
epoch 75: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.66349935531616s
epoch 80: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.3910870552063s
epoch 85: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 34.63592076301575s
epoch 90: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.89979076385498s
epoch 95: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.834500789642334s
epoch 100: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.86093831062317s
epoch 105: train_loss: 1.38629; Allocated: 682496; Reserved: 6291456; time used = 33.97707724571228s
epoch 110: train_loss: 1.38629; Allocated: 682496; Reserved: 6291456; time used = 33.78075909614563s
epoch 115: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.76928353309631s
epoch 120: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.88589882850647s
epoch 125: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.82116436958313s
epoch 130: train_loss: 1.38629; Allocated: 682496; Reserved: 8388608; time used = 33.70799946784973s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 905.872594833374.
Training classifier using 80.00% nodes...
{'micro': 0.33, 'macro': 0.26578194033061403, 'samples': 0.33, 'weighted': 0.2578084821206956, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2512.12it/s]100%|██████████| 1000/1000 [00:00<00:00, 3712.08it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc1853352d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3030.42it/s]100%|██████████| 1500/1500 [00:00<00:00, 5486.88it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fcc5b7b0050>
total iter: 500
epoch 5: train_loss: 0.68762; Allocated: 491008; Reserved: 8388608; time used = 196.4516477584839s
epoch 10: train_loss: 0.66571; Allocated: 491008; Reserved: 8388608; time used = 195.9361228942871s
epoch 15: train_loss: 0.60539; Allocated: 491008; Reserved: 8388608; time used = 195.16142964363098s
epoch 20: train_loss: 0.48074; Allocated: 491008; Reserved: 10485760; time used = 195.26805067062378s
epoch 25: train_loss: 0.35718; Allocated: 491008; Reserved: 8388608; time used = 195.5378541946411s
epoch 30: train_loss: 0.27742; Allocated: 491008; Reserved: 10485760; time used = 193.57612681388855s
epoch 35: train_loss: 0.41686; Allocated: 491008; Reserved: 8388608; time used = 194.35552096366882s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1369.5722405910492.
Training classifier using 80.00% nodes...
{'micro': 0.4066666666666667, 'macro': 0.3292847503373819, 'samples': 0.4066666666666667, 'weighted': 0.3194062078272605, 'accuracy': 0.4066666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2483.70it/s] 82%|████████▏ | 1638/2000 [00:00<00:00, 3222.74it/s]100%|██████████| 2000/2000 [00:00<00:00, 5429.24it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa707335140>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41689; Allocated: 4127232; Reserved: 35651584; time used = 1165.1480615139008s
epoch 10: train_loss: 1.38188; Allocated: 4127232; Reserved: 33554432; time used = 1155.8877358436584s
epoch 15: train_loss: 1.34705; Allocated: 4127232; Reserved: 33554432; time used = 1156.3175196647644s
epoch 20: train_loss: 1.49325; Allocated: 4127232; Reserved: 35651584; time used = 1157.0626120567322s
epoch 25: train_loss: 1.30653; Allocated: 4127232; Reserved: 33554432; time used = 1155.1145389080048s
epoch 30: train_loss: 1.22531; Allocated: 4127232; Reserved: 33554432; time used = 1155.8438670635223s
epoch 35: train_loss: 1.19104; Allocated: 4127232; Reserved: 33554432; time used = 1156.1390838623047s
epoch 40: train_loss: 1.15593; Allocated: 4127232; Reserved: 31457280; time used = 1158.9952166080475s
epoch 45: train_loss: 1.12466; Allocated: 4127232; Reserved: 35651584; time used = 1158.139253616333s
epoch 50: train_loss: 1.10071; Allocated: 4127232; Reserved: 33554432; time used = 1155.6840887069702s
epoch 55: train_loss: 1.08653; Allocated: 4127232; Reserved: 31457280; time used = 1156.4725749492645s
epoch 60: train_loss: 1.07501; Allocated: 4127232; Reserved: 33554432; time used = 1158.0102536678314s
epoch 65: train_loss: 1.04846; Allocated: 4127232; Reserved: 31457280; time used = 1161.308795452118s
epoch 70: train_loss: 1.04548; Allocated: 4127232; Reserved: 35651584; time used = 1162.8941087722778s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17154.69545841217.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.6288773539958374, 'samples': 0.63, 'weighted': 0.6294897063617443, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2478.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 4739.25it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f34ed7f1050>
total iter: 500
epoch 5: train_loss: 0.68358; Allocated: 695296; Reserved: 10485760; time used = 7.8454132080078125s
epoch 10: train_loss: 0.70590; Allocated: 695296; Reserved: 31457280; time used = 7.545208215713501s
epoch 15: train_loss: 0.70128; Allocated: 695296; Reserved: 10485760; time used = 7.484008073806763s
epoch 20: train_loss: 0.69340; Allocated: 695296; Reserved: 10485760; time used = 7.524528503417969s
epoch 25: train_loss: 0.69157; Allocated: 695296; Reserved: 10485760; time used = 7.692873001098633s
epoch 30: train_loss: 0.69658; Allocated: 695296; Reserved: 31457280; time used = 7.508755445480347s
epoch 35: train_loss: 0.68791; Allocated: 695296; Reserved: 10485760; time used = 7.580128192901611s
epoch 40: train_loss: 0.69416; Allocated: 695296; Reserved: 10485760; time used = 7.796841382980347s
epoch 45: train_loss: 0.69102; Allocated: 695296; Reserved: 10485760; time used = 7.505862236022949s
epoch 50: train_loss: 0.68167; Allocated: 695296; Reserved: 10485760; time used = 7.6033103466033936s
epoch 55: train_loss: 0.69441; Allocated: 695296; Reserved: 10485760; time used = 7.52914023399353s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 94.23799681663513.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2488.49it/s]100%|██████████| 1500/1500 [00:00<00:00, 4765.61it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f95d57d11e0>
total iter: 500
epoch 5: train_loss: 0.69200; Allocated: 564736; Reserved: 6291456; time used = 34.67091202735901s
epoch 10: train_loss: 0.68852; Allocated: 564736; Reserved: 6291456; time used = 34.248661279678345s
epoch 15: train_loss: 0.69340; Allocated: 564736; Reserved: 8388608; time used = 34.65239191055298s
epoch 20: train_loss: 0.69258; Allocated: 564736; Reserved: 6291456; time used = 34.54133677482605s
epoch 25: train_loss: 0.68833; Allocated: 564736; Reserved: 8388608; time used = 34.165178060531616s
epoch 30: train_loss: 0.49476; Allocated: 564736; Reserved: 8388608; time used = 34.3332884311676s
epoch 35: train_loss: 0.68582; Allocated: 564736; Reserved: 6291456; time used = 34.43228483200073s
epoch 40: train_loss: 0.67767; Allocated: 564736; Reserved: 6291456; time used = 34.27249050140381s
epoch 45: train_loss: 0.64395; Allocated: 564736; Reserved: 6291456; time used = 34.29136848449707s
epoch 50: train_loss: 0.32756; Allocated: 564736; Reserved: 6291456; time used = 34.40805697441101s
epoch 55: train_loss: 0.09739; Allocated: 564736; Reserved: 6291456; time used = 34.248918294906616s
epoch 60: train_loss: 0.19158; Allocated: 564736; Reserved: 6291456; time used = 34.36819362640381s
epoch 65: train_loss: 0.35065; Allocated: 564736; Reserved: 6291456; time used = 34.228302001953125s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 463.9321026802063.
Training classifier using 80.00% nodes...
{'micro': 0.44666666666666666, 'macro': 0.358269276930205, 'samples': 0.44666666666666666, 'weighted': 0.34752119862229885, 'accuracy': 0.44666666666666666}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2448.29it/s]100%|██████████| 1000/1000 [00:00<00:00, 3622.49it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8ab0d54320>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.70087; Allocated: 704000; Reserved: 10485760; time used = 186.74439191818237s
epoch 10: train_loss: 0.68751; Allocated: 704000; Reserved: 8388608; time used = 189.59881258010864s
epoch 15: train_loss: 0.63641; Allocated: 704000; Reserved: 8388608; time used = 189.79455590248108s
epoch 20: train_loss: 0.61499; Allocated: 704000; Reserved: 8388608; time used = 189.12563014030457s
epoch 25: train_loss: 0.67093; Allocated: 704000; Reserved: 8388608; time used = 189.31997799873352s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 984.2406558990479.
Training classifier using 80.00% nodes...
{'micro': 0.575, 'macro': 0.5749893747343684, 'samples': 0.575, 'weighted': 0.575031875796895, 'accuracy': 0.575}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f52936342d0>
total iter: 500
epoch 5: train_loss: 0.20005; Allocated: 53832192; Reserved: 159383552; time used = 0.5865762233734131s
epoch 10: train_loss: 0.00209; Allocated: 53832192; Reserved: 159383552; time used = 0.5381276607513428s
epoch 15: train_loss: 0.00013; Allocated: 53832192; Reserved: 159383552; time used = 0.5472795963287354s
epoch 20: train_loss: 0.00003; Allocated: 53832192; Reserved: 159383552; time used = 0.5400974750518799s
epoch 25: train_loss: 0.00001; Allocated: 53832192; Reserved: 159383552; time used = 0.5724127292633057s
epoch 30: train_loss: 0.00001; Allocated: 53832192; Reserved: 159383552; time used = 0.5414865016937256s
epoch 35: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5383846759796143s
epoch 40: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.539574384689331s
epoch 45: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5408384799957275s
epoch 50: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5515034198760986s
epoch 55: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5435354709625244s
epoch 60: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5496320724487305s
epoch 65: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5402355194091797s
epoch 70: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.542353630065918s
epoch 75: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.548180103302002s
epoch 80: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5447747707366943s
epoch 85: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5423130989074707s
epoch 90: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5434787273406982s
epoch 95: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.545093297958374s
epoch 100: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5432000160217285s
epoch 105: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5413064956665039s
epoch 110: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5416586399078369s
epoch 115: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5414426326751709s
epoch 120: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5496652126312256s
epoch 125: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5447530746459961s
epoch 130: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5413744449615479s
epoch 135: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5405945777893066s
epoch 140: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5588877201080322s
epoch 145: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5419843196868896s
epoch 150: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5403859615325928s
epoch 155: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5527255535125732s
epoch 160: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5506014823913574s
epoch 165: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5445973873138428s
epoch 170: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5415704250335693s
epoch 175: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5406014919281006s
epoch 180: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5410120487213135s
epoch 185: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5388641357421875s
epoch 190: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5396971702575684s
epoch 195: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5406026840209961s
epoch 200: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.545097827911377s
epoch 205: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5451231002807617s
epoch 210: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.53995680809021s
epoch 215: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.54325270652771s
epoch 220: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5412428379058838s
epoch 225: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5403025150299072s
epoch 230: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5404946804046631s
epoch 235: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5398826599121094s
epoch 240: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5440361499786377s
epoch 245: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.540961503982544s
epoch 250: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5399651527404785s
epoch 255: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5403652191162109s
epoch 260: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5421473979949951s
epoch 265: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5460021495819092s
epoch 270: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5443775653839111s
epoch 275: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5422766208648682s
epoch 280: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.545130729675293s
epoch 285: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5427289009094238s
epoch 290: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5468645095825195s
epoch 295: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.539675235748291s
epoch 300: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5398385524749756s
epoch 305: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5398588180541992s
epoch 310: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.540283203125s
epoch 315: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5422132015228271s
epoch 320: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5497450828552246s
epoch 325: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.543229341506958s
epoch 330: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5554590225219727s
epoch 335: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5410294532775879s
epoch 340: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5412333011627197s
epoch 345: train_loss: 0.00000; Allocated: 53832192; Reserved: 159383552; time used = 0.5441446304321289s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.795119762420654.
Training classifier using 20.00% nodes...
{'micro': 0.5765799256505577, 'macro': 0.49837460234849146, 'samples': 0.5826446280991735, 'weighted': 0.5565169589356079, 'accuracy': 0.5826446280991735}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f35fee7b780>
total iter: 500
epoch 5: train_loss: 21.00167; Allocated: 666112; Reserved: 4194304; time used = 3.1046411991119385s
epoch 10: train_loss: 4.02066; Allocated: 666112; Reserved: 4194304; time used = 3.082404851913452s
epoch 15: train_loss: 1.88657; Allocated: 666112; Reserved: 4194304; time used = 3.209897041320801s
epoch 20: train_loss: 1.40315; Allocated: 666112; Reserved: 4194304; time used = 3.0783026218414307s
epoch 25: train_loss: 1.40603; Allocated: 666112; Reserved: 4194304; time used = 3.0910613536834717s
epoch 30: train_loss: 1.39066; Allocated: 666112; Reserved: 4194304; time used = 3.097416400909424s
epoch 35: train_loss: 1.38301; Allocated: 666112; Reserved: 4194304; time used = 3.231884479522705s
epoch 40: train_loss: 1.37382; Allocated: 666112; Reserved: 4194304; time used = 3.0851173400878906s
epoch 45: train_loss: 1.36876; Allocated: 666112; Reserved: 4194304; time used = 3.108474016189575s
epoch 50: train_loss: 1.38026; Allocated: 666112; Reserved: 4194304; time used = 3.102220058441162s
epoch 55: train_loss: 1.37241; Allocated: 666112; Reserved: 4194304; time used = 3.207014322280884s
epoch 60: train_loss: 1.37296; Allocated: 666112; Reserved: 4194304; time used = 3.073338747024536s
epoch 65: train_loss: 1.37672; Allocated: 666112; Reserved: 4194304; time used = 3.088609218597412s
epoch 70: train_loss: 1.36975; Allocated: 666112; Reserved: 4194304; time used = 3.221912145614624s
epoch 75: train_loss: 1.35198; Allocated: 666112; Reserved: 4194304; time used = 3.1019980907440186s
epoch 80: train_loss: 1.37338; Allocated: 666112; Reserved: 4194304; time used = 3.0915660858154297s
epoch 85: train_loss: 1.36836; Allocated: 666112; Reserved: 4194304; time used = 3.0914785861968994s
epoch 90: train_loss: 1.37456; Allocated: 666112; Reserved: 4194304; time used = 3.2537529468536377s
epoch 95: train_loss: 1.35549; Allocated: 666112; Reserved: 4194304; time used = 3.083277463912964s
epoch 100: train_loss: 1.35970; Allocated: 666112; Reserved: 4194304; time used = 3.098445177078247s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 67.87183666229248.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f5d13d34f50>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38463; Allocated: 41418752; Reserved: 65011712; time used = 3.704538583755493s
epoch 10: train_loss: 1.30656; Allocated: 41418752; Reserved: 65011712; time used = 3.9875056743621826s
epoch 15: train_loss: 1.11245; Allocated: 41418752; Reserved: 65011712; time used = 3.714606761932373s
epoch 20: train_loss: 1.06583; Allocated: 41418752; Reserved: 65011712; time used = 4.133439540863037s
epoch 25: train_loss: 1.02406; Allocated: 41418752; Reserved: 65011712; time used = 3.8430368900299072s
epoch 30: train_loss: 1.01436; Allocated: 41418752; Reserved: 65011712; time used = 4.019765377044678s
epoch 35: train_loss: 0.99567; Allocated: 41418752; Reserved: 65011712; time used = 3.8167831897735596s
epoch 40: train_loss: 0.97164; Allocated: 41418752; Reserved: 65011712; time used = 4.005351781845093s
epoch 45: train_loss: 0.97980; Allocated: 41418752; Reserved: 65011712; time used = 3.692906379699707s
epoch 50: train_loss: 0.97143; Allocated: 41418752; Reserved: 65011712; time used = 4.135757684707642s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 43.732577323913574.
Training classifier using 20.00% nodes...
{'micro': 0.5384810447571954, 'macro': 0.5199448947449729, 'samples': 0.5384810447571954, 'weighted': 0.5345115651826331, 'accuracy': 0.5384810447571954}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7faf99bb8730>
total iter: 500
epoch 5: train_loss: 0.37366; Allocated: 934400; Reserved: 6291456; time used = 0.954077959060669s
epoch 10: train_loss: 0.28756; Allocated: 934400; Reserved: 6291456; time used = 0.945366621017456s
epoch 15: train_loss: 0.04040; Allocated: 934400; Reserved: 6291456; time used = 0.9603161811828613s
epoch 20: train_loss: 0.00370; Allocated: 934400; Reserved: 6291456; time used = 0.9811534881591797s
epoch 25: train_loss: 0.00038; Allocated: 934400; Reserved: 6291456; time used = 0.9500064849853516s
epoch 30: train_loss: 0.00005; Allocated: 934400; Reserved: 6291456; time used = 0.9498653411865234s
epoch 35: train_loss: 0.00002; Allocated: 934400; Reserved: 6291456; time used = 1.0332283973693848s
epoch 40: train_loss: 0.00004; Allocated: 934400; Reserved: 6291456; time used = 0.9683716297149658s
epoch 45: train_loss: 0.00838; Allocated: 934400; Reserved: 6291456; time used = 0.969170331954956s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.320509433746338.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fd75adc0140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3093.69it/s]100%|██████████| 1000/1000 [00:00<00:00, 4435.71it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f07d9501050>
total iter: 500
epoch 5: train_loss: 1324165.20312; Allocated: 625664; Reserved: 8388608; time used = 187.81802535057068s
epoch 10: train_loss: 101626.61621; Allocated: 625664; Reserved: 6291456; time used = 191.7063102722168s
epoch 15: train_loss: 104932.58008; Allocated: 625664; Reserved: 6291456; time used = 189.5803780555725s
epoch 20: train_loss: 23154.20337; Allocated: 625664; Reserved: 6291456; time used = 191.57633709907532s
epoch 25: train_loss: 4020.50333; Allocated: 625664; Reserved: 6291456; time used = 187.43371200561523s
epoch 30: train_loss: 3344.45270; Allocated: 625664; Reserved: 6291456; time used = 187.56497430801392s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1139.029373884201.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.7000000000000001, 'samples': 0.7, 'weighted': 0.7, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fbf0673f2d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f321613b320>
head 0
total iter: 500
epoch 5: train_loss: 0.52853; Allocated: 522752; Reserved: 6291456; time used = 3.2090237140655518s
epoch 10: train_loss: 0.38061; Allocated: 522752; Reserved: 6291456; time used = 3.1893789768218994s
epoch 15: train_loss: 0.28734; Allocated: 522752; Reserved: 6291456; time used = 3.3179965019226074s
epoch 20: train_loss: 0.14696; Allocated: 522752; Reserved: 6291456; time used = 3.1895129680633545s
epoch 25: train_loss: 0.00734; Allocated: 522752; Reserved: 6291456; time used = 3.184710741043091s
epoch 30: train_loss: 0.00360; Allocated: 522752; Reserved: 6291456; time used = 3.185407876968384s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.01200032234192.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f59924702d0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.37821; Allocated: 57621504; Reserved: 115343360; time used = 1.1210112571716309s
epoch 10: train_loss: 1.22671; Allocated: 57621504; Reserved: 115343360; time used = 1.0944645404815674s
epoch 15: train_loss: 1.23193; Allocated: 57621504; Reserved: 115343360; time used = 1.0883979797363281s
epoch 20: train_loss: 1.15473; Allocated: 57621504; Reserved: 115343360; time used = 1.103071928024292s
epoch 25: train_loss: 1.15605; Allocated: 57621504; Reserved: 115343360; time used = 1.0916762351989746s
epoch 30: train_loss: 1.10715; Allocated: 57621504; Reserved: 115343360; time used = 1.0909984111785889s
epoch 35: train_loss: 1.09032; Allocated: 57621504; Reserved: 115343360; time used = 1.0927464962005615s
epoch 40: train_loss: 1.01680; Allocated: 57621504; Reserved: 115343360; time used = 1.0834105014801025s
epoch 45: train_loss: 1.02487; Allocated: 57621504; Reserved: 115343360; time used = 1.089097499847412s
epoch 50: train_loss: 0.98866; Allocated: 57621504; Reserved: 115343360; time used = 1.2551467418670654s
epoch 55: train_loss: 0.98248; Allocated: 57621504; Reserved: 115343360; time used = 1.0825300216674805s
epoch 60: train_loss: 0.94908; Allocated: 57621504; Reserved: 115343360; time used = 1.0926005840301514s
epoch 65: train_loss: 0.93314; Allocated: 57621504; Reserved: 115343360; time used = 1.086580753326416s
epoch 70: train_loss: 0.92691; Allocated: 57621504; Reserved: 115343360; time used = 1.0875461101531982s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.73262906074524.
Training classifier using 20.00% nodes...
{'micro': 0.47360594795539035, 'macro': 0.34467276172002376, 'samples': 0.47858752817430505, 'weighted': 0.40313967744777524, 'accuracy': 0.47858752817430505}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5d976f5730>
total iter: 500
epoch 5: train_loss: 0.52806; Allocated: 647168; Reserved: 4194304; time used = 2.9776618480682373s
epoch 10: train_loss: 0.30091; Allocated: 647168; Reserved: 4194304; time used = 3.055830240249634s
epoch 15: train_loss: 0.12389; Allocated: 647168; Reserved: 4194304; time used = 3.132715940475464s
epoch 20: train_loss: 0.08951; Allocated: 647168; Reserved: 4194304; time used = 2.9813058376312256s
epoch 25: train_loss: 0.08354; Allocated: 647168; Reserved: 4194304; time used = 2.982064962387085s
epoch 30: train_loss: 0.08568; Allocated: 647168; Reserved: 4194304; time used = 3.109639883041382s
epoch 35: train_loss: 0.09945; Allocated: 647168; Reserved: 4194304; time used = 2.9898738861083984s
epoch 40: train_loss: 0.07263; Allocated: 647168; Reserved: 4194304; time used = 2.9764556884765625s
epoch 45: train_loss: 0.06910; Allocated: 647168; Reserved: 4194304; time used = 3.155214786529541s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 32.66964507102966.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f837a650eb0>
total iter: 500
epoch 5: train_loss: 0.20353; Allocated: 17750016; Reserved: 67108864; time used = 0.34146571159362793s
epoch 10: train_loss: 0.00274; Allocated: 17750016; Reserved: 67108864; time used = 0.32773566246032715s
epoch 15: train_loss: 0.00034; Allocated: 17750016; Reserved: 67108864; time used = 0.32608795166015625s
epoch 20: train_loss: 0.00007; Allocated: 17750016; Reserved: 67108864; time used = 0.32226991653442383s
epoch 25: train_loss: 0.00002; Allocated: 17750016; Reserved: 67108864; time used = 0.32568979263305664s
epoch 30: train_loss: 0.00001; Allocated: 17750016; Reserved: 67108864; time used = 0.3372223377227783s
epoch 35: train_loss: 0.00001; Allocated: 17750016; Reserved: 67108864; time used = 0.3382890224456787s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5.8020713329315186.
Training classifier using 20.00% nodes...
{'micro': 0.7101984310106139, 'macro': 0.7006371358017656, 'samples': 0.7101984310106138, 'weighted': 0.7080831657596082, 'accuracy': 0.7101984310106138}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa79f3f77d0>
total iter: 500
epoch 5: train_loss: 0.63733; Allocated: 776192; Reserved: 4194304; time used = 4.0799338817596436s
epoch 10: train_loss: 0.64199; Allocated: 776192; Reserved: 4194304; time used = 4.221650123596191s
epoch 15: train_loss: 0.64181; Allocated: 776192; Reserved: 6291456; time used = 4.078026533126831s
epoch 20: train_loss: 0.62841; Allocated: 776192; Reserved: 4194304; time used = 4.204852819442749s
epoch 25: train_loss: 0.63335; Allocated: 776192; Reserved: 4194304; time used = 4.0710649490356445s
epoch 30: train_loss: 0.62188; Allocated: 776192; Reserved: 4194304; time used = 4.230629920959473s
epoch 35: train_loss: 0.63234; Allocated: 776192; Reserved: 4194304; time used = 4.0762786865234375s
epoch 40: train_loss: 0.63472; Allocated: 776192; Reserved: 4194304; time used = 4.214786529541016s
epoch 45: train_loss: 0.64047; Allocated: 776192; Reserved: 4194304; time used = 4.076814651489258s
epoch 50: train_loss: 0.63995; Allocated: 776192; Reserved: 4194304; time used = 4.202753782272339s
epoch 55: train_loss: 0.63304; Allocated: 776192; Reserved: 4194304; time used = 4.07830286026001s
epoch 60: train_loss: 0.64054; Allocated: 776192; Reserved: 4194304; time used = 4.244001150131226s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 53.982813596725464.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5576923076923077, 'samples': 0.5652173913043478, 'weighted': 0.5618729096989966, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2997.96it/s] 83%|████████▎ | 1661/2000 [00:00<00:00, 3826.46it/s]100%|██████████| 2000/2000 [00:00<00:00, 6143.21it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f249ffc1140>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.64777; Allocated: 4061696; Reserved: 33554432; time used = 1181.1647489070892s
epoch 10: train_loss: 0.27187; Allocated: 4061696; Reserved: 31457280; time used = 1182.4676022529602s
epoch 15: train_loss: 0.18933; Allocated: 4061696; Reserved: 31457280; time used = 1184.3963060379028s
epoch 20: train_loss: 0.10175; Allocated: 4061696; Reserved: 35651584; time used = 1185.5184133052826s
epoch 25: train_loss: 0.09575; Allocated: 4061696; Reserved: 33554432; time used = 1183.1631643772125s
epoch 30: train_loss: 0.06440; Allocated: 4061696; Reserved: 33554432; time used = 1181.5970544815063s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7811.384571075439.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.627906976744186, 'samples': 0.63, 'weighted': 0.6287441860465117, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4fa9dfe690>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3029.37it/s]100%|██████████| 1000/1000 [00:00<00:00, 4361.90it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f9c7746a050>
head 0
total iter: 500
epoch 5: train_loss: 0.68799; Allocated: 495104; Reserved: 6291456; time used = 52.1628520488739s
epoch 10: train_loss: 0.65940; Allocated: 495104; Reserved: 8388608; time used = 52.04611873626709s
epoch 15: train_loss: 0.60688; Allocated: 495104; Reserved: 6291456; time used = 52.202208518981934s
epoch 20: train_loss: 0.48768; Allocated: 495104; Reserved: 8388608; time used = 51.89145064353943s
epoch 25: train_loss: 0.15927; Allocated: 495104; Reserved: 8388608; time used = 52.27633285522461s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 294.9400489330292.
Training classifier using 80.00% nodes...
{'micro': 0.545, 'macro': 0.5352281723230929, 'samples': 0.545, 'weighted': 0.53388033402283, 'accuracy': 0.545}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2460.44it/s]100%|██████████| 1500/1500 [00:00<00:00, 4683.48it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f5f9e670050>
head 0
total iter: 500
epoch 5: train_loss: 0.69343; Allocated: 631296; Reserved: 14680064; time used = 8.987878322601318s
epoch 10: train_loss: 0.69299; Allocated: 631296; Reserved: 14680064; time used = 8.768102169036865s
epoch 15: train_loss: 0.69299; Allocated: 631296; Reserved: 14680064; time used = 8.745549440383911s
epoch 20: train_loss: 0.69318; Allocated: 631296; Reserved: 14680064; time used = 8.65249752998352s
epoch 25: train_loss: 0.69317; Allocated: 631296; Reserved: 14680064; time used = 8.851784944534302s
epoch 30: train_loss: 0.69230; Allocated: 631296; Reserved: 14680064; time used = 8.677433729171753s
epoch 35: train_loss: 0.69234; Allocated: 631296; Reserved: 14680064; time used = 8.66632342338562s
epoch 40: train_loss: 0.69363; Allocated: 631296; Reserved: 14680064; time used = 8.724302053451538s
epoch 45: train_loss: 0.69314; Allocated: 631296; Reserved: 14680064; time used = 8.819786071777344s
epoch 50: train_loss: 0.69402; Allocated: 631296; Reserved: 14680064; time used = 8.620740175247192s
epoch 55: train_loss: 0.69281; Allocated: 631296; Reserved: 14680064; time used = 8.635703325271606s
epoch 60: train_loss: 0.69314; Allocated: 631296; Reserved: 14680064; time used = 8.879038572311401s
epoch 65: train_loss: 0.69322; Allocated: 631296; Reserved: 14680064; time used = 8.631871461868286s
epoch 70: train_loss: 0.69323; Allocated: 631296; Reserved: 14680064; time used = 8.578356504440308s
epoch 75: train_loss: 0.69306; Allocated: 631296; Reserved: 14680064; time used = 8.643277883529663s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 141.30393052101135.
Training classifier using 80.00% nodes...
{'micro': 0.34, 'macro': 0.2568372803666921, 'samples': 0.34, 'weighted': 0.24913216195569135, 'accuracy': 0.34}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2447.22it/s] 79%|███████▉  | 1581/2000 [00:00<00:00, 3163.42it/s]100%|██████████| 2000/2000 [00:00<00:00, 5302.28it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbc4d610140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7efd798922d0>
total iter: 500
epoch 5: train_loss: 0.50151; Allocated: 53684224; Reserved: 159383552; time used = 0.39202880859375s
epoch 10: train_loss: 0.33807; Allocated: 53684224; Reserved: 159383552; time used = 0.3801419734954834s
epoch 15: train_loss: 0.29715; Allocated: 53684224; Reserved: 159383552; time used = 0.3831818103790283s
epoch 20: train_loss: 0.27056; Allocated: 53684224; Reserved: 159383552; time used = 0.38561367988586426s
epoch 25: train_loss: 0.24930; Allocated: 53684224; Reserved: 159383552; time used = 0.39539265632629395s
epoch 30: train_loss: 0.23782; Allocated: 53684224; Reserved: 159383552; time used = 0.38735413551330566s
epoch 35: train_loss: 0.22866; Allocated: 53684224; Reserved: 159383552; time used = 0.3915867805480957s
epoch 40: train_loss: 0.22500; Allocated: 53684224; Reserved: 159383552; time used = 0.3835463523864746s
epoch 45: train_loss: 0.22568; Allocated: 53684224; Reserved: 159383552; time used = 0.3862028121948242s
epoch 50: train_loss: 0.22240; Allocated: 53684224; Reserved: 159383552; time used = 0.40596795082092285s
epoch 55: train_loss: 0.21671; Allocated: 53684224; Reserved: 159383552; time used = 0.38533711433410645s
epoch 60: train_loss: 0.21956; Allocated: 53684224; Reserved: 159383552; time used = 0.38478565216064453s
epoch 65: train_loss: 0.21712; Allocated: 53684224; Reserved: 159383552; time used = 0.38364434242248535s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.347673892974854.
Training classifier using 20.00% nodes...
{'micro': 0.5237918215613383, 'macro': 0.4395344604025729, 'samples': 0.5293012772351615, 'weighted': 0.4889574363711685, 'accuracy': 0.5293012772351615}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3063.49it/s]100%|██████████| 1000/1000 [00:00<00:00, 4395.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3f37e6b050>
total iter: 500
epoch 5: train_loss: 1.47271; Allocated: 486912; Reserved: 8388608; time used = 11.527853965759277s
epoch 10: train_loss: 1.39124; Allocated: 486912; Reserved: 8388608; time used = 11.377253293991089s
epoch 15: train_loss: 1.38727; Allocated: 486912; Reserved: 8388608; time used = 11.54035496711731s
epoch 20: train_loss: 1.38635; Allocated: 486912; Reserved: 8388608; time used = 11.563525915145874s
epoch 25: train_loss: 1.38654; Allocated: 486912; Reserved: 8388608; time used = 11.368224620819092s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 70.15233063697815.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3022.04it/s]100%|██████████| 1500/1500 [00:00<00:00, 5489.74it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f2ab84d22d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f05131fe820>
total iter: 500
epoch 5: train_loss: 0.60392; Allocated: 791552; Reserved: 6291456; time used = 4.105303525924683s
epoch 10: train_loss: 0.48691; Allocated: 791552; Reserved: 6291456; time used = 4.2516560554504395s
epoch 15: train_loss: 0.36068; Allocated: 791552; Reserved: 8388608; time used = 4.108741760253906s
epoch 20: train_loss: 0.25719; Allocated: 791552; Reserved: 6291456; time used = 4.231312036514282s
epoch 25: train_loss: 0.23912; Allocated: 791552; Reserved: 6291456; time used = 4.048501014709473s
epoch 30: train_loss: 0.24557; Allocated: 791552; Reserved: 6291456; time used = 4.2112085819244385s
epoch 35: train_loss: 0.23508; Allocated: 791552; Reserved: 6291456; time used = 4.051819801330566s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.24000287055969.
Training classifier using 80.00% nodes...
{'micro': 0.6521739130434783, 'macro': 0.6431034482758622, 'samples': 0.6521739130434783, 'weighted': 0.6472263868065968, 'accuracy': 0.6521739130434783}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fc9653691e0>
total iter: 500
epoch 5: train_loss: 0.61695; Allocated: 53476352; Reserved: 109051904; time used = 4.023068428039551s
epoch 10: train_loss: 0.42311; Allocated: 53476352; Reserved: 109051904; time used = 4.161278486251831s
epoch 15: train_loss: 0.39994; Allocated: 53476352; Reserved: 109051904; time used = 4.014828681945801s
epoch 20: train_loss: 0.38862; Allocated: 53476352; Reserved: 109051904; time used = 4.154967546463013s
epoch 25: train_loss: 0.37633; Allocated: 53476352; Reserved: 109051904; time used = 4.01915717124939s
epoch 30: train_loss: 0.37075; Allocated: 53476352; Reserved: 109051904; time used = 4.01133918762207s
epoch 35: train_loss: 0.36270; Allocated: 53476352; Reserved: 109051904; time used = 4.1776487827301025s
epoch 40: train_loss: 0.36445; Allocated: 53476352; Reserved: 109051904; time used = 4.007271766662598s
epoch 45: train_loss: 0.35908; Allocated: 53476352; Reserved: 109051904; time used = 4.15118670463562s
epoch 50: train_loss: 0.35797; Allocated: 53476352; Reserved: 109051904; time used = 4.018455982208252s
epoch 55: train_loss: 0.35236; Allocated: 53476352; Reserved: 109051904; time used = 4.183104038238525s
epoch 60: train_loss: 0.35294; Allocated: 53476352; Reserved: 109051904; time used = 4.0063276290893555s
epoch 65: train_loss: 0.35082; Allocated: 53476352; Reserved: 109051904; time used = 4.015425682067871s
epoch 70: train_loss: 0.34823; Allocated: 53476352; Reserved: 109051904; time used = 4.158682823181152s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 62.102601528167725.
Training classifier using 20.00% nodes...
{'micro': 0.6773234200743494, 'macro': 0.5865940254343004, 'samples': 0.6844477836213373, 'weighted': 0.6512517838728932, 'accuracy': 0.6844477836213373}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f7261556dc0>
total iter: 500
epoch 5: train_loss: 0.34256; Allocated: 40834560; Reserved: 62914560; time used = 0.5241575241088867s
epoch 10: train_loss: 0.33334; Allocated: 40834560; Reserved: 62914560; time used = 0.4842338562011719s
epoch 15: train_loss: 0.33336; Allocated: 40834560; Reserved: 62914560; time used = 0.49233531951904297s
epoch 20: train_loss: 0.33436; Allocated: 40834560; Reserved: 62914560; time used = 0.7112724781036377s
epoch 25: train_loss: 0.32279; Allocated: 40834560; Reserved: 62914560; time used = 0.49305295944213867s
epoch 30: train_loss: 0.32890; Allocated: 40834560; Reserved: 62914560; time used = 0.49011683464050293s
epoch 35: train_loss: 0.32859; Allocated: 40834560; Reserved: 62914560; time used = 0.4820973873138428s
epoch 40: train_loss: 0.32396; Allocated: 40834560; Reserved: 62914560; time used = 0.4769775867462158s
epoch 45: train_loss: 0.31345; Allocated: 40834560; Reserved: 62914560; time used = 0.7204995155334473s
epoch 50: train_loss: 0.32092; Allocated: 40834560; Reserved: 62914560; time used = 0.48961877822875977s
epoch 55: train_loss: 0.32293; Allocated: 40834560; Reserved: 62914560; time used = 0.4865884780883789s
epoch 60: train_loss: 0.31858; Allocated: 40834560; Reserved: 62914560; time used = 0.48671913146972656s
epoch 65: train_loss: 0.32634; Allocated: 40834560; Reserved: 62914560; time used = 0.4858260154724121s
epoch 70: train_loss: 0.31775; Allocated: 40834560; Reserved: 62914560; time used = 0.48783373832702637s
epoch 75: train_loss: 0.32175; Allocated: 40834560; Reserved: 62914560; time used = 0.7274188995361328s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.98443865776062.
Training classifier using 20.00% nodes...
{'micro': 0.7809686826423228, 'macro': 0.7704265835825597, 'samples': 0.7809686826423228, 'weighted': 0.7800970815746745, 'accuracy': 0.7809686826423228}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3054.09it/s]100%|██████████| 1000/1000 [00:00<00:00, 4394.01it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd2d6b94280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb989153870>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3024.21it/s] 83%|████████▎ | 1664/2000 [00:00<00:00, 3857.72it/s]100%|██████████| 2000/2000 [00:00<00:00, 6183.88it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efea4aa9140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3003.21it/s] 83%|████████▎ | 1651/2000 [00:00<00:00, 3828.68it/s]100%|██████████| 2000/2000 [00:00<00:00, 6126.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc58f7ab140>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.58319; Allocated: 3922432; Reserved: 35651584; time used = 829.4193189144135s
epoch 10: train_loss: 1.40974; Allocated: 3922432; Reserved: 37748736; time used = 830.3361797332764s
epoch 15: train_loss: 1.39388; Allocated: 3922432; Reserved: 33554432; time used = 827.2616910934448s
epoch 20: train_loss: 1.39002; Allocated: 3922432; Reserved: 35651584; time used = 830.2260715961456s
epoch 25: train_loss: 1.38457; Allocated: 3922432; Reserved: 35651584; time used = 828.4198250770569s
epoch 30: train_loss: 1.38278; Allocated: 3922432; Reserved: 35651584; time used = 829.0175585746765s
epoch 35: train_loss: 1.38082; Allocated: 3922432; Reserved: 33554432; time used = 831.5960357189178s
epoch 40: train_loss: 1.37800; Allocated: 3922432; Reserved: 33554432; time used = 822.7344033718109s
epoch 45: train_loss: 1.37430; Allocated: 3922432; Reserved: 33554432; time used = 813.8976719379425s
epoch 50: train_loss: 1.36828; Allocated: 3922432; Reserved: 35651584; time used = 824.989917755127s
epoch 55: train_loss: 1.35624; Allocated: 3922432; Reserved: 33554432; time used = 823.3643260002136s
epoch 60: train_loss: 1.33141; Allocated: 3922432; Reserved: 33554432; time used = 820.3632583618164s
epoch 65: train_loss: 1.31525; Allocated: 3922432; Reserved: 33554432; time used = 827.4284408092499s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11239.138729810715.
Training classifier using 80.00% nodes...
{'micro': 0.745, 'macro': 0.7421572840567254, 'samples': 0.745, 'weighted': 0.7413450795015041, 'accuracy': 0.745}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2528.48it/s]100%|██████████| 1000/1000 [00:00<00:00, 3725.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd14fbe92d0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68259; Allocated: 906752; Reserved: 31457280; time used = 11.037080526351929s
epoch 10: train_loss: 0.69554; Allocated: 906752; Reserved: 31457280; time used = 11.192208290100098s
epoch 15: train_loss: 0.69159; Allocated: 906752; Reserved: 33554432; time used = 11.0130136013031s
epoch 20: train_loss: 0.69094; Allocated: 906752; Reserved: 33554432; time used = 10.991227626800537s
epoch 25: train_loss: 0.69337; Allocated: 906752; Reserved: 31457280; time used = 10.982350826263428s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 68.04982352256775.
Training classifier using 80.00% nodes...
{'micro': 0.605, 'macro': 0.6047529706066291, 'samples': 0.605, 'weighted': 0.6045553470919325, 'accuracy': 0.605}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7efd2ec36f00>
total iter: 500
epoch 5: train_loss: 1.38383; Allocated: 17461760; Reserved: 44040192; time used = 4.183813810348511s
epoch 10: train_loss: 1.35375; Allocated: 17461760; Reserved: 44040192; time used = 4.188089609146118s
epoch 15: train_loss: 1.31675; Allocated: 17461760; Reserved: 44040192; time used = 4.2954583168029785s
epoch 20: train_loss: 1.24526; Allocated: 17461760; Reserved: 44040192; time used = 4.157342195510864s
epoch 25: train_loss: 1.20245; Allocated: 17461760; Reserved: 44040192; time used = 4.177452802658081s
epoch 30: train_loss: 1.14376; Allocated: 17461760; Reserved: 44040192; time used = 4.147686719894409s
epoch 35: train_loss: 1.07911; Allocated: 17461760; Reserved: 44040192; time used = 4.292176246643066s
epoch 40: train_loss: 1.06812; Allocated: 17461760; Reserved: 44040192; time used = 4.18485426902771s
epoch 45: train_loss: 0.95071; Allocated: 17461760; Reserved: 44040192; time used = 4.146090030670166s
epoch 50: train_loss: 0.93074; Allocated: 17461760; Reserved: 44040192; time used = 4.1552574634552s
epoch 55: train_loss: 0.89247; Allocated: 17461760; Reserved: 44040192; time used = 4.341925621032715s
epoch 60: train_loss: 0.85307; Allocated: 17461760; Reserved: 44040192; time used = 4.15720796585083s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 55.23604393005371.
Training classifier using 20.00% nodes...
{'micro': 0.6322104291647439, 'macro': 0.5528191033985004, 'samples': 0.6322104291647439, 'weighted': 0.6047657337541174, 'accuracy': 0.6322104291647439}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3000.36it/s]100%|██████████| 1000/1000 [00:00<00:00, 4325.06it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fecb0c69050>
total iter: 500
epoch 5: train_loss: 686669948.00000; Allocated: 710144; Reserved: 6291456; time used = 11.720483779907227s
epoch 10: train_loss: 93161582.00000; Allocated: 710144; Reserved: 8388608; time used = 11.602253198623657s
epoch 15: train_loss: 21093100.25000; Allocated: 710144; Reserved: 6291456; time used = 11.943833112716675s
epoch 20: train_loss: 30074447.50000; Allocated: 710144; Reserved: 6291456; time used = 11.794990539550781s
epoch 25: train_loss: 26698825.75000; Allocated: 710144; Reserved: 6291456; time used = 11.607722043991089s
epoch 30: train_loss: 8492714.06250; Allocated: 710144; Reserved: 6291456; time used = 11.752915859222412s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 78.43615388870239.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6743405395926751, 'samples': 0.675, 'weighted': 0.6740474460783085, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd64f7756e0>
head 0
total iter: 500
epoch 5: train_loss: 1.36937; Allocated: 457216; Reserved: 4194304; time used = 0.6039998531341553s
epoch 10: train_loss: 1.36164; Allocated: 457216; Reserved: 4194304; time used = 0.6001567840576172s
epoch 15: train_loss: 1.36553; Allocated: 457216; Reserved: 4194304; time used = 0.6041460037231445s
epoch 20: train_loss: 1.36683; Allocated: 457216; Reserved: 4194304; time used = 0.600722074508667s
epoch 25: train_loss: 1.36435; Allocated: 457216; Reserved: 4194304; time used = 0.5982909202575684s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.566229343414307.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3009.89it/s]100%|██████████| 1000/1000 [00:00<00:00, 4338.99it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5fbeb6d1e0>
total iter: 500
epoch 5: train_loss: 0.68225; Allocated: 700928; Reserved: 31457280; time used = 5.75105094909668s
epoch 10: train_loss: 0.69605; Allocated: 700928; Reserved: 31457280; time used = 5.997450113296509s
epoch 15: train_loss: 0.69367; Allocated: 700928; Reserved: 31457280; time used = 5.779911756515503s
epoch 20: train_loss: 0.69841; Allocated: 700928; Reserved: 31457280; time used = 5.81188440322876s
epoch 25: train_loss: 0.69434; Allocated: 700928; Reserved: 31457280; time used = 5.81983757019043s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.227205753326416.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fdb14b5e050>
total iter: 500
epoch 5: train_loss: 1.21861; Allocated: 40768512; Reserved: 62914560; time used = 2.378507137298584s
epoch 10: train_loss: 1.14623; Allocated: 40768512; Reserved: 62914560; time used = 2.568739652633667s
epoch 15: train_loss: 1.13609; Allocated: 40768512; Reserved: 62914560; time used = 2.3161728382110596s
epoch 20: train_loss: 1.10894; Allocated: 40768512; Reserved: 62914560; time used = 2.2864298820495605s
epoch 25: train_loss: 1.08477; Allocated: 40768512; Reserved: 62914560; time used = 2.285709857940674s
epoch 30: train_loss: 1.03748; Allocated: 40768512; Reserved: 62914560; time used = 2.5768651962280273s
epoch 35: train_loss: 0.96826; Allocated: 40768512; Reserved: 62914560; time used = 2.442115306854248s
epoch 40: train_loss: 0.94844; Allocated: 40768512; Reserved: 62914560; time used = 2.4776015281677246s
epoch 45: train_loss: 0.88935; Allocated: 40768512; Reserved: 62914560; time used = 2.4944543838500977s
epoch 50: train_loss: 0.91247; Allocated: 40768512; Reserved: 62914560; time used = 2.409182548522949s
epoch 55: train_loss: 0.92275; Allocated: 40768512; Reserved: 62914560; time used = 2.3966033458709717s
epoch 60: train_loss: 0.89113; Allocated: 40768512; Reserved: 62914560; time used = 2.3710098266601562s
epoch 65: train_loss: 0.86650; Allocated: 40768512; Reserved: 62914560; time used = 2.5525810718536377s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.28569269180298.
Training classifier using 20.00% nodes...
{'micro': 0.6553188791682516, 'macro': 0.6525158352810293, 'samples': 0.6553188791682516, 'weighted': 0.6549692089222329, 'accuracy': 0.6553188791682516}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f18b99387d0>
total iter: 500
epoch 5: train_loss: 2.04782; Allocated: 513536; Reserved: 4194304; time used = 2.933774709701538s
epoch 10: train_loss: 1.52894; Allocated: 513536; Reserved: 4194304; time used = 2.9311983585357666s
epoch 15: train_loss: 1.41174; Allocated: 513536; Reserved: 4194304; time used = 3.059098482131958s
epoch 20: train_loss: 1.38779; Allocated: 513536; Reserved: 4194304; time used = 2.9202022552490234s
epoch 25: train_loss: 1.37902; Allocated: 513536; Reserved: 4194304; time used = 2.9086339473724365s
epoch 30: train_loss: 1.36601; Allocated: 513536; Reserved: 4194304; time used = 3.0399155616760254s
epoch 35: train_loss: 1.36563; Allocated: 513536; Reserved: 4194304; time used = 2.9134974479675293s
epoch 40: train_loss: 1.36598; Allocated: 513536; Reserved: 4194304; time used = 2.8937060832977295s
epoch 45: train_loss: 1.36062; Allocated: 513536; Reserved: 4194304; time used = 3.05299973487854s
epoch 50: train_loss: 1.35983; Allocated: 513536; Reserved: 4194304; time used = 2.8946428298950195s
epoch 55: train_loss: 1.36122; Allocated: 513536; Reserved: 4194304; time used = 3.0447185039520264s
epoch 60: train_loss: 1.35554; Allocated: 513536; Reserved: 4194304; time used = 2.907349109649658s
epoch 65: train_loss: 1.35984; Allocated: 513536; Reserved: 4194304; time used = 2.9010696411132812s
epoch 70: train_loss: 1.35434; Allocated: 513536; Reserved: 4194304; time used = 3.0357775688171387s
epoch 75: train_loss: 1.35560; Allocated: 513536; Reserved: 4194304; time used = 2.9026389122009277s
epoch 80: train_loss: 1.35754; Allocated: 513536; Reserved: 4194304; time used = 2.9013493061065674s
epoch 85: train_loss: 1.35446; Allocated: 513536; Reserved: 4194304; time used = 3.0536108016967773s
epoch 90: train_loss: 1.35364; Allocated: 513536; Reserved: 4194304; time used = 2.892775058746338s
epoch 95: train_loss: 1.35543; Allocated: 513536; Reserved: 4194304; time used = 2.904632806777954s
epoch 100: train_loss: 1.35372; Allocated: 513536; Reserved: 4194304; time used = 3.0513014793395996s
epoch 105: train_loss: 1.35414; Allocated: 513536; Reserved: 4194304; time used = 2.899775981903076s
epoch 110: train_loss: 1.35239; Allocated: 513536; Reserved: 4194304; time used = 2.8969357013702393s
epoch 115: train_loss: 1.35567; Allocated: 513536; Reserved: 4194304; time used = 3.030506134033203s
epoch 120: train_loss: 1.35755; Allocated: 513536; Reserved: 4194304; time used = 2.8943231105804443s
epoch 125: train_loss: 1.35273; Allocated: 513536; Reserved: 4194304; time used = 2.9032719135284424s
epoch 130: train_loss: 1.35382; Allocated: 513536; Reserved: 4194304; time used = 3.0259511470794678s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 80.86606526374817.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fbdab4bbdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f7dd8f65e10>
total iter: 500
epoch 5: train_loss: 528756928.73708; Allocated: 41037312; Reserved: 1065353216; time used = 371.5567190647125s
epoch 10: train_loss: 167320752.81376; Allocated: 41037312; Reserved: 1065353216; time used = 361.99055099487305s
epoch 15: train_loss: 568159104.80521; Allocated: 41037312; Reserved: 1065353216; time used = 356.700293302536s
epoch 20: train_loss: 105085816.69907; Allocated: 41037312; Reserved: 1065353216; time used = 358.3147916793823s
epoch 25: train_loss: 173124896.71038; Allocated: 41037312; Reserved: 1065353216; time used = 363.29067397117615s
epoch 30: train_loss: 104217000.70108; Allocated: 41037312; Reserved: 1065353216; time used = 371.76585507392883s
epoch 35: train_loss: 72295104.70061; Allocated: 41037312; Reserved: 1065353216; time used = 367.536589384079s
epoch 40: train_loss: 33743740.70016; Allocated: 41037312; Reserved: 1065353216; time used = 366.91611337661743s
epoch 45: train_loss: 4376728.20955; Allocated: 41037312; Reserved: 1065353216; time used = 363.42932534217834s
epoch 50: train_loss: 59224116.69783; Allocated: 41037312; Reserved: 1065353216; time used = 365.7065954208374s
epoch 55: train_loss: 5723176.69665; Allocated: 41037312; Reserved: 1065353216; time used = 367.22430300712585s
epoch 60: train_loss: 30489034.69379; Allocated: 41037312; Reserved: 1065353216; time used = 364.9004878997803s
epoch 65: train_loss: 1.42342; Allocated: 41037312; Reserved: 1065353216; time used = 365.9914152622223s
epoch 70: train_loss: 1.40589; Allocated: 41037312; Reserved: 1065353216; time used = 365.40233635902405s
epoch 75: train_loss: 1.38700; Allocated: 41037312; Reserved: 1065353216; time used = 354.4375560283661s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7506.228248119354.
Training classifier using 20.00% nodes...
{'micro': 0.5852034994294408, 'macro': 0.5063176712666363, 'samples': 0.5852034994294408, 'weighted': 0.5543802083861931, 'accuracy': 0.5852034994294408}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2536.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 3744.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff724de8050>
head 0
total iter: 500
epoch 5: train_loss: 1.58929; Allocated: 429568; Reserved: 6291456; time used = 54.203940868377686s
epoch 10: train_loss: 1.41829; Allocated: 429568; Reserved: 8388608; time used = 52.24396324157715s
epoch 15: train_loss: 1.38639; Allocated: 429568; Reserved: 6291456; time used = 52.61607766151428s
epoch 20: train_loss: 1.39232; Allocated: 429568; Reserved: 8388608; time used = 52.27342176437378s
epoch 25: train_loss: 1.38719; Allocated: 429568; Reserved: 6291456; time used = 54.749770641326904s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 279.782888174057.
Training classifier using 80.00% nodes...
{'micro': 0.455, 'macro': 0.4546591619762351, 'samples': 0.455, 'weighted': 0.4543864915572233, 'accuracy': 0.455}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2462.97it/s] 83%|████████▎ | 1660/2000 [00:00<00:00, 3204.37it/s]100%|██████████| 2000/2000 [00:00<00:00, 5439.87it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f94699840f0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3844608; Reserved: 33554432; time used = 808.6939103603363s
epoch 10: train_loss: 0.69315; Allocated: 3844608; Reserved: 33554432; time used = 799.7273988723755s
epoch 15: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 822.0659387111664s
epoch 20: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 866.0344104766846s
epoch 25: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 877.522567987442s
epoch 30: train_loss: 0.69315; Allocated: 3844608; Reserved: 33554432; time used = 865.3682725429535s
epoch 35: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 842.5919380187988s
epoch 40: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 848.1212677955627s
epoch 45: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 837.1253952980042s
epoch 50: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 803.9005417823792s
epoch 55: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 870.2326235771179s
epoch 60: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 808.6709675788879s
epoch 65: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 805.4876320362091s
epoch 70: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 817.826372385025s
epoch 75: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 840.6393353939056s
epoch 80: train_loss: 0.69315; Allocated: 3844608; Reserved: 33554432; time used = 866.0443248748779s
epoch 85: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 861.509064912796s
epoch 90: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 866.9513201713562s
epoch 95: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 865.1882100105286s
epoch 100: train_loss: 0.69315; Allocated: 3844608; Reserved: 33554432; time used = 835.4403729438782s
epoch 105: train_loss: 0.69315; Allocated: 3844608; Reserved: 29360128; time used = 836.4875495433807s
epoch 110: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 861.8020811080933s
epoch 115: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 842.073991060257s
epoch 120: train_loss: 0.69315; Allocated: 3844608; Reserved: 33554432; time used = 842.0494456291199s
epoch 125: train_loss: 0.69315; Allocated: 3844608; Reserved: 31457280; time used = 839.2172598838806s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21201.74841117859.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2801.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 5179.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f04d8fb1050>
head 0
total iter: 500
epoch 5: train_loss: 0.69343; Allocated: 631296; Reserved: 14680064; time used = 9.801636219024658s
epoch 10: train_loss: 0.69299; Allocated: 631296; Reserved: 14680064; time used = 9.32747507095337s
epoch 15: train_loss: 0.69300; Allocated: 631296; Reserved: 14680064; time used = 9.312595129013062s
epoch 20: train_loss: 0.69318; Allocated: 631296; Reserved: 14680064; time used = 9.265273571014404s
epoch 25: train_loss: 0.69317; Allocated: 631296; Reserved: 14680064; time used = 9.756707668304443s
epoch 30: train_loss: 0.69234; Allocated: 631296; Reserved: 14680064; time used = 9.315966606140137s
epoch 35: train_loss: 0.69261; Allocated: 631296; Reserved: 14680064; time used = 9.29173994064331s
epoch 40: train_loss: 0.69360; Allocated: 631296; Reserved: 14680064; time used = 9.337110042572021s
epoch 45: train_loss: 0.69322; Allocated: 631296; Reserved: 14680064; time used = 9.432138919830322s
epoch 50: train_loss: 0.69382; Allocated: 631296; Reserved: 14680064; time used = 9.307601928710938s
epoch 55: train_loss: 0.69279; Allocated: 631296; Reserved: 14680064; time used = 9.32196593284607s
epoch 60: train_loss: 0.69313; Allocated: 631296; Reserved: 14680064; time used = 9.452486991882324s
epoch 65: train_loss: 0.69325; Allocated: 631296; Reserved: 14680064; time used = 9.517069578170776s
epoch 70: train_loss: 0.69326; Allocated: 631296; Reserved: 14680064; time used = 9.370527267456055s
epoch 75: train_loss: 0.69303; Allocated: 631296; Reserved: 14680064; time used = 9.351680278778076s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 154.9964988231659.
Training classifier using 80.00% nodes...
{'micro': 0.3333333333333333, 'macro': 0.19010568631264993, 'samples': 0.3333333333333333, 'weighted': 0.18440251572327043, 'accuracy': 0.3333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f499afcbf00>
total iter: 500
epoch 5: train_loss: 0.42978; Allocated: 40921088; Reserved: 65011712; time used = 3.2467589378356934s
epoch 10: train_loss: 0.42696; Allocated: 40921088; Reserved: 65011712; time used = 3.0533246994018555s
epoch 15: train_loss: 0.40316; Allocated: 40921088; Reserved: 65011712; time used = 2.9669301509857178s
epoch 20: train_loss: 0.41979; Allocated: 40921088; Reserved: 65011712; time used = 3.2605185508728027s
epoch 25: train_loss: 0.40490; Allocated: 40921088; Reserved: 65011712; time used = 3.0221872329711914s
epoch 30: train_loss: 0.41028; Allocated: 40921088; Reserved: 65011712; time used = 3.2062182426452637s
epoch 35: train_loss: 0.40265; Allocated: 40921088; Reserved: 65011712; time used = 2.965407133102417s
epoch 40: train_loss: 0.41020; Allocated: 40921088; Reserved: 65011712; time used = 3.159968614578247s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.00929880142212.
Training classifier using 20.00% nodes...
{'micro': 0.7166222898440472, 'macro': 0.6766379557879915, 'samples': 0.7166222898440472, 'weighted': 0.7040745266396331, 'accuracy': 0.7166222898440472}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2871.81it/s]100%|██████████| 1500/1500 [00:00<00:00, 5271.76it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f2e19e30050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f147e472780>
total iter: 500
epoch 5: train_loss: 1.71958; Allocated: 443392; Reserved: 4194304; time used = 0.6019833087921143s
epoch 10: train_loss: 1.38411; Allocated: 443392; Reserved: 4194304; time used = 0.5912563800811768s
epoch 15: train_loss: 1.34371; Allocated: 443392; Reserved: 4194304; time used = 0.576793909072876s
epoch 20: train_loss: 1.29318; Allocated: 443392; Reserved: 4194304; time used = 0.5897388458251953s
epoch 25: train_loss: 1.27971; Allocated: 443392; Reserved: 4194304; time used = 0.5795712471008301s
epoch 30: train_loss: 1.26569; Allocated: 443392; Reserved: 4194304; time used = 0.601933479309082s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.593229293823242.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8637992831541219, 'samples': 0.868421052631579, 'weighted': 0.8677607998490852, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2324.45it/s]100%|██████████| 1000/1000 [00:00<00:00, 3471.37it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f13804aca50>
total iter: 500
epoch 5: train_loss: 42.36928; Allocated: 425984; Reserved: 4194304; time used = 36.37039494514465s
epoch 10: train_loss: 12.64689; Allocated: 425984; Reserved: 8388608; time used = 35.3878493309021s
epoch 15: train_loss: 7.20893; Allocated: 425984; Reserved: 4194304; time used = 35.294225454330444s
epoch 20: train_loss: 4.27206; Allocated: 425984; Reserved: 4194304; time used = 35.479254722595215s
epoch 25: train_loss: 2.67420; Allocated: 425984; Reserved: 4194304; time used = 35.535279512405396s
epoch 30: train_loss: 2.19022; Allocated: 425984; Reserved: 4194304; time used = 35.692118883132935s
epoch 35: train_loss: 1.66401; Allocated: 425984; Reserved: 4194304; time used = 35.532628297805786s
epoch 40: train_loss: 1.50065; Allocated: 425984; Reserved: 4194304; time used = 35.628432273864746s
epoch 45: train_loss: 1.44456; Allocated: 425984; Reserved: 4194304; time used = 35.28609085083008s
epoch 50: train_loss: 1.40126; Allocated: 425984; Reserved: 6291456; time used = 35.82567262649536s
epoch 55: train_loss: 1.36960; Allocated: 425984; Reserved: 6291456; time used = 35.45509672164917s
epoch 60: train_loss: 1.35445; Allocated: 425984; Reserved: 6291456; time used = 35.824169397354126s
epoch 65: train_loss: 1.35848; Allocated: 425984; Reserved: 4194304; time used = 35.59972953796387s
epoch 70: train_loss: 1.34965; Allocated: 425984; Reserved: 6291456; time used = 35.84758949279785s
epoch 75: train_loss: 1.34748; Allocated: 425984; Reserved: 4194304; time used = 35.77925658226013s
epoch 80: train_loss: 1.34414; Allocated: 425984; Reserved: 4194304; time used = 35.85267448425293s
epoch 85: train_loss: 1.34239; Allocated: 425984; Reserved: 6291456; time used = 35.72993445396423s
epoch 90: train_loss: 1.35166; Allocated: 425984; Reserved: 4194304; time used = 35.511717796325684s
epoch 95: train_loss: 1.33905; Allocated: 425984; Reserved: 4194304; time used = 35.54720687866211s
epoch 100: train_loss: 1.35088; Allocated: 425984; Reserved: 4194304; time used = 35.662039279937744s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 717.2177419662476.
Training classifier using 80.00% nodes...
{'micro': 0.7250000000000001, 'macro': 0.7249931248281207, 'samples': 0.725, 'weighted': 0.725020625515638, 'accuracy': 0.725}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc8d0149460>
total iter: 500
epoch 5: train_loss: 1.38131; Allocated: 778240; Reserved: 4194304; time used = 6.780129909515381s
epoch 10: train_loss: 1.37624; Allocated: 778240; Reserved: 4194304; time used = 6.459713697433472s
epoch 15: train_loss: 1.37302; Allocated: 778240; Reserved: 4194304; time used = 6.586373567581177s
epoch 20: train_loss: 1.37599; Allocated: 778240; Reserved: 4194304; time used = 6.507349729537964s
epoch 25: train_loss: 1.36805; Allocated: 778240; Reserved: 4194304; time used = 6.7966554164886475s
epoch 30: train_loss: 1.37557; Allocated: 778240; Reserved: 4194304; time used = 6.5271337032318115s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 45.73101758956909.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4866071428571428, 'samples': 0.5652173913043478, 'weighted': 0.5011645962732919, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2433.87it/s]100%|██████████| 1000/1000 [00:00<00:00, 3608.92it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f078632b050>
total iter: 500
epoch 5: train_loss: 18318.91284; Allocated: 628224; Reserved: 8388608; time used = 206.87177181243896s
epoch 10: train_loss: 3147.33585; Allocated: 628224; Reserved: 6291456; time used = 210.69369506835938s
epoch 15: train_loss: 1088.82002; Allocated: 628224; Reserved: 6291456; time used = 206.94549202919006s
epoch 20: train_loss: 1243.69011; Allocated: 628224; Reserved: 6291456; time used = 206.37233448028564s
epoch 25: train_loss: 211.03822; Allocated: 628224; Reserved: 6291456; time used = 206.38662338256836s
epoch 30: train_loss: 291.00193; Allocated: 628224; Reserved: 6291456; time used = 206.93448448181152s
epoch 35: train_loss: 172.15976; Allocated: 628224; Reserved: 8388608; time used = 209.38359355926514s
epoch 40: train_loss: 108.74367; Allocated: 628224; Reserved: 8388608; time used = 201.76393151283264s
epoch 45: train_loss: 113.07627; Allocated: 628224; Reserved: 6291456; time used = 207.2757740020752s
epoch 50: train_loss: 160.87479; Allocated: 628224; Reserved: 6291456; time used = 208.6055908203125s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2239.3446485996246.
Training classifier using 80.00% nodes...
{'micro': 0.635, 'macro': 0.6301081806896203, 'samples': 0.635, 'weighted': 0.6292574295052062, 'accuracy': 0.635}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fcc6ee25a00>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 1916.22it/s] 74%|███████▍  | 1488/2000 [00:00<00:00, 2509.42it/s]100%|██████████| 2000/2000 [00:00<00:00, 4406.26it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f69e1b2f140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3016.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4333.26it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe09c167050>
head 0
total iter: 500
epoch 5: train_loss: 0.67628; Allocated: 427520; Reserved: 6291456; time used = 206.88825845718384s
epoch 10: train_loss: 0.68146; Allocated: 427520; Reserved: 6291456; time used = 209.922945022583s
epoch 15: train_loss: 0.67376; Allocated: 427520; Reserved: 6291456; time used = 208.43870401382446s
epoch 20: train_loss: 0.67149; Allocated: 427520; Reserved: 6291456; time used = 209.2408366203308s
epoch 25: train_loss: 0.65905; Allocated: 427520; Reserved: 6291456; time used = 207.77708840370178s
epoch 30: train_loss: 0.64081; Allocated: 427520; Reserved: 6291456; time used = 207.1457736492157s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1421.0374171733856.
Training classifier using 80.00% nodes...
{'micro': 0.455, 'macro': 0.4519170333123822, 'samples': 0.455, 'weighted': 0.4510949088623508, 'accuracy': 0.455}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f20a90ad460>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1718f11370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2696.62it/s] 81%|████████  | 1623/2000 [00:00<00:00, 3466.92it/s]100%|██████████| 2000/2000 [00:00<00:00, 5690.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe6dbfc1140>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.54336; Allocated: 4127232; Reserved: 31457280; time used = 910.9270272254944s
epoch 10: train_loss: 0.23755; Allocated: 4127232; Reserved: 29360128; time used = 906.9513337612152s
epoch 15: train_loss: 0.05049; Allocated: 4127232; Reserved: 31457280; time used = 907.4028437137604s
epoch 20: train_loss: 0.09322; Allocated: 4127232; Reserved: 29360128; time used = 907.1681373119354s
epoch 25: train_loss: 0.07116; Allocated: 4127232; Reserved: 31457280; time used = 906.6179797649384s
epoch 30: train_loss: 0.02849; Allocated: 4127232; Reserved: 29360128; time used = 907.2387702465057s
epoch 35: train_loss: 0.01378; Allocated: 4127232; Reserved: 31457280; time used = 906.9516711235046s
epoch 40: train_loss: 0.01239; Allocated: 4127232; Reserved: 31457280; time used = 907.758953332901s
epoch 45: train_loss: 0.01255; Allocated: 4127232; Reserved: 29360128; time used = 924.9920353889465s
epoch 50: train_loss: 0.00622; Allocated: 4127232; Reserved: 29360128; time used = 937.6856029033661s
epoch 55: train_loss: 0.00598; Allocated: 4127232; Reserved: 31457280; time used = 936.695250749588s
epoch 60: train_loss: 0.00629; Allocated: 4127232; Reserved: 29360128; time used = 936.3424093723297s
epoch 65: train_loss: 0.00411; Allocated: 4127232; Reserved: 31457280; time used = 937.2122502326965s
epoch 70: train_loss: 0.00384; Allocated: 4127232; Reserved: 29360128; time used = 936.5080394744873s
epoch 75: train_loss: 0.00724; Allocated: 4127232; Reserved: 31457280; time used = 935.453608751297s
epoch 80: train_loss: 0.00410; Allocated: 4127232; Reserved: 29360128; time used = 908.6776678562164s
epoch 85: train_loss: 0.00397; Allocated: 4127232; Reserved: 31457280; time used = 909.8420140743256s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15811.917038440704.
Training classifier using 80.00% nodes...
{'micro': 0.635, 'macro': 0.6349178565177165, 'samples': 0.635, 'weighted': 0.6350821434822835, 'accuracy': 0.635}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2415.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 4825.93it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9f6c002af0>
head 0
total iter: 500
epoch 5: train_loss: 0.68313; Allocated: 426496; Reserved: 6291456; time used = 213.033358335495s
epoch 10: train_loss: 0.66642; Allocated: 426496; Reserved: 8388608; time used = 211.91474318504333s
epoch 15: train_loss: 0.67576; Allocated: 426496; Reserved: 8388608; time used = 213.83417797088623s
epoch 20: train_loss: 0.66663; Allocated: 426496; Reserved: 8388608; time used = 212.9278211593628s
epoch 25: train_loss: 0.65323; Allocated: 426496; Reserved: 8388608; time used = 211.3665313720703s
epoch 30: train_loss: 0.65050; Allocated: 426496; Reserved: 8388608; time used = 213.08226013183594s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1324.349470615387.
Training classifier using 80.00% nodes...
{'micro': 0.30333333333333334, 'macro': 0.24437514780533146, 'samples': 0.30333333333333334, 'weighted': 0.2370438933711715, 'accuracy': 0.30333333333333334}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc7111f76e0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40240; Allocated: 866816; Reserved: 2097152; time used = 0.8934621810913086s
epoch 10: train_loss: 1.38187; Allocated: 866816; Reserved: 2097152; time used = 0.9161527156829834s
epoch 15: train_loss: 1.28273; Allocated: 866816; Reserved: 2097152; time used = 0.8922855854034424s
epoch 20: train_loss: 1.27187; Allocated: 866816; Reserved: 2097152; time used = 0.8406534194946289s
epoch 25: train_loss: 1.24034; Allocated: 866816; Reserved: 2097152; time used = 0.852949857711792s
epoch 30: train_loss: 1.24759; Allocated: 866816; Reserved: 2097152; time used = 0.9295051097869873s
epoch 35: train_loss: 1.22977; Allocated: 866816; Reserved: 2097152; time used = 0.8507752418518066s
epoch 40: train_loss: 1.21740; Allocated: 866816; Reserved: 2097152; time used = 1.051694631576538s
epoch 45: train_loss: 1.20556; Allocated: 866816; Reserved: 2097152; time used = 0.8724634647369385s
epoch 50: train_loss: 1.19456; Allocated: 866816; Reserved: 2097152; time used = 0.8526158332824707s
epoch 55: train_loss: 1.15952; Allocated: 866816; Reserved: 2097152; time used = 0.9299561977386475s
epoch 60: train_loss: 1.14519; Allocated: 866816; Reserved: 2097152; time used = 0.8719482421875s
epoch 65: train_loss: 1.13157; Allocated: 866816; Reserved: 2097152; time used = 0.8610196113586426s
epoch 70: train_loss: 1.11837; Allocated: 866816; Reserved: 2097152; time used = 0.9743223190307617s
epoch 75: train_loss: 1.10412; Allocated: 866816; Reserved: 2097152; time used = 0.8707215785980225s
epoch 80: train_loss: 1.12897; Allocated: 866816; Reserved: 2097152; time used = 0.8716354370117188s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.853112936019897.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8347826086956521, 'samples': 0.8421052631578947, 'weighted': 0.840274599542334, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fa4ff5cfeb0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2804.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4078.23it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f393f16b050>
total iter: 500
epoch 5: train_loss: 0.68238; Allocated: 845312; Reserved: 31457280; time used = 7.398943901062012s
epoch 10: train_loss: 0.69605; Allocated: 845312; Reserved: 31457280; time used = 7.459094285964966s
epoch 15: train_loss: 0.69367; Allocated: 845312; Reserved: 31457280; time used = 7.105537176132202s
epoch 20: train_loss: 0.69841; Allocated: 845312; Reserved: 31457280; time used = 7.244330883026123s
epoch 25: train_loss: 0.69434; Allocated: 845312; Reserved: 31457280; time used = 7.208097219467163s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 47.48798370361328.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fdb8cdd5dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc176225780>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.58823; Allocated: 999936; Reserved: 27262976; time used = 2.3677759170532227s
epoch 10: train_loss: 0.47139; Allocated: 999936; Reserved: 27262976; time used = 2.3210158348083496s
epoch 15: train_loss: 0.40634; Allocated: 999936; Reserved: 6291456; time used = 2.260216236114502s
epoch 20: train_loss: 0.15343; Allocated: 999936; Reserved: 6291456; time used = 2.2332546710968018s
epoch 25: train_loss: 0.24420; Allocated: 999936; Reserved: 6291456; time used = 2.3488123416900635s
epoch 30: train_loss: 0.69250; Allocated: 999936; Reserved: 6291456; time used = 2.183850049972534s
epoch 35: train_loss: 0.69414; Allocated: 999936; Reserved: 6291456; time used = 2.165631055831909s
epoch 40: train_loss: 0.68292; Allocated: 999936; Reserved: 6291456; time used = 2.250187873840332s
epoch 45: train_loss: 0.65547; Allocated: 999936; Reserved: 6291456; time used = 2.3027660846710205s
epoch 50: train_loss: 0.63548; Allocated: 999936; Reserved: 27262976; time used = 2.1879327297210693s
epoch 55: train_loss: 0.38988; Allocated: 999936; Reserved: 8388608; time used = 2.2486939430236816s
epoch 60: train_loss: 0.38237; Allocated: 999936; Reserved: 6291456; time used = 2.1898088455200195s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.563149213790894.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.5907692307692308, 'samples': 0.631578947368421, 'weighted': 0.611174089068826, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2873.97it/s] 81%|████████▏ | 1627/2000 [00:00<00:00, 3672.25it/s]100%|██████████| 2000/2000 [00:00<00:00, 5926.47it/s]Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f196da04e60>
total iter: 500
epoch 5: train_loss: 0.44017; Allocated: 40836608; Reserved: 62914560; time used = 0.5537049770355225s
epoch 10: train_loss: 0.37473; Allocated: 40836608; Reserved: 62914560; time used = 0.5412397384643555s
epoch 15: train_loss: 0.17339; Allocated: 40836608; Reserved: 62914560; time used = 0.5569009780883789s
epoch 20: train_loss: 0.10406; Allocated: 40836608; Reserved: 62914560; time used = 0.7801740169525146s
epoch 25: train_loss: 0.06680; Allocated: 40836608; Reserved: 62914560; time used = 0.5329999923706055s
epoch 30: train_loss: 0.08156; Allocated: 40836608; Reserved: 62914560; time used = 0.5373718738555908s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.901240348815918.
Training classifier using 20.00% nodes...
{'micro': 0.706415620641562, 'macro': 0.6962350060573731, 'samples': 0.706415620641562, 'weighted': 0.7005932449794787, 'accuracy': 0.706415620641562}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0fa557e500>
total iter: 500
epoch 5: train_loss: 0.61892; Allocated: 593920; Reserved: 6291456; time used = 3.367875099182129s
epoch 10: train_loss: 0.51525; Allocated: 593920; Reserved: 6291456; time used = 3.3677501678466797s
epoch 15: train_loss: 0.43869; Allocated: 593920; Reserved: 6291456; time used = 3.4862587451934814s
epoch 20: train_loss: 0.41354; Allocated: 593920; Reserved: 6291456; time used = 3.3482248783111572s
epoch 25: train_loss: 0.63364; Allocated: 593920; Reserved: 6291456; time used = 3.366236686706543s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.123997449874878.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.680672268907563, 'samples': 0.6842105263157895, 'weighted': 0.6859796550199027, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2942.85it/s] 82%|████████▏ | 1638/2000 [00:00<00:00, 3755.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 6025.46it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd64c76e140>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.63136; Allocated: 3922432; Reserved: 31457280; time used = 1270.9581379890442s
epoch 10: train_loss: 0.60456; Allocated: 3922432; Reserved: 35651584; time used = 1268.0965979099274s
epoch 15: train_loss: 0.59205; Allocated: 3922432; Reserved: 31457280; time used = 1257.9230659008026s
epoch 20: train_loss: 0.56949; Allocated: 3922432; Reserved: 35651584; time used = 1235.1281914710999s
epoch 25: train_loss: 0.54560; Allocated: 3922432; Reserved: 33554432; time used = 1233.5036616325378s
epoch 30: train_loss: 0.54564; Allocated: 3922432; Reserved: 35651584; time used = 1232.752133846283s
epoch 35: train_loss: 0.54302; Allocated: 3922432; Reserved: 31457280; time used = 1232.9145984649658s
epoch 40: train_loss: 0.55735; Allocated: 3922432; Reserved: 33554432; time used = 1172.4996001720428s
epoch 45: train_loss: 0.53800; Allocated: 3922432; Reserved: 33554432; time used = 1170.2524976730347s
epoch 50: train_loss: 0.54030; Allocated: 3922432; Reserved: 33554432; time used = 1169.8249719142914s
epoch 55: train_loss: 0.53275; Allocated: 3922432; Reserved: 33554432; time used = 1170.0281717777252s
epoch 60: train_loss: 0.53063; Allocated: 3922432; Reserved: 31457280; time used = 1172.173371553421s
epoch 65: train_loss: 0.52535; Allocated: 3922432; Reserved: 35651584; time used = 1169.9037883281708s
epoch 70: train_loss: 0.52711; Allocated: 3922432; Reserved: 33554432; time used = 1171.1907887458801s
epoch 75: train_loss: 0.52940; Allocated: 3922432; Reserved: 31457280; time used = 1170.1647067070007s
epoch 80: train_loss: 0.52625; Allocated: 3922432; Reserved: 31457280; time used = 1168.312952041626s
epoch 85: train_loss: 0.52395; Allocated: 3922432; Reserved: 35651584; time used = 1170.486167192459s
epoch 90: train_loss: 0.51515; Allocated: 3922432; Reserved: 33554432; time used = 1168.3075497150421s
epoch 95: train_loss: 0.52155; Allocated: 3922432; Reserved: 33554432; time used = 1165.4970831871033s
epoch 100: train_loss: 0.51546; Allocated: 3922432; Reserved: 31457280; time used = 1169.3879458904266s
epoch 105: train_loss: 0.51086; Allocated: 3922432; Reserved: 33554432; time used = 1172.0963153839111s
epoch 110: train_loss: 0.50861; Allocated: 3922432; Reserved: 33554432; time used = 1173.1303963661194s
epoch 115: train_loss: 0.50701; Allocated: 3922432; Reserved: 35651584; time used = 1170.8968932628632s
epoch 120: train_loss: 0.50621; Allocated: 3922432; Reserved: 33554432; time used = 1170.8929545879364s
epoch 125: train_loss: 0.50476; Allocated: 3922432; Reserved: 31457280; time used = 1167.8826451301575s
epoch 130: train_loss: 0.50238; Allocated: 3922432; Reserved: 33554432; time used = 1173.6359503269196s
epoch 135: train_loss: 0.50113; Allocated: 3922432; Reserved: 35651584; time used = 1178.907437324524s
epoch 140: train_loss: 0.50478; Allocated: 3922432; Reserved: 33554432; time used = 1189.5096349716187s
epoch 145: train_loss: 0.50043; Allocated: 3922432; Reserved: 33554432; time used = 1190.7410488128662s
epoch 150: train_loss: 0.49989; Allocated: 3922432; Reserved: 33554432; time used = 1193.5013072490692s
epoch 155: train_loss: 0.49983; Allocated: 3922432; Reserved: 31457280; time used = 1194.7804729938507s
epoch 160: train_loss: 0.49963; Allocated: 3922432; Reserved: 33554432; time used = 1197.848791360855s
epoch 165: train_loss: 0.49858; Allocated: 3922432; Reserved: 35651584; time used = 1198.289294242859s
epoch 170: train_loss: 0.49742; Allocated: 3922432; Reserved: 33554432; time used = 1197.8976848125458s
epoch 175: train_loss: 0.50002; Allocated: 3922432; Reserved: 33554432; time used = 1274.749594449997s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42051.43434691429.
Training classifier using 80.00% nodes...
{'micro': 0.715, 'macro': 0.7118228468869283, 'samples': 0.715, 'weighted': 0.7109150888546222, 'accuracy': 0.715}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2462.11it/s] 82%|████████▏ | 1647/2000 [00:00<00:00, 3199.94it/s]100%|██████████| 2000/2000 [00:00<00:00, 5414.30it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f274eee7140>
total iter: 500
epoch 5: train_loss: 0.69212; Allocated: 4051456; Reserved: 29360128; time used = 876.0360057353973s
epoch 10: train_loss: 0.66132; Allocated: 4051456; Reserved: 29360128; time used = 829.1658835411072s
epoch 15: train_loss: 0.56178; Allocated: 4051456; Reserved: 31457280; time used = 844.2724831104279s
epoch 20: train_loss: 0.19205; Allocated: 4051456; Reserved: 29360128; time used = 843.6083900928497s
epoch 25: train_loss: 0.12768; Allocated: 4051456; Reserved: 29360128; time used = 880.7089784145355s
epoch 30: train_loss: 0.08825; Allocated: 4051456; Reserved: 31457280; time used = 878.8893110752106s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5807.492656946182.
Training classifier using 80.00% nodes...
{'micro': 0.7025, 'macro': 0.6877275619788625, 'samples': 0.7025, 'weighted': 0.6856899843207747, 'accuracy': 0.7025}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2486.84it/s]100%|██████████| 1000/1000 [00:00<00:00, 3684.12it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7efec1028050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.46275; Allocated: 704000; Reserved: 8388608; time used = 35.29990315437317s
epoch 10: train_loss: 1.38957; Allocated: 704000; Reserved: 8388608; time used = 35.28005886077881s
epoch 15: train_loss: 1.38907; Allocated: 704000; Reserved: 8388608; time used = 35.77427268028259s
epoch 20: train_loss: 1.38725; Allocated: 704000; Reserved: 10485760; time used = 35.09874367713928s
epoch 25: train_loss: 1.38666; Allocated: 704000; Reserved: 8388608; time used = 35.34774589538574s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 208.27155208587646.
Training classifier using 80.00% nodes...
{'micro': 0.495, 'macro': 0.49346773991323756, 'samples': 0.495, 'weighted': 0.4929105544271421, 'accuracy': 0.495}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2434.05it/s] 83%|████████▎ | 1655/2000 [00:00<00:00, 3168.54it/s]100%|██████████| 2000/2000 [00:00<00:00, 5382.85it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f11d6f400f0>
total iter: 500
epoch 5: train_loss: 158.78892; Allocated: 3779584; Reserved: 27262976; time used = 920.2225322723389s
epoch 10: train_loss: 90.04239; Allocated: 3779584; Reserved: 29360128; time used = 929.1982984542847s
epoch 15: train_loss: 28.37930; Allocated: 3779584; Reserved: 27262976; time used = 962.3282706737518s
epoch 20: train_loss: 15.33635; Allocated: 3779584; Reserved: 31457280; time used = 925.4228863716125s
epoch 25: train_loss: 13.23099; Allocated: 3779584; Reserved: 27262976; time used = 990.129209280014s
epoch 30: train_loss: 8.96079; Allocated: 3779584; Reserved: 29360128; time used = 971.7658829689026s
epoch 35: train_loss: 9.56596; Allocated: 3779584; Reserved: 29360128; time used = 945.4837725162506s
epoch 40: train_loss: 5.39414; Allocated: 3779584; Reserved: 27262976; time used = 935.8708024024963s
epoch 45: train_loss: 3.86361; Allocated: 3779584; Reserved: 27262976; time used = 911.4657301902771s
epoch 50: train_loss: 3.35009; Allocated: 3779584; Reserved: 29360128; time used = 911.2004895210266s
epoch 55: train_loss: 2.45367; Allocated: 3779584; Reserved: 29360128; time used = 910.8156595230103s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10317.513967990875.
Training classifier using 80.00% nodes...
{'micro': 0.735, 'macro': 0.7338756245135698, 'samples': 0.735, 'weighted': 0.7333566819813713, 'accuracy': 0.735}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2479.55it/s]100%|██████████| 1000/1000 [00:00<00:00, 3668.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7efc26645b40>
total iter: 500
epoch 5: train_loss: 0.65520; Allocated: 423936; Reserved: 10485760; time used = 11.82922911643982s
epoch 10: train_loss: 0.53702; Allocated: 423936; Reserved: 8388608; time used = 11.385381698608398s
epoch 15: train_loss: 0.64646; Allocated: 423936; Reserved: 8388608; time used = 11.582979202270508s
epoch 20: train_loss: 0.61977; Allocated: 423936; Reserved: 8388608; time used = 11.559825897216797s
epoch 25: train_loss: 0.52316; Allocated: 423936; Reserved: 8388608; time used = 11.350048303604126s
epoch 30: train_loss: 0.22661; Allocated: 423936; Reserved: 8388608; time used = 11.54762887954712s
epoch 35: train_loss: 0.17615; Allocated: 423936; Reserved: 8388608; time used = 11.581521034240723s
epoch 40: train_loss: 0.16173; Allocated: 423936; Reserved: 8388608; time used = 11.218112707138062s
epoch 45: train_loss: 0.13556; Allocated: 423936; Reserved: 8388608; time used = 11.544753789901733s
epoch 50: train_loss: 0.11107; Allocated: 423936; Reserved: 8388608; time used = 11.646333456039429s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 127.69071960449219.
Training classifier using 80.00% nodes...
{'micro': 0.64, 'macro': 0.6386993175431553, 'samples': 0.64, 'weighted': 0.638265756724207, 'accuracy': 0.64}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fb87d795f00>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2983.57it/s]100%|██████████| 1500/1500 [00:00<00:00, 5423.12it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff2c21362d0>
total iter: 500
epoch 5: train_loss: 118870461.00000; Allocated: 625152; Reserved: 4194304; time used = 34.782472372055054s
epoch 10: train_loss: 7758734.00000; Allocated: 625152; Reserved: 6291456; time used = 34.85809302330017s
epoch 15: train_loss: 2167233.26562; Allocated: 625152; Reserved: 4194304; time used = 34.95055913925171s
epoch 20: train_loss: 651640.59473; Allocated: 625152; Reserved: 6291456; time used = 34.6959490776062s
epoch 25: train_loss: 352.20479; Allocated: 625152; Reserved: 4194304; time used = 34.910818338394165s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 205.66595888137817.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3ce5888910>
total iter: 500
epoch 5: train_loss: 0.68399; Allocated: 646144; Reserved: 29360128; time used = 1.146456003189087s
epoch 10: train_loss: 0.65385; Allocated: 646144; Reserved: 29360128; time used = 1.120293378829956s
epoch 15: train_loss: 0.60893; Allocated: 646144; Reserved: 8388608; time used = 1.1360704898834229s
epoch 20: train_loss: 0.58728; Allocated: 646144; Reserved: 8388608; time used = 1.1135990619659424s
epoch 25: train_loss: 0.56541; Allocated: 646144; Reserved: 8388608; time used = 1.1186785697937012s
epoch 30: train_loss: 0.55310; Allocated: 646144; Reserved: 8388608; time used = 1.124725103378296s
epoch 35: train_loss: 0.55171; Allocated: 646144; Reserved: 8388608; time used = 1.1166679859161377s
epoch 40: train_loss: 0.54325; Allocated: 646144; Reserved: 8388608; time used = 1.1190171241760254s
epoch 45: train_loss: 0.53305; Allocated: 646144; Reserved: 8388608; time used = 1.1111633777618408s
epoch 50: train_loss: 0.55816; Allocated: 646144; Reserved: 29360128; time used = 1.1573655605316162s
epoch 55: train_loss: 0.54670; Allocated: 646144; Reserved: 8388608; time used = 1.1683778762817383s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.037494659423828.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.700358422939068, 'samples': 0.7105263157894737, 'weighted': 0.709073759667987, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe7dc1817d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fafe6820e10>
head 0
total iter: 500
epoch 5: train_loss: 0.69281; Allocated: 41484288; Reserved: 1067450368; time used = 359.39183807373047s
epoch 10: train_loss: 0.69296; Allocated: 41484288; Reserved: 1067450368; time used = 346.05858969688416s
epoch 15: train_loss: 0.69329; Allocated: 41484288; Reserved: 1067450368; time used = 347.9738221168518s
epoch 20: train_loss: 0.69312; Allocated: 41484288; Reserved: 1067450368; time used = 343.8567781448364s
epoch 25: train_loss: 0.69316; Allocated: 41484288; Reserved: 1067450368; time used = 342.8110611438751s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3440.006249666214.
Training classifier using 20.00% nodes...
{'micro': 0.7220742994801572, 'macro': 0.72244543357865, 'samples': 0.7220742994801572, 'weighted': 0.7220869822375384, 'accuracy': 0.7220742994801572}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f04717e6a00>
total iter: 500
epoch 5: train_loss: 0.63511; Allocated: 974848; Reserved: 4194304; time used = 0.9126601219177246s
epoch 10: train_loss: 0.61599; Allocated: 974848; Reserved: 6291456; time used = 0.912632942199707s
epoch 15: train_loss: 0.37546; Allocated: 974848; Reserved: 6291456; time used = 0.9106063842773438s
epoch 20: train_loss: 0.22328; Allocated: 974848; Reserved: 4194304; time used = 0.9118752479553223s
epoch 25: train_loss: 0.25456; Allocated: 974848; Reserved: 4194304; time used = 0.9119167327880859s
epoch 30: train_loss: 0.19535; Allocated: 974848; Reserved: 4194304; time used = 0.9059891700744629s
epoch 35: train_loss: 0.14131; Allocated: 974848; Reserved: 4194304; time used = 1.050915002822876s
epoch 40: train_loss: 0.07101; Allocated: 974848; Reserved: 4194304; time used = 0.911522626876831s
epoch 45: train_loss: 0.16827; Allocated: 974848; Reserved: 4194304; time used = 0.9114110469818115s
epoch 50: train_loss: 0.08090; Allocated: 974848; Reserved: 4194304; time used = 0.9068765640258789s
epoch 55: train_loss: 0.05313; Allocated: 974848; Reserved: 4194304; time used = 0.9211819171905518s
epoch 60: train_loss: 0.04869; Allocated: 974848; Reserved: 4194304; time used = 0.9005098342895508s
epoch 65: train_loss: 0.02874; Allocated: 974848; Reserved: 4194304; time used = 0.9042618274688721s
epoch 70: train_loss: 0.02929; Allocated: 974848; Reserved: 6291456; time used = 0.899470329284668s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.69762420654297.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5490196078431372, 'samples': 0.5797101449275363, 'weighted': 0.557544757033248, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fab6f3675a0>
total iter: 500
epoch 5: train_loss: 2.81207; Allocated: 646144; Reserved: 4194304; time used = 0.8232417106628418s
epoch 10: train_loss: 1.71617; Allocated: 646144; Reserved: 4194304; time used = 0.799647331237793s
epoch 15: train_loss: 1.44021; Allocated: 646144; Reserved: 4194304; time used = 0.812077522277832s
epoch 20: train_loss: 1.30429; Allocated: 646144; Reserved: 4194304; time used = 0.8190512657165527s
epoch 25: train_loss: 1.22437; Allocated: 646144; Reserved: 4194304; time used = 0.7916758060455322s
epoch 30: train_loss: 1.17594; Allocated: 646144; Reserved: 4194304; time used = 0.792194128036499s
epoch 35: train_loss: 1.14522; Allocated: 646144; Reserved: 4194304; time used = 0.7906906604766846s
epoch 40: train_loss: 1.12853; Allocated: 646144; Reserved: 4194304; time used = 0.8207783699035645s
epoch 45: train_loss: 1.12115; Allocated: 646144; Reserved: 4194304; time used = 0.8116860389709473s
epoch 50: train_loss: 1.12168; Allocated: 646144; Reserved: 4194304; time used = 0.7909376621246338s
epoch 55: train_loss: 1.10236; Allocated: 646144; Reserved: 4194304; time used = 0.7913985252380371s
epoch 60: train_loss: 1.10480; Allocated: 646144; Reserved: 4194304; time used = 0.7950387001037598s
epoch 65: train_loss: 1.09711; Allocated: 646144; Reserved: 4194304; time used = 0.8173165321350098s
epoch 70: train_loss: 1.10393; Allocated: 646144; Reserved: 4194304; time used = 0.8038330078125s
epoch 75: train_loss: 1.10287; Allocated: 646144; Reserved: 4194304; time used = 0.8006787300109863s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.648186922073364.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8125440451021847, 'samples': 0.8157894736842105, 'weighted': 0.8164385594006157, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc063afb050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3067.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4399.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f70e699f230>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 5.10942; Allocated: 1041920; Reserved: 10485760; time used = 12.253695487976074s
epoch 10: train_loss: 1.39564; Allocated: 1041920; Reserved: 10485760; time used = 12.153902530670166s
epoch 15: train_loss: 1.40827; Allocated: 1041920; Reserved: 10485760; time used = 12.316529512405396s
epoch 20: train_loss: 1.39305; Allocated: 1041920; Reserved: 10485760; time used = 12.13486361503601s
epoch 25: train_loss: 1.38823; Allocated: 1041920; Reserved: 10485760; time used = 12.158704042434692s
epoch 30: train_loss: 1.38741; Allocated: 1041920; Reserved: 10485760; time used = 12.119173049926758s
epoch 35: train_loss: 1.38719; Allocated: 1041920; Reserved: 10485760; time used = 12.154730796813965s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 88.72597694396973.
Training classifier using 80.00% nodes...
{'micro': 0.57, 'macro': 0.569827931172469, 'samples': 0.57, 'weighted': 0.5696558623449379, 'accuracy': 0.57}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2458.07it/s] 79%|███████▉  | 1582/2000 [00:00<00:00, 3176.42it/s]100%|██████████| 2000/2000 [00:00<00:00, 5319.93it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcdc3662140>
total iter: 500
epoch 5: train_loss: 262106.68419; Allocated: 4002304; Reserved: 31457280; time used = 1126.2166998386383s
epoch 10: train_loss: 59145.08185; Allocated: 4002304; Reserved: 31457280; time used = 1141.5822896957397s
epoch 15: train_loss: 7960.47955; Allocated: 4002304; Reserved: 31457280; time used = 1158.099366426468s
epoch 20: train_loss: 4833.93337; Allocated: 4002304; Reserved: 33554432; time used = 1162.4085323810577s
epoch 25: train_loss: 2669.69812; Allocated: 4002304; Reserved: 31457280; time used = 1198.4253005981445s
epoch 30: train_loss: 2813.90611; Allocated: 4002304; Reserved: 31457280; time used = 1194.614049911499s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6985.233133554459.
Training classifier using 80.00% nodes...
{'micro': 0.6975, 'macro': 0.6817443565515291, 'samples': 0.6975, 'weighted': 0.6796200001315106, 'accuracy': 0.6975}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3a53d0bdc0>
total iter: 500
epoch 5: train_loss: 1.37986; Allocated: 778240; Reserved: 6291456; time used = 4.864116907119751s
epoch 10: train_loss: 1.35080; Allocated: 778240; Reserved: 6291456; time used = 4.811518669128418s
epoch 15: train_loss: 1.34185; Allocated: 778240; Reserved: 6291456; time used = 4.895740509033203s
epoch 20: train_loss: 1.35697; Allocated: 778240; Reserved: 6291456; time used = 4.919892072677612s
epoch 25: train_loss: 1.34437; Allocated: 778240; Reserved: 6291456; time used = 4.755288362503052s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.846440076828003.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5558268590455051, 'samples': 0.5797101449275363, 'weighted': 0.5632903858836398, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2758.08it/s] 79%|███████▉  | 1589/2000 [00:00<00:00, 3540.05it/s]100%|██████████| 2000/2000 [00:00<00:00, 5968.36it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe5b56b13c0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3842560; Reserved: 29360128; time used = 1151.9991142749786s
epoch 10: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1153.5983486175537s
epoch 15: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1121.6773931980133s
epoch 20: train_loss: 0.69315; Allocated: 3842560; Reserved: 35651584; time used = 1128.9227087497711s
epoch 25: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1134.4048688411713s
epoch 30: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1147.9688122272491s
epoch 35: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1130.953983783722s
epoch 40: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1123.4158239364624s
epoch 45: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1139.360270023346s
epoch 50: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1119.8418290615082s
epoch 55: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1122.3799633979797s
epoch 60: train_loss: 0.69315; Allocated: 3842560; Reserved: 29360128; time used = 1119.914845943451s
epoch 65: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1118.7533905506134s
epoch 70: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1120.09161734581s
epoch 75: train_loss: 0.69315; Allocated: 3842560; Reserved: 35651584; time used = 1121.7314302921295s
epoch 80: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1130.290516614914s
epoch 85: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1154.1749911308289s
epoch 90: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1164.6254251003265s
epoch 95: train_loss: 0.69315; Allocated: 3842560; Reserved: 35651584; time used = 1142.4539725780487s
epoch 100: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1143.3715767860413s
epoch 105: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1185.4032754898071s
epoch 110: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1193.9537551403046s
epoch 115: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1196.214363336563s
epoch 120: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1159.3292393684387s
epoch 125: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1198.3082025051117s
epoch 130: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1175.1550858020782s
epoch 135: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1151.1179022789001s
epoch 140: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1152.2370953559875s
epoch 145: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1151.347404241562s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33256.7646420002.
Training classifier using 80.00% nodes...

{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fdcb21b0780>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69323; Allocated: 57617408; Reserved: 297795584; time used = 2.4650368690490723s
epoch 10: train_loss: 0.69246; Allocated: 57617408; Reserved: 297795584; time used = 2.4816040992736816s
epoch 15: train_loss: 0.69312; Allocated: 57617408; Reserved: 297795584; time used = 2.526057004928589s
epoch 20: train_loss: 0.69288; Allocated: 57617408; Reserved: 297795584; time used = 2.5837388038635254s
epoch 25: train_loss: 0.69240; Allocated: 57617408; Reserved: 297795584; time used = 2.5165603160858154s
epoch 30: train_loss: 0.69256; Allocated: 57617408; Reserved: 297795584; time used = 2.539010763168335s
epoch 35: train_loss: 0.69029; Allocated: 57617408; Reserved: 297795584; time used = 2.5463595390319824s
epoch 40: train_loss: 0.69083; Allocated: 57617408; Reserved: 297795584; time used = 2.5117571353912354s
epoch 45: train_loss: 0.69439; Allocated: 57617408; Reserved: 297795584; time used = 2.557335615158081s
epoch 50: train_loss: 0.69276; Allocated: 57617408; Reserved: 297795584; time used = 2.54072904586792s
epoch 55: train_loss: 0.69338; Allocated: 57617408; Reserved: 297795584; time used = 2.530043125152588s
epoch 60: train_loss: 0.69349; Allocated: 57617408; Reserved: 297795584; time used = 2.538731336593628s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42.464255809783936.
Training classifier using 20.00% nodes...
{'micro': 0.19442379182156136, 'macro': 0.05473574045002617, 'samples': 0.19646882043576258, 'weighted': 0.06486433290490261, 'accuracy': 0.19646882043576258}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe11be51dc0>
total iter: 500
epoch 5: train_loss: 1.41332; Allocated: 705024; Reserved: 8388608; time used = 4.231291055679321s
epoch 10: train_loss: 1.33093; Allocated: 705024; Reserved: 8388608; time used = 4.214354515075684s
epoch 15: train_loss: 1.37237; Allocated: 705024; Reserved: 8388608; time used = 4.328155040740967s
epoch 20: train_loss: 1.33406; Allocated: 705024; Reserved: 8388608; time used = 4.210973501205444s
epoch 25: train_loss: 1.31852; Allocated: 705024; Reserved: 8388608; time used = 4.243739366531372s
epoch 30: train_loss: 1.31711; Allocated: 705024; Reserved: 8388608; time used = 4.381374835968018s
epoch 35: train_loss: 1.28622; Allocated: 705024; Reserved: 8388608; time used = 4.196804523468018s
epoch 40: train_loss: 1.30697; Allocated: 705024; Reserved: 8388608; time used = 4.221935510635376s
epoch 45: train_loss: 1.32226; Allocated: 705024; Reserved: 8388608; time used = 4.197365760803223s
epoch 50: train_loss: 1.30253; Allocated: 705024; Reserved: 8388608; time used = 4.366240739822388s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 48.70921540260315.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2740.12it/s] 80%|███████▉  | 1599/2000 [00:00<00:00, 3522.41it/s]100%|██████████| 2000/2000 [00:00<00:00, 5967.46it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd48aefa280>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.87723588943481s
epoch 10: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.9648540019989s
epoch 15: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.56383872032166s
epoch 20: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.25201320648193s
epoch 25: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.16452074050903s
epoch 30: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.3805480003357s
epoch 35: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.48209309577942s
epoch 40: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.72898364067078s
epoch 45: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.20942711830139s
epoch 50: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.76689195632935s
epoch 55: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.7146532535553s
epoch 60: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.76895952224731s
epoch 65: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.0228157043457s
epoch 70: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.32770133018494s
epoch 75: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.2549078464508s
epoch 80: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 76.49522733688354s
epoch 85: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.71393990516663s
epoch 90: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.53387093544006s
epoch 95: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 76.16845178604126s
epoch 100: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 76.6447343826294s
epoch 105: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.58577394485474s
epoch 110: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.97043538093567s
epoch 115: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 77.19331932067871s
epoch 120: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.61577534675598s
epoch 125: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.79970026016235s
epoch 130: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.95870614051819s
epoch 135: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.66319394111633s
epoch 140: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 76.34383916854858s
epoch 145: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.11999773979187s
epoch 150: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.44880080223083s
epoch 155: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.27801251411438s
epoch 160: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.66086912155151s
epoch 165: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.38668704032898s
epoch 170: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.23901653289795s
epoch 175: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.34476852416992s
epoch 180: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.7855908870697s
epoch 185: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.09797716140747s
epoch 190: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.39813995361328s
epoch 195: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.51138949394226s
epoch 200: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.92918300628662s
epoch 205: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.77280783653259s
epoch 210: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.92461514472961s
epoch 215: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.03073811531067s
epoch 220: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.45682287216187s
epoch 225: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.27250647544861s
epoch 230: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.2276120185852s
epoch 235: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.94971990585327s
epoch 240: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.0254294872284s
epoch 245: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.13864183425903s
epoch 250: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.11770629882812s
epoch 255: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.2613832950592s
epoch 260: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.43747639656067s
epoch 265: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.99103474617004s
epoch 270: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.99943590164185s
epoch 275: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.46308994293213s
epoch 280: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.0356695652008s
epoch 285: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.39421772956848s
epoch 290: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 76.18550777435303s
epoch 295: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.81141400337219s
epoch 300: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.51670694351196s
epoch 305: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.04600763320923s
epoch 310: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.64864897727966s
epoch 315: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.61157774925232s
epoch 320: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.03811144828796s
epoch 325: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.29113602638245s
epoch 330: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.0690176486969s
epoch 335: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.11917018890381s
epoch 340: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.05120587348938s
epoch 345: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.16995096206665s
epoch 350: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 76.4739875793457s
epoch 355: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.81578493118286s
epoch 360: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.80601382255554s
epoch 365: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.8764591217041s
epoch 370: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.11109447479248s
epoch 375: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.5396375656128s
epoch 380: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.22239232063293s
epoch 385: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.52752208709717s
epoch 390: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.57764148712158s
epoch 395: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.52438855171204s
epoch 400: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.99557590484619s
epoch 405: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.29075241088867s
epoch 410: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.45884013175964s
epoch 415: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.9612283706665s
epoch 420: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.76267170906067s
epoch 425: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.97758865356445s
epoch 430: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.43725442886353s
epoch 435: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.14196300506592s
epoch 440: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.66938257217407s
epoch 445: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.51629686355591s
epoch 450: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.86493110656738s
epoch 455: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.91913509368896s
epoch 460: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 75.20762372016907s
epoch 465: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.78231430053711s
epoch 470: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.35430765151978s
epoch 475: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 73.40905904769897s
epoch 480: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.99519944190979s
epoch 485: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 72.51690196990967s
epoch 490: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.10109233856201s
epoch 495: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.51484060287476s
epoch 500: train_loss: 0.69315; Allocated: 4050432; Reserved: 31457280; time used = 74.87090992927551s
Finished training. Time used = 7467.527951955795.
Training classifier using 80.00% nodes...

{'micro': 0.6225, 'macro': 0.5786800968198718, 'samples': 0.6225, 'weighted': 0.5746038267566039, 'accuracy': 0.6225}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2211.54it/s]100%|██████████| 1500/1500 [00:00<00:00, 4538.93it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4a4ac16550>
total iter: 500
epoch 5: train_loss: 1.48467; Allocated: 418304; Reserved: 4194304; time used = 11.862395524978638s
epoch 10: train_loss: 1.41952; Allocated: 418304; Reserved: 6291456; time used = 11.883234977722168s
epoch 15: train_loss: 1.39854; Allocated: 418304; Reserved: 6291456; time used = 11.82699465751648s
epoch 20: train_loss: 1.39127; Allocated: 418304; Reserved: 6291456; time used = 12.00451374053955s
epoch 25: train_loss: 1.38807; Allocated: 418304; Reserved: 6291456; time used = 11.828394651412964s
epoch 30: train_loss: 1.38760; Allocated: 418304; Reserved: 4194304; time used = 11.942878484725952s
epoch 35: train_loss: 1.38720; Allocated: 418304; Reserved: 4194304; time used = 11.718289852142334s
epoch 40: train_loss: 1.38685; Allocated: 418304; Reserved: 6291456; time used = 11.9306800365448s
epoch 45: train_loss: 1.38658; Allocated: 418304; Reserved: 6291456; time used = 11.96146845817566s
epoch 50: train_loss: 1.38644; Allocated: 418304; Reserved: 6291456; time used = 11.83194899559021s
epoch 55: train_loss: 1.38637; Allocated: 418304; Reserved: 6291456; time used = 11.674777269363403s
epoch 60: train_loss: 1.38634; Allocated: 418304; Reserved: 6291456; time used = 11.815178632736206s
epoch 65: train_loss: 1.38632; Allocated: 418304; Reserved: 6291456; time used = 11.91054916381836s
epoch 70: train_loss: 1.38632; Allocated: 418304; Reserved: 4194304; time used = 11.976921558380127s
epoch 75: train_loss: 1.38631; Allocated: 418304; Reserved: 6291456; time used = 11.792184352874756s
epoch 80: train_loss: 1.38631; Allocated: 418304; Reserved: 4194304; time used = 11.894775390625s
epoch 85: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 11.881258487701416s
epoch 90: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.930487155914307s
epoch 95: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.772241115570068s
epoch 100: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.989345073699951s
epoch 105: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.9511399269104s
epoch 110: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.886991739273071s
epoch 115: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.692785501480103s
epoch 120: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.874661445617676s
epoch 125: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.012227058410645s
epoch 130: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.966512203216553s
epoch 135: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 11.766706943511963s
epoch 140: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 11.887753009796143s
epoch 145: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.897562265396118s
epoch 150: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.838396072387695s
epoch 155: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.755039691925049s
epoch 160: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.91802191734314s
epoch 165: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.763067483901978s
epoch 170: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 11.727375030517578s
epoch 175: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.756533145904541s
epoch 180: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.838138341903687s
epoch 185: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.851329565048218s
epoch 190: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.728369235992432s
epoch 195: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.958934545516968s
epoch 200: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.928295850753784s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 480.2697696685791.
Training classifier using 80.00% nodes...

{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f34c83eb370>
total iter: 500
epoch 5: train_loss: 1.32361; Allocated: 40826880; Reserved: 62914560; time used = 3.8053395748138428s
epoch 10: train_loss: 1.22949; Allocated: 40826880; Reserved: 62914560; time used = 3.6031885147094727s
epoch 15: train_loss: 1.12994; Allocated: 40826880; Reserved: 62914560; time used = 3.5056300163269043s
epoch 20: train_loss: 1.14128; Allocated: 40826880; Reserved: 62914560; time used = 3.7884812355041504s
epoch 25: train_loss: 1.13991; Allocated: 40826880; Reserved: 62914560; time used = 3.5439133644104004s
epoch 30: train_loss: 1.07601; Allocated: 40826880; Reserved: 65011712; time used = 3.6210713386535645s
epoch 35: train_loss: 1.08991; Allocated: 40826880; Reserved: 62914560; time used = 3.7784972190856934s
epoch 40: train_loss: 1.11079; Allocated: 40826880; Reserved: 62914560; time used = 3.5628774166107178s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.459006547927856.
Training classifier using 20.00% nodes...
{'micro': 0.7332952960568023, 'macro': 0.7400605864409546, 'samples': 0.7332952960568023, 'weighted': 0.7323317774255989, 'accuracy': 0.7332952960568023}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f86e17ec0f0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2842.29it/s] 79%|███████▉  | 1584/2000 [00:00<00:00, 3634.97it/s]100%|██████████| 2000/2000 [00:00<00:00, 6067.43it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f07f700c140>
total iter: 500
epoch 5: train_loss: 23887.79793; Allocated: 3923456; Reserved: 29360128; time used = 928.3025205135345s
epoch 10: train_loss: 28221.88171; Allocated: 3923456; Reserved: 29360128; time used = 940.6857953071594s
epoch 15: train_loss: 40313.53755; Allocated: 3923456; Reserved: 29360128; time used = 932.0542073249817s
epoch 20: train_loss: 13964.35103; Allocated: 3923456; Reserved: 29360128; time used = 931.8440589904785s
epoch 25: train_loss: 4614.30530; Allocated: 3923456; Reserved: 29360128; time used = 973.485066652298s
epoch 30: train_loss: 10455.56576; Allocated: 3923456; Reserved: 29360128; time used = 942.9182159900665s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5653.160794019699.
Training classifier using 80.00% nodes...

{'micro': 0.6425, 'macro': 0.6024216138068131, 'samples': 0.6425, 'weighted': 0.598634679678323, 'accuracy': 0.6425}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb000113050>
total iter: 500
epoch 5: train_loss: 1.57165; Allocated: 848896; Reserved: 6291456; time used = 4.939151287078857s
epoch 10: train_loss: 1.39094; Allocated: 848896; Reserved: 6291456; time used = 4.757098436355591s
epoch 15: train_loss: 1.36263; Allocated: 848896; Reserved: 6291456; time used = 4.786780834197998s
epoch 20: train_loss: 1.27947; Allocated: 848896; Reserved: 6291456; time used = 4.839094161987305s
epoch 25: train_loss: 1.22821; Allocated: 848896; Reserved: 6291456; time used = 4.631392955780029s
epoch 30: train_loss: 1.20789; Allocated: 848896; Reserved: 6291456; time used = 4.796250581741333s
epoch 35: train_loss: 1.25149; Allocated: 848896; Reserved: 8388608; time used = 4.811042070388794s
epoch 40: train_loss: 1.21267; Allocated: 848896; Reserved: 8388608; time used = 4.625932693481445s
epoch 45: train_loss: 1.19004; Allocated: 848896; Reserved: 6291456; time used = 4.778321981430054s
epoch 50: train_loss: 1.24529; Allocated: 848896; Reserved: 8388608; time used = 4.7543323040008545s
epoch 55: train_loss: 1.17926; Allocated: 848896; Reserved: 6291456; time used = 4.647680759429932s
epoch 60: train_loss: 1.16799; Allocated: 848896; Reserved: 8388608; time used = 4.806591272354126s
epoch 65: train_loss: 1.21957; Allocated: 848896; Reserved: 6291456; time used = 4.6649580001831055s
epoch 70: train_loss: 1.18290; Allocated: 848896; Reserved: 8388608; time used = 4.7808921337127686s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 71.07838129997253.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4866071428571428, 'samples': 0.5652173913043478, 'weighted': 0.5011645962732919, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2279.69it/s] 80%|████████  | 1607/2000 [00:00<00:00, 2982.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 5340.98it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2624.00it/s]100%|██████████| 1500/1500 [00:00<00:00, 5137.66it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f5d0b669050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2121.00it/s]100%|██████████| 1500/1500 [00:00<00:00, 4399.67it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd1bd4fed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2606.17it/s] 78%|███████▊  | 1553/2000 [00:00<00:00, 3352.31it/s]100%|██████████| 2000/2000 [00:00<00:00, 5709.32it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4e59692280>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2822.46it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3623.86it/s]100%|██████████| 2000/2000 [00:00<00:00, 6097.17it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f73fdf32280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2315.96it/s]100%|██████████| 1000/1000 [00:00<00:00, 3630.88it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f833694c3c0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7faae6077c80>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fcb61d11f00>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2646.64it/s]100%|██████████| 1000/1000 [00:00<00:00, 4067.51it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5ce97f4c30>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2767.92it/s] 79%|███████▊  | 1572/2000 [00:00<00:00, 3545.14it/s]100%|██████████| 2000/2000 [00:00<00:00, 5931.40it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f27f9ce3280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2597.27it/s]100%|██████████| 1000/1000 [00:00<00:00, 4005.36it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa0a1240410>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2732.68it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 3511.21it/s]100%|██████████| 2000/2000 [00:00<00:00, 5919.84it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f57cbfd3280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2777.41it/s]100%|██████████| 1500/1500 [00:00<00:00, 5366.01it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa2c83fb050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0c843cf730>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc958099550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f1d58ae18c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8967a06d70>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f488be08190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2708.58it/s]100%|██████████| 1500/1500 [00:00<00:00, 5260.93it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd18bdd5050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f58c95cfb90>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f196c7f12d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f30b0fb2dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1a3e41dcd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2346.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 4755.47it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9ec7141d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f190e082640>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f26b7517910>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fd0f1728320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f63519c4730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2773.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4225.83it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f000be3d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f33d3c642d0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f10277ef140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f43c179f0f0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2629.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4045.11it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f29c82f8050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2631.49it/s] 80%|████████  | 1606/2000 [00:00<00:00, 3398.69it/s]100%|██████████| 2000/2000 [00:00<00:00, 5824.39it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f66ce2e3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fd8d7269280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7ff312e13730>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f52c8a136e0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2660.40it/s]100%|██████████| 1000/1000 [00:00<00:00, 4078.61it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe6d17f0370>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2191.68it/s]100%|██████████| 1000/1000 [00:00<00:00, 3458.92it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe22d3bd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1e2ffe7fa0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2808.88it/s]100%|██████████| 1500/1500 [00:00<00:00, 5352.03it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7faeec8c1050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5b919a00f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2511.55it/s]100%|██████████| 1000/1000 [00:00<00:00, 3883.18it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2560bc6370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f8ce7cfd5f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2725.22it/s]100%|██████████| 1000/1000 [00:00<00:00, 4168.70it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa9cc339050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2333.30it/s] 81%|████████  | 1618/2000 [00:00<00:00, 3049.57it/s]100%|██████████| 2000/2000 [00:00<00:00, 5439.68it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fca2ffd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2878.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 5485.90it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f66f5c60460>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2811.65it/s]100%|██████████| 1500/1500 [00:00<00:00, 5403.40it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9252830050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff1acd5d230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2686.53it/s]100%|██████████| 1500/1500 [00:00<00:00, 5207.81it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fbb3f4d14b0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fde7f4a4370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fdc20e200a0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f143aac2190>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f58d1417640>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2bbf060d70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2807.78it/s] 81%|████████▏ | 1625/2000 [00:00<00:00, 3609.24it/s]100%|██████████| 2000/2000 [00:00<00:00, 6099.11it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa883fd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2653.87it/s] 79%|███████▊  | 1573/2000 [00:00<00:00, 3414.12it/s]100%|██████████| 2000/2000 [00:00<00:00, 5794.24it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ffa42978280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7feccce9b280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fa50e8ff2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f8c6b961190>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2908.69it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3722.97it/s]100%|██████████| 2000/2000 [00:00<00:00, 6221.31it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2cde29b280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2920.52it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3733.12it/s]100%|██████████| 2000/2000 [00:00<00:00, 6218.47it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f73a0da2140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2699.59it/s]100%|██████████| 1000/1000 [00:00<00:00, 4137.11it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2e26cbd050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2757.90it/s] 80%|████████  | 1603/2000 [00:00<00:00, 3544.31it/s]100%|██████████| 2000/2000 [00:00<00:00, 5994.89it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8a03f13280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2289.29it/s]100%|██████████| 1000/1000 [00:00<00:00, 3600.71it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff6d8ffe0f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f9abc648370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc95f5dde10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2780.00it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3571.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 6032.48it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5ea9dd01e0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f259267bcd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2d06cefd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8f23c70050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2761.95it/s]100%|██████████| 1000/1000 [00:00<00:00, 4222.55it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0c2263c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f6961f5ddc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff08e62c050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f739ac91d70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2743.47it/s]100%|██████████| 1500/1500 [00:00<00:00, 5306.43it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fcd76058050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2732.04it/s]100%|██████████| 1500/1500 [00:00<00:00, 5311.48it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f57b3ba43c0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2292.80it/s]100%|██████████| 1000/1000 [00:00<00:00, 3600.95it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f107d63c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2636.14it/s]100%|██████████| 1000/1000 [00:00<00:00, 4052.29it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0a58779050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2766.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 5343.64it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1f0671ffa0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2842.00it/s]100%|██████████| 1500/1500 [00:00<00:00, 5465.20it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9cadf40050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2827.72it/s]100%|██████████| 1000/1000 [00:00<00:00, 4298.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f286de38460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa3094a82d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2705.64it/s]100%|██████████| 1000/1000 [00:00<00:00, 4131.29it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1fd1991320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2723.83it/s]100%|██████████| 1500/1500 [00:00<00:00, 5283.23it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6d2c4f1050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f819ac20cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2750.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 5304.60it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff6925a1d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2718.29it/s]100%|██████████| 2000/2000 [00:00<00:00, 6746.12it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe7d9a2dd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2747.50it/s] 80%|███████▉  | 1590/2000 [00:00<00:00, 3528.07it/s]100%|██████████| 2000/2000 [00:00<00:00, 5938.09it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc8d4d9a230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4298ef5cd0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f27af84e370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2656.31it/s]100%|██████████| 1000/1000 [00:00<00:00, 4063.15it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdb8af2b500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f337addd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff9b1fcd230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2716.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 4148.27it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f30e6d7c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8a1ca63c80>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 1957.74it/s]100%|██████████| 1000/1000 [00:00<00:00, 3144.95it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe7638fc050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f46b3e29140>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2054.28it/s]100%|██████████| 1000/1000 [00:00<00:00, 3273.66it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3a35e3d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2120.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 4381.51it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8a8421b370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7ff9e48220f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f02fddb0730>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 1807.03it/s] 80%|███████▉  | 1593/2000 [00:00<00:00, 2404.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 4551.16it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3cd5a77280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff08756cdc0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f33a5227d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fabf455c410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2062.49it/s]100%|██████████| 1000/1000 [00:00<00:00, 3289.84it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0dcda3c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2204.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 3475.93it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd9349ba050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2082.51it/s] 79%|███████▉  | 1580/2000 [00:00<00:00, 2739.18it/s]100%|██████████| 2000/2000 [00:00<00:00, 5001.42it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f95311f90a0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2617.66it/s] 79%|███████▉  | 1589/2000 [00:00<00:00, 3377.08it/s]100%|██████████| 2000/2000 [00:00<00:00, 5779.75it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f56f6c8c280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f6b85183730>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2084.13it/s]100%|██████████| 1500/1500 [00:00<00:00, 4330.37it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f34402f9050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fdce69fb2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe0cfba4c30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd078d811e0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f6a96182140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f681794d3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2424.19it/s]100%|██████████| 1000/1000 [00:00<00:00, 3772.69it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f68557d2460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f3edd323320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fa6070fa2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb38890ed20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2252.11it/s] 77%|███████▋  | 1537/2000 [00:00<00:00, 2932.26it/s]100%|██████████| 2000/2000 [00:00<00:00, 5160.99it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f783b743230>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc2cc9c93c0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2fb0c46050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2288.69it/s] 79%|███████▉  | 1587/2000 [00:00<00:00, 2988.70it/s]100%|██████████| 2000/2000 [00:00<00:00, 5318.57it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb44dd3f230>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f49609e4640>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8795873b90>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2714.01it/s]100%|██████████| 1000/1000 [00:00<00:00, 4157.02it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f46f4c3a1e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2228.48it/s]100%|██████████| 1500/1500 [00:00<00:00, 4571.00it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f87f495d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7c035cf370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff4bde70dc0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2755.83it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3544.96it/s]100%|██████████| 2000/2000 [00:00<00:00, 6009.04it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f71a3fd30f0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2785.59it/s] 80%|███████▉  | 1595/2000 [00:00<00:00, 3573.41it/s]100%|██████████| 2000/2000 [00:00<00:00, 6005.33it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4ebe777230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3e3fb9c320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2619.04it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 3379.45it/s]100%|██████████| 2000/2000 [00:00<00:00, 5795.53it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f737e76d140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2759.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 5353.14it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1237592050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2717.93it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 3494.13it/s]100%|██████████| 2000/2000 [00:00<00:00, 5914.93it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa0914add70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f598faac190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1db630ec30>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2662.64it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3436.10it/s]100%|██████████| 2000/2000 [00:00<00:00, 5884.50it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc353aadd70>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2772.42it/s] 81%|████████  | 1620/2000 [00:00<00:00, 3567.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 6053.92it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5de9442230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f63718f28c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2735.35it/s]100%|██████████| 1500/1500 [00:00<00:00, 5281.35it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f468b9f4050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa265ed2cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2689.55it/s]100%|██████████| 1000/1000 [00:00<00:00, 4118.79it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0e65efd050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f701819ed20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2851.62it/s]100%|██████████| 1500/1500 [00:00<00:00, 5467.62it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f51a1dc7050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f9b6e9b1320>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fbe0e247230>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2703.84it/s]100%|██████████| 1500/1500 [00:00<00:00, 5244.44it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7644b27050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff897d90d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f84f18f5e60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f955ca38140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2642.13it/s] 80%|████████  | 1603/2000 [00:00<00:00, 3409.73it/s]100%|██████████| 2000/2000 [00:00<00:00, 5835.21it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fef15d3c280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4e1b574e10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3fb6496cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2738.50it/s] 80%|████████  | 1600/2000 [00:00<00:00, 3521.05it/s]100%|██████████| 2000/2000 [00:00<00:00, 5962.71it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa7a926d280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2316.22it/s]100%|██████████| 1500/1500 [00:00<00:00, 4679.95it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4dc95f5050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f71fd488c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2678.58it/s]100%|██████████| 1000/1000 [00:00<00:00, 4100.57it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8c62f3d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2709.30it/s]100%|██████████| 1000/1000 [00:00<00:00, 4139.56it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd137e0d5a0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f3db024c550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2655.27it/s]100%|██████████| 1000/1000 [00:00<00:00, 4065.65it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb3d4f9b320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fccaa9ca4b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2786.00it/s]100%|██████████| 1500/1500 [00:00<00:00, 5381.66it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa0c5eec370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2637.67it/s]100%|██████████| 1000/1000 [00:00<00:00, 4068.61it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f400c679050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2289.35it/s]100%|██████████| 1000/1000 [00:00<00:00, 3587.34it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f20bf5c54b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1d244ac410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2749.48it/s]100%|██████████| 1500/1500 [00:00<00:00, 5333.93it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3173bae050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f242093c4b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2634.28it/s]100%|██████████| 1000/1000 [00:00<00:00, 4026.92it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc1d63f4410>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2275.13it/s]100%|██████████| 1500/1500 [00:00<00:00, 4619.12it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f069737f050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f30c4d3fd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f8451e69730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2343.46it/s]100%|██████████| 1000/1000 [00:00<00:00, 3680.35it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd37b67d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8da1f26e60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2673.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 4112.36it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb6aca7b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fa97dae8410>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f21aaefc370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2719.82it/s]100%|██████████| 1500/1500 [00:00<00:00, 5275.23it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9adf59a050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2289.30it/s]100%|██████████| 1500/1500 [00:00<00:00, 4659.52it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fc1c61b0050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb8f0963280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2736.10it/s]100%|██████████| 1000/1000 [00:00<00:00, 4182.32it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fbdbcd2c230>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2672.30it/s]100%|██████████| 1500/1500 [00:00<00:00, 5193.73it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6d650ab050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2281.05it/s]100%|██████████| 1500/1500 [00:00<00:00, 4649.16it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9fe67dd050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe92dec3d70>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2737.74it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3523.34it/s]100%|██████████| 2000/2000 [00:00<00:00, 5978.75it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1e1e6a7280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2269.47it/s]100%|██████████| 1500/1500 [00:00<00:00, 4603.93it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f05e7cf8050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f26384a1780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2717.88it/s]100%|██████████| 1000/1000 [00:00<00:00, 4153.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f05659d5190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6ad7433cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f09a1d0dfa0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7faf8a7bb050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2711.82it/s]100%|██████████| 1500/1500 [00:00<00:00, 5261.16it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7feb24b22050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6d6527bdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f4c0cfaf410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8cb9c77280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f03e78f7c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2764.62it/s] 80%|███████▉  | 1594/2000 [00:00<00:00, 3549.12it/s]100%|██████████| 2000/2000 [00:00<00:00, 5983.88it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb4bfbfc280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2254.80it/s] 80%|████████  | 1604/2000 [00:00<00:00, 2951.90it/s]100%|██████████| 2000/2000 [00:00<00:00, 5291.02it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5e9e4bb280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2760.16it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3546.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 5991.40it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8087b6ed70>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f0b6c11de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd519b6be60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7ff11df80fa0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2764.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 5342.79it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0803137050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2762.03it/s]100%|██████████| 1000/1000 [00:00<00:00, 4218.54it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc9269bd050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2287.83it/s]100%|██████████| 1000/1000 [00:00<00:00, 3590.41it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc5514c0320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2780.79it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3573.17it/s]100%|██████████| 2000/2000 [00:00<00:00, 6034.81it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efc49d55280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2317.32it/s]100%|██████████| 1000/1000 [00:00<00:00, 3625.63it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f4e0acfa550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f45a69dabe0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4718f3ae10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2760.19it/s]100%|██████████| 1000/1000 [00:00<00:00, 4208.56it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd9da6fb3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9b894dee10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2312.61it/s]100%|██████████| 1500/1500 [00:00<00:00, 4726.33it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4d3bc9b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3f9b413d70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fcaa5ea6cd0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7efc6f1c12d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2834.09it/s] 81%|████████  | 1614/2000 [00:00<00:00, 3636.02it/s]100%|██████████| 2000/2000 [00:00<00:00, 6105.25it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6407147280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3c984b4230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f72da7d01e0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2737.94it/s]100%|██████████| 1000/1000 [00:00<00:00, 4184.42it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7160f3b050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2726.26it/s]100%|██████████| 1000/1000 [00:00<00:00, 4169.01it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb617ebd050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2705.63it/s]100%|██████████| 1000/1000 [00:00<00:00, 4151.21it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f05aeb2c3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd0a3298dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f3072cd86e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8dd779f050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1ccb165d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2738.70it/s]100%|██████████| 1000/1000 [00:00<00:00, 4181.90it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fed8a8374b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc48a7f5320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2238.97it/s] 80%|████████  | 1601/2000 [00:00<00:00, 2932.51it/s]100%|██████████| 2000/2000 [00:00<00:00, 5268.18it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f488d3d6280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2851.01it/s] 81%|████████  | 1619/2000 [00:00<00:00, 3657.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 6148.89it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f7d4f0630f0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f1d41c52410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5e9aca3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2598.60it/s]100%|██████████| 1000/1000 [00:00<00:00, 4002.18it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fac4861ac80>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f488206fdc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc2b57c63c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f130795e280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f71c2a9a370>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f90489f98c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0f69b71690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2579.42it/s] 80%|███████▉  | 1597/2000 [00:00<00:00, 3334.87it/s]100%|██████████| 2000/2000 [00:00<00:00, 5742.61it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd471642280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2461.93it/s] 79%|███████▉  | 1584/2000 [00:00<00:00, 3192.99it/s]100%|██████████| 2000/2000 [00:00<00:00, 5559.31it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efe6cfd7140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f9211bb4370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f983f49d370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f039cd8ad20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fb2429d5730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f870d4dc820>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2773.17it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3561.29it/s]100%|██████████| 2000/2000 [00:00<00:00, 6010.20it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1335d47280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f2ec644e460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2338.33it/s]100%|██████████| 1000/1000 [00:00<00:00, 3661.19it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff644a5bd20>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2324.28it/s]100%|██████████| 1000/1000 [00:00<00:00, 3649.15it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f20ccffb050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f7fd8fe1730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2da5fa7050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff9ac2e9d70>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2746.42it/s]100%|██████████| 1000/1000 [00:00<00:00, 4195.21it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6c1e6fd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2738.52it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3524.69it/s]100%|██████████| 2000/2000 [00:00<00:00, 5984.35it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fbc6d50d280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2337.14it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3051.90it/s]100%|██████████| 2000/2000 [00:00<00:00, 5422.21it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2a5f32f280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1977264280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2780.79it/s]100%|██████████| 1000/1000 [00:00<00:00, 4232.55it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f766c3b9050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fa8180e61e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9c69a6f050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2739.61it/s]100%|██████████| 1500/1500 [00:00<00:00, 5292.25it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6d39d10320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fbce70ad690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7effef2a1d20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2795.63it/s] 81%|████████  | 1618/2000 [00:00<00:00, 3593.05it/s]100%|██████████| 2000/2000 [00:00<00:00, 6077.51it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff751b50280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2d5aa57c30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f916969b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f2bd439d190>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f7679af6780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f23bd04feb0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f8643163460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1a6055bdc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7efc3a713690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2827.56it/s]100%|██████████| 1500/1500 [00:00<00:00, 5420.53it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7d25e01410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2590.47it/s]100%|██████████| 1000/1000 [00:00<00:00, 3992.98it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe89d2fd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb322628e10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2718.27it/s]100%|██████████| 1500/1500 [00:00<00:00, 5293.22it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7301e27410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe8a648bd20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2826.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 5419.17it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fcb499c7050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fcd2d5383c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2774.32it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3564.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 6018.81it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    """
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    @param e_anchor:
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    self.anchor = self.graphs  # densere aut non densere, illa quaestio
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f22e70d7280>
head 0
head 0
total iter: 500
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
slurmstepd: error: Detected 2 oom-kill event(s) in step 2967.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.
